landley/toybox,https://github.com/landley/toybox,26,2016-03-03T18:53:38Z,2020-08-04T20:36:29Z,2020-08-04T20:36:56Z,CLOSED,False,1,0,1,https://github.com/dimkr,Fix ip build failure against musl,1,[],https://github.com/landley/toybox/pull/26,https://github.com/dimkr,1,https://github.com/landley/toybox/pull/26,Signed-off-by: Dima Krasner dima@dimakrasner.com,Signed-off-by: Dima Krasner dima@dimakrasner.com,True,{}
landley/toybox,https://github.com/landley/toybox,26,2016-03-03T18:53:38Z,2020-08-04T20:36:29Z,2020-08-04T20:36:56Z,CLOSED,False,1,0,1,https://github.com/dimkr,Fix ip build failure against musl,1,[],https://github.com/landley/toybox/pull/26,https://github.com/enh-google,2,https://github.com/landley/toybox/pull/26#issuecomment-668812734,Signed-off-by: Dima Krasner dima@dimakrasner.com,"(i'm assuming this is fixed, since rob builds against musl.)",True,{}
landley/toybox,https://github.com/landley/toybox,28,2016-03-31T00:00:48Z,2016-04-13T20:03:23Z,2016-04-13T20:03:23Z,CLOSED,False,7,15,6,https://github.com/emaste,Rename basename_r to basename_readonly to avoid Bionic and FreeBSD conflict,2,[],https://github.com/landley/toybox/pull/28,https://github.com/emaste,1,https://github.com/landley/toybox/pull/28,"As suggested in the ""FreeBSD porting, removing bashisms"" thread.","As suggested in the ""FreeBSD porting, removing bashisms"" thread.",True,{}
landley/toybox,https://github.com/landley/toybox,28,2016-03-31T00:00:48Z,2016-04-13T20:03:23Z,2016-04-13T20:03:23Z,CLOSED,False,7,15,6,https://github.com/emaste,Rename basename_r to basename_readonly to avoid Bionic and FreeBSD conflict,2,[],https://github.com/landley/toybox/pull/28,https://github.com/emaste,2,https://github.com/landley/toybox/pull/28#issuecomment-209623506,"As suggested in the ""FreeBSD porting, removing bashisms"" thread.",superseded by 1c028ca,True,{}
landley/toybox,https://github.com/landley/toybox,30,2016-04-08T19:09:01Z,2016-04-10T17:01:12Z,2016-04-10T17:01:12Z,CLOSED,False,7,14,1,https://github.com/tdm,toybox: find: Fix segfault when using -iname/-ipath with -exec,1,[],https://github.com/landley/toybox/pull/30,https://github.com/tdm,1,https://github.com/landley/toybox/pull/30,"iname/ipath use the argdata list to store names (type char_) on the initial
argument parsing pass and then use these on subsequent passes with entries
returned from dirtree_flagread.  exec/execdir also use the argdata list to
store its arguments (type struct exec_range_).  Thus, it is imperative that
each value pushed onto the list be popped in exactly the same order.
Failure to do this results in pointers from the list being cast to an
incorrect type and segfaults ensue.
During subsequent passes when using an ""or"" predicate, the current code in
iname/ipath fails to pop the same values that it pushed when the LHS
evaluates to true.  This is because the ""or"" code sets active==0 which then
sets check==0 when evaluating the RHS, and the RHS name is not popped.
Subsequent usage of ""exec"" will try to pop this value as an argument list
and segfault.
This could be fixed by making usage of argdata consistent in iname/ipath.
However, it does not appear necessary to use argdata at all.  So remove
it.  This avoids the segfault and also avoids unnecessary heap allocs.
Change-Id: Icb171b90a60bc6cf5629f87ed5966b4d26e22b28","iname/ipath use the argdata list to store names (type char_) on the initial
argument parsing pass and then use these on subsequent passes with entries
returned from dirtree_flagread.  exec/execdir also use the argdata list to
store its arguments (type struct exec_range_).  Thus, it is imperative that
each value pushed onto the list be popped in exactly the same order.
Failure to do this results in pointers from the list being cast to an
incorrect type and segfaults ensue.
During subsequent passes when using an ""or"" predicate, the current code in
iname/ipath fails to pop the same values that it pushed when the LHS
evaluates to true.  This is because the ""or"" code sets active==0 which then
sets check==0 when evaluating the RHS, and the RHS name is not popped.
Subsequent usage of ""exec"" will try to pop this value as an argument list
and segfault.
This could be fixed by making usage of argdata consistent in iname/ipath.
However, it does not appear necessary to use argdata at all.  So remove
it.  This avoids the segfault and also avoids unnecessary heap allocs.
Change-Id: Icb171b90a60bc6cf5629f87ed5966b4d26e22b28",True,{}
landley/toybox,https://github.com/landley/toybox,30,2016-04-08T19:09:01Z,2016-04-10T17:01:12Z,2016-04-10T17:01:12Z,CLOSED,False,7,14,1,https://github.com/tdm,toybox: find: Fix segfault when using -iname/-ipath with -exec,1,[],https://github.com/landley/toybox/pull/30,https://github.com/tdm,2,https://github.com/landley/toybox/pull/30#issuecomment-208015682,"iname/ipath use the argdata list to store names (type char_) on the initial
argument parsing pass and then use these on subsequent passes with entries
returned from dirtree_flagread.  exec/execdir also use the argdata list to
store its arguments (type struct exec_range_).  Thus, it is imperative that
each value pushed onto the list be popped in exactly the same order.
Failure to do this results in pointers from the list being cast to an
incorrect type and segfaults ensue.
During subsequent passes when using an ""or"" predicate, the current code in
iname/ipath fails to pop the same values that it pushed when the LHS
evaluates to true.  This is because the ""or"" code sets active==0 which then
sets check==0 when evaluating the RHS, and the RHS name is not popped.
Subsequent usage of ""exec"" will try to pop this value as an argument list
and segfault.
This could be fixed by making usage of argdata consistent in iname/ipath.
However, it does not appear necessary to use argdata at all.  So remove
it.  This avoids the segfault and also avoids unnecessary heap allocs.
Change-Id: Icb171b90a60bc6cf5629f87ed5966b4d26e22b28",This is broken.  Need to redo.,True,{}
landley/toybox,https://github.com/landley/toybox,32,2016-04-20T22:00:47Z,2016-05-01T15:04:51Z,2016-05-01T15:09:02Z,CLOSED,False,17,2,2,https://github.com/DavisNT,"Fix ""touch -t"" seconds parsing",1,[],https://github.com/landley/toybox/pull/32,https://github.com/DavisNT,1,https://github.com/landley/toybox/pull/32,"Seconds and nanoseconds parsing for touch -t was not working.
Command like touch -t 200902132331.30 walrus led to errors like touch: bad '200902132331.30'.
This was caused by two factors:

When seconds were present, but nanoseconds were not present sscanf(s += len, ""%lu%n"", &ts->tv_nsec, &len) was called, but did not set len to proper zero. This led to s being increased beyond the null terminator of the string by the further code.
When seconds and nanoseconds were present s was not decreased (although len was increased for proper trailing zeros calculation by further code). This led to s being increased beyond the null terminator of the string by the further code.

In addition touch -t without seconds did not set seconds to zero. This was fixed as well.
Additionally tests for touch -t were added.","Seconds and nanoseconds parsing for touch -t was not working.
Command like touch -t 200902132331.30 walrus led to errors like touch: bad '200902132331.30'.
This was caused by two factors:

When seconds were present, but nanoseconds were not present sscanf(s += len, ""%lu%n"", &ts->tv_nsec, &len) was called, but did not set len to proper zero. This led to s being increased beyond the null terminator of the string by the further code.
When seconds and nanoseconds were present s was not decreased (although len was increased for proper trailing zeros calculation by further code). This led to s being increased beyond the null terminator of the string by the further code.

In addition touch -t without seconds did not set seconds to zero. This was fixed as well.
Additionally tests for touch -t were added.",True,{}
landley/toybox,https://github.com/landley/toybox,32,2016-04-20T22:00:47Z,2016-05-01T15:04:51Z,2016-05-01T15:09:02Z,CLOSED,False,17,2,2,https://github.com/DavisNT,"Fix ""touch -t"" seconds parsing",1,[],https://github.com/landley/toybox/pull/32,https://github.com/DavisNT,2,https://github.com/landley/toybox/pull/32#issuecomment-215983877,"Seconds and nanoseconds parsing for touch -t was not working.
Command like touch -t 200902132331.30 walrus led to errors like touch: bad '200902132331.30'.
This was caused by two factors:

When seconds were present, but nanoseconds were not present sscanf(s += len, ""%lu%n"", &ts->tv_nsec, &len) was called, but did not set len to proper zero. This led to s being increased beyond the null terminator of the string by the further code.
When seconds and nanoseconds were present s was not decreased (although len was increased for proper trailing zeros calculation by further code). This led to s being increased beyond the null terminator of the string by the further code.

In addition touch -t without seconds did not set seconds to zero. This was fixed as well.
Additionally tests for touch -t were added.","@landley Could you please do the review? If any further improvements are needed in this code, please let me know! Thank you!",True,{}
landley/toybox,https://github.com/landley/toybox,32,2016-04-20T22:00:47Z,2016-05-01T15:04:51Z,2016-05-01T15:09:02Z,CLOSED,False,17,2,2,https://github.com/DavisNT,"Fix ""touch -t"" seconds parsing",1,[],https://github.com/landley/toybox/pull/32,https://github.com/landley,3,https://github.com/landley/toybox/pull/32#issuecomment-216004383,"Seconds and nanoseconds parsing for touch -t was not working.
Command like touch -t 200902132331.30 walrus led to errors like touch: bad '200902132331.30'.
This was caused by two factors:

When seconds were present, but nanoseconds were not present sscanf(s += len, ""%lu%n"", &ts->tv_nsec, &len) was called, but did not set len to proper zero. This led to s being increased beyond the null terminator of the string by the further code.
When seconds and nanoseconds were present s was not decreased (although len was increased for proper trailing zeros calculation by further code). This led to s being increased beyond the null terminator of the string by the further code.

In addition touch -t without seconds did not set seconds to zero. This was fixed as well.
Additionally tests for touch -t were added.","On 04/30/2016 12:56 PM, Dāvis Mošenkovs wrote:

@landley https://github.com/landley Could you please do the review? If
any further improvements are needed in this code, please let me know!
Thank you!

I already applied this last week, it's commit 00385e8.
(I wget the 32.patch file and then ""git am"" it. No merge commit that way.)
Rob",True,{}
landley/toybox,https://github.com/landley/toybox,32,2016-04-20T22:00:47Z,2016-05-01T15:04:51Z,2016-05-01T15:09:02Z,CLOSED,False,17,2,2,https://github.com/DavisNT,"Fix ""touch -t"" seconds parsing",1,[],https://github.com/landley/toybox/pull/32,https://github.com/DavisNT,4,https://github.com/landley/toybox/pull/32#issuecomment-216048388,"Seconds and nanoseconds parsing for touch -t was not working.
Command like touch -t 200902132331.30 walrus led to errors like touch: bad '200902132331.30'.
This was caused by two factors:

When seconds were present, but nanoseconds were not present sscanf(s += len, ""%lu%n"", &ts->tv_nsec, &len) was called, but did not set len to proper zero. This led to s being increased beyond the null terminator of the string by the further code.
When seconds and nanoseconds were present s was not decreased (although len was increased for proper trailing zeros calculation by further code). This led to s being increased beyond the null terminator of the string by the further code.

In addition touch -t without seconds did not set seconds to zero. This was fixed as well.
Additionally tests for touch -t were added.","Thank you!
I see it in the code. 😄 Then I will close this pull request (as it has been included in the code).
Br,
Davis",True,{}
landley/toybox,https://github.com/landley/toybox,33,2016-06-09T11:22:00Z,,2016-06-09T19:47:56Z,OPEN,False,2,1,1,https://github.com/andyincode,Fix dangling link after cp command,1,[],https://github.com/landley/toybox/pull/33,https://github.com/andyincode,1,https://github.com/landley/toybox/pull/33,"""toybuf"" should be initialized before calling symlinkat() or
dangling link could occur.","""toybuf"" should be initialized before calling symlinkat() or
dangling link could occur.",True,{}
landley/toybox,https://github.com/landley/toybox,33,2016-06-09T11:22:00Z,,2016-06-09T19:47:56Z,OPEN,False,2,1,1,https://github.com/andyincode,Fix dangling link after cp command,1,[],https://github.com/landley/toybox/pull/33,https://github.com/landley,2,https://github.com/landley/toybox/pull/33#issuecomment-225005778,"""toybuf"" should be initialized before calling symlinkat() or
dangling link could occur.",Applied.,True,{}
landley/toybox,https://github.com/landley/toybox,37,2016-07-23T14:32:13Z,2016-07-23T23:37:18Z,2016-07-23T23:37:18Z,CLOSED,False,5,4,2,https://github.com/jolfzverb,Fix use-after-free in sed 'a\' found by ASan,2,[],https://github.com/landley/toybox/pull/37,https://github.com/jolfzverb,1,https://github.com/landley/toybox/pull/37,"Full ASan trace:
=================================================================
==7611==ERROR: AddressSanitizer: heap-use-after-free on address 0x60c00000be00 at pc 0x000000406678 bp 0x7ffd164fac60 sp 0x7ffd164fac50
READ of size 1 at 0x60c00000be00 thread T0
    #0 0x406677 in emit toys/posix/sed.c:205

0x60c00000be00 is located 0 bytes inside of 120-byte region [0x60c00000be00,0x60c00000be78)
freed by thread T0 here:
    #0 0x7f1444e4b77a in __interceptor_free (/usr/lib/gcc/x86_64-pc-linux-gnu/5.4.0/libasan.so.2+0x9877a)
    #1 0x408507 in process_line toys/posix/sed.c:638
    #2 0x7ffd164faf57  (<unknown module>)
    #3 0x7ffd164fb98e  (<unknown module>)

previously allocated by thread T0 here:
    #0 0x7f1444e4bab2 in malloc (/usr/lib/gcc/x86_64-pc-linux-gnu/5.4.0/libasan.so.2+0x98ab2)
    #1 0x7f1444a810e7 in getdelim (/lib64/libc.so.6+0x670e7)
    #2 0x405f0c in do_lines toys/posix/sed.c:673

SUMMARY: AddressSanitizer: heap-use-after-free toys/posix/sed.c:205 emit
Shadow bytes around the buggy address:
  0x0c187fff9770: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c187fff9780: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c187fff9790: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c187fff97a0: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x0c187fff97b0: 00 00 00 00 00 00 00 fa fa fa fa fa fa fa fa fa
=>0x0c187fff97c0:[fd]fd fd fd fd fd fd fd fd fd fd fd fd fd fd fa
  0x0c187fff97d0: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x0c187fff97e0: 00 00 00 00 00 00 00 fa fa fa fa fa fa fa fa fa
  0x0c187fff97f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 fa
  0x0c187fff9800: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c187fff9810: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa","Full ASan trace:
=================================================================
==7611==ERROR: AddressSanitizer: heap-use-after-free on address 0x60c00000be00 at pc 0x000000406678 bp 0x7ffd164fac60 sp 0x7ffd164fac50
READ of size 1 at 0x60c00000be00 thread T0
    #0 0x406677 in emit toys/posix/sed.c:205

0x60c00000be00 is located 0 bytes inside of 120-byte region [0x60c00000be00,0x60c00000be78)
freed by thread T0 here:
    #0 0x7f1444e4b77a in __interceptor_free (/usr/lib/gcc/x86_64-pc-linux-gnu/5.4.0/libasan.so.2+0x9877a)
    #1 0x408507 in process_line toys/posix/sed.c:638
    #2 0x7ffd164faf57  (<unknown module>)
    #3 0x7ffd164fb98e  (<unknown module>)

previously allocated by thread T0 here:
    #0 0x7f1444e4bab2 in malloc (/usr/lib/gcc/x86_64-pc-linux-gnu/5.4.0/libasan.so.2+0x98ab2)
    #1 0x7f1444a810e7 in getdelim (/lib64/libc.so.6+0x670e7)
    #2 0x405f0c in do_lines toys/posix/sed.c:673

SUMMARY: AddressSanitizer: heap-use-after-free toys/posix/sed.c:205 emit
Shadow bytes around the buggy address:
  0x0c187fff9770: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c187fff9780: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c187fff9790: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c187fff97a0: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x0c187fff97b0: 00 00 00 00 00 00 00 fa fa fa fa fa fa fa fa fa
=>0x0c187fff97c0:[fd]fd fd fd fd fd fd fd fd fd fd fd fd fd fd fa
  0x0c187fff97d0: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x0c187fff97e0: 00 00 00 00 00 00 00 fa fa fa fa fa fa fa fa fa
  0x0c187fff97f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 fa
  0x0c187fff9800: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c187fff9810: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa",True,{}
landley/toybox,https://github.com/landley/toybox,37,2016-07-23T14:32:13Z,2016-07-23T23:37:18Z,2016-07-23T23:37:18Z,CLOSED,False,5,4,2,https://github.com/jolfzverb,Fix use-after-free in sed 'a\' found by ASan,2,[],https://github.com/landley/toybox/pull/37,https://github.com/landley,2,https://github.com/landley/toybox/pull/37#issuecomment-234746199,"Full ASan trace:
=================================================================
==7611==ERROR: AddressSanitizer: heap-use-after-free on address 0x60c00000be00 at pc 0x000000406678 bp 0x7ffd164fac60 sp 0x7ffd164fac50
READ of size 1 at 0x60c00000be00 thread T0
    #0 0x406677 in emit toys/posix/sed.c:205

0x60c00000be00 is located 0 bytes inside of 120-byte region [0x60c00000be00,0x60c00000be78)
freed by thread T0 here:
    #0 0x7f1444e4b77a in __interceptor_free (/usr/lib/gcc/x86_64-pc-linux-gnu/5.4.0/libasan.so.2+0x9877a)
    #1 0x408507 in process_line toys/posix/sed.c:638
    #2 0x7ffd164faf57  (<unknown module>)
    #3 0x7ffd164fb98e  (<unknown module>)

previously allocated by thread T0 here:
    #0 0x7f1444e4bab2 in malloc (/usr/lib/gcc/x86_64-pc-linux-gnu/5.4.0/libasan.so.2+0x98ab2)
    #1 0x7f1444a810e7 in getdelim (/lib64/libc.so.6+0x670e7)
    #2 0x405f0c in do_lines toys/posix/sed.c:673

SUMMARY: AddressSanitizer: heap-use-after-free toys/posix/sed.c:205 emit
Shadow bytes around the buggy address:
  0x0c187fff9770: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c187fff9780: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c187fff9790: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c187fff97a0: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x0c187fff97b0: 00 00 00 00 00 00 00 fa fa fa fa fa fa fa fa fa
=>0x0c187fff97c0:[fd]fd fd fd fd fd fd fd fd fd fd fd fd fd fd fa
  0x0c187fff97d0: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x0c187fff97e0: 00 00 00 00 00 00 00 fa fa fa fa fa fa fa fa fa
  0x0c187fff97f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 fa
  0x0c187fff9800: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c187fff9810: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa","I think I've fixed it now.

Thanks,

Rob",True,{}
landley/toybox,https://github.com/landley/toybox,37,2016-07-23T14:32:13Z,2016-07-23T23:37:18Z,2016-07-23T23:37:18Z,CLOSED,False,5,4,2,https://github.com/jolfzverb,Fix use-after-free in sed 'a\' found by ASan,2,[],https://github.com/landley/toybox/pull/37,https://github.com/jolfzverb,3,https://github.com/landley/toybox/pull/37#issuecomment-234747212,"Full ASan trace:
=================================================================
==7611==ERROR: AddressSanitizer: heap-use-after-free on address 0x60c00000be00 at pc 0x000000406678 bp 0x7ffd164fac60 sp 0x7ffd164fac50
READ of size 1 at 0x60c00000be00 thread T0
    #0 0x406677 in emit toys/posix/sed.c:205

0x60c00000be00 is located 0 bytes inside of 120-byte region [0x60c00000be00,0x60c00000be78)
freed by thread T0 here:
    #0 0x7f1444e4b77a in __interceptor_free (/usr/lib/gcc/x86_64-pc-linux-gnu/5.4.0/libasan.so.2+0x9877a)
    #1 0x408507 in process_line toys/posix/sed.c:638
    #2 0x7ffd164faf57  (<unknown module>)
    #3 0x7ffd164fb98e  (<unknown module>)

previously allocated by thread T0 here:
    #0 0x7f1444e4bab2 in malloc (/usr/lib/gcc/x86_64-pc-linux-gnu/5.4.0/libasan.so.2+0x98ab2)
    #1 0x7f1444a810e7 in getdelim (/lib64/libc.so.6+0x670e7)
    #2 0x405f0c in do_lines toys/posix/sed.c:673

SUMMARY: AddressSanitizer: heap-use-after-free toys/posix/sed.c:205 emit
Shadow bytes around the buggy address:
  0x0c187fff9770: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c187fff9780: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c187fff9790: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c187fff97a0: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x0c187fff97b0: 00 00 00 00 00 00 00 fa fa fa fa fa fa fa fa fa
=>0x0c187fff97c0:[fd]fd fd fd fd fd fd fd fd fd fd fd fd fd fd fa
  0x0c187fff97d0: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x0c187fff97e0: 00 00 00 00 00 00 00 fa fa fa fa fa fa fa fa fa
  0x0c187fff97f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 fa
  0x0c187fff9800: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c187fff9810: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa","Thank you!
Closing pull request now.",True,{}
landley/toybox,https://github.com/landley/toybox,38,2016-07-23T17:08:38Z,2016-07-23T23:37:32Z,2016-07-23T23:37:32Z,CLOSED,False,4,2,1,https://github.com/jolfzverb,Fix memory leak in id found by LSan,1,[],https://github.com/landley/toybox/pull/38,https://github.com/jolfzverb,1,https://github.com/landley/toybox/pull/38,"Full LSan log:
$ ./generated/unstripped/toybox id -u
1000

=================================================================
==32119==ERROR: LeakSanitizer: detected memory leaks

Direct leak of 80 byte(s) in 1 object(s) allocated from:
    #0 0x7f331a5c3ab2 in malloc (/usr/lib/gcc/x86_64-pc-linux-gnu/5.4.0/libasan.so.2+0x98ab2)
    #1 0x411b20 in xmalloc lib/xwrap.c:64

Indirect leak of 400 byte(s) in 5 object(s) allocated from:
    #0 0x7f331a5c3ab2 in malloc (/usr/lib/gcc/x86_64-pc-linux-gnu/5.4.0/libasan.so.2+0x98ab2)
    #1 0x411b20 in xmalloc lib/xwrap.c:64

SUMMARY: AddressSanitizer: 480 byte(s) leaked in 6 allocation(s).","Full LSan log:
$ ./generated/unstripped/toybox id -u
1000

=================================================================
==32119==ERROR: LeakSanitizer: detected memory leaks

Direct leak of 80 byte(s) in 1 object(s) allocated from:
    #0 0x7f331a5c3ab2 in malloc (/usr/lib/gcc/x86_64-pc-linux-gnu/5.4.0/libasan.so.2+0x98ab2)
    #1 0x411b20 in xmalloc lib/xwrap.c:64

Indirect leak of 400 byte(s) in 5 object(s) allocated from:
    #0 0x7f331a5c3ab2 in malloc (/usr/lib/gcc/x86_64-pc-linux-gnu/5.4.0/libasan.so.2+0x98ab2)
    #1 0x411b20 in xmalloc lib/xwrap.c:64

SUMMARY: AddressSanitizer: 480 byte(s) leaked in 6 allocation(s).",True,{}
landley/toybox,https://github.com/landley/toybox,38,2016-07-23T17:08:38Z,2016-07-23T23:37:32Z,2016-07-23T23:37:32Z,CLOSED,False,4,2,1,https://github.com/jolfzverb,Fix memory leak in id found by LSan,1,[],https://github.com/landley/toybox/pull/38,https://github.com/landley,2,https://github.com/landley/toybox/pull/38#issuecomment-234746453,"Full LSan log:
$ ./generated/unstripped/toybox id -u
1000

=================================================================
==32119==ERROR: LeakSanitizer: detected memory leaks

Direct leak of 80 byte(s) in 1 object(s) allocated from:
    #0 0x7f331a5c3ab2 in malloc (/usr/lib/gcc/x86_64-pc-linux-gnu/5.4.0/libasan.so.2+0x98ab2)
    #1 0x411b20 in xmalloc lib/xwrap.c:64

Indirect leak of 400 byte(s) in 5 object(s) allocated from:
    #0 0x7f331a5c3ab2 in malloc (/usr/lib/gcc/x86_64-pc-linux-gnu/5.4.0/libasan.so.2+0x98ab2)
    #1 0x411b20 in xmalloc lib/xwrap.c:64

SUMMARY: AddressSanitizer: 480 byte(s) leaked in 6 allocation(s).","Short-lived commands don't necessarily free their memory because exit()
will do it for them. We only worry about allocations building up,
perhaps based on size of input (one leak per line of sed or grep would
be bad if they're working on millions of lines of input), or based on
duration of running (leaking every 30 seconds in a server that runs days
would be bad). (Note that those allocations don't have to be leaks to
be concerning.)
See the config symbol TOYBOX_FREE for details. (Config.in line 98 if you
don't want to deal with menuconfig).
Thanks,
Rob
On 07/23/2016 12:08 PM, Usishchev Yury wrote:

Full LSan log:
|$ ./generated/unstripped/toybox id -u 1000
==32119==ERROR: LeakSanitizer: detected memory leaks Direct leak of 80
byte(s) in 1 object(s) allocated from: #0 0x7f331a5c3ab2 in malloc
(/usr/lib/gcc/x86_64-pc-linux-gnu/5.4.0/libasan.so.2+0x98ab2) #1
0x411b20 in xmalloc lib/xwrap.c:64 Indirect leak of 400 byte(s) in 5
object(s) allocated from: #0 0x7f331a5c3ab2 in malloc
(/usr/lib/gcc/x86_64-pc-linux-gnu/5.4.0/libasan.so.2+0x98ab2) #1
0x411b20 in xmalloc lib/xwrap.c:64 SUMMARY: AddressSanitizer: 480
byte(s) leaked in 6 allocation(s). |

    You can view, comment on, or merge this pull request online at:

#38
    Commit Summary



Fix memory leak in id found by LSan
File Changes



M toys/posix/id.c
https://github.com/landley/toybox/pull/38/files#diff-0 (6)
Patch Links:



https://github.com/landley/toybox/pull/38.patch


https://github.com/landley/toybox/pull/38.diff


—
You are receiving this because you are subscribed to this thread.
Reply to this email directly, view it on GitHub
#38, or mute the thread
https://github.com/notifications/unsubscribe-auth/ABWXCbfYOKgr0YxEuki0g6OYoWNN-qqtks5qYkqWgaJpZM4JTZiU.",True,{}
landley/toybox,https://github.com/landley/toybox,38,2016-07-23T17:08:38Z,2016-07-23T23:37:32Z,2016-07-23T23:37:32Z,CLOSED,False,4,2,1,https://github.com/jolfzverb,Fix memory leak in id found by LSan,1,[],https://github.com/landley/toybox/pull/38,https://github.com/jolfzverb,3,https://github.com/landley/toybox/pull/38#issuecomment-234747221,"Full LSan log:
$ ./generated/unstripped/toybox id -u
1000

=================================================================
==32119==ERROR: LeakSanitizer: detected memory leaks

Direct leak of 80 byte(s) in 1 object(s) allocated from:
    #0 0x7f331a5c3ab2 in malloc (/usr/lib/gcc/x86_64-pc-linux-gnu/5.4.0/libasan.so.2+0x98ab2)
    #1 0x411b20 in xmalloc lib/xwrap.c:64

Indirect leak of 400 byte(s) in 5 object(s) allocated from:
    #0 0x7f331a5c3ab2 in malloc (/usr/lib/gcc/x86_64-pc-linux-gnu/5.4.0/libasan.so.2+0x98ab2)
    #1 0x411b20 in xmalloc lib/xwrap.c:64

SUMMARY: AddressSanitizer: 480 byte(s) leaked in 6 allocation(s).","Thank you!
Closing pull request now.",True,{}
landley/toybox,https://github.com/landley/toybox,39,2016-07-24T23:51:29Z,2016-07-29T15:34:14Z,2016-07-29T15:34:14Z,CLOSED,False,240,0,3,https://github.com/hifi,Simple implementation of less,2,[],https://github.com/landley/toybox/pull/39,https://github.com/hifi,1,https://github.com/landley/toybox/pull/39,"I don't expect this to be merged as-is but some feedback regarding the overall design would be nice. Tried to simplify it as much as possible while still keeping it performant and responsive over slow TTY.
As far as I'm concerned, UTF-8 support needs a ""draw"" function that outputs to given buffer instead of stream to get the screen updates working properly.","I don't expect this to be merged as-is but some feedback regarding the overall design would be nice. Tried to simplify it as much as possible while still keeping it performant and responsive over slow TTY.
As far as I'm concerned, UTF-8 support needs a ""draw"" function that outputs to given buffer instead of stream to get the screen updates working properly.",True,{}
landley/toybox,https://github.com/landley/toybox,42,2016-08-11T11:54:14Z,2016-08-14T12:05:32Z,2016-08-14T12:05:32Z,CLOSED,False,2,2,1,https://github.com/d4rken,Fix test applet issues,2,[],https://github.com/landley/toybox/pull/42,https://github.com/d4rken,1,https://github.com/landley/toybox/pull/42,"If the ""!"" operator was not used in the test applets argument,
int not was never initialized before using it in toys.exitval ^= not,
which lead to inconsistent results (e.g. unexpected result inversion).","If the ""!"" operator was not used in the test applets argument,
int not was never initialized before using it in toys.exitval ^= not,
which lead to inconsistent results (e.g. unexpected result inversion).",True,{}
landley/toybox,https://github.com/landley/toybox,42,2016-08-11T11:54:14Z,2016-08-14T12:05:32Z,2016-08-14T12:05:32Z,CLOSED,False,2,2,1,https://github.com/d4rken,Fix test applet issues,2,[],https://github.com/landley/toybox/pull/42,https://github.com/d4rken,2,https://github.com/landley/toybox/pull/42#issuecomment-239643983,"If the ""!"" operator was not used in the test applets argument,
int not was never initialized before using it in toys.exitval ^= not,
which lead to inconsistent results (e.g. unexpected result inversion).",Second commit fixes the ! operator being ignored if we return early due to the target not existing.,True,{}
landley/toybox,https://github.com/landley/toybox,42,2016-08-11T11:54:14Z,2016-08-14T12:05:32Z,2016-08-14T12:05:32Z,CLOSED,False,2,2,1,https://github.com/d4rken,Fix test applet issues,2,[],https://github.com/landley/toybox/pull/42,https://github.com/d4rken,3,https://github.com/landley/toybox/pull/42#issuecomment-239670157,"If the ""!"" operator was not used in the test applets argument,
int not was never initialized before using it in toys.exitval ^= not,
which lead to inconsistent results (e.g. unexpected result inversion).",Sending this to the mailing list.,True,{}
landley/toybox,https://github.com/landley/toybox,46,2016-08-14T17:57:30Z,2016-08-20T11:02:32Z,2016-08-22T01:22:37Z,CLOSED,False,20,22,6,https://github.com/d4rken,Allow processing of unknown uid/gid.,1,[],https://github.com/landley/toybox/pull/46,https://github.com/d4rken,1,https://github.com/landley/toybox/pull/46,"xgetpwnamid and xgetgrnamid only error out if the input is not a number.
(also submitted to mailing list)","xgetpwnamid and xgetgrnamid only error out if the input is not a number.
(also submitted to mailing list)",True,{}
landley/toybox,https://github.com/landley/toybox,46,2016-08-14T17:57:30Z,2016-08-20T11:02:32Z,2016-08-22T01:22:37Z,CLOSED,False,20,22,6,https://github.com/d4rken,Allow processing of unknown uid/gid.,1,[],https://github.com/landley/toybox/pull/46,https://github.com/d4rken,2,https://github.com/landley/toybox/pull/46#issuecomment-239687215,"xgetpwnamid and xgetgrnamid only error out if the input is not a number.
(also submitted to mailing list)",#45,True,{}
landley/toybox,https://github.com/landley/toybox,46,2016-08-14T17:57:30Z,2016-08-20T11:02:32Z,2016-08-22T01:22:37Z,CLOSED,False,20,22,6,https://github.com/d4rken,Allow processing of unknown uid/gid.,1,[],https://github.com/landley/toybox/pull/46,https://github.com/d4rken,3,https://github.com/landley/toybox/pull/46#issuecomment-241193378,"xgetpwnamid and xgetgrnamid only error out if the input is not a number.
(also submitted to mailing list)",Fixed in 3d64b0c,True,{}
landley/toybox,https://github.com/landley/toybox,47,2016-08-14T17:58:21Z,2020-08-04T18:37:03Z,2020-08-04T18:37:04Z,CLOSED,False,2,2,1,https://github.com/d4rken,Fixes for test applet NOT operator,2,[],https://github.com/landley/toybox/pull/47,https://github.com/d4rken,1,https://github.com/landley/toybox/pull/47,(also submitted to mailing list),(also submitted to mailing list),True,{'THUMBS_UP': ['https://github.com/teerasak8959']}
landley/toybox,https://github.com/landley/toybox,47,2016-08-14T17:58:21Z,2020-08-04T18:37:03Z,2020-08-04T18:37:04Z,CLOSED,False,2,2,1,https://github.com/d4rken,Fixes for test applet NOT operator,2,[],https://github.com/landley/toybox/pull/47,https://github.com/d4rken,2,https://github.com/landley/toybox/pull/47#issuecomment-239687622,(also submitted to mailing list),#48,True,{}
landley/toybox,https://github.com/landley/toybox,47,2016-08-14T17:58:21Z,2020-08-04T18:37:03Z,2020-08-04T18:37:04Z,CLOSED,False,2,2,1,https://github.com/d4rken,Fixes for test applet NOT operator,2,[],https://github.com/landley/toybox/pull/47,https://github.com/enh-google,3,https://github.com/landley/toybox/pull/47#issuecomment-668758992,(also submitted to mailing list),(obsoleted by test.c rewrite.),True,{}
landley/toybox,https://github.com/landley/toybox,53,2016-10-31T19:34:22Z,2018-06-03T18:13:50Z,2018-06-03T18:13:50Z,CLOSED,False,6,4,1,https://github.com/eugenis,Fix control flow integrity check failure in ps.,1,[],https://github.com/landley/toybox/pull/53,https://github.com/eugenis,1,https://github.com/landley/toybox/pull/53,"This fixes an indirect function call through a pointer of an
incompatible type. An alternative is to change show_process pointer type
to void (*)(struct carveup *), but that requires a forward declaration of struct carveup
at the global scope, which is hard to do with the way globals.h is generated.
See http://clang.llvm.org/docs/ControlFlowIntegrity.html for more
details.","This fixes an indirect function call through a pointer of an
incompatible type. An alternative is to change show_process pointer type
to void (*)(struct carveup *), but that requires a forward declaration of struct carveup
at the global scope, which is hard to do with the way globals.h is generated.
See http://clang.llvm.org/docs/ControlFlowIntegrity.html for more
details.",True,{}
landley/toybox,https://github.com/landley/toybox,53,2016-10-31T19:34:22Z,2018-06-03T18:13:50Z,2018-06-03T18:13:50Z,CLOSED,False,6,4,1,https://github.com/eugenis,Fix control flow integrity check failure in ps.,1,[],https://github.com/landley/toybox/pull/53,https://github.com/landley,2,https://github.com/landley/toybox/pull/53#issuecomment-257491925,"This fixes an indirect function call through a pointer of an
incompatible type. An alternative is to change show_process pointer type
to void (*)(struct carveup *), but that requires a forward declaration of struct carveup
at the global scope, which is hard to do with the way globals.h is generated.
See http://clang.llvm.org/docs/ControlFlowIntegrity.html for more
details.","On 10/31/2016 02:34 PM, Evgeniy Stepanov wrote:

This fixes an indirect function call through a pointer of an
incompatible type. An alternative is to change show_process pointer type
to void (*)(struct carveup *), but that requires a forward declaration
of struct carveup
at the /global scope/, which is hard to do with the way globals.h is
generated.

How is this a bug again? The new code has to be able to typecast void *
to struct carveup * to use them. Are you saying that void * and struct
carveup pointer will ever be different representations on the stack on
any Linux system?
You seem to be implying that C++ disease has advanced so far in modern
compilers that EVERY pointer ever passed in any function has to be void

and then copied into a local variable of the appropriate type (with
implicit typecast on that assignment) to avoid triggering ever-expanding
""undefined"" behavior.

I'm aware that when C++ developers took over C compiler development and
started reimplementing them in C++, they decided to sabotage C to bring
it down to parity with C++. C being a portable assembly language gave it
a significant advantage over C++, which is a minefield of magic behavior
you just have to memorize without rhyme or reason, constantly changing
every 3 years or so when they come out with a new 'standard', and if C++
developers allowed the same C program to compile for decades unmodified
when C++ can't do it for 3 years, then their argument that ""C++ contains
the whole of C and is thus just as good a language, the same way a mud
pie contains an entire glass of water and is thus as good a beverage""
was undermined.
I'm aware they did that. And it is a BAD THING.

See http://clang.llvm.org/docs/ControlFlowIntegrity.html for more
details.

Uh-huh.

Clang includes an implementation of a number of control flow
integrity (CFI) schemes, which are designed to abort the program upon
detecting certain forms of undefined behavior that can potentially
allow attackers to subvert the program’s control flow.

How. How does this allow an attacker to subvert the control flow of a
binary calling its own internal functions? What's the attack?
I'm curious now. Please convince me this is a real issue.
Rob",True,{}
landley/toybox,https://github.com/landley/toybox,53,2016-10-31T19:34:22Z,2018-06-03T18:13:50Z,2018-06-03T18:13:50Z,CLOSED,False,6,4,1,https://github.com/eugenis,Fix control flow integrity check failure in ps.,1,[],https://github.com/landley/toybox/pull/53,https://github.com/eugenis,3,https://github.com/landley/toybox/pull/53#issuecomment-257494762,"This fixes an indirect function call through a pointer of an
incompatible type. An alternative is to change show_process pointer type
to void (*)(struct carveup *), but that requires a forward declaration of struct carveup
at the global scope, which is hard to do with the way globals.h is generated.
See http://clang.llvm.org/docs/ControlFlowIntegrity.html for more
details.","Basically, these days code pages are not writable and stack/data pages - not executable, and the majority of exploits require finding a code pointer in writable memory and replacing it with something different. I.e. hijacking the control flow of the program. Of course this requires the ability to write to the program memory, but that's what all the heap overflow and use-after-free bugs are for.
CFI is about limiting possible control flow as much as possible. For function pointers it means run-time checking that the dynamic type of the call target matches the static type of the call site, i.e. calls though void ()(void) pointer can only go to address-taken functions of type void()(void). This requires a bit of type discipline, but I'm pretty sure by ISO C standard calls through mismatching pointer type are undefined.
As I mentioned, this could be fixed in a number of different way, the best, probably, by changing the type of show_process to void ()(struct carveup). I could not do that w/o adding new warnings to the build though.",True,{}
landley/toybox,https://github.com/landley/toybox,53,2016-10-31T19:34:22Z,2018-06-03T18:13:50Z,2018-06-03T18:13:50Z,CLOSED,False,6,4,1,https://github.com/eugenis,Fix control flow integrity check failure in ps.,1,[],https://github.com/landley/toybox/pull/53,https://github.com/landley,4,https://github.com/landley/toybox/pull/53#issuecomment-257523583,"This fixes an indirect function call through a pointer of an
incompatible type. An alternative is to change show_process pointer type
to void (*)(struct carveup *), but that requires a forward declaration of struct carveup
at the global scope, which is hard to do with the way globals.h is generated.
See http://clang.llvm.org/docs/ControlFlowIntegrity.html for more
details.","On 11/01/2016 12:56 AM, Evgeniy Stepanov wrote:

Basically, these days code pages are not writable and stack/data pages -
not executable, and the majority of exploits require finding a code
pointer in writable memory and replacing it with something different.
I.e. hijacking the control flow of the program. Of course this requires
the ability to write to the program memory, but that's what all the heap
overflow and use-after-free bugs are for.
CFI is about limiting possible control flow as much as possible.

So it's yet another layer of runtime checking trying to move the
exploits around.
Sigh, I'll throw it on the pile. Thanks for the heads up,
Rob",True,{}
landley/toybox,https://github.com/landley/toybox,53,2016-10-31T19:34:22Z,2018-06-03T18:13:50Z,2018-06-03T18:13:50Z,CLOSED,False,6,4,1,https://github.com/eugenis,Fix control flow integrity check failure in ps.,1,[],https://github.com/landley/toybox/pull/53,https://github.com/landley,5,https://github.com/landley/toybox/pull/53#issuecomment-394180553,"This fixes an indirect function call through a pointer of an
incompatible type. An alternative is to change show_process pointer type
to void (*)(struct carveup *), but that requires a forward declaration of struct carveup
at the global scope, which is hard to do with the way globals.h is generated.
See http://clang.llvm.org/docs/ControlFlowIntegrity.html for more
details.",Applied.,True,{}
landley/toybox,https://github.com/landley/toybox,60,2016-12-25T08:25:53Z,2016-12-27T00:21:23Z,2016-12-27T00:21:23Z,CLOSED,False,4,1,1,https://github.com/eeewxj,Fix a bug for sort.,3,[],https://github.com/landley/toybox/pull/60,https://github.com/eeewxj,1,https://github.com/landley/toybox/pull/60,"When the key_separator is not space, the sort commandline tool fails to sort by the 3rd,4th,etc column.
For example:
when you exec
  $ sort -t',' -k 3n

on a file which cotains:

1,2,3,4
2,3,4,1
4,1,2,3
3,4,1,2

you got:

4,1,2,3
1,2,3,4
2,3,4,1
3,4,1,2

but the expected output should be:

3,4,1,2
4,1,2,3
1,2,3,4
2,3,4,1

The bug is due to the dependency of ""isspace(str[end])"" at line 113.
When searching for the non-space key_separator, the search stopped just at the position of first key_separator it met.
The bug can be easily fixed by adding ""end++"" when the search have found one separator and exit the for loop.","When the key_separator is not space, the sort commandline tool fails to sort by the 3rd,4th,etc column.
For example:
when you exec
  $ sort -t',' -k 3n

on a file which cotains:

1,2,3,4
2,3,4,1
4,1,2,3
3,4,1,2

you got:

4,1,2,3
1,2,3,4
2,3,4,1
3,4,1,2

but the expected output should be:

3,4,1,2
4,1,2,3
1,2,3,4
2,3,4,1

The bug is due to the dependency of ""isspace(str[end])"" at line 113.
When searching for the non-space key_separator, the search stopped just at the position of first key_separator it met.
The bug can be easily fixed by adding ""end++"" when the search have found one separator and exit the for loop.",True,{}
landley/toybox,https://github.com/landley/toybox,60,2016-12-25T08:25:53Z,2016-12-27T00:21:23Z,2016-12-27T00:21:23Z,CLOSED,False,4,1,1,https://github.com/eeewxj,Fix a bug for sort.,3,[],https://github.com/landley/toybox/pull/60,https://github.com/eeewxj,2,https://github.com/landley/toybox/pull/60#issuecomment-269114316,"When the key_separator is not space, the sort commandline tool fails to sort by the 3rd,4th,etc column.
For example:
when you exec
  $ sort -t',' -k 3n

on a file which cotains:

1,2,3,4
2,3,4,1
4,1,2,3
3,4,1,2

you got:

4,1,2,3
1,2,3,4
2,3,4,1
3,4,1,2

but the expected output should be:

3,4,1,2
4,1,2,3
1,2,3,4
2,3,4,1

The bug is due to the dependency of ""isspace(str[end])"" at line 113.
When searching for the non-space key_separator, the search stopped just at the position of first key_separator it met.
The bug can be easily fixed by adding ""end++"" when the search have found one separator and exit the for loop.","The fix is tested on my android phone.
The bug can be repeated on other android phones.",True,{}
landley/toybox,https://github.com/landley/toybox,62,2017-02-26T02:48:06Z,2021-02-07T01:19:02Z,2021-02-07T01:19:02Z,CLOSED,False,4,1,1,https://github.com/usta,Fixes resource leak in netstat,1,[],https://github.com/landley/toybox/pull/62,https://github.com/usta,1,https://github.com/landley/toybox/pull/62,Forgotten to close file before return statement,Forgotten to close file before return statement,True,{'THUMBS_UP': ['https://github.com/teerasak8959']}
landley/toybox,https://github.com/landley/toybox,62,2017-02-26T02:48:06Z,2021-02-07T01:19:02Z,2021-02-07T01:19:02Z,CLOSED,False,4,1,1,https://github.com/usta,Fixes resource leak in netstat,1,[],https://github.com/landley/toybox/pull/62,https://github.com/usta,2,https://github.com/landley/toybox/pull/62#issuecomment-774005830,Forgotten to close file before return statement,ping ?!,True,{}
landley/toybox,https://github.com/landley/toybox,62,2017-02-26T02:48:06Z,2021-02-07T01:19:02Z,2021-02-07T01:19:02Z,CLOSED,False,4,1,1,https://github.com/usta,Fixes resource leak in netstat,1,[],https://github.com/landley/toybox/pull/62,https://github.com/usta,3,https://github.com/landley/toybox/pull/62#issuecomment-774006258,Forgotten to close file before return statement,@landley,True,{}
landley/toybox,https://github.com/landley/toybox,62,2017-02-26T02:48:06Z,2021-02-07T01:19:02Z,2021-02-07T01:19:02Z,CLOSED,False,4,1,1,https://github.com/usta,Fixes resource leak in netstat,1,[],https://github.com/landley/toybox/pull/62,https://github.com/landley,4,https://github.com/landley/toybox/pull/62#issuecomment-774440581,Forgotten to close file before return statement,"I hadn't bothered because A) it's not called in a loop (show_ip is called at most 6 times before the command exits, so filehandle exhaustion is highly unlikely to happen), B) it's a ""should never happen, your kernel is broken"" error return path that doesn't really need to be checked (the loop skips unparseable entries enyway). The same issue exists in show_unix_sockets() and display_routes() but you only addressed one. Ideally I'd like to convert both to use do_lines().
This command could actually use rather a lot of cleanup, but it's not one I use normally and hasn't got an automated regression test (nor is it easy to add one since it tests machine-variable network configuration), so adding such a test is part of the mkroot todo heap where I set up a synthetic system under qemu with known attributes for it to test and get consistent answers for. And that's on the post-1.0 todo list...",True,{}
landley/toybox,https://github.com/landley/toybox,62,2017-02-26T02:48:06Z,2021-02-07T01:19:02Z,2021-02-07T01:19:02Z,CLOSED,False,4,1,1,https://github.com/usta,Fixes resource leak in netstat,1,[],https://github.com/landley/toybox/pull/62,https://github.com/enh-google,5,https://github.com/landley/toybox/pull/62#issuecomment-774542181,Forgotten to close file before return statement,"since it's Saturday and Larry can't tell me what to do, i've sent a patch to the mailing list. i didn't use do_lines() because that seemed more complicated than just using fscanf() directly rather than fgets() into toybuf and then sscanf(). i also fixed a bunch of formatting issues found when comparing the output to net-tools netstat, and a correctness issue with netstat -xl.",True,{}
landley/toybox,https://github.com/landley/toybox,65,2017-04-10T21:52:37Z,,2017-04-10T21:52:37Z,OPEN,False,5,4,1,https://github.com/fbarchard,toybox expr fixes for warnings,1,[],https://github.com/landley/toybox/pull/65,https://github.com/fbarchard,1,https://github.com/landley/toybox/pull/65,"string size delimiter expects int, so cast parameter from long to int.
initializer for struct expects 2 values, so pass 0 for pointer and
0LL for long long.","string size delimiter expects int, so cast parameter from long to int.
initializer for struct expects 2 values, so pass 0 for pointer and
0LL for long long.",True,{'THUMBS_UP': ['https://github.com/teerasak8959']}
landley/toybox,https://github.com/landley/toybox,75,2017-09-13T17:15:58Z,2020-08-18T00:42:21Z,2020-08-18T00:42:21Z,CLOSED,False,1,1,1,https://github.com/zachriggle,Fix URL typo,1,[],https://github.com/landley/toybox/pull/75,https://github.com/zachriggle,1,https://github.com/landley/toybox/pull/75,,,True,"{'THUMBS_UP': ['https://github.com/NieDzejkob', 'https://github.com/kvanderkamp']}"
landley/toybox,https://github.com/landley/toybox,75,2017-09-13T17:15:58Z,2020-08-18T00:42:21Z,2020-08-18T00:42:21Z,CLOSED,False,1,1,1,https://github.com/zachriggle,Fix URL typo,1,[],https://github.com/landley/toybox/pull/75,https://github.com/unforgettableid,2,https://github.com/landley/toybox/pull/75#issuecomment-675173414,,The typo is no longer present in the README file. This pull request can now be safely closed without merging it.,True,{}
landley/toybox,https://github.com/landley/toybox,82,2018-01-21T20:45:59Z,2018-01-22T09:35:58Z,2018-01-22T09:35:59Z,CLOSED,False,6,6,1,https://github.com/mkmkme,Fix variables in help.txt,1,[],https://github.com/landley/toybox/pull/82,https://github.com/mkmkme,1,https://github.com/landley/toybox/pull/82,After replacing echo TXT with cat FILE in Makefile we don't need double dollar signs anymore.,After replacing echo TXT with cat FILE in Makefile we don't need double dollar signs anymore.,True,{}
landley/toybox,https://github.com/landley/toybox,82,2018-01-21T20:45:59Z,2018-01-22T09:35:58Z,2018-01-22T09:35:59Z,CLOSED,False,6,6,1,https://github.com/mkmkme,Fix variables in help.txt,1,[],https://github.com/landley/toybox/pull/82,https://github.com/mkmkme,2,https://github.com/landley/toybox/pull/82#issuecomment-359369858,After replacing echo TXT with cat FILE in Makefile we don't need double dollar signs anymore.,Thanks for merging :),True,{}
landley/toybox,https://github.com/landley/toybox,85,2018-03-11T04:18:26Z,2018-03-12T15:41:38Z,2018-03-12T15:41:38Z,CLOSED,False,9513,109,7,https://github.com/gavinhoward,Add bc to pending,6,[],https://github.com/landley/toybox/pull/85,https://github.com/gavinhoward,1,https://github.com/landley/toybox/pull/85,"This bc is passing all math tests, and it successfully runs the Linux timeconst.bc script for all values from 0 to 10000, which is all that that particular script should need.
It is not done yet. I am planning to fuzz this for two weeks starting next week, and then I need to test it on more scripts as well. That's why I would like this in pending, not in posix. I am hoping to get it in posix by the next toybox release, though.","This bc is passing all math tests, and it successfully runs the Linux timeconst.bc script for all values from 0 to 10000, which is all that that particular script should need.
It is not done yet. I am planning to fuzz this for two weeks starting next week, and then I need to test it on more scripts as well. That's why I would like this in pending, not in posix. I am hoping to get it in posix by the next toybox release, though.",True,{}
landley/toybox,https://github.com/landley/toybox,85,2018-03-11T04:18:26Z,2018-03-12T15:41:38Z,2018-03-12T15:41:38Z,CLOSED,False,9513,109,7,https://github.com/gavinhoward,Add bc to pending,6,[],https://github.com/landley/toybox/pull/85,https://github.com/gavinhoward,2,https://github.com/landley/toybox/pull/85#issuecomment-372088639,"This bc is passing all math tests, and it successfully runs the Linux timeconst.bc script for all values from 0 to 10000, which is all that that particular script should need.
It is not done yet. I am planning to fuzz this for two weeks starting next week, and then I need to test it on more scripts as well. That's why I would like this in pending, not in posix. I am hoping to get it in posix by the next toybox release, though.","Oh, I forgot to say why I put everything in one file.
The only thing that I could think of that other stuff in toybox might use is the vector (resizable array). However, it is really small code, so I didn't see any benefit to splitting it.
It is just under 10,000 lines, though.",True,{}
landley/toybox,https://github.com/landley/toybox,85,2018-03-11T04:18:26Z,2018-03-12T15:41:38Z,2018-03-12T15:41:38Z,CLOSED,False,9513,109,7,https://github.com/gavinhoward,Add bc to pending,6,[],https://github.com/landley/toybox/pull/85,https://github.com/gavinhoward,3,https://github.com/landley/toybox/pull/85#issuecomment-372355478,"This bc is passing all math tests, and it successfully runs the Linux timeconst.bc script for all values from 0 to 10000, which is all that that particular script should need.
It is not done yet. I am planning to fuzz this for two weeks starting next week, and then I need to test it on more scripts as well. That's why I would like this in pending, not in posix. I am hoping to get it in posix by the next toybox release, though.","I accidentally pulled master, not merged. Will reopen.",True,{}
landley/toybox,https://github.com/landley/toybox,86,2018-03-12T15:50:04Z,2018-03-12T22:06:14Z,2018-03-12T22:06:14Z,CLOSED,False,9323,0,1,https://github.com/gavinhoward,Add bc to pending (second attempt),1,[],https://github.com/landley/toybox/pull/86,https://github.com/gavinhoward,1,https://github.com/landley/toybox/pull/86,"This is my second attempt to add bc to pending. I accidentally pulled from toybox and did not merge, which polluted the history.
This bc has been tested and found to work on basic math, as well as the Linux timeconst.bc script. However, it has not been thoroughly tested. Once it has, I will ask to move it to posix.
I decided to put all of the code into one file because there was only a small bit of code (vectors, aka resizable arrays) that might be useful to other commands. Yes, it is (just under) 10,000 loc. However, it must be remembered that this implements a complete programming language, including an interpreter.","This is my second attempt to add bc to pending. I accidentally pulled from toybox and did not merge, which polluted the history.
This bc has been tested and found to work on basic math, as well as the Linux timeconst.bc script. However, it has not been thoroughly tested. Once it has, I will ask to move it to posix.
I decided to put all of the code into one file because there was only a small bit of code (vectors, aka resizable arrays) that might be useful to other commands. Yes, it is (just under) 10,000 loc. However, it must be remembered that this implements a complete programming language, including an interpreter.",True,{}
landley/toybox,https://github.com/landley/toybox,86,2018-03-12T15:50:04Z,2018-03-12T22:06:14Z,2018-03-12T22:06:14Z,CLOSED,False,9323,0,1,https://github.com/gavinhoward,Add bc to pending (second attempt),1,[],https://github.com/landley/toybox/pull/86,https://github.com/gavinhoward,2,https://github.com/landley/toybox/pull/86#issuecomment-372475578,"This is my second attempt to add bc to pending. I accidentally pulled from toybox and did not merge, which polluted the history.
This bc has been tested and found to work on basic math, as well as the Linux timeconst.bc script. However, it has not been thoroughly tested. Once it has, I will ask to move it to posix.
I decided to put all of the code into one file because there was only a small bit of code (vectors, aka resizable arrays) that might be useful to other commands. Yes, it is (just under) 10,000 loc. However, it must be remembered that this implements a complete programming language, including an interpreter.","In answer to an email to the toybox mailing list (that I didn't get because I was not subscribed to the mailing list at the time) to the previous (now defunct) PR, , this bc passes all math tests for +, -, *, /, %, ^, and sqrt.
I don't know how to set up tests for bc in toybox. I did, however, write my tests so that I could test the bc when integrated into toybox. I could add tests if you would like.",True,{}
landley/toybox,https://github.com/landley/toybox,86,2018-03-12T15:50:04Z,2018-03-12T22:06:14Z,2018-03-12T22:06:14Z,CLOSED,False,9323,0,1,https://github.com/gavinhoward,Add bc to pending (second attempt),1,[],https://github.com/landley/toybox/pull/86,https://github.com/gavinhoward,3,https://github.com/landley/toybox/pull/86#issuecomment-372478664,"This is my second attempt to add bc to pending. I accidentally pulled from toybox and did not merge, which polluted the history.
This bc has been tested and found to work on basic math, as well as the Linux timeconst.bc script. However, it has not been thoroughly tested. Once it has, I will ask to move it to posix.
I decided to put all of the code into one file because there was only a small bit of code (vectors, aka resizable arrays) that might be useful to other commands. Yes, it is (just under) 10,000 loc. However, it must be remembered that this implements a complete programming language, including an interpreter.",I will also close this PR because I hadn't realized that you had already pulled the code in. (GitHub did not tell me for some reason.),True,{}
landley/toybox,https://github.com/landley/toybox,87,2018-03-13T00:12:04Z,2018-03-17T14:06:21Z,2018-03-17T14:06:22Z,CLOSED,False,725,873,1,https://github.com/gavinhoward,Fix some of landley's concerns (DO NOT MERGE),41,[],https://github.com/landley/toybox/pull/87,https://github.com/gavinhoward,1,https://github.com/landley/toybox/pull/87,"DO NOT MERGE THIS. Yet.
This PR fixes some of Rob Landley's concerns regarding the bc. I expect to add to this as more concerns come to light (ie, this is a staging area for requested changes).
I found as many style problems as I could with variable declarations and fixed all of them. I also updated my release script to change ""bcg."" to ""TT."" which would make this look more like other toys in toybox. I also got rid of the flags that I defined by hand in my repo.","DO NOT MERGE THIS. Yet.
This PR fixes some of Rob Landley's concerns regarding the bc. I expect to add to this as more concerns come to light (ie, this is a staging area for requested changes).
I found as many style problems as I could with variable declarations and fixed all of them. I also updated my release script to change ""bcg."" to ""TT."" which would make this look more like other toys in toybox. I also got rid of the flags that I defined by hand in my repo.",True,{}
landley/toybox,https://github.com/landley/toybox,87,2018-03-13T00:12:04Z,2018-03-17T14:06:21Z,2018-03-17T14:06:22Z,CLOSED,False,725,873,1,https://github.com/gavinhoward,Fix some of landley's concerns (DO NOT MERGE),41,[],https://github.com/landley/toybox/pull/87,https://github.com/gavinhoward,2,https://github.com/landley/toybox/pull/87#issuecomment-372537014,"DO NOT MERGE THIS. Yet.
This PR fixes some of Rob Landley's concerns regarding the bc. I expect to add to this as more concerns come to light (ie, this is a staging area for requested changes).
I found as many style problems as I could with variable declarations and fixed all of them. I also updated my release script to change ""bcg."" to ""TT."" which would make this look more like other toys in toybox. I also got rid of the flags that I defined by hand in my repo.","I have made more changes to my copy of toybox. The script should now be in line with landley's copy, with a few differences (to reduce loc). All of these changes were accomplished by using an automated release script.
Also, @landley introduced a logic error when handling command-line argument flags. This PR fixes that.
Again, DO NOT MERGE.",True,{}
landley/toybox,https://github.com/landley/toybox,87,2018-03-13T00:12:04Z,2018-03-17T14:06:21Z,2018-03-17T14:06:22Z,CLOSED,False,725,873,1,https://github.com/gavinhoward,Fix some of landley's concerns (DO NOT MERGE),41,[],https://github.com/landley/toybox/pull/87,https://github.com/landley,3,https://github.com/landley/toybox/pull/87#issuecomment-372716868,"DO NOT MERGE THIS. Yet.
This PR fixes some of Rob Landley's concerns regarding the bc. I expect to add to this as more concerns come to light (ie, this is a staging area for requested changes).
I found as many style problems as I could with variable declarations and fixed all of them. I also updated my release script to change ""bcg."" to ""TT."" which would make this look more like other toys in toybox. I also got rid of the flags that I defined by hand in my repo.","On 03/12/2018 10:43 PM, Gavin D. Howard wrote:
 I have made more changes to my copy of toybox. The script should now be in line
 with landley's copy, with a few differences (to reduce loc). All of these
 changes were accomplished by using an automated release script.

 Also, @landley <https://github.com/landley> introduced a logic error when
 handling command-line argument flags. This PR fixes that.
Yeah, sorry. I fixed it in the following pass last night (forgot to hit send on
the email until this morning).

Does posting them to the mailing list work for you?

Rob",True,{}
landley/toybox,https://github.com/landley/toybox,87,2018-03-13T00:12:04Z,2018-03-17T14:06:21Z,2018-03-17T14:06:22Z,CLOSED,False,725,873,1,https://github.com/gavinhoward,Fix some of landley's concerns (DO NOT MERGE),41,[],https://github.com/landley/toybox/pull/87,https://github.com/gavinhoward,4,https://github.com/landley/toybox/pull/87#issuecomment-372731924,"DO NOT MERGE THIS. Yet.
This PR fixes some of Rob Landley's concerns regarding the bc. I expect to add to this as more concerns come to light (ie, this is a staging area for requested changes).
I found as many style problems as I could with variable declarations and fixed all of them. I also updated my release script to change ""bcg."" to ""TT."" which would make this look more like other toys in toybox. I also got rid of the flags that I defined by hand in my repo.",It does. I am working on changes.,True,{}
landley/toybox,https://github.com/landley/toybox,87,2018-03-13T00:12:04Z,2018-03-17T14:06:21Z,2018-03-17T14:06:22Z,CLOSED,False,725,873,1,https://github.com/gavinhoward,Fix some of landley's concerns (DO NOT MERGE),41,[],https://github.com/landley/toybox/pull/87,https://github.com/gavinhoward,5,https://github.com/landley/toybox/pull/87#issuecomment-372785497,"DO NOT MERGE THIS. Yet.
This PR fixes some of Rob Landley's concerns regarding the bc. I expect to add to this as more concerns come to light (ie, this is a staging area for requested changes).
I found as many style problems as I could with variable declarations and fixed all of them. I also updated my release script to change ""bcg."" to ""TT."" which would make this look more like other toys in toybox. I also got rid of the flags that I defined by hand in my repo.","I have managed to remove some lines of code myself using something that I had intended to do but had missed. However, these changes will not be compatible with you are currently doing. I will attempt to resolve merge conflicts later when you are satisfied.",True,{}
landley/toybox,https://github.com/landley/toybox,87,2018-03-13T00:12:04Z,2018-03-17T14:06:21Z,2018-03-17T14:06:22Z,CLOSED,False,725,873,1,https://github.com/gavinhoward,Fix some of landley's concerns (DO NOT MERGE),41,[],https://github.com/landley/toybox/pull/87,https://github.com/landley,6,https://github.com/landley/toybox/pull/87#issuecomment-372795809,"DO NOT MERGE THIS. Yet.
This PR fixes some of Rob Landley's concerns regarding the bc. I expect to add to this as more concerns come to light (ie, this is a staging area for requested changes).
I found as many style problems as I could with variable declarations and fixed all of them. I also updated my release script to change ""bcg."" to ""TT."" which would make this look more like other toys in toybox. I also got rid of the flags that I defined by hand in my repo.","On 03/13/2018 02:14 PM, Gavin D. Howard wrote:
 I have managed to remove some lines of code myself using something that I had
 intended to do but had missed. However, these changes will not be compatible
 with you are currently doing. I will attempt to resolve merge conflicts later
 when you are satisfied.
I can just replace what I've got with your update and then redo cleanups on top
of it.

Rob",True,{}
landley/toybox,https://github.com/landley/toybox,87,2018-03-13T00:12:04Z,2018-03-17T14:06:21Z,2018-03-17T14:06:22Z,CLOSED,False,725,873,1,https://github.com/gavinhoward,Fix some of landley's concerns (DO NOT MERGE),41,[],https://github.com/landley/toybox/pull/87,https://github.com/gavinhoward,7,https://github.com/landley/toybox/pull/87#issuecomment-372803142,"DO NOT MERGE THIS. Yet.
This PR fixes some of Rob Landley's concerns regarding the bc. I expect to add to this as more concerns come to light (ie, this is a staging area for requested changes).
I found as many style problems as I could with variable declarations and fixed all of them. I also updated my release script to change ""bcg."" to ""TT."" which would make this look more like other toys in toybox. I also got rid of the flags that I defined by hand in my repo.","Okay. That's fine too, though I was working on even more changes and a bug fix, if you want them.",True,{}
landley/toybox,https://github.com/landley/toybox,87,2018-03-13T00:12:04Z,2018-03-17T14:06:21Z,2018-03-17T14:06:22Z,CLOSED,False,725,873,1,https://github.com/gavinhoward,Fix some of landley's concerns (DO NOT MERGE),41,[],https://github.com/landley/toybox/pull/87,https://github.com/landley,8,https://github.com/landley/toybox/pull/87#issuecomment-372811804,"DO NOT MERGE THIS. Yet.
This PR fixes some of Rob Landley's concerns regarding the bc. I expect to add to this as more concerns come to light (ie, this is a staging area for requested changes).
I found as many style problems as I could with variable declarations and fixed all of them. I also updated my release script to change ""bcg."" to ""TT."" which would make this look more like other toys in toybox. I also got rid of the flags that I defined by hand in my repo.","On 03/13/2018 03:15 PM, Gavin D. Howard wrote:
 Okay. That's fine too, though I was working on even more changes and a bug fix,
 if you want them.
Poke me when you've got a resync point.

Rob",True,{}
landley/toybox,https://github.com/landley/toybox,87,2018-03-13T00:12:04Z,2018-03-17T14:06:21Z,2018-03-17T14:06:22Z,CLOSED,False,725,873,1,https://github.com/gavinhoward,Fix some of landley's concerns (DO NOT MERGE),41,[],https://github.com/landley/toybox/pull/87,https://github.com/gavinhoward,9,https://github.com/landley/toybox/pull/87#issuecomment-372834843,"DO NOT MERGE THIS. Yet.
This PR fixes some of Rob Landley's concerns regarding the bc. I expect to add to this as more concerns come to light (ie, this is a staging area for requested changes).
I found as many style problems as I could with variable declarations and fixed all of them. I also updated my release script to change ""bcg."" to ""TT."" which would make this look more like other toys in toybox. I also got rid of the flags that I defined by hand in my repo.","Poke.
This has been updated to a point where (I think) the only change that you have talked about that hasn't been implemented is inlining bc_vm_init(). I can revisit that later, but for now, it is outside of what I can do.
A list of things I did:

Removed all of the globals you removed.
Inlined bc_exec().
Removed the globals struct that I missed.
Removed spurious casts (thanks for that, I actually kept that change in my repo).
Removed BC_NUM_ZERO(), BC_NUM_NEG_ONE() and BC_NUM_POS_ONE().
Removed all references to unsigned char.
Various other style fixes.

I should thank you for using -funsigned-char by the way. I did not know about it, and when I was integrating the first attempt, it caused me to find bugs in my math.",True,{}
landley/toybox,https://github.com/landley/toybox,87,2018-03-13T00:12:04Z,2018-03-17T14:06:21Z,2018-03-17T14:06:22Z,CLOSED,False,725,873,1,https://github.com/gavinhoward,Fix some of landley's concerns (DO NOT MERGE),41,[],https://github.com/landley/toybox/pull/87,https://github.com/gavinhoward,10,https://github.com/landley/toybox/pull/87#issuecomment-373922637,"DO NOT MERGE THIS. Yet.
This PR fixes some of Rob Landley's concerns regarding the bc. I expect to add to this as more concerns come to light (ie, this is a staging area for requested changes).
I found as many style problems as I could with variable declarations and fixed all of them. I also updated my release script to change ""bcg."" to ""TT."" which would make this look more like other toys in toybox. I also got rid of the flags that I defined by hand in my repo.","Per my email to the mailing list, I am closing this to continue working on the bc to make it bulletproof before I submit it for toybox.",True,{}
landley/toybox,https://github.com/landley/toybox,89,2018-04-19T23:48:41Z,2018-06-03T18:11:48Z,2018-06-03T18:11:48Z,CLOSED,False,9,1,1,https://github.com/filipperich,Accept OACK when requesting a file.,1,[],https://github.com/landley/toybox/pull/89,https://github.com/filipperich,1,https://github.com/landley/toybox/pull/89,"Optionally, accept and acknowledge OACK from server after sending original RRQ, if the server implements RFC2347 and responds first with an OACK before sending DATA packets.","Optionally, accept and acknowledge OACK from server after sending original RRQ, if the server implements RFC2347 and responds first with an OACK before sending DATA packets.",True,{}
landley/toybox,https://github.com/landley/toybox,89,2018-04-19T23:48:41Z,2018-06-03T18:11:48Z,2018-06-03T18:11:48Z,CLOSED,False,9,1,1,https://github.com/filipperich,Accept OACK when requesting a file.,1,[],https://github.com/landley/toybox/pull/89,https://github.com/landley,2,https://github.com/landley/toybox/pull/89#issuecomment-394180429,"Optionally, accept and acknowledge OACK from server after sending original RRQ, if the server implements RFC2347 and responds first with an OACK before sending DATA packets.",Applied.,True,{}
landley/toybox,https://github.com/landley/toybox,90,2018-05-07T06:20:30Z,2018-06-03T17:46:07Z,2018-06-03T17:46:07Z,CLOSED,False,1,1,1,https://github.com/mkmkme,"remove also ""symlink"" after file.test",1,[],https://github.com/landley/toybox/pull/90,https://github.com/mkmkme,1,https://github.com/landley/toybox/pull/90,,,True,{}
landley/toybox,https://github.com/landley/toybox,90,2018-05-07T06:20:30Z,2018-06-03T17:46:07Z,2018-06-03T17:46:07Z,CLOSED,False,1,1,1,https://github.com/mkmkme,"remove also ""symlink"" after file.test",1,[],https://github.com/landley/toybox/pull/90,https://github.com/landley,2,https://github.com/landley/toybox/pull/90#issuecomment-394178804,,applied,True,{}
landley/toybox,https://github.com/landley/toybox,92,2018-06-02T14:12:52Z,2018-06-03T17:45:40Z,2018-06-03T17:45:40Z,CLOSED,False,3,2,3,https://github.com/WallaceIT,call strip as $STRIP,1,[],https://github.com/landley/toybox/pull/92,https://github.com/WallaceIT,1,https://github.com/landley/toybox/pull/92,"This is useful e.g. for cross toolchains that define $CC and $STRIP
instead of $CROSS_COMPILE.","This is useful e.g. for cross toolchains that define $CC and $STRIP
instead of $CROSS_COMPILE.",True,{}
landley/toybox,https://github.com/landley/toybox,92,2018-06-02T14:12:52Z,2018-06-03T17:45:40Z,2018-06-03T17:45:40Z,CLOSED,False,3,2,3,https://github.com/WallaceIT,call strip as $STRIP,1,[],https://github.com/landley/toybox/pull/92,https://github.com/landley,2,https://github.com/landley/toybox/pull/92#issuecomment-394178777,"This is useful e.g. for cross toolchains that define $CC and $STRIP
instead of $CROSS_COMPILE.",applied,True,{}
landley/toybox,https://github.com/landley/toybox,93,2018-06-04T06:28:02Z,2018-08-03T15:42:07Z,2018-08-03T15:42:07Z,CLOSED,False,1,1,1,https://github.com/WallaceIT,configure: fix typo,1,[],https://github.com/landley/toybox/pull/93,https://github.com/WallaceIT,1,https://github.com/landley/toybox/pull/93,Fix typo introduced in PR #92,Fix typo introduced in PR #92,True,{}
landley/toybox,https://github.com/landley/toybox,93,2018-06-04T06:28:02Z,2018-08-03T15:42:07Z,2018-08-03T15:42:07Z,CLOSED,False,1,1,1,https://github.com/WallaceIT,configure: fix typo,1,[],https://github.com/landley/toybox/pull/93,https://github.com/landley,2,https://github.com/landley/toybox/pull/93#issuecomment-410293326,Fix typo introduced in PR #92,Applied.,True,{}
landley/toybox,https://github.com/landley/toybox,94,2018-06-10T15:09:51Z,,2018-06-10T15:14:18Z,OPEN,False,16,0,1,https://github.com/WallaceIT,toysh: add exec nonfork command,1,[],https://github.com/landley/toybox/pull/94,https://github.com/WallaceIT,1,https://github.com/landley/toybox/pull/94,,,True,{}
landley/toybox,https://github.com/landley/toybox,94,2018-06-10T15:09:51Z,,2018-06-10T15:14:18Z,OPEN,False,16,0,1,https://github.com/WallaceIT,toysh: add exec nonfork command,1,[],https://github.com/landley/toybox/pull/94,https://github.com/WallaceIT,2,https://github.com/landley/toybox/pull/94#issuecomment-396056918,,This is required also for correct execution of switch_root  in case toysh (or a bash script using it) is used as init process.,True,{}
landley/toybox,https://github.com/landley/toybox,95,2018-06-21T12:36:57Z,2018-08-03T15:37:17Z,2018-08-03T21:26:31Z,CLOSED,False,1,1,1,https://github.com/mkmkme,wget: use error_exit if file already exists,1,[],https://github.com/landley/toybox/pull/95,https://github.com/mkmkme,1,https://github.com/landley/toybox/pull/95,"With perror_exit, wget fails with ""file already exists: No such file or directory""","With perror_exit, wget fails with ""file already exists: No such file or directory""",True,{'THUMBS_UP': ['https://github.com/LipiLee']}
landley/toybox,https://github.com/landley/toybox,95,2018-06-21T12:36:57Z,2018-08-03T15:37:17Z,2018-08-03T21:26:31Z,CLOSED,False,1,1,1,https://github.com/mkmkme,wget: use error_exit if file already exists,1,[],https://github.com/landley/toybox/pull/95,https://github.com/landley,2,https://github.com/landley/toybox/pull/95#issuecomment-410291946,"With perror_exit, wget fails with ""file already exists: No such file or directory""",Fixed a slightly different way in commit 5e940c3,True,{}
landley/toybox,https://github.com/landley/toybox,95,2018-06-21T12:36:57Z,2018-08-03T15:37:17Z,2018-08-03T21:26:31Z,CLOSED,False,1,1,1,https://github.com/mkmkme,wget: use error_exit if file already exists,1,[],https://github.com/landley/toybox/pull/95,https://github.com/mkmkme,3,https://github.com/landley/toybox/pull/95#issuecomment-410292541,"With perror_exit, wget fails with ""file already exists: No such file or directory""","Hmm, are you sure you actually fixed this? After your commit, the message will look like
'foo' already exists: No such file or directory

because of perror_exit",True,{}
landley/toybox,https://github.com/landley/toybox,95,2018-06-21T12:36:57Z,2018-08-03T15:37:17Z,2018-08-03T21:26:31Z,CLOSED,False,1,1,1,https://github.com/mkmkme,wget: use error_exit if file already exists,1,[],https://github.com/landley/toybox/pull/95,https://github.com/landley,4,https://github.com/landley/toybox/pull/95#issuecomment-410380661,"With perror_exit, wget fails with ""file already exists: No such file or directory""","On 08/03/2018 10:39 AM, Reverend Homer wrote:
 Hmm, are you sure you actually /fixed/ this? After your commit, the message will
 look like

 |'foo' already exists: No such file or directory |

 because of |perror_exit|
Sigh. I converted perror->error locally, and then reverted it accidentally. My bad.

Rob",True,{}
landley/toybox,https://github.com/landley/toybox,97,2018-07-13T13:31:03Z,2018-08-03T15:25:24Z,2018-08-03T15:25:24Z,CLOSED,False,1,1,1,https://github.com/cdlscpmv,Fix typo in a macro name,1,[],https://github.com/landley/toybox/pull/97,https://github.com/cdlscpmv,1,https://github.com/landley/toybox/pull/97,,,True,{}
landley/toybox,https://github.com/landley/toybox,97,2018-07-13T13:31:03Z,2018-08-03T15:25:24Z,2018-08-03T15:25:24Z,CLOSED,False,1,1,1,https://github.com/cdlscpmv,Fix typo in a macro name,1,[],https://github.com/landley/toybox/pull/97,https://github.com/landley,2,https://github.com/landley/toybox/pull/97#issuecomment-410288342,,Commit 2352bd4,True,{}
landley/toybox,https://github.com/landley/toybox,100,2018-08-28T20:06:11Z,2020-08-04T20:40:00Z,2020-08-04T20:40:01Z,CLOSED,False,4,4,1,https://github.com/baileyforrest,test: Fix negation for comparison operators,1,[],https://github.com/landley/toybox/pull/100,https://github.com/baileyforrest,1,https://github.com/landley/toybox/pull/100,"The value is negated on the last line to reflect unix return code:
toys.exitval ^= not","The value is negated on the last line to reflect unix return code:
toys.exitval ^= not",True,{'THUMBS_UP': ['https://github.com/Ibuprophen']}
landley/toybox,https://github.com/landley/toybox,100,2018-08-28T20:06:11Z,2020-08-04T20:40:00Z,2020-08-04T20:40:01Z,CLOSED,False,4,4,1,https://github.com/baileyforrest,test: Fix negation for comparison operators,1,[],https://github.com/landley/toybox/pull/100,https://github.com/d4rken,2,https://github.com/landley/toybox/pull/100#issuecomment-416767261,"The value is negated on the last line to reflect unix return code:
toys.exitval ^= not",Is this related to #47?,True,{}
landley/toybox,https://github.com/landley/toybox,100,2018-08-28T20:06:11Z,2020-08-04T20:40:00Z,2020-08-04T20:40:01Z,CLOSED,False,4,4,1,https://github.com/baileyforrest,test: Fix negation for comparison operators,1,[],https://github.com/landley/toybox/pull/100,https://github.com/baileyforrest,3,https://github.com/landley/toybox/pull/100#issuecomment-416770207,"The value is negated on the last line to reflect unix return code:
toys.exitval ^= not","I don't think so. #47 assign toys.exitval:
e353058
The comparison operators all overwrite this value:
6d6a08b#diff-b1283e40e24032202900ace3816856d8L95
The main point of this PR is the value returned for comparison operators is incorrectly negated.
This is supposed to print ""good"", however with toybox it prints ""bad"":
if test ""foo"" = ""foo""; then echo good; else echo bad; fi",True,{}
landley/toybox,https://github.com/landley/toybox,100,2018-08-28T20:06:11Z,2020-08-04T20:40:00Z,2020-08-04T20:40:01Z,CLOSED,False,4,4,1,https://github.com/baileyforrest,test: Fix negation for comparison operators,1,[],https://github.com/landley/toybox/pull/100,https://github.com/spiterikevin,4,https://github.com/landley/toybox/pull/100#issuecomment-417449337,"The value is negated on the last line to reflect unix return code:
toys.exitval ^= not","It might be related because toys.exitval should be 0 for true and 1 for false. Testing #100 without applying #47 first might give opposite results because the uninitialized ""not"" can be messing up the result in line 112. Otherwise always test ! EXPRESSIONS to make sure ""not"" is initialized.
Lines 95-100, 107-108 should have inverse logic. I think 95-96 and 107-108 should be unchanged, and 97-100 should be corrected to <=, <, >=, > respectively.",True,{}
landley/toybox,https://github.com/landley/toybox,100,2018-08-28T20:06:11Z,2020-08-04T20:40:00Z,2020-08-04T20:40:01Z,CLOSED,False,4,4,1,https://github.com/baileyforrest,test: Fix negation for comparison operators,1,[],https://github.com/landley/toybox/pull/100,https://github.com/baileyforrest,5,https://github.com/landley/toybox/pull/100#issuecomment-417461149,"The value is negated on the last line to reflect unix return code:
toys.exitval ^= not","@spiterikevin , you are correct. I did not realize that 'not' was uninitialized. Apparently on our platform it is always '1'.
@d4rken , this does depend on #47 now.",True,{}
landley/toybox,https://github.com/landley/toybox,100,2018-08-28T20:06:11Z,2020-08-04T20:40:00Z,2020-08-04T20:40:01Z,CLOSED,False,4,4,1,https://github.com/baileyforrest,test: Fix negation for comparison operators,1,[],https://github.com/landley/toybox/pull/100,https://github.com/enh-google,6,https://github.com/landley/toybox/pull/100#issuecomment-668814031,"The value is negated on the last line to reflect unix return code:
toys.exitval ^= not","test.c was rewritten. if you have a specific test case (no pun intended) that still fails, let us know...",True,{}
landley/toybox,https://github.com/landley/toybox,101,2018-08-30T19:14:19Z,2018-08-30T19:29:20Z,2018-08-30T20:34:49Z,CLOSED,False,15,13,1,https://github.com/spiterikevin,Update test.c,1,[],https://github.com/landley/toybox/pull/101,https://github.com/spiterikevin,1,https://github.com/landley/toybox/pull/101,Comparisons were returning wrong results.,Comparisons were returning wrong results.,True,{'THUMBS_UP': ['https://github.com/Ibuprophen']}
landley/toybox,https://github.com/landley/toybox,101,2018-08-30T19:14:19Z,2018-08-30T19:29:20Z,2018-08-30T20:34:49Z,CLOSED,False,15,13,1,https://github.com/spiterikevin,Update test.c,1,[],https://github.com/landley/toybox/pull/101,https://github.com/spiterikevin,2,https://github.com/landley/toybox/pull/101#issuecomment-417439434,Comparisons were returning wrong results.,I see there already are some PRs addressing the issues. I put the unaddressed issues in #102.,True,{'THUMBS_UP': ['https://github.com/Ibuprophen']}
landley/toybox,https://github.com/landley/toybox,102,2018-08-30T20:33:02Z,2018-09-12T21:08:53Z,2018-09-12T21:08:53Z,CLOSED,False,9,7,1,https://github.com/spiterikevin,test.c crashes with incorrect number of arguments,1,[],https://github.com/landley/toybox/pull/102,https://github.com/spiterikevin,1,https://github.com/landley/toybox/pull/102,"There was a segment violation checking a non-existing parameter for ""!"". The argument count was also not handled correctly in other places.","There was a segment violation checking a non-existing parameter for ""!"". The argument count was also not handled correctly in other places.",True,{}
landley/toybox,https://github.com/landley/toybox,102,2018-08-30T20:33:02Z,2018-09-12T21:08:53Z,2018-09-12T21:08:53Z,CLOSED,False,9,7,1,https://github.com/spiterikevin,test.c crashes with incorrect number of arguments,1,[],https://github.com/landley/toybox/pull/102,https://github.com/spiterikevin,2,https://github.com/landley/toybox/pull/102#issuecomment-420798502,"There was a segment violation checking a non-existing parameter for ""!"". The argument count was also not handled correctly in other places.",Resolved by ef30441.,True,{}
landley/toybox,https://github.com/landley/toybox,109,2018-12-11T21:23:09Z,2018-12-11T22:48:56Z,2018-12-11T22:48:56Z,CLOSED,False,4,0,1,https://github.com/BookGin,cp: fix --preserve segfault bug,1,[],https://github.com/landley/toybox/pull/109,https://github.com/BookGin,1,https://github.com/landley/toybox/pull/109,#108,#108,True,{}
landley/toybox,https://github.com/landley/toybox,109,2018-12-11T21:23:09Z,2018-12-11T22:48:56Z,2018-12-11T22:48:56Z,CLOSED,False,4,0,1,https://github.com/BookGin,cp: fix --preserve segfault bug,1,[],https://github.com/landley/toybox/pull/109,https://github.com/landley,2,https://github.com/landley/toybox/pull/109#issuecomment-446392527,#108,"I implemented the ""default = mot"" value from the ubuntu man page instead. (That's why the optstr had the semicolon, to allow that.)",True,{}
landley/toybox,https://github.com/landley/toybox,110,2018-12-12T01:38:09Z,,2018-12-12T01:38:09Z,OPEN,False,1,1,1,https://github.com/leeyh8901,Fix memory issue in config2help,1,[],https://github.com/landley/toybox/pull/110,https://github.com/leeyh8901,1,https://github.com/landley/toybox/pull/110,"issue#103
#103
heap-use-after-free
Change to find double dash (CP_PRESERVE)","issue#103
#103
heap-use-after-free
Change to find double dash (CP_PRESERVE)",True,{}
landley/toybox,https://github.com/landley/toybox,113,2019-01-08T19:06:45Z,2019-01-18T17:25:00Z,2019-01-18T17:25:00Z,CLOSED,False,27,333,15,https://github.com/emaste,Intial FreeBSD support,7,[],https://github.com/landley/toybox/pull/113,https://github.com/emaste,1,https://github.com/landley/toybox/pull/113,"These four changes provide initial support for FreeBSD. The first three are final, while the workaround is a bit of a hack.
With this change I can build these posix toys:
% ./toybox
basename cal cat catv chgrp chmod chown cksum cmp comm cpio crc32
cut date dirname du egrep expand false fgrep file find grep groups
head iconv id kill killall5 link logger logname ls mkdir mkfifo nice
nl nohup od paste patch printf pwd renice rm rmdir sed sleep sort
split strings tee test time touch true tty uname uniq unlink uudecode
uuencode wc who whoami xargs

Notable missing POSIX toys: cp mv install df getconf ln ps top iotop pgrep pkill tail","These four changes provide initial support for FreeBSD. The first three are final, while the workaround is a bit of a hack.
With this change I can build these posix toys:
% ./toybox
basename cal cat catv chgrp chmod chown cksum cmp comm cpio crc32
cut date dirname du egrep expand false fgrep file find grep groups
head iconv id kill killall5 link logger logname ls mkdir mkfifo nice
nl nohup od paste patch printf pwd renice rm rmdir sed sleep sort
split strings tee test time touch true tty uname uniq unlink uudecode
uuencode wc who whoami xargs

Notable missing POSIX toys: cp mv install df getconf ln ps top iotop pgrep pkill tail",True,{}
landley/toybox,https://github.com/landley/toybox,113,2019-01-08T19:06:45Z,2019-01-18T17:25:00Z,2019-01-18T17:25:00Z,CLOSED,False,27,333,15,https://github.com/emaste,Intial FreeBSD support,7,[],https://github.com/landley/toybox/pull/113,https://github.com/landley,2,https://github.com/landley/toybox/pull/113#issuecomment-452511944,"These four changes provide initial support for FreeBSD. The first three are final, while the workaround is a bit of a hack.
With this change I can build these posix toys:
% ./toybox
basename cal cat catv chgrp chmod chown cksum cmp comm cpio crc32
cut date dirname du egrep expand false fgrep file find grep groups
head iconv id kill killall5 link logger logname ls mkdir mkfifo nice
nl nohup od paste patch printf pwd renice rm rmdir sed sleep sort
split strings tee test time touch true tty uname uniq unlink uudecode
uuencode wc who whoami xargs

Notable missing POSIX toys: cp mv install df getconf ln ps top iotop pgrep pkill tail","If you can't trust bash to be at a known absolute path, how can you trust env to be at a known absolute path? I've never understood the point of this gratuitous layer of indirection...",True,{}
landley/toybox,https://github.com/landley/toybox,113,2019-01-08T19:06:45Z,2019-01-18T17:25:00Z,2019-01-18T17:25:00Z,CLOSED,False,27,333,15,https://github.com/emaste,Intial FreeBSD support,7,[],https://github.com/landley/toybox/pull/113,https://github.com/landley,3,https://github.com/landley/toybox/pull/113#issuecomment-452512896,"These four changes provide initial support for FreeBSD. The first three are final, while the workaround is a bit of a hack.
With this change I can build these posix toys:
% ./toybox
basename cal cat catv chgrp chmod chown cksum cmp comm cpio crc32
cut date dirname du egrep expand false fgrep file find grep groups
head iconv id kill killall5 link logger logname ls mkdir mkfifo nice
nl nohup od paste patch printf pwd renice rm rmdir sed sleep sort
split strings tee test time touch true tty uname uniq unlink uudecode
uuencode wc who whoami xargs

Notable missing POSIX toys: cp mv install df getconf ln ps top iotop pgrep pkill tail",Apple has a sys/xattr.h? Only freebsd breaks here?,True,{}
landley/toybox,https://github.com/landley/toybox,113,2019-01-08T19:06:45Z,2019-01-18T17:25:00Z,2019-01-18T17:25:00Z,CLOSED,False,27,333,15,https://github.com/emaste,Intial FreeBSD support,7,[],https://github.com/landley/toybox/pull/113,https://github.com/landley,4,https://github.com/landley/toybox/pull/113#issuecomment-452518740,"These four changes provide initial support for FreeBSD. The first three are final, while the workaround is a bit of a hack.
With this change I can build these posix toys:
% ./toybox
basename cal cat catv chgrp chmod chown cksum cmp comm cpio crc32
cut date dirname du egrep expand false fgrep file find grep groups
head iconv id kill killall5 link logger logname ls mkdir mkfifo nice
nl nohup od paste patch printf pwd renice rm rmdir sed sleep sort
split strings tee test time touch true tty uname uniq unlink uudecode
uuencode wc who whoami xargs

Notable missing POSIX toys: cp mv install df getconf ln ps top iotop pgrep pkill tail",I think I've now applied everything but the env stuff.,True,{}
landley/toybox,https://github.com/landley/toybox,113,2019-01-08T19:06:45Z,2019-01-18T17:25:00Z,2019-01-18T17:25:00Z,CLOSED,False,27,333,15,https://github.com/emaste,Intial FreeBSD support,7,[],https://github.com/landley/toybox/pull/113,https://github.com/emaste,5,https://github.com/landley/toybox/pull/113#issuecomment-452519412,"These four changes provide initial support for FreeBSD. The first three are final, while the workaround is a bit of a hack.
With this change I can build these posix toys:
% ./toybox
basename cal cat catv chgrp chmod chown cksum cmp comm cpio crc32
cut date dirname du egrep expand false fgrep file find grep groups
head iconv id kill killall5 link logger logname ls mkdir mkfifo nice
nl nohup od paste patch printf pwd renice rm rmdir sed sleep sort
split strings tee test time touch true tty uname uniq unlink uudecode
uuencode wc who whoami xargs

Notable missing POSIX toys: cp mv install df getconf ln ps top iotop pgrep pkill tail","how can you trust env to be at a known absolute path?

Only that in practice every relevant system has a /usr/bin/env, and not every system has /bin/bash.",True,{}
landley/toybox,https://github.com/landley/toybox,113,2019-01-08T19:06:45Z,2019-01-18T17:25:00Z,2019-01-18T17:25:00Z,CLOSED,False,27,333,15,https://github.com/emaste,Intial FreeBSD support,7,[],https://github.com/landley/toybox/pull/113,https://github.com/landley,6,https://github.com/landley/toybox/pull/113#issuecomment-452521908,"These four changes provide initial support for FreeBSD. The first three are final, while the workaround is a bit of a hack.
With this change I can build these posix toys:
% ./toybox
basename cal cat catv chgrp chmod chown cksum cmp comm cpio crc32
cut date dirname du egrep expand false fgrep file find grep groups
head iconv id kill killall5 link logger logname ls mkdir mkfifo nice
nl nohup od paste patch printf pwd renice rm rmdir sed sleep sort
split strings tee test time touch true tty uname uniq unlink uudecode
uuencode wc who whoami xargs

Notable missing POSIX toys: cp mv install df getconf ln ps top iotop pgrep pkill tail","Only that in practice every relevant system has a /usr/bin/env,

Android hasn't got a /usr, we'll need to make a posix build container. (It's been discussed on the list.)

and not every system has /bin/bash.

MacOS did. What else is missing it?",True,{}
landley/toybox,https://github.com/landley/toybox,113,2019-01-08T19:06:45Z,2019-01-18T17:25:00Z,2019-01-18T17:25:00Z,CLOSED,False,27,333,15,https://github.com/emaste,Intial FreeBSD support,7,[],https://github.com/landley/toybox/pull/113,https://github.com/emaste,7,https://github.com/landley/toybox/pull/113#issuecomment-452525583,"These four changes provide initial support for FreeBSD. The first three are final, while the workaround is a bit of a hack.
With this change I can build these posix toys:
% ./toybox
basename cal cat catv chgrp chmod chown cksum cmp comm cpio crc32
cut date dirname du egrep expand false fgrep file find grep groups
head iconv id kill killall5 link logger logname ls mkdir mkfifo nice
nl nohup od paste patch printf pwd renice rm rmdir sed sleep sort
split strings tee test time touch true tty uname uniq unlink uudecode
uuencode wc who whoami xargs

Notable missing POSIX toys: cp mv install df getconf ln ps top iotop pgrep pkill tail","Hmm, interesting point about Android - I hadn't really considered Android as a build host before.

What else is missing it?

*BSD will generally have /usr/local/bin/bash - FreeBSD, OpenBSD, NetBSD, DragonflyBSD.",True,{}
landley/toybox,https://github.com/landley/toybox,113,2019-01-08T19:06:45Z,2019-01-18T17:25:00Z,2019-01-18T17:25:00Z,CLOSED,False,27,333,15,https://github.com/emaste,Intial FreeBSD support,7,[],https://github.com/landley/toybox/pull/113,https://github.com/landley,8,https://github.com/landley/toybox/pull/113#issuecomment-452541837,"These four changes provide initial support for FreeBSD. The first three are final, while the workaround is a bit of a hack.
With this change I can build these posix toys:
% ./toybox
basename cal cat catv chgrp chmod chown cksum cmp comm cpio crc32
cut date dirname du egrep expand false fgrep file find grep groups
head iconv id kill killall5 link logger logname ls mkdir mkfifo nice
nl nohup od paste patch printf pwd renice rm rmdir sed sleep sort
split strings tee test time touch true tty uname uniq unlink uudecode
uuencode wc who whoami xargs

Notable missing POSIX toys: cp mv install df getconf ln ps top iotop pgrep pkill tail","Android as a build host is paragraph 2 of http://landley.net/toybox/about.html and then most of the video below that. (The 2013 ""Why is toybox"" talk it has a lot of section links into the middle of...)",True,{'THUMBS_UP': ['https://github.com/cb88']}
landley/toybox,https://github.com/landley/toybox,113,2019-01-08T19:06:45Z,2019-01-18T17:25:00Z,2019-01-18T17:25:00Z,CLOSED,False,27,333,15,https://github.com/emaste,Intial FreeBSD support,7,[],https://github.com/landley/toybox/pull/113,https://github.com/emaste,9,https://github.com/landley/toybox/pull/113#issuecomment-455623992,"These four changes provide initial support for FreeBSD. The first three are final, while the workaround is a bit of a hack.
With this change I can build these posix toys:
% ./toybox
basename cal cat catv chgrp chmod chown cksum cmp comm cpio crc32
cut date dirname du egrep expand false fgrep file find grep groups
head iconv id kill killall5 link logger logname ls mkdir mkfifo nice
nl nohup od paste patch printf pwd renice rm rmdir sed sleep sort
split strings tee test time touch true tty uname uniq unlink uudecode
uuencode wc who whoami xargs

Notable missing POSIX toys: cp mv install df getconf ln ps top iotop pgrep pkill tail","Hrm, this refreshed with my experimental WIP. I'll close this pull request and submit another with changes proposed for upstream.",True,{'THUMBS_UP': ['https://github.com/Ibuprophen']}
landley/toybox,https://github.com/landley/toybox,115,2019-02-15T05:35:55Z,2019-02-15T15:21:23Z,2019-02-15T15:21:23Z,CLOSED,False,5,5,4,https://github.com/jasonspiro,"Fix typos: e.g. change ""cannonical"" to ""canonical"".",1,[],https://github.com/landley/toybox/pull/115,https://github.com/jasonspiro,1,https://github.com/landley/toybox/pull/115,"Background
The actual runnable code has never misspelled ""canonical"" or ""canonicalize"", but some code comments (and www/news.html) have occasionally misspelled one or both words.
This pull request fixes the misspellings.
Possible memory aid
Here's a possible memory aid which might help you in the future:
A ""canonical"" path is an official, authoritative path, as in ""canon law"".  A ""cannonical"" path is a trail you can use to transport heavy artillery which can shoot cannonballs at an enemy army.
So, canons improve your paths, but cannons explode and destroy them.
Conclusion
Thank you for continuing to maintain toybox!  I still don't miss the old Android toolbox at all.","Background
The actual runnable code has never misspelled ""canonical"" or ""canonicalize"", but some code comments (and www/news.html) have occasionally misspelled one or both words.
This pull request fixes the misspellings.
Possible memory aid
Here's a possible memory aid which might help you in the future:
A ""canonical"" path is an official, authoritative path, as in ""canon law"".  A ""cannonical"" path is a trail you can use to transport heavy artillery which can shoot cannonballs at an enemy army.
So, canons improve your paths, but cannons explode and destroy them.
Conclusion
Thank you for continuing to maintain toybox!  I still don't miss the old Android toolbox at all.",True,{}
landley/toybox,https://github.com/landley/toybox,115,2019-02-15T05:35:55Z,2019-02-15T15:21:23Z,2019-02-15T15:21:23Z,CLOSED,False,5,5,4,https://github.com/jasonspiro,"Fix typos: e.g. change ""cannonical"" to ""canonical"".",1,[],https://github.com/landley/toybox/pull/115,https://github.com/landley,2,https://github.com/landley/toybox/pull/115#issuecomment-464087909,"Background
The actual runnable code has never misspelled ""canonical"" or ""canonicalize"", but some code comments (and www/news.html) have occasionally misspelled one or both words.
This pull request fixes the misspellings.
Possible memory aid
Here's a possible memory aid which might help you in the future:
A ""canonical"" path is an official, authoritative path, as in ""canon law"".  A ""cannonical"" path is a trail you can use to transport heavy artillery which can shoot cannonballs at an enemy army.
So, canons improve your paths, but cannons explode and destroy them.
Conclusion
Thank you for continuing to maintain toybox!  I still don't miss the old Android toolbox at all.",Applied.,True,{'THUMBS_UP': ['https://github.com/Ibuprophen']}
landley/toybox,https://github.com/landley/toybox,116,2019-02-15T23:22:27Z,2019-02-18T11:05:25Z,2019-02-18T19:13:46Z,CLOSED,False,14,12,1,https://github.com/uprestor,route: fix command argument parsing,1,[],https://github.com/landley/toybox/pull/116,https://github.com/uprestor,1,https://github.com/landley/toybox/pull/116,Running 'route add default gw X' fails with message route: error resolving 'gw'.  Argument parsing code in get_next_params() and get_next_params_ipv6() is using *argv for parameter value instead of argv[1].,Running 'route add default gw X' fails with message route: error resolving 'gw'.  Argument parsing code in get_next_params() and get_next_params_ipv6() is using *argv for parameter value instead of argv[1].,True,{}
landley/toybox,https://github.com/landley/toybox,116,2019-02-15T23:22:27Z,2019-02-18T11:05:25Z,2019-02-18T19:13:46Z,CLOSED,False,14,12,1,https://github.com/uprestor,route: fix command argument parsing,1,[],https://github.com/landley/toybox/pull/116,https://github.com/landley,2,https://github.com/landley/toybox/pull/116#issuecomment-464498348,Running 'route add default gw X' fails with message route: error resolving 'gw'.  Argument parsing code in get_next_params() and get_next_params_ipv6() is using *argv for parameter value instead of argv[1].,"Thank you for this, but I have complete rewrite of this command pending based on the rtnetlink API. What's your use case, and would you be interested in testing the new version?",True,{}
landley/toybox,https://github.com/landley/toybox,116,2019-02-15T23:22:27Z,2019-02-18T11:05:25Z,2019-02-18T19:13:46Z,CLOSED,False,14,12,1,https://github.com/uprestor,route: fix command argument parsing,1,[],https://github.com/landley/toybox/pull/116,https://github.com/uprestor,3,https://github.com/landley/toybox/pull/116#issuecomment-464510471,Running 'route add default gw X' fails with message route: error resolving 'gw'.  Argument parsing code in get_next_params() and get_next_params_ipv6() is using *argv for parameter value instead of argv[1].,"I am using toybox for an internal project, and I needed the route(1) functionality.  I opened the PR to make sure the fix gets propagated upstream.  Having said that if you are in the process of a rewrite I'd be happy to test the new version.
Do you have a timeframe in mind for the new version?  If it is imminent I'd be happy to close this PR.  However, if you plan to release a new version before the rewrite would you mind merging this PR so that we don't loose the fix if we import a new version?",True,{}
landley/toybox,https://github.com/landley/toybox,116,2019-02-15T23:22:27Z,2019-02-18T11:05:25Z,2019-02-18T19:13:46Z,CLOSED,False,14,12,1,https://github.com/uprestor,route: fix command argument parsing,1,[],https://github.com/landley/toybox/pull/116,https://github.com/landley,4,https://github.com/landley/toybox/pull/116#issuecomment-464688869,Running 'route add default gw X' fails with message route: error resolving 'gw'.  Argument parsing code in get_next_params() and get_next_params_ipv6() is using *argv for parameter value instead of argv[1].,"Applied, but I'm probably checking in a complete replacement... I'll see what I can have ready by next weekend, maybe?
(It's always awkward replacing an existing implementation. When is the new one good enough, and how can it be without testing? In theory this is what pending is for, but people use things out of pending...)",True,{'THUMBS_UP': ['https://github.com/Ibuprophen']}
landley/toybox,https://github.com/landley/toybox,119,2019-02-21T22:32:45Z,2020-06-08T13:45:54Z,2020-06-08T13:45:54Z,CLOSED,False,1,1,1,https://github.com/kvanderkamp,Fix typo in help,1,[],https://github.com/landley/toybox/pull/119,https://github.com/kvanderkamp,1,https://github.com/landley/toybox/pull/119,Replace netsat with netstat in toys/net/netstat.c:15,Replace netsat with netstat in toys/net/netstat.c:15,True,{}
landley/toybox,https://github.com/landley/toybox,120,2019-02-25T05:25:22Z,,2019-02-25T05:34:06Z,OPEN,False,16,21,1,https://github.com/colrdavidson,arp: inline get_hw_add and minor sscanf error handling cleanup,1,[],https://github.com/landley/toybox/pull/120,https://github.com/colrdavidson,1,https://github.com/landley/toybox/pull/120,"This inlines get_hw_add into the single place it was invoked, and checks the return code on sscanf, rather than relying on len being set or not to spot parse issues. It also removes hw, replacing it directly with req.arp_ha.sa_data","This inlines get_hw_add into the single place it was invoked, and checks the return code on sscanf, rather than relying on len being set or not to spot parse issues. It also removes hw, replacing it directly with req.arp_ha.sa_data",True,{}
landley/toybox,https://github.com/landley/toybox,125,2019-03-25T21:56:25Z,2019-03-26T17:52:17Z,2019-03-26T17:52:17Z,CLOSED,False,5,1,2,https://github.com/koalaman,find: fix inverted -exec exit status,1,[],https://github.com/landley/toybox/pull/125,https://github.com/koalaman,1,https://github.com/landley/toybox/pull/125,"The return value of -exec was the command's exit code, which did not
account for the fact that an exit code of zero means success, while in
C, zero means failure. From POSIX:

the primary shall evaluate as true if the utility returns a zero
value as exit status

This commit flips the return value, and adds two tests.
This fixes #124","The return value of -exec was the command's exit code, which did not
account for the fact that an exit code of zero means success, while in
C, zero means failure. From POSIX:

the primary shall evaluate as true if the utility returns a zero
value as exit status

This commit flips the return value, and adds two tests.
This fixes #124",True,{}
landley/toybox,https://github.com/landley/toybox,125,2019-03-25T21:56:25Z,2019-03-26T17:52:17Z,2019-03-26T17:52:17Z,CLOSED,False,5,1,2,https://github.com/koalaman,find: fix inverted -exec exit status,1,[],https://github.com/landley/toybox/pull/125,https://github.com/treysis,2,https://github.com/landley/toybox/pull/125#issuecomment-476706298,"The return value of -exec was the command's exit code, which did not
account for the fact that an exit code of zero means success, while in
C, zero means failure. From POSIX:

the primary shall evaluate as true if the utility returns a zero
value as exit status

This commit flips the return value, and adds two tests.
This fixes #124","Seems to work as intended now. Didn't encounter any misbehavior of the fix. 👍
Thanks for fast response ;)",True,{}
landley/toybox,https://github.com/landley/toybox,136,2019-08-04T13:14:13Z,2019-09-17T13:17:48Z,2019-09-17T13:17:48Z,CLOSED,False,1,1,1,https://github.com/E5ten,Make mktemp --tmpdir's argument optional,1,[],https://github.com/landley/toybox/pull/136,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/136,This matches GNU mktemp which has an optional argument for --tmpdir,This matches GNU mktemp which has an optional argument for --tmpdir,True,{}
landley/toybox,https://github.com/landley/toybox,136,2019-08-04T13:14:13Z,2019-09-17T13:17:48Z,2019-09-17T13:17:48Z,CLOSED,False,1,1,1,https://github.com/E5ten,Make mktemp --tmpdir's argument optional,1,[],https://github.com/landley/toybox/pull/136,https://github.com/landley,2,https://github.com/landley/toybox/pull/136#issuecomment-518031308,This matches GNU mktemp which has an optional argument for --tmpdir,"Except it applies to both the short and longopt.
$ mktemp -p
mktemp: option requires an argument -- 'p'
Try 'mktemp --help' for more information.
$ ./mktemp -p
bash: ./mktemp: No such file or directory",True,{}
landley/toybox,https://github.com/landley/toybox,136,2019-08-04T13:14:13Z,2019-09-17T13:17:48Z,2019-09-17T13:17:48Z,CLOSED,False,1,1,1,https://github.com/E5ten,Make mktemp --tmpdir's argument optional,1,[],https://github.com/landley/toybox/pull/136,https://github.com/landley,3,https://github.com/landley/toybox/pull/136#issuecomment-531605332,This matches GNU mktemp which has an optional argument for --tmpdir,"Ahem: that second one should obviously be:
$ ./mktemp -p
/tmp/tmp.XXXXqDjUXU",True,{}
landley/toybox,https://github.com/landley/toybox,137,2019-08-23T07:41:53Z,2020-08-04T18:39:22Z,2020-08-04T18:39:22Z,CLOSED,False,57,32,2,https://github.com/pocomane,Refactor of the main function of the SH toy.,1,[],https://github.com/landley/toybox/pull/137,https://github.com/pocomane,1,https://github.com/landley/toybox/pull/137,"This follows #129 .
It always allows the first 3 recursive call to toy_exec_which. Moreover it introduce sh_run function that lets you to write C API system() replacement, e.g.:
typedef struct {
  char * buffer;
  int pos;
} buffer_iterator_data;

char* buffer_line_iterator( void * iterator_data, int prev_consumed ) {
  buffer_iterator_data *it = (buffer_iterator_data *) iterator_data;
  int last;
  for (last=0; it->buffer[last] != '\n' && it->buffer[last] != '\0'; last++);
  if (last == it->pos && it->buffer[last]=='\0') return NULL ;
  if (last == 0) {
    it->pos += 1;
    return buffer_line_iterator( iterator_data, prev_consumed );
  }
  char * result = strndup( it->buffer + it->pos, last - it->pos );
  it->pos = last;
  return result;
}

int toybox_capireplace_system( char * run ){
  buffer_iterator_data it = { run, 0 };
  return sh_run( buffer_line_iterator, &it );
}","This follows #129 .
It always allows the first 3 recursive call to toy_exec_which. Moreover it introduce sh_run function that lets you to write C API system() replacement, e.g.:
typedef struct {
  char * buffer;
  int pos;
} buffer_iterator_data;

char* buffer_line_iterator( void * iterator_data, int prev_consumed ) {
  buffer_iterator_data *it = (buffer_iterator_data *) iterator_data;
  int last;
  for (last=0; it->buffer[last] != '\n' && it->buffer[last] != '\0'; last++);
  if (last == it->pos && it->buffer[last]=='\0') return NULL ;
  if (last == 0) {
    it->pos += 1;
    return buffer_line_iterator( iterator_data, prev_consumed );
  }
  char * result = strndup( it->buffer + it->pos, last - it->pos );
  it->pos = last;
  return result;
}

int toybox_capireplace_system( char * run ){
  buffer_iterator_data it = { run, 0 };
  return sh_run( buffer_line_iterator, &it );
}",True,{}
landley/toybox,https://github.com/landley/toybox,137,2019-08-23T07:41:53Z,2020-08-04T18:39:22Z,2020-08-04T18:39:22Z,CLOSED,False,57,32,2,https://github.com/pocomane,Refactor of the main function of the SH toy.,1,[],https://github.com/landley/toybox/pull/137,https://github.com/enh-google,2,https://github.com/landley/toybox/pull/137#issuecomment-668759985,"This follows #129 .
It always allows the first 3 recursive call to toy_exec_which. Moreover it introduce sh_run function that lets you to write C API system() replacement, e.g.:
typedef struct {
  char * buffer;
  int pos;
} buffer_iterator_data;

char* buffer_line_iterator( void * iterator_data, int prev_consumed ) {
  buffer_iterator_data *it = (buffer_iterator_data *) iterator_data;
  int last;
  for (last=0; it->buffer[last] != '\n' && it->buffer[last] != '\0'; last++);
  if (last == it->pos && it->buffer[last]=='\0') return NULL ;
  if (last == 0) {
    it->pos += 1;
    return buffer_line_iterator( iterator_data, prev_consumed );
  }
  char * result = strndup( it->buffer + it->pos, last - it->pos );
  it->pos = last;
  return result;
}

int toybox_capireplace_system( char * run ){
  buffer_iterator_data it = { run, 0 };
  return sh_run( buffer_line_iterator, &it );
}",obsoleted by sh rewrite.,True,{}
landley/toybox,https://github.com/landley/toybox,138,2019-08-28T08:17:00Z,2020-01-28T17:18:33Z,2020-01-28T17:18:34Z,CLOSED,False,7,5,2,https://github.com/danil-ebali,tar not applying correct file attrs anymore,2,[],https://github.com/landley/toybox/pull/138,https://github.com/danil-ebali,1,https://github.com/landley/toybox/pull/138,"Seems like commit 8994b82
introduced this bug on regular files","Seems like commit 8994b82
introduced this bug on regular files",True,{'CONFUSED': ['https://github.com/Ibuprophen']}
landley/toybox,https://github.com/landley/toybox,138,2019-08-28T08:17:00Z,2020-01-28T17:18:33Z,2020-01-28T17:18:34Z,CLOSED,False,7,5,2,https://github.com/danil-ebali,tar not applying correct file attrs anymore,2,[],https://github.com/landley/toybox/pull/138,https://github.com/landley,2,https://github.com/landley/toybox/pull/138#issuecomment-525861233,"Seems like commit 8994b82
introduced this bug on regular files",Could I have an example of the problem to use as a test case please?,True,{'THUMBS_UP': ['https://github.com/Ibuprophen']}
landley/toybox,https://github.com/landley/toybox,138,2019-08-28T08:17:00Z,2020-01-28T17:18:33Z,2020-01-28T17:18:34Z,CLOSED,False,7,5,2,https://github.com/danil-ebali,tar not applying correct file attrs anymore,2,[],https://github.com/landley/toybox/pull/138,https://github.com/landley,3,https://github.com/landley/toybox/pull/138#issuecomment-536590204,"Seems like commit 8994b82
introduced this bug on regular files",Was this fixed by 1a7c18f or is it a separate issue?,True,{}
landley/toybox,https://github.com/landley/toybox,138,2019-08-28T08:17:00Z,2020-01-28T17:18:33Z,2020-01-28T17:18:34Z,CLOSED,False,7,5,2,https://github.com/danil-ebali,tar not applying correct file attrs anymore,2,[],https://github.com/landley/toybox/pull/138,https://github.com/landley,4,https://github.com/landley/toybox/pull/138#issuecomment-579359527,"Seems like commit 8994b82
introduced this bug on regular files",Assuming this was fixed (in the absence of a test case).,True,{}
landley/toybox,https://github.com/landley/toybox,143,2019-09-29T07:34:05Z,2019-09-30T18:53:35Z,2019-09-30T20:28:55Z,CLOSED,False,8,3,1,https://github.com/E5ten,Add ln -t,1,[],https://github.com/landley/toybox/pull/143,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/143,,,True,{'THUMBS_UP': ['https://github.com/Ibuprophen']}
landley/toybox,https://github.com/landley/toybox,143,2019-09-29T07:34:05Z,2019-09-30T18:53:35Z,2019-09-30T20:28:55Z,CLOSED,False,8,3,1,https://github.com/E5ten,Add ln -t,1,[],https://github.com/landley/toybox/pull/143,https://github.com/landley,2,https://github.com/landley/toybox/pull/143#issuecomment-536588845,,"What's your use case here?
I ask because you're the first person to want this flag. It's not in posix (https://pubs.opengroup.org/onlinepubs/9699919799/utilities/ln.html (or LSB https://refspecs.linuxfoundation.org/LSB_4.1.0/LSB-Core-generic/LSB-Core-generic/cmdbehav.html) and busybox is 20 years old and still doesn't have this flag, presumably because nobody's ever asked them for it?
I'm happy to add features people need, but filling them in just because they're not there is ""infrastructure in search of a user"". (If a user for such a thing ever does show up, there's no guarantee the feature meets their needs, and it's gone untested in the tree for long enough it may have bit-rotted anyway as the context of the project (and kernel, and libc, and compiler) shifted under it.
Since it's just as easy to add the thing later when there's a real user to provide immediate feedback, I kinda want to know the use case so I can at least add a real-world-inspired test to the test suite.",True,{}
landley/toybox,https://github.com/landley/toybox,143,2019-09-29T07:34:05Z,2019-09-30T18:53:35Z,2019-09-30T20:28:55Z,CLOSED,False,8,3,1,https://github.com/E5ten,Add ln -t,1,[],https://github.com/landley/toybox/pull/143,https://github.com/E5ten,3,https://github.com/landley/toybox/pull/143#issuecomment-536621513,,It's used by my distro for this: https://git.archlinux.org/svntogit/packages.git/tree/trunk/update-ca-trust?h=packages/ca-certificates and it's used within the build system for iwd. I can't think of other specific examples off the top of my head but I'm pretty sure there have been 1 or 2 other scripts that make use of it that I either had to modify or not use because of the -t use. At the moment I rebuild the package above locally with a modification to the script to not use -t but I'd prefer to just be able to use it as provided.,True,{}
landley/toybox,https://github.com/landley/toybox,143,2019-09-29T07:34:05Z,2019-09-30T18:53:35Z,2019-09-30T20:28:55Z,CLOSED,False,8,3,1,https://github.com/E5ten,Add ln -t,1,[],https://github.com/landley/toybox/pull/143,https://github.com/landley,4,https://github.com/landley/toybox/pull/143#issuecomment-536737595,,Applied 14f5f89,True,"{'HEART': ['https://github.com/Ibuprophen'], 'ROCKET': ['https://github.com/Ibuprophen']}"
landley/toybox,https://github.com/landley/toybox,144,2019-09-29T16:09:24Z,2019-10-02T18:10:39Z,2019-10-02T18:10:39Z,CLOSED,False,5,2,1,https://github.com/E5ten,Add rmdir --ignore-fail-on-non-empty,2,[],https://github.com/landley/toybox/pull/144,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/144,,,True,{}
landley/toybox,https://github.com/landley/toybox,144,2019-09-29T16:09:24Z,2019-10-02T18:10:39Z,2019-10-02T18:10:39Z,CLOSED,False,5,2,1,https://github.com/E5ten,Add rmdir --ignore-fail-on-non-empty,2,[],https://github.com/landley/toybox/pull/144,https://github.com/landley,2,https://github.com/landley/toybox/pull/144#issuecomment-536578360,,"This is a build break because - is an operator so using it in a FLAG() macro expands to a subtraction of multiple nonexistent variable names. Header generation converts - to _ in FLAG_* names (on line 109 of https://github.com/landley/toybox/blob/master/scripts/mkflags.c#L109 ) so if you use the FLAG(name_with_underscores_instead_of_minuses) version it should work.
Out of curiosity, what's your use case for this? (What script needs the -rmdir-ignore-fail-on-very-long-option-name-with-no-short-equivalent?)",True,{}
landley/toybox,https://github.com/landley/toybox,144,2019-09-29T16:09:24Z,2019-10-02T18:10:39Z,2019-10-02T18:10:39Z,CLOSED,False,5,2,1,https://github.com/E5ten,Add rmdir --ignore-fail-on-non-empty,2,[],https://github.com/landley/toybox/pull/144,https://github.com/E5ten,3,https://github.com/landley/toybox/pull/144#issuecomment-536626765,,"Huh, my local patch has _s because I encountered the build failure you mentioned, I don't know how I committed the previous one instead. In terms of my use-cases: https://github.com/dell/dkms/blob/master/dkms#L1801 https://git.archlinux.org/svntogit/packages.git/tree/trunk/xorg-mkfontscale.script?h=packages/xorg-mkfontscale
I do agree that the option name is ridiculously long.",True,{}
landley/toybox,https://github.com/landley/toybox,145,2019-10-03T02:50:45Z,2019-10-26T22:24:38Z,2019-10-26T22:24:38Z,CLOSED,False,26,2,1,https://github.com/E5ten,Add ln -r,4,[],https://github.com/landley/toybox/pull/145,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/145,"I had to make getdirname return ""."" instead of the file when the path has no '/', like dirname does, for my code to work correctly. I checked the new flag and toybox ln in general against GNU's ln tests.
Use cases:
https://git.archlinux.org/svntogit/packages.git/tree/trunk/update-ca-trust?h=packages/ca-certificates#n38
https://git.archlinux.org/svntogit/packages.git/tree/trunk/PKGBUILD?h=packages/linux#n201","I had to make getdirname return ""."" instead of the file when the path has no '/', like dirname does, for my code to work correctly. I checked the new flag and toybox ln in general against GNU's ln tests.
Use cases:
https://git.archlinux.org/svntogit/packages.git/tree/trunk/update-ca-trust?h=packages/ca-certificates#n38
https://git.archlinux.org/svntogit/packages.git/tree/trunk/PKGBUILD?h=packages/linux#n201",True,{'THUMBS_UP': ['https://github.com/Ibuprophen']}
landley/toybox,https://github.com/landley/toybox,145,2019-10-03T02:50:45Z,2019-10-26T22:24:38Z,2019-10-26T22:24:38Z,CLOSED,False,26,2,1,https://github.com/E5ten,Add ln -r,4,[],https://github.com/landley/toybox/pull/145,https://github.com/landley,2,https://github.com/landley/toybox/pull/145#issuecomment-537766063,"I had to make getdirname return ""."" instead of the file when the path has no '/', like dirname does, for my code to work correctly. I checked the new flag and toybox ln in general against GNU's ln tests.
Use cases:
https://git.archlinux.org/svntogit/packages.git/tree/trunk/update-ca-trust?h=packages/ca-certificates#n38
https://git.archlinux.org/svntogit/packages.git/tree/trunk/PKGBUILD?h=packages/linux#n201","The previous function always returned a malloc() you could free(), and the comment you modified said it ALWAYS returns a malloc. The new one sometimes returns a constant ""."" that you can't free(). These are not the same object lifetimes, and you can't easily tell when it's done what (if you send in a ""."" it will return ""."" but a malloced ""."").
I didn't use https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/functions/dirname.html because A) it modifies the string it points to and B) there's no clarity about the lifetime of the object it returns. Instead I made something that always returns an allocation you can free.",True,{}
landley/toybox,https://github.com/landley/toybox,145,2019-10-03T02:50:45Z,2019-10-26T22:24:38Z,2019-10-26T22:24:38Z,CLOSED,False,26,2,1,https://github.com/E5ten,Add ln -r,4,[],https://github.com/landley/toybox/pull/145,https://github.com/E5ten,3,https://github.com/landley/toybox/pull/145#issuecomment-537766673,"I had to make getdirname return ""."" instead of the file when the path has no '/', like dirname does, for my code to work correctly. I checked the new flag and toybox ln in general against GNU's ln tests.
Use cases:
https://git.archlinux.org/svntogit/packages.git/tree/trunk/update-ca-trust?h=packages/ca-certificates#n38
https://git.archlinux.org/svntogit/packages.git/tree/trunk/PKGBUILD?h=packages/linux#n201","Sorry about that, I'm incredibly new to C and didn't understand that there was another aspect to the benefit from getdirname than the lack of modification of what it points to. I'll try to find out how to do this correctly.",True,{}
landley/toybox,https://github.com/landley/toybox,145,2019-10-03T02:50:45Z,2019-10-26T22:24:38Z,2019-10-26T22:24:38Z,CLOSED,False,26,2,1,https://github.com/E5ten,Add ln -r,4,[],https://github.com/landley/toybox/pull/145,https://github.com/E5ten,4,https://github.com/landley/toybox/pull/145#issuecomment-537769287,"I had to make getdirname return ""."" instead of the file when the path has no '/', like dirname does, for my code to work correctly. I checked the new flag and toybox ln in general against GNU's ln tests.
Use cases:
https://git.archlinux.org/svntogit/packages.git/tree/trunk/update-ca-trust?h=packages/ca-certificates#n38
https://git.archlinux.org/svntogit/packages.git/tree/trunk/PKGBUILD?h=packages/linux#n201","I think this should make it always return a malloc now while still returning ""."" for paths with no /",True,{}
landley/toybox,https://github.com/landley/toybox,145,2019-10-03T02:50:45Z,2019-10-26T22:24:38Z,2019-10-26T22:24:38Z,CLOSED,False,26,2,1,https://github.com/E5ten,Add ln -r,4,[],https://github.com/landley/toybox/pull/145,https://github.com/E5ten,5,https://github.com/landley/toybox/pull/145#issuecomment-537924223,"I had to make getdirname return ""."" instead of the file when the path has no '/', like dirname does, for my code to work correctly. I checked the new flag and toybox ln in general against GNU's ln tests.
Use cases:
https://git.archlinux.org/svntogit/packages.git/tree/trunk/update-ca-trust?h=packages/ca-certificates#n38
https://git.archlinux.org/svntogit/packages.git/tree/trunk/PKGBUILD?h=packages/linux#n201","I guess that means I should free() my use of getdirname() after the fact? would this be right?
diff --git a/toys/posix/ln.c b/toys/posix/ln.c
index aa1b087f..e495a756 100644
--- a/toys/posix/ln.c
+++ b/toys/posix/ln.c
@@ -68,13 +68,14 @@ void ln_main(void)
     else new = dest;

     if (FLAG(r)) {
-      char *abs;
+      char *abs, *s = getdirname(new);

       if (!FLAG(s)) error_exit(""-r only with -s"");

       // common_path needs absolute paths for comparison
       try = xabspath(try, -1);
-      abs = xmprintf(""%s/%s"", xabspath(getdirname(new), -1), getbasename(new));
+      abs = xmprintf(""%s/%s"", xabspath(s, -1), getbasename(new));
+      free(s);
       rc = common_path(try, abs);
       try += rc;
       abs += rc;",True,{}
landley/toybox,https://github.com/landley/toybox,145,2019-10-03T02:50:45Z,2019-10-26T22:24:38Z,2019-10-26T22:24:38Z,CLOSED,False,26,2,1,https://github.com/E5ten,Add ln -r,4,[],https://github.com/landley/toybox/pull/145,https://github.com/E5ten,6,https://github.com/landley/toybox/pull/145#issuecomment-541431079,"I had to make getdirname return ""."" instead of the file when the path has no '/', like dirname does, for my code to work correctly. I checked the new flag and toybox ln in general against GNU's ln tests.
Use cases:
https://git.archlinux.org/svntogit/packages.git/tree/trunk/update-ca-trust?h=packages/ca-certificates#n38
https://git.archlinux.org/svntogit/packages.git/tree/trunk/PKGBUILD?h=packages/linux#n201",ping?,True,{}
landley/toybox,https://github.com/landley/toybox,145,2019-10-03T02:50:45Z,2019-10-26T22:24:38Z,2019-10-26T22:24:38Z,CLOSED,False,26,2,1,https://github.com/E5ten,Add ln -r,4,[],https://github.com/landley/toybox/pull/145,https://github.com/landley,7,https://github.com/landley/toybox/pull/145#issuecomment-541485132,"I had to make getdirname return ""."" instead of the file when the path has no '/', like dirname does, for my code to work correctly. I checked the new flag and toybox ln in general against GNU's ln tests.
Use cases:
https://git.archlinux.org/svntogit/packages.git/tree/trunk/update-ca-trust?h=packages/ca-certificates#n38
https://git.archlinux.org/svntogit/packages.git/tree/trunk/PKGBUILD?h=packages/linux#n201","Sorry, looking at it today. It's the lib/ change that's slowing it down, if I'm changing the behavior of that I want it to work right for everybody and replace dirname() out of libc. (I substituted that one into dirname.c and the test suite failed because ""/"" returns ""/"" and... working on it.)",True,{'THUMBS_UP': ['https://github.com/E5ten']}
landley/toybox,https://github.com/landley/toybox,145,2019-10-03T02:50:45Z,2019-10-26T22:24:38Z,2019-10-26T22:24:38Z,CLOSED,False,26,2,1,https://github.com/E5ten,Add ln -r,4,[],https://github.com/landley/toybox/pull/145,https://github.com/E5ten,8,https://github.com/landley/toybox/pull/145#issuecomment-541529706,"I had to make getdirname return ""."" instead of the file when the path has no '/', like dirname does, for my code to work correctly. I checked the new flag and toybox ln in general against GNU's ln tests.
Use cases:
https://git.archlinux.org/svntogit/packages.git/tree/trunk/update-ca-trust?h=packages/ca-certificates#n38
https://git.archlinux.org/svntogit/packages.git/tree/trunk/PKGBUILD?h=packages/linux#n201","@landley
char *getdirname(char *name)
{
  int i = 0;
  char *s = xstrdup(name), *ss = strrchr(s, '/');

  if (*++ss) i += 1;
  ss -= 1;
  if (ss) {
      while (ss && *ss && s != ss && *ss == '/' || i < 2) {
        if (*ss != '/') {
          if (!i++) *ss = '.';
         } else if (i < 2) *ss = 0;
        ss--;
      }
  } else {
    free(s);
    s = xstrdup(""."");
  }

  if (i < 2) {
    free(s);
    s = xstrdup(""."");
  } else if (!*s) {
    if (!i) free(s);
    s = xstrdup(""/"");
  }

  return s;
}

This is probably very overengineered and poorly done and I don't know for sure if it deals with the always returning a malloc correctly, or if all parts of it are necessary, and even if they are they very likely can be done more shortly, but it does pass all tests when substituted into dirname.c.
EDIT: yeah it's certainly got memory management issues, working on what I can already tell is a problem.",True,{}
landley/toybox,https://github.com/landley/toybox,145,2019-10-03T02:50:45Z,2019-10-26T22:24:38Z,2019-10-26T22:24:38Z,CLOSED,False,26,2,1,https://github.com/E5ten,Add ln -r,4,[],https://github.com/landley/toybox/pull/145,https://github.com/jmakip,9,https://github.com/landley/toybox/pull/145#issuecomment-541731346,"I had to make getdirname return ""."" instead of the file when the path has no '/', like dirname does, for my code to work correctly. I checked the new flag and toybox ln in general against GNU's ln tests.
Use cases:
https://git.archlinux.org/svntogit/packages.git/tree/trunk/update-ca-trust?h=packages/ca-certificates#n38
https://git.archlinux.org/svntogit/packages.git/tree/trunk/PKGBUILD?h=packages/linux#n201","I dont understand your first if structure.
What happens if your strrchr returns 0 into ss.
Then you  preincrement nullpointer and next line -= 1;
I would write it following way.
.patch attatched as .txt file
0001-lib-getdirname.txt
char *getdirname(char *name)
{
  char *s = xstrdup(name), *ss = strrchr(s, '/');

  if (!ss) free(s), xstrdup(""."");
  else {
    ss = s+strlen(s)-1;
    if (ss != s) do {
      *ss-- = 0;
    } while(*ss != '/');
  }

  return s;
}",True,{}
landley/toybox,https://github.com/landley/toybox,145,2019-10-03T02:50:45Z,2019-10-26T22:24:38Z,2019-10-26T22:24:38Z,CLOSED,False,26,2,1,https://github.com/E5ten,Add ln -r,4,[],https://github.com/landley/toybox/pull/145,https://github.com/E5ten,10,https://github.com/landley/toybox/pull/145#issuecomment-541749557,"I had to make getdirname return ""."" instead of the file when the path has no '/', like dirname does, for my code to work correctly. I checked the new flag and toybox ln in general against GNU's ln tests.
Use cases:
https://git.archlinux.org/svntogit/packages.git/tree/trunk/update-ca-trust?h=packages/ca-certificates#n38
https://git.archlinux.org/svntogit/packages.git/tree/trunk/PKGBUILD?h=packages/linux#n201","I don't really understand some of what I did there, I was exhausted when I wrote it and it's super messy and gross and definitely broken so far. I don't think yours works either yet though because for me when subbed into dirname.c all of the tests failed.",True,{}
landley/toybox,https://github.com/landley/toybox,145,2019-10-03T02:50:45Z,2019-10-26T22:24:38Z,2019-10-26T22:24:38Z,CLOSED,False,26,2,1,https://github.com/E5ten,Add ln -r,4,[],https://github.com/landley/toybox/pull/145,https://github.com/landley,11,https://github.com/landley/toybox/pull/145#issuecomment-541827830,"I had to make getdirname return ""."" instead of the file when the path has no '/', like dirname does, for my code to work correctly. I checked the new flag and toybox ln in general against GNU's ln tests.
Use cases:
https://git.archlinux.org/svntogit/packages.git/tree/trunk/update-ca-trust?h=packages/ca-certificates#n38
https://git.archlinux.org/svntogit/packages.git/tree/trunk/PKGBUILD?h=packages/linux#n201","I did:
char *getdirname(char *name)
{
char *s, *ss, *keep;
for (s = name, ss = keep = 0; ; s++) {
if (!*s) return keep ? xstrndup(name, keep-name) : xstrdup(""."");
if (*s != '/') keep = ss;
else if (s == name) keep = ss = s+1;
else if (s[-1] != '/') ss = s;
}
}
And make test_dirname passed, I'm just trying to audit and think through the callers of dirname() out of libc (which the man page says has two versions and I don't want two versions because behavior changing due to libc environment weirdness is bad) to make sure I understand what substituting it in everywhere would mean...
Sorry, changing libc infrastructure can lead me down ratholes...",True,{}
landley/toybox,https://github.com/landley/toybox,145,2019-10-03T02:50:45Z,2019-10-26T22:24:38Z,2019-10-26T22:24:38Z,CLOSED,False,26,2,1,https://github.com/E5ten,Add ln -r,4,[],https://github.com/landley/toybox/pull/145,https://github.com/landley,12,https://github.com/landley/toybox/pull/145#issuecomment-541828173,"I had to make getdirname return ""."" instead of the file when the path has no '/', like dirname does, for my code to work correctly. I checked the new flag and toybox ln in general against GNU's ln tests.
Use cases:
https://git.archlinux.org/svntogit/packages.git/tree/trunk/update-ca-trust?h=packages/ca-certificates#n38
https://git.archlinux.org/svntogit/packages.git/tree/trunk/PKGBUILD?h=packages/linux#n201","Github's comments don't understand indentation, I see. Bravo, github. Never try to do python or makefiles.",True,{}
landley/toybox,https://github.com/landley/toybox,145,2019-10-03T02:50:45Z,2019-10-26T22:24:38Z,2019-10-26T22:24:38Z,CLOSED,False,26,2,1,https://github.com/E5ten,Add ln -r,4,[],https://github.com/landley/toybox/pull/145,https://github.com/E5ten,13,https://github.com/landley/toybox/pull/145#issuecomment-541830496,"I had to make getdirname return ""."" instead of the file when the path has no '/', like dirname does, for my code to work correctly. I checked the new flag and toybox ln in general against GNU's ln tests.
Use cases:
https://git.archlinux.org/svntogit/packages.git/tree/trunk/update-ca-trust?h=packages/ca-certificates#n38
https://git.archlinux.org/svntogit/packages.git/tree/trunk/PKGBUILD?h=packages/linux#n201","char *getdirname(char *name) {
  char *end = name + strlen(name) - 1;

  while (*end == '/' && end > name) end--;
  while (*end != '/' && end >= name) end--;
  while (*end == '/' && end > name) end--;

  return ++end == name ? xstrdup(""."") : xstrndup(name, end - name);
}

I asked @Morganamilo for help with this, all credit goes to her for writing the function.",True,{}
landley/toybox,https://github.com/landley/toybox,145,2019-10-03T02:50:45Z,2019-10-26T22:24:38Z,2019-10-26T22:24:38Z,CLOSED,False,26,2,1,https://github.com/E5ten,Add ln -r,4,[],https://github.com/landley/toybox/pull/145,https://github.com/enh-google,14,https://github.com/landley/toybox/pull/145#issuecomment-541830693,"I had to make getdirname return ""."" instead of the file when the path has no '/', like dirname does, for my code to work correctly. I checked the new flag and toybox ln in general against GNU's ln tests.
Use cases:
https://git.archlinux.org/svntogit/packages.git/tree/trunk/update-ca-trust?h=packages/ca-certificates#n38
https://git.archlinux.org/svntogit/packages.git/tree/trunk/PKGBUILD?h=packages/linux#n201","(you need to use Markdown syntax and surround the code with ``` for blockquoting (which is what the examples above used), or if every line is indented then it's assumed. but since C code tends to start in column 0, you'll want ```.)",True,{}
landley/toybox,https://github.com/landley/toybox,145,2019-10-03T02:50:45Z,2019-10-26T22:24:38Z,2019-10-26T22:24:38Z,CLOSED,False,26,2,1,https://github.com/E5ten,Add ln -r,4,[],https://github.com/landley/toybox/pull/145,https://github.com/E5ten,15,https://github.com/landley/toybox/pull/145#issuecomment-541834266,"I had to make getdirname return ""."" instead of the file when the path has no '/', like dirname does, for my code to work correctly. I checked the new flag and toybox ln in general against GNU's ln tests.
Use cases:
https://git.archlinux.org/svntogit/packages.git/tree/trunk/update-ca-trust?h=packages/ca-certificates#n38
https://git.archlinux.org/svntogit/packages.git/tree/trunk/PKGBUILD?h=packages/linux#n201",My github didn't update and I didn't even see that one got posted 5 minutes before I commented.,True,{}
landley/toybox,https://github.com/landley/toybox,145,2019-10-03T02:50:45Z,2019-10-26T22:24:38Z,2019-10-26T22:24:38Z,CLOSED,False,26,2,1,https://github.com/E5ten,Add ln -r,4,[],https://github.com/landley/toybox/pull/145,https://github.com/jmakip,16,https://github.com/landley/toybox/pull/145#issuecomment-541858892,"I had to make getdirname return ""."" instead of the file when the path has no '/', like dirname does, for my code to work correctly. I checked the new flag and toybox ln in general against GNU's ln tests.
Use cases:
https://git.archlinux.org/svntogit/packages.git/tree/trunk/update-ca-trust?h=packages/ca-certificates#n38
https://git.archlinux.org/svntogit/packages.git/tree/trunk/PKGBUILD?h=packages/linux#n201","Tests in test_dirname looks fun. I just tested with these. Robs implementation is better but he should add null pointer check if want to behave what posix says

If path is a null pointer or points to an empty string, dirname() shall return a pointer to the string ""."" .

  char* path0 = ""/usr/lib/"";
  char* path1 = ""/usr/lib"";
  char* path2 = ""/usr/"";
  char* path3 = ""usr"";
  char* path4 = ""/"";
  char* path5 = ""."";
  char* path6 = "".."";
  char* path7 = """";
  char* path8 = 0;

  printf(""path  getdirname  \n"");
  printf(""%s  %s\n"", path0, getdirname(path0));
  printf(""%s  %s\n"", path1, getdirname(path1));
  printf(""%s  %s\n"", path2, getdirname(path2));
  printf(""%s  %s\n"", path3, getdirname(path3));
  printf(""%s  %s\n"", path4, getdirname(path4));
  printf(""%s  %s\n"", path5, getdirname(path5));
  printf(""%s  %s\n"", path6, getdirname(path6));
  printf(""%s  %s\n"", path7, getdirname(path7));
  printf(""%s  %s\n"", path8, getdirname(path8));
  //printf(""%s  %s\n"", path8, dirname(path8));",True,{}
landley/toybox,https://github.com/landley/toybox,145,2019-10-03T02:50:45Z,2019-10-26T22:24:38Z,2019-10-26T22:24:38Z,CLOSED,False,26,2,1,https://github.com/E5ten,Add ln -r,4,[],https://github.com/landley/toybox/pull/145,https://github.com/E5ten,17,https://github.com/landley/toybox/pull/145#issuecomment-543558996,"I had to make getdirname return ""."" instead of the file when the path has no '/', like dirname does, for my code to work correctly. I checked the new flag and toybox ln in general against GNU's ln tests.
Use cases:
https://git.archlinux.org/svntogit/packages.git/tree/trunk/update-ca-trust?h=packages/ca-certificates#n38
https://git.archlinux.org/svntogit/packages.git/tree/trunk/PKGBUILD?h=packages/linux#n201",@landley should I update this PR with working getdirname or are you going to add that to toybox yourself at which point I could rebase this PR over that?,True,{}
landley/toybox,https://github.com/landley/toybox,145,2019-10-03T02:50:45Z,2019-10-26T22:24:38Z,2019-10-26T22:24:38Z,CLOSED,False,26,2,1,https://github.com/E5ten,Add ln -r,4,[],https://github.com/landley/toybox/pull/145,https://github.com/landley,18,https://github.com/landley/toybox/pull/145#issuecomment-546543414,"I had to make getdirname return ""."" instead of the file when the path has no '/', like dirname does, for my code to work correctly. I checked the new flag and toybox ln in general against GNU's ln tests.
Use cases:
https://git.archlinux.org/svntogit/packages.git/tree/trunk/update-ca-trust?h=packages/ca-certificates#n38
https://git.archlinux.org/svntogit/packages.git/tree/trunk/PKGBUILD?h=packages/linux#n201",My reply got long so I posted it to the mailing list. http://lists.landley.net/pipermail/toybox-landley.net/2019-October/011127.html,True,{}
landley/toybox,https://github.com/landley/toybox,145,2019-10-03T02:50:45Z,2019-10-26T22:24:38Z,2019-10-26T22:24:38Z,CLOSED,False,26,2,1,https://github.com/E5ten,Add ln -r,4,[],https://github.com/landley/toybox/pull/145,https://github.com/landley,19,https://github.com/landley/toybox/pull/145#issuecomment-546644507,"I had to make getdirname return ""."" instead of the file when the path has no '/', like dirname does, for my code to work correctly. I checked the new flag and toybox ln in general against GNU's ln tests.
Use cases:
https://git.archlinux.org/svntogit/packages.git/tree/trunk/update-ca-trust?h=packages/ca-certificates#n38
https://git.archlinux.org/svntogit/packages.git/tree/trunk/PKGBUILD?h=packages/linux#n201","I broke down and implemented it myself. Sorry. (I'm a bit overwhelmed with incoming bug reports at the moment and I fly to Japan tuesday morning, so I'm trying to close tabs.)",True,{}
landley/toybox,https://github.com/landley/toybox,148,2019-10-10T18:08:11Z,,2019-11-11T18:02:57Z,OPEN,False,13,4,1,https://github.com/E5ten,expr: fix memory management,2,[],https://github.com/landley/toybox/pull/148,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/148,"Andy Chu's patch from the mailing list, modified slightly to fit the current source.
http://lists.landley.net/htdig.cgi/toybox-landley.net/2016-March/008113.html
This fixes #147 as well as fixing all remaining memory management issues in expr from what I can see (valgrind now gives no warnings or any indication of issues while previously it reported many invalid reads).","Andy Chu's patch from the mailing list, modified slightly to fit the current source.
http://lists.landley.net/htdig.cgi/toybox-landley.net/2016-March/008113.html
This fixes #147 as well as fixing all remaining memory management issues in expr from what I can see (valgrind now gives no warnings or any indication of issues while previously it reported many invalid reads).",True,{}
landley/toybox,https://github.com/landley/toybox,148,2019-10-10T18:08:11Z,,2019-11-11T18:02:57Z,OPEN,False,13,4,1,https://github.com/E5ten,expr: fix memory management,2,[],https://github.com/landley/toybox/pull/148,https://github.com/E5ten,2,https://github.com/landley/toybox/pull/148#issuecomment-552061402,"Andy Chu's patch from the mailing list, modified slightly to fit the current source.
http://lists.landley.net/htdig.cgi/toybox-landley.net/2016-March/008113.html
This fixes #147 as well as fixing all remaining memory management issues in expr from what I can see (valgrind now gives no warnings or any indication of issues while previously it reported many invalid reads).",ping,True,{}
landley/toybox,https://github.com/landley/toybox,148,2019-10-10T18:08:11Z,,2019-11-11T18:02:57Z,OPEN,False,13,4,1,https://github.com/E5ten,expr: fix memory management,2,[],https://github.com/landley/toybox/pull/148,https://github.com/E5ten,3,https://github.com/landley/toybox/pull/148#issuecomment-552508811,"Andy Chu's patch from the mailing list, modified slightly to fit the current source.
http://lists.landley.net/htdig.cgi/toybox-landley.net/2016-March/008113.html
This fixes #147 as well as fixing all remaining memory management issues in expr from what I can see (valgrind now gives no warnings or any indication of issues while previously it reported many invalid reads).",uh I did not mean to do that,True,{}
landley/toybox,https://github.com/landley/toybox,148,2019-10-10T18:08:11Z,,2019-11-11T18:02:57Z,OPEN,False,13,4,1,https://github.com/E5ten,expr: fix memory management,2,[],https://github.com/landley/toybox/pull/148,https://github.com/enh-google,4,https://github.com/landley/toybox/pull/148#issuecomment-552549501,"Andy Chu's patch from the mailing list, modified slightly to fit the current source.
http://lists.landley.net/htdig.cgi/toybox-landley.net/2016-March/008113.html
This fixes #147 as well as fixing all remaining memory management issues in expr from what I can see (valgrind now gives no warnings or any indication of issues while previously it reported many invalid reads).","(you might want to squash the two commits into one for ease of review. you probably also want to just send the patch on the list, because rob pays more attention to that than to the pull requests...)",True,{}
landley/toybox,https://github.com/landley/toybox,149,2019-10-15T03:08:34Z,2021-02-10T22:49:43Z,2021-02-11T09:44:26Z,CLOSED,False,19,11,1,https://github.com/E5ten,"WIP: add -t to cp, mv, and install",1,[],https://github.com/landley/toybox/pull/149,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/149,"I expect there will be issues within this, that said I did not find any immediately that I didn't fix before committing and I figured getting a WIP PR up would be the best way to expose further problems. In terms of use cases:
https://github.com/archlinux/mkinitcpio/blob/master/Makefile this uses cp -t
https://git.archlinux.org/svntogit/packages.git/tree/trunk/PKGBUILD?h=packages/linux and this uses both cp -t and install -t. I have not seen mv -t used, but saw no reason to leave it out for mv alone since GNU mv has it.","I expect there will be issues within this, that said I did not find any immediately that I didn't fix before committing and I figured getting a WIP PR up would be the best way to expose further problems. In terms of use cases:
https://github.com/archlinux/mkinitcpio/blob/master/Makefile this uses cp -t
https://git.archlinux.org/svntogit/packages.git/tree/trunk/PKGBUILD?h=packages/linux and this uses both cp -t and install -t. I have not seen mv -t used, but saw no reason to leave it out for mv alone since GNU mv has it.",True,{}
landley/toybox,https://github.com/landley/toybox,149,2019-10-15T03:08:34Z,2021-02-10T22:49:43Z,2021-02-11T09:44:26Z,CLOSED,False,19,11,1,https://github.com/E5ten,"WIP: add -t to cp, mv, and install",1,[],https://github.com/landley/toybox/pull/149,https://github.com/landley,2,https://github.com/landley/toybox/pull/149#issuecomment-544040937,"I expect there will be issues within this, that said I did not find any immediately that I didn't fix before committing and I figured getting a WIP PR up would be the best way to expose further problems. In terms of use cases:
https://github.com/archlinux/mkinitcpio/blob/master/Makefile this uses cp -t
https://git.archlinux.org/svntogit/packages.git/tree/trunk/PKGBUILD?h=packages/linux and this uses both cp -t and install -t. I have not seen mv -t used, but saw no reason to leave it out for mv alone since GNU mv has it.",I'm confused... what changed? (The diff of the 149.patch I downloaded earlier and the 149.patch I just downloaded is... large.),True,{}
landley/toybox,https://github.com/landley/toybox,149,2019-10-15T03:08:34Z,2021-02-10T22:49:43Z,2021-02-11T09:44:26Z,CLOSED,False,19,11,1,https://github.com/E5ten,"WIP: add -t to cp, mv, and install",1,[],https://github.com/landley/toybox/pull/149,https://github.com/landley,3,https://github.com/landley/toybox/pull/149#issuecomment-544047584,"I expect there will be issues within this, that said I did not find any immediately that I didn't fix before committing and I figured getting a WIP PR up would be the best way to expose further problems. In terms of use cases:
https://github.com/archlinux/mkinitcpio/blob/master/Makefile this uses cp -t
https://git.archlinux.org/svntogit/packages.git/tree/trunk/PKGBUILD?h=packages/linux and this uses both cp -t and install -t. I have not seen mv -t used, but saw no reason to leave it out for mv alone since GNU mv has it.","Is it just me or does:
+USE_MV(NEWTOY(mv, ""<1t:vnF(remove-destination)fit:[-ni]"", TOYFLAG_BIN))
Have t: in it twice?",True,{}
landley/toybox,https://github.com/landley/toybox,149,2019-10-15T03:08:34Z,2021-02-10T22:49:43Z,2021-02-11T09:44:26Z,CLOSED,False,19,11,1,https://github.com/E5ten,"WIP: add -t to cp, mv, and install",1,[],https://github.com/landley/toybox/pull/149,https://github.com/landley,4,https://github.com/landley/toybox/pull/149#issuecomment-544050609,"I expect there will be issues within this, that said I did not find any immediately that I didn't fix before committing and I figured getting a WIP PR up would be the best way to expose further problems. In terms of use cases:
https://github.com/archlinux/mkinitcpio/blob/master/Makefile this uses cp -t
https://git.archlinux.org/svntogit/packages.git/tree/trunk/PKGBUILD?h=packages/linux and this uses both cp -t and install -t. I have not seen mv -t used, but saw no reason to leave it out for mv alone since GNU mv has it.","if (!toys.optc && !TT.t) error_exit(""needs 2 args"");

So if you say ""cp"" by itself it'll say ""Needs 1 argument"", and then if you go ""cp file"" it'll say ""needs 2 args"" with no explanation, and different phrasing and capitalization. The current lib/args.c output is:
$ toybox cp blah
cp: Need 2 arguments (see ""cp --help"")
(Which comes from help_exit() rather than error_exit().)
Rob
P.S. There's a reason I generally do this stuff on the mailing list. You're gonna get a lot of short emails from this...",True,{}
landley/toybox,https://github.com/landley/toybox,149,2019-10-15T03:08:34Z,2021-02-10T22:49:43Z,2021-02-11T09:44:26Z,CLOSED,False,19,11,1,https://github.com/E5ten,"WIP: add -t to cp, mv, and install",1,[],https://github.com/landley/toybox/pull/149,https://github.com/enh-google,5,https://github.com/landley/toybox/pull/149#issuecomment-776910234,"I expect there will be issues within this, that said I did not find any immediately that I didn't fix before committing and I figured getting a WIP PR up would be the best way to expose further problems. In terms of use cases:
https://github.com/archlinux/mkinitcpio/blob/master/Makefile this uses cp -t
https://git.archlinux.org/svntogit/packages.git/tree/trunk/PKGBUILD?h=packages/linux and this uses both cp -t and install -t. I have not seen mv -t used, but saw no reason to leave it out for mv alone since GNU mv has it.","3d5cb06 adds -t to install, but not cp/mv.",True,{}
landley/toybox,https://github.com/landley/toybox,149,2019-10-15T03:08:34Z,2021-02-10T22:49:43Z,2021-02-11T09:44:26Z,CLOSED,False,19,11,1,https://github.com/E5ten,"WIP: add -t to cp, mv, and install",1,[],https://github.com/landley/toybox/pull/149,https://github.com/landley,6,https://github.com/landley/toybox/pull/149#issuecomment-777318284,"I expect there will be issues within this, that said I did not find any immediately that I didn't fix before committing and I figured getting a WIP PR up would be the best way to expose further problems. In terms of use cases:
https://github.com/archlinux/mkinitcpio/blob/master/Makefile this uses cp -t
https://git.archlinux.org/svntogit/packages.git/tree/trunk/PKGBUILD?h=packages/linux and this uses both cp -t and install -t. I have not seen mv -t used, but saw no reason to leave it out for mv alone since GNU mv has it.",Commit 6d615c7 then.,True,{}
landley/toybox,https://github.com/landley/toybox,150,2019-10-15T13:30:32Z,,2019-10-15T13:30:32Z,OPEN,False,5,4,1,https://github.com/E5ten,"Add -c to chmod, improve message, and switch to FLAG() macros",1,[],https://github.com/landley/toybox/pull/150,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/150,Use case: https://git.archlinux.org/svntogit/packages.git/tree/trunk/PKGBUILD?h=packages/linux,Use case: https://git.archlinux.org/svntogit/packages.git/tree/trunk/PKGBUILD?h=packages/linux,True,{}
landley/toybox,https://github.com/landley/toybox,153,2019-11-25T08:20:05Z,,2021-01-06T00:47:38Z,OPEN,False,13,9,1,https://github.com/E5ten,gzip: add -t,1,[],https://github.com/landley/toybox/pull/153,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/153,,,True,{}
landley/toybox,https://github.com/landley/toybox,153,2019-11-25T08:20:05Z,,2021-01-06T00:47:38Z,OPEN,False,13,9,1,https://github.com/E5ten,gzip: add -t,1,[],https://github.com/landley/toybox/pull/153,https://github.com/E5ten,2,https://github.com/landley/toybox/pull/153#issuecomment-569285688,,ping?,True,{}
landley/toybox,https://github.com/landley/toybox,153,2019-11-25T08:20:05Z,,2021-01-06T00:47:38Z,OPEN,False,13,9,1,https://github.com/E5ten,gzip: add -t,1,[],https://github.com/landley/toybox/pull/153,https://github.com/E5ten,3,https://github.com/landley/toybox/pull/153#issuecomment-748189551,,ping?,True,{}
landley/toybox,https://github.com/landley/toybox,153,2019-11-25T08:20:05Z,,2021-01-06T00:47:38Z,OPEN,False,13,9,1,https://github.com/E5ten,gzip: add -t,1,[],https://github.com/landley/toybox/pull/153,https://github.com/enh-google,4,https://github.com/landley/toybox/pull/153#issuecomment-754992365,,mail the patch to the mailing list? it's often easier to get rob's attention there :-),True,{}
landley/toybox,https://github.com/landley/toybox,156,2019-12-05T03:06:51Z,2019-12-05T19:38:16Z,2019-12-05T23:37:19Z,CLOSED,False,2,2,2,https://github.com/E5ten,Fix getopt optstring,1,[],https://github.com/landley/toybox/pull/156,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/156,Move longopts after their corresponding shortopts instead of before,Move longopts after their corresponding shortopts instead of before,True,{}
landley/toybox,https://github.com/landley/toybox,156,2019-12-05T03:06:51Z,2019-12-05T19:38:16Z,2019-12-05T23:37:19Z,CLOSED,False,2,2,2,https://github.com/E5ten,Fix getopt optstring,1,[],https://github.com/landley/toybox/pull/156,https://github.com/enh-google,2,https://github.com/landley/toybox/pull/156#issuecomment-561962097,Move longopts after their corresponding shortopts instead of before,add a test that would have caught the bug?,True,{}
landley/toybox,https://github.com/landley/toybox,156,2019-12-05T03:06:51Z,2019-12-05T19:38:16Z,2019-12-05T23:37:19Z,CLOSED,False,2,2,2,https://github.com/E5ten,Fix getopt optstring,1,[],https://github.com/landley/toybox/pull/156,https://github.com/landley,3,https://github.com/landley/toybox/pull/156#issuecomment-562280669,Move longopts after their corresponding shortopts instead of before,"A fully populated test suite would test every short option and every long alias, and all the corner
cases for high and low ranges in each, feed non-numeric values into each numeric option, and so on. (Possibly the template shell script to do that could be generated from the option string, although the expected output wouldn't be unless you wanted 'exact match' of 'whatever it happens to produce' which isn't helpful. That by itself wouldn't have caught the above because it would have generated tests that matched the code, but then regression testing against a second implementation ala IETF procedure would have caught the discrepancy.)
But until/unless I get a chance to open that can of worms, I don't see much point in adding a single ""do any longopts work at all"" test to this command and not the others. I agree ""we found a bug, we should add a test"" is a good principle, but it's a drop in a bucket in this instance.",True,{}
landley/toybox,https://github.com/landley/toybox,156,2019-12-05T03:06:51Z,2019-12-05T19:38:16Z,2019-12-05T23:37:19Z,CLOSED,False,2,2,2,https://github.com/E5ten,Fix getopt optstring,1,[],https://github.com/landley/toybox/pull/156,https://github.com/enh-google,4,https://github.com/landley/toybox/pull/156#issuecomment-562366790,Move longopts after their corresponding shortopts instead of before,certainly hard to imagine me regressing this. (though i do often wish we at least had some checking that the help text and the actual options understood by the toy matched. python's argument parsing stuff is nice that way.),True,{}
landley/toybox,https://github.com/landley/toybox,157,2019-12-12T10:15:20Z,2019-12-13T20:12:32Z,2019-12-13T20:12:33Z,CLOSED,False,1,0,1,https://github.com/wayling,fix loopback device mount fail,1,[],https://github.com/landley/toybox/pull/157,https://github.com/wayling,1,https://github.com/landley/toybox/pull/157,"When we ""losetup"" success need mount loop device.
Found this issue on AndroidQ
Relate to commit 8a9484e","When we ""losetup"" success need mount loop device.
Found this issue on AndroidQ
Relate to commit 8a9484e",True,{}
landley/toybox,https://github.com/landley/toybox,157,2019-12-12T10:15:20Z,2019-12-13T20:12:32Z,2019-12-13T20:12:33Z,CLOSED,False,1,0,1,https://github.com/wayling,fix loopback device mount fail,1,[],https://github.com/landley/toybox/pull/157,https://github.com/landley,2,https://github.com/landley/toybox/pull/157#issuecomment-565099136,"When we ""losetup"" success need mount loop device.
Found this issue on AndroidQ
Relate to commit 8a9484e","Does this work instead?
diff --git a/toys/lsb/mount.c b/toys/lsb/mount.c
index 296d686..cc13c1d 100644
--- a/toys/lsb/mount.c
+++ b/toys/lsb/mount.c
@@ -275,7 +277,7 @@ static void mount_filesystem(char *dev, char *dir, char *type,
free(buf);
buf = 0;
if (!rc) break;

if (fp && (errno == EINVAL || errno == EBUSY)) continue;



if (fp && (!errno || errno == EINVAL || errno == EBUSY)) continue;
perror_msg(""'%s'->'%s'"", dev, dir);",True,{}
landley/toybox,https://github.com/landley/toybox,157,2019-12-12T10:15:20Z,2019-12-13T20:12:32Z,2019-12-13T20:12:33Z,CLOSED,False,1,0,1,https://github.com/wayling,fix loopback device mount fail,1,[],https://github.com/landley/toybox/pull/157,https://github.com/landley,3,https://github.com/landley/toybox/pull/157#issuecomment-565099948,"When we ""losetup"" success need mount loop device.
Found this issue on AndroidQ
Relate to commit 8a9484e","Sigh. Github does not support cutting and pasting a patch into comments.
It just adds !errno to the list of errno values that loop, but moves it down after freeing buf. Does that fix the problem for you? (You didn't give me a reproduction sequence...)",True,{'EYES': ['https://github.com/wayling']}
landley/toybox,https://github.com/landley/toybox,157,2019-12-12T10:15:20Z,2019-12-13T20:12:32Z,2019-12-13T20:12:33Z,CLOSED,False,1,0,1,https://github.com/wayling,fix loopback device mount fail,1,[],https://github.com/landley/toybox/pull/157,https://github.com/enh-google,4,https://github.com/landley/toybox/pull/157#issuecomment-565100957,"When we ""losetup"" success need mount loop device.
Found this issue on AndroidQ
Relate to commit 8a9484e",you need to put before it and after it. regular markdown blockquote syntax. you can edit your comment after the fact to fix it too.,True,{}
landley/toybox,https://github.com/landley/toybox,157,2019-12-12T10:15:20Z,2019-12-13T20:12:32Z,2019-12-13T20:12:33Z,CLOSED,False,1,0,1,https://github.com/wayling,fix loopback device mount fail,1,[],https://github.com/landley/toybox/pull/157,https://github.com/landley,5,https://github.com/landley/toybox/pull/157#issuecomment-565101584,"When we ""losetup"" success need mount loop device.
Found this issue on AndroidQ
Relate to commit 8a9484e","Ah, I didn't know github has gaslighting support. (Can't say I'm surprised though.)
How do I ""view raw"" your comment so I can see what tags you used, since they got converted?",True,{}
landley/toybox,https://github.com/landley/toybox,157,2019-12-12T10:15:20Z,2019-12-13T20:12:32Z,2019-12-13T20:12:33Z,CLOSED,False,1,0,1,https://github.com/wayling,fix loopback device mount fail,1,[],https://github.com/landley/toybox/pull/157,https://github.com/enh-google,6,https://github.com/landley/toybox/pull/157#issuecomment-565103504,"When we ""losetup"" success need mount loop device.
Found this issue on AndroidQ
Relate to commit 8a9484e","lol. that'll teach me not to try the preview when explaining markup... i don't know how to view raw for the past. so here it is again, in its own ``` block:
you need to put ``` before it and ``` after it.",True,{}
landley/toybox,https://github.com/landley/toybox,157,2019-12-12T10:15:20Z,2019-12-13T20:12:32Z,2019-12-13T20:12:33Z,CLOSED,False,1,0,1,https://github.com/wayling,fix loopback device mount fail,1,[],https://github.com/landley/toybox/pull/157,https://github.com/wayling,7,https://github.com/landley/toybox/pull/157#issuecomment-565271108,"When we ""losetup"" success need mount loop device.
Found this issue on AndroidQ
Relate to commit 8a9484e","Does this work instead?
diff --git a/toys/lsb/mount.c b/toys/lsb/mount.c
index 296d686..cc13c1d 100644
--- a/toys/lsb/mount.c
+++ b/toys/lsb/mount.c
@@ -275,7 +277,7 @@ static void mount_filesystem(char *dev, char *dir, char *type,
free(buf);
buf = 0;
if (!rc) break;
if (fp && (errno == EINVAL || errno == EBUSY)) continue;
if (fp && (!errno || errno == EINVAL || errno == EBUSY)) continue;
perror_msg(""'%s'->'%s'"", dev, dir);

HI ,
I think not work because errno will keep 15(Block device required) on AndroidQ.",True,{}
landley/toybox,https://github.com/landley/toybox,157,2019-12-12T10:15:20Z,2019-12-13T20:12:32Z,2019-12-13T20:12:33Z,CLOSED,False,1,0,1,https://github.com/wayling,fix loopback device mount fail,1,[],https://github.com/landley/toybox/pull/157,https://github.com/landley,8,https://github.com/landley/toybox/pull/157#issuecomment-565591981,"When we ""losetup"" success need mount loop device.
Found this issue on AndroidQ
Relate to commit 8a9484e","You're right, Section 7.5.3 in c99: initialized to 0 but never set back to zero. (I used a broken solaris compiler in college that didn't do that, I've always just used or snapshot the value right after the call that set it ever since.)
Moreover I think your original fix is right, not freeing/zeroing buf keeps type for the retry of mount() (avoids looking it up again) and then it gets freed normally on loop exit.",True,{}
landley/toybox,https://github.com/landley/toybox,160,2019-12-26T20:11:14Z,2019-12-29T18:41:17Z,2019-12-29T18:41:17Z,CLOSED,False,1,1,1,https://github.com/CheezeCake,tar: fix memory write error,1,[],https://github.com/landley/toybox/pull/160,https://github.com/CheezeCake,1,https://github.com/landley/toybox/pull/160,"Clear the last byte of the allocated buffer.
The allocated buffer is referenced by *b. b[len] = 0 overwrites sizeof(void*) bytes of the wrong piece of memory.","Clear the last byte of the allocated buffer.
The allocated buffer is referenced by *b. b[len] = 0 overwrites sizeof(void*) bytes of the wrong piece of memory.",True,{}
landley/toybox,https://github.com/landley/toybox,171,2020-02-26T07:12:59Z,2020-02-26T08:41:22Z,2020-02-26T08:41:23Z,CLOSED,False,1,1,1,https://github.com/pallas,lib/env: avoid use-after-free in xclearenv,1,[],https://github.com/landley/toybox/pull/171,https://github.com/pallas,1,https://github.com/landley/toybox/pull/171,"In xclearenv, char **environ is either NULL or it is freed.  Afterward,
it is dereferenced.  It appears that the intention was to NULL out the
variable, not write a NULL to the now-dangling array.
Signed-off-by: Derrick Pallas derrick@pallas.us","In xclearenv, char **environ is either NULL or it is freed.  Afterward,
it is dereferenced.  It appears that the intention was to NULL out the
variable, not write a NULL to the now-dangling array.
Signed-off-by: Derrick Pallas derrick@pallas.us",True,{}
landley/toybox,https://github.com/landley/toybox,171,2020-02-26T07:12:59Z,2020-02-26T08:41:22Z,2020-02-26T08:41:23Z,CLOSED,False,1,1,1,https://github.com/pallas,lib/env: avoid use-after-free in xclearenv,1,[],https://github.com/landley/toybox/pull/171,https://github.com/landley,2,https://github.com/landley/toybox/pull/171#issuecomment-591305968,"In xclearenv, char **environ is either NULL or it is freed.  Afterward,
it is dereferenced.  It appears that the intention was to NULL out the
variable, not write a NULL to the now-dangling array.
Signed-off-by: Derrick Pallas derrick@pallas.us","Thanks for the bug report. It needs a different fix though.
The real bug is it shouldn't free(environ) at all here: environ is never null and lots of stuff reaches out and dereferences it without checking for null (including the functions before and after this one).
At the design level, we don't modify our inherited environ[] the same way we don't modify our inherited argv[], so the else path should xmalloc() a new environ at the same stride as xsetmyenv() uses (256 entries) and then set toys.envc to 1 to indicate we're using our own.
See 3b82917",True,{}
landley/toybox,https://github.com/landley/toybox,177,2020-03-26T22:41:33Z,2020-03-26T22:50:18Z,2020-03-26T22:54:01Z,CLOSED,False,11,6,1,https://github.com/chirayudesai,du: Implement -b,1,[],https://github.com/landley/toybox/pull/177,https://github.com/chirayudesai,1,https://github.com/landley/toybox/pull/177,"This comes straight from http://lists.landley.net/htdig.cgi/toybox-landley.net/2019-December/011304.html
I needed it as a band-aid while building Android.
The Android build system calls toybox du to calculate some sizes 1
I build on zfs compression enabled volume, which means that the current du -k -s does not return the correct size. Adding -b does get close to the actual size, enough that a quick smoke test build boots. cc @enh-google","This comes straight from http://lists.landley.net/htdig.cgi/toybox-landley.net/2019-December/011304.html
I needed it as a band-aid while building Android.
The Android build system calls toybox du to calculate some sizes 1
I build on zfs compression enabled volume, which means that the current du -k -s does not return the correct size. Adding -b does get close to the actual size, enough that a quick smoke test build boots. cc @enh-google",True,{}
landley/toybox,https://github.com/landley/toybox,177,2020-03-26T22:41:33Z,2020-03-26T22:50:18Z,2020-03-26T22:54:01Z,CLOSED,False,11,6,1,https://github.com/chirayudesai,du: Implement -b,1,[],https://github.com/landley/toybox/pull/177,https://github.com/landley,2,https://github.com/landley/toybox/pull/177#issuecomment-604727142,"This comes straight from http://lists.landley.net/htdig.cgi/toybox-landley.net/2019-December/011304.html
I needed it as a band-aid while building Android.
The Android build system calls toybox du to calculate some sizes 1
I build on zfs compression enabled volume, which means that the current du -k -s does not return the correct size. Adding -b does get close to the actual size, enough that a quick smoke test build boots. cc @enh-google","Applied, commit cc803fb",True,{}
landley/toybox,https://github.com/landley/toybox,177,2020-03-26T22:41:33Z,2020-03-26T22:50:18Z,2020-03-26T22:54:01Z,CLOSED,False,11,6,1,https://github.com/chirayudesai,du: Implement -b,1,[],https://github.com/landley/toybox/pull/177,https://github.com/chirayudesai,3,https://github.com/landley/toybox/pull/177#issuecomment-604727624,"This comes straight from http://lists.landley.net/htdig.cgi/toybox-landley.net/2019-December/011304.html
I needed it as a band-aid while building Android.
The Android build system calls toybox du to calculate some sizes 1
I build on zfs compression enabled volume, which means that the current du -k -s does not return the correct size. Adding -b does get close to the actual size, enough that a quick smoke test build boots. cc @enh-google","Thanks for the super-fast merge!
AOSP patch for reference: https://android-review.googlesource.com/c/platform/build/+/1269603",True,{}
landley/toybox,https://github.com/landley/toybox,178,2020-03-29T20:23:31Z,2020-03-30T01:41:16Z,2020-03-30T01:41:16Z,CLOSED,False,8,0,3,https://github.com/joeky888,file: add 7z format,2,[],https://github.com/landley/toybox/pull/178,https://github.com/joeky888,1,https://github.com/landley/toybox/pull/178,"Magic number: '7', 'z', 0xBC, 0xAF, 0x27, 0x1C","Magic number: '7', 'z', 0xBC, 0xAF, 0x27, 0x1C",True,{}
landley/toybox,https://github.com/landley/toybox,178,2020-03-29T20:23:31Z,2020-03-30T01:41:16Z,2020-03-30T01:41:16Z,CLOSED,False,8,0,3,https://github.com/joeky888,file: add 7z format,2,[],https://github.com/landley/toybox/pull/178,https://github.com/landley,2,https://github.com/landley/toybox/pull/178#issuecomment-605724693,"Magic number: '7', 'z', 0xBC, 0xAF, 0x27, 0x1C",Do you have a small example tar.7z file for the test suite?,True,{}
landley/toybox,https://github.com/landley/toybox,178,2020-03-29T20:23:31Z,2020-03-30T01:41:16Z,2020-03-30T01:41:16Z,CLOSED,False,8,0,3,https://github.com/joeky888,file: add 7z format,2,[],https://github.com/landley/toybox/pull/178,https://github.com/joeky888,3,https://github.com/landley/toybox/pull/178#issuecomment-605728955,"Magic number: '7', 'z', 0xBC, 0xAF, 0x27, 0x1C",I added a 7z file to tests.,True,{}
landley/toybox,https://github.com/landley/toybox,178,2020-03-29T20:23:31Z,2020-03-30T01:41:16Z,2020-03-30T01:41:16Z,CLOSED,False,8,0,3,https://github.com/joeky888,file: add 7z format,2,[],https://github.com/landley/toybox/pull/178,https://github.com/landley,4,https://github.com/landley/toybox/pull/178#issuecomment-605739175,"Magic number: '7', 'z', 0xBC, 0xAF, 0x27, 0x1C",Applied.,True,{}
landley/toybox,https://github.com/landley/toybox,179,2020-04-15T00:00:03Z,2020-12-18T16:26:35Z,2020-12-18T16:26:35Z,CLOSED,False,4,5,2,https://github.com/E5ten,"allow mount -a -t notype,type2",1,[],https://github.com/landley/toybox/pull/179,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/179,"type list starting with ""no"" no longer needs all types in list to have
""no"" prefix","type list starting with ""no"" no longer needs all types in list to have
""no"" prefix",True,{}
landley/toybox,https://github.com/landley/toybox,179,2020-04-15T00:00:03Z,2020-12-18T16:26:35Z,2020-12-18T16:26:35Z,CLOSED,False,4,5,2,https://github.com/E5ten,"allow mount -a -t notype,type2",1,[],https://github.com/landley/toybox/pull/179,https://github.com/landley,2,https://github.com/landley/toybox/pull/179#issuecomment-613768993,"type list starting with ""no"" no longer needs all types in list to have
""no"" prefix",Test case please? (I know there isn't a mount.tests yet but could you post something here so I can have an example that works now and didn't before?),True,{}
landley/toybox,https://github.com/landley/toybox,179,2020-04-15T00:00:03Z,2020-12-18T16:26:35Z,2020-12-18T16:26:35Z,CLOSED,False,4,5,2,https://github.com/E5ten,"allow mount -a -t notype,type2",1,[],https://github.com/landley/toybox/pull/179,https://github.com/E5ten,3,https://github.com/landley/toybox/pull/179#issuecomment-613772218,"type list starting with ""no"" no longer needs all types in list to have
""no"" prefix","Using filesystems that are relevant to my system, mount -at noswap,vfat gives ""mount: bad typelist"" before, and needed mount -at noswap,novfat to work, and now the former case works too.",True,{}
landley/toybox,https://github.com/landley/toybox,180,2020-04-15T01:10:09Z,2020-04-15T05:48:02Z,2020-04-15T05:48:03Z,CLOSED,False,45,53,6,https://github.com/E5ten,Fix various warnings,6,[],https://github.com/landley/toybox/pull/180,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/180,,,True,{}
landley/toybox,https://github.com/landley/toybox,180,2020-04-15T01:10:09Z,2020-04-15T05:48:02Z,2020-04-15T05:48:03Z,CLOSED,False,45,53,6,https://github.com/E5ten,Fix various warnings,6,[],https://github.com/landley/toybox/pull/180,https://github.com/landley,2,https://github.com/landley/toybox/pull/180#issuecomment-613827435,,"Applied patch 1 and 2, but patch 3 is a nightmare because fdisk.c is a nightmare and read_size() should probably just be a call to fdlength() and I'm not 100% certain the original submitters didn't do http://lists.landley.net/pipermail/toybox-landley.net/2015-April/004026.html there again and...
It hasn't made it out of pending for a reason. That said, I'm slowly switching the remaining uint64_t in the tree to just ""unsigned long long"" because LP64 and I want to be consistent. Plus that lets us keep printf(""%llu"") which is a lot simpler.
Anyway, I'm skipping #3 for now, FYI.",True,{}
landley/toybox,https://github.com/landley/toybox,180,2020-04-15T01:10:09Z,2020-04-15T05:48:02Z,2020-04-15T05:48:03Z,CLOSED,False,45,53,6,https://github.com/E5ten,Fix various warnings,6,[],https://github.com/landley/toybox/pull/180,https://github.com/landley,3,https://github.com/landley/toybox/pull/180#issuecomment-613830356,,"Fixed up one more patch, applied the other two.",True,{}
landley/toybox,https://github.com/landley/toybox,181,2020-04-15T15:15:35Z,2020-04-15T23:08:50Z,2020-04-15T23:08:50Z,CLOSED,False,1,1,1,https://github.com/E5ten,fdisk: change sector_t to unsigned long long to fix -Wformat,1,[],https://github.com/landley/toybox/pull/181,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/181,,,True,{}
landley/toybox,https://github.com/landley/toybox,182,2020-04-15T19:52:25Z,,2020-04-23T16:17:54Z,OPEN,False,119,112,13,https://github.com/E5ten,Convert scripts (aside from the ones used for testing) to POSIX sh,13,[],https://github.com/landley/toybox/pull/182,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/182,"This partially addresses #77, because while tests still require bash, building can now be done without it.","This partially addresses #77, because while tests still require bash, building can now be done without it.",True,"{'THUMBS_UP': ['https://github.com/illiliti', 'https://github.com/tpimh', 'https://github.com/konimex', 'https://github.com/f1nniboy']}"
landley/toybox,https://github.com/landley/toybox,182,2020-04-15T19:52:25Z,,2020-04-23T16:17:54Z,OPEN,False,119,112,13,https://github.com/E5ten,Convert scripts (aside from the ones used for testing) to POSIX sh,13,[],https://github.com/landley/toybox/pull/182,https://github.com/landley,2,https://github.com/landley/toybox/pull/182#issuecomment-614346885,"This partially addresses #77, because while tests still require bash, building can now be done without it.","I'm doing bash intentionally, and writing a bash replacement shell.",True,{}
landley/toybox,https://github.com/landley/toybox,182,2020-04-15T19:52:25Z,,2020-04-23T16:17:54Z,OPEN,False,119,112,13,https://github.com/E5ten,Convert scripts (aside from the ones used for testing) to POSIX sh,13,[],https://github.com/landley/toybox/pull/182,https://github.com/E5ten,3,https://github.com/landley/toybox/pull/182#issuecomment-614349601,"This partially addresses #77, because while tests still require bash, building can now be done without it.","But then, even once toysh is a working bash replacement, you'd still already need either bash or toybox to build itself, wouldn't it be better for toybox to be able to build on any system with a functioning POSIX-compatible shell?",True,{}
landley/toybox,https://github.com/landley/toybox,182,2020-04-15T19:52:25Z,,2020-04-23T16:17:54Z,OPEN,False,119,112,13,https://github.com/E5ten,Convert scripts (aside from the ones used for testing) to POSIX sh,13,[],https://github.com/landley/toybox/pull/182,https://github.com/landley,4,https://github.com/landley/toybox/pull/182#issuecomment-614376142,"This partially addresses #77, because while tests still require bash, building can now be done without it.","I have a similar problem with sed/gsed on macos.
What I'd like to do is have tiny ""make sed"" and ""make toysh"" scripts that build those tools with no dependencies on platforms where the right tool is absent. (A bit like generated/build.sh but without needing to generate headers either, probably tiny ones as HERE documents.)
THOSE scripts should be portable.",True,{}
landley/toybox,https://github.com/landley/toybox,182,2020-04-15T19:52:25Z,,2020-04-23T16:17:54Z,OPEN,False,119,112,13,https://github.com/E5ten,Convert scripts (aside from the ones used for testing) to POSIX sh,13,[],https://github.com/landley/toybox/pull/182,https://github.com/landley,5,https://github.com/landley/toybox/pull/182#issuecomment-614377011,"This partially addresses #77, because while tests still require bash, building can now be done without it.","This is post-1.0 todo items, though.
What AOSP does is ship prebuilt binaries, which sadly limits the targets it can build on. Part of what I'm trying to do with toyroot is make a known build environment, which can be reproduced (build regression testing!) but doesn't NEED to be. (So building up/under it and reproducing it are orthogonal problems. It's sort of a build checkpoint.)",True,{}
landley/toybox,https://github.com/landley/toybox,182,2020-04-15T19:52:25Z,,2020-04-23T16:17:54Z,OPEN,False,119,112,13,https://github.com/E5ten,Convert scripts (aside from the ones used for testing) to POSIX sh,13,[],https://github.com/landley/toybox/pull/182,https://github.com/E5ten,6,https://github.com/landley/toybox/pull/182#issuecomment-614393528,"This partially addresses #77, because while tests still require bash, building can now be done without it.","I just don't understand the reason for opposing making as much of the build as possible portable, when someone has already done the work for it and it removes the need for a special make target to bootstrap the scripts, especially considering the target doesn't exist yet, and it would allow anyone with a working sh and GNU make to build toybox right now.",True,{}
landley/toybox,https://github.com/landley/toybox,182,2020-04-15T19:52:25Z,,2020-04-23T16:17:54Z,OPEN,False,119,112,13,https://github.com/E5ten,Convert scripts (aside from the ones used for testing) to POSIX sh,13,[],https://github.com/landley/toybox/pull/182,https://github.com/landley,7,https://github.com/landley/toybox/pull/182#issuecomment-614402846,"This partially addresses #77, because while tests still require bash, building can now be done without it.","I plan to implement a make in toybox that handles gmake files. Do you want me to convert the Makefiles to work with BSD make?
The standard I'm trying to adhere to isn't always pure posix.",True,{}
landley/toybox,https://github.com/landley/toybox,182,2020-04-15T19:52:25Z,,2020-04-23T16:17:54Z,OPEN,False,119,112,13,https://github.com/E5ten,Convert scripts (aside from the ones used for testing) to POSIX sh,13,[],https://github.com/landley/toybox/pull/182,https://github.com/E5ten,8,https://github.com/landley/toybox/pull/182#issuecomment-614407063,"This partially addresses #77, because while tests still require bash, building can now be done without it.","I was intending to try to make the Makefiles POSIX compatible at some point, but that isn't really related? In this case the work to adhere to POSIX has been done, what reason is there to not make the build more portable in this case?",True,{}
landley/toybox,https://github.com/landley/toybox,182,2020-04-15T19:52:25Z,,2020-04-23T16:17:54Z,OPEN,False,119,112,13,https://github.com/E5ten,Convert scripts (aside from the ones used for testing) to POSIX sh,13,[],https://github.com/landley/toybox/pull/182,https://github.com/landley,9,https://github.com/landley/toybox/pull/182#issuecomment-614416006,"This partially addresses #77, because while tests still require bash, building can now be done without it.","I'm explaining to you that this is not a design direction I want to go in, and you're telling me that you already did the work. Because that should change the design decision?
The shell standard I've chosen to implement (and require) is bash compatible, not posix sh. I've done some transitional patches in the test suite to make the android guys' life easier, but now that I'm actively writing toysh I'm less interested in nerfing my real-life test data and more interested in making toysh work and making it easier to use to solve these problems.
One of my project goalposts is getting toybox to build itself under itself, zeroing out the airlock binary list from https://github.com/landley/toybox/blob/master/scripts/install.sh#L109 . I could instead change my use of sed to be posix only, elimintate all use of awk, patch bison out of my kernel locally, and so on... in which case why write toybox at all? Toybox needs to eat its own dogfood, but what we provide isn't posix.
I want this project to provide a Linux build environment within which you can build and run traditional Linux software. I'm aware MacOS is not Linux, and diverging farther from it (removing bash and replacing it with zsh). I've chosen to address that with the same ""create airlock"" strategy I've used for years, in this case statically building the tools some systems haven't got so toybox can build under toybox with a mini-airlock on such systems, by using a shell script that builds JUST those tools with no external dependencies on things like ""sed"". That is how I prefer to address that problem, and yes that script would need to run under ksh and powershell and fish and possibly OS/2 cmd.exe. (It should be just a list of command lines, possibly without even using environment variables, dunno yet, haven't got there yet.)",True,{}
landley/toybox,https://github.com/landley/toybox,182,2020-04-15T19:52:25Z,,2020-04-23T16:17:54Z,OPEN,False,119,112,13,https://github.com/E5ten,Convert scripts (aside from the ones used for testing) to POSIX sh,13,[],https://github.com/landley/toybox/pull/182,https://github.com/E5ten,10,https://github.com/landley/toybox/pull/182#issuecomment-614420734,"This partially addresses #77, because while tests still require bash, building can now be done without it.","I just don't really understand how the tradeoff makes sense, almost all that the scripts test in terms of bash capabilities are that echo has -e and -n, source instead of . exists, and [ can take == instead of just =, and in exchange toybox has a much more specific requirement to build, needing a specific shell (one which is GPL licensed) to build, instead of POSIX sh, to me it doesn't make sense to have a stricter requirement on things needed to build toybox just because toybox eventually plans to fill those needs (and would still be needed to build itself regardless).",True,{}
landley/toybox,https://github.com/landley/toybox,182,2020-04-15T19:52:25Z,,2020-04-23T16:17:54Z,OPEN,False,119,112,13,https://github.com/E5ten,Convert scripts (aside from the ones used for testing) to POSIX sh,13,[],https://github.com/landley/toybox/pull/182,https://github.com/illiliti,11,https://github.com/landley/toybox/pull/182#issuecomment-614437092,"This partially addresses #77, because while tests still require bash, building can now be done without it.","Please don't force people to use bash. Non-portable requirements is always bad idea, especially if it's unnecessary",True,"{'THUMBS_UP': ['https://github.com/konimex', 'https://github.com/tpimh', 'https://github.com/cemkeylan', 'https://github.com/E5ten', 'https://github.com/johnsonjh']}"
landley/toybox,https://github.com/landley/toybox,182,2020-04-15T19:52:25Z,,2020-04-23T16:17:54Z,OPEN,False,119,112,13,https://github.com/E5ten,Convert scripts (aside from the ones used for testing) to POSIX sh,13,[],https://github.com/landley/toybox/pull/182,https://github.com/tpimh,12,https://github.com/landley/toybox/pull/182#issuecomment-614529959,"This partially addresses #77, because while tests still require bash, building can now be done without it.","As I mentioned in the issue I opened a while ago, not all systems have bash installed. And with a recent trend of shifting away from GNU, it's even more important now.
Would be great to be able to build toybox on a system with only dash or busybox's ash available. Right now I only install bash on my Alpine system, because I need to build toybox, all other packages I build only require POSIX shell.
Also it would be much less work to make toybox self-hosting without the need to implement these bashisms support in toysh.",True,{}
landley/toybox,https://github.com/landley/toybox,182,2020-04-15T19:52:25Z,,2020-04-23T16:17:54Z,OPEN,False,119,112,13,https://github.com/E5ten,Convert scripts (aside from the ones used for testing) to POSIX sh,13,[],https://github.com/landley/toybox/pull/182,https://github.com/landley,13,https://github.com/landley/toybox/pull/182#issuecomment-614642559,"This partially addresses #77, because while tests still require bash, building can now be done without it.","That's why I'm making toysh handle bash syntax, and why I have a plan to teach the build to create toysh and sed binaries to run the rest of the build under when the host hasn't got bash or gsed.
""Here's a problem."" ""Here's how I plan to fix that."" ""I repeat that the problem exists."" ""As I said, I want to do this to fix it."" ""It sure is a problem.""",True,{}
landley/toybox,https://github.com/landley/toybox,182,2020-04-15T19:52:25Z,,2020-04-23T16:17:54Z,OPEN,False,119,112,13,https://github.com/E5ten,Convert scripts (aside from the ones used for testing) to POSIX sh,13,[],https://github.com/landley/toybox/pull/182,https://github.com/E5ten,14,https://github.com/landley/toybox/pull/182#issuecomment-614687392,"This partially addresses #77, because while tests still require bash, building can now be done without it.","But to me, even once your fix is in place (which isn't the case yet) it would still make building toybox less convenient without bash, because one would have to know about the toysh make target, build that, and then figure out how to tell the build system to use that as sh (I guess by installing it as sh) which they might not even want to do. But even if they didn't have to do that, having to build the toysh target just to be able to build toybox is more of a hassle, for no apparent reason, because the build scripts could just be portable in the first place.",True,{}
landley/toybox,https://github.com/landley/toybox,182,2020-04-15T19:52:25Z,,2020-04-23T16:17:54Z,OPEN,False,119,112,13,https://github.com/E5ten,Convert scripts (aside from the ones used for testing) to POSIX sh,13,[],https://github.com/landley/toybox/pull/182,https://github.com/E5ten,15,https://github.com/landley/toybox/pull/182#issuecomment-614687987,"This partially addresses #77, because while tests still require bash, building can now be done without it.",It's not like being able to build toybox with POSIX sh in any way precludes toysh from being a bash replacement.,True,{}
landley/toybox,https://github.com/landley/toybox,182,2020-04-15T19:52:25Z,,2020-04-23T16:17:54Z,OPEN,False,119,112,13,https://github.com/E5ten,Convert scripts (aside from the ones used for testing) to POSIX sh,13,[],https://github.com/landley/toybox/pull/182,https://github.com/tpimh,16,https://github.com/landley/toybox/pull/182#issuecomment-614692115,"This partially addresses #77, because while tests still require bash, building can now be done without it.","""Here's a problem."" ""Here's how I plan to fix that.""

Now this pull request is a solution. Maybe this proposed solution is not how you plan to fix it, but it can fix it for many others while toysh is not ready and make it easier to fix it later according to your plan.",True,{}
landley/toybox,https://github.com/landley/toybox,182,2020-04-15T19:52:25Z,,2020-04-23T16:17:54Z,OPEN,False,119,112,13,https://github.com/E5ten,Convert scripts (aside from the ones used for testing) to POSIX sh,13,[],https://github.com/landley/toybox/pull/182,https://github.com/konimex,17,https://github.com/landley/toybox/pull/182#issuecomment-614721098,"This partially addresses #77, because while tests still require bash, building can now be done without it.","That's why I'm making toysh handle bash syntax, and why I have a plan to teach the build to create toysh and sed binaries to run the rest of the build under when the host hasn't got bash or gsed.

Honestly, what does this supposed to mean? Since my use case is pretty much Linux without GNU when possible, using bash is to be minimised.
So, if I'm correct, in case of bash and gsed not existing, you're thinking of making the build system build toysh and toybox sed first, and make use of the built toysh and toybox sed to build the rest of the toybox suite? But how exactly can one use that approach if configure has a hard #!/bin/bash requirement and it doesn't even exist?",True,{'THUMBS_UP': ['https://github.com/tpimh']}
landley/toybox,https://github.com/landley/toybox,182,2020-04-15T19:52:25Z,,2020-04-23T16:17:54Z,OPEN,False,119,112,13,https://github.com/E5ten,Convert scripts (aside from the ones used for testing) to POSIX sh,13,[],https://github.com/landley/toybox/pull/182,https://github.com/landley,18,https://github.com/landley/toybox/pull/182#issuecomment-614744494,"This partially addresses #77, because while tests still require bash, building can now be done without it.","Fun fact: a script can be run with a different shell from the command line, with the #!/ functioning as a # comment. A portability wrapper going ""toysh scripts/make.sh"" has been on the todo heap ever since http://lists.landley.net/pipermail/toybox-landley.net/2019-January/010031.html (or maybe just changing how the Makefile calls stuff, perhaps a new toybox_portabuild target that does the simple sed and toysh builds and airlock pathing and such) but I just haven't had toysh in defconfig yet so haven't gone there.
I'm going to unsubscribe from this thread. Have fun bikeshedding, I find this hugely demotivational and might step away from the project for a while and go focus on $DAYJOB instead after this release, because this is a hobby not a job (the patreon is less than 2% of my income) and being repeatedly accused of incompetence and having explicit ""that is not the approach I want to take"" ignored FIVE TIMES has kind of taken the fun out of it.",True,{'CONFUSED': ['https://github.com/tpimh']}
landley/toybox,https://github.com/landley/toybox,182,2020-04-15T19:52:25Z,,2020-04-23T16:17:54Z,OPEN,False,119,112,13,https://github.com/E5ten,Convert scripts (aside from the ones used for testing) to POSIX sh,13,[],https://github.com/landley/toybox/pull/182,https://github.com/nykula,19,https://github.com/landley/toybox/pull/182#issuecomment-614804791,"This partially addresses #77, because while tests still require bash, building can now be done without it.","Existing scripts say bash but they are mostly compatible with pdksh and mksh, except <() in make.sh which I dummy out locally. Where I don't have gmake, e.g. on my phone, I build like this:
$SH scripts/genconfig.sh; (cd kconfig
  for i in zconf.tab.c lex.zconf.c zconf.hash.c; do ln -s ${i}_shipped $i; done
  cc $CFLAGS -static -o conf conf.c zconf.tab.c \
  -DKBUILD_NO_NLS=1 -DPROJECT_NAME='""ToyBox""')
kconfig/conf -D /dev/null Config.in >/dev/null
sed -Ei 's/.*_(BC|DIFF|EXPR|GZIP|TCPSVD|TR|VI|WGET)[= ].*/CONFIG_\1=y/' .config
sed -i 's/<(.*)/:/' scripts/make.sh; CFLAGS=""$CFLAGS -static"" \
  HOSTCC=""cc $CFLAGS -static"" CPUS=8 $SH scripts/make.sh
Might be of use to somebody in this thread. In fact, many software build systems are fine with /bin/bash linked to mksh, I build this way lots of packages not only toybox.",True,{}
landley/toybox,https://github.com/landley/toybox,183,2020-04-17T00:18:23Z,2020-04-24T16:00:31Z,2020-04-24T16:00:32Z,CLOSED,False,8,8,1,https://github.com/E5ten,"fdisk: fix -Wsizeof-pointer-memaccess, switch to FLAG() macros",1,[],https://github.com/landley/toybox/pull/183,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/183,,,True,{}
landley/toybox,https://github.com/landley/toybox,187,2020-04-25T00:49:47Z,2020-04-25T04:52:26Z,2020-04-27T19:41:36Z,CLOSED,False,60,69,18,https://github.com/E5ten,"silence -Wstring-plus-int warnings throughout source, remove -Wno-string-plus-int",18,[],https://github.com/landley/toybox/pull/187,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/187,"I get that this warning is dumb so I understand if it gets rejected, I just figured it might be preferable to not have to disable it (especially if it happens to eventually catch an actual issue).","I get that this warning is dumb so I understand if it gets rejected, I just figured it might be preferable to not have to disable it (especially if it happens to eventually catch an actual issue).",True,{}
landley/toybox,https://github.com/landley/toybox,187,2020-04-25T00:49:47Z,2020-04-25T04:52:26Z,2020-04-27T19:41:36Z,CLOSED,False,60,69,18,https://github.com/E5ten,"silence -Wstring-plus-int warnings throughout source, remove -Wno-string-plus-int",18,[],https://github.com/landley/toybox/pull/187,https://github.com/E5ten,2,https://github.com/landley/toybox/pull/187#issuecomment-619293948,"I get that this warning is dumb so I understand if it gets rejected, I just figured it might be preferable to not have to disable it (especially if it happens to eventually catch an actual issue).",If the warning fixes are fine but the removal of probecc() isn't because there's potential for use in the future I can change that commit to just remove the -Wno-string-plus-int addition.,True,{}
landley/toybox,https://github.com/landley/toybox,187,2020-04-25T00:49:47Z,2020-04-25T04:52:26Z,2020-04-27T19:41:36Z,CLOSED,False,60,69,18,https://github.com/E5ten,"silence -Wstring-plus-int warnings throughout source, remove -Wno-string-plus-int",18,[],https://github.com/landley/toybox/pull/187,https://github.com/landley,3,https://github.com/landley/toybox/pull/187#issuecomment-619317467,"I get that this warning is dumb so I understand if it gets rejected, I just figured it might be preferable to not have to disable it (especially if it happens to eventually catch an actual issue).","No, ""string""+offset is valid C, the same way any other pointer+offset is well-defined C: it advances by offset*sizeof(*pointer) which in this case is 1 (LP64 says so and C99 section 6.5.3.4). If you add two strings together you should get an error (because pointer + pointer has no meaning). If you add two ints together you don't have a pointer and it warns about the implicit type conversion when you pass it as an argument.
What ""actual issue"" is this even theoretically supposed to catch? How is taking the address of an array offset supposed to be clearer? I can see if (assignment) instead of if (comparison) being a common enough typo to require the extra parentheses, but I don't understand what's supposed to be wrong with this one?
I'm not auditing these for what else they might have done, please resubmit the other changes separately.",True,{}
landley/toybox,https://github.com/landley/toybox,187,2020-04-25T00:49:47Z,2020-04-25T04:52:26Z,2020-04-27T19:41:36Z,CLOSED,False,60,69,18,https://github.com/E5ten,"silence -Wstring-plus-int warnings throughout source, remove -Wno-string-plus-int",18,[],https://github.com/landley/toybox/pull/187,https://github.com/E5ten,4,https://github.com/landley/toybox/pull/187#issuecomment-619320715,"I get that this warning is dumb so I understand if it gets rejected, I just figured it might be preferable to not have to disable it (especially if it happens to eventually catch an actual issue).","I wasn't saying it wasn't valid, just wasn't sure if silencing the warning in the code instead of disabling it would be objected to, but I completely understand why. In regards to a theoretical issue, when I was looking for the origin of -Wno-string-plus-int in toybox I saw that enh said ""as for the usefulness of this particular warning, we have seen it catch real bugs in OEM code :-("", not that it seems likely or even possible that said ""real bug"" would appear here. The only other changes I made were switching to FLAG() macros, should I make a new PR with those changes, and if so, should I go through the codebase and switch to FLAG() macros wherever relevant and include all of that in one big ""switch to FLAG() macros"" PR?",True,{}
landley/toybox,https://github.com/landley/toybox,187,2020-04-25T00:49:47Z,2020-04-25T04:52:26Z,2020-04-27T19:41:36Z,CLOSED,False,60,69,18,https://github.com/E5ten,"silence -Wstring-plus-int warnings throughout source, remove -Wno-string-plus-int",18,[],https://github.com/landley/toybox/pull/187,https://github.com/enh-google,5,https://github.com/landley/toybox/pull/187#issuecomment-620159300,"I get that this warning is dumb so I understand if it gets rejected, I just figured it might be preferable to not have to disable it (especially if it happens to eventually catch an actual issue).","when I was looking for the origin of -Wno-string-plus-int in toybox I saw that enh said ""as for the usefulness of this particular warning, we have seen it catch real bugs in OEM code :-("", not that it seems likely or even possible that said ""real bug"" would appear here.

yeah, i think the only risk is if you're expecting a sudden influx of Java programmers trying to  make toybox changes. i'm pretty sure they'll fall at earlier hurdles than this :-)",True,{}
landley/toybox,https://github.com/landley/toybox,187,2020-04-25T00:49:47Z,2020-04-25T04:52:26Z,2020-04-27T19:41:36Z,CLOSED,False,60,69,18,https://github.com/E5ten,"silence -Wstring-plus-int warnings throughout source, remove -Wno-string-plus-int",18,[],https://github.com/landley/toybox/pull/187,https://github.com/landley,6,https://github.com/landley/toybox/pull/187#issuecomment-620193248,"I get that this warning is dumb so I understand if it gets rejected, I just figured it might be preferable to not have to disable it (especially if it happens to eventually catch an actual issue).","I'm happy to write a toybox programming HOWTO with an entire ""how to program in C"" section at some point, but that's a post-1.0 activity. (Let's be honest, that's a world with Basic Income where I have time to DO that sort of thing activity.)",True,{}
landley/toybox,https://github.com/landley/toybox,189,2020-04-27T20:53:52Z,2020-05-09T04:21:50Z,2020-05-09T04:21:50Z,CLOSED,False,13,13,1,https://github.com/E5ten,stty.c: fix interpreting output of stty -g,1,[],https://github.com/landley/toybox/pull/189,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/189,"move case checking for stty -g output as input above case checking for
an int argument, so atoi doesn't cause ""500:5:bf:8a3b:3""... to be
considered an int argument of 500
Fixes #188","move case checking for stty -g output as input above case checking for
an int argument, so atoi doesn't cause ""500:5:bf:8a3b:3""... to be
considered an int argument of 500
Fixes #188",True,{}
landley/toybox,https://github.com/landley/toybox,189,2020-04-27T20:53:52Z,2020-05-09T04:21:50Z,2020-05-09T04:21:50Z,CLOSED,False,13,13,1,https://github.com/E5ten,stty.c: fix interpreting output of stty -g,1,[],https://github.com/landley/toybox/pull/189,https://github.com/E5ten,2,https://github.com/landley/toybox/pull/189#issuecomment-625978298,"move case checking for stty -g output as input above case checking for
an int argument, so atoi doesn't cause ""500:5:bf:8a3b:3""... to be
considered an int argument of 500
Fixes #188",ping?,True,{}
landley/toybox,https://github.com/landley/toybox,190,2020-04-29T19:47:48Z,,2020-04-29T20:37:23Z,OPEN,False,93,0,1,https://github.com/nykula,"Bootstrap toysh and sed without bash, make or sed.",1,[],https://github.com/landley/toybox/pull/190,https://github.com/nykula,1,https://github.com/landley/toybox/pull/190,"Ok: bash --posix, busybox sh, dash, ksh, mksh, pdksh, zsh --emulate sh.
Hopefully toysh, once it supports globs and case statements. Wontfix:
csh, fish, heirloom-sh, powershell, rc.
Doesn't resolve dependencies other than sh builtins. Still builds and
calls kconfig, config2help and mkflags. Translating my loops and trivial
pattern matching into more such C utilities could be the future key to
building in a non-posix shell like those listed above.
Non-goals: any optimization, asan, githash, isnewer, kconfig_config,
libprobe, menuconfig, mkdir-less build, optlibs, parallel, probesymbol,
running when generated/ exists, singlemake, strip, tagged_array, time.","Ok: bash --posix, busybox sh, dash, ksh, mksh, pdksh, zsh --emulate sh.
Hopefully toysh, once it supports globs and case statements. Wontfix:
csh, fish, heirloom-sh, powershell, rc.
Doesn't resolve dependencies other than sh builtins. Still builds and
calls kconfig, config2help and mkflags. Translating my loops and trivial
pattern matching into more such C utilities could be the future key to
building in a non-posix shell like those listed above.
Non-goals: any optimization, asan, githash, isnewer, kconfig_config,
libprobe, menuconfig, mkdir-less build, optlibs, parallel, probesymbol,
running when generated/ exists, singlemake, strip, tagged_array, time.",True,{}
landley/toybox,https://github.com/landley/toybox,190,2020-04-29T19:47:48Z,,2020-04-29T20:37:23Z,OPEN,False,93,0,1,https://github.com/nykula,"Bootstrap toysh and sed without bash, make or sed.",1,[],https://github.com/landley/toybox/pull/190,https://github.com/landley,2,https://github.com/landley/toybox/pull/190#issuecomment-621449148,"Ok: bash --posix, busybox sh, dash, ksh, mksh, pdksh, zsh --emulate sh.
Hopefully toysh, once it supports globs and case statements. Wontfix:
csh, fish, heirloom-sh, powershell, rc.
Doesn't resolve dependencies other than sh builtins. Still builds and
calls kconfig, config2help and mkflags. Translating my loops and trivial
pattern matching into more such C utilities could be the future key to
building in a non-posix shell like those listed above.
Non-goals: any optimization, asan, githash, isnewer, kconfig_config,
libprobe, menuconfig, mkdir-less build, optlibs, parallel, probesymbol,
running when generated/ exists, singlemake, strip, tagged_array, time.","Interesting. I'll have to look at it more closely after the release.
I note that ""WRAPDIR=wrap wraplog=log.txt scripts/record-commands make distclean defconfig toybox"" followed by ""awk '{print $1}' log.txt | sort -u | xargs"" says the full toybox build uses:
as basename cat cc chmod cmp dirname echo egrep find git grep head ld ln ls make mkdir nproc rm sed sort strip tail tee tr uname wc xargs
The ""as cc ld make strip"" binaries come from the toolchain, and git is optional (trying to --describe the version), which leaves ""basename cat chmod cmp dirname echo egrep find grep head ln ls mkdir nproc rm sed sort tail tee tr uname wc xargs"" (plus of course sh, which this doesn't catch because #!/blah isn't a $PATH lookup). So a make mini_airlock that builds just those binaries with minimal pure-posix host dependencies would be a very intersting script. :)
Rob",True,{}
landley/toybox,https://github.com/landley/toybox,190,2020-04-29T19:47:48Z,,2020-04-29T20:37:23Z,OPEN,False,93,0,1,https://github.com/nykula,"Bootstrap toysh and sed without bash, make or sed.",1,[],https://github.com/landley/toybox/pull/190,https://github.com/landley,3,https://github.com/landley/toybox/pull/190#issuecomment-621449915,"Ok: bash --posix, busybox sh, dash, ksh, mksh, pdksh, zsh --emulate sh.
Hopefully toysh, once it supports globs and case statements. Wontfix:
csh, fish, heirloom-sh, powershell, rc.
Doesn't resolve dependencies other than sh builtins. Still builds and
calls kconfig, config2help and mkflags. Translating my loops and trivial
pattern matching into more such C utilities could be the future key to
building in a non-posix shell like those listed above.
Non-goals: any optimization, asan, githash, isnewer, kconfig_config,
libprobe, menuconfig, mkdir-less build, optlibs, parallel, probesymbol,
running when generated/ exists, singlemake, strip, tagged_array, time.",P.S. I've already established that toybox builds under itself. That's why scripts/mkroot.sh has an airlock step.,True,{}
landley/toybox,https://github.com/landley/toybox,191,2020-05-06T00:48:24Z,,2020-05-06T00:48:24Z,OPEN,False,25,33,4,https://github.com/E5ten,factor llist_add out of last and modprobe,1,[],https://github.com/landley/toybox/pull/191,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/191,I also removed whitespace trailing lines in the files I was modified.,I also removed whitespace trailing lines in the files I was modified.,True,{}
landley/toybox,https://github.com/landley/toybox,195,2020-05-20T22:37:47Z,2020-05-21T07:50:36Z,2020-05-21T07:50:36Z,CLOSED,False,4,1,1,https://github.com/kraj,glibc on mips is missing SIGSTKFLT,1,[],https://github.com/landley/toybox/pull/195,https://github.com/kraj,1,https://github.com/landley/toybox/pull/195,"Do not therefore assume it being available linuxwide
Fixes
| lib/portability.c:433:3: error: use of undeclared identifier 'SIGSTKFLT'
|   SIGNIFY(STKFLT), SIGNIFY(POLL), SIGNIFY(PWR),
|   ^
Signed-off-by: Khem Raj raj.khem@gmail.com","Do not therefore assume it being available linuxwide
Fixes
| lib/portability.c:433:3: error: use of undeclared identifier 'SIGSTKFLT'
|   SIGNIFY(STKFLT), SIGNIFY(POLL), SIGNIFY(PWR),
|   ^
Signed-off-by: Khem Raj raj.khem@gmail.com",True,{}
landley/toybox,https://github.com/landley/toybox,195,2020-05-20T22:37:47Z,2020-05-21T07:50:36Z,2020-05-21T07:50:36Z,CLOSED,False,4,1,1,https://github.com/kraj,glibc on mips is missing SIGSTKFLT,1,[],https://github.com/landley/toybox/pull/195,https://github.com/enh-google,2,https://github.com/landley/toybox/pull/195#issuecomment-631790835,"Do not therefore assume it being available linuxwide
Fixes
| lib/portability.c:433:3: error: use of undeclared identifier 'SIGSTKFLT'
|   SIGNIFY(STKFLT), SIGNIFY(POLL), SIGNIFY(PWR),
|   ^
Signed-off-by: Khem Raj raj.khem@gmail.com","mips doesn't have SIGSTKFLT. i've no idea why musl claims it's signal 7. the kernel disagrees, calling that SIGEMT :-)",True,{}
landley/toybox,https://github.com/landley/toybox,195,2020-05-20T22:37:47Z,2020-05-21T07:50:36Z,2020-05-21T07:50:36Z,CLOSED,False,4,1,1,https://github.com/kraj,glibc on mips is missing SIGSTKFLT,1,[],https://github.com/landley/toybox/pull/195,https://github.com/landley,3,https://github.com/landley/toybox/pull/195#issuecomment-631941183,"Do not therefore assume it being available linuxwide
Fixes
| lib/portability.c:433:3: error: use of undeclared identifier 'SIGSTKFLT'
|   SIGNIFY(STKFLT), SIGNIFY(POLL), SIGNIFY(PWR),
|   ^
Signed-off-by: Khem Raj raj.khem@gmail.com",Applied.,True,{}
landley/toybox,https://github.com/landley/toybox,196,2020-05-21T20:58:20Z,2020-08-04T20:37:46Z,2020-08-04T20:37:46Z,CLOSED,False,4,1,1,https://github.com/kraj,Tackle SIGEMT and SIGSTKFLT is not glibc specific,1,[],https://github.com/landley/toybox/pull/196,https://github.com/kraj,1,https://github.com/landley/toybox/pull/196,Signed-off-by: Khem Raj raj.khem@gmail.com,Signed-off-by: Khem Raj raj.khem@gmail.com,True,{}
landley/toybox,https://github.com/landley/toybox,196,2020-05-21T20:58:20Z,2020-08-04T20:37:46Z,2020-08-04T20:37:46Z,CLOSED,False,4,1,1,https://github.com/kraj,Tackle SIGEMT and SIGSTKFLT is not glibc specific,1,[],https://github.com/landley/toybox/pull/196,https://github.com/landley,2,https://github.com/landley/toybox/pull/196#issuecomment-632479500,Signed-off-by: Khem Raj raj.khem@gmail.com,I already implemented my suggestion earlier today. Query: is SIGEMT also not there on mips? The earlier thread was just about SIGSTKFLT?,True,{}
landley/toybox,https://github.com/landley/toybox,196,2020-05-21T20:58:20Z,2020-08-04T20:37:46Z,2020-08-04T20:37:46Z,CLOSED,False,4,1,1,https://github.com/kraj,Tackle SIGEMT and SIGSTKFLT is not glibc specific,1,[],https://github.com/landley/toybox/pull/196,https://github.com/kraj,3,https://github.com/landley/toybox/pull/196#issuecomment-632765032,Signed-off-by: Khem Raj raj.khem@gmail.com,Its only defined for mips/sparc/alpha in glibc so checking for definition is wise thing to do.,True,{}
landley/toybox,https://github.com/landley/toybox,196,2020-05-21T20:58:20Z,2020-08-04T20:37:46Z,2020-08-04T20:37:46Z,CLOSED,False,4,1,1,https://github.com/kraj,Tackle SIGEMT and SIGSTKFLT is not glibc specific,1,[],https://github.com/landley/toybox/pull/196,https://github.com/enh-google,4,https://github.com/landley/toybox/pull/196#issuecomment-668813063,Signed-off-by: Khem Raj raj.khem@gmail.com,fix merged.,True,{}
landley/toybox,https://github.com/landley/toybox,197,2020-05-26T18:26:16Z,2020-05-27T19:51:44Z,2020-05-27T19:51:45Z,CLOSED,False,134,145,6,https://github.com/E5ten,Replace [gs]ettimeofday with clock_[gs]ettime,6,[],https://github.com/landley/toybox/pull/197,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/197,"gettimeofday is XSI, not POSIX, and is marked obsolete, while settimeofday is non-standard. Switch use of these functions to their modern replacements.","gettimeofday is XSI, not POSIX, and is marked obsolete, while settimeofday is non-standard. Switch use of these functions to their modern replacements.",True,{}
landley/toybox,https://github.com/landley/toybox,197,2020-05-26T18:26:16Z,2020-05-27T19:51:44Z,2020-05-27T19:51:45Z,CLOSED,False,134,145,6,https://github.com/E5ten,Replace [gs]ettimeofday with clock_[gs]ettime,6,[],https://github.com/landley/toybox/pull/197,https://github.com/E5ten,2,https://github.com/landley/toybox/pull/197#issuecomment-634307356,"gettimeofday is XSI, not POSIX, and is marked obsolete, while settimeofday is non-standard. Switch use of these functions to their modern replacements.","In addition to musl ignoring the settimeofday timezone argument, mentioned in the hwclock commit, glibc 2.31 and up apparently errors when settimeofday is called with both arguments non-NULL.",True,{}
landley/toybox,https://github.com/landley/toybox,197,2020-05-26T18:26:16Z,2020-05-27T19:51:44Z,2020-05-27T19:51:45Z,CLOSED,False,134,145,6,https://github.com/E5ten,Replace [gs]ettimeofday with clock_[gs]ettime,6,[],https://github.com/landley/toybox/pull/197,https://github.com/landley,3,https://github.com/landley/toybox/pull/197#issuecomment-634886985,"gettimeofday is XSI, not POSIX, and is marked obsolete, while settimeofday is non-standard. Switch use of these functions to their modern replacements.",Six patches in one pull request.,True,{}
landley/toybox,https://github.com/landley/toybox,197,2020-05-26T18:26:16Z,2020-05-27T19:51:44Z,2020-05-27T19:51:45Z,CLOSED,False,134,145,6,https://github.com/E5ten,Replace [gs]ettimeofday with clock_[gs]ettime,6,[],https://github.com/landley/toybox/pull/197,https://github.com/E5ten,4,https://github.com/landley/toybox/pull/197#issuecomment-634893505,"gettimeofday is XSI, not POSIX, and is marked obsolete, while settimeofday is non-standard. Switch use of these functions to their modern replacements.","Sorry about that, I'll split them up.",True,{}
landley/toybox,https://github.com/landley/toybox,197,2020-05-26T18:26:16Z,2020-05-27T19:51:44Z,2020-05-27T19:51:45Z,CLOSED,False,134,145,6,https://github.com/E5ten,Replace [gs]ettimeofday with clock_[gs]ettime,6,[],https://github.com/landley/toybox/pull/197,https://github.com/E5ten,5,https://github.com/landley/toybox/pull/197#issuecomment-634904415,"gettimeofday is XSI, not POSIX, and is marked obsolete, while settimeofday is non-standard. Switch use of these functions to their modern replacements.","Made a new PR for each command changed, closing this one.",True,{}
landley/toybox,https://github.com/landley/toybox,198,2020-05-26T20:05:33Z,2020-05-27T06:16:45Z,2020-06-01T16:40:45Z,CLOSED,False,1,1,1,https://github.com/E5ten,devmem: replace getpagesize with POSIX sysconf(_SC_PAGESIZE),1,[],https://github.com/landley/toybox/pull/198,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/198,,,True,{}
landley/toybox,https://github.com/landley/toybox,198,2020-05-26T20:05:33Z,2020-05-27T06:16:45Z,2020-06-01T16:40:45Z,CLOSED,False,1,1,1,https://github.com/E5ten,devmem: replace getpagesize with POSIX sysconf(_SC_PAGESIZE),1,[],https://github.com/landley/toybox/pull/198,https://github.com/landley,2,https://github.com/landley/toybox/pull/198#issuecomment-634452353,,applied,True,{}
landley/toybox,https://github.com/landley/toybox,198,2020-05-26T20:05:33Z,2020-05-27T06:16:45Z,2020-06-01T16:40:45Z,CLOSED,False,1,1,1,https://github.com/E5ten,devmem: replace getpagesize with POSIX sysconf(_SC_PAGESIZE),1,[],https://github.com/landley/toybox/pull/198,https://github.com/landley,3,https://github.com/landley/toybox/pull/198#issuecomment-636437925,,"You know, I applied this (f29cde5) but I have a question: how is libc supposed to get this value? Isn't it just going to call the same syscall? Because the reason I didn't hardwire it in as 4k is it varies per architecture, sometimes as a kernel config. (I don't know of any modern system where it's NOT 4k, and the only one with significant historical usage was apparently Alpha, but in theory the same libc can run with different page sizes. Meaning you need a system call or similar to find the info, and Linux HAS a system call, which is why I was calling it...)
How is ""let somebody else make the exact same system call for you"" a good thing? Gratuitous unnecessary wrapper pulled in out of a library that MUST do the same thing we're doing here? Yanking unnecessary layers of indirection is how toybox is small and simple.
What, specifically, is the proposed advantage?",True,{}
landley/toybox,https://github.com/landley/toybox,198,2020-05-26T20:05:33Z,2020-05-27T06:16:45Z,2020-06-01T16:40:45Z,CLOSED,False,1,1,1,https://github.com/E5ten,devmem: replace getpagesize with POSIX sysconf(_SC_PAGESIZE),1,[],https://github.com/landley/toybox/pull/198,https://github.com/enh-google,4,https://github.com/landley/toybox/pull/198#issuecomment-636977004,,"(note that there are very few architectures where getpagesize() is actually a syscall --- stuff like alpha and sparc, nothing commercially relevant in 2020. instead there's an AT_PAGESZ in the ELF auxval stuff. but the general point probably still stands. interestingly, by historical accident bionic just returns the constant PAGE_SIZE for getpagesize() whereas sysconf() actually does the getauxval() lookup. funnily enough, most would-be callers seem to just inline PAGE_SIZE anyway, which makes it hard to know how we'd move up from 4KiB pages without breaking a lot of apps.)",True,{}
landley/toybox,https://github.com/landley/toybox,199,2020-05-26T21:36:15Z,2020-08-04T20:38:21Z,2020-08-04T20:38:21Z,CLOSED,False,6,6,2,https://github.com/E5ten,"Remove XSI putenv usage, replace with POSIX setenv",2,[],https://github.com/landley/toybox/pull/199,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/199,,,True,{}
landley/toybox,https://github.com/landley/toybox,199,2020-05-26T21:36:15Z,2020-08-04T20:38:21Z,2020-08-04T20:38:21Z,CLOSED,False,6,6,2,https://github.com/E5ten,"Remove XSI putenv usage, replace with POSIX setenv",2,[],https://github.com/landley/toybox/pull/199,https://github.com/enh-google,2,https://github.com/landley/toybox/pull/199#issuecomment-668813360,,(discussed on mailing list.),True,{}
landley/toybox,https://github.com/landley/toybox,200,2020-05-26T23:21:51Z,2020-05-27T19:31:20Z,2020-05-27T19:37:15Z,CLOSED,False,9,16,2,https://github.com/E5ten,"lib.[ch]: switch loggit to macro, to avoid non-standard vsyslog",1,[],https://github.com/landley/toybox/pull/200,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/200,,,True,{}
landley/toybox,https://github.com/landley/toybox,200,2020-05-26T23:21:51Z,2020-05-27T19:31:20Z,2020-05-27T19:37:15Z,CLOSED,False,9,16,2,https://github.com/E5ten,"lib.[ch]: switch loggit to macro, to avoid non-standard vsyslog",1,[],https://github.com/landley/toybox/pull/200,https://github.com/E5ten,2,https://github.com/landley/toybox/pull/200#issuecomment-634371365,,"Related question, is there a reason to keep loggit in lib, given that it's only used in su?",True,{}
landley/toybox,https://github.com/landley/toybox,200,2020-05-26T23:21:51Z,2020-05-27T19:31:20Z,2020-05-27T19:37:15Z,CLOSED,False,9,16,2,https://github.com/E5ten,"lib.[ch]: switch loggit to macro, to avoid non-standard vsyslog",1,[],https://github.com/landley/toybox/pull/200,https://github.com/landley,3,https://github.com/landley/toybox/pull/200#issuecomment-634893261,,No.,True,{}
landley/toybox,https://github.com/landley/toybox,200,2020-05-26T23:21:51Z,2020-05-27T19:31:20Z,2020-05-27T19:37:15Z,CLOSED,False,9,16,2,https://github.com/E5ten,"lib.[ch]: switch loggit to macro, to avoid non-standard vsyslog",1,[],https://github.com/landley/toybox/pull/200,https://github.com/landley,4,https://github.com/landley/toybox/pull/200#issuecomment-634895114,,"I believe the original intent was to have the other users of syslog in pending go through that function? It's been a while. (But function to multiline macro expanding in each caller because posix hasn't caught up to reality is not a compelling change. What's it ""portable"" to?)",True,{}
landley/toybox,https://github.com/landley/toybox,200,2020-05-26T23:21:51Z,2020-05-27T19:31:20Z,2020-05-27T19:37:15Z,CLOSED,False,9,16,2,https://github.com/E5ten,"lib.[ch]: switch loggit to macro, to avoid non-standard vsyslog",1,[],https://github.com/landley/toybox/pull/200,https://github.com/E5ten,5,https://github.com/landley/toybox/pull/200#issuecomment-634896707,,"Fair enough, multiline macros are not ideal.",True,{}
landley/toybox,https://github.com/landley/toybox,201,2020-05-26T23:43:38Z,2020-05-27T19:29:14Z,2020-05-27T19:55:12Z,CLOSED,False,2,3,1,https://github.com/E5ten,dhcpd: fix warnings,1,[],https://github.com/landley/toybox/pull/201,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/201,"Add presumably intended conversion specifier for gconfig.valid_lifetime
as it is an argument to error_msg despite the format string having no
conversion specifiers.
Remove always true false inverse check for address of array
gstate.rcvd.rcvd_pkt6.transaction_id.","Add presumably intended conversion specifier for gconfig.valid_lifetime
as it is an argument to error_msg despite the format string having no
conversion specifiers.
Remove always true false inverse check for address of array
gstate.rcvd.rcvd_pkt6.transaction_id.",True,{}
landley/toybox,https://github.com/landley/toybox,201,2020-05-26T23:43:38Z,2020-05-27T19:29:14Z,2020-05-27T19:55:12Z,CLOSED,False,2,3,1,https://github.com/E5ten,dhcpd: fix warnings,1,[],https://github.com/landley/toybox/pull/201,https://github.com/landley,2,https://github.com/landley/toybox/pull/201#issuecomment-634892045,"Add presumably intended conversion specifier for gconfig.valid_lifetime
as it is an argument to error_msg despite the format string having no
conversion specifiers.
Remove always true false inverse check for address of array
gstate.rcvd.rcvd_pkt6.transaction_id.","Applied (3c01911) with %u instead of PRIu32 (we're LP64, but even on winders ""int"" is always 32 bits).",True,{}
landley/toybox,https://github.com/landley/toybox,201,2020-05-26T23:43:38Z,2020-05-27T19:29:14Z,2020-05-27T19:55:12Z,CLOSED,False,2,3,1,https://github.com/E5ten,dhcpd: fix warnings,1,[],https://github.com/landley/toybox/pull/201,https://github.com/E5ten,3,https://github.com/landley/toybox/pull/201#issuecomment-634906018,"Add presumably intended conversion specifier for gconfig.valid_lifetime
as it is an argument to error_msg despite the format string having no
conversion specifiers.
Remove always true false inverse check for address of array
gstate.rcvd.rcvd_pkt6.transaction_id.","Awesome, I now get no warnings on an allyesconfig build, aside from the intended one in skeleton.c.",True,{}
landley/toybox,https://github.com/landley/toybox,203,2020-05-27T15:59:19Z,2020-05-27T20:57:43Z,2020-05-27T20:57:44Z,CLOSED,False,6,3,2,https://github.com/E5ten,Replace uses of obsolete usleep with POSIX nanosleep,2,[],https://github.com/landley/toybox/pull/203,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/203,,,True,{}
landley/toybox,https://github.com/landley/toybox,203,2020-05-27T15:59:19Z,2020-05-27T20:57:43Z,2020-05-27T20:57:44Z,CLOSED,False,6,3,2,https://github.com/E5ten,Replace uses of obsolete usleep with POSIX nanosleep,2,[],https://github.com/landley/toybox/pull/203,https://github.com/landley,2,https://github.com/landley/toybox/pull/203#issuecomment-634935364,,"There's msleep() in lib, used that instead.",True,{}
landley/toybox,https://github.com/landley/toybox,204,2020-05-27T19:32:37Z,2020-05-27T22:21:37Z,2020-05-27T22:21:37Z,CLOSED,False,0,20,1,https://github.com/E5ten,route: remove unused get_hostname(),1,[],https://github.com/landley/toybox/pull/204,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/204,,,True,{}
landley/toybox,https://github.com/landley/toybox,205,2020-05-27T19:46:56Z,2020-08-04T20:33:24Z,2020-08-04T20:33:24Z,CLOSED,False,8,19,1,https://github.com/E5ten,hwclock: switch obsolete non-POSIX [gs]ettimeofday to clock_[gs]ettime,1,[],https://github.com/landley/toybox/pull/205,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/205,"Remove timezone handling, clock_settime does not support it, and the
timezone argument to settimeofday is a no-op on musl anyway.
EDIT: relevant comment I made on the previous PR that included this commit:
In addition to musl ignoring the settimeofday timezone argument, mentioned in the hwclock commit, glibc 2.31 and up apparently errors when settimeofday is called with both arguments non-NULL.","Remove timezone handling, clock_settime does not support it, and the
timezone argument to settimeofday is a no-op on musl anyway.
EDIT: relevant comment I made on the previous PR that included this commit:
In addition to musl ignoring the settimeofday timezone argument, mentioned in the hwclock commit, glibc 2.31 and up apparently errors when settimeofday is called with both arguments non-NULL.",True,{}
landley/toybox,https://github.com/landley/toybox,205,2020-05-27T19:46:56Z,2020-08-04T20:33:24Z,2020-08-04T20:33:24Z,CLOSED,False,8,19,1,https://github.com/E5ten,hwclock: switch obsolete non-POSIX [gs]ettimeofday to clock_[gs]ettime,1,[],https://github.com/landley/toybox/pull/205,https://github.com/enh-google,2,https://github.com/landley/toybox/pull/205#issuecomment-668811189,"Remove timezone handling, clock_settime does not support it, and the
timezone argument to settimeofday is a no-op on musl anyway.
EDIT: relevant comment I made on the previous PR that included this commit:
In addition to musl ignoring the settimeofday timezone argument, mentioned in the hwclock commit, glibc 2.31 and up apparently errors when settimeofday is called with both arguments non-NULL.",(discussed on mailing list.),True,{}
landley/toybox,https://github.com/landley/toybox,206,2020-05-27T19:47:46Z,2020-08-04T20:33:35Z,2020-08-04T20:33:35Z,CLOSED,False,47,47,1,https://github.com/E5ten,arping: switch obsolete non-POSIX gettimeofday to clock_gettime,1,[],https://github.com/landley/toybox/pull/206,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/206,"Switch to FLAG macros.
Remove trailing whitespace at the end of lines.","Switch to FLAG macros.
Remove trailing whitespace at the end of lines.",True,{}
landley/toybox,https://github.com/landley/toybox,206,2020-05-27T19:47:46Z,2020-08-04T20:33:35Z,2020-08-04T20:33:35Z,CLOSED,False,47,47,1,https://github.com/E5ten,arping: switch obsolete non-POSIX gettimeofday to clock_gettime,1,[],https://github.com/landley/toybox/pull/206,https://github.com/enh-google,2,https://github.com/landley/toybox/pull/206#issuecomment-668811263,"Switch to FLAG macros.
Remove trailing whitespace at the end of lines.",(discussed on mailing list.),True,{}
landley/toybox,https://github.com/landley/toybox,207,2020-05-27T19:48:43Z,2020-08-04T20:32:56Z,2020-08-04T20:32:56Z,CLOSED,False,6,6,1,https://github.com/E5ten,dd: switch obsolete non-POSIX gettimeofday to clock_gettime,1,[],https://github.com/landley/toybox/pull/207,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/207,,,True,{}
landley/toybox,https://github.com/landley/toybox,207,2020-05-27T19:48:43Z,2020-08-04T20:32:56Z,2020-08-04T20:32:56Z,CLOSED,False,6,6,1,https://github.com/E5ten,dd: switch obsolete non-POSIX gettimeofday to clock_gettime,1,[],https://github.com/landley/toybox/pull/207,https://github.com/enh-google,2,https://github.com/landley/toybox/pull/207#issuecomment-668810980,,(discussed on mailing list.),True,{}
landley/toybox,https://github.com/landley/toybox,208,2020-05-27T19:49:46Z,2020-08-04T20:33:07Z,2020-08-04T20:33:07Z,CLOSED,False,64,64,1,https://github.com/E5ten,traceroute: switch obsolete non-POSIX gettimeofday to clock_gettime,1,[],https://github.com/landley/toybox/pull/208,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/208,"Switch to FLAG macros.
Remove trailing whitespace at the end of lines.","Switch to FLAG macros.
Remove trailing whitespace at the end of lines.",True,{}
landley/toybox,https://github.com/landley/toybox,208,2020-05-27T19:49:46Z,2020-08-04T20:33:07Z,2020-08-04T20:33:07Z,CLOSED,False,64,64,1,https://github.com/E5ten,traceroute: switch obsolete non-POSIX gettimeofday to clock_gettime,1,[],https://github.com/landley/toybox/pull/208,https://github.com/enh-google,2,https://github.com/landley/toybox/pull/208#issuecomment-668811041,"Switch to FLAG macros.
Remove trailing whitespace at the end of lines.",(discussed on mailing list.),True,{}
landley/toybox,https://github.com/landley/toybox,209,2020-05-27T19:50:27Z,2020-08-04T20:33:45Z,2021-03-10T03:27:48Z,CLOSED,False,3,3,1,https://github.com/E5ten,date: replace non-standard settimeofday with clock_settime,1,[],https://github.com/landley/toybox/pull/209,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/209,,,True,{}
landley/toybox,https://github.com/landley/toybox,209,2020-05-27T19:50:27Z,2020-08-04T20:33:45Z,2021-03-10T03:27:48Z,CLOSED,False,3,3,1,https://github.com/E5ten,date: replace non-standard settimeofday with clock_settime,1,[],https://github.com/landley/toybox/pull/209,https://github.com/enh-google,2,https://github.com/landley/toybox/pull/209#issuecomment-668811329,,(discussed on mailing list.),True,{}
landley/toybox,https://github.com/landley/toybox,209,2020-05-27T19:50:27Z,2020-08-04T20:33:45Z,2021-03-10T03:27:48Z,CLOSED,False,3,3,1,https://github.com/E5ten,date: replace non-standard settimeofday with clock_settime,1,[],https://github.com/landley/toybox/pull/209,https://github.com/E5ten,3,https://github.com/landley/toybox/pull/209#issuecomment-793191347,,"So I was looking at this again, regardless of the portability matter (clock_settime is POSIX since 1993 vs settimeofday which isn't), using settimeofday here also loses precision:
    struct timeval tv;

    parse_date(setdate, &t);
    tv.tv_sec = t;
    tv.tv_usec = TT.nano/1000;
    if (settimeofday(&tv, NULL) < 0) perror_msg(""cannot set date"");
The time is in nanoseconds, but it's divided into microseconds for the timeval, while clock_settime and a timespec wouldn't lose precision. Based on that I think this change should be reconsidered.",True,{}
landley/toybox,https://github.com/landley/toybox,209,2020-05-27T19:50:27Z,2020-08-04T20:33:45Z,2021-03-10T03:27:48Z,CLOSED,False,3,3,1,https://github.com/E5ten,date: replace non-standard settimeofday with clock_settime,1,[],https://github.com/landley/toybox/pull/209,https://github.com/landley,4,https://github.com/landley/toybox/pull/209#issuecomment-793346536,,"On 3/8/21 6:11 PM, E5ten wrote:
 So I was looking at this again, regardless of the portability matter
 (clock_settime is POSIX since 1993 vs settimeofday which isn't), using
 settimeofday here also loses precision:

     struct timeval tv;

     parse_date(setdate, &t);
     tv.tv_sec = t;
     tv.tv_usec = TT.nano/1000;
     if (settimeofday(&tv, NULL) < 0) perror_msg(""cannot set date"");
""Use posix API"" makes sense to me.
 The time is in nanoseconds, but it's divided into microseconds for the timeval,
That doesn't.

How many nanoseconds do you think parse_date() takes to run? It's doing string
processing, usually in the wake of an ELF exec that isn't even guaranteed to
LD_BIND_NOW, using function/global/stack data from all over the place probably
causing mulutiple L1 cache line fetches. The _uncertainty_ in execution times is
probably a microsecond.

I've done a couple years of realtime processing on embedded devices using our
own GPS implementation to get our clock to stay +/- 2 nanoseconds. This involves
a thermally stabilized tcx0 under extra insulation with three different feedback
loops applying a constant offset to figure out what the time should be, and the
clock STILL went out of spec when somebody opened the door of the room it was in
while that part of the board was under half an inch of styrofoam. (Deployment
calls for a big metal case.)

When dealing with nanoseconds, everything is a historical value you're
correlating with other timestamped historical values because PROCESSING of any
of this information takes MANY NANOSECONDS, and it's never (reliably) a constant
amount. A water-cooled 5ghz processor gets maybe ~15 CPU instructions per
nanosecond (cache local, 3 deeply pipelined execution units with no bubbles)
BEST CASE (and that assumes speculative execution with branch prediction and/or
jumpless programming). Just the JITTER on a cache line fetch is multiple
nanoseconds.

That GPS board I worked on has a nommu processor running code out of SRAM and
still had issues with 3 clocks sliding past each other on the same board a
couple centimeters apart. (cpu clock, tcxo, antenna sampling clock: there was a
proposal to drive the CPU from a multiple of the antenna clock to avoid that,
but the base clock is 1ghz and the antenna clock isn't evenly divisible by that,
which means we'd have to tweak the kernel clock driver to do jiffy conversion...
And right now we have a really convenient memory mapped nanosecond counter we
can just read from a memory location to time various bits of the code, it would
still be convenient but would no longer read in nanoseconds...)
 while clock_settime and a timespec wouldn't lose precision. Based on that I
 think this change should be reconsidered.
And then of course to set the clock we're making a system call:

https://www.researchgate.net/figure/Cycle-counts-for-an-empty-system-call-after-touching-data-in-memory-and-caches-measured_fig4_278023464

I'd be amazed if we could set the CPU clock ONLY 500 nanoseconds late as a shell
builtin avoiding the fork/exec.

Rob",True,{}
landley/toybox,https://github.com/landley/toybox,209,2020-05-27T19:50:27Z,2020-08-04T20:33:45Z,2021-03-10T03:27:48Z,CLOSED,False,3,3,1,https://github.com/E5ten,date: replace non-standard settimeofday with clock_settime,1,[],https://github.com/landley/toybox/pull/209,https://github.com/E5ten,5,https://github.com/landley/toybox/pull/209#issuecomment-793439811,,"""Use POSIX API"" was my main reason anyway, if that's good enough for you then great lol",True,{}
landley/toybox,https://github.com/landley/toybox,209,2020-05-27T19:50:27Z,2020-08-04T20:33:45Z,2021-03-10T03:27:48Z,CLOSED,False,3,3,1,https://github.com/E5ten,date: replace non-standard settimeofday with clock_settime,1,[],https://github.com/landley/toybox/pull/209,https://github.com/landley,6,https://github.com/landley/toybox/pull/209#issuecomment-793620818,,"On 3/9/21 12:02 AM, E5ten wrote:
 ""Use POSIX API"" was my main reason anyway, if that's good enough for you then
 great lol
""Use posix api"" is a reason to look into it, but not necessarily to do it. The
settimeofday man page says:

CONFORMING TO
       SVr4, 4.3BSD.  POSIX.1-2001 describes gettimeofday() but not settimeof‐
       day().  POSIX.1-2008 marks gettimeofday() as obsolete, recommending the
       use of clock_gettime(2) instead.

Which says to ME this is like ANSI C coming up with its own fopen() api because
it didn't like the existing unix file descriptors for some reason. (C and Unix
were created by the same people, an attempt to ""standardize"" by deciding you
don't LIKE some of the original plumbing for no obvious reason is not a reason
to move off the original plumbing?)

When you said ""this change should be reconsidered"" I thought you meant updating
a recent commit to date.c, but according to git annotate the settimeofday()
call's line in date.c is from 2012. I admit I'm not a fan of microseconds
because milliseconds and nanoseconds have more reason to exist (one's human
visible and the other's cpu visible):

  https://landley.net/notes-2018.html#06-10-2018

But in this case we can't achieve more precision than we're already doing and
the change seems like pointless churn. It has literally no benefit except
compliance with a standard that intentionally decided not to include it for no
obvious reason, and was UNIVERSALLY ignored in this. (Is there a vaguely unixish
build environment settimeofday() ISN'T available in? It's in sparc, aix, qnx,
mbed, newlib/libgloss...)

Personally, I always find clock_settime() a bit of a headache because it wants
to know WHICH clock to set (posix mentions 2, the linux man page mentions 8),
and I REALLY don't want to have to care. The difference between the starbucks
menu and just ordering ""a coffee"" from a place that will give you ""a coffee""...

Rob",True,{}
landley/toybox,https://github.com/landley/toybox,209,2020-05-27T19:50:27Z,2020-08-04T20:33:45Z,2021-03-10T03:27:48Z,CLOSED,False,3,3,1,https://github.com/E5ten,date: replace non-standard settimeofday with clock_settime,1,[],https://github.com/landley/toybox/pull/209,https://github.com/E5ten,7,https://github.com/landley/toybox/pull/209#issuecomment-793668231,,"Unless you have specific reason to use a different one, you can just assume CLOCK_REALTIME is what you want, it's equivalent to what [gs]ettimeofday use.",True,{}
landley/toybox,https://github.com/landley/toybox,209,2020-05-27T19:50:27Z,2020-08-04T20:33:45Z,2021-03-10T03:27:48Z,CLOSED,False,3,3,1,https://github.com/E5ten,date: replace non-standard settimeofday with clock_settime,1,[],https://github.com/landley/toybox/pull/209,https://github.com/E5ten,8,https://github.com/landley/toybox/pull/209#issuecomment-793679659,,"Also, this file already uses the timespec clock_* API with clock_gettime right above, imo it makes sense to be consistent here and use clock_settime as well.",True,{}
landley/toybox,https://github.com/landley/toybox,209,2020-05-27T19:50:27Z,2020-08-04T20:33:45Z,2021-03-10T03:27:48Z,CLOSED,False,3,3,1,https://github.com/E5ten,date: replace non-standard settimeofday with clock_settime,1,[],https://github.com/landley/toybox/pull/209,https://github.com/landley,9,https://github.com/landley/toybox/pull/209#issuecomment-794442146,,So if I use both open() and fopen() in parts of the same program I should definitely remove all uses of file descriptors since that's not what C99 decided to standardize?,True,{}
landley/toybox,https://github.com/landley/toybox,209,2020-05-27T19:50:27Z,2020-08-04T20:33:45Z,2021-03-10T03:27:48Z,CLOSED,False,3,3,1,https://github.com/E5ten,date: replace non-standard settimeofday with clock_settime,1,[],https://github.com/landley/toybox/pull/209,https://github.com/E5ten,10,https://github.com/landley/toybox/pull/209#issuecomment-794484625,,"I don't think that comparison is very fair, stdio and file descriptors are different functionality, settimeofday/clock_settime are the same functionality, with one non-standard and the other standard for decades.
Separately, in response to When you said ""this change should be reconsidered""... because I missed that part before, what I meant by ""this change"" was this PR, as in it should be reconsidered for inclusion. Sorry for the confusion.",True,{}
landley/toybox,https://github.com/landley/toybox,210,2020-05-27T19:51:17Z,2020-08-04T20:32:41Z,2020-08-04T20:32:41Z,CLOSED,False,6,6,1,https://github.com/E5ten,time: switch obsolete non-POSIX gettimeofday to clock_gettime,1,[],https://github.com/landley/toybox/pull/210,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/210,,,True,{}
landley/toybox,https://github.com/landley/toybox,210,2020-05-27T19:51:17Z,2020-08-04T20:32:41Z,2020-08-04T20:32:41Z,CLOSED,False,6,6,1,https://github.com/E5ten,time: switch obsolete non-POSIX gettimeofday to clock_gettime,1,[],https://github.com/landley/toybox/pull/210,https://github.com/enh-google,2,https://github.com/landley/toybox/pull/210#issuecomment-668810853,,(discussed on mailing list.),True,{}
landley/toybox,https://github.com/landley/toybox,211,2020-05-28T16:52:21Z,2020-08-04T20:38:33Z,2020-08-04T20:38:33Z,CLOSED,False,15,7,2,https://github.com/E5ten,"Replace obsolete and non-standard gethostbyname{,2} with getaddrinfo",2,[],https://github.com/landley/toybox/pull/211,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/211,,,True,{}
landley/toybox,https://github.com/landley/toybox,211,2020-05-28T16:52:21Z,2020-08-04T20:38:33Z,2020-08-04T20:38:33Z,CLOSED,False,15,7,2,https://github.com/E5ten,"Replace obsolete and non-standard gethostbyname{,2} with getaddrinfo",2,[],https://github.com/landley/toybox/pull/211,https://github.com/enh-google,2,https://github.com/landley/toybox/pull/211#issuecomment-668813447,,(discussed on mailing list.),True,{}
landley/toybox,https://github.com/landley/toybox,212,2020-05-28T17:11:04Z,2020-08-04T20:33:59Z,2020-08-04T20:34:00Z,CLOSED,False,4,4,4,https://github.com/E5ten,Replace non-standard setlinebuf with setvbuf,4,[],https://github.com/landley/toybox/pull/212,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/212,,,True,{}
landley/toybox,https://github.com/landley/toybox,212,2020-05-28T17:11:04Z,2020-08-04T20:33:59Z,2020-08-04T20:34:00Z,CLOSED,False,4,4,4,https://github.com/E5ten,Replace non-standard setlinebuf with setvbuf,4,[],https://github.com/landley/toybox/pull/212,https://github.com/enh-google,2,https://github.com/landley/toybox/pull/212#issuecomment-668811446,,(discussed on mailing list.),True,{}
landley/toybox,https://github.com/landley/toybox,213,2020-05-28T18:28:36Z,,2020-05-28T18:28:36Z,OPEN,False,30,31,2,https://github.com/E5ten,Switch from obsolete utmp interface to utmpx,2,[],https://github.com/landley/toybox/pull/213,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/213,"On linux, utmp isn't obsolete, and utmpx is the same as it, but on pretty much any other system utmp is obsolete and utmpx should be used instead.","On linux, utmp isn't obsolete, and utmpx is the same as it, but on pretty much any other system utmp is obsolete and utmpx should be used instead.",True,{}
landley/toybox,https://github.com/landley/toybox,214,2020-05-29T01:55:34Z,,2020-06-01T16:45:47Z,OPEN,False,7,7,5,https://github.com/E5ten,"Remove semicolon following GLOBALS macro in the few commands that had one, as well as unneeded semicolons following one line cp functions",5,[],https://github.com/landley/toybox/pull/214,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/214,"These cause a -Wextra-semi (if it is enabled) warning for every inclusion of globals.h, due to a double-semicolon following the structs for these commands' global variables. Remove the unnecessary semicolons.","These cause a -Wextra-semi (if it is enabled) warning for every inclusion of globals.h, due to a double-semicolon following the structs for these commands' global variables. Remove the unnecessary semicolons.",True,{}
landley/toybox,https://github.com/landley/toybox,214,2020-05-29T01:55:34Z,,2020-06-01T16:45:47Z,OPEN,False,7,7,5,https://github.com/E5ten,"Remove semicolon following GLOBALS macro in the few commands that had one, as well as unneeded semicolons following one line cp functions",5,[],https://github.com/landley/toybox/pull/214,https://github.com/landley,2,https://github.com/landley/toybox/pull/214#issuecomment-636408336,"These cause a -Wextra-semi (if it is enabled) warning for every inclusion of globals.h, due to a double-semicolon following the structs for these commands' global variables. Remove the unnecessary semicolons.",Does this change actually accomplish anything?,True,{}
landley/toybox,https://github.com/landley/toybox,214,2020-05-29T01:55:34Z,,2020-06-01T16:45:47Z,OPEN,False,7,7,5,https://github.com/E5ten,"Remove semicolon following GLOBALS macro in the few commands that had one, as well as unneeded semicolons following one line cp functions",5,[],https://github.com/landley/toybox/pull/214,https://github.com/enh-google,3,https://github.com/landley/toybox/pull/214#issuecomment-636979441,"These cause a -Wextra-semi (if it is enabled) warning for every inclusion of globals.h, due to a double-semicolon following the structs for these commands' global variables. Remove the unnecessary semicolons.",...it would mean i have no chance of winning the pedantry award for 0.8.4 :-),True,{}
landley/toybox,https://github.com/landley/toybox,215,2020-05-29T16:21:58Z,2020-08-04T20:32:15Z,2020-08-04T20:32:15Z,CLOSED,False,3,3,2,https://github.com/E5ten,replace non-standard zero-size arrays with flexible array members,2,[],https://github.com/landley/toybox/pull/215,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/215,,,True,{}
landley/toybox,https://github.com/landley/toybox,215,2020-05-29T16:21:58Z,2020-08-04T20:32:15Z,2020-08-04T20:32:15Z,CLOSED,False,3,3,2,https://github.com/E5ten,replace non-standard zero-size arrays with flexible array members,2,[],https://github.com/landley/toybox/pull/215,https://github.com/landley,2,https://github.com/landley/toybox/pull/215#issuecomment-636306391,,Is there a reason? What compiler does toybox build with after this change that it didn't build with before?,True,{}
landley/toybox,https://github.com/landley/toybox,216,2020-05-29T16:41:53Z,2020-05-30T09:46:10Z,2020-05-30T09:46:11Z,CLOSED,False,3,3,2,https://github.com/E5ten,Remove GNU-extensions in variadic macros,2,[],https://github.com/landley/toybox/pull/216,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/216,,,True,{}
landley/toybox,https://github.com/landley/toybox,216,2020-05-29T16:41:53Z,2020-05-30T09:46:10Z,2020-05-30T09:46:11Z,CLOSED,False,3,3,2,https://github.com/E5ten,Remove GNU-extensions in variadic macros,2,[],https://github.com/landley/toybox/pull/216,https://github.com/landley,2,https://github.com/landley/toybox/pull/216#issuecomment-636306808,,"The kconfig subdirectory is code copied from the linux kernel, which should be completely replaced (for license reasons as much as anything else, also because the current kernel version is turing-complete so ""make oldconfig"" can ""rm -rf /home"" and this one isn't). Random deltas from the upstream is pointless churn.
The other command is in pending, I highly doubt the macro will survive cleanup. A debug printf macro isn't the sort of thing that ships in a completed command.",True,{}
landley/toybox,https://github.com/landley/toybox,217,2020-05-29T18:35:48Z,2020-08-04T18:38:58Z,2020-08-04T18:38:58Z,CLOSED,False,8,4,2,https://github.com/E5ten,"Remove use of GNU C extensions typeof, and statement expressions",2,[],https://github.com/landley/toybox/pull/217,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/217,,,True,{}
landley/toybox,https://github.com/landley/toybox,217,2020-05-29T18:35:48Z,2020-08-04T18:38:58Z,2020-08-04T18:38:58Z,CLOSED,False,8,4,2,https://github.com/E5ten,"Remove use of GNU C extensions typeof, and statement expressions",2,[],https://github.com/landley/toybox/pull/217,https://github.com/landley,2,https://github.com/landley/toybox/pull/217#issuecomment-636309572,,"toybox's maxof() and minof() don't have double evaluation problems, they're defined in lib/lib.h:
#define minof(a, b) ({typeof(a) aa = (a); typeof(b) bb = (b); aa<bb ? aa : bb;})
#define maxof(a, b) ({typeof(a) aa = (a); typeof(b) bb = (b); aa>bb ? aa : bb;})
It snapshots them into local variables with the same type as the argument precisely so it doesn't evaluate the argument twice.
So first you remove a use that's valid for the existing implementation, and then you break the implementation. What on earth is the point of this? This works fine in llvm, what broken compiler are you trying to work around the deficiencies of? Or is this ""infrastructure in search of a user"" where you think someday someone might want to build on Turbo C?
Are you going to remove the ~2000 uses of typeof() from the linux kernel? Or do you expect to build with a compiler that doesn't build the linux kernel? (If so, which compiler?)
~/linux$ toybox grep -rwM '*.[ch]' typeof | wc -l
1919",True,{}
landley/toybox,https://github.com/landley/toybox,218,2020-05-29T21:16:53Z,2020-05-30T10:17:57Z,2020-05-30T16:12:20Z,CLOSED,False,87,88,5,https://github.com/E5ten,Remove anonymous unions,5,[],https://github.com/landley/toybox/pull/218,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/218,"These are either GNU extensions to c99/c11, the toybox design page says it's supposed to be c99, so name previously anonymous unions ""u"".","These are either GNU extensions to c99/c11, the toybox design page says it's supposed to be c99, so name previously anonymous unions ""u"".",True,{}
landley/toybox,https://github.com/landley/toybox,218,2020-05-29T21:16:53Z,2020-05-30T10:17:57Z,2020-05-30T16:12:20Z,CLOSED,False,87,88,5,https://github.com/E5ten,Remove anonymous unions,5,[],https://github.com/landley/toybox/pull/218,https://github.com/landley,2,https://github.com/landley/toybox/pull/218#issuecomment-636310215,"These are either GNU extensions to c99/c11, the toybox design page says it's supposed to be c99, so name previously anonymous unions ""u"".","Read the comment at https://github.com/landley/toybox/blob/114541b98/toys/pending/sh.c#L1134 to see ""yes, I am aware of this, I made an explicit choice to do it this way"" because otherwise every reference to this gets gratuitously longer for no reason. It bloats the code for no benefit.
Portability TO WHAT? FOR WHO? What specifically are you trying to accomplish here? This builds with gcc and with llvm and presumably with intel's icc and I used to maintain a tinycc fork that I can pick up again and make compile this. The required behavior is not ambiguous.",True,{}
landley/toybox,https://github.com/landley/toybox,218,2020-05-29T21:16:53Z,2020-05-30T10:17:57Z,2020-05-30T16:12:20Z,CLOSED,False,87,88,5,https://github.com/E5ten,Remove anonymous unions,5,[],https://github.com/landley/toybox/pull/218,https://github.com/landley,3,https://github.com/landley/toybox/pull/218#issuecomment-636310848,"These are either GNU extensions to c99/c11, the toybox design page says it's supposed to be c99, so name previously anonymous unions ""u"".","The design.html page mentions c99 three times. The first says ""we depend on c99 and posix-2008 features"" but then immediately talks about how we depend on stuff that isn't in either. (I.E. we're using those as a baseline. Necessary but not sufficient.) The second mention of c99 says ""c99 allows this but don't do it"". The third mention just says we use // style comments more than /* */ because you never have to worry about terminating a //, the issue of ""nesting"" doesn't come up ether, and I have yet to personally encounter an asterisk-at-start-of-line alignment war over multiline //.
It does not say we never use anything that ISN'T in a standard.",True,{}
landley/toybox,https://github.com/landley/toybox,218,2020-05-29T21:16:53Z,2020-05-30T10:17:57Z,2020-05-30T16:12:20Z,CLOSED,False,87,88,5,https://github.com/E5ten,Remove anonymous unions,5,[],https://github.com/landley/toybox/pull/218,https://github.com/E5ten,4,https://github.com/landley/toybox/pull/218#issuecomment-636352086,"These are either GNU extensions to c99/c11, the toybox design page says it's supposed to be c99, so name previously anonymous unions ""u"".","Sorry, I took the paragraph talking about c99 (the one following ""I don't do windows."") to mean that library types/functions/headers, and things related to the environment it's used in (like /proc) that aren't part of c99 were also required, I didn't realize that actual language extensions on-top of c99/posix were also included in the kind of extra stuff that was required.",True,{}
landley/toybox,https://github.com/landley/toybox,219,2020-05-29T22:00:53Z,2020-05-30T12:53:05Z,2020-05-30T12:53:05Z,CLOSED,False,18,9,2,https://github.com/E5ten,Remove use of GNU-extension of omitting the middle operand of a ternary.,2,[],https://github.com/landley/toybox/pull/219,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/219,,,True,{}
landley/toybox,https://github.com/landley/toybox,219,2020-05-29T22:00:53Z,2020-05-30T12:53:05Z,2020-05-30T12:53:05Z,CLOSED,False,18,9,2,https://github.com/E5ten,Remove use of GNU-extension of omitting the middle operand of a ternary.,2,[],https://github.com/landley/toybox/pull/219,https://github.com/landley,2,https://github.com/landley/toybox/pull/219#issuecomment-636327008,,No.,True,{}
landley/toybox,https://github.com/landley/toybox,220,2020-05-29T23:32:19Z,2020-08-04T20:38:44Z,2020-08-04T20:38:44Z,CLOSED,False,5,5,3,https://github.com/E5ten,"void pointer arithmetic is a GNU extension, get rid of it.",3,[],https://github.com/landley/toybox/pull/220,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/220,,,True,{}
landley/toybox,https://github.com/landley/toybox,220,2020-05-29T23:32:19Z,2020-08-04T20:38:44Z,2020-08-04T20:38:44Z,CLOSED,False,5,5,3,https://github.com/E5ten,"void pointer arithmetic is a GNU extension, get rid of it.",3,[],https://github.com/landley/toybox/pull/220,https://github.com/enh-google,2,https://github.com/landley/toybox/pull/220#issuecomment-668813510,,(discussed on mailing list.),True,{}
landley/toybox,https://github.com/landley/toybox,221,2020-05-30T00:06:48Z,2020-08-04T20:31:55Z,2020-08-04T20:31:55Z,CLOSED,False,7,7,3,https://github.com/E5ten,Replace GNU-extension empty struct initializers with 0 initializers.,3,[],https://github.com/landley/toybox/pull/221,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/221,,,True,{}
landley/toybox,https://github.com/landley/toybox,221,2020-05-30T00:06:48Z,2020-08-04T20:31:55Z,2020-08-04T20:31:55Z,CLOSED,False,7,7,3,https://github.com/E5ten,Replace GNU-extension empty struct initializers with 0 initializers.,3,[],https://github.com/landley/toybox/pull/221,https://github.com/landley,2,https://github.com/landley/toybox/pull/221#issuecomment-636408432,,Why?,True,{}
landley/toybox,https://github.com/landley/toybox,222,2020-05-30T05:08:53Z,2020-05-31T02:12:51Z,2020-05-31T02:12:51Z,CLOSED,False,75,27,11,https://github.com/E5ten,"void functions shouldn't return void expressions, separate the expressions from the return calls.",11,[],https://github.com/landley/toybox/pull/222,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/222,,,True,{}
landley/toybox,https://github.com/landley/toybox,222,2020-05-30T05:08:53Z,2020-05-31T02:12:51Z,2020-05-31T02:12:51Z,CLOSED,False,75,27,11,https://github.com/E5ten,"void functions shouldn't return void expressions, separate the expressions from the return calls.",11,[],https://github.com/landley/toybox/pull/222,https://github.com/landley,2,https://github.com/landley/toybox/pull/222#issuecomment-636409739,,"Replacing 1 line with 4 lines that do the exact same thing is an improvement how? (I did this intentionally. What you're saying is that you disagree.)
I agree the return in df.c is unnecessary.",True,{}
landley/toybox,https://github.com/landley/toybox,222,2020-05-30T05:08:53Z,2020-05-31T02:12:51Z,2020-05-31T02:12:51Z,CLOSED,False,75,27,11,https://github.com/E5ten,"void functions shouldn't return void expressions, separate the expressions from the return calls.",11,[],https://github.com/landley/toybox/pull/222,https://github.com/landley,3,https://github.com/landley/toybox/pull/222#issuecomment-636410147,,Removed the one nonfunctional return in aafe864,True,{}
landley/toybox,https://github.com/landley/toybox,223,2020-05-30T05:22:05Z,2020-08-17T15:57:37Z,2020-08-17T15:57:37Z,CLOSED,False,3,2,2,https://github.com/E5ten,2 miscellaneous C99 conformance fixes.,2,[],https://github.com/landley/toybox/pull/223,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/223,,,True,{}
landley/toybox,https://github.com/landley/toybox,223,2020-05-30T05:22:05Z,2020-08-17T15:57:37Z,2020-08-17T15:57:37Z,CLOSED,False,3,2,2,https://github.com/E5ten,2 miscellaneous C99 conformance fixes.,2,[],https://github.com/landley/toybox/pull/223,https://github.com/enh-google,2,https://github.com/landley/toybox/pull/223#issuecomment-674964755,,"i think these were rejected on the mailing list as ""gcc and clang don't care, so not a problem"".",True,{}
landley/toybox,https://github.com/landley/toybox,224,2020-06-05T17:06:04Z,2020-06-06T06:39:14Z,2020-06-06T06:39:14Z,CLOSED,False,3,1,1,https://github.com/eerimoq,Fix DNS 2 is the DHCP client.,1,[],https://github.com/landley/toybox/pull/224,https://github.com/eerimoq,1,https://github.com/landley/toybox/pull/224,,,True,{}
landley/toybox,https://github.com/landley/toybox,224,2020-06-05T17:06:04Z,2020-06-06T06:39:14Z,2020-06-06T06:39:14Z,CLOSED,False,3,1,1,https://github.com/eerimoq,Fix DNS 2 is the DHCP client.,1,[],https://github.com/landley/toybox/pull/224,https://github.com/eerimoq,2,https://github.com/landley/toybox/pull/224#issuecomment-639995236,,Merged.,True,{}
landley/toybox,https://github.com/landley/toybox,233,2020-08-09T23:44:34Z,2020-08-17T15:50:39Z,2020-08-17T15:50:40Z,CLOSED,False,11,11,6,https://github.com/frikiluser,"Fix spelling for some pending: dhcp, dhcp6, dhcpd, diff, fdisk, ip. Close: #232",1,[],https://github.com/landley/toybox/pull/233,https://github.com/frikiluser,1,https://github.com/landley/toybox/pull/233,"Pull request for spelling issue: #232
Affected (pending) toys: dhcp, dhcp6, dhcpd, diff, fdisk, ip.
Best regards,","Pull request for spelling issue: #232
Affected (pending) toys: dhcp, dhcp6, dhcpd, diff, fdisk, ip.
Best regards,",True,{}
landley/toybox,https://github.com/landley/toybox,233,2020-08-09T23:44:34Z,2020-08-17T15:50:39Z,2020-08-17T15:50:40Z,CLOSED,False,11,11,6,https://github.com/frikiluser,"Fix spelling for some pending: dhcp, dhcp6, dhcpd, diff, fdisk, ip. Close: #232",1,[],https://github.com/landley/toybox/pull/233,https://github.com/enh-google,2,https://github.com/landley/toybox/pull/233#issuecomment-674960870,"Pull request for spelling issue: #232
Affected (pending) toys: dhcp, dhcp6, dhcpd, diff, fdisk, ip.
Best regards,",(this was merged manually.),True,{}
landley/toybox,https://github.com/landley/toybox,234,2020-08-12T17:53:01Z,2020-08-18T09:07:10Z,2020-08-18T09:07:11Z,CLOSED,False,2,2,2,https://github.com/frikiluser,Add missing longopts alias for chgrp/chown and rmdir,1,[],https://github.com/landley/toybox/pull/234,https://github.com/frikiluser,1,https://github.com/landley/toybox/pull/234,"Heavily used long params under some contexts for already implemented
options:
chgrp/chown:
Add alias '--no-dereference' for '-h'
rmdir:
Add alias '--parents' for '-p'
--
Please, take those links as lists of current usages for both longopts and consider merging:
https://codesearch.debian.net/search?q=chown.*--no-dereference&literal=0
https://codesearch.debian.net/search?q=rmdir.*--parents&literal=0
Avoid adding the options to help text is the preferred way? I've seen that way in other toys (I.E. ps)
Regards,","Heavily used long params under some contexts for already implemented
options:
chgrp/chown:
Add alias '--no-dereference' for '-h'
rmdir:
Add alias '--parents' for '-p'
--
Please, take those links as lists of current usages for both longopts and consider merging:
https://codesearch.debian.net/search?q=chown.*--no-dereference&literal=0
https://codesearch.debian.net/search?q=rmdir.*--parents&literal=0
Avoid adding the options to help text is the preferred way? I've seen that way in other toys (I.E. ps)
Regards,",True,{}
landley/toybox,https://github.com/landley/toybox,234,2020-08-12T17:53:01Z,2020-08-18T09:07:10Z,2020-08-18T09:07:11Z,CLOSED,False,2,2,2,https://github.com/frikiluser,Add missing longopts alias for chgrp/chown and rmdir,1,[],https://github.com/landley/toybox/pull/234,https://github.com/enh-google,2,https://github.com/landley/toybox/pull/234#issuecomment-673136916,"Heavily used long params under some contexts for already implemented
options:
chgrp/chown:
Add alias '--no-dereference' for '-h'
rmdir:
Add alias '--parents' for '-p'
--
Please, take those links as lists of current usages for both longopts and consider merging:
https://codesearch.debian.net/search?q=chown.*--no-dereference&literal=0
https://codesearch.debian.net/search?q=rmdir.*--parents&literal=0
Avoid adding the options to help text is the preferred way? I've seen that way in other toys (I.E. ps)
Regards,","Please, take those links as lists of current usages for both longopts and consider merging:
https://codesearch.debian.net/search?q=chown.*--no-dereference&literal=0
https://codesearch.debian.net/search?q=rmdir.*--parents&literal=0

oh, nice, i didn't know i could search all of Debian! that'll come in handy...",True,{}
landley/toybox,https://github.com/landley/toybox,234,2020-08-12T17:53:01Z,2020-08-18T09:07:10Z,2020-08-18T09:07:11Z,CLOSED,False,2,2,2,https://github.com/frikiluser,Add missing longopts alias for chgrp/chown and rmdir,1,[],https://github.com/landley/toybox/pull/234,https://github.com/landley,3,https://github.com/landley/toybox/pull/234#issuecomment-675359070,"Heavily used long params under some contexts for already implemented
options:
chgrp/chown:
Add alias '--no-dereference' for '-h'
rmdir:
Add alias '--parents' for '-p'
--
Please, take those links as lists of current usages for both longopts and consider merging:
https://codesearch.debian.net/search?q=chown.*--no-dereference&literal=0
https://codesearch.debian.net/search?q=rmdir.*--parents&literal=0
Avoid adding the options to help text is the preferred way? I've seen that way in other toys (I.E. ps)
Regards,",Commit f486337,True,{}
landley/toybox,https://github.com/landley/toybox,236,2020-08-17T23:49:39Z,2020-08-18T09:04:46Z,2020-08-18T09:04:46Z,CLOSED,False,3,0,1,https://github.com/unforgettableid,toybox: include more web links in help text.,1,[],https://github.com/landley/toybox/pull/236,https://github.com/unforgettableid,1,https://github.com/landley/toybox/pull/236,"This commit partially fixes #50. For a more-complete fix, we'd also need to prepend at least one or two web links to the help for each individual applet.","This commit partially fixes #50. For a more-complete fix, we'd also need to prepend at least one or two web links to the help for each individual applet.",True,{}
landley/toybox,https://github.com/landley/toybox,236,2020-08-17T23:49:39Z,2020-08-18T09:04:46Z,2020-08-18T09:04:46Z,CLOSED,False,3,0,1,https://github.com/unforgettableid,toybox: include more web links in help text.,1,[],https://github.com/landley/toybox/pull/236,https://github.com/landley,2,https://github.com/landley/toybox/pull/236#issuecomment-675357760,"This commit partially fixes #50. For a more-complete fix, we'd also need to prepend at least one or two web links to the help for each individual applet.","No. I don't want to do that. The longer the page is, the less likely people are to read it.

Given one URL to a site with a nav bar, I'm assuming they can find more there. It's identified the project, which was the objection. (If you want that nav bar to have a ""reporting bugs"" link, I can add that. Probably belongs in the FAQ anyway...)
I prefer bug reports on the mailing list, here is second choice (and android's bug reporter is third).
That page is a read-only archive you can't post through. Even if I thought the mailing list was relevant to put directly into the help text (I don't, it's linked from the page I already point them at), that wouldn't be how.",True,{'THUMBS_UP': ['https://github.com/unforgettableid']}
landley/toybox,https://github.com/landley/toybox,237,2020-08-19T20:59:17Z,2020-08-19T22:41:03Z,2020-08-19T23:36:34Z,CLOSED,False,3,2,1,https://github.com/unforgettableid,"Makefile tweaks, including fixing a typo.",1,[],https://github.com/landley/toybox/pull/237,https://github.com/unforgettableid,1,https://github.com/landley/toybox/pull/237,,,True,{}
landley/toybox,https://github.com/landley/toybox,237,2020-08-19T20:59:17Z,2020-08-19T22:41:03Z,2020-08-19T23:36:34Z,CLOSED,False,3,2,1,https://github.com/unforgettableid,"Makefile tweaks, including fixing a typo.",1,[],https://github.com/landley/toybox/pull/237,https://github.com/landley,2,https://github.com/landley/toybox/pull/237#issuecomment-676784448,,"The middle hunk is a legitimate fix, the other two are not.",True,{}
landley/toybox,https://github.com/landley/toybox,237,2020-08-19T20:59:17Z,2020-08-19T22:41:03Z,2020-08-19T23:36:34Z,CLOSED,False,3,2,1,https://github.com/unforgettableid,"Makefile tweaks, including fixing a typo.",1,[],https://github.com/landley/toybox/pull/237,https://github.com/landley,3,https://github.com/landley/toybox/pull/237#issuecomment-676785244,,Commit df71fc3,True,{'THUMBS_UP': ['https://github.com/unforgettableid']}
landley/toybox,https://github.com/landley/toybox,240,2020-09-09T17:32:39Z,2020-09-09T18:36:59Z,2020-09-09T19:40:02Z,CLOSED,False,1,1,1,https://github.com/firasuke,Fix typo,1,[],https://github.com/landley/toybox/pull/240,https://github.com/firasuke,1,https://github.com/landley/toybox/pull/240,"Just a small typo.
Thanks for your efforts in creating this detailed list.","Just a small typo.
Thanks for your efforts in creating this detailed list.",True,{}
landley/toybox,https://github.com/landley/toybox,240,2020-09-09T17:32:39Z,2020-09-09T18:36:59Z,2020-09-09T19:40:02Z,CLOSED,False,1,1,1,https://github.com/firasuke,Fix typo,1,[],https://github.com/landley/toybox/pull/240,https://github.com/enh-google,2,https://github.com/landley/toybox/pull/240#issuecomment-689742921,"Just a small typo.
Thanks for your efforts in creating this detailed list.","this actually isn't a typo: [ really is a command :-)
see https://www.gnu.org/software/coreutils/manual/coreutils.html#test-invocation for more.",True,{}
landley/toybox,https://github.com/landley/toybox,240,2020-09-09T17:32:39Z,2020-09-09T18:36:59Z,2020-09-09T19:40:02Z,CLOSED,False,1,1,1,https://github.com/firasuke,Fix typo,1,[],https://github.com/landley/toybox/pull/240,https://github.com/firasuke,3,https://github.com/landley/toybox/pull/240#issuecomment-689775513,"Just a small typo.
Thanks for your efforts in creating this detailed list.","Oh, I can't believe I forgot about [ xD
But given the provided notation, I quickly assumed that either this was added by mistake or there is a missing closing square bracket.
Thanks for clarifying!",True,{}
landley/toybox,https://github.com/landley/toybox,241,2020-09-19T13:49:26Z,2020-09-23T15:09:12Z,2020-09-23T15:09:12Z,CLOSED,False,1,1,1,https://github.com/firasuke,Fix a typo,1,[],https://github.com/landley/toybox/pull/241,https://github.com/firasuke,1,https://github.com/landley/toybox/pull/241,"Fix a small typo, should be compress not compess.","Fix a small typo, should be compress not compess.",True,{}
landley/toybox,https://github.com/landley/toybox,241,2020-09-19T13:49:26Z,2020-09-23T15:09:12Z,2020-09-23T15:09:12Z,CLOSED,False,1,1,1,https://github.com/firasuke,Fix a typo,1,[],https://github.com/landley/toybox/pull/241,https://github.com/enh-google,2,https://github.com/landley/toybox/pull/241#issuecomment-697512302,"Fix a small typo, should be compress not compess.",merged,True,{}
landley/toybox,https://github.com/landley/toybox,242,2020-09-19T14:19:30Z,2020-09-23T15:09:25Z,2020-09-23T15:09:26Z,CLOSED,False,3,3,1,https://github.com/firasuke,cksum and hostid are already implemented,1,[],https://github.com/landley/toybox/pull/242,https://github.com/firasuke,1,https://github.com/landley/toybox/pull/242,"Both of cksum and hostid are already implemented, unless you're planning on removing them.","Both of cksum and hostid are already implemented, unless you're planning on removing them.",True,{}
landley/toybox,https://github.com/landley/toybox,242,2020-09-19T14:19:30Z,2020-09-23T15:09:25Z,2020-09-23T15:09:26Z,CLOSED,False,3,3,1,https://github.com/firasuke,cksum and hostid are already implemented,1,[],https://github.com/landley/toybox/pull/242,https://github.com/landley,2,https://github.com/landley/toybox/pull/242#issuecomment-695760823,"Both of cksum and hostid are already implemented, unless you're planning on removing them.","hostid was removed from defconfig (moved to the ""examples"" directory) because it's useless:
http://lists.landley.net/pipermail/toybox-landley.net/2016-December/008775.html",True,{}
landley/toybox,https://github.com/landley/toybox,242,2020-09-19T14:19:30Z,2020-09-23T15:09:25Z,2020-09-23T15:09:26Z,CLOSED,False,3,3,1,https://github.com/firasuke,cksum and hostid are already implemented,1,[],https://github.com/landley/toybox/pull/242,https://github.com/enh-google,3,https://github.com/landley/toybox/pull/242#issuecomment-697512677,"Both of cksum and hostid are already implemented, unless you're planning on removing them.",merged,True,{}
landley/toybox,https://github.com/landley/toybox,244,2020-09-19T15:42:32Z,,2020-09-23T12:33:49Z,OPEN,False,2,2,1,https://github.com/firasuke,Replace $CC with cc,1,[],https://github.com/landley/toybox/pull/244,https://github.com/firasuke,1,https://github.com/landley/toybox/pull/244,"Having both $CROSS_COMPILE and $CC will cause a duplication of the target tuple (triplet or quadruplet).
This is mostly due to the fact that many cross compilation toolchains set CROSS_COMPILE to $TARGET_TRIPLET- and CC to $TARGET_TRIPLET-cc, so in the case for scripts/portability.sh the final path will be $TARGET_TRIPLET-$TARGET_TRIPLET-cc which won't be found.","Having both $CROSS_COMPILE and $CC will cause a duplication of the target tuple (triplet or quadruplet).
This is mostly due to the fact that many cross compilation toolchains set CROSS_COMPILE to $TARGET_TRIPLET- and CC to $TARGET_TRIPLET-cc, so in the case for scripts/portability.sh the final path will be $TARGET_TRIPLET-$TARGET_TRIPLET-cc which won't be found.",True,{}
landley/toybox,https://github.com/landley/toybox,244,2020-09-19T15:42:32Z,,2020-09-23T12:33:49Z,OPEN,False,2,2,1,https://github.com/firasuke,Replace $CC with cc,1,[],https://github.com/landley/toybox/pull/244,https://github.com/landley,2,https://github.com/landley/toybox/pull/244#issuecomment-697247379,"Having both $CROSS_COMPILE and $CC will cause a duplication of the target tuple (triplet or quadruplet).
This is mostly due to the fact that many cross compilation toolchains set CROSS_COMPILE to $TARGET_TRIPLET- and CC to $TARGET_TRIPLET-cc, so in the case for scripts/portability.sh the final path will be $TARGET_TRIPLET-$TARGET_TRIPLET-cc which won't be found.","Except it's not always cc, the compiler name is sometimes ""android29-clang"".",True,{}
landley/toybox,https://github.com/landley/toybox,244,2020-09-19T15:42:32Z,,2020-09-23T12:33:49Z,OPEN,False,2,2,1,https://github.com/firasuke,Replace $CC with cc,1,[],https://github.com/landley/toybox/pull/244,https://github.com/firasuke,3,https://github.com/landley/toybox/pull/244#issuecomment-697333938,"Having both $CROSS_COMPILE and $CC will cause a duplication of the target tuple (triplet or quadruplet).
This is mostly due to the fact that many cross compilation toolchains set CROSS_COMPILE to $TARGET_TRIPLET- and CC to $TARGET_TRIPLET-cc, so in the case for scripts/portability.sh the final path will be $TARGET_TRIPLET-$TARGET_TRIPLET-cc which won't be found.","Yes, I understand that, but that's not the point. Most toolchains assume that the CC variable is already prefixed by the target tuple. To get this to work on these toolchains, one will either have to set CC equal to the compiler's name without the tuple (be it gcc or clang or cproc or whatever) or leave CROSS_COMPILE empty and prefix CC with the target tuple.
Using your example, say I'm cross compiling to android29 so I set the variable CROSS_COMPILE equal to android29- and then I have CC set to android29-clang the resulting path will be android29-android29-clang which is wrong.
I also see that you're using ${CROSS_COMPILE}cc in mkroot.sh.",True,{}
landley/toybox,https://github.com/landley/toybox,245,2020-10-05T20:57:37Z,2020-11-30T19:53:48Z,2020-11-30T22:14:05Z,CLOSED,False,1,1,1,https://github.com/chrisrfq,Update i2ctools.c,1,[],https://github.com/landley/toybox/pull/245,https://github.com/chrisrfq,1,https://github.com/landley/toybox/pull/245,"Fix i2cdetect parameter reading so ""last"" value is read from correct argument.
Both range variables, ""first"" and ""last"" are incorrectly being read from argument 1. ""last"" should be read from argument 2.
This patch fixes the error.","Fix i2cdetect parameter reading so ""last"" value is read from correct argument.
Both range variables, ""first"" and ""last"" are incorrectly being read from argument 1. ""last"" should be read from argument 2.
This patch fixes the error.",True,{}
landley/toybox,https://github.com/landley/toybox,245,2020-10-05T20:57:37Z,2020-11-30T19:53:48Z,2020-11-30T22:14:05Z,CLOSED,False,1,1,1,https://github.com/chrisrfq,Update i2ctools.c,1,[],https://github.com/landley/toybox/pull/245,https://github.com/enh-google,2,https://github.com/landley/toybox/pull/245#issuecomment-736005356,"Fix i2cdetect parameter reading so ""last"" value is read from correct argument.
Both range variables, ""first"" and ""last"" are incorrectly being read from argument 1. ""last"" should be read from argument 2.
This patch fixes the error.",merged as a24efe4,True,{}
landley/toybox,https://github.com/landley/toybox,245,2020-10-05T20:57:37Z,2020-11-30T19:53:48Z,2020-11-30T22:14:05Z,CLOSED,False,1,1,1,https://github.com/chrisrfq,Update i2ctools.c,1,[],https://github.com/landley/toybox/pull/245,https://github.com/enh-google,3,https://github.com/landley/toybox/pull/245#issuecomment-736088082,"Fix i2cdetect parameter reading so ""last"" value is read from correct argument.
Both range variables, ""first"" and ""last"" are incorrectly being read from argument 1. ""last"" should be read from argument 2.
This patch fixes the error.","(oh, and ""thanks for fixing my mistake"" :-) )",True,{}
landley/toybox,https://github.com/landley/toybox,246,2020-10-11T11:47:44Z,2020-10-12T08:26:23Z,2020-10-12T08:26:23Z,CLOSED,False,1,1,1,https://github.com/Zaryob,Fixed -Woverflow warning while compiling gcc-10,1,[],https://github.com/landley/toybox/pull/246,https://github.com/Zaryob,1,https://github.com/landley/toybox/pull/246,"In main commands source there is a -Woverflow gives me while making with make V=1 . After this patch that issue fixed.
Bests, regards.","In main commands source there is a -Woverflow gives me while making with make V=1 . After this patch that issue fixed.
Bests, regards.",True,{}
landley/toybox,https://github.com/landley/toybox,246,2020-10-11T11:47:44Z,2020-10-12T08:26:23Z,2020-10-12T08:26:23Z,CLOSED,False,1,1,1,https://github.com/Zaryob,Fixed -Woverflow warning while compiling gcc-10,1,[],https://github.com/landley/toybox/pull/246,https://github.com/landley,2,https://github.com/landley/toybox/pull/246#issuecomment-706739349,"In main commands source there is a -Woverflow gives me while making with make V=1 . After this patch that issue fixed.
Bests, regards.","You have more than 2 billion commands built into toybox? How did you get a single ELF section that big?
I tried -Woverflow on gcc (x86-64 and i686) and clang, neither complained. What compiler version showed you this error?",True,{}
landley/toybox,https://github.com/landley/toybox,246,2020-10-11T11:47:44Z,2020-10-12T08:26:23Z,2020-10-12T08:26:23Z,CLOSED,False,1,1,1,https://github.com/Zaryob,Fixed -Woverflow warning while compiling gcc-10,1,[],https://github.com/landley/toybox/pull/246,https://github.com/Zaryob,3,https://github.com/landley/toybox/pull/246#issuecomment-706741124,"In main commands source there is a -Woverflow gives me while making with make V=1 . After this patch that issue fixed.
Bests, regards.","You have more than 2 billion commands built into toybox? How did you get a single ELF section that big?
I tried -Woverflow on gcc (x86-64 and i686) and clang, neither complained. What compiler version showed you this error?

gcc --version
gcc (SUSE Linux) 10.2.1 20200825 [revision c0746a1beb1ba073c7981eb09f55b3d993b32e5c]
Copyright (C) 2020 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.",True,{}
landley/toybox,https://github.com/landley/toybox,246,2020-10-11T11:47:44Z,2020-10-12T08:26:23Z,2020-10-12T08:26:23Z,CLOSED,False,1,1,1,https://github.com/Zaryob,Fixed -Woverflow warning while compiling gcc-10,1,[],https://github.com/landley/toybox/pull/246,https://github.com/landley,4,https://github.com/landley/toybox/pull/246#issuecomment-706773776,"In main commands source there is a -Woverflow gives me while making with make V=1 . After this patch that issue fixed.
Bests, regards.",What is the actual error? How can an overflow happen here?,True,{}
landley/toybox,https://github.com/landley/toybox,246,2020-10-11T11:47:44Z,2020-10-12T08:26:23Z,2020-10-12T08:26:23Z,CLOSED,False,1,1,1,https://github.com/Zaryob,Fixed -Woverflow warning while compiling gcc-10,1,[],https://github.com/landley/toybox/pull/246,https://github.com/Zaryob,5,https://github.com/landley/toybox/pull/246#issuecomment-706965786,"In main commands source there is a -Woverflow gives me while making with make V=1 . After this patch that issue fixed.
Bests, regards.",I searched that problems cause. It caused due to ld linker problem in openSUSE. I gonna fix my ld 😂 sorry for fuzzy pull request.,True,{}
landley/toybox,https://github.com/landley/toybox,247,2020-10-12T17:19:33Z,,2020-10-12T18:27:50Z,OPEN,False,53,53,50,https://github.com/frikiluser,Homogenize commentary links,1,[],https://github.com/landley/toybox/pull/247,https://github.com/frikiluser,1,https://github.com/landley/toybox/pull/247,Homogenize toy commentary formatting,Homogenize toy commentary formatting,True,{}
landley/toybox,https://github.com/landley/toybox,249,2020-10-13T00:36:41Z,,2020-10-13T01:24:34Z,OPEN,False,8,8,7,https://github.com/frikiluser,Add some option alias,1,[],https://github.com/landley/toybox/pull/249,https://github.com/frikiluser,1,https://github.com/landley/toybox/pull/249,"Added some alias for existent options in various toys.
These alias are used by some building scripts for different tools considered ""key-packages"".","Added some alias for existent options in various toys.
These alias are used by some building scripts for different tools considered ""key-packages"".",True,{}
landley/toybox,https://github.com/landley/toybox,249,2020-10-13T00:36:41Z,,2020-10-13T01:24:34Z,OPEN,False,8,8,7,https://github.com/frikiluser,Add some option alias,1,[],https://github.com/landley/toybox/pull/249,https://github.com/frikiluser,2,https://github.com/landley/toybox/pull/249#issuecomment-707417839,"Added some alias for existent options in various toys.
These alias are used by some building scripts for different tools considered ""key-packages"".","I've found some alias aren't listed when --help. Can I open a new pull-request adding them?
In addition to these option alias I'm building a list of missing options. Some of them are already documented in TODO comments. Is it preferable to open a github issue with the complete list or adding them all to toys TODO comments and open a pull-request?
Regards,",True,{}
landley/toybox,https://github.com/landley/toybox,249,2020-10-13T00:36:41Z,,2020-10-13T01:24:34Z,OPEN,False,8,8,7,https://github.com/frikiluser,Add some option alias,1,[],https://github.com/landley/toybox/pull/249,https://github.com/enh-google,3,https://github.com/landley/toybox/pull/249#issuecomment-707419339,"Added some alias for existent options in various toys.
These alias are used by some building scripts for different tools considered ""key-packages"".","I've found some alias aren't listed when --help. Can I open a new pull-request adding them?

as i understand rob's position, he doesn't like long options but admits that they exist. so they work (when someone actually has a script that needs them), but he doesn't add them until that user shows up, and he doesn't want them in the help text (unless they're long-only options that don't have a corresponding short option).

In addition to these option alias I'm building a list of missing options. Some of them are already documented in TODO comments. Is it preferable to open a github issue with the complete list or adding them all to toys TODO comments and open a pull-request?

do you have specific use cases that require them? that's definitely valuable. but if it's just ""here's the diff of --help against some other implementation"", that doesn't really add anything. (especially given the overall policy -- as i've internalized it from the examples i've seen -- of ""add it when there's a user for it"".)",True,{}
landley/toybox,https://github.com/landley/toybox,249,2020-10-13T00:36:41Z,,2020-10-13T01:24:34Z,OPEN,False,8,8,7,https://github.com/frikiluser,Add some option alias,1,[],https://github.com/landley/toybox/pull/249,https://github.com/frikiluser,4,https://github.com/landley/toybox/pull/249#issuecomment-707427803,"Added some alias for existent options in various toys.
These alias are used by some building scripts for different tools considered ""key-packages"".","I've found some alias aren't listed when --help. Can I open a new pull-request adding them?

as i understand rob's position, he doesn't like long options but admits that they exist. so they work (when someone actually has a script that needs them), but he doesn't add them until that user shows up, and he doesn't want them in the help text (unless they're long-only options that don't have a corresponding short option).

OK


In addition to these option alias I'm building a list of missing options. Some of them are already documented in TODO comments. Is it preferable to open a github issue with the complete list or adding them all to toys TODO comments and open a pull-request?

do you have specific use cases that require them? that's definitely valuable. but if it's just ""here's the diff of --help against some other implementation"", that doesn't really add anything. (especially given the overall policy -- as i've internalized it from the examples i've seen -- of ""add it when there's a user for it"".)

Suggested long options for this pull request are found in ""real world"" scripts:

https://codesearch.debian.net/search?q=gzip.*--no-name&literal=0
https://codesearch.debian.net/search?q=mv.*--verbose&literal=0
https://codesearch.debian.net/search?q=install.*--preserve-timestamps&literal=0
https://codesearch.debian.net/search?q=date.*--utc&literal=0
https://codesearch.debian.net/search?q=file.*--brief&literal=0&page=1
https://codesearch.debian.net/search?q=grep.*--count&literal=0
https://codesearch.debian.net/search?q=rm.*--force&literal=0
https://codesearch.debian.net/search?q=xargs.*--null&literal=0
https://codesearch.debian.net/search?q=xargs.*--no-run-if-empty&literal=0

I'm building a list of missing options the same way. I also have some notes about how frequent are used in this context.
Example cp --reflink:

https://codesearch.debian.net/search?q=cp.*--reflink&literal=0&page=1

The good news are the existing options work pretty well 👌",True,{}
landley/toybox,https://github.com/landley/toybox,250,2020-10-13T06:48:46Z,,2020-10-13T06:48:46Z,OPEN,False,13,2,1,https://github.com/frikiluser,uname: add -p (platform) support as fixed string 'unknown',1,[],https://github.com/landley/toybox/pull/250,https://github.com/frikiluser,1,https://github.com/landley/toybox/pull/250,"A kind of dummy option required by some building scripts.
I've found a common output for uname -p is ""unknown"" in Linux boxes.
I can't guarantee this is the expected output for all Toybox supported platforms.
Some usage examples here:

https://codesearch.debian.net/search?q=uname.*-p&literal=0
https://codesearch.debian.net/show?file=pd-beatpipe_0.1-6%2FMakefile&line=70 (Darwin example expecting arm?)
https://sources.debian.org/src/filtergen/0.12.8-1/debian/patches/debian-changes/ (Usage on *BSD and other Unix platforms where expects specific strings other than unknown)

Hope the code follows style recommendations. It's my first chunk of code for Toybox, that's why I've chosen  to add a simple option that solves some situations on building key-packages.
Regards,","A kind of dummy option required by some building scripts.
I've found a common output for uname -p is ""unknown"" in Linux boxes.
I can't guarantee this is the expected output for all Toybox supported platforms.
Some usage examples here:

https://codesearch.debian.net/search?q=uname.*-p&literal=0
https://codesearch.debian.net/show?file=pd-beatpipe_0.1-6%2FMakefile&line=70 (Darwin example expecting arm?)
https://sources.debian.org/src/filtergen/0.12.8-1/debian/patches/debian-changes/ (Usage on *BSD and other Unix platforms where expects specific strings other than unknown)

Hope the code follows style recommendations. It's my first chunk of code for Toybox, that's why I've chosen  to add a simple option that solves some situations on building key-packages.
Regards,",True,{}
landley/toybox,https://github.com/landley/toybox,252,2020-11-29T15:01:01Z,2020-11-30T19:51:54Z,2020-11-30T19:51:54Z,CLOSED,False,1,1,1,https://github.com/firasuke,true is mentioned twice,1,[],https://github.com/landley/toybox/pull/252,https://github.com/firasuke,1,https://github.com/landley/toybox/pull/252,,,True,{}
landley/toybox,https://github.com/landley/toybox,252,2020-11-29T15:01:01Z,2020-11-30T19:51:54Z,2020-11-30T19:51:54Z,CLOSED,False,1,1,1,https://github.com/firasuke,true is mentioned twice,1,[],https://github.com/landley/toybox/pull/252,https://github.com/enh-google,2,https://github.com/landley/toybox/pull/252#issuecomment-736004410,,merged as 5fddea0,True,{}
landley/toybox,https://github.com/landley/toybox,253,2020-12-05T21:14:01Z,2020-12-06T08:14:40Z,2020-12-08T01:07:55Z,CLOSED,False,89,8,4,https://github.com/enh,id.test: hacks to pass on Raspberry Pi OS.,2,[],https://github.com/landley/toybox/pull/253,https://github.com/enh,1,https://github.com/landley/toybox/pull/253,The rest of make tests all pass on a Raspberry Pi 400.,The rest of make tests all pass on a Raspberry Pi 400.,True,{}
landley/toybox,https://github.com/landley/toybox,253,2020-12-05T21:14:01Z,2020-12-06T08:14:40Z,2020-12-08T01:07:55Z,CLOSED,False,89,8,4,https://github.com/enh,id.test: hacks to pass on Raspberry Pi OS.,2,[],https://github.com/landley/toybox/pull/253,https://github.com/landley,2,https://github.com/landley/toybox/pull/253#issuecomment-739454646,The rest of make tests all pass on a Raspberry Pi 400.,"Looks mostly good, what's the behavior change to lib.c? (What's the code change trying to accomplish?)
I note that ""the max utf8 encoding is 4 bytes"" is a hardwired assumption the unicode guys added a while back, which I was unhappy about at the time but have since used for buffer size allocations in a few places. See https://landley.net/notes-2017.html#01-09-2017",True,{}
landley/toybox,https://github.com/landley/toybox,253,2020-12-05T21:14:01Z,2020-12-06T08:14:40Z,2020-12-08T01:07:55Z,CLOSED,False,89,8,4,https://github.com/enh,id.test: hacks to pass on Raspberry Pi OS.,2,[],https://github.com/landley/toybox/pull/253,https://github.com/enh,3,https://github.com/landley/toybox/pull/253#issuecomment-739459172,The rest of make tests all pass on a Raspberry Pi 400.,"(sorry that i have no idea how to do pull requests. i wanted these to be two different pull requests, but obviously that didn't work out!)

Looks mostly good, what's the behavior change to lib.c? (What's the code change trying to accomplish?)

the existing code produces wrong results, and it seems like it's otherwise only used in sh.c so far, which is why we haven't noticed.
specifically, each non-initial utf8 byte has 6 meaningful bits not 7 citation needed, and the initial byte of any multibyte sequence was wrong. (i couldn't work out what you were trying to do with the additions, so rather than try to fix it i just replaced it with the obvious ""smear the top bit by the right number of bits"").

I note that ""the max utf8 encoding is 4 bytes"" is a hardwired assumption the unicode guys added a while back, which I was unhappy about at the time but have since used for buffer size allocations in a few places. See https://landley.net/notes-2017.html#01-09-2017

yeah, i only added tests up to the first block of the first supplementary plane (i.e. U+10000) on the theory that we can worry about the rest if/when anyone cares. but since we already know what the maximum theoretical limit is (U+7fffffff, 6 bytes), we could just fix it now and never have to think about it again. i can send a patch for that too if you like.",True,{}
landley/toybox,https://github.com/landley/toybox,253,2020-12-05T21:14:01Z,2020-12-06T08:14:40Z,2020-12-08T01:07:55Z,CLOSED,False,89,8,4,https://github.com/enh,id.test: hacks to pass on Raspberry Pi OS.,2,[],https://github.com/landley/toybox/pull/253,https://github.com/enh,4,https://github.com/landley/toybox/pull/253#issuecomment-739459582,The rest of make tests all pass on a Raspberry Pi 400.,(or i can send a patch to follow https://tools.ietf.org/html/rfc3629#section-3 and reject anything higher than U+10FFFF. that does make the API a bit more awkward though.),True,{}
landley/toybox,https://github.com/landley/toybox,253,2020-12-05T21:14:01Z,2020-12-06T08:14:40Z,2020-12-08T01:07:55Z,CLOSED,False,89,8,4,https://github.com/enh,id.test: hacks to pass on Raspberry Pi OS.,2,[],https://github.com/landley/toybox/pull/253,https://github.com/landley,5,https://github.com/landley/toybox/pull/253#issuecomment-739470232,The rest of make tests all pass on a Raspberry Pi 400.,"Ah, new stuff for in-progress sh.c, not the old paths I (thought I) thoroughly tested in 2017. Got it.
I think most of the buf checks are just ""refuse to overwrite the buffer if we're near the end and there isn't enough space"", and hardwiring in ""4"" for that at the moment can't hurt anything, so my earlier unease was moot.
The UTF8 conspiracy declared that microsoft paid them to put an upper limit on the range forevermore, or some such. I had to source all this stuff to specs in 2017, which was long enough ago the details are blurring. But if you think supporting the full 6 bytes is useful, I'm happy to change stuff. I'm just trying to get the error return codes right. :)
Speaking of which, I point your attention to demo_utf8wc in the examples directory. (Used to be called test_, probably still should be called test_. I think it got renamed because make test_test_utf8towc looked ridiculous.) Oddly, it now has a delta with all three libc implementations, for reasons I am unclear on. Hmmm. (I built a historical version and it seems the libc implementations are what changed? Don't have brain to go down that rathole right now.)",True,{}
landley/toybox,https://github.com/landley/toybox,253,2020-12-05T21:14:01Z,2020-12-06T08:14:40Z,2020-12-08T01:07:55Z,CLOSED,False,89,8,4,https://github.com/enh,id.test: hacks to pass on Raspberry Pi OS.,2,[],https://github.com/landley/toybox/pull/253,https://github.com/landley,6,https://github.com/landley/toybox/pull/253#issuecomment-739470806,The rest of make tests all pass on a Raspberry Pi 400.,"Applied both.  I note that ""unicode"" and ""ascii"" are sort of analogous commands.",True,{}
landley/toybox,https://github.com/landley/toybox,253,2020-12-05T21:14:01Z,2020-12-06T08:14:40Z,2020-12-08T01:07:55Z,CLOSED,False,89,8,4,https://github.com/enh,id.test: hacks to pass on Raspberry Pi OS.,2,[],https://github.com/landley/toybox/pull/253,https://github.com/enh-google,7,https://github.com/landley/toybox/pull/253#issuecomment-740281193,The rest of make tests all pass on a Raspberry Pi 400.,"I think most of the buf checks are just ""refuse to overwrite the buffer if we're near the end and there isn't enough space"", and hardwiring in ""4"" for that at the moment can't hurt anything, so my earlier unease was moot.

in wctoutf8, this is wrong for code points past the BMP (aka plane 0):
  int len = (wc>0x7ff)+(wc>0xffff), i;

utf8towc (which is obviously much more heavily used!) explicitly disallows anything past plane 1, so they should probably at least match?

The UTF8 conspiracy declared that microsoft paid them to put an upper limit on the range forevermore, or some such. I had to source all this stuff to specs in 2017, which was long enough ago the details are blurring. But if you think supporting the full 6 bytes is useful, I'm happy to change stuff. I'm just trying to get the error return codes right. :)

yeah, i don't have an opinion either way on 4 vs 6, just that we should have wctoutf8 either do the right thing or return an error (rather than silently do the wrong thing, as now). i'm happy to send you a patch going in either direction, but was hoping you'd express a preference :-)
in practical terms, i think 4 is fine, and like you say, it matches MB_CUR_MAX.

Speaking of which, I point your attention to demo_utf8wc in the examples directory. (Used to be called test_, probably still should be called test_. I think it got renamed because make test_test_utf8towc looked ridiculous.) Oddly, it now has a delta with all three libc implementations, for reasons I am unclear on. Hmmm. (I built a historical version and it seems the libc implementations are what changed? Don't have brain to go down that rathole right now.)

i think the ""oddly..."" part is the point --- if it's not run as part of make tests, it's not buying us anything :-(

Applied both. I note that ""unicode"" and ""ascii"" are sort of analogous commands.

yeah, since unicode with no arguments isn't obviously useful (and does nothing on Plan9/Inferno) i did wonder about merging that functionality -- especially because i copy & pasted the handy list of names for the <' ' control characters -- but i've always assumed that when man(1) is finished, ascii(1) gets removed in favor of man ascii?
also it just seemed weird to say ""unicode"" to get an ascii table :-) (though it would be weirder to say ""ascii"" to talk about unicode code points!)
happy to send a patch to make unicode behave like ascii if you want though.",True,{}
landley/toybox,https://github.com/landley/toybox,255,2020-12-19T19:24:31Z,2021-01-08T22:26:21Z,2021-01-08T22:26:21Z,CLOSED,False,7,0,2,https://github.com/rsms,Enable building for pre-4.5 Linux,2,[],https://github.com/landley/toybox/pull/255,https://github.com/rsms,1,https://github.com/landley/toybox/pull/255,"This enables building toybox for pre 4.5 linux kernel.
If this is not something you are interested in, feel free to close out this PR — no hard feelings :-)
See #254","This enables building toybox for pre 4.5 linux kernel.
If this is not something you are interested in, feel free to close out this PR — no hard feelings :-)
See #254",True,{}
landley/toybox,https://github.com/landley/toybox,255,2020-12-19T19:24:31Z,2021-01-08T22:26:21Z,2021-01-08T22:26:21Z,CLOSED,False,7,0,2,https://github.com/rsms,Enable building for pre-4.5 Linux,2,[],https://github.com/landley/toybox/pull/255,https://github.com/enh-google,2,https://github.com/landley/toybox/pull/255#issuecomment-757029473,"This enables building toybox for pre 4.5 linux kernel.
If this is not something you are interested in, feel free to close out this PR — no hard feelings :-)
See #254",fixed by 4b78acc instead.,True,{}
landley/toybox,https://github.com/landley/toybox,258,2020-12-28T22:02:06Z,2021-01-14T21:44:09Z,2021-01-14T21:44:09Z,CLOSED,False,1,1,1,https://github.com/E5ten,fix segfault in date,1,[],https://github.com/landley/toybox/pull/258,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/258,check if argument to -I is non-NULL before dereferencing,check if argument to -I is non-NULL before dereferencing,True,{}
landley/toybox,https://github.com/landley/toybox,258,2020-12-28T22:02:06Z,2021-01-14T21:44:09Z,2021-01-14T21:44:09Z,CLOSED,False,1,1,1,https://github.com/E5ten,fix segfault in date,1,[],https://github.com/landley/toybox/pull/258,https://github.com/landley,2,https://github.com/landley/toybox/pull/258#issuecomment-751911451,check if argument to -I is non-NULL before dereferencing,"The problem is actually that --iso sets this NULL but -I sets it to """" and that's inconsistent. The short opt should probably also set to NULL...",True,{}
landley/toybox,https://github.com/landley/toybox,258,2020-12-28T22:02:06Z,2021-01-14T21:44:09Z,2021-01-14T21:44:09Z,CLOSED,False,1,1,1,https://github.com/E5ten,fix segfault in date,1,[],https://github.com/landley/toybox/pull/258,https://github.com/E5ten,3,https://github.com/landley/toybox/pull/258#issuecomment-751924558,check if argument to -I is non-NULL before dereferencing,"Ah I see, is that a problem in date specifically or just a general thing with lib/args.c and short+long opts that have optional arguments?",True,{}
landley/toybox,https://github.com/landley/toybox,258,2020-12-28T22:02:06Z,2021-01-14T21:44:09Z,2021-01-14T21:44:09Z,CLOSED,False,1,1,1,https://github.com/E5ten,fix segfault in date,1,[],https://github.com/landley/toybox/pull/258,https://github.com/landley,4,https://github.com/landley/toybox/pull/258#issuecomment-751929601,check if argument to -I is non-NULL before dereferencing,"Two codepaths in lib/args.c plumbing handling ""x(long):;"" arguments two slightly different ways.
When I added ; to make an argument optional it was initially only used with bare longopts (ls --color I think), and leaving it NULL meant the flag had occurred without an argument. The short argument path is treating a lack of argment as a """" argument, ala -xabc == --long=abc but -x == --long= not --long",True,{}
landley/toybox,https://github.com/landley/toybox,258,2020-12-28T22:02:06Z,2021-01-14T21:44:09Z,2021-01-14T21:44:09Z,CLOSED,False,1,1,1,https://github.com/E5ten,fix segfault in date,1,[],https://github.com/landley/toybox/pull/258,https://github.com/enh-google,5,https://github.com/landley/toybox/pull/258#issuecomment-755677621,check if argument to -I is non-NULL before dereferencing,"i was expecting it to be more complicated, but this seems to be sufficient?
diff --git a/lib/args.c b/lib/args.c
index ac83a0fe..8d82d54b 100644
--- a/lib/args.c
+++ b/lib/args.c
@@ -169,7 +169,6 @@ static int gotflag(struct getoptflagstate *gof, struct opts *opt)
 
   // Does this option take an argument?
   if (!gof->arg) {
-    if (opt->flags & 8) return 0;
     gof->arg = """";
   } else gof->arg++;
   type = opt->type;

i still get an error from a longopt that requires an argument:
~/toybox-netcat$ ./toybox mknod --mode
mknod: Missing argument to -m (see ""mknod --help"")

and date stops crashing:
~/toybox-netcat$ ./toybox date --iso
2021-01-06
~/toybox-netcat$ ./toybox date -I
2021-01-06",True,{}
landley/toybox,https://github.com/landley/toybox,258,2020-12-28T22:02:06Z,2021-01-14T21:44:09Z,2021-01-14T21:44:09Z,CLOSED,False,1,1,1,https://github.com/E5ten,fix segfault in date,1,[],https://github.com/landley/toybox/pull/258,https://github.com/landley,6,https://github.com/landley/toybox/pull/258#issuecomment-755702801,check if argument to -I is non-NULL before dereferencing,"I wanted the fix to go the other way: --longopt= should return """" and --longopt should return NULL. That way you can distinguish ""they did not provide an argument"".",True,{}
landley/toybox,https://github.com/landley/toybox,258,2020-12-28T22:02:06Z,2021-01-14T21:44:09Z,2021-01-14T21:44:09Z,CLOSED,False,1,1,1,https://github.com/E5ten,fix segfault in date,1,[],https://github.com/landley/toybox/pull/258,https://github.com/E5ten,7,https://github.com/landley/toybox/pull/258#issuecomment-755719967,check if argument to -I is non-NULL before dereferencing,"So is the longopt behaviour right now fine and just the shortopts need to be switched to return NULL instead of """", or is there longopt behaviour that also needs fixing?",True,{}
landley/toybox,https://github.com/landley/toybox,258,2020-12-28T22:02:06Z,2021-01-14T21:44:09Z,2021-01-14T21:44:09Z,CLOSED,False,1,1,1,https://github.com/E5ten,fix segfault in date,1,[],https://github.com/landley/toybox/pull/258,https://github.com/enh-google,8,https://github.com/landley/toybox/pull/258#issuecomment-760495463,check if argument to -I is non-NULL before dereferencing,looks like rob quietly fixed this with e7c86f7...,True,{}
landley/toybox,https://github.com/landley/toybox,263,2021-01-26T15:53:15Z,2021-01-27T10:17:07Z,2021-01-27T17:21:06Z,CLOSED,False,11,7,1,https://github.com/asm89,nc: always read all data if bigger than libbuf,1,[],https://github.com/landley/toybox/pull/263,https://github.com/asm89,1,https://github.com/landley/toybox/pull/263,"Previously nc would only read up to sizeof(libbuf) bytes in some cases.
For example, if a program writes more than 4kB of data to nc's stdin
and closes stdin before nc has processed all the data, then nc would
read partial data. In this case what happens is that poll() returns both
POLLIN and POLLHUP for the fd. The code first handled the POLLIN and
then the POLLHUP in a single loop iteration. Instead it should handle
one event at the time, preferring POLLIN which will be set as long as
there is data available to read.
Improve bookkeeping of open fds in pollinate(). Clean up fds when read()
returns an error or EOF. Ensure we only clean up an fd once. Handle
POLLIN before POLLHUP.
To test that all data is now read (and sent) as expected. Start nc in
listening mode and have it reply with the number of bytes:
$ ./toybox nc -L -p 1234 wc -c

Create a test file and send it over to the listening side in various
ways. Confirm the correct byte count is returned each time:
$ python3 -c 'print(""a"" * 4096 + ""b"", end="""")' > testfile
$ wc -c testfile
4097 testfile
$ ./toybox nc localhost 1234 < testfile
4097
$ cat testfile | ./toybox nc localhost 1234
4097
$ (cat testfile; sleep 1) | ./toybox nc localhost 1234
4097","Previously nc would only read up to sizeof(libbuf) bytes in some cases.
For example, if a program writes more than 4kB of data to nc's stdin
and closes stdin before nc has processed all the data, then nc would
read partial data. In this case what happens is that poll() returns both
POLLIN and POLLHUP for the fd. The code first handled the POLLIN and
then the POLLHUP in a single loop iteration. Instead it should handle
one event at the time, preferring POLLIN which will be set as long as
there is data available to read.
Improve bookkeeping of open fds in pollinate(). Clean up fds when read()
returns an error or EOF. Ensure we only clean up an fd once. Handle
POLLIN before POLLHUP.
To test that all data is now read (and sent) as expected. Start nc in
listening mode and have it reply with the number of bytes:
$ ./toybox nc -L -p 1234 wc -c

Create a test file and send it over to the listening side in various
ways. Confirm the correct byte count is returned each time:
$ python3 -c 'print(""a"" * 4096 + ""b"", end="""")' > testfile
$ wc -c testfile
4097 testfile
$ ./toybox nc localhost 1234 < testfile
4097
$ cat testfile | ./toybox nc localhost 1234
4097
$ (cat testfile; sleep 1) | ./toybox nc localhost 1234
4097",True,{}
landley/toybox,https://github.com/landley/toybox,263,2021-01-26T15:53:15Z,2021-01-27T10:17:07Z,2021-01-27T17:21:06Z,CLOSED,False,11,7,1,https://github.com/asm89,nc: always read all data if bigger than libbuf,1,[],https://github.com/landley/toybox/pull/263,https://github.com/asm89,2,https://github.com/landley/toybox/pull/263#issuecomment-768183060,"Previously nc would only read up to sizeof(libbuf) bytes in some cases.
For example, if a program writes more than 4kB of data to nc's stdin
and closes stdin before nc has processed all the data, then nc would
read partial data. In this case what happens is that poll() returns both
POLLIN and POLLHUP for the fd. The code first handled the POLLIN and
then the POLLHUP in a single loop iteration. Instead it should handle
one event at the time, preferring POLLIN which will be set as long as
there is data available to read.
Improve bookkeeping of open fds in pollinate(). Clean up fds when read()
returns an error or EOF. Ensure we only clean up an fd once. Handle
POLLIN before POLLHUP.
To test that all data is now read (and sent) as expected. Start nc in
listening mode and have it reply with the number of bytes:
$ ./toybox nc -L -p 1234 wc -c

Create a test file and send it over to the listening side in various
ways. Confirm the correct byte count is returned each time:
$ python3 -c 'print(""a"" * 4096 + ""b"", end="""")' > testfile
$ wc -c testfile
4097 testfile
$ ./toybox nc localhost 1234 < testfile
4097
$ cat testfile | ./toybox nc localhost 1234
4097
$ (cat testfile; sleep 1) | ./toybox nc localhost 1234
4097",@landley This PR contained some other potential cleanups as well. Not sure if you're interested in those. I pulled out #264 by itself. Happy to rebase the fd bookkeeping to be based on your continue commit as well.,True,{}
landley/toybox,https://github.com/landley/toybox,263,2021-01-26T15:53:15Z,2021-01-27T10:17:07Z,2021-01-27T17:21:06Z,CLOSED,False,11,7,1,https://github.com/asm89,nc: always read all data if bigger than libbuf,1,[],https://github.com/landley/toybox/pull/263,https://github.com/landley,3,https://github.com/landley/toybox/pull/263#issuecomment-768442479,"Previously nc would only read up to sizeof(libbuf) bytes in some cases.
For example, if a program writes more than 4kB of data to nc's stdin
and closes stdin before nc has processed all the data, then nc would
read partial data. In this case what happens is that poll() returns both
POLLIN and POLLHUP for the fd. The code first handled the POLLIN and
then the POLLHUP in a single loop iteration. Instead it should handle
one event at the time, preferring POLLIN which will be set as long as
there is data available to read.
Improve bookkeeping of open fds in pollinate(). Clean up fds when read()
returns an error or EOF. Ensure we only clean up an fd once. Handle
POLLIN before POLLHUP.
To test that all data is now read (and sent) as expected. Start nc in
listening mode and have it reply with the number of bytes:
$ ./toybox nc -L -p 1234 wc -c

Create a test file and send it over to the listening side in various
ways. Confirm the correct byte count is returned each time:
$ python3 -c 'print(""a"" * 4096 + ""b"", end="""")' > testfile
$ wc -c testfile
4097 testfile
$ ./toybox nc localhost 1234 < testfile
4097
$ cat testfile | ./toybox nc localhost 1234
4097
$ (cat testfile; sleep 1) | ./toybox nc localhost 1234
4097",I fixed the issue you sent me a test for.,True,{}
landley/toybox,https://github.com/landley/toybox,264,2021-01-27T10:13:58Z,2021-01-27T19:18:42Z,2021-01-27T19:18:42Z,CLOSED,False,1,0,1,https://github.com/asm89,nc: stop polling closed fd,1,[],https://github.com/landley/toybox/pull/264,https://github.com/asm89,1,https://github.com/landley/toybox/pull/264,,,True,{}
landley/toybox,https://github.com/landley/toybox,264,2021-01-27T10:13:58Z,2021-01-27T19:18:42Z,2021-01-27T19:18:42Z,CLOSED,False,1,0,1,https://github.com/asm89,nc: stop polling closed fd,1,[],https://github.com/landley/toybox/pull/264,https://github.com/landley,2,https://github.com/landley/toybox/pull/264#issuecomment-768446024,,"There's no test to demonstrate this problem.
The pollcount-- means the next poll() is only of the first pollfds[] entry, and this is in an if (i) block so you're only ever setting the fd to -1 in the structure that won't be used again. What are you trying to accomplish here?",True,{}
landley/toybox,https://github.com/landley/toybox,264,2021-01-27T10:13:58Z,2021-01-27T19:18:42Z,2021-01-27T19:18:42Z,CLOSED,False,1,0,1,https://github.com/asm89,nc: stop polling closed fd,1,[],https://github.com/landley/toybox/pull/264,https://github.com/asm89,3,https://github.com/landley/toybox/pull/264#issuecomment-768516063,,"Yes, you are right, i is only ever 0 or 1 here. This makes no sense without the other changes. Sorry!",True,{}
landley/toybox,https://github.com/landley/toybox,269,2021-02-13T20:30:12Z,2021-02-14T10:08:31Z,2021-02-14T15:56:59Z,CLOSED,False,7,1,1,https://github.com/aheirman,Add -executable & -executable-sane to find,1,[],https://github.com/landley/toybox/pull/269,https://github.com/aheirman,1,https://github.com/landley/toybox/pull/269,"I know the reasoning behind -executable also returning searchable directories.
I just think it's bad and not intuitive for newcomers, -executable-sane should point out the default behavior is weird.
The text next to -executable explains the behavior but a user that skims that over that might still see -executable-sane.","I know the reasoning behind -executable also returning searchable directories.
I just think it's bad and not intuitive for newcomers, -executable-sane should point out the default behavior is weird.
The text next to -executable explains the behavior but a user that skims that over that might still see -executable-sane.",True,{}
landley/toybox,https://github.com/landley/toybox,269,2021-02-13T20:30:12Z,2021-02-14T10:08:31Z,2021-02-14T15:56:59Z,CLOSED,False,7,1,1,https://github.com/aheirman,Add -executable & -executable-sane to find,1,[],https://github.com/landley/toybox/pull/269,https://github.com/landley,2,https://github.com/landley/toybox/pull/269#issuecomment-778685448,"I know the reasoning behind -executable also returning searchable directories.
I just think it's bad and not intuitive for newcomers, -executable-sane should point out the default behavior is weird.
The text next to -executable explains the behavior but a user that skims that over that might still see -executable-sane.","Are you adding -executable speculatively, or is there an existing script that needs it? (It's not new functionality, you can ""/perm a+x"" already and your new proposal just adds ""-type f"".)",True,{}
landley/toybox,https://github.com/landley/toybox,269,2021-02-13T20:30:12Z,2021-02-14T10:08:31Z,2021-02-14T15:56:59Z,CLOSED,False,7,1,1,https://github.com/aheirman,Add -executable & -executable-sane to find,1,[],https://github.com/landley/toybox/pull/269,https://github.com/landley,3,https://github.com/landley/toybox/pull/269#issuecomment-778687445,"I know the reasoning behind -executable also returning searchable directories.
I just think it's bad and not intuitive for newcomers, -executable-sane should point out the default behavior is weird.
The text next to -executable explains the behavior but a user that skims that over that might still see -executable-sane.","P.S. The suffix ""-sane"" you've invented is editorializing based on your opinion differing from everyone else who's contributed to the gnu or busybox find commands. It's a -type f constraint which already exists, and the option does not exist in the posix, bsd, solaris, or aix find commands.
I'm not merging that.
Given that -executable itself is there in busybox, I'm willing to be convinced that some existing script needed it... but git annotate says Denys added it in July 2018 in a commit saying nothing but that he added it (no reason why) and a quick check of the busybox mailing list web archive for july, june, and may of 2018 doesn't find any relevant mailing list messages with ""find"" or ""executable"" in the subject line. Looks like he was just filling out the man page options for the sake of doing so? (Implementing it because it was there, not because somebody needed it.)
The gnu man page says that the access() system call checks ACLs, which is a distinction you didn't mention...",True,{}
landley/toybox,https://github.com/landley/toybox,269,2021-02-13T20:30:12Z,2021-02-14T10:08:31Z,2021-02-14T15:56:59Z,CLOSED,False,7,1,1,https://github.com/aheirman,Add -executable & -executable-sane to find,1,[],https://github.com/landley/toybox/pull/269,https://github.com/aheirman,4,https://github.com/landley/toybox/pull/269#issuecomment-778689361,"I know the reasoning behind -executable also returning searchable directories.
I just think it's bad and not intuitive for newcomers, -executable-sane should point out the default behavior is weird.
The text next to -executable explains the behavior but a user that skims that over that might still see -executable-sane.","Are you adding -executable speculatively, or is there an existing script that needs it

I wanted to use it in a script on an OS that will never have GNU find.

I'm not merging that.

I understand, would you be interested in merging this if -executable-sane is removed and the ACL bit is clarified?",True,{}
landley/toybox,https://github.com/landley/toybox,269,2021-02-13T20:30:12Z,2021-02-14T10:08:31Z,2021-02-14T15:56:59Z,CLOSED,False,7,1,1,https://github.com/aheirman,Add -executable & -executable-sane to find,1,[],https://github.com/landley/toybox/pull/269,https://github.com/aheirman,5,https://github.com/landley/toybox/pull/269#issuecomment-778755877,"I know the reasoning behind -executable also returning searchable directories.
I just think it's bad and not intuitive for newcomers, -executable-sane should point out the default behavior is weird.
The text next to -executable explains the behavior but a user that skims that over that might still see -executable-sane.",I probably shouldn't have made a pr for a feature I don't like and isn't strictly necessary.,True,{}
landley/toybox,https://github.com/landley/toybox,269,2021-02-13T20:30:12Z,2021-02-14T10:08:31Z,2021-02-14T15:56:59Z,CLOSED,False,7,1,1,https://github.com/aheirman,Add -executable & -executable-sane to find,1,[],https://github.com/landley/toybox/pull/269,https://github.com/landley,6,https://github.com/landley/toybox/pull/269#issuecomment-778797452,"I know the reasoning behind -executable also returning searchable directories.
I just think it's bad and not intuitive for newcomers, -executable-sane should point out the default behavior is weird.
The text next to -executable explains the behavior but a user that skims that over that might still see -executable-sane.",Commit 5c73305,True,{'THUMBS_UP': ['https://github.com/aheirman']}
landley/toybox,https://github.com/landley/toybox,273,2021-03-11T21:59:54Z,2021-03-12T06:51:14Z,2021-03-12T06:51:15Z,CLOSED,False,4,3,1,https://github.com/cpixl,df: Allow -P and -k options together as defined in POSIX,1,[],https://github.com/landley/toybox/pull/273,https://github.com/cpixl,1,https://github.com/landley/toybox/pull/273,"As defined in POSIX Issue 7, 2008 Edition:

When both the -k and -P options are specified, the following header line shall be written (in the POSIX locale):
""Filesystem 1024-blocks Used Available Capacity Mounted on\n""
When the -P option is specified without the -k option, the following header line shall be written (in the POSIX locale):
""Filesystem 512-blocks Used Available Capacity Mounted on\n""","As defined in POSIX Issue 7, 2008 Edition:

When both the -k and -P options are specified, the following header line shall be written (in the POSIX locale):
""Filesystem 1024-blocks Used Available Capacity Mounted on\n""
When the -P option is specified without the -k option, the following header line shall be written (in the POSIX locale):
""Filesystem 512-blocks Used Available Capacity Mounted on\n""",True,{}
landley/toybox,https://github.com/landley/toybox,273,2021-03-11T21:59:54Z,2021-03-12T06:51:14Z,2021-03-12T06:51:15Z,CLOSED,False,4,3,1,https://github.com/cpixl,df: Allow -P and -k options together as defined in POSIX,1,[],https://github.com/landley/toybox/pull/273,https://github.com/landley,2,https://github.com/landley/toybox/pull/273#issuecomment-797277537,"As defined in POSIX Issue 7, 2008 Edition:

When both the -k and -P options are specified, the following header line shall be written (in the POSIX locale):
""Filesystem 1024-blocks Used Available Capacity Mounted on\n""
When the -P option is specified without the -k option, the following header line shall be written (in the POSIX locale):
""Filesystem 512-blocks Used Available Capacity Mounted on\n""",commit 8c2825c,True,{}
landley/toybox,https://github.com/landley/toybox,274,2021-03-19T22:07:20Z,2021-03-20T04:56:58Z,2021-03-20T04:56:58Z,CLOSED,False,6,0,1,https://github.com/nir9,Handle paths starting with slash in rmdir -p,1,[],https://github.com/landley/toybox/pull/274,https://github.com/nir9,1,https://github.com/landley/toybox/pull/274,"When comparing behavior with the rmdir shipped with the linux distro I am running I have found that rmdir -p /a/b/c acts differently compared ./toybox rmdir /a/b/c because of the way toybox handles the slashes, it removes them so when arriving at the first slash it actually attempts to rmdir nothing which is invalid.
This PR makes it correctly try to remove the first slash upon reaching there.","When comparing behavior with the rmdir shipped with the linux distro I am running I have found that rmdir -p /a/b/c acts differently compared ./toybox rmdir /a/b/c because of the way toybox handles the slashes, it removes them so when arriving at the first slash it actually attempts to rmdir nothing which is invalid.
This PR makes it correctly try to remove the first slash upon reaching there.",True,{}
landley/toybox,https://github.com/landley/toybox,274,2021-03-19T22:07:20Z,2021-03-20T04:56:58Z,2021-03-20T04:56:58Z,CLOSED,False,6,0,1,https://github.com/nir9,Handle paths starting with slash in rmdir -p,1,[],https://github.com/landley/toybox/pull/274,https://github.com/landley,2,https://github.com/landley/toybox/pull/274#issuecomment-803233525,"When comparing behavior with the rmdir shipped with the linux distro I am running I have found that rmdir -p /a/b/c acts differently compared ./toybox rmdir /a/b/c because of the way toybox handles the slashes, it removes them so when arriving at the first slash it actually attempts to rmdir nothing which is invalid.
This PR makes it correctly try to remove the first slash upon reaching there.","How about just:
--- a/toys/posix/rmdir.c
+++ b/toys/posix/rmdir.c
@@ -25,7 +25,7 @@ static void do_rmdir(char *name)
{
char *temp;

for (;;) {


do {
if (rmdir(name)) {
if (!FLAG(ignore_fail_on_non_empty) || errno != ENOTEMPTY)
perror_msg_raw(name);
@@ -39,7 +39,7 @@ static void do_rmdir(char *name)
if (!(temp = strrchr(name, '/'))) return;
*temp = 0;
} while (!temp[1]);


}


} while (*name);
}",True,{}
landley/toybox,https://github.com/landley/toybox,274,2021-03-19T22:07:20Z,2021-03-20T04:56:58Z,2021-03-20T04:56:58Z,CLOSED,False,6,0,1,https://github.com/nir9,Handle paths starting with slash in rmdir -p,1,[],https://github.com/landley/toybox/pull/274,https://github.com/landley,3,https://github.com/landley/toybox/pull/274#issuecomment-803233716,"When comparing behavior with the rmdir shipped with the linux distro I am running I have found that rmdir -p /a/b/c acts differently compared ./toybox rmdir /a/b/c because of the way toybox handles the slashes, it removes them so when arriving at the first slash it actually attempts to rmdir nothing which is invalid.
This PR makes it correctly try to remove the first slash upon reaching there.","Wow, github hasn't got the concept of cutting and pasting a patch into a comment, does it? Of course wiki markup for comments is more important than C, why wouldn't it be? Sigh...
The patch changes the for loop into a do { ) while (*name);",True,{}
landley/toybox,https://github.com/landley/toybox,274,2021-03-19T22:07:20Z,2021-03-20T04:56:58Z,2021-03-20T04:56:58Z,CLOSED,False,6,0,1,https://github.com/nir9,Handle paths starting with slash in rmdir -p,1,[],https://github.com/landley/toybox/pull/274,https://github.com/enh-google,4,https://github.com/landley/toybox/pull/274#issuecomment-803234899,"When comparing behavior with the rmdir shipped with the linux distro I am running I have found that rmdir -p /a/b/c acts differently compared ./toybox rmdir /a/b/c because of the way toybox handles the slashes, it removes them so when arriving at the first slash it actually attempts to rmdir nothing which is invalid.
This PR makes it correctly try to remove the first slash upon reaching there.","```
Verbatim text here
```
…
On Fri, Mar 19, 2021, 20:02 Rob Landley ***@***.***> wrote:
 Wow, github hasn't got the concept of cutting and pasting a patch into a
 comment, does it? Of course wiki markup for comments is more important than
 C, why wouldn't it be? Sigh...

 The patch changes the for loop into a do { ) while (*name);

 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub
 <#274 (comment)>, or
 unsubscribe
 <https://github.com/notifications/unsubscribe-auth/AMVLEWHAOWTISQZ5KM4DNJLTEQF6FANCNFSM4ZPSXW2A>
 .",True,{}
landley/toybox,https://github.com/landley/toybox,274,2021-03-19T22:07:20Z,2021-03-20T04:56:58Z,2021-03-20T04:56:58Z,CLOSED,False,6,0,1,https://github.com/nir9,Handle paths starting with slash in rmdir -p,1,[],https://github.com/landley/toybox/pull/274,https://github.com/nir9,5,https://github.com/landley/toybox/pull/274#issuecomment-803243597,"When comparing behavior with the rmdir shipped with the linux distro I am running I have found that rmdir -p /a/b/c acts differently compared ./toybox rmdir /a/b/c because of the way toybox handles the slashes, it removes them so when arriving at the first slash it actually attempts to rmdir nothing which is invalid.
This PR makes it correctly try to remove the first slash upon reaching there.","Hi,
The patch solves the problem of calling rmdir with nothing, but does not attempt to remove ""/"" like the rmdir I have compared behavior with does.
Now I can agree that there isn't much point in attempting to remove ""/"", what do you think?",True,{}
landley/toybox,https://github.com/landley/toybox,274,2021-03-19T22:07:20Z,2021-03-20T04:56:58Z,2021-03-20T04:56:58Z,CLOSED,False,6,0,1,https://github.com/nir9,Handle paths starting with slash in rmdir -p,1,[],https://github.com/landley/toybox/pull/274,https://github.com/landley,6,https://github.com/landley/toybox/pull/274#issuecomment-803249439,"When comparing behavior with the rmdir shipped with the linux distro I am running I have found that rmdir -p /a/b/c acts differently compared ./toybox rmdir /a/b/c because of the way toybox handles the slashes, it removes them so when arriving at the first slash it actually attempts to rmdir nothing which is invalid.
This PR makes it correctly try to remove the first slash upon reaching there.","I specifically didn't want to remove / (at least not as part of a -p chain) since that doesn't make sense in unix.
Commit 855eca3",True,{'THUMBS_UP': ['https://github.com/nir9']}
landley/toybox,https://github.com/landley/toybox,275,2021-03-24T18:27:13Z,2021-03-25T18:14:24Z,2021-03-25T18:14:24Z,CLOSED,False,9,5,2,https://github.com/E5ten,Fix install -t,1,[],https://github.com/landley/toybox/pull/275,https://github.com/E5ten,1,https://github.com/landley/toybox/pull/275,"I ran the tests with this and saw no regressions, and it seems to fix #270","I ran the tests with this and saw no regressions, and it seems to fix #270",True,{}
landley/toybox,https://github.com/landley/toybox,275,2021-03-24T18:27:13Z,2021-03-25T18:14:24Z,2021-03-25T18:14:24Z,CLOSED,False,9,5,2,https://github.com/E5ten,Fix install -t,1,[],https://github.com/landley/toybox/pull/275,https://github.com/landley,2,https://github.com/landley/toybox/pull/275#issuecomment-806205030,"I ran the tests with this and saw no regressions, and it seems to fix #270","Could you add a tests/install.test entry demonstrating what it fixes?
(Due to the name conflict with ""make install"" there's no make test_install target, you have to run ""scripts/test.sh install"" directly. It's run as part of ""make tests"" though.)",True,{}
landley/toybox,https://github.com/landley/toybox,275,2021-03-24T18:27:13Z,2021-03-25T18:14:24Z,2021-03-25T18:14:24Z,CLOSED,False,9,5,2,https://github.com/E5ten,Fix install -t,1,[],https://github.com/landley/toybox/pull/275,https://github.com/E5ten,3,https://github.com/landley/toybox/pull/275#issuecomment-806307333,"I ran the tests with this and saw no regressions, and it seems to fix #270","Done, let me know if there's anything wrong with the test case, I think that's the first one I've written for toybox.",True,{}
landley/toybox,https://github.com/landley/toybox,275,2021-03-24T18:27:13Z,2021-03-25T18:14:24Z,2021-03-25T18:14:24Z,CLOSED,False,9,5,2,https://github.com/E5ten,Fix install -t,1,[],https://github.com/landley/toybox/pull/275,https://github.com/E5ten,4,https://github.com/landley/toybox/pull/275#issuecomment-806309164,"I ran the tests with this and saw no regressions, and it seems to fix #270","Also, in regards to the name conflict, I think the usual strategy here is to use xinstall throughout the source (like for the test name, the make target, etc.) and then to just install xinstall as install for make install. No idea how plausible or desirable it is to do something like this for toybox, but figured I'd bring it up in case it's a workable solution for the inability to run test_install individually.",True,{}
landley/toybox,https://github.com/landley/toybox,275,2021-03-24T18:27:13Z,2021-03-25T18:14:24Z,2021-03-25T18:14:24Z,CLOSED,False,9,5,2,https://github.com/E5ten,Fix install -t,1,[],https://github.com/landley/toybox/pull/275,https://github.com/E5ten,5,https://github.com/landley/toybox/pull/275#issuecomment-807217058,"I ran the tests with this and saw no regressions, and it seems to fix #270",Closed by 3cde241,True,{}
landley/toybox,https://github.com/landley/toybox,280,2021-05-01T11:28:12Z,2021-05-02T09:39:06Z,2021-05-02T09:39:06Z,CLOSED,False,26,7,2,https://github.com/Ella-0,Add OpenBSD support,1,[],https://github.com/landley/toybox/pull/280,https://github.com/Ella-0,1,https://github.com/landley/toybox/pull/280,Adds OpenBSD support. chrt and fallocate don't build due to missing functions.,Adds OpenBSD support. chrt and fallocate don't build due to missing functions.,True,{}
landley/toybox,https://github.com/landley/toybox,280,2021-05-01T11:28:12Z,2021-05-02T09:39:06Z,2021-05-02T09:39:06Z,CLOSED,False,26,7,2,https://github.com/Ella-0,Add OpenBSD support,1,[],https://github.com/landley/toybox/pull/280,https://github.com/landley,2,https://github.com/landley/toybox/pull/280#issuecomment-830779843,Adds OpenBSD support. chrt and fallocate don't build due to missing functions.,"Applied, but I note that the kconfig/ directory has freebsd_miniconfig and macos_miniconfig both of which are callable from kconfig/Makefile (and mentioned in the kconfig/Makefile help: target's output).",True,{}
landley/toybox,https://github.com/landley/toybox,282,2021-05-13T01:32:48Z,2021-06-25T04:20:49Z,2021-06-25T04:20:49Z,CLOSED,False,0,0,0,https://github.com/peterennis,typo,7,[],https://github.com/landley/toybox/pull/282,https://github.com/peterennis,1,https://github.com/landley/toybox/pull/282,,,True,{}
landley/toybox,https://github.com/landley/toybox,284,2021-05-19T01:27:55Z,2021-10-29T23:47:23Z,2021-10-29T23:47:23Z,CLOSED,False,1,0,1,https://github.com/Ocean-Moist,Fix missing header file,2,[],https://github.com/landley/toybox/pull/284,https://github.com/Ocean-Moist,1,https://github.com/landley/toybox/pull/284,"shadow.h is neccesary for ``getspnam``` and is missing
fix #283","shadow.h is neccesary for ``getspnam``` and is missing
fix #283",True,{}
landley/toybox,https://github.com/landley/toybox,284,2021-05-19T01:27:55Z,2021-10-29T23:47:23Z,2021-10-29T23:47:23Z,CLOSED,False,1,0,1,https://github.com/Ocean-Moist,Fix missing header file,2,[],https://github.com/landley/toybox/pull/284,https://github.com/landley,2,https://github.com/landley/toybox/pull/284#issuecomment-843701465,"shadow.h is neccesary for ``getspnam``` and is missing
fix #283","That would break bionic, which doesn't have shadow.h.
The existing include of shadow.h in https://github.com/landley/toybox/blob/0.8.4/lib/portability.h#L215 is guarded by CFG_TOYBOX_SHADOW which is written into generated/Config.probed by https://github.com/landley/toybox/blob/0.8.4/scripts/genconfig.sh#L69 so the question is A) why is your build environment failing that compile-time probe, B) even if that IS failing why is the TOYBOX_SHADOW dependency in https://github.com/landley/toybox/blob/0.8.4/toys/lsb/passwd.c#L13 not preventing you from selecting the passwd command in your config?",True,{}
landley/toybox,https://github.com/landley/toybox,285,2021-06-12T03:08:25Z,2021-06-12T07:24:37Z,2021-06-12T07:24:37Z,CLOSED,False,0,0,6,https://github.com/ericonr,www: remove executable flag from html files.,1,[],https://github.com/landley/toybox/pull/285,https://github.com/ericonr,1,https://github.com/landley/toybox/pull/285,,,True,{}
landley/toybox,https://github.com/landley/toybox,285,2021-06-12T03:08:25Z,2021-06-12T07:24:37Z,2021-06-12T07:24:37Z,CLOSED,False,0,0,6,https://github.com/ericonr,www: remove executable flag from html files.,1,[],https://github.com/landley/toybox/pull/285,https://github.com/landley,2,https://github.com/landley/toybox/pull/285#issuecomment-860014025,,http://www.html-faq.com/ssi/?xbithack,True,{}
landley/toybox,https://github.com/landley/toybox,288,2021-06-27T07:26:25Z,,2022-03-04T03:04:04Z,OPEN,False,13,4,1,https://github.com/Ella-0,Add support for -n in split,1,[],https://github.com/landley/toybox/pull/288,https://github.com/Ella-0,1,https://github.com/landley/toybox/pull/288,Fixes #287,Fixes #287,True,{}
landley/toybox,https://github.com/landley/toybox,288,2021-06-27T07:26:25Z,,2022-03-04T03:04:04Z,OPEN,False,13,4,1,https://github.com/Ella-0,Add support for -n in split,1,[],https://github.com/landley/toybox/pull/288,https://github.com/landley,2,https://github.com/landley/toybox/pull/288#issuecomment-869143095,Fixes #287,"Good start, but len is number of bytes read into a 4k buffer, not total file size.",True,{}
landley/toybox,https://github.com/landley/toybox,288,2021-06-27T07:26:25Z,,2022-03-04T03:04:04Z,OPEN,False,13,4,1,https://github.com/Ella-0,Add support for -n in split,1,[],https://github.com/landley/toybox/pull/288,https://github.com/Ella-0,3,https://github.com/landley/toybox/pull/288#issuecomment-869154218,Fixes #287,"Fixed that, small problem; I'm unsure if using lseek is the best way to check if the value of st.st_size is valid.",True,{}
landley/toybox,https://github.com/landley/toybox,288,2021-06-27T07:26:25Z,,2022-03-04T03:04:04Z,OPEN,False,13,4,1,https://github.com/Ella-0,Add support for -n in split,1,[],https://github.com/landley/toybox/pull/288,https://github.com/Ella-0,4,https://github.com/landley/toybox/pull/288#issuecomment-869585635,Fixes #287,After investigating further it seams that this should only work for regular files.,True,{}
landley/toybox,https://github.com/landley/toybox,288,2021-06-27T07:26:25Z,,2022-03-04T03:04:04Z,OPEN,False,13,4,1,https://github.com/Ella-0,Add support for -n in split,1,[],https://github.com/landley/toybox/pull/288,https://github.com/landley,5,https://github.com/landley/toybox/pull/288#issuecomment-1058780488,Fixes #287,Commits df7bfd2 and 3fbacb1,True,{}
landley/toybox,https://github.com/landley/toybox,289,2021-07-13T01:55:16Z,2021-07-13T19:21:45Z,2021-07-13T19:21:45Z,CLOSED,False,2,2,1,https://github.com/linux-gcc,fix the problem of compilation failure on the 3.10 kernel,1,[],https://github.com/landley/toybox/pull/289,https://github.com/linux-gcc,1,https://github.com/landley/toybox/pull/289,fix the problem of compilation failure on the 3.10 kernel.,fix the problem of compilation failure on the 3.10 kernel.,True,{}
landley/toybox,https://github.com/landley/toybox,289,2021-07-13T01:55:16Z,2021-07-13T19:21:45Z,2021-07-13T19:21:45Z,CLOSED,False,2,2,1,https://github.com/linux-gcc,fix the problem of compilation failure on the 3.10 kernel,1,[],https://github.com/landley/toybox/pull/289,https://github.com/linux-gcc,2,https://github.com/landley/toybox/pull/289#issuecomment-878717941,fix the problem of compilation failure on the 3.10 kernel.,@landley Please help review the code. thanks!,True,{}
landley/toybox,https://github.com/landley/toybox,289,2021-07-13T01:55:16Z,2021-07-13T19:21:45Z,2021-07-13T19:21:45Z,CLOSED,False,2,2,1,https://github.com/linux-gcc,fix the problem of compilation failure on the 3.10 kernel,1,[],https://github.com/landley/toybox/pull/289,https://github.com/landley,3,https://github.com/landley/toybox/pull/289#issuecomment-879323889,fix the problem of compilation failure on the 3.10 kernel.,"The 3.10 kernel shipped in 2013 and https://landley.net/toybox/faq.html#support_horizon is 7 years. The last LTS bugfix to that kernel (.108) was almost 4 years ago. Why are you trying to build under that kernel, and do you really need lsattr? (Can you switch it off in the .config instead?)
Hmmm... That said, the two symbols were added to the UAPI headers more recently, torvalds/linux@68ce7bfcd995 added FS_INLINE in 2016. The proper fix would be to add #ifndef SYMBOL/#define/#endif stanzas to lib/portability.h with a comment about when they expire.",True,{}
landley/toybox,https://github.com/landley/toybox,289,2021-07-13T01:55:16Z,2021-07-13T19:21:45Z,2021-07-13T19:21:45Z,CLOSED,False,2,2,1,https://github.com/linux-gcc,fix the problem of compilation failure on the 3.10 kernel,1,[],https://github.com/landley/toybox/pull/289,https://github.com/landley,4,https://github.com/landley/toybox/pull/289#issuecomment-879325808,fix the problem of compilation failure on the 3.10 kernel.,"Except linux/fs.h isn't #included for portability.h to modify, blah. Alright, lemme take a stab at this...",True,{}
landley/toybox,https://github.com/landley/toybox,289,2021-07-13T01:55:16Z,2021-07-13T19:21:45Z,2021-07-13T19:21:45Z,CLOSED,False,2,2,1,https://github.com/linux-gcc,fix the problem of compilation failure on the 3.10 kernel,1,[],https://github.com/landley/toybox/pull/289,https://github.com/landley,5,https://github.com/landley/toybox/pull/289#issuecomment-879339614,fix the problem of compilation failure on the 3.10 kernel.,Commit 281f30d,True,{}
landley/toybox,https://github.com/landley/toybox,291,2021-08-04T12:08:04Z,,2021-08-04T12:08:04Z,OPEN,False,136,136,55,https://github.com/ferivoz,Fix typos.,1,[],https://github.com/landley/toybox/pull/291,https://github.com/ferivoz,1,https://github.com/landley/toybox/pull/291,Typos found with codespell.,Typos found with codespell.,True,{}
landley/toybox,https://github.com/landley/toybox,292,2021-08-11T02:12:51Z,2021-08-16T07:52:56Z,2021-08-18T23:48:51Z,CLOSED,False,3,2,2,https://github.com/linux-gcc,fix ip.c compilation failed,3,[],https://github.com/landley/toybox/pull/292,https://github.com/linux-gcc,1,https://github.com/landley/toybox/pull/292,"1、fix ip.c compilation failed
2、commit 3642f3f","1、fix ip.c compilation failed
2、commit 3642f3f",True,{}
landley/toybox,https://github.com/landley/toybox,292,2021-08-11T02:12:51Z,2021-08-16T07:52:56Z,2021-08-18T23:48:51Z,CLOSED,False,3,2,2,https://github.com/linux-gcc,fix ip.c compilation failed,3,[],https://github.com/landley/toybox/pull/292,https://github.com/landley,2,https://github.com/landley/toybox/pull/292#issuecomment-896764158,"1、fix ip.c compilation failed
2、commit 3642f3f","I just wget the patch from this and it has lsattr.c changes that should be obsoleted by commit 281f30d.
What problem are you trying to fix?",True,{}
landley/toybox,https://github.com/landley/toybox,292,2021-08-11T02:12:51Z,2021-08-16T07:52:56Z,2021-08-18T23:48:51Z,CLOSED,False,3,2,2,https://github.com/linux-gcc,fix ip.c compilation failed,3,[],https://github.com/landley/toybox/pull/292,https://github.com/linux-gcc,3,https://github.com/landley/toybox/pull/292#issuecomment-896791806,"1、fix ip.c compilation failed
2、commit 3642f3f","I want to use this patch to try to solve the problem of compiling errors on kernel-3.10. When opening the CONFIG_IP configuration item.
I don't know why this PR will also bring this patch 490d587. I don't want to submit this patch 490d587，I just want to submit this patch 3642f3f.
@landley",True,{}
landley/toybox,https://github.com/landley/toybox,292,2021-08-11T02:12:51Z,2021-08-16T07:52:56Z,2021-08-18T23:48:51Z,CLOSED,False,3,2,2,https://github.com/linux-gcc,fix ip.c compilation failed,3,[],https://github.com/landley/toybox/pull/292,https://github.com/landley,4,https://github.com/landley/toybox/pull/292#issuecomment-896870788,"1、fix ip.c compilation failed
2、commit 3642f3f","What distro are you building it on, because it built fine for me? (Well, with -Wno-restrict anyway.) And the extra header shouldn't be a kernel version thing...?",True,{}
landley/toybox,https://github.com/landley/toybox,292,2021-08-11T02:12:51Z,2021-08-16T07:52:56Z,2021-08-18T23:48:51Z,CLOSED,False,3,2,2,https://github.com/linux-gcc,fix ip.c compilation failed,3,[],https://github.com/landley/toybox/pull/292,https://github.com/linux-gcc,5,https://github.com/landley/toybox/pull/292#issuecomment-897261539,"1、fix ip.c compilation failed
2、commit 3642f3f","I compiled it on centos 7.4.
@landley",True,{}
landley/toybox,https://github.com/landley/toybox,292,2021-08-11T02:12:51Z,2021-08-16T07:52:56Z,2021-08-18T23:48:51Z,CLOSED,False,3,2,2,https://github.com/linux-gcc,fix ip.c compilation failed,3,[],https://github.com/landley/toybox/pull/292,https://github.com/landley,6,https://github.com/landley/toybox/pull/292#issuecomment-897401935,"1、fix ip.c compilation failed
2、commit 3642f3f","Ah, it is kernel version skew:
Compile ip................In file included from /usr/include/linux/if_tunnel.h:7,
from toys/pending/ip.c:38:
/usr/include/linux/ip.h:86:8: error: redefinition of 'struct iphdr'
struct iphdr {
^~~~~",True,{}
landley/toybox,https://github.com/landley/toybox,292,2021-08-11T02:12:51Z,2021-08-16T07:52:56Z,2021-08-18T23:48:51Z,CLOSED,False,3,2,2,https://github.com/linux-gcc,fix ip.c compilation failed,3,[],https://github.com/landley/toybox/pull/292,https://github.com/landley,7,https://github.com/landley/toybox/pull/292#issuecomment-897404034,"1、fix ip.c compilation failed
2、commit 3642f3f",And removing the linux/if_tunnel.h include causes... 23 build errors.,True,{}
landley/toybox,https://github.com/landley/toybox,292,2021-08-11T02:12:51Z,2021-08-16T07:52:56Z,2021-08-18T23:48:51Z,CLOSED,False,3,2,2,https://github.com/linux-gcc,fix ip.c compilation failed,3,[],https://github.com/landley/toybox/pull/292,https://github.com/landley,8,https://github.com/landley/toybox/pull/292#issuecomment-899248545,"1、fix ip.c compilation failed
2、commit 3642f3f","I downloaded a centos 7.4 live cd and booted it under kvm, and the fix you need (for the problem that struct iphdr isn't defined and thus field iph is an incomplete type) is to #include <linux/ip.h> on the line before the #include <linux/if_tunnel.h>.
Which I would be willing to apply (with a comment what it's working around), except that the recent ""wait -n"" commit broke centos 7.4 because your bash is more than 7 years old (https://landley.net/toybox/faq.html#support_horizon).
That's also trivially fixable: just drop the -n from the two wait calls (then the build isn't parallel, but it completes). But this is a policy question: Centos has a 10 year time horizon and Toybox has 7. Accumulating fixes for old build environments past our stated time horizon seems... ?
Elliott: do you have an opinion here?",True,{}
landley/toybox,https://github.com/landley/toybox,292,2021-08-11T02:12:51Z,2021-08-16T07:52:56Z,2021-08-18T23:48:51Z,CLOSED,False,3,2,2,https://github.com/linux-gcc,fix ip.c compilation failed,3,[],https://github.com/landley/toybox/pull/292,https://github.com/landley,9,https://github.com/landley/toybox/pull/292#issuecomment-899301091,"1、fix ip.c compilation failed
2、commit 3642f3f",Commits f37e5bf and 3cf5ec1,True,{}
landley/toybox,https://github.com/landley/toybox,292,2021-08-11T02:12:51Z,2021-08-16T07:52:56Z,2021-08-18T23:48:51Z,CLOSED,False,3,2,2,https://github.com/linux-gcc,fix ip.c compilation failed,3,[],https://github.com/landley/toybox/pull/292,https://github.com/enh-google,10,https://github.com/landley/toybox/pull/292#issuecomment-899895909,"1、fix ip.c compilation failed
2、commit 3642f3f","But this is a policy question: Centos has a 10 year time horizon and Toybox has 7. Accumulating fixes for old build environments past our stated time horizon seems... ?
Elliott: do you have an opinion here?

oh, man... CentOS... don't get me started :-)
CentOS is our ""problem child"" OS with the NDK too. 10 year old version of glibc + 10 year old kernel means that even if we're hermetic for things like curses (which of course we should be, and any time we're not is a bug we should fix), but we still have troubles just with the libc basics. this is one reason why we're actually looking at switching host builds from glibc to musl --- then we can statically link and just make this kind of thing go away. (we'd use a current musl in conjunction with the current bionic uapi headers, so our only worry is stuff like ""do we cope with ENOSYS"" or whatever. though i guess this conversation makes me realize i don't know whether musl has a 7 year or a 10 year cruft horizon...)
(i mean, i love that i can run current xubuntu and a current kernel on my 10 year old personal laptop, and i would be sad if that went away, and i also get LTS releases [and mostly prefer LTS releases], but running a 10 year old OS ... surely part of the point of linux is that i don't have to do that! even by the end of a 3 year LTS period i'm starting to feel like ""these shoes are too small, time for new shoes"".)
luckily i don't know of anything worse than CentOS, so at least 10 years seems like the absolute limit!",True,{}
landley/toybox,https://github.com/landley/toybox,292,2021-08-11T02:12:51Z,2021-08-16T07:52:56Z,2021-08-18T23:48:51Z,CLOSED,False,3,2,2,https://github.com/linux-gcc,fix ip.c compilation failed,3,[],https://github.com/landley/toybox/pull/292,https://github.com/landley,11,https://github.com/landley/toybox/pull/292#issuecomment-901023744,"1、fix ip.c compilation failed
2、commit 3642f3f","Supporting old hardware is great: I'm typing on a laptop introduced in 2012 (and I bought a couple spares for when I wear out this one). But that seems unrelated to running a newer build environment on that hardware? I upgraded from Devuan Anthill to Devuan Babypowder because i couldn't build qemu anymore because their git introduced a requirement for a python release newer than Lucifer's move to Netflix. That's ANOTHER project more or less driven these days by Red IBM, which has ZERO respect for anybody else's build environments.
I try to minimize toybox dependencies, and to build toybox on the centos kvm live cd I just had to ""yum install gcc"" and ""yum install make"". (Ok, I also installed git because I was lazy downloading it, and then ""yum install ncurses-devel"" to run menuconfig: rewriting that would remove both that dependency and clean the gplv2 build infrastructure out of the tree. But it didn't NEED those last two.)
I have a vague TODO item of someday (after I've finished toysh and implemented make) creating a scripts/oroborous.sh that would build a minimal toybox with the build tools needed to build toybox defconfig, so you could ""PATH=$PWD/airlock:$PATH make distclean defconfig toybox"" and go from there. (My own version of a hermetic build, only building from source instead of binaries, depending only on the compiler+linker and libc to be there plus very basic posix command line utilities. That first build would either use a snapshot ""generated"" dir or make a really simple one entirely via vanilla posix shell stuff, quite possibly mkdir + writing some HERE documents.) But alas, that's a ways off...
The toybox 7 year horizon thing is policy. You've gotta draw the line somewhere. I'm not sure it's the right policy, but Red Hat sets itself up to receive very large checks from organizations that want the luxury of running 10 year old configurations, and I got a new $5 patreon donor yesterday who I'm still kinda jazzed about and need to thank. Bit of a capability gap there.
I'm pretty good about supporting very old compilers. (I only moved off the last-gplv2 ones because peter anvin made building the kernel with them painful.). I have a 7 year time horizon for kernel system calls, which is generally pretty easy to track. (Did you know my integrated ""full kernel history back to 0.0.1""  git repo got uploaded to kernel.org? No really, I know it's mine because https://git.kernel.org/pub/scm/linux/kernel/git/mpe/linux-fullhistory.git/tag/?h=v2.4.0 mentions me. Just clone that then change the upstream to the normal kernel.org one and git pull to current, makes ""git annotate"" WAY more useful.) And I've got portability.h to defend against libc breakage.
But I waited an extra 6 months to use ""wait -n"", AND I'm implementing a shell intended to have ""wait -n"" in it, and that not being enough is... vexing.",True,{}
landley/toybox,https://github.com/landley/toybox,292,2021-08-11T02:12:51Z,2021-08-16T07:52:56Z,2021-08-18T23:48:51Z,CLOSED,False,3,2,2,https://github.com/linux-gcc,fix ip.c compilation failed,3,[],https://github.com/landley/toybox/pull/292,https://github.com/enh-google,12,https://github.com/landley/toybox/pull/292#issuecomment-901502598,"1、fix ip.c compilation failed
2、commit 3642f3f","But that seems unrelated to running a newer build environment on that hardware?

that was what i was trying to say --- forcing people to buy new hardware makes me feel like a bad guy, but forcing people to take a free OS upgrade (especially to a newer ""LTS"" version) ... has never struck me as particularly unreasonable.
given that CentOS 8 is just a few months away from its final ""full"" update (aiui from https://en.wikipedia.org/wiki/CentOS), it doesn't seem unreasonable to upgrade off the previous version? (and that's ignoring that aiui CentOS is abandonware now anyway, so it's probably not just time to get a newer CentOS, but time to get a different OS entirely!)",True,{}
landley/toybox,https://github.com/landley/toybox,293,2021-09-11T23:32:53Z,2021-09-30T10:19:04Z,2021-09-30T10:19:04Z,CLOSED,False,1,1,1,https://github.com/prettykool,Minor readability changes to time.,1,[],https://github.com/landley/toybox/pull/293,https://github.com/prettykool,1,https://github.com/landley/toybox/pull/293,"Specifically, a newline was added, and tabs were used instead of spaces.
If you're curious, here's the original output of time, with the result of the sample input  echo ""Hello."" included:
Hello.
real 0.034699
user 0.000000
sys 0.000000
And here's the current output:
Hello.

real    0.030935
user    0.000000
sys     0.015625
That's it.","Specifically, a newline was added, and tabs were used instead of spaces.
If you're curious, here's the original output of time, with the result of the sample input  echo ""Hello."" included:
Hello.
real 0.034699
user 0.000000
sys 0.000000
And here's the current output:
Hello.

real    0.030935
user    0.000000
sys     0.015625
That's it.",True,{}
landley/toybox,https://github.com/landley/toybox,293,2021-09-11T23:32:53Z,2021-09-30T10:19:04Z,2021-09-30T10:19:04Z,CLOSED,False,1,1,1,https://github.com/prettykool,Minor readability changes to time.,1,[],https://github.com/landley/toybox/pull/293,https://github.com/prettykool,2,https://github.com/landley/toybox/pull/293#issuecomment-931190280,"Specifically, a newline was added, and tabs were used instead of spaces.
If you're curious, here's the original output of time, with the result of the sample input  echo ""Hello."" included:
Hello.
real 0.034699
user 0.000000
sys 0.000000
And here's the current output:
Hello.

real    0.030935
user    0.000000
sys     0.015625
That's it.","Patch added to mainline, as 5d9432ba05f12301939ad669ecf318a707fdcea8. Didn't realize this was still open until just now...",True,{}
landley/toybox,https://github.com/landley/toybox,295,2021-09-25T07:44:54Z,2021-09-25T20:31:33Z,2021-09-25T20:31:33Z,CLOSED,False,1,1,1,https://github.com/johschmitz,www: Fix typo in about page,1,[],https://github.com/landley/toybox/pull/295,https://github.com/johschmitz,1,https://github.com/landley/toybox/pull/295,,,True,{}
landley/toybox,https://github.com/landley/toybox,295,2021-09-25T07:44:54Z,2021-09-25T20:31:33Z,2021-09-25T20:31:33Z,CLOSED,False,1,1,1,https://github.com/johschmitz,www: Fix typo in about page,1,[],https://github.com/landley/toybox/pull/295,https://github.com/enh-google,2,https://github.com/landley/toybox/pull/295#issuecomment-927179206,,(merged),True,{}
landley/toybox,https://github.com/landley/toybox,297,2021-10-26T18:34:53Z,2021-10-29T23:40:42Z,2021-10-29T23:40:42Z,CLOSED,False,35,21,1,https://github.com/nzmichaelh,tftpd: fix the parsing of options,1,[],https://github.com/landley/toybox/pull/297,https://github.com/nzmichaelh,1,https://github.com/landley/toybox/pull/297,"TFTP supports passing options such as 'blksize' as part of the initial
RRQ or WRQ packet. These options consist of a null-terminated name
followed by a null-terminated value. The current code segfaults due to
mis-calculating the address of the value.
Add a next_token helper that advances past the next null and also
detects advancing past the end of the packet.
Tested by running:
atftp -g -r /toybox -l toybox --option ""blksize 1500"" --option ""foo bar"" localhost 8069

Signed-off-by: Michael Hope mlhx@google.com","TFTP supports passing options such as 'blksize' as part of the initial
RRQ or WRQ packet. These options consist of a null-terminated name
followed by a null-terminated value. The current code segfaults due to
mis-calculating the address of the value.
Add a next_token helper that advances past the next null and also
detects advancing past the end of the packet.
Tested by running:
atftp -g -r /toybox -l toybox --option ""blksize 1500"" --option ""foo bar"" localhost 8069

Signed-off-by: Michael Hope mlhx@google.com",True,{}
landley/toybox,https://github.com/landley/toybox,297,2021-10-26T18:34:53Z,2021-10-29T23:40:42Z,2021-10-29T23:40:42Z,CLOSED,False,35,21,1,https://github.com/nzmichaelh,tftpd: fix the parsing of options,1,[],https://github.com/landley/toybox/pull/297,https://github.com/enh-google,2,https://github.com/landley/toybox/pull/297#issuecomment-955102233,"TFTP supports passing options such as 'blksize' as part of the initial
RRQ or WRQ packet. These options consist of a null-terminated name
followed by a null-terminated value. The current code segfaults due to
mis-calculating the address of the value.
Add a next_token helper that advances past the next null and also
detects advancing past the end of the packet.
Tested by running:
atftp -g -r /toybox -l toybox --option ""blksize 1500"" --option ""foo bar"" localhost 8069

Signed-off-by: Michael Hope mlhx@google.com",(merged directly by rob the other day.),True,{}
landley/toybox,https://github.com/landley/toybox,304,2021-11-28T05:07:13Z,,2021-11-28T05:07:13Z,OPEN,False,153,178,2,https://github.com/itsmohitmkk,Updated readme ISSUE : #303,6,[],https://github.com/landley/toybox/pull/304,https://github.com/itsmohitmkk,1,https://github.com/landley/toybox/pull/304,,,True,{}
landley/toybox,https://github.com/landley/toybox,308,2021-12-21T17:25:35Z,2021-12-22T12:46:31Z,2021-12-22T12:46:32Z,CLOSED,False,1,1,1,https://github.com/dariofreni,Fix logic to avoid copying selinux context xattr.,1,[],https://github.com/landley/toybox/pull/308,https://github.com/dariofreni,1,https://github.com/landley/toybox/pull/308,Fixes #307,Fixes #307,True,{}
landley/toybox,https://github.com/landley/toybox,308,2021-12-21T17:25:35Z,2021-12-22T12:46:31Z,2021-12-22T12:46:32Z,CLOSED,False,1,1,1,https://github.com/dariofreni,Fix logic to avoid copying selinux context xattr.,1,[],https://github.com/landley/toybox/pull/308,https://github.com/dariofreni,2,https://github.com/landley/toybox/pull/308#issuecomment-999551159,Fixes #307,superseded by e191765,True,{}
landley/toybox,https://github.com/landley/toybox,311,2021-12-25T09:33:49Z,2022-03-04T03:01:49Z,2022-03-04T08:55:28Z,CLOSED,False,1,1,1,https://github.com/firasuke,Fix a typo in my name,1,[],https://github.com/landley/toybox/pull/311,https://github.com/firasuke,1,https://github.com/landley/toybox/pull/311,"This fixes a typo in my name, thanks for crediting me!","This fixes a typo in my name, thanks for crediting me!",True,{}
landley/toybox,https://github.com/landley/toybox,311,2021-12-25T09:33:49Z,2022-03-04T03:01:49Z,2022-03-04T08:55:28Z,CLOSED,False,1,1,1,https://github.com/firasuke,Fix a typo in my name,1,[],https://github.com/landley/toybox/pull/311,https://github.com/landley,2,https://github.com/landley/toybox/pull/311#issuecomment-1058779494,"This fixes a typo in my name, thanks for crediting me!",Commit 34d660e,True,{}
landley/toybox,https://github.com/landley/toybox,311,2021-12-25T09:33:49Z,2022-03-04T03:01:49Z,2022-03-04T08:55:28Z,CLOSED,False,1,1,1,https://github.com/firasuke,Fix a typo in my name,1,[],https://github.com/landley/toybox/pull/311,https://github.com/firasuke,3,https://github.com/landley/toybox/pull/311#issuecomment-1058965297,"This fixes a typo in my name, thanks for crediting me!",Thanks!,True,{}
landley/toybox,https://github.com/landley/toybox,315,2022-01-16T21:58:02Z,,2022-01-17T21:45:26Z,OPEN,False,27,25,5,https://github.com/ccawley2011,Fix various UndefinedBehaviorSanitizer warnings,5,[],https://github.com/landley/toybox/pull/315,https://github.com/ccawley2011,1,https://github.com/landley/toybox/pull/315,"This fixes all warnings encountered when running the tests, except for two errors in toys/lsb/seq.c that I'm not sure how to fix properly.
The first commit is taken from libxmp/libxmp@a2f88d0.","This fixes all warnings encountered when running the tests, except for two errors in toys/lsb/seq.c that I'm not sure how to fix properly.
The first commit is taken from libxmp/libxmp@a2f88d0.",True,{}
landley/toybox,https://github.com/landley/toybox,315,2022-01-16T21:58:02Z,,2022-01-17T21:45:26Z,OPEN,False,27,25,5,https://github.com/ccawley2011,Fix various UndefinedBehaviorSanitizer warnings,5,[],https://github.com/landley/toybox/pull/315,https://github.com/landley,2,https://github.com/landley/toybox/pull/315#issuecomment-1014887222,"This fixes all warnings encountered when running the tests, except for two errors in toys/lsb/seq.c that I'm not sure how to fix properly.
The first commit is taken from libxmp/libxmp@a2f88d0.","The first patch identifies itself as a false positive.
In the second, free(NULL) is a NOP so fine (says posix) so whatever the test decides in that case is ok, and what's the problem with postincrementing a null pointer we never use again? Not applying either, they don't fix anything real, just mollify a static analyzer I don't use.",True,{}
landley/toybox,https://github.com/landley/toybox,315,2022-01-16T21:58:02Z,,2022-01-17T21:45:26Z,OPEN,False,27,25,5,https://github.com/ccawley2011,Fix various UndefinedBehaviorSanitizer warnings,5,[],https://github.com/landley/toybox/pull/315,https://github.com/landley,3,https://github.com/landley/toybox/pull/315#issuecomment-1014889307,"This fixes all warnings encountered when running the tests, except for two errors in toys/lsb/seq.c that I'm not sure how to fix properly.
The first commit is taken from libxmp/libxmp@a2f88d0.","If qsort() is fed an array length of zero, and either reads from or writes to the first element of the array, it's making an access past the end of the array. That would be a bug in qsort.",True,{}
landley/toybox,https://github.com/landley/toybox,315,2022-01-16T21:58:02Z,,2022-01-17T21:45:26Z,OPEN,False,27,25,5,https://github.com/ccawley2011,Fix various UndefinedBehaviorSanitizer warnings,5,[],https://github.com/landley/toybox/pull/315,https://github.com/landley,4,https://github.com/landley/toybox/pull/315#issuecomment-1014894114,"This fixes all warnings encountered when running the tests, except for two errors in toys/lsb/seq.c that I'm not sure how to fix properly.
The first commit is taken from libxmp/libxmp@a2f88d0.",As an amateur computer historian (https://landley.net/history/mirror etc) I'm curious: what's the last processor that DIDN'T use two's complement for integer math? (Has there been one with a posix build environment?),True,{}
landley/toybox,https://github.com/landley/toybox,316,2022-01-16T22:13:59Z,,2022-01-16T22:13:59Z,OPEN,False,3,3,1,https://github.com/ccawley2011,Use unsigned char for the bzip2 input buffer,1,[],https://github.com/landley/toybox/pull/316,https://github.com/ccawley2011,1,https://github.com/landley/toybox/pull/316,"This isn't a problem within Toybox itself, since it's built with -funsigned-char on all platforms, but it is needed when using the decompression code separately in other programs.","This isn't a problem within Toybox itself, since it's built with -funsigned-char on all platforms, but it is needed when using the decompression code separately in other programs.",True,{}
landley/toybox,https://github.com/landley/toybox,317,2022-01-16T23:11:10Z,,2022-01-18T20:37:23Z,OPEN,False,22,12,1,https://github.com/ccawley2011,Return more errors where possible when bzcat fails,1,[],https://github.com/landley/toybox/pull/317,https://github.com/ccawley2011,1,https://github.com/landley/toybox/pull/317,"This is based on the modified version of the code used by libxmp, minus the use of setjmp and longjmp to handle read failures.","This is based on the modified version of the code used by libxmp, minus the use of setjmp and longjmp to handle read failures.",True,{}
landley/toybox,https://github.com/landley/toybox,320,2022-02-17T00:47:58Z,2022-02-17T00:51:40Z,2022-02-17T00:51:41Z,CLOSED,False,4,4,1,https://github.com/peterennis,Typos,34,[],https://github.com/landley/toybox/pull/320,https://github.com/peterennis,1,https://github.com/landley/toybox/pull/320,,,True,{}
landley/toybox,https://github.com/landley/toybox,320,2022-02-17T00:47:58Z,2022-02-17T00:51:40Z,2022-02-17T00:51:41Z,CLOSED,False,4,4,1,https://github.com/peterennis,Typos,34,[],https://github.com/landley/toybox/pull/320,https://github.com/peterennis,2,https://github.com/landley/toybox/pull/320#issuecomment-1042456349,,1 changed file and 34 commits - close and try again !!!,True,{}
landley/toybox,https://github.com/landley/toybox,321,2022-02-17T01:05:20Z,2022-02-17T01:33:41Z,2022-02-17T01:33:57Z,CLOSED,False,4,4,1,https://github.com/peterennis,typos,1,[],https://github.com/landley/toybox/pull/321,https://github.com/peterennis,1,https://github.com/landley/toybox/pull/321,,,True,{}
landley/toybox,https://github.com/landley/toybox,321,2022-02-17T01:05:20Z,2022-02-17T01:33:41Z,2022-02-17T01:33:57Z,CLOSED,False,4,4,1,https://github.com/peterennis,typos,1,[],https://github.com/landley/toybox/pull/321,https://github.com/landley,2,https://github.com/landley/toybox/pull/321#issuecomment-1042476764,,"And yet... https://www.youtube.com/watch?v=1tu1mA3z1mw
The part I took is in commit 22d5961",True,{}
landley/toybox,https://github.com/landley/toybox,321,2022-02-17T01:05:20Z,2022-02-17T01:33:41Z,2022-02-17T01:33:57Z,CLOSED,False,4,4,1,https://github.com/peterennis,typos,1,[],https://github.com/landley/toybox/pull/321,https://github.com/peterennis,3,https://github.com/landley/toybox/pull/321#issuecomment-1042478636,,"On Wednesday, February 16, 2022, 06:27:17 PM MST, Rob Landley ***@***.***> wrote:




And yet... https://www.youtube.com/watch?v=1tu1mA3z1mw

The part I took is in commit 22d5961

—
Reply to this email directly, view it on GitHub, or unsubscribe.
You are receiving this because you authored the thread.Message ID: ***@***.***>",True,{}
landley/toybox,https://github.com/landley/toybox,323,2022-03-04T00:13:36Z,2022-03-04T16:51:37Z,2022-03-04T16:51:37Z,CLOSED,False,2,2,1,https://github.com/changyeonjo,Update lsusb.c,1,[],https://github.com/landley/toybox/pull/323,https://github.com/changyeonjo,1,https://github.com/landley/toybox/pull/323,"Because scan_uevent() returns a number of patterns it successfully filled, its result should be evaluated as successful when its return value equals to its len parameter.","Because scan_uevent() returns a number of patterns it successfully filled, its result should be evaluated as successful when its return value equals to its len parameter.",True,{}
landley/toybox,https://github.com/landley/toybox,323,2022-03-04T00:13:36Z,2022-03-04T16:51:37Z,2022-03-04T16:51:37Z,CLOSED,False,2,2,1,https://github.com/changyeonjo,Update lsusb.c,1,[],https://github.com/landley/toybox/pull/323,https://github.com/landley,2,https://github.com/landley/toybox/pull/323#issuecomment-1058778655,"Because scan_uevent() returns a number of patterns it successfully filled, its result should be evaluated as successful when its return value equals to its len parameter.","The second change breaks lspci. (That one's supposed to be != to skip entries.)
I had a couple other pending changes so I rolled the first fix into 6f24967.
Thanks,
Rob",True,{}
landley/toybox,https://github.com/landley/toybox,323,2022-03-04T00:13:36Z,2022-03-04T16:51:37Z,2022-03-04T16:51:37Z,CLOSED,False,2,2,1,https://github.com/changyeonjo,Update lsusb.c,1,[],https://github.com/landley/toybox/pull/323,https://github.com/changyeonjo,3,https://github.com/landley/toybox/pull/323#issuecomment-1058901878,"Because scan_uevent() returns a number of patterns it successfully filled, its result should be evaluated as successful when its return value equals to its len parameter.","Thank you, landley.",True,{}
landley/toybox,https://github.com/landley/toybox,323,2022-03-04T00:13:36Z,2022-03-04T16:51:37Z,2022-03-04T16:51:37Z,CLOSED,False,2,2,1,https://github.com/changyeonjo,Update lsusb.c,1,[],https://github.com/landley/toybox/pull/323,https://github.com/enh-google,4,https://github.com/landley/toybox/pull/323#issuecomment-1059334491,"Because scan_uevent() returns a number of patterns it successfully filled, its result should be evaluated as successful when its return value equals to its len parameter.",thanks! pulled into AOSP with https://android-review.googlesource.com/c/platform/external/toybox/+/2009395,True,{}
landley/toybox,https://github.com/landley/toybox,326,2022-03-16T02:54:01Z,2022-03-18T01:27:17Z,2022-03-18T01:27:17Z,CLOSED,False,12,7,2,https://github.com/LongPingWEI,Enable copy_file_range when it is available.,1,[],https://github.com/landley/toybox/pull/326,https://github.com/LongPingWEI,1,https://github.com/landley/toybox/pull/326,"Changes:

fix the mistake in scripts/genconfig.sh;
syscall(__NR_copy_file_range ...) is more suitable, as there is not a copy_file_range in bionic.
Even compiled with glibc, toybox cannot use copy_file_range easily, as we must define _GNU_SOURCE before include unistd.h first time.

Test:

dd if=/dev/urandom of=src.bin bs=4M count=1000
ln -s toyobox cp
./cp src.bin dst.bin
sha256sum src.bin dst.bin","Changes:

fix the mistake in scripts/genconfig.sh;
syscall(__NR_copy_file_range ...) is more suitable, as there is not a copy_file_range in bionic.
Even compiled with glibc, toybox cannot use copy_file_range easily, as we must define _GNU_SOURCE before include unistd.h first time.

Test:

dd if=/dev/urandom of=src.bin bs=4M count=1000
ln -s toyobox cp
./cp src.bin dst.bin
sha256sum src.bin dst.bin",True,{}
landley/toybox,https://github.com/landley/toybox,326,2022-03-16T02:54:01Z,2022-03-18T01:27:17Z,2022-03-18T01:27:17Z,CLOSED,False,12,7,2,https://github.com/LongPingWEI,Enable copy_file_range when it is available.,1,[],https://github.com/landley/toybox/pull/326,https://github.com/landley,2,https://github.com/landley/toybox/pull/326#issuecomment-1070334250,"Changes:

fix the mistake in scripts/genconfig.sh;
syscall(__NR_copy_file_range ...) is more suitable, as there is not a copy_file_range in bionic.
Even compiled with glibc, toybox cannot use copy_file_range easily, as we must define _GNU_SOURCE before include unistd.h first time.

Test:

dd if=/dev/urandom of=src.bin bs=4M count=1000
ln -s toyobox cp
./cp src.bin dst.bin
sha256sum src.bin dst.bin","Did you run ""make tests""? Because the cp tests are failing after this.",True,{}
landley/toybox,https://github.com/landley/toybox,326,2022-03-16T02:54:01Z,2022-03-18T01:27:17Z,2022-03-18T01:27:17Z,CLOSED,False,12,7,2,https://github.com/LongPingWEI,Enable copy_file_range when it is available.,1,[],https://github.com/landley/toybox/pull/326,https://github.com/LongPingWEI,3,https://github.com/landley/toybox/pull/326#issuecomment-1070504128,"Changes:

fix the mistake in scripts/genconfig.sh;
syscall(__NR_copy_file_range ...) is more suitable, as there is not a copy_file_range in bionic.
Even compiled with glibc, toybox cannot use copy_file_range easily, as we must define _GNU_SOURCE before include unistd.h first time.

Test:

dd if=/dev/urandom of=src.bin bs=4M count=1000
ln -s toyobox cp
./cp src.bin dst.bin
sha256sum src.bin dst.bin","Did you run ""make tests""? Because the cp tests are failing after this.

@landley I have fixed the problems caused by the first patch. ""make tests"" pass on my environment now.
There are two mistakes in the first patch:

I ignored that sendfile_len supports parameter bytes be negative;
copy_file_range cannot work when either in or out is not a regular file;",True,{}
landley/toybox,https://github.com/landley/toybox,326,2022-03-16T02:54:01Z,2022-03-18T01:27:17Z,2022-03-18T01:27:17Z,CLOSED,False,12,7,2,https://github.com/LongPingWEI,Enable copy_file_range when it is available.,1,[],https://github.com/landley/toybox/pull/326,https://github.com/enh-google,4,https://github.com/landley/toybox/pull/326#issuecomment-1071422718,"Changes:

fix the mistake in scripts/genconfig.sh;
syscall(__NR_copy_file_range ...) is more suitable, as there is not a copy_file_range in bionic.
Even compiled with glibc, toybox cannot use copy_file_range easily, as we must define _GNU_SOURCE before include unistd.h first time.

Test:

dd if=/dev/urandom of=src.bin bs=4M count=1000
ln -s toyobox cp
./cp src.bin dst.bin
sha256sum src.bin dst.bin","syscall(__NR_copy_file_range ...) is more suitable, as there is not a copy_file_range in bionic.


feel free to report bionic bugs like this at https://github.com/android/ndk --- i could have sworn we'd added this already, but you're right; all we have is a ""seccomp hole"" so that it's possible to make the syscall without being killed. i don't even appear to have filed a bug myself to add this...",True,{}
landley/toybox,https://github.com/landley/toybox,326,2022-03-16T02:54:01Z,2022-03-18T01:27:17Z,2022-03-18T01:27:17Z,CLOSED,False,12,7,2,https://github.com/LongPingWEI,Enable copy_file_range when it is available.,1,[],https://github.com/landley/toybox/pull/326,https://github.com/landley,5,https://github.com/landley/toybox/pull/326#issuecomment-1071515960,"Changes:

fix the mistake in scripts/genconfig.sh;
syscall(__NR_copy_file_range ...) is more suitable, as there is not a copy_file_range in bionic.
Even compiled with glibc, toybox cannot use copy_file_range easily, as we must define _GNU_SOURCE before include unistd.h first time.

Test:

dd if=/dev/urandom of=src.bin bs=4M count=1000
ln -s toyobox cp
./cp src.bin dst.bin
sha256sum src.bin dst.bin","I already applied it locally and I kept the syscall() because glibc requires you to #define GNU_GNU_ALL_HAIL_STALLMAN_FTAGHN to get the linux system call wrapper, which is silly. (I'd have poked you otherwise, but glibc was already broken. I made puppy eyes at Rich to add _ALL_SOURCE which just enables all the darn feature test macros, but glibc still wants to gate Linux system calls on The Hurd for some reason. Well, ok, we know the reason, it was https://sourceware.org/legacy-ml/libc-announce/2001/msg00000.html#:~:text=Stallman but it's still really stupid.)
But I haven't pushed the yet because torvalds/linux@f16acc9d9b376 from 2019 talks about adding ""basic sanity checks"", which seems to boil down to capping the length at INT_MAX-PAGE_SIZE. That's well within the 7 year horizon and since the code's already in the read/write loop handling length returns, I thought I'd do a follow-up commit capping len at 1<<30 or so per copy_file_range() call?",True,{}
landley/toybox,https://github.com/landley/toybox,326,2022-03-16T02:54:01Z,2022-03-18T01:27:17Z,2022-03-18T01:27:17Z,CLOSED,False,12,7,2,https://github.com/LongPingWEI,Enable copy_file_range when it is available.,1,[],https://github.com/landley/toybox/pull/326,https://github.com/landley,6,https://github.com/landley/toybox/pull/326#issuecomment-1071829789,"Changes:

fix the mistake in scripts/genconfig.sh;
syscall(__NR_copy_file_range ...) is more suitable, as there is not a copy_file_range in bionic.
Even compiled with glibc, toybox cannot use copy_file_range easily, as we must define _GNU_SOURCE before include unistd.h first time.

Test:

dd if=/dev/urandom of=src.bin bs=4M count=1000
ln -s toyobox cp
./cp src.bin dst.bin
sha256sum src.bin dst.bin",Try 9b36805.,True,{}
landley/toybox,https://github.com/landley/toybox,326,2022-03-16T02:54:01Z,2022-03-18T01:27:17Z,2022-03-18T01:27:17Z,CLOSED,False,12,7,2,https://github.com/LongPingWEI,Enable copy_file_range when it is available.,1,[],https://github.com/landley/toybox/pull/326,https://github.com/LongPingWEI,7,https://github.com/landley/toybox/pull/326#issuecomment-1071931873,"Changes:

fix the mistake in scripts/genconfig.sh;
syscall(__NR_copy_file_range ...) is more suitable, as there is not a copy_file_range in bionic.
Even compiled with glibc, toybox cannot use copy_file_range easily, as we must define _GNU_SOURCE before include unistd.h first time.

Test:

dd if=/dev/urandom of=src.bin bs=4M count=1000
ln -s toyobox cp
./cp src.bin dst.bin
sha256sum src.bin dst.bin","I already applied it locally and I kept the syscall() because glibc requires you to #define GNU_GNU_ALL_HAIL_STALLMAN_FTAGHN to get the linux system call wrapper, which is silly. (I'd have poked you otherwise, but glibc was already broken. I made puppy eyes at Rich to add _ALL_SOURCE which just enables all the darn feature test macros, but glibc still wants to gate Linux system calls on The Hurd for some reason. Well, ok, we know the reason, it was https://sourceware.org/legacy-ml/libc-announce/2001/msg00000.html#:~:text=Stallman but it's still really stupid.)
But I haven't pushed the yet because torvalds/linux@f16acc9d9b376 from 2019 talks about adding ""basic sanity checks"", which seems to boil down to capping the length at INT_MAX-PAGE_SIZE. That's well within the 7 year horizon and since the code's already in the read/write loop handling length returns, I thought I'd do a follow-up commit capping len at 1<<30 or so per copy_file_range() call?

Linux kernel will limit the max size to 0x7FFFF000 in vfs_copy_file_range.",True,{}
landley/toybox,https://github.com/landley/toybox,329,2022-03-23T13:43:27Z,2022-04-20T02:29:43Z,2022-04-20T02:29:43Z,CLOSED,False,6,2,1,https://github.com/LongPingWEI,Fix failures in tar.test,2,[],https://github.com/landley/toybox/pull/329,https://github.com/LongPingWEI,1,https://github.com/landley/toybox/pull/329,,,True,{}
landley/toybox,https://github.com/landley/toybox,329,2022-03-23T13:43:27Z,2022-04-20T02:29:43Z,2022-04-20T02:29:43Z,CLOSED,False,6,2,1,https://github.com/LongPingWEI,Fix failures in tar.test,2,[],https://github.com/landley/toybox/pull/329,https://github.com/LongPingWEI,2,https://github.com/landley/toybox/pull/329#issuecomment-1076393899,,Fix the two problems metioned by make tests fails after 4fca350fb34c31e681fd6750692d6089b9810c3d,True,{}
landley/toybox,https://github.com/landley/toybox,332,2022-04-08T12:53:30Z,,2022-04-15T02:52:01Z,OPEN,False,1,1,1,https://github.com/echelonxray,Adjusted the linker flags for kconfig mconf (menuconfig),1,[],https://github.com/landley/toybox/pull/332,https://github.com/echelonxray,1,https://github.com/landley/toybox/pull/332,"For some reason, this breaks on my Gentoo systems.  There,
libcurses does not contain nodelay, so the linking fails
with symbol resolution errors regarding the nodelay symbol.
I have added -ltinfo to fix this issue.
Signed-off-by: Michael T. Kloos michael@michaelkloos.com","For some reason, this breaks on my Gentoo systems.  There,
libcurses does not contain nodelay, so the linking fails
with symbol resolution errors regarding the nodelay symbol.
I have added -ltinfo to fix this issue.
Signed-off-by: Michael T. Kloos michael@michaelkloos.com",True,{}
landley/toybox,https://github.com/landley/toybox,332,2022-04-08T12:53:30Z,,2022-04-15T02:52:01Z,OPEN,False,1,1,1,https://github.com/echelonxray,Adjusted the linker flags for kconfig mconf (menuconfig),1,[],https://github.com/landley/toybox/pull/332,https://github.com/echelonxray,2,https://github.com/landley/toybox/pull/332#issuecomment-1093775604,"For some reason, this breaks on my Gentoo systems.  There,
libcurses does not contain nodelay, so the linking fails
with symbol resolution errors regarding the nodelay symbol.
I have added -ltinfo to fix this issue.
Signed-off-by: Michael T. Kloos michael@michaelkloos.com","Rob.  If you prefer, I can close this and ""git send-email"" this as a patch up to the mailing list.",True,{}
landley/toybox,https://github.com/landley/toybox,332,2022-04-08T12:53:30Z,,2022-04-15T02:52:01Z,OPEN,False,1,1,1,https://github.com/echelonxray,Adjusted the linker flags for kconfig mconf (menuconfig),1,[],https://github.com/landley/toybox/pull/332,https://github.com/landley,3,https://github.com/landley/toybox/pull/332#issuecomment-1094089263,"For some reason, this breaks on my Gentoo systems.  There,
libcurses does not contain nodelay, so the linking fails
with symbol resolution errors regarding the nodelay symbol.
I have added -ltinfo to fix this issue.
Signed-off-by: Michael T. Kloos michael@michaelkloos.com","That's not the hold up.
This kconfig fork is more than 10 years old, comes from the Linux kernel, and has built on every system I've ever thrown it at. Suddenly and uniquely, gentoo broke. Now you want to add an extra library which isn't probed: if that library isn't there on some system, the build will break.
I have a todo item to replace this subdir with a fresh implementation. If gentoo did uniquely break its curses implementation so that toybox stopped building on gentoo but still builds on every other Linux system, then the fix for gentoo is for toybox's build to stop using curses.",True,{}
landley/toybox,https://github.com/landley/toybox,332,2022-04-08T12:53:30Z,,2022-04-15T02:52:01Z,OPEN,False,1,1,1,https://github.com/echelonxray,Adjusted the linker flags for kconfig mconf (menuconfig),1,[],https://github.com/landley/toybox/pull/332,https://github.com/echelonxray,4,https://github.com/landley/toybox/pull/332#issuecomment-1094119640,"For some reason, this breaks on my Gentoo systems.  There,
libcurses does not contain nodelay, so the linking fails
with symbol resolution errors regarding the nodelay symbol.
I have added -ltinfo to fix this issue.
Signed-off-by: Michael T. Kloos michael@michaelkloos.com","I know that it comes from the Linux kernel and menuconfig works fine for me from a recent Linux kernel.  The recent Linux kernels are using ""pkg-config --libs ncursesw"" or ""pkg-config --libs ncurses"" to determine the libraries to link.  On my Gentoo system that resolves to ""-lncurses -ltinfo"".
I remember working with Toybox years before, but I can't recall if I was using Gentoo at the time.  It is possible it was broken in an update in the last few years.  I'll try to do some more digging into exactly what is up with curses.  I was able to find some threads on the subject from the Gentoo forums but they are almost 10 years old and reference USE Flags that no longer seem to exist.  Other distros seem to be symlinking libtinfo to libncurses.  This would seem to indicate that Gentoo is using a different build configuration for curses that splits it's libraries across these separate files.",True,{}
landley/toybox,https://github.com/landley/toybox,332,2022-04-08T12:53:30Z,,2022-04-15T02:52:01Z,OPEN,False,1,1,1,https://github.com/echelonxray,Adjusted the linker flags for kconfig mconf (menuconfig),1,[],https://github.com/landley/toybox/pull/332,https://github.com/echelonxray,5,https://github.com/landley/toybox/pull/332#issuecomment-1094135442,"For some reason, this breaks on my Gentoo systems.  There,
libcurses does not contain nodelay, so the linking fails
with symbol resolution errors regarding the nodelay symbol.
I have added -ltinfo to fix this issue.
Signed-off-by: Michael T. Kloos michael@michaelkloos.com","I agree that a new self-contained build system is needed.  After all, the one currently being used is GPLv2.  What is your vision for this new build system?  Did you intend to write something that mimics kbuild, something similar but more minimal, or something different.  I suppose it could be an interesting project.  I might consider starting work on something if you want.
In the meantime, I have force-pushed a change to my pull request to make the linking more dynamic using pkg-config.",True,{}
landley/toybox,https://github.com/landley/toybox,332,2022-04-08T12:53:30Z,,2022-04-15T02:52:01Z,OPEN,False,1,1,1,https://github.com/echelonxray,Adjusted the linker flags for kconfig mconf (menuconfig),1,[],https://github.com/landley/toybox/pull/332,https://github.com/landley,6,https://github.com/landley/toybox/pull/332#issuecomment-1094169542,"For some reason, this breaks on my Gentoo systems.  There,
libcurses does not contain nodelay, so the linking fails
with symbol resolution errors regarding the nodelay symbol.
I have added -ltinfo to fix this issue.
Signed-off-by: Michael T. Kloos michael@michaelkloos.com",So now it won't build on a system that hasn't got pkg-config installed. Which was not previous a dependency...,True,{}
landley/toybox,https://github.com/landley/toybox,332,2022-04-08T12:53:30Z,,2022-04-15T02:52:01Z,OPEN,False,1,1,1,https://github.com/echelonxray,Adjusted the linker flags for kconfig mconf (menuconfig),1,[],https://github.com/landley/toybox/pull/332,https://github.com/landley,7,https://github.com/landley/toybox/pull/332#issuecomment-1094169870,"For some reason, this breaks on my Gentoo systems.  There,
libcurses does not contain nodelay, so the linking fails
with symbol resolution errors regarding the nodelay symbol.
I have added -ltinfo to fix this issue.
Signed-off-by: Michael T. Kloos michael@michaelkloos.com","And my new kconfig should read the existing config syntax and do defconfig, allnoconfig (including KCONFIG_ALLCONFIG), allyesconfig, oldconfig, and menuconfig (which needs to show help, do forward slash searches...) It's maybe 2 weeks focus?",True,{}
landley/toybox,https://github.com/landley/toybox,332,2022-04-08T12:53:30Z,,2022-04-15T02:52:01Z,OPEN,False,1,1,1,https://github.com/echelonxray,Adjusted the linker flags for kconfig mconf (menuconfig),1,[],https://github.com/landley/toybox/pull/332,https://github.com/echelonxray,8,https://github.com/landley/toybox/pull/332#issuecomment-1094293831,"For some reason, this breaks on my Gentoo systems.  There,
libcurses does not contain nodelay, so the linking fails
with symbol resolution errors regarding the nodelay symbol.
I have added -ltinfo to fix this issue.
Signed-off-by: Michael T. Kloos michael@michaelkloos.com",I've started work on a Kconfig replacement.  I'd like to be able to use it in one of my projects as well.  I can't make any promises to when it will be complete though.,True,{}
landley/toybox,https://github.com/landley/toybox,336,2022-04-27T16:16:34Z,2022-04-28T05:52:59Z,2022-04-28T05:52:59Z,CLOSED,False,3,3,1,https://github.com/ek9852,brctl: Fix addif and defif,1,[],https://github.com/landley/toybox/pull/336,https://github.com/ek9852,1,https://github.com/landley/toybox/pull/336,"In br_addif and br_delif, the bridge
name is not passed to the ioctl.","In br_addif and br_delif, the bridge
name is not passed to the ioctl.",True,{}
landley/toybox,https://github.com/landley/toybox,336,2022-04-27T16:16:34Z,2022-04-28T05:52:59Z,2022-04-28T05:52:59Z,CLOSED,False,3,3,1,https://github.com/ek9852,brctl: Fix addif and defif,1,[],https://github.com/landley/toybox/pull/336,https://github.com/landley,2,https://github.com/landley/toybox/pull/336#issuecomment-1111775658,"In br_addif and br_delif, the bridge
name is not passed to the ioctl.",Commit 80206bb,True,{}
landley/toybox,https://github.com/landley/toybox,339,2022-05-03T16:31:18Z,2022-05-06T15:58:31Z,2022-05-06T15:58:31Z,CLOSED,False,0,0,0,https://github.com/jfgoog,Check return value of fscanf.,0,[],https://github.com/landley/toybox/pull/339,https://github.com/jfgoog,1,https://github.com/landley/toybox/pull/339,Eliminates an unused result warning when compiling with clang.,Eliminates an unused result warning when compiling with clang.,True,{}
landley/toybox,https://github.com/landley/toybox,339,2022-05-03T16:31:18Z,2022-05-06T15:58:31Z,2022-05-06T15:58:31Z,CLOSED,False,0,0,0,https://github.com/jfgoog,Check return value of fscanf.,0,[],https://github.com/landley/toybox/pull/339,https://github.com/landley,2,https://github.com/landley/toybox/pull/339#issuecomment-1118337207,Eliminates an unused result warning when compiling with clang.,"I'm not seeing this warning with android-ndk-r21d. Which version can I reproduce this with?
The logic here zeroes len and ll before each fscanf(), so if either isn't read they stay zero. The source of the data is a host toysh instance, and verifying that is the reason for the pid!=getpid() || ppid!=getppid() check above. If the data in the pipe is corrupted, error_exit() is probably the appropriate response, which is what happens for a short read() later in the loop: if we don't get as many bytes of variable data as we expected, we abort the subshell, so that's where a short read gets checked.",True,{}
landley/toybox,https://github.com/landley/toybox,339,2022-05-03T16:31:18Z,2022-05-06T15:58:31Z,2022-05-06T15:58:31Z,CLOSED,False,0,0,0,https://github.com/jfgoog,Check return value of fscanf.,0,[],https://github.com/landley/toybox/pull/339,https://github.com/jfgoog,3,https://github.com/landley/toybox/pull/339#issuecomment-1118692184,Eliminates an unused result warning when compiling with clang.,"I got the error when doing an Android platform build of build-tools with sh enabled for toybox. I wasn't using the NDK.
I haven't been able to reproduce this in a clean checkout of toybox from GitHub, which surprises me. I thought it would be enough to add -Wunused-result to CFLAGS, since my /usr/include/stdio.h has the necessary annotation:
extern int fscanf (FILE *__restrict __stream,
                   const char *__restrict __format, ...) __wur;

FWIW, I agree with your reasoning that checking the return value isn't absolutely necessary. I'm much more puzzled that the compiler warning isn't much easier to trigger.
For the record, here's what I did:
mkdir build-tools && cd build-tools && repo init -u https://android.googlesource.com/platform/manifest -b build-tools && repo sync -c -j32
Everything CWD as the build-tools directory:

Edit external/toybox/.config-linux --> set CONFIG_SH=y
Edit external/toybox/Android.bp --> add ""toys/pending/sh.c"" to list of sources
Delete external/toybox/toys/net/httpd.c (this is not present in my internal checkout. not sure why)
external/toybox/post_update.sh external/toybox/
OUT_DIR=out prebuilts/build-tools/build-prebuilts.sh --skip-go --skip-soong-tests

Compile command is:
PWD=/proc/self/cwd prebuilts/clang/host/linux-x86/clang-r450784d/bin/clang -c  -Wa,--noexecstack -fPIC -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2 -fstack-protector -D__STDC_FORMAT_MACROS -D__STDC_CONSTANT_MACROS --gcc-toolchain=prebuilts/gcc/linux-x86/host/x86_64-linux-glibc2.17-4.8 -fstack-protector-strong -m64 --sysroot prebuilts/gcc/linux-x86/host/x86_64-linux-glibc2.17-4.8/sysroot -DANDROID -fmessage-length=0 -W -Wall -Wno-unused -Winit-self -Wpointer-arith -Wunreachable-code-loop-increment -no-canonical-prefixes -DNDEBUG -UDEBUG -fno-exceptions -Wno-multichar -O2 -g -fdebug-default-version=5 -fno-strict-aliasing -Werror=date-time -Werror=pragma-pack -Werror=pragma-pack-suspicious-include -Werror=string-plus-int -Werror=unreachable-code-loop-increment -D__compiler_offsetof=__builtin_offsetof -faddrsig -fcommon -Werror=int-conversion -fexperimental-new-pass-manager -Wno-reserved-id-macro -fcolor-diagnostics -Wno-sign-compare -Wno-defaulted-function-deleted -Wno-inconsistent-missing-override -Wno-c99-designator -Wno-gnu-designator -Wno-gnu-folding-constant -Wunguarded-availability -D__ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__ -ffp-contract=off -fdebug-prefix-map=/proc/self/cwd= -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang  -Wno-enum-compare -Wno-enum-compare-switch -Wno-null-pointer-arithmetic -Wno-null-dereference -Wno-pointer-compare -Wno-xor-used-as-pow -Wno-final-dtor-non-final-class -Wno-psabi -Wno-null-pointer-subtraction -Wno-string-concatenation  -target x86_64-linux-gnu -fPIE  -Iexternal/toybox/android/linux -Iexternal/toybox -Iexternal/boringssl/src/include -Iexternal/zlib -Os -Wall -Werror -Wno-char-subscripts -Wno-deprecated-declarations -Wno-missing-field-initializers -Wno-pointer-arith -Wno-sign-compare -Wno-string-plus-int -Wno-unused-parameter -Wno-unused-variable -funsigned-char -ffunction-sections -fdata-sections -fno-asynchronous-unwind-tables '-DTOYBOX_VENDOR=""-android""' -std=gnu99 -Isystem/core/include -Isystem/logging/liblog/include  -Werror=bool-operation -Werror=implicit-int-float-conversion -Werror=int-in-bool-context -Werror=int-to-pointer-cast -Werror=pointer-to-int-cast -Werror=string-compare -Werror=xor-used-as-pow -Wno-void-pointer-to-enum-cast -Wno-void-pointer-to-int-cast -Wno-pointer-to-int-cast -Werror=fortify-source -Werror=address-of-temporary -Werror=return-type -Wno-tautological-constant-compare -Wno-tautological-type-limit-compare -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-sizeof-array-div -Wno-tautological-overlap-compare -Wno-deprecated-copy -Wno-range-loop-construct -Wno-misleading-indentation -Wno-zero-as-null-pointer-constant -Wno-deprecated-anon-enum-enum-conversion -Wno-string-compare -Wno-pessimizing-move -Wno-non-c-typedef-for-linkage -Wno-align-mismatch -Wno-error=unused-but-set-variable -Wno-error=unused-but-set-parameter -Wno-unused-but-set-variable -Wno-unused-but-set-parameter -Wno-bitwise-instead-of-logical -MD -MF out/soong/.intermediates/external/toybox/toybox/linux_glibc_x86_64/obj/external/toybox/toys/pending/sh.o.d -o out/soong/.intermediates/external/toybox/toybox/linux_glibc_x86_64/obj/external/toybox/toys/pending/sh.o external/toybox/toys/pending/sh.c
Error message is:
external/toybox/toys/pending/sh.c:3836:5: error: ignoring return value of function declared with 'warn_unused_result' attribute [-Werror,-Wunused-result]
    fscanf(fp, ""%u %lu%*[^\n]"", &len, &ll);
    ^~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

(sh.c is slightly different upstream, but verified that the same error happens with the github version of sh.c)",True,{}
landley/toybox,https://github.com/landley/toybox,339,2022-05-03T16:31:18Z,2022-05-06T15:58:31Z,2022-05-06T15:58:31Z,CLOSED,False,0,0,0,https://github.com/jfgoog,Check return value of fscanf.,0,[],https://github.com/landley/toybox/pull/339,https://github.com/enh-google,4,https://github.com/landley/toybox/pull/339#issuecomment-1118712669,Eliminates an unused result warning when compiling with clang.,"it's not a clang vs gcc thing, it's because Android builds everything with -D_FORTIFY_SOURCE=2 which is the magic ingredient to enable the warn-unused-result stuff in glibc.
this should be sufficient to reproduce with gcc with toybox ToT:
export CFLAGS=""-Wunused-result -D_FORTIFY_SOURCE=2""

(interestingly i see that the (void)write(...) workaround in tar.c:831 -- which, judging by the fact we can build it, is sufficient for clang -- doesn't fool gcc. just because it's a zero-length write, i don't see any reason why that couldn't just have been an xwrite() anyway?)",True,{}
landley/toybox,https://github.com/landley/toybox,339,2022-05-03T16:31:18Z,2022-05-06T15:58:31Z,2022-05-06T15:58:31Z,CLOSED,False,0,0,0,https://github.com/jfgoog,Check return value of fscanf.,0,[],https://github.com/landley/toybox/pull/339,https://github.com/landley,5,https://github.com/landley/toybox/pull/339#issuecomment-1118742674,Eliminates an unused result warning when compiling with clang.,"The previous write to that fd was write() with perror_msg() but not perror_exit(), because failure to set selinux context is ""error message and eventual nonzero exit code"" but not ""abort archive extract immediately"".
It's possible the zero length write to reset context can never return an error so xwrite() would merely add NOP checking, but I don't know what the reset returns if the previous write had an error? If it repeats the error, xwrite() would abort the archive processing.",True,{}
landley/toybox,https://github.com/landley/toybox,339,2022-05-03T16:31:18Z,2022-05-06T15:58:31Z,2022-05-06T15:58:31Z,CLOSED,False,0,0,0,https://github.com/jfgoog,Check return value of fscanf.,0,[],https://github.com/landley/toybox/pull/339,https://github.com/landley,6,https://github.com/landley/toybox/pull/339#issuecomment-1118754078,Eliminates an unused result warning when compiling with clang.,"And it's not trying to ""fool"" gcc, the typecast is saying that we explicitly do not care about this return value. It wasn't overlooked, we explicitly made the decision not to check it because there's nothing useful to do with the information.",True,{}
landley/toybox,https://github.com/landley/toybox,339,2022-05-03T16:31:18Z,2022-05-06T15:58:31Z,2022-05-06T15:58:31Z,CLOSED,False,0,0,0,https://github.com/jfgoog,Check return value of fscanf.,0,[],https://github.com/landley/toybox/pull/339,https://github.com/enh-google,7,https://github.com/landley/toybox/pull/339#issuecomment-1118760359,Eliminates an unused result warning when compiling with clang.,"yeah, but you know my attitude is ""this can't fail ... so if this does fail that would be massively surprising, so xwrite() seems appropriate"". i'd much rather have a loud failure showing up in the crash collection infrastructure than just weird side-effects that no-one notices. (even/especially if it's a kernel bug --- there are few things harder to track down, and libc and toybox are exactly the places where we end up finding those bugs :-( )",True,{}
landley/toybox,https://github.com/landley/toybox,339,2022-05-03T16:31:18Z,2022-05-06T15:58:31Z,2022-05-06T15:58:31Z,CLOSED,False,0,0,0,https://github.com/jfgoog,Check return value of fscanf.,0,[],https://github.com/landley/toybox/pull/339,https://github.com/jfgoog,8,https://github.com/landley/toybox/pull/339#issuecomment-1119042728,Eliminates an unused result warning when compiling with clang.,"Confirmed that make CFLAGS='-Wunused-result -D_FORTIFY_SOURCE=2' triggers the warning:
toys/net/netstat.c:103:3: warning: ignoring return value of function declared with 'warn_unused_result' attribute [-Wunused-result]
  fgets(toybuf, sizeof(toybuf), fp);
  ^~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~
.toys/net/netstat.c:173:3: warning: ignoring return value of function declared with 'warn_unused_result' attribute [-Wunused-result]
  fgets(toybuf, sizeof(toybuf), fp);
  ^~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~
toys/net/netstat.c:254:3: warning: ignoring return value of function declared with 'warn_unused_result' attribute [-Wunused-result]
  fgets(toybuf, sizeof(toybuf), fp);
  ^~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~
3 warnings generated.
toys/other/watchdog.c:34:3: warning: ignoring return value of function declared with 'warn_unused_result' attribute [-Wunused-result]
  write(TT.fd, ""V"", 1);
  ^~~~~ ~~~~~~~~~~~~~
toys/other/watchdog.c:48:5: warning: ignoring return value of function declared with 'warn_unused_result' attribute [-Wunused-result]
    write(TT.fd, """", 1);
    ^~~~~ ~~~~~~~~~~~~
2 warnings generated.
toys/pending/sh.c:3841:5: warning: ignoring return value of function declared with 'warn_unused_result' attribute [-Wunused-result]
    fscanf(fp, ""%u %lu%*[^\n]"", &len, &ll);
    ^~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1 warning generated.

(My default compiler is clang, but make CC=gcc CFLAGS='-Wunused-result -D_FORTIFY_SOURCE=2' produces similar warnings.)",True,{}
landley/toybox,https://github.com/landley/toybox,340,2022-05-03T19:01:09Z,2022-05-07T06:22:18Z,2022-05-07T06:22:18Z,CLOSED,False,9,6,1,https://github.com/jfgoog,Fix segfault when trying to unset variable.,2,[],https://github.com/landley/toybox/pull/340,https://github.com/jfgoog,1,https://github.com/landley/toybox/pull/340,Test case: toybox bash -c 'unset FOO',Test case: toybox bash -c 'unset FOO',True,{}
landley/toybox,https://github.com/landley/toybox,340,2022-05-03T19:01:09Z,2022-05-07T06:22:18Z,2022-05-07T06:22:18Z,CLOSED,False,9,6,1,https://github.com/jfgoog,Fix segfault when trying to unset variable.,2,[],https://github.com/landley/toybox/pull/340,https://github.com/landley,2,https://github.com/landley/toybox/pull/340#issuecomment-1120144942,Test case: toybox bash -c 'unset FOO',Applied both.,True,{}
landley/toybox,https://github.com/landley/toybox,341,2022-05-03T21:19:40Z,,2022-05-09T16:07:18Z,OPEN,False,1,1,1,https://github.com/jfgoog,Fix incorrect pop at end of function.,1,[],https://github.com/landley/toybox/pull/341,https://github.com/jfgoog,1,https://github.com/landley/toybox/pull/341,,,True,{}
landley/toybox,https://github.com/landley/toybox,341,2022-05-03T21:19:40Z,,2022-05-09T16:07:18Z,OPEN,False,1,1,1,https://github.com/jfgoog,Fix incorrect pop at end of function.,1,[],https://github.com/landley/toybox/pull/341,https://github.com/landley,2,https://github.com/landley/toybox/pull/341#issuecomment-1120145369,,I'd like to add a test case demonstrating the failure this fixes. Do you have one handy?,True,{}
landley/toybox,https://github.com/landley/toybox,341,2022-05-03T21:19:40Z,,2022-05-09T16:07:18Z,OPEN,False,1,1,1,https://github.com/jfgoog,Fix incorrect pop at end of function.,1,[],https://github.com/landley/toybox/pull/341,https://github.com/jfgoog,3,https://github.com/landley/toybox/pull/341#issuecomment-1120196478,,"https://android.googlesource.com/platform/ndk/+/refs/heads/master/build/ndk-build
Conditional nested declaration of the log() function, around line 103.",True,{}
landley/toybox,https://github.com/landley/toybox,341,2022-05-03T21:19:40Z,,2022-05-09T16:07:18Z,OPEN,False,1,1,1,https://github.com/jfgoog,Fix incorrect pop at end of function.,1,[],https://github.com/landley/toybox/pull/341,https://github.com/enh-google,4,https://github.com/landley/toybox/pull/341#issuecomment-1121294695,,"https://android.googlesource.com/platform/ndk/+/refs/heads/master/build/ndk-build
Conditional nested declaration of the log() function, around line 103.

gittiles (and internal cs/) tip you might not have come across: if you click on the line number, it'll give you a link to that line, such as https://android.googlesource.com/platform/ndk/+/refs/heads/master/build/ndk-build#103",True,{}
landley/toybox,https://github.com/landley/toybox,342,2022-05-07T11:48:46Z,,2022-05-07T11:48:46Z,OPEN,False,82,26,2,https://github.com/jfgoog,Diff line format options.,1,[],https://github.com/landley/toybox/pull/342,https://github.com/jfgoog,1,https://github.com/landley/toybox/pull/342,"--unchanged-line-format
--old-line-format
--new-line-format
We want to use Toybox to make AOSP builds closer to hermetic, and these
flags are used here:
https://android.googlesource.com/platform/build/+/refs/tags/android-wear-9.0.0_r20/target/product/vndk/Android.mk","--unchanged-line-format
--old-line-format
--new-line-format
We want to use Toybox to make AOSP builds closer to hermetic, and these
flags are used here:
https://android.googlesource.com/platform/build/+/refs/tags/android-wear-9.0.0_r20/target/product/vndk/Android.mk",True,{}
landley/toybox,https://github.com/landley/toybox,344,2022-05-17T23:30:18Z,2022-05-18T16:51:15Z,2022-05-18T17:11:15Z,CLOSED,False,41,8,2,https://github.com/jfgoog,Handle diffing FIFOs.,2,[],https://github.com/landley/toybox/pull/344,https://github.com/jfgoog,1,https://github.com/landley/toybox/pull/344,"Also exit immediately if a seek fails.
In addition to the supplied test, also tested manually with:
./toybox diff <(echo -e ""1\n2"") <(echo -e ""1\n3"")
However, the ""testing"" function in runtest.sh doesn't handle such
syntax.","Also exit immediately if a seek fails.
In addition to the supplied test, also tested manually with:
./toybox diff <(echo -e ""1\n2"") <(echo -e ""1\n3"")
However, the ""testing"" function in runtest.sh doesn't handle such
syntax.",True,{'THUMBS_UP': ['https://github.com/owl4ce']}
landley/toybox,https://github.com/landley/toybox,344,2022-05-17T23:30:18Z,2022-05-18T16:51:15Z,2022-05-18T17:11:15Z,CLOSED,False,41,8,2,https://github.com/jfgoog,Handle diffing FIFOs.,2,[],https://github.com/landley/toybox/pull/344,https://github.com/enh-google,2,https://github.com/landley/toybox/pull/344#issuecomment-1129430405,"Also exit immediately if a seek fails.
In addition to the supplied test, also tested manually with:
./toybox diff <(echo -e ""1\n2"") <(echo -e ""1\n3"")
However, the ""testing"" function in runtest.sh doesn't handle such
syntax.","Also exit immediately if a seek fails.
In addition to the supplied test, also tested manually with:
./toybox diff <(echo -e ""1\n2"") <(echo -e ""1\n3"")
However, the ""testing"" function in runtest.sh doesn't handle such syntax.

(which is probably a good thing for us, because iirc mksh doesn't support it anyway. iirc i had to rewrite some toybox tests to not use that.)",True,{}
landley/toybox,https://github.com/landley/toybox,344,2022-05-17T23:30:18Z,2022-05-18T16:51:15Z,2022-05-18T17:11:15Z,CLOSED,False,41,8,2,https://github.com/jfgoog,Handle diffing FIFOs.,2,[],https://github.com/landley/toybox/pull/344,https://github.com/jfgoog,3,https://github.com/landley/toybox/pull/344#issuecomment-1129474018,"Also exit immediately if a seek fails.
In addition to the supplied test, also tested manually with:
./toybox diff <(echo -e ""1\n2"") <(echo -e ""1\n3"")
However, the ""testing"" function in runtest.sh doesn't handle such
syntax.","For the record, here's where we are using the <() nonsense:
https://cs.android.com/android/platform/superproject/+/master:build/make/target/product/gsi/Android.mk;l=62?q=check-vndk-list-timestamp
Which reminds me....another thing I need to fix is to make --foo-line-format="""" work (i.e. distinguish between ""present, but empty string"" and ""not present""",True,{}
landley/toybox,https://github.com/landley/toybox,344,2022-05-17T23:30:18Z,2022-05-18T16:51:15Z,2022-05-18T17:11:15Z,CLOSED,False,41,8,2,https://github.com/jfgoog,Handle diffing FIFOs.,2,[],https://github.com/landley/toybox/pull/344,https://github.com/jfgoog,4,https://github.com/landley/toybox/pull/344#issuecomment-1130068733,"Also exit immediately if a seek fails.
In addition to the supplied test, also tested manually with:
./toybox diff <(echo -e ""1\n2"") <(echo -e ""1\n3"")
However, the ""testing"" function in runtest.sh doesn't handle such
syntax.",Fixed diff so that line formats can be empty.,True,{}
landley/toybox,https://github.com/landley/toybox,344,2022-05-17T23:30:18Z,2022-05-18T16:51:15Z,2022-05-18T17:11:15Z,CLOSED,False,41,8,2,https://github.com/jfgoog,Handle diffing FIFOs.,2,[],https://github.com/landley/toybox/pull/344,https://github.com/landley,5,https://github.com/landley/toybox/pull/344#issuecomment-1130252998,"Also exit immediately if a seek fails.
In addition to the supplied test, also tested manually with:
./toybox diff <(echo -e ""1\n2"") <(echo -e ""1\n3"")
However, the ""testing"" function in runtest.sh doesn't handle such
syntax.","I use diff <(thingy) <(thingy) all the time, diff NOT supporting that was one of the todo items for the command keeping it in pending...
And I'm actively working on getting toysh to run the test suite. Trying to close a couple other tabs first, but it's ""next release or maybe the one after"" territory...",True,{}
landley/toybox,https://github.com/landley/toybox,344,2022-05-17T23:30:18Z,2022-05-18T16:51:15Z,2022-05-18T17:11:15Z,CLOSED,False,41,8,2,https://github.com/jfgoog,Handle diffing FIFOs.,2,[],https://github.com/landley/toybox/pull/344,https://github.com/landley,6,https://github.com/landley/toybox/pull/344#issuecomment-1130253915,"Also exit immediately if a seek fails.
In addition to the supplied test, also tested manually with:
./toybox diff <(echo -e ""1\n2"") <(echo -e ""1\n3"")
However, the ""testing"" function in runtest.sh doesn't handle such
syntax.",Applied.,True,{}
landley/toybox,https://github.com/landley/toybox,344,2022-05-17T23:30:18Z,2022-05-18T16:51:15Z,2022-05-18T17:11:15Z,CLOSED,False,41,8,2,https://github.com/jfgoog,Handle diffing FIFOs.,2,[],https://github.com/landley/toybox/pull/344,https://github.com/landley,7,https://github.com/landley/toybox/pull/344#issuecomment-1130267387,"Also exit immediately if a seek fails.
In addition to the supplied test, also tested manually with:
./toybox diff <(echo -e ""1\n2"") <(echo -e ""1\n3"")
However, the ""testing"" function in runtest.sh doesn't handle such
syntax.","When a --flag is seen the bit in toys.optflags gets set, ala { if (FLAG(foo_line_format)) blah(); }, and also TT.foo_line_format would point to a """" string instead of being NULL when the =argument is supplied.
You can use ; in the optstring for the argument to be optional (in which case it can only be supplied as a --longopt=arg rather than --longopt arg).",True,{}
landley/toybox,https://github.com/landley/toybox,344,2022-05-17T23:30:18Z,2022-05-18T16:51:15Z,2022-05-18T17:11:15Z,CLOSED,False,41,8,2,https://github.com/jfgoog,Handle diffing FIFOs.,2,[],https://github.com/landley/toybox/pull/344,https://github.com/jfgoog,8,https://github.com/landley/toybox/pull/344#issuecomment-1130271470,"Also exit immediately if a seek fails.
In addition to the supplied test, also tested manually with:
./toybox diff <(echo -e ""1\n2"") <(echo -e ""1\n3"")
However, the ""testing"" function in runtest.sh doesn't handle such
syntax.","Yes, I added ; to the optstring in my second commit to this PR, which you merged.
I didn't check if (FLAG(foo_line_format)) though, because I think it's enough to check if the char ptr is null, and we're already doing that.",True,{}
landley/toybox,https://github.com/landley/toybox,345,2022-05-19T20:22:11Z,,2022-05-19T20:22:11Z,OPEN,False,2,2,1,https://github.com/firasuke,Fix typos,1,[],https://github.com/landley/toybox/pull/345,https://github.com/firasuke,1,https://github.com/landley/toybox/pull/345,,,True,{}
landley/toybox,https://github.com/landley/toybox,347,2022-05-23T16:21:47Z,,2022-05-23T16:21:47Z,OPEN,False,1,1,1,https://github.com/jfgoog,Use extglob rather than regex match operator.,1,[],https://github.com/landley/toybox/pull/347,https://github.com/jfgoog,1,https://github.com/landley/toybox/pull/347,"Not all shells support =~. Android, for example, uses mksh, which does
not.
Change is from suggestion at http://www.mirbsd.org/mksh-faq.htm#regex-comparison","Not all shells support =~. Android, for example, uses mksh, which does
not.
Change is from suggestion at http://www.mirbsd.org/mksh-faq.htm#regex-comparison",True,{}
landley/toybox,https://github.com/landley/toybox,348,2022-05-24T15:47:58Z,,2022-05-24T15:47:58Z,OPEN,False,5,2,1,https://github.com/jfgoog,Handle test.test being run as root.,1,[],https://github.com/landley/toybox/pull/348,https://github.com/jfgoog,1,https://github.com/landley/toybox/pull/348,"Root always has read and write access.
Tested with sudo make test_test","Root always has read and write access.
Tested with sudo make test_test",True,{}
landley/toybox,https://github.com/landley/toybox,349,2022-05-24T23:11:45Z,,2022-05-24T23:11:45Z,OPEN,False,2,2,1,https://github.com/jfgoog,Use $(id -u) instead of $UID to detect root.,1,[],https://github.com/landley/toybox/pull/349,https://github.com/jfgoog,1,https://github.com/landley/toybox/pull/349,We can't depend on a value being set for $UID.,We can't depend on a value being set for $UID.,True,{}
landley/toybox,https://github.com/landley/toybox,350,2022-06-01T16:58:48Z,,2022-06-01T19:05:09Z,OPEN,False,4,0,1,https://github.com/mahiuchun,Ignore text editor generated files.,1,[],https://github.com/landley/toybox/pull/350,https://github.com/mahiuchun,1,https://github.com/landley/toybox/pull/350,,,True,{}
landley/toybox,https://github.com/landley/toybox,350,2022-06-01T16:58:48Z,,2022-06-01T19:05:09Z,OPEN,False,4,0,1,https://github.com/mahiuchun,Ignore text editor generated files.,1,[],https://github.com/landley/toybox/pull/350,https://github.com/landley,2,https://github.com/landley/toybox/pull/350#issuecomment-1144007984,,I like to see those so I can delete them. (And my editor backups are .filename.sw?),True,{}
landley/toybox,https://github.com/landley/toybox,350,2022-06-01T16:58:48Z,,2022-06-01T19:05:09Z,OPEN,False,4,0,1,https://github.com/mahiuchun,Ignore text editor generated files.,1,[],https://github.com/landley/toybox/pull/350,https://github.com/mahiuchun,3,https://github.com/landley/toybox/pull/350#issuecomment-1144026290,,"For me it was emacs with *~ (by default, it remains after the editor is exited normally), then I saw such a section in linux's .gitignore. *.orig is actually for patch i guess.
If you don't like this then I could close it. I haven't seen any previous attempt for something like this.",True,{}
