hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,96,2016-03-03T22:47:03Z,2016-03-07T19:56:13Z,2016-03-07T19:56:19Z,MERGED,True,49,3,4,https://github.com/robert-ancell,Implement DEP-11 MediaBaseUrl support,1,[],https://github.com/hughsie/appstream-glib/pull/96,https://github.com/robert-ancell,1,https://github.com/hughsie/appstream-glib/pull/96,"This is in the DEP-11 spec:
https://www.freedesktop.org/software/appstream/docs/sect-AppStream-DEP11.html#spec-dep11-general
See #70","This is in the DEP-11 spec:
https://www.freedesktop.org/software/appstream/docs/sect-AppStream-DEP11.html#spec-dep11-general
See #70",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,96,2016-03-03T22:47:03Z,2016-03-07T19:56:13Z,2016-03-07T19:56:19Z,MERGED,True,49,3,4,https://github.com/robert-ancell,Implement DEP-11 MediaBaseUrl support,1,[],https://github.com/hughsie/appstream-glib/pull/96,https://github.com/robert-ancell,2,https://github.com/hughsie/appstream-glib/pull/96#issuecomment-193414323,"This is in the DEP-11 spec:
https://www.freedesktop.org/software/appstream/docs/sect-AppStream-DEP11.html#spec-dep11-general
See #70","(I don't have write access, so I can't merge this myself).",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,96,2016-03-03T22:47:03Z,2016-03-07T19:56:13Z,2016-03-07T19:56:19Z,MERGED,True,49,3,4,https://github.com/robert-ancell,Implement DEP-11 MediaBaseUrl support,1,[],https://github.com/hughsie/appstream-glib/pull/96,https://github.com/hughsie,3,https://github.com/hughsie/appstream-glib/pull/96#issuecomment-193422308,"This is in the DEP-11 spec:
https://www.freedesktop.org/software/appstream/docs/sect-AppStream-DEP11.html#spec-dep11-general
See #70",You do now :),True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,100,2016-04-29T04:04:47Z,2016-04-29T14:44:45Z,2016-04-29T14:44:45Z,CLOSED,False,109,14,4,https://github.com/ximion,yaml: Make icon parser spec compliant,1,[],https://github.com/hughsie/appstream-glib/pull/100,https://github.com/ximion,1,https://github.com/hughsie/appstream-glib/pull/100,"This should resolve #98 which became a pretty high-priority item now... It also, while we're at it, implements the full spec for DEP-11-YAML icons, you never know when we'll need it...
The code is basically copied from libappstream.
Btw, issue 100 for asglib! \o/","This should resolve #98 which became a pretty high-priority item now... It also, while we're at it, implements the full spec for DEP-11-YAML icons, you never know when we'll need it...
The code is basically copied from libappstream.
Btw, issue 100 for asglib! \o/",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,100,2016-04-29T04:04:47Z,2016-04-29T14:44:45Z,2016-04-29T14:44:45Z,CLOSED,False,109,14,4,https://github.com/ximion,yaml: Make icon parser spec compliant,1,[],https://github.com/hughsie/appstream-glib/pull/100,https://github.com/ximion,2,https://github.com/hughsie/appstream-glib/pull/100#issuecomment-215740852,"This should resolve #98 which became a pretty high-priority item now... It also, while we're at it, implements the full spec for DEP-11-YAML icons, you never know when we'll need it...
The code is basically copied from libappstream.
Btw, issue 100 for asglib! \o/",Pushed :-),True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,102,2016-05-02T13:48:54Z,2016-05-02T17:40:11Z,2016-05-02T17:40:19Z,MERGED,True,6,1,1,https://github.com/StefanBruens,Make archive creation deterministic,2,[],https://github.com/hughsie/appstream-glib/pull/102,https://github.com/StefanBruens,1,https://github.com/hughsie/appstream-glib/pull/102,This should address issue #101.,This should address issue #101.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,102,2016-05-02T13:48:54Z,2016-05-02T17:40:11Z,2016-05-02T17:40:19Z,MERGED,True,6,1,1,https://github.com/StefanBruens,Make archive creation deterministic,2,[],https://github.com/hughsie/appstream-glib/pull/102,https://github.com/ignatenkobrain,2,https://github.com/hughsie/appstream-glib/pull/102#issuecomment-216305921,This should address issue #101.,"@StefanBruens thanks, merged!",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,104,2016-05-04T19:18:13Z,2016-05-09T17:24:31Z,2016-05-10T02:04:28Z,MERGED,True,22,14,1,https://github.com/MingcongBai,README.md: add note for glob usage,2,[],https://github.com/hughsie/appstream-glib/pull/104,https://github.com/MingcongBai,1,https://github.com/hughsie/appstream-glib/pull/104,Adds more clarification for issue discussed as #103.,Adds more clarification for issue discussed as #103.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,104,2016-05-04T19:18:13Z,2016-05-09T17:24:31Z,2016-05-10T02:04:28Z,MERGED,True,22,14,1,https://github.com/MingcongBai,README.md: add note for glob usage,2,[],https://github.com/hughsie/appstream-glib/pull/104,https://github.com/MingcongBai,2,https://github.com/hughsie/appstream-glib/pull/104#issuecomment-217041201,Adds more clarification for issue discussed as #103.,"Done mate. I was having an study session earlier this afternoon, sorry about that :-)",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,104,2016-05-04T19:18:13Z,2016-05-09T17:24:31Z,2016-05-10T02:04:28Z,MERGED,True,22,14,1,https://github.com/MingcongBai,README.md: add note for glob usage,2,[],https://github.com/hughsie/appstream-glib/pull/104,https://github.com/MingcongBai,3,https://github.com/hughsie/appstream-glib/pull/104#issuecomment-218040704,Adds more clarification for issue discussed as #103.,Thanks.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,105,2016-05-06T12:08:44Z,2016-06-08T17:59:25Z,2016-06-08T17:59:25Z,CLOSED,False,2,0,2,https://github.com/decathorpe,"add missing ""elementary"" to list of project groups",2,[],https://github.com/hughsie/appstream-glib/pull/105,https://github.com/decathorpe,1,https://github.com/hughsie/appstream-glib/pull/105,"Most official elementary software sets the <project_group> tag content to ""elementary"", which is not a recognised project group. This renders nearly all their .appdata.xml files invalid when trying to validate them with appstream-util.
This change would include ""elementary"" in the list of recognised project groups (I guessed this has to be added to the  table at libappstream-glib/as-app.c:4750). The ""homepage"" URL used is ""http://elementary.io/"".
I assumed the list is intentionally alphabetically sorted, so I inserted the missing line according to that.","Most official elementary software sets the <project_group> tag content to ""elementary"", which is not a recognised project group. This renders nearly all their .appdata.xml files invalid when trying to validate them with appstream-util.
This change would include ""elementary"" in the list of recognised project groups (I guessed this has to be added to the  table at libappstream-glib/as-app.c:4750). The ""homepage"" URL used is ""http://elementary.io/"".
I assumed the list is intentionally alphabetically sorted, so I inserted the missing line according to that.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,105,2016-05-06T12:08:44Z,2016-06-08T17:59:25Z,2016-06-08T17:59:25Z,CLOSED,False,2,0,2,https://github.com/decathorpe,"add missing ""elementary"" to list of project groups",2,[],https://github.com/hughsie/appstream-glib/pull/105,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/105#issuecomment-217437989,"Most official elementary software sets the <project_group> tag content to ""elementary"", which is not a recognised project group. This renders nearly all their .appdata.xml files invalid when trying to validate them with appstream-util.
This change would include ""elementary"" in the list of recognised project groups (I guessed this has to be added to the  table at libappstream-glib/as-app.c:4750). The ""homepage"" URL used is ""http://elementary.io/"".
I assumed the list is intentionally alphabetically sorted, so I inserted the missing line according to that.","Whist valid, I think you also need to add the id to libappstream-glib/as-environment-ids.txt as well.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,105,2016-05-06T12:08:44Z,2016-06-08T17:59:25Z,2016-06-08T17:59:25Z,CLOSED,False,2,0,2,https://github.com/decathorpe,"add missing ""elementary"" to list of project groups",2,[],https://github.com/hughsie/appstream-glib/pull/105,https://github.com/decathorpe,3,https://github.com/hughsie/appstream-glib/pull/105#issuecomment-217447392,"Most official elementary software sets the <project_group> tag content to ""elementary"", which is not a recognised project group. This renders nearly all their .appdata.xml files invalid when trying to validate them with appstream-util.
This change would include ""elementary"" in the list of recognised project groups (I guessed this has to be added to the  table at libappstream-glib/as-app.c:4750). The ""homepage"" URL used is ""http://elementary.io/"".
I assumed the list is intentionally alphabetically sorted, so I inserted the missing line according to that.","Oops, I missed that one.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,105,2016-05-06T12:08:44Z,2016-06-08T17:59:25Z,2016-06-08T17:59:25Z,CLOSED,False,2,0,2,https://github.com/decathorpe,"add missing ""elementary"" to list of project groups",2,[],https://github.com/hughsie/appstream-glib/pull/105,https://github.com/hughsie,4,https://github.com/hughsie/appstream-glib/pull/105#issuecomment-224675854,"Most official elementary software sets the <project_group> tag content to ""elementary"", which is not a recognised project group. This renders nearly all their .appdata.xml files invalid when trying to validate them with appstream-util.
This change would include ""elementary"" in the list of recognised project groups (I guessed this has to be added to the  table at libappstream-glib/as-app.c:4750). The ""homepage"" URL used is ""http://elementary.io/"".
I assumed the list is intentionally alphabetically sorted, so I inserted the missing line according to that.",I've rebased and pushed this. Thanks!,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,106,2016-05-13T11:39:12Z,2016-05-13T13:08:38Z,2016-05-13T13:12:48Z,MERGED,True,18,16,1,https://github.com/DimStar77,Addons can have duplcate names,1,[],https://github.com/hughsie/appstream-glib/pull/106,https://github.com/DimStar77,1,https://github.com/hughsie/appstream-glib/pull/106,"It's not uncommon for addons to be called after the functionality they
provide to the application they extend (e.g. ""Spell checker"").","It's not uncommon for addons to be called after the functionality they
provide to the application they extend (e.g. ""Spell checker"").",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,107,2016-05-13T12:24:19Z,2016-05-13T13:08:56Z,2016-05-13T13:12:41Z,MERGED,True,2,1,1,https://github.com/DimStar77,Show the app name when complaining about missing description in the m…,1,[],https://github.com/hughsie/appstream-glib/pull/107,https://github.com/DimStar77,1,https://github.com/hughsie/appstream-glib/pull/107,"…etadata
This just helps when debugging why some appstream does not validate","…etadata
This just helps when debugging why some appstream does not validate",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,108,2016-05-19T12:28:18Z,2016-05-23T11:43:29Z,2016-05-23T11:43:29Z,MERGED,True,9,0,1,https://github.com/DimStar77,Add yast2-branding-openSUSE if an app depends on yast2,1,[],https://github.com/hughsie/appstream-glib/pull/108,https://github.com/DimStar77,1,https://github.com/hughsie/appstream-glib/pull/108,"Applications depending on yast2 have an implicit dependency
on yast2-branding-openSUSE, which brings required icons in this case.","Applications depending on yast2 have an implicit dependency
on yast2-branding-openSUSE, which brings required icons in this case.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,109,2016-05-26T08:27:47Z,2016-05-31T18:58:48Z,2016-07-21T07:46:09Z,MERGED,True,7,1,1,https://github.com/kalev,Fix g_ptr_array_sort use,1,[],https://github.com/hughsie/appstream-glib/pull/109,https://github.com/kalev,1,https://github.com/hughsie/appstream-glib/pull/109,"Looks like the current code used g_ptr_array_sort() incorrectly; fix untested. Noticed because gcc complained:
asb-utils.c: In function ‘asb_utils_write_archive_dir’:
asb-utils.c:538:27: warning: passing argument 2 of ‘g_ptr_array_sort’ from incompatible pointer type [-Wincompatible-pointer-types]
g_ptr_array_sort (files, g_strcmp0);
^~~~~~~~~
In file included from /usr/include/glib-2.0/glib.h:31:0,
from /usr/include/glib-2.0/glib/gprintf.h:21,
from /usr/include/glib-2.0/glib/gstdio.h:23,
from asb-utils.c:30:
/usr/include/glib-2.0/glib/garray.h:175:12: note: expected ‘GCompareFunc {aka int ()(const void *, const void *)}’ but argument is of type ‘int ()(const char *, const char *)’
void       g_ptr_array_sort               (GPtrArray        *array,
^~~~~~~~~~~~~~~~","Looks like the current code used g_ptr_array_sort() incorrectly; fix untested. Noticed because gcc complained:
asb-utils.c: In function ‘asb_utils_write_archive_dir’:
asb-utils.c:538:27: warning: passing argument 2 of ‘g_ptr_array_sort’ from incompatible pointer type [-Wincompatible-pointer-types]
g_ptr_array_sort (files, g_strcmp0);
^~~~~~~~~
In file included from /usr/include/glib-2.0/glib.h:31:0,
from /usr/include/glib-2.0/glib/gprintf.h:21,
from /usr/include/glib-2.0/glib/gstdio.h:23,
from asb-utils.c:30:
/usr/include/glib-2.0/glib/garray.h:175:12: note: expected ‘GCompareFunc {aka int ()(const void *, const void *)}’ but argument is of type ‘int ()(const char *, const char *)’
void       g_ptr_array_sort               (GPtrArray        *array,
^~~~~~~~~~~~~~~~",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,109,2016-05-26T08:27:47Z,2016-05-31T18:58:48Z,2016-07-21T07:46:09Z,MERGED,True,7,1,1,https://github.com/kalev,Fix g_ptr_array_sort use,1,[],https://github.com/hughsie/appstream-glib/pull/109,https://github.com/kalev,2,https://github.com/hughsie/appstream-glib/pull/109#issuecomment-221809926,"Looks like the current code used g_ptr_array_sort() incorrectly; fix untested. Noticed because gcc complained:
asb-utils.c: In function ‘asb_utils_write_archive_dir’:
asb-utils.c:538:27: warning: passing argument 2 of ‘g_ptr_array_sort’ from incompatible pointer type [-Wincompatible-pointer-types]
g_ptr_array_sort (files, g_strcmp0);
^~~~~~~~~
In file included from /usr/include/glib-2.0/glib.h:31:0,
from /usr/include/glib-2.0/glib/gprintf.h:21,
from /usr/include/glib-2.0/glib/gstdio.h:23,
from asb-utils.c:30:
/usr/include/glib-2.0/glib/garray.h:175:12: note: expected ‘GCompareFunc {aka int ()(const void *, const void *)}’ but argument is of type ‘int ()(const char *, const char *)’
void       g_ptr_array_sort               (GPtrArray        *array,
^~~~~~~~~~~~~~~~",@StefanBruens Does this look right?,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,109,2016-05-26T08:27:47Z,2016-05-31T18:58:48Z,2016-07-21T07:46:09Z,MERGED,True,7,1,1,https://github.com/kalev,Fix g_ptr_array_sort use,1,[],https://github.com/hughsie/appstream-glib/pull/109,https://github.com/ignatenkobrain,3,https://github.com/hughsie/appstream-glib/pull/109#issuecomment-221812049,"Looks like the current code used g_ptr_array_sort() incorrectly; fix untested. Noticed because gcc complained:
asb-utils.c: In function ‘asb_utils_write_archive_dir’:
asb-utils.c:538:27: warning: passing argument 2 of ‘g_ptr_array_sort’ from incompatible pointer type [-Wincompatible-pointer-types]
g_ptr_array_sort (files, g_strcmp0);
^~~~~~~~~
In file included from /usr/include/glib-2.0/glib.h:31:0,
from /usr/include/glib-2.0/glib/gprintf.h:21,
from /usr/include/glib-2.0/glib/gstdio.h:23,
from asb-utils.c:30:
/usr/include/glib-2.0/glib/garray.h:175:12: note: expected ‘GCompareFunc {aka int ()(const void *, const void *)}’ but argument is of type ‘int ()(const char *, const char *)’
void       g_ptr_array_sort               (GPtrArray        *array,
^~~~~~~~~~~~~~~~",Isn't it just enough to add(GCompareFunc) for g_strcmp0?,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,109,2016-05-26T08:27:47Z,2016-05-31T18:58:48Z,2016-07-21T07:46:09Z,MERGED,True,7,1,1,https://github.com/kalev,Fix g_ptr_array_sort use,1,[],https://github.com/hughsie/appstream-glib/pull/109,https://github.com/kalev,4,https://github.com/hughsie/appstream-glib/pull/109#issuecomment-221816652,"Looks like the current code used g_ptr_array_sort() incorrectly; fix untested. Noticed because gcc complained:
asb-utils.c: In function ‘asb_utils_write_archive_dir’:
asb-utils.c:538:27: warning: passing argument 2 of ‘g_ptr_array_sort’ from incompatible pointer type [-Wincompatible-pointer-types]
g_ptr_array_sort (files, g_strcmp0);
^~~~~~~~~
In file included from /usr/include/glib-2.0/glib.h:31:0,
from /usr/include/glib-2.0/glib/gprintf.h:21,
from /usr/include/glib-2.0/glib/gstdio.h:23,
from asb-utils.c:30:
/usr/include/glib-2.0/glib/garray.h:175:12: note: expected ‘GCompareFunc {aka int ()(const void *, const void *)}’ but argument is of type ‘int ()(const char *, const char *)’
void       g_ptr_array_sort               (GPtrArray        *array,
^~~~~~~~~~~~~~~~","No, I don't think so: the pointers passed in to the comparison function have a layer of indirection and we need to dereference them before passing them to strcmp.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,109,2016-05-26T08:27:47Z,2016-05-31T18:58:48Z,2016-07-21T07:46:09Z,MERGED,True,7,1,1,https://github.com/kalev,Fix g_ptr_array_sort use,1,[],https://github.com/hughsie/appstream-glib/pull/109,https://github.com/StefanBruens,5,https://github.com/hughsie/appstream-glib/pull/109#issuecomment-221911512,"Looks like the current code used g_ptr_array_sort() incorrectly; fix untested. Noticed because gcc complained:
asb-utils.c: In function ‘asb_utils_write_archive_dir’:
asb-utils.c:538:27: warning: passing argument 2 of ‘g_ptr_array_sort’ from incompatible pointer type [-Wincompatible-pointer-types]
g_ptr_array_sort (files, g_strcmp0);
^~~~~~~~~
In file included from /usr/include/glib-2.0/glib.h:31:0,
from /usr/include/glib-2.0/glib/gprintf.h:21,
from /usr/include/glib-2.0/glib/gstdio.h:23,
from asb-utils.c:30:
/usr/include/glib-2.0/glib/garray.h:175:12: note: expected ‘GCompareFunc {aka int ()(const void *, const void *)}’ but argument is of type ‘int ()(const char *, const char *)’
void       g_ptr_array_sort               (GPtrArray        *array,
^~~~~~~~~~~~~~~~","The fix is essentially correct, although I think it is nicer to do the casting inside the wrapper function. Taken from ""man qsort"":
       static int
       cmpstringp(const void *p1, const void *p2)
       {
           /* The actual arguments to this function are ""pointers to
              pointers to char"", but strcmp(3) arguments are ""pointers
              to char"", hence the following cast plus dereference */

           return strcmp(* (char * const *) p1, * (char * const *) p2);
       }",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,111,2016-06-07T12:03:31Z,2016-07-14T12:05:30Z,2016-07-14T16:19:53Z,CLOSED,False,331,0,2,https://github.com/samdroid-apps,Add ASB Extractor Plugin for Sugar Activities,4,[],https://github.com/hughsie/appstream-glib/pull/111,https://github.com/samdroid-apps,1,https://github.com/hughsie/appstream-glib/pull/111,"Sugar Activities are a unique type of application desinged for Sugar.
Originally, they did not run outside of the Sugar DE.  However, they
now do and we will being shipping .desktop files for them [1].
We don't ship app data files.  It is much eaiser to just write a plugin
for ASB than write an app data file for every activity.  Having a
ASB plugin is also beneficial for us as it allows us to tag clearly
all Sugar Activities as being Sugar Activities.  This would allow us
to use App Stream as a basis for a Sugar Activity store and updater.
Additioanlly, it allows GNOME Software to have richer metadata when
accessing the Sugar Activities.  Sugar Activities already have
summaries, translations and icons, which are beneficial for
GNOME Software.
[1]  sugarlabs/sugar-toolkit-gtk3#321","Sugar Activities are a unique type of application desinged for Sugar.
Originally, they did not run outside of the Sugar DE.  However, they
now do and we will being shipping .desktop files for them [1].
We don't ship app data files.  It is much eaiser to just write a plugin
for ASB than write an app data file for every activity.  Having a
ASB plugin is also beneficial for us as it allows us to tag clearly
all Sugar Activities as being Sugar Activities.  This would allow us
to use App Stream as a basis for a Sugar Activity store and updater.
Additioanlly, it allows GNOME Software to have richer metadata when
accessing the Sugar Activities.  Sugar Activities already have
summaries, translations and icons, which are beneficial for
GNOME Software.
[1]  sugarlabs/sugar-toolkit-gtk3#321",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,111,2016-06-07T12:03:31Z,2016-07-14T12:05:30Z,2016-07-14T16:19:53Z,CLOSED,False,331,0,2,https://github.com/samdroid-apps,Add ASB Extractor Plugin for Sugar Activities,4,[],https://github.com/hughsie/appstream-glib/pull/111,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/111#issuecomment-224839246,"Sugar Activities are a unique type of application desinged for Sugar.
Originally, they did not run outside of the Sugar DE.  However, they
now do and we will being shipping .desktop files for them [1].
We don't ship app data files.  It is much eaiser to just write a plugin
for ASB than write an app data file for every activity.  Having a
ASB plugin is also beneficial for us as it allows us to tag clearly
all Sugar Activities as being Sugar Activities.  This would allow us
to use App Stream as a basis for a Sugar Activity store and updater.
Additioanlly, it allows GNOME Software to have richer metadata when
accessing the Sugar Activities.  Sugar Activities already have
summaries, translations and icons, which are beneficial for
GNOME Software.
[1]  sugarlabs/sugar-toolkit-gtk3#321","So, going back a bit; what's the aim of this PR? I thought it was to allow not-yet-installed sugar apps to appear in gnome-software?",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,111,2016-06-07T12:03:31Z,2016-07-14T12:05:30Z,2016-07-14T16:19:53Z,CLOSED,False,331,0,2,https://github.com/samdroid-apps,Add ASB Extractor Plugin for Sugar Activities,4,[],https://github.com/hughsie/appstream-glib/pull/111,https://github.com/samdroid-apps,3,https://github.com/hughsie/appstream-glib/pull/111#issuecomment-225046062,"Sugar Activities are a unique type of application desinged for Sugar.
Originally, they did not run outside of the Sugar DE.  However, they
now do and we will being shipping .desktop files for them [1].
We don't ship app data files.  It is much eaiser to just write a plugin
for ASB than write an app data file for every activity.  Having a
ASB plugin is also beneficial for us as it allows us to tag clearly
all Sugar Activities as being Sugar Activities.  This would allow us
to use App Stream as a basis for a Sugar Activity store and updater.
Additioanlly, it allows GNOME Software to have richer metadata when
accessing the Sugar Activities.  Sugar Activities already have
summaries, translations and icons, which are beneficial for
GNOME Software.
[1]  sugarlabs/sugar-toolkit-gtk3#321","2 motivations really;

Sugar is adding more support for running activities outside of sugar.  Therefore,  it would also be advantageous to have sugar activities display correctly in GNOME software.
Sugar's currently uses the windows software distribution model.  That is, people go to activities.sugarlabs.org (an ancient AMO fork - looking yuck now), and download and run bundles off the internet.  Yuck.  Wouldn't it be better to just use appstream/packagekit and have it go through distro repositories.  We would want a little more metadata to have it best integrated with sugar (aka, svg icons, a ""ModernCollaberation"" flag for activities that support modern, no-telepathy-tubes collaboration, etc.).

Anyway, I can open a thread on the ML if you prefer.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,111,2016-06-07T12:03:31Z,2016-07-14T12:05:30Z,2016-07-14T16:19:53Z,CLOSED,False,331,0,2,https://github.com/samdroid-apps,Add ASB Extractor Plugin for Sugar Activities,4,[],https://github.com/hughsie/appstream-glib/pull/111,https://github.com/hughsie,4,https://github.com/hughsie/appstream-glib/pull/111#issuecomment-225558101,"Sugar Activities are a unique type of application desinged for Sugar.
Originally, they did not run outside of the Sugar DE.  However, they
now do and we will being shipping .desktop files for them [1].
We don't ship app data files.  It is much eaiser to just write a plugin
for ASB than write an app data file for every activity.  Having a
ASB plugin is also beneficial for us as it allows us to tag clearly
all Sugar Activities as being Sugar Activities.  This would allow us
to use App Stream as a basis for a Sugar Activity store and updater.
Additioanlly, it allows GNOME Software to have richer metadata when
accessing the Sugar Activities.  Sugar Activities already have
summaries, translations and icons, which are beneficial for
GNOME Software.
[1]  sugarlabs/sugar-toolkit-gtk3#321","Thinking about this some more, @ximion is right; I think we do need AppData files upstream for this to work correctly; there is just not enough metadata in the existing sugar files. I think we could work on the spec enhancements required for shipping scalable icons, but I think sugar apps shipped by the distribution really need the extra metadata too. I know this isn't a small amount of work.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,111,2016-06-07T12:03:31Z,2016-07-14T12:05:30Z,2016-07-14T16:19:53Z,CLOSED,False,331,0,2,https://github.com/samdroid-apps,Add ASB Extractor Plugin for Sugar Activities,4,[],https://github.com/hughsie/appstream-glib/pull/111,https://github.com/samdroid-apps,5,https://github.com/hughsie/appstream-glib/pull/111#issuecomment-232646740,"Sugar Activities are a unique type of application desinged for Sugar.
Originally, they did not run outside of the Sugar DE.  However, they
now do and we will being shipping .desktop files for them [1].
We don't ship app data files.  It is much eaiser to just write a plugin
for ASB than write an app data file for every activity.  Having a
ASB plugin is also beneficial for us as it allows us to tag clearly
all Sugar Activities as being Sugar Activities.  This would allow us
to use App Stream as a basis for a Sugar Activity store and updater.
Additioanlly, it allows GNOME Software to have richer metadata when
accessing the Sugar Activities.  Sugar Activities already have
summaries, translations and icons, which are beneficial for
GNOME Software.
[1]  sugarlabs/sugar-toolkit-gtk3#321","Awesome.  I'll start some mailing list threads about these issues.
Replaced by sugarlabs/sugar-toolkit-gtk3#331 on the sugar side (which just generates the appdata.xml files).",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,111,2016-06-07T12:03:31Z,2016-07-14T12:05:30Z,2016-07-14T16:19:53Z,CLOSED,False,331,0,2,https://github.com/samdroid-apps,Add ASB Extractor Plugin for Sugar Activities,4,[],https://github.com/hughsie/appstream-glib/pull/111,https://github.com/ximion,6,https://github.com/hughsie/appstream-glib/pull/111#issuecomment-232715604,"Sugar Activities are a unique type of application desinged for Sugar.
Originally, they did not run outside of the Sugar DE.  However, they
now do and we will being shipping .desktop files for them [1].
We don't ship app data files.  It is much eaiser to just write a plugin
for ASB than write an app data file for every activity.  Having a
ASB plugin is also beneficial for us as it allows us to tag clearly
all Sugar Activities as being Sugar Activities.  This would allow us
to use App Stream as a basis for a Sugar Activity store and updater.
Additioanlly, it allows GNOME Software to have richer metadata when
accessing the Sugar Activities.  Sugar Activities already have
summaries, translations and icons, which are beneficial for
GNOME Software.
[1]  sugarlabs/sugar-toolkit-gtk3#321","Great, thank you!",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,112,2016-06-10T13:57:07Z,2017-08-08T07:56:10Z,2017-08-08T14:40:41Z,CLOSED,False,8,8,4,https://github.com/ximion,Metainfo preference changes,2,[],https://github.com/hughsie/appstream-glib/pull/112,https://github.com/ximion,1,https://github.com/hughsie/appstream-glib/pull/112,,,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,112,2016-06-10T13:57:07Z,2017-08-08T07:56:10Z,2017-08-08T14:40:41Z,CLOSED,False,8,8,4,https://github.com/ximion,Metainfo preference changes,2,[],https://github.com/hughsie/appstream-glib/pull/112,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/112#issuecomment-225189256,,We certainly want to fall back!,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,112,2016-06-10T13:57:07Z,2017-08-08T07:56:10Z,2017-08-08T14:40:41Z,CLOSED,False,8,8,4,https://github.com/ximion,Metainfo preference changes,2,[],https://github.com/hughsie/appstream-glib/pull/112,https://github.com/ximion,3,https://github.com/hughsie/appstream-glib/pull/112#issuecomment-225190130,,"I figured that ^^
I'll add it to my todo list, probably something to finish this evening.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,112,2016-06-10T13:57:07Z,2017-08-08T07:56:10Z,2017-08-08T14:40:41Z,CLOSED,False,8,8,4,https://github.com/ximion,Metainfo preference changes,2,[],https://github.com/hughsie/appstream-glib/pull/112,https://github.com/Conan-Kudo,4,https://github.com/hughsie/appstream-glib/pull/112#issuecomment-252121777,,"@hughsie @ximion If this is already done, shouldn't this PR be closed?",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,112,2016-06-10T13:57:07Z,2017-08-08T07:56:10Z,2017-08-08T14:40:41Z,CLOSED,False,8,8,4,https://github.com/ximion,Metainfo preference changes,2,[],https://github.com/hughsie/appstream-glib/pull/112,https://github.com/ximion,5,https://github.com/hughsie/appstream-glib/pull/112#issuecomment-252306409,,"It's only partially done, I kept it open so we don't forget about it.
(AFAIR the change to always install into metainfo dirs needs to happen, and adjusting the docs slightl, that's it. Also, I think it was blocked on RHEL not being up to date until recently).",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,112,2016-06-10T13:57:07Z,2017-08-08T07:56:10Z,2017-08-08T14:40:41Z,CLOSED,False,8,8,4,https://github.com/ximion,Metainfo preference changes,2,[],https://github.com/hughsie/appstream-glib/pull/112,https://github.com/jbicha,6,https://github.com/hughsie/appstream-glib/pull/112#issuecomment-320812943,,"Could we please update appdataxmldir now?
There is now a Debian warning with the lintian checker for the deprecated /usr/share/appdata/ directory.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,112,2016-06-10T13:57:07Z,2017-08-08T07:56:10Z,2017-08-08T14:40:41Z,CLOSED,False,8,8,4,https://github.com/ximion,Metainfo preference changes,2,[],https://github.com/hughsie/appstream-glib/pull/112,https://github.com/ximion,7,https://github.com/hughsie/appstream-glib/pull/112#issuecomment-320854806,,"This patch is a bit harsh by today's standards, back then I thought we could at least for Flatpak (since it was young) start with only one supported directory.
Now, that Flatpak is more widely used with the current configuration, we clearly shouldn't do that.
Switching appdataxmldir should be very painless though, and not cause any issues (the metainfo dir is supported for a long time already)",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,112,2016-06-10T13:57:07Z,2017-08-08T07:56:10Z,2017-08-08T14:40:41Z,CLOSED,False,8,8,4,https://github.com/ximion,Metainfo preference changes,2,[],https://github.com/hughsie/appstream-glib/pull/112,https://github.com/hughsie,8,https://github.com/hughsie/appstream-glib/pull/112#issuecomment-320880644,,"I've pulled in the first chunk of this manually in 9df56f2. I think we're good now, thanks.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,112,2016-06-10T13:57:07Z,2017-08-08T07:56:10Z,2017-08-08T14:40:41Z,CLOSED,False,8,8,4,https://github.com/ximion,Metainfo preference changes,2,[],https://github.com/hughsie/appstream-glib/pull/112,https://github.com/ximion,9,https://github.com/hughsie/appstream-glib/pull/112#issuecomment-320976951,,"Yes, looks good :-)
Thanks!",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,113,2016-06-13T19:28:53Z,2016-06-13T19:42:22Z,2016-06-13T19:42:22Z,MERGED,True,1,1,1,https://github.com/lantw44,Fix gtk-doc build when builddir != srcdir,1,[],https://github.com/hughsie/appstream-glib/pull/113,https://github.com/lantw44,1,https://github.com/hughsie/appstream-glib/pull/113,,,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,113,2016-06-13T19:28:53Z,2016-06-13T19:42:22Z,2016-06-13T19:42:22Z,MERGED,True,1,1,1,https://github.com/lantw44,Fix gtk-doc build when builddir != srcdir,1,[],https://github.com/hughsie/appstream-glib/pull/113,https://github.com/ignatenkobrain,2,https://github.com/hughsie/appstream-glib/pull/113#issuecomment-225683836,,LGTM,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,114,2016-06-30T09:47:24Z,2016-06-30T10:41:04Z,2018-06-21T23:14:44Z,MERGED,True,4,0,2,https://github.com/robert-ancell,Add an AS_STATE_PURCHASABLE constant so we can support purchasing apps,1,[],https://github.com/hughsie/appstream-glib/pull/114,https://github.com/robert-ancell,1,https://github.com/hughsie/appstream-glib/pull/114,I haven't completed the other side of this patch in GNOME Software but I'm pretty sure this state is the way to go. If you're in agreement it is useful to land this now so G-S etc can depend on a released version that contains the state.,I haven't completed the other side of this patch in GNOME Software but I'm pretty sure this state is the way to go. If you're in agreement it is useful to land this now so G-S etc can depend on a released version that contains the state.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,114,2016-06-30T09:47:24Z,2016-06-30T10:41:04Z,2018-06-21T23:14:44Z,MERGED,True,4,0,2,https://github.com/robert-ancell,Add an AS_STATE_PURCHASABLE constant so we can support purchasing apps,1,[],https://github.com/hughsie/appstream-glib/pull/114,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/114#issuecomment-229623798,I haven't completed the other side of this patch in GNOME Software but I'm pretty sure this state is the way to go. If you're in agreement it is useful to land this now so G-S etc can depend on a released version that contains the state.,LGTM.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,115,2016-07-05T03:16:33Z,2016-07-05T09:22:50Z,2018-06-21T23:14:45Z,MERGED,True,4,0,2,https://github.com/robert-ancell,Add an AS_STATE_PURCHASING constant,1,[],https://github.com/hughsie/appstream-glib/pull/115,https://github.com/robert-ancell,1,https://github.com/hughsie/appstream-glib/pull/115,,,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,115,2016-07-05T03:16:33Z,2016-07-05T09:22:50Z,2018-06-21T23:14:45Z,MERGED,True,4,0,2,https://github.com/robert-ancell,Add an AS_STATE_PURCHASING constant,1,[],https://github.com/hughsie/appstream-glib/pull/115,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/115#issuecomment-230404925,,Isn't this just INSTALLING?,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,115,2016-07-05T03:16:33Z,2016-07-05T09:22:50Z,2018-06-21T23:14:45Z,MERGED,True,4,0,2,https://github.com/robert-ancell,Add an AS_STATE_PURCHASING constant,1,[],https://github.com/hughsie/appstream-glib/pull/115,https://github.com/robert-ancell,3,https://github.com/hughsie/appstream-glib/pull/115#issuecomment-230421350,,"The state changes I was working on were:
PURCHASABLE -> PURCHASING -> AVAILABLE -> INSTALLING -> INSTALLED
In GNOME Software, I expect that a purchase dialog is shown during the PURCHASING state. I added this state because it's like installing in that it could take a long time (might have to go to some bank backend (sure, in theory it would be fast, but banks).
We could save on states by doing:
PURCHASABLE -> AVAILABLE -> INSTALLING -> INSTALLED
I guess it depends on what the states are for. For GNOME Software, both are workable. Without PURCHASING another part of the code would not know that a purchase transaction is in progress, which may or may not be important!? In GNOME Software the only case I can think of is the ""Buy"" wouldn't change once you clicked on it (to ""Buying"").",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,115,2016-07-05T03:16:33Z,2016-07-05T09:22:50Z,2018-06-21T23:14:45Z,MERGED,True,4,0,2,https://github.com/robert-ancell,Add an AS_STATE_PURCHASING constant,1,[],https://github.com/hughsie/appstream-glib/pull/115,https://github.com/hughsie,4,https://github.com/hughsie/appstream-glib/pull/115#issuecomment-230425744,,"It does seem a bit odd to make the user go through the two-step mental model of ""click buy"", ""click install"" -- I mean; if they purchased the app they probably wanted to install it. The fact they had to purchase the app is just a detail in the installation progress. I'd say these states are valid:
PURCHASABLE -> INSTALLING -> INSTALLED (payment successful, install successful)
PURCHASABLE -> INSTALLING -> PURCHASABLE (payment did not succeed)
PURCHASABLE -> INSTALLING -> UNKNOWN -> AVAILABLE (payment succeeded, install not so much -> angry user)",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,115,2016-07-05T03:16:33Z,2016-07-05T09:22:50Z,2018-06-21T23:14:45Z,MERGED,True,4,0,2,https://github.com/robert-ancell,Add an AS_STATE_PURCHASING constant,1,[],https://github.com/hughsie/appstream-glib/pull/115,https://github.com/robert-ancell,5,https://github.com/hughsie/appstream-glib/pull/115#issuecomment-230428685,,"In terms of the UI, I had G-S automatically do the install once it got to the AVAILABLE state so from the users point of view there's not two steps.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,115,2016-07-05T03:16:33Z,2016-07-05T09:22:50Z,2018-06-21T23:14:45Z,MERGED,True,4,0,2,https://github.com/robert-ancell,Add an AS_STATE_PURCHASING constant,1,[],https://github.com/hughsie/appstream-glib/pull/115,https://github.com/hughsie,6,https://github.com/hughsie/appstream-glib/pull/115#issuecomment-230429266,,I guess if it makes things easier; I suppose the UI code is easier this way too.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,116,2016-07-08T20:06:24Z,2016-07-08T20:12:36Z,2016-07-08T20:12:39Z,MERGED,True,1,1,1,https://github.com/StefanBruens,Correct disabling of timestamps for gzip,1,[],https://github.com/hughsie/appstream-glib/pull/116,https://github.com/StefanBruens,1,https://github.com/hughsie/appstream-glib/pull/116,"Correct module name is ""gzip"".","Correct module name is ""gzip"".",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,116,2016-07-08T20:06:24Z,2016-07-08T20:12:36Z,2016-07-08T20:12:39Z,MERGED,True,1,1,1,https://github.com/StefanBruens,Correct disabling of timestamps for gzip,1,[],https://github.com/hughsie/appstream-glib/pull/116,https://github.com/ignatenkobrain,2,https://github.com/hughsie/appstream-glib/pull/116#issuecomment-231460752,"Correct module name is ""gzip"".","Thanks, merged!",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,117,2016-07-09T01:22:28Z,2016-08-19T11:29:06Z,2016-08-19T11:29:06Z,CLOSED,False,100,0,3,https://github.com/cosimoc,AsApp: add API to control noshow project groups,1,[],https://github.com/hughsie/appstream-glib/pull/117,https://github.com/cosimoc,1,https://github.com/hughsie/appstream-glib/pull/117,"These map to the NotShowIn fields of desktop files, and can be used from
clients such as gnome-software to make decisions based on such
information.","These map to the NotShowIn fields of desktop files, and can be used from
clients such as gnome-software to make decisions based on such
information.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,117,2016-07-09T01:22:28Z,2016-08-19T11:29:06Z,2016-08-19T11:29:06Z,CLOSED,False,100,0,3,https://github.com/cosimoc,AsApp: add API to control noshow project groups,1,[],https://github.com/hughsie/appstream-glib/pull/117,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/117#issuecomment-231705363,"These map to the NotShowIn fields of desktop files, and can be used from
clients such as gnome-software to make decisions based on such
information.",@ximion are you interested in supporting this in the XML specification too?,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,117,2016-07-09T01:22:28Z,2016-08-19T11:29:06Z,2016-08-19T11:29:06Z,CLOSED,False,100,0,3,https://github.com/cosimoc,AsApp: add API to control noshow project groups,1,[],https://github.com/hughsie/appstream-glib/pull/117,https://github.com/ximion,3,https://github.com/hughsie/appstream-glib/pull/117#issuecomment-231786613,"These map to the NotShowIn fields of desktop files, and can be used from
clients such as gnome-software to make decisions based on such
information.","@hughsie So far we did not support this ""artificially hide stuff on desktop A, but show it on desktop B"" stuff on purpose.
Reason is that stuff that is that desktop-specific should not be shown in a software center at all, and should probably be tagged with a non-GUI-app component type (if it is that desktop-specific).
By allowing something like NotShowIn, we also effectively prohibit users from uninstalling stuff that they might want to remove on the system.
Furthermore, the semantics of this tag aren't really clear, e.g. when using the CLI client, we want to show all metadata, so naming stuff NotShowIn is really misleading (this could probably be fixed by having a differently-named tag).
Also, esp. for NotShowIn the thing breaks as soon as another desktop appears - OnlyShowIn is a bit better there...
So, in summary: I would like to have a solid use-case for supporting this (so some kind of bug where adding support for this is the only option to fix the issue), especially since so far we deliberately did not add such a feature.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,117,2016-07-09T01:22:28Z,2016-08-19T11:29:06Z,2016-08-19T11:29:06Z,CLOSED,False,100,0,3,https://github.com/cosimoc,AsApp: add API to control noshow project groups,1,[],https://github.com/hughsie/appstream-glib/pull/117,https://github.com/mcatanzaro,4,https://github.com/hughsie/appstream-glib/pull/117#issuecomment-231790656,"These map to the NotShowIn fields of desktop files, and can be used from
clients such as gnome-software to make decisions based on such
information.","The use case is we have Screen Reader (orca) and GNOME Color Manager appearing under the Installed tab in Software, but neither of these are applications in GNOME.

For the case of Orca, it's a system service in GNOME rather than an application. It doesn't show any desktop file, and you start it by flipping a switch in System Settings or from the a11y shell menu. But it really is an application that requires a desktop file in other desktops, as otherwise there'd be no way to start it.
For the case of GNOME Color Manager, it's a component of System Settings (gnome-control-center) in GNOME rather than an application, but it makes sense that it should be possible to run it in other desktops as a standalone application.

But I agree that we need to think about the implications of having apps that appear or disappear from Software depending on which desktop you are running. We probably don't want users switching from GNOME to KDE and uninstalling apps required by GNOME.
Edit: I deleted a comment about the effects of removing gnome-color-manager; I got it mixed up with network-manager-applet.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,117,2016-07-09T01:22:28Z,2016-08-19T11:29:06Z,2016-08-19T11:29:06Z,CLOSED,False,100,0,3,https://github.com/cosimoc,AsApp: add API to control noshow project groups,1,[],https://github.com/hughsie/appstream-glib/pull/117,https://github.com/cosimoc,5,https://github.com/hughsie/appstream-glib/pull/117#issuecomment-231795447,"These map to the NotShowIn fields of desktop files, and can be used from
clients such as gnome-software to make decisions based on such
information.",@ximion See https://bugzilla.gnome.org/show_bug.cgi?id=768601 for the gnome-software side of this. Note that I did not implement any policy at all in how appstream-glib makes use of this data -- it just exposes it to the upper layers so that clients such as gnome-software can have logic that makes a decision based on the data.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,117,2016-07-09T01:22:28Z,2016-08-19T11:29:06Z,2016-08-19T11:29:06Z,CLOSED,False,100,0,3,https://github.com/cosimoc,AsApp: add API to control noshow project groups,1,[],https://github.com/hughsie/appstream-glib/pull/117,https://github.com/matthiasclasen,6,https://github.com/hughsie/appstream-glib/pull/117#issuecomment-232232761,"These map to the NotShowIn fields of desktop files, and can be used from
clients such as gnome-software to make decisions based on such
information.","I've always considered NotShowIn/OnlyShowIn to be really terrible misfeatures of the desktop entry spec, for all the reasons ximion mentions.
Cases like ""I'm orca, I can't decide if I'm an app or not"" don't justify bringing this misfeature back, imo. Orca needs to be split into a service component that is an integral part of the desktop, and whatever is app-like in it (I don't see it) can live separately. Covering such application design issues up in the desktop file is a recipe for pain, as we've learned over many years.
At the end of the day, users have a surprisingly high tolerance to clutter (just look at peoples gnome2 desktops, with all the screen edges plastered with icons), and a much lower tolerance for hard-to-explain system behavior ('why is this app showing up when I run kde, but not in gnome. I know it is installed!')",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,117,2016-07-09T01:22:28Z,2016-08-19T11:29:06Z,2016-08-19T11:29:06Z,CLOSED,False,100,0,3,https://github.com/cosimoc,AsApp: add API to control noshow project groups,1,[],https://github.com/hughsie/appstream-glib/pull/117,https://github.com/ximion,7,https://github.com/hughsie/appstream-glib/pull/117#issuecomment-233160961,"These map to the NotShowIn fields of desktop files, and can be used from
clients such as gnome-software to make decisions based on such
information.","@mcatanzaro I agree with @matthiasclasen that the apps like Orca should not be shown if they are really a desktop-specific module. You could declare them to be an addon to gnome-systemsettings in AppStream, which would be accurate.
For the case when the application is runnable from other desktops, we should show it as separate app in software centers.
The thing is: I want AppStream to be a common way to assign metadata to any software component and retrieve it in a generic way. If I add logic to AppStream which sometimes shows apps depending on some conditions, this would work contrary to the project's goals.
The maximum thing I could think of adding is some kind of designed_for_desktop tag, but even for that I would be quite sceptical.
(For .desktop files, the logic does make some sense, for a metadata format with the aim to be descriptive and not control how something is (not) displayed or works, it doesn't)
That being said, since your patch doesn't touch AppStream itself at all, it would be okay with me if @hughsie added it - but it also wouldn't solve your problem at all. It would make the application disappear as soon as it is installed, but still have it shown before it is installed. Which is IMHO the worst possible way to handle things.
As for ""make the backend powerful and have the frontends decide what of the functionality they want to use"": I am all for that idea. But there are limits to it. For example, if the backend exposes functionality which encourages bad behavior at the frontend side, then it would be a really bad idea to add such functionality in the first place. That's the reason why @hughsie rejected adding functionality to export log output of package-managers via a PackageKit interface for ages, and subsequently, no (GUI) frontend ran into the trap of showing console output in its UI.
So, what to make out of it? I really don't want the OnlyShowIn/NotShowIn logic in AppStream, because I can only see this causing a lot more problems in future. But I also don't want to categorically reject it - if after some time we see that not having it creates really big problems which can not be solved by other means, I would obviously reconsider this (since that would show that not adding this feature in the past had been a mistake).
I am sorry I can't give a more positive reply to this - let's wait for time to prove the (non) necessity of this.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,117,2016-07-09T01:22:28Z,2016-08-19T11:29:06Z,2016-08-19T11:29:06Z,CLOSED,False,100,0,3,https://github.com/cosimoc,AsApp: add API to control noshow project groups,1,[],https://github.com/hughsie/appstream-glib/pull/117,https://github.com/mcatanzaro,8,https://github.com/hughsie/appstream-glib/pull/117#issuecomment-233992541,"These map to the NotShowIn fields of desktop files, and can be used from
clients such as gnome-software to make decisions based on such
information.","I think we just need to split the gnome-color-manager/orca desktop files into separate packages... or remove them entirely, as they're not needed for GNOME and these are GNOME packages. I got permission from Joanie to delete orca's desktop file. @hughsie, what do you think we should do with color manager?",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,117,2016-07-09T01:22:28Z,2016-08-19T11:29:06Z,2016-08-19T11:29:06Z,CLOSED,False,100,0,3,https://github.com/cosimoc,AsApp: add API to control noshow project groups,1,[],https://github.com/hughsie/appstream-glib/pull/117,https://github.com/hughsie,9,https://github.com/hughsie/appstream-glib/pull/117#issuecomment-233996016,"These map to the NotShowIn fields of desktop files, and can be used from
clients such as gnome-software to make decisions based on such
information.",@mcatanzaro I've already split up the gnome-color-manager upstream .spec file example (a new -utils subdirectory) -- I'll push that into F25 at some point this week.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,117,2016-07-09T01:22:28Z,2016-08-19T11:29:06Z,2016-08-19T11:29:06Z,CLOSED,False,100,0,3,https://github.com/cosimoc,AsApp: add API to control noshow project groups,1,[],https://github.com/hughsie/appstream-glib/pull/117,https://github.com/mcatanzaro,10,https://github.com/hughsie/appstream-glib/pull/117#issuecomment-234026172,"These map to the NotShowIn fields of desktop files, and can be used from
clients such as gnome-software to make decisions based on such
information.","@hughsie I think you need three subpackages; we shouldn't have multiple desktop files in the same package, since that means installing one app would unexpectedly pull in two others, right?",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,117,2016-07-09T01:22:28Z,2016-08-19T11:29:06Z,2016-08-19T11:29:06Z,CLOSED,False,100,0,3,https://github.com/cosimoc,AsApp: add API to control noshow project groups,1,[],https://github.com/hughsie/appstream-glib/pull/117,https://github.com/mcatanzaro,11,https://github.com/hughsie/appstream-glib/pull/117#issuecomment-234028077,"These map to the NotShowIn fields of desktop files, and can be used from
clients such as gnome-software to make decisions based on such
information.","@ximion I think we're going to drop this issue and fix apps instead. Does that sound OK, @cosimoc?
@hughsie is already handling gnome-color-manager. See https://bugzilla.gnome.org/show_bug.cgi?id=735761 for orca.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,117,2016-07-09T01:22:28Z,2016-08-19T11:29:06Z,2016-08-19T11:29:06Z,CLOSED,False,100,0,3,https://github.com/cosimoc,AsApp: add API to control noshow project groups,1,[],https://github.com/hughsie/appstream-glib/pull/117,https://github.com/cosimoc,12,https://github.com/hughsie/appstream-glib/pull/117#issuecomment-234028243,"These map to the NotShowIn fields of desktop files, and can be used from
clients such as gnome-software to make decisions based on such
information.",@mcatanzaro Fine by me.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,118,2016-07-14T12:30:01Z,2016-07-14T12:44:48Z,2016-07-14T12:44:48Z,MERGED,True,1,0,1,https://github.com/samdroid-apps,Add Sugar as a valid desktop environment,1,[],https://github.com/hughsie/appstream-glib/pull/118,https://github.com/samdroid-apps,1,https://github.com/hughsie/appstream-glib/pull/118,"Sugar .appdata.xml files include Sugar as their <project_group>: sugarlabs/sugar-toolkit-gtk3@9206c37#diff-9ecd02401a4ccbfff774b94db38b9c4bR432
So, we probably need to add here as well!","Sugar .appdata.xml files include Sugar as their <project_group>: sugarlabs/sugar-toolkit-gtk3@9206c37#diff-9ecd02401a4ccbfff774b94db38b9c4bR432
So, we probably need to add here as well!",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,119,2016-07-16T21:25:11Z,2016-07-17T06:15:22Z,2016-08-29T06:27:52Z,MERGED,True,1,2,1,https://github.com/Jibec,correct issue in transifex link,1,[],https://github.com/hughsie/appstream-glib/pull/119,https://github.com/Jibec,1,https://github.com/hughsie/appstream-glib/pull/119,,,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,122,2016-07-28T10:57:57Z,2016-07-28T11:02:28Z,2016-07-28T11:02:28Z,MERGED,True,4,1,2,https://github.com/smcv,Avoid unsatisfiable development dependency when built without libgcab,1,[],https://github.com/hughsie/appstream-glib/pull/122,https://github.com/smcv,1,https://github.com/hughsie/appstream-glib/pull/122,"pkg-config checks that all declared Requires.private are available
(they are needed for static linking and potentially for their CFLAGS).

I'm currently building appstream-glib in an environment where its ability to update x86 firmware is not interesting (we're targeting embedded devices, and secondarily x86 virtual machines) and ran into this issue.","pkg-config checks that all declared Requires.private are available
(they are needed for static linking and potentially for their CFLAGS).

I'm currently building appstream-glib in an environment where its ability to update x86 firmware is not interesting (we're targeting embedded devices, and secondarily x86 virtual machines) and ran into this issue.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,123,2016-07-28T10:59:05Z,2016-07-28T11:00:52Z,2016-07-28T11:00:52Z,MERGED,True,6,5,3,https://github.com/smcv,Don't change ABI when built with/without gperf,2,[],https://github.com/hughsie/appstream-glib/pull/123,https://github.com/smcv,1,https://github.com/hughsie/appstream-glib/pull/123,,,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,124,2016-08-02T11:28:42Z,2016-08-02T11:43:55Z,2016-08-02T11:44:06Z,CLOSED,False,16,9,1,https://github.com/smcv,Handle monitor events for individual files added with as_store_from_file(),2,[],https://github.com/hughsie/appstream-glib/pull/124,https://github.com/smcv,1,https://github.com/hughsie/appstream-glib/pull/124,"If you use as_store_from_file() to load individual .xml.gz files into a store, and replace those files with g_file_set_contents() or an equivalent atomic-overwrite from another process, then the file change notification emits
As-WARNING **: no path data for /.../xmls

and doesn't actually emit the ::changed signal. This appears to be because the code in AsStore that watches the monitor assumes it will be monitoring the .xml.gz file's parent directory, not the file itself.
While digging into this I noticed there is also some redundant monitoring going on: as_store_load_app_info_file() results in adding a monitor for the .xml.gz file itself, even though in that code path we are already going to monitor its parent directory. The file monitoring is only needed for as_store_from_file().","If you use as_store_from_file() to load individual .xml.gz files into a store, and replace those files with g_file_set_contents() or an equivalent atomic-overwrite from another process, then the file change notification emits
As-WARNING **: no path data for /.../xmls

and doesn't actually emit the ::changed signal. This appears to be because the code in AsStore that watches the monitor assumes it will be monitoring the .xml.gz file's parent directory, not the file itself.
While digging into this I noticed there is also some redundant monitoring going on: as_store_load_app_info_file() results in adding a monitor for the .xml.gz file itself, even though in that code path we are already going to monitor its parent directory. The file monitoring is only needed for as_store_from_file().",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,124,2016-08-02T11:28:42Z,2016-08-02T11:43:55Z,2016-08-02T11:44:06Z,CLOSED,False,16,9,1,https://github.com/smcv,Handle monitor events for individual files added with as_store_from_file(),2,[],https://github.com/hughsie/appstream-glib/pull/124,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/124#issuecomment-236877951,"If you use as_store_from_file() to load individual .xml.gz files into a store, and replace those files with g_file_set_contents() or an equivalent atomic-overwrite from another process, then the file change notification emits
As-WARNING **: no path data for /.../xmls

and doesn't actually emit the ::changed signal. This appears to be because the code in AsStore that watches the monitor assumes it will be monitoring the .xml.gz file's parent directory, not the file itself.
While digging into this I noticed there is also some redundant monitoring going on: as_store_load_app_info_file() results in adding a monitor for the .xml.gz file itself, even though in that code path we are already going to monitor its parent directory. The file monitoring is only needed for as_store_from_file().","I assume make check still passes with this? If so, LGTM, thanks.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,124,2016-08-02T11:28:42Z,2016-08-02T11:43:55Z,2016-08-02T11:44:06Z,CLOSED,False,16,9,1,https://github.com/smcv,Handle monitor events for individual files added with as_store_from_file(),2,[],https://github.com/hughsie/appstream-glib/pull/124,https://github.com/smcv,3,https://github.com/hughsie/appstream-glib/pull/124#issuecomment-236877953,"If you use as_store_from_file() to load individual .xml.gz files into a store, and replace those files with g_file_set_contents() or an equivalent atomic-overwrite from another process, then the file change notification emits
As-WARNING **: no path data for /.../xmls

and doesn't actually emit the ::changed signal. This appears to be because the code in AsStore that watches the monitor assumes it will be monitoring the .xml.gz file's parent directory, not the file itself.
While digging into this I noticed there is also some redundant monitoring going on: as_store_load_app_info_file() results in adding a monitor for the .xml.gz file itself, even though in that code path we are already going to monitor its parent directory. The file monitoring is only needed for as_store_from_file().",0.5.x version also available: https://github.com/smcv/appstream-glib/tree/05x-monitor,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,124,2016-08-02T11:28:42Z,2016-08-02T11:43:55Z,2016-08-02T11:44:06Z,CLOSED,False,16,9,1,https://github.com/smcv,Handle monitor events for individual files added with as_store_from_file(),2,[],https://github.com/hughsie/appstream-glib/pull/124,https://github.com/smcv,4,https://github.com/hughsie/appstream-glib/pull/124#issuecomment-236878069,"If you use as_store_from_file() to load individual .xml.gz files into a store, and replace those files with g_file_set_contents() or an equivalent atomic-overwrite from another process, then the file change notification emits
As-WARNING **: no path data for /.../xmls

and doesn't actually emit the ::changed signal. This appears to be because the code in AsStore that watches the monitor assumes it will be monitoring the .xml.gz file's parent directory, not the file itself.
While digging into this I noticed there is also some redundant monitoring going on: as_store_load_app_info_file() results in adding a monitor for the .xml.gz file itself, even though in that code path we are already going to monitor its parent directory. The file monitoring is only needed for as_store_from_file().","I assume make check still passes with this?

It does when I add a patch to make the DEP-11 tests conditional on having enabled DEP-11, which I'll send as a separate PR.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,124,2016-08-02T11:28:42Z,2016-08-02T11:43:55Z,2016-08-02T11:44:06Z,CLOSED,False,16,9,1,https://github.com/smcv,Handle monitor events for individual files added with as_store_from_file(),2,[],https://github.com/hughsie/appstream-glib/pull/124,https://github.com/smcv,5,https://github.com/hughsie/appstream-glib/pull/124#issuecomment-236878743,"If you use as_store_from_file() to load individual .xml.gz files into a store, and replace those files with g_file_set_contents() or an equivalent atomic-overwrite from another process, then the file change notification emits
As-WARNING **: no path data for /.../xmls

and doesn't actually emit the ::changed signal. This appears to be because the code in AsStore that watches the monitor assumes it will be monitoring the .xml.gz file's parent directory, not the file itself.
While digging into this I noticed there is also some redundant monitoring going on: as_store_load_app_info_file() results in adding a monitor for the .xml.gz file itself, even though in that code path we are already going to monitor its parent directory. The file monitoring is only needed for as_store_from_file().","I see you've added me as a contributor. Should I rebase onto no-dep11 (#125) and push?
Do you want the 0.5.x version too? (That's what I initially developed, this one is a rebase with conflict fixes for s/id_prefix/scope/ - I can send a separate PR if you'd like to review the 0.5.x code separately)",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,124,2016-08-02T11:28:42Z,2016-08-02T11:43:55Z,2016-08-02T11:44:06Z,CLOSED,False,16,9,1,https://github.com/smcv,Handle monitor events for individual files added with as_store_from_file(),2,[],https://github.com/hughsie/appstream-glib/pull/124,https://github.com/hughsie,6,https://github.com/hughsie/appstream-glib/pull/124#issuecomment-236879123,"If you use as_store_from_file() to load individual .xml.gz files into a store, and replace those files with g_file_set_contents() or an equivalent atomic-overwrite from another process, then the file change notification emits
As-WARNING **: no path data for /.../xmls

and doesn't actually emit the ::changed signal. This appears to be because the code in AsStore that watches the monitor assumes it will be monitoring the .xml.gz file's parent directory, not the file itself.
While digging into this I noticed there is also some redundant monitoring going on: as_store_load_app_info_file() results in adding a monitor for the .xml.gz file itself, even though in that code path we are already going to monitor its parent directory. The file monitoring is only needed for as_store_from_file().",If you want 0.5 i'm happy with you just backporting that without a PR. I'm kinda easy going. Just don't break continuous or ebassi will hunt you down.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,125,2016-08-02T11:34:32Z,2016-08-02T11:40:04Z,2016-08-02T11:40:07Z,CLOSED,False,12,1,1,https://github.com/smcv,Skip DEP-11 tests when DEP-11 is not enabled,1,[],https://github.com/hughsie/appstream-glib/pull/125,https://github.com/smcv,1,https://github.com/hughsie/appstream-glib/pull/125,,,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,125,2016-08-02T11:34:32Z,2016-08-02T11:40:04Z,2016-08-02T11:40:07Z,CLOSED,False,12,1,1,https://github.com/smcv,Skip DEP-11 tests when DEP-11 is not enabled,1,[],https://github.com/hughsie/appstream-glib/pull/125,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/125#issuecomment-236878521,,"LGTM, please push to master.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,126,2016-08-09T11:25:58Z,2016-08-09T11:30:40Z,2016-08-09T11:30:40Z,MERGED,True,1,0,1,https://github.com/DimStar77,Add SUSE-Public-Domain to License map,1,[],https://github.com/hughsie/appstream-glib/pull/126,https://github.com/DimStar77,1,https://github.com/hughsie/appstream-glib/pull/126,"As 'Public Domain' is not a SPDX-listed license, distributions handle
the string differently. SUSE decided to retain the generic SPDX-Format
used for other licenses, prefixed with SUSE-.","As 'Public Domain' is not a SPDX-listed license, distributions handle
the string differently. SUSE decided to retain the generic SPDX-Format
used for other licenses, prefixed with SUSE-.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,128,2016-08-17T13:17:59Z,2016-08-22T11:47:02Z,2016-11-21T10:19:48Z,MERGED,True,7,27,1,https://github.com/pwithnall,as-app-desktop: Fix association between icon names and types,1,[],https://github.com/hughsie/appstream-glib/pull/128,https://github.com/pwithnall,1,https://github.com/hughsie/appstream-glib/pull/128,"AsIcon documents that STOCK icons should have the name set; and that
LOCAL icons should have the filename set. The previous approach to
extracting these properties from as_app_parse_file_key() could sometimes
result in a LOCAL icon with no filename set, if tmp was not an icon name
and not a fallback icon name. Now, we assume that (as long as tmp is not
an absolute path) this means it's an icon name for an icon which is not
installed, and hence the AsIcon type should be STOCK.
Signed-off-by: Philip Withnall philip.withnall@collabora.co.uk","AsIcon documents that STOCK icons should have the name set; and that
LOCAL icons should have the filename set. The previous approach to
extracting these properties from as_app_parse_file_key() could sometimes
result in a LOCAL icon with no filename set, if tmp was not an icon name
and not a fallback icon name. Now, we assume that (as long as tmp is not
an absolute path) this means it's an icon name for an icon which is not
installed, and hence the AsIcon type should be STOCK.
Signed-off-by: Philip Withnall philip.withnall@collabora.co.uk",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,128,2016-08-17T13:17:59Z,2016-08-22T11:47:02Z,2016-11-21T10:19:48Z,MERGED,True,7,27,1,https://github.com/pwithnall,as-app-desktop: Fix association between icon names and types,1,[],https://github.com/hughsie/appstream-glib/pull/128,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/128#issuecomment-240994929,"AsIcon documents that STOCK icons should have the name set; and that
LOCAL icons should have the filename set. The previous approach to
extracting these properties from as_app_parse_file_key() could sometimes
result in a LOCAL icon with no filename set, if tmp was not an icon name
and not a fallback icon name. Now, we assume that (as long as tmp is not
an absolute path) this means it's an icon name for an icon which is not
installed, and hence the AsIcon type should be STOCK.
Signed-off-by: Philip Withnall philip.withnall@collabora.co.uk",Does this allow make check to pass? Thanks.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,128,2016-08-17T13:17:59Z,2016-08-22T11:47:02Z,2016-11-21T10:19:48Z,MERGED,True,7,27,1,https://github.com/pwithnall,as-app-desktop: Fix association between icon names and types,1,[],https://github.com/hughsie/appstream-glib/pull/128,https://github.com/pwithnall,3,https://github.com/hughsie/appstream-glib/pull/128#issuecomment-241044357,"AsIcon documents that STOCK icons should have the name set; and that
LOCAL icons should have the filename set. The previous approach to
extracting these properties from as_app_parse_file_key() could sometimes
result in a LOCAL icon with no filename set, if tmp was not an icon name
and not a fallback icon name. Now, we assume that (as long as tmp is not
an absolute path) this means it's an icon name for an icon which is not
installed, and hence the AsIcon type should be STOCK.
Signed-off-by: Philip Withnall philip.withnall@collabora.co.uk","Does this allow make check to pass? Thanks.

Yup, make check passes before and after applying the branch — which means that there aren’t any tests which actually cover this particular bit of the icon functionality.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,128,2016-08-17T13:17:59Z,2016-08-22T11:47:02Z,2016-11-21T10:19:48Z,MERGED,True,7,27,1,https://github.com/pwithnall,as-app-desktop: Fix association between icon names and types,1,[],https://github.com/hughsie/appstream-glib/pull/128,https://github.com/hughsie,4,https://github.com/hughsie/appstream-glib/pull/128#issuecomment-241391317,"AsIcon documents that STOCK icons should have the name set; and that
LOCAL icons should have the filename set. The previous approach to
extracting these properties from as_app_parse_file_key() could sometimes
result in a LOCAL icon with no filename set, if tmp was not an icon name
and not a fallback icon name. Now, we assume that (as long as tmp is not
an absolute path) this means it's an icon name for an icon which is not
installed, and hence the AsIcon type should be STOCK.
Signed-off-by: Philip Withnall philip.withnall@collabora.co.uk",This breaks make check in libappstream-builder,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,128,2016-08-17T13:17:59Z,2016-08-22T11:47:02Z,2016-11-21T10:19:48Z,MERGED,True,7,27,1,https://github.com/pwithnall,as-app-desktop: Fix association between icon names and types,1,[],https://github.com/hughsie/appstream-glib/pull/128,https://github.com/pwithnall,5,https://github.com/hughsie/appstream-glib/pull/128#issuecomment-241452075,"AsIcon documents that STOCK icons should have the name set; and that
LOCAL icons should have the filename set. The previous approach to
extracting these properties from as_app_parse_file_key() could sometimes
result in a LOCAL icon with no filename set, if tmp was not an icon name
and not a fallback icon name. Now, we assume that (as long as tmp is not
an absolute path) this means it's an icon name for an icon which is not
installed, and hence the AsIcon type should be STOCK.
Signed-off-by: Philip Withnall philip.withnall@collabora.co.uk",Eh? It definitely worked for me. I’ll take a look soon and try and work out what went wrong. :-(,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,128,2016-08-17T13:17:59Z,2016-08-22T11:47:02Z,2016-11-21T10:19:48Z,MERGED,True,7,27,1,https://github.com/pwithnall,as-app-desktop: Fix association between icon names and types,1,[],https://github.com/hughsie/appstream-glib/pull/128,https://github.com/pwithnall,6,https://github.com/hughsie/appstream-glib/pull/128#issuecomment-244393363,"AsIcon documents that STOCK icons should have the name set; and that
LOCAL icons should have the filename set. The previous approach to
extracting these properties from as_app_parse_file_key() could sometimes
result in a LOCAL icon with no filename set, if tmp was not an icon name
and not a fallback icon name. Now, we assume that (as long as tmp is not
an absolute path) this means it's an icon name for an icon which is not
installed, and hence the AsIcon type should be STOCK.
Signed-off-by: Philip Withnall philip.withnall@collabora.co.uk","I’ve just tested again (with the patch applied against master as of now) and make check in libappstream-builder does work for me. What failure are you getting?

jhbuild:~/.cache/jhbuild/build/appstream-glib/libappstream-builder $ make check
Making check in plugins
make[1]: Entering directory '/home/philip/.cache/jhbuild/build/appstream-glib/libappstream-builder/plugins'
make[1]: Nothing to be done for 'check'.
make[1]: Leaving directory '/home/philip/.cache/jhbuild/build/appstream-glib/libappstream-builder/plugins'
make[1]: Entering directory '/home/philip/.cache/jhbuild/build/appstream-glib/libappstream-builder'
make  asb-self-test
make[2]: Entering directory '/home/philip/.cache/jhbuild/build/appstream-glib/libappstream-builder'
make[2]: 'asb-self-test' is up to date.
make[2]: Leaving directory '/home/philip/.cache/jhbuild/build/appstream-glib/libappstream-builder'
make  check-TESTS
make[2]: Entering directory '/home/philip/.cache/jhbuild/build/appstream-glib/libappstream-builder'
make[3]: Entering directory '/home/philip/.cache/jhbuild/build/appstream-glib/libappstream-builder'
PASS: asb-self-test
============================================================================
Testsuite summary for appstream-glib 0.6.3
============================================================================
# TOTAL: 1
# PASS:  1
# SKIP:  0
# XFAIL: 0
# FAIL:  0
# XPASS: 0
# ERROR: 0
============================================================================
make[3]: Leaving directory '/home/philip/.cache/jhbuild/build/appstream-glib/libappstream-builder'
make[2]: Leaving directory '/home/philip/.cache/jhbuild/build/appstream-glib/libappstream-builder'
make[1]: Leaving directory '/home/philip/.cache/jhbuild/build/appstream-glib/libappstream-builder'",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,128,2016-08-17T13:17:59Z,2016-08-22T11:47:02Z,2016-11-21T10:19:48Z,MERGED,True,7,27,1,https://github.com/pwithnall,as-app-desktop: Fix association between icon names and types,1,[],https://github.com/hughsie/appstream-glib/pull/128,https://github.com/hughsie,7,https://github.com/hughsie/appstream-glib/pull/128#issuecomment-244588415,"AsIcon documents that STOCK icons should have the name set; and that
LOCAL icons should have the filename set. The previous approach to
extracting these properties from as_app_parse_file_key() could sometimes
result in a LOCAL icon with no filename set, if tmp was not an icon name
and not a fallback icon name. Now, we assume that (as long as tmp is not
an absolute path) this means it's an icon name for an icon which is not
installed, and hence the AsIcon type should be STOCK.
Signed-off-by: Philip Withnall philip.withnall@collabora.co.uk","I get this:
Asb:ERROR:asb-self-test.c:567:asb_test_context_test_func: assertion failed (error == NULL): --- /tmp/b  2016-09-04 08:27:19.593418924 +0100
@@ -67,7 +67,7 @@
 <name>App</name>
 <summary>A test application</summary>
 <description><p>Long description goes here.</p></description>
-<icon type=""cached"" height=""64"" width=""64"">app.png</icon>
+<icon type=""stock"">app</icon>
 <categories>
 <category>Profiling</category>
 <category>System</category>",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,128,2016-08-17T13:17:59Z,2016-08-22T11:47:02Z,2016-11-21T10:19:48Z,MERGED,True,7,27,1,https://github.com/pwithnall,as-app-desktop: Fix association between icon names and types,1,[],https://github.com/hughsie/appstream-glib/pull/128,https://github.com/hughsie,8,https://github.com/hughsie/appstream-glib/pull/128#issuecomment-244710471,"AsIcon documents that STOCK icons should have the name set; and that
LOCAL icons should have the filename set. The previous approach to
extracting these properties from as_app_parse_file_key() could sometimes
result in a LOCAL icon with no filename set, if tmp was not an icon name
and not a fallback icon name. Now, we assume that (as long as tmp is not
an absolute path) this means it's an icon name for an icon which is not
installed, and hence the AsIcon type should be STOCK.
Signed-off-by: Philip Withnall philip.withnall@collabora.co.uk",Is this working how you expect now? Thanks.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,128,2016-08-17T13:17:59Z,2016-08-22T11:47:02Z,2016-11-21T10:19:48Z,MERGED,True,7,27,1,https://github.com/pwithnall,as-app-desktop: Fix association between icon names and types,1,[],https://github.com/hughsie/appstream-glib/pull/128,https://github.com/pwithnall,9,https://github.com/hughsie/appstream-glib/pull/128#issuecomment-245239642,"AsIcon documents that STOCK icons should have the name set; and that
LOCAL icons should have the filename set. The previous approach to
extracting these properties from as_app_parse_file_key() could sometimes
result in a LOCAL icon with no filename set, if tmp was not an icon name
and not a fallback icon name. Now, we assume that (as long as tmp is not
an absolute path) this means it's an icon name for an icon which is not
installed, and hence the AsIcon type should be STOCK.
Signed-off-by: Philip Withnall philip.withnall@collabora.co.uk","The patches look like they should do the trick, but it will take me a little while to test (need to backport the patches to a Debian package on a different machine then test). I’ll let you know. Thanks!",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,128,2016-08-17T13:17:59Z,2016-08-22T11:47:02Z,2016-11-21T10:19:48Z,MERGED,True,7,27,1,https://github.com/pwithnall,as-app-desktop: Fix association between icon names and types,1,[],https://github.com/hughsie/appstream-glib/pull/128,https://github.com/pwithnall,10,https://github.com/hughsie/appstream-glib/pull/128#issuecomment-261898142,"AsIcon documents that STOCK icons should have the name set; and that
LOCAL icons should have the filename set. The previous approach to
extracting these properties from as_app_parse_file_key() could sometimes
result in a LOCAL icon with no filename set, if tmp was not an icon name
and not a fallback icon name. Now, we assume that (as long as tmp is not
an absolute path) this means it's an icon name for an icon which is not
installed, and hence the AsIcon type should be STOCK.
Signed-off-by: Philip Withnall philip.withnall@collabora.co.uk","I just got a chance to test it, and your fixes do the job. Thanks!",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,129,2016-08-17T21:11:41Z,2016-08-17T21:13:42Z,2016-08-17T21:13:42Z,MERGED,True,1,2,1,https://github.com/andersk,Pay attention to errors from yaml_parser_parse,1,[],https://github.com/hughsie/appstream-glib/pull/129,https://github.com/andersk,1,https://github.com/hughsie/appstream-glib/pull/129,"The previous commit message blames libyaml for spinning forever on invalid input.  This is not the case.  libyaml is correctly returning an error code, but as_node_yaml_process_layer was ignoring it and spinning forever calling back into libyaml as if expecting the error to disappear by itself.
The code should probably be audited for other ignored error codes, but this fixes the immediate problem.","The previous commit message blames libyaml for spinning forever on invalid input.  This is not the case.  libyaml is correctly returning an error code, but as_node_yaml_process_layer was ignoring it and spinning forever calling back into libyaml as if expecting the error to disappear by itself.
The code should probably be audited for other ignored error codes, but this fixes the immediate problem.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,130,2016-08-18T06:46:37Z,2016-08-19T11:28:51Z,2016-08-19T11:28:51Z,MERGED,True,4,2,1,https://github.com/justinjoy,as-app-validate: Check if icon_name is NULL,1,[],https://github.com/hughsie/appstream-glib/pull/130,https://github.com/justinjoy,1,https://github.com/hughsie/appstream-glib/pull/130,"When 'as_icon_get_{file}name' return NULL, 'as_app_validate_icons' function
will show Critical Warning by calling 'g_str_has_prefix'. But it wouldn't be
a critical and sometimes, it could be NULL.","When 'as_icon_get_{file}name' return NULL, 'as_app_validate_icons' function
will show Critical Warning by calling 'g_str_has_prefix'. But it wouldn't be
a critical and sometimes, it could be NULL.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,131,2016-08-20T21:30:40Z,2016-08-21T06:00:35Z,2016-08-21T06:00:35Z,MERGED,True,2,2,1,https://github.com/kaiw,Make upgrade command check for SPDX license string instead of single ID,1,[],https://github.com/hughsie/appstream-glib/pull/131,https://github.com/kaiw,1,https://github.com/hughsie/appstream-glib/pull/131,"The current upgrade check just tests to see if the project license is a single SPDX license ID, whereas any license string is valid in this field. For example, Meld has:
<project_license>GPL-2.0+ and CC-BY-SA-3.0</project_license>
which is marked as needing updating.
This patch uses as_utils_is_spdx_license(), which seems right to me, but it's not what the actual validation command uses. For some reason, validation manually calls the tokenisation and then validates the licenses individually... I'm not sure if that's more correct in some way I don't recognise, so I went with the easier option.","The current upgrade check just tests to see if the project license is a single SPDX license ID, whereas any license string is valid in this field. For example, Meld has:
<project_license>GPL-2.0+ and CC-BY-SA-3.0</project_license>
which is marked as needing updating.
This patch uses as_utils_is_spdx_license(), which seems right to me, but it's not what the actual validation command uses. For some reason, validation manually calls the tokenisation and then validates the licenses individually... I'm not sure if that's more correct in some way I don't recognise, so I went with the easier option.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,132,2016-08-22T14:13:50Z,2016-08-22T14:15:07Z,2016-08-22T14:15:07Z,MERGED,True,1,1,1,https://github.com/superm1,trivial: lower requirement for appstream-glib,1,[],https://github.com/hughsie/appstream-glib/pull/132,https://github.com/superm1,1,https://github.com/hughsie/appstream-glib/pull/132,This allows easier compilation on Ubuntu 16.04,This allows easier compilation on Ubuntu 16.04,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,133,2016-08-22T15:02:24Z,2016-08-22T15:08:19Z,2016-08-22T15:12:34Z,MERGED,True,1,1,1,https://github.com/superm1,trivial: Use correct autoptr cleanup on yaml error when loading from a file,1,[],https://github.com/hughsie/appstream-glib/pull/133,https://github.com/superm1,1,https://github.com/hughsie/appstream-glib/pull/133,"It seems this was needed in a second place.  This fixes calling from appstream-util validate.

$ appstream-util validate ./yaml.yml
./yaml.yml: scanner error: mapping values are not allowed in this context at ln:2 col:5","It seems this was needed in a second place.  This fixes calling from appstream-util validate.

$ appstream-util validate ./yaml.yml
./yaml.yml: scanner error: mapping values are not allowed in this context at ln:2 col:5",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,133,2016-08-22T15:02:24Z,2016-08-22T15:08:19Z,2016-08-22T15:12:34Z,MERGED,True,1,1,1,https://github.com/superm1,trivial: Use correct autoptr cleanup on yaml error when loading from a file,1,[],https://github.com/hughsie/appstream-glib/pull/133,https://github.com/superm1,2,https://github.com/hughsie/appstream-glib/pull/133#issuecomment-241444637,"It seems this was needed in a second place.  This fixes calling from appstream-util validate.

$ appstream-util validate ./yaml.yml
./yaml.yml: scanner error: mapping values are not allowed in this context at ln:2 col:5","I forgot to mention in the pull request, can you also backport that to 0_5_X?",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,133,2016-08-22T15:02:24Z,2016-08-22T15:08:19Z,2016-08-22T15:12:34Z,MERGED,True,1,1,1,https://github.com/superm1,trivial: Use correct autoptr cleanup on yaml error when loading from a file,1,[],https://github.com/hughsie/appstream-glib/pull/133,https://github.com/hughsie,3,https://github.com/hughsie/appstream-glib/pull/133#issuecomment-241445196,"It seems this was needed in a second place.  This fixes calling from appstream-util validate.

$ appstream-util validate ./yaml.yml
./yaml.yml: scanner error: mapping values are not allowed in this context at ln:2 col:5",Done.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,134,2016-08-26T20:26:41Z,2016-08-29T08:00:52Z,2016-08-29T08:00:52Z,MERGED,True,10,10,4,https://github.com/jpakkane,Wip/hughsie/meson,1,[],https://github.com/hughsie/appstream-glib/pull/134,https://github.com/jpakkane,1,https://github.com/hughsie/appstream-glib/pull/134,"Some cleanups to Meson configuration.
You might also consider moving more preprocessor defines from command line arguments to config.h or equivalent as much as possible. This is beneficial in many ways such as:

less places for state to exist
when everything is in config.h it is easy to inspect
smaller command line argument lists are easier to inspect and are faster to process (not usually noticeable in small projects but good practice anyway)
passing command line arguments with shell metacharacters (i.e. double quotes) through various backends and their invocations is hard and there may be interesting bugs, especially on less often used backends","Some cleanups to Meson configuration.
You might also consider moving more preprocessor defines from command line arguments to config.h or equivalent as much as possible. This is beneficial in many ways such as:

less places for state to exist
when everything is in config.h it is easy to inspect
smaller command line argument lists are easier to inspect and are faster to process (not usually noticeable in small projects but good practice anyway)
passing command line arguments with shell metacharacters (i.e. double quotes) through various backends and their invocations is hard and there may be interesting bugs, especially on less often used backends",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,135,2016-09-05T13:11:54Z,2016-09-05T19:02:32Z,2016-09-05T19:02:33Z,MERGED,True,4,0,1,https://github.com/DimStar77,Add -lang package as a dependency in order to properly detect transla…,1,[],https://github.com/hughsie/appstream-glib/pull/135,https://github.com/DimStar77,1,https://github.com/hughsie/appstream-glib/pull/135,"…tions
In openSUSE, the -lang package is 'only' recommended, so that users CAN save the
space if they don't need them (and using bundles there is also a method to only install
one language instead of all supported ones).
Unfortunately, with this technique, gnome-software keeps on pretending that no application
is localized in openSUSE.","…tions
In openSUSE, the -lang package is 'only' recommended, so that users CAN save the
space if they don't need them (and using bundles there is also a method to only install
one language instead of all supported ones).
Unfortunately, with this technique, gnome-software keeps on pretending that no application
is localized in openSUSE.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,135,2016-09-05T13:11:54Z,2016-09-05T19:02:32Z,2016-09-05T19:02:33Z,MERGED,True,4,0,1,https://github.com/DimStar77,Add -lang package as a dependency in order to properly detect transla…,1,[],https://github.com/hughsie/appstream-glib/pull/135,https://github.com/DimStar77,2,https://github.com/hughsie/appstream-glib/pull/135#issuecomment-244745207,"…tions
In openSUSE, the -lang package is 'only' recommended, so that users CAN save the
space if they don't need them (and using bundles there is also a method to only install
one language instead of all supported ones).
Unfortunately, with this technique, gnome-software keeps on pretending that no application
is localized in openSUSE.",from my tests it also won't hurt though - as the dep does not really have to exist - it's more a hint for asb to inspect another rpm's content as part of the original one,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,135,2016-09-05T13:11:54Z,2016-09-05T19:02:32Z,2016-09-05T19:02:33Z,MERGED,True,4,0,1,https://github.com/DimStar77,Add -lang package as a dependency in order to properly detect transla…,1,[],https://github.com/hughsie/appstream-glib/pull/135,https://github.com/hughsie,3,https://github.com/hughsie/appstream-glib/pull/135#issuecomment-244750556,"…tions
In openSUSE, the -lang package is 'only' recommended, so that users CAN save the
space if they don't need them (and using bundles there is also a method to only install
one language instead of all supported ones).
Unfortunately, with this technique, gnome-software keeps on pretending that no application
is localized in openSUSE.","Not apposed to this, I agree it's pretty harmless on other distros.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,135,2016-09-05T13:11:54Z,2016-09-05T19:02:32Z,2016-09-05T19:02:33Z,MERGED,True,4,0,1,https://github.com/DimStar77,Add -lang package as a dependency in order to properly detect transla…,1,[],https://github.com/hughsie/appstream-glib/pull/135,https://github.com/hughsie,4,https://github.com/hughsie/appstream-glib/pull/135#issuecomment-244754905,"…tions
In openSUSE, the -lang package is 'only' recommended, so that users CAN save the
space if they don't need them (and using bundles there is also a method to only install
one language instead of all supported ones).
Unfortunately, with this technique, gnome-software keeps on pretending that no application
is localized in openSUSE.","Would have preferred a g_autofree, but this looks okay to me. +1, please push to master.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,135,2016-09-05T13:11:54Z,2016-09-05T19:02:32Z,2016-09-05T19:02:33Z,MERGED,True,4,0,1,https://github.com/DimStar77,Add -lang package as a dependency in order to properly detect transla…,1,[],https://github.com/hughsie/appstream-glib/pull/135,https://github.com/DimStar77,5,https://github.com/hughsie/appstream-glib/pull/135#issuecomment-244755057,"…tions
In openSUSE, the -lang package is 'only' recommended, so that users CAN save the
space if they don't need them (and using bundles there is also a method to only install
one language instead of all supported ones).
Unfortunately, with this technique, gnome-software keeps on pretending that no application
is localized in openSUSE.",just squashed the commits properly; I decided to use tmp as it was already an existing variable that at this moment was 'free to be used',True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,135,2016-09-05T13:11:54Z,2016-09-05T19:02:32Z,2016-09-05T19:02:33Z,MERGED,True,4,0,1,https://github.com/DimStar77,Add -lang package as a dependency in order to properly detect transla…,1,[],https://github.com/hughsie/appstream-glib/pull/135,https://github.com/DimStar77,6,https://github.com/hughsie/appstream-glib/pull/135#issuecomment-244799647,"…tions
In openSUSE, the -lang package is 'only' recommended, so that users CAN save the
space if they don't need them (and using bundles there is also a method to only install
one language instead of all supported ones).
Unfortunately, with this technique, gnome-software keeps on pretending that no application
is localized in openSUSE.","@hughsie I don't have merge access in this repo - if this is fine, It'd be nice of you to merge it then",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,136,2016-10-03T02:37:56Z,2018-06-21T23:15:27Z,2018-06-24T13:49:20Z,CLOSED,False,2,2,1,https://github.com/robert-ancell,Make as_app_kind_to_string output current names of enumerated values,1,[],https://github.com/hughsie/appstream-glib/pull/136,https://github.com/robert-ancell,1,https://github.com/hughsie/appstream-glib/pull/136,The values were changed in ea8b160,The values were changed in ea8b160,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,136,2016-10-03T02:37:56Z,2018-06-21T23:15:27Z,2018-06-24T13:49:20Z,CLOSED,False,2,2,1,https://github.com/robert-ancell,Make as_app_kind_to_string output current names of enumerated values,1,[],https://github.com/hughsie/appstream-glib/pull/136,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/136#issuecomment-251041883,The values were changed in ea8b160,"I thought about this; if we do this then we'll create metadata that older versions of appstream-glib can't process. I think we can merge this, bu maybe not just yet.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,136,2016-10-03T02:37:56Z,2018-06-21T23:15:27Z,2018-06-24T13:49:20Z,CLOSED,False,2,2,1,https://github.com/robert-ancell,Make as_app_kind_to_string output current names of enumerated values,1,[],https://github.com/hughsie/appstream-glib/pull/136,https://github.com/ximion,3,https://github.com/hughsie/appstream-glib/pull/136#issuecomment-251091281,The values were changed in ea8b160,"If this gets merged, we can also switch the default install path for metainfo files to /usr/share/metainfo, since that path has been supported for a really long time now (much longer than the component names).
But whatever works best for your schedule is fine :-) - there is no rush to update.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,136,2016-10-03T02:37:56Z,2018-06-21T23:15:27Z,2018-06-24T13:49:20Z,CLOSED,False,2,2,1,https://github.com/robert-ancell,Make as_app_kind_to_string output current names of enumerated values,1,[],https://github.com/hughsie/appstream-glib/pull/136,https://github.com/robert-ancell,4,https://github.com/hughsie/appstream-glib/pull/136#issuecomment-254047604,The values were changed in ea8b160,I'll leave this PR open so people know about the reason for the current code. Feel free to merge when it's appropriate to do so.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,136,2016-10-03T02:37:56Z,2018-06-21T23:15:27Z,2018-06-24T13:49:20Z,CLOSED,False,2,2,1,https://github.com/robert-ancell,Make as_app_kind_to_string output current names of enumerated values,1,[],https://github.com/hughsie/appstream-glib/pull/136,https://github.com/ximion,5,https://github.com/hughsie/appstream-glib/pull/136#issuecomment-399758078,The values were changed in ea8b160,"It's important to note that while the AppStream reference implementation has a fallback for desktop <-> desktop-application, this does not happen for webapp, because unlike desktop, webapp was never a recognized component type name in AppStream.
So, without this change, appstream-glib might generate invalid AppStream metadata.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,139,2016-11-10T23:29:38Z,2016-11-10T23:31:05Z,2016-11-10T23:51:41Z,MERGED,True,1,1,1,https://github.com/mcatanzaro,Don't recommend use of DISTCHECK_CONFIGURE_FLAGS,1,[],https://github.com/hughsie/appstream-glib/pull/139,https://github.com/mcatanzaro,1,https://github.com/hughsie/appstream-glib/pull/139,DISTCHECK_CONFIGURE_FLAGS is only for users to override AM_DISTCHECK_CONFIGURE_FLAGS. It's not possible to do if Automake files stomp on that.,DISTCHECK_CONFIGURE_FLAGS is only for users to override AM_DISTCHECK_CONFIGURE_FLAGS. It's not possible to do if Automake files stomp on that.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,141,2016-12-09T09:20:48Z,2016-12-09T09:39:12Z,2016-12-09T11:47:00Z,MERGED,True,1,0,1,https://github.com/nielsdg,Add Geary to the app id fallbacks,1,[],https://github.com/hughsie/appstream-glib/pull/141,https://github.com/nielsdg,1,https://github.com/hughsie/appstream-glib/pull/141,"Geary recently renamed its app id to follow flatpak conventions. Adding a fallback to appstream.
For more info, see bug 766196 on GNOME bugzilla.","Geary recently renamed its app id to follow flatpak conventions. Adding a fallback to appstream.
For more info, see bug 766196 on GNOME bugzilla.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,141,2016-12-09T09:20:48Z,2016-12-09T09:39:12Z,2016-12-09T11:47:00Z,MERGED,True,1,0,1,https://github.com/nielsdg,Add Geary to the app id fallbacks,1,[],https://github.com/hughsie/appstream-glib/pull/141,https://github.com/nielsdg,2,https://github.com/hughsie/appstream-glib/pull/141#issuecomment-265995852,"Geary recently renamed its app id to follow flatpak conventions. Adding a fallback to appstream.
For more info, see bug 766196 on GNOME bugzilla.","Thanks!

Op vr 9 dec. 2016 om 10:39 schreef Richard Hughes <notifications@github.com>
…
 Merged #141 <#141>.




 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#141 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/ABUaQI_CNIWj3S64GJrka8afN8xRmu5yks5rGSHAgaJpZM4LIuoO>
 .",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,142,2016-12-20T16:52:47Z,2016-12-20T18:53:53Z,2016-12-20T19:00:12Z,MERGED,True,77,36,13,https://github.com/kalev,Resolve relative symlinks when extracting archives,5,[],https://github.com/hughsie/appstream-glib/pull/142,https://github.com/kalev,1,https://github.com/hughsie/appstream-glib/pull/142,"This fixes extracting ardour5 icons that use relative symlinks.
https://bugzilla.redhat.com/show_bug.cgi?id=1368378","This fixes extracting ardour5 icons that use relative symlinks.
https://bugzilla.redhat.com/show_bug.cgi?id=1368378",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,143,2016-12-29T23:17:33Z,2016-12-31T15:23:12Z,2016-12-31T15:25:46Z,MERGED,True,33,8,3,https://github.com/kalev,"Add support for ""+"" operator at the end of SPDX license identifiers",1,[],https://github.com/hughsie/appstream-glib/pull/143,https://github.com/kalev,1,https://github.com/hughsie/appstream-glib/pull/143,"SPDX v2.0 and later support an unary ""+"" operator suffix at the end of
license identifiers, e.g. ""CC-BY-SA-3.0+"". This commit adds support for
tokenizing and detokenizing this and adds new tests.","SPDX v2.0 and later support an unary ""+"" operator suffix at the end of
license identifiers, e.g. ""CC-BY-SA-3.0+"". This commit adds support for
tokenizing and detokenizing this and adds new tests.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,143,2016-12-29T23:17:33Z,2016-12-31T15:23:12Z,2016-12-31T15:25:46Z,MERGED,True,33,8,3,https://github.com/kalev,"Add support for ""+"" operator at the end of SPDX license identifiers",1,[],https://github.com/hughsie/appstream-glib/pull/143,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/143#issuecomment-269868946,"SPDX v2.0 and later support an unary ""+"" operator suffix at the end of
license identifiers, e.g. ""CC-BY-SA-3.0+"". This commit adds support for
tokenizing and detokenizing this and adds new tests.",Does this need any similar fix (for the tokenization->URLifiying) in gnome-software?,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,143,2016-12-29T23:17:33Z,2016-12-31T15:23:12Z,2016-12-31T15:25:46Z,MERGED,True,33,8,3,https://github.com/kalev,"Add support for ""+"" operator at the end of SPDX license identifiers",1,[],https://github.com/hughsie/appstream-glib/pull/143,https://github.com/kalev,3,https://github.com/hughsie/appstream-glib/pull/143#issuecomment-269869416,"SPDX v2.0 and later support an unary ""+"" operator suffix at the end of
license identifiers, e.g. ""CC-BY-SA-3.0+"". This commit adds support for
tokenizing and detokenizing this and adds new tests.",Yes. I have a gnome-software fix ready to go if the appstream-glib side makes sense to you.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,143,2016-12-29T23:17:33Z,2016-12-31T15:23:12Z,2016-12-31T15:25:46Z,MERGED,True,33,8,3,https://github.com/kalev,"Add support for ""+"" operator at the end of SPDX license identifiers",1,[],https://github.com/hughsie/appstream-glib/pull/143,https://github.com/hughsie,4,https://github.com/hughsie/appstream-glib/pull/143#issuecomment-269869480,"SPDX v2.0 and later support an unary ""+"" operator suffix at the end of
license identifiers, e.g. ""CC-BY-SA-3.0+"". This commit adds support for
tokenizing and detokenizing this and adds new tests.",It does make sense; please merge this :),True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,143,2016-12-29T23:17:33Z,2016-12-31T15:23:12Z,2016-12-31T15:25:46Z,MERGED,True,33,8,3,https://github.com/kalev,"Add support for ""+"" operator at the end of SPDX license identifiers",1,[],https://github.com/hughsie/appstream-glib/pull/143,https://github.com/kalev,5,https://github.com/hughsie/appstream-glib/pull/143#issuecomment-269869546,"SPDX v2.0 and later support an unary ""+"" operator suffix at the end of
license identifiers, e.g. ""CC-BY-SA-3.0+"". This commit adds support for
tokenizing and detokenizing this and adds new tests.",Thanks!,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,144,2017-01-07T13:48:06Z,2017-01-07T14:31:48Z,2017-08-20T19:42:57Z,MERGED,True,4,0,1,https://github.com/pwithnall,build: Enable C99 support in configure.ac,1,[],https://github.com/hughsie/appstream-glib/pull/144,https://github.com/pwithnall,1,https://github.com/hughsie/appstream-glib/pull/144,"We use C99 features (as-app.c:1278), so need to explicitly enable them
in configure.ac, as some compilers will not enable them automatically,
and will instead error when they encounter usage of C99.

This should fix the Jenkins builds on fdo.","We use C99 features (as-app.c:1278), so need to explicitly enable them
in configure.ac, as some compilers will not enable them automatically,
and will instead error when they encounter usage of C99.

This should fix the Jenkins builds on fdo.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,149,2017-01-26T19:53:15Z,2017-01-26T20:27:34Z,2017-01-26T20:27:34Z,MERGED,True,2,2,1,https://github.com/smcv,as_store_remove_app_by_id: Don't use-after-free,1,[],https://github.com/hughsie/appstream-glib/pull/149,https://github.com/smcv,1,https://github.com/hughsie/appstream-glib/pull/149,"We can't call methods on the app after we can no longer be sure that
we hold a reference to it.

This caused a crash in testing some code based on appstream-glib, in a test that exercises what happens when an AppStream .xml.gz file changes. In this particular project not everything in the AppStream is immediately useful (we're looking at a subset), so we don't hold a separate ref on AsApp objects that aren't of interest - I think that's why I saw this but gnome-software wouldn't.","We can't call methods on the app after we can no longer be sure that
we hold a reference to it.

This caused a crash in testing some code based on appstream-glib, in a test that exercises what happens when an AppStream .xml.gz file changes. In this particular project not everything in the AppStream is immediately useful (we're looking at a subset), so we don't hold a separate ref on AsApp objects that aren't of interest - I think that's why I saw this but gnome-software wouldn't.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,149,2017-01-26T19:53:15Z,2017-01-26T20:27:34Z,2017-01-26T20:27:34Z,MERGED,True,2,2,1,https://github.com/smcv,as_store_remove_app_by_id: Don't use-after-free,1,[],https://github.com/hughsie/appstream-glib/pull/149,https://github.com/smcv,2,https://github.com/hughsie/appstream-glib/pull/149#issuecomment-275496413,"We can't call methods on the app after we can no longer be sure that
we hold a reference to it.

This caused a crash in testing some code based on appstream-glib, in a test that exercises what happens when an AppStream .xml.gz file changes. In this particular project not everything in the AppStream is immediately useful (we're looking at a subset), so we don't hold a separate ref on AsApp objects that aren't of interest - I think that's why I saw this but gnome-software wouldn't.","An alternative way to do this would be to make sure that hash_unique_id holds its own ref to its value (with a free-function), instead of using a ""borrowed"" ref from the array. The other hash_foo hashes do all seem to hold refs.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,149,2017-01-26T19:53:15Z,2017-01-26T20:27:34Z,2017-01-26T20:27:34Z,MERGED,True,2,2,1,https://github.com/smcv,as_store_remove_app_by_id: Don't use-after-free,1,[],https://github.com/hughsie/appstream-glib/pull/149,https://github.com/hughsie,3,https://github.com/hughsie/appstream-glib/pull/149#issuecomment-275497150,"We can't call methods on the app after we can no longer be sure that
we hold a reference to it.

This caused a crash in testing some code based on appstream-glib, in a test that exercises what happens when an AppStream .xml.gz file changes. In this particular project not everything in the AppStream is immediately useful (we're looking at a subset), so we don't hold a separate ref on AsApp objects that aren't of interest - I think that's why I saw this but gnome-software wouldn't.",I think holding the ref in all cases is probably safer...,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,149,2017-01-26T19:53:15Z,2017-01-26T20:27:34Z,2017-01-26T20:27:34Z,MERGED,True,2,2,1,https://github.com/smcv,as_store_remove_app_by_id: Don't use-after-free,1,[],https://github.com/hughsie/appstream-glib/pull/149,https://github.com/smcv,4,https://github.com/hughsie/appstream-glib/pull/149#issuecomment-275501173,"We can't call methods on the app after we can no longer be sure that
we hold a reference to it.

This caused a crash in testing some code based on appstream-glib, in a test that exercises what happens when an AppStream .xml.gz file changes. In this particular project not everything in the AppStream is immediately useful (we're looking at a subset), so we don't hold a separate ref on AsApp objects that aren't of interest - I think that's why I saw this but gnome-software wouldn't.","Fine, I'll respin this to be in those terms.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,149,2017-01-26T19:53:15Z,2017-01-26T20:27:34Z,2017-01-26T20:27:34Z,MERGED,True,2,2,1,https://github.com/smcv,as_store_remove_app_by_id: Don't use-after-free,1,[],https://github.com/hughsie/appstream-glib/pull/149,https://github.com/smcv,5,https://github.com/hughsie/appstream-glib/pull/149#issuecomment-275502676,"We can't call methods on the app after we can no longer be sure that
we hold a reference to it.

This caused a crash in testing some code based on appstream-glib, in a test that exercises what happens when an AppStream .xml.gz file changes. In this particular project not everything in the AppStream is immediately useful (we're looking at a subset), so we don't hold a separate ref on AsApp objects that aren't of interest - I think that's why I saw this but gnome-software wouldn't.",Redone as requested.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,151,2017-01-28T16:55:26Z,2017-01-28T17:45:33Z,2017-01-31T10:45:01Z,MERGED,True,6,0,1,https://github.com/kalev,Add a destructor for AsRefString,1,[],https://github.com/hughsie/appstream-glib/pull/151,https://github.com/kalev,1,https://github.com/hughsie/appstream-glib/pull/151,"AsRefString uses a singleton hash table for deduplicating strings. This
is all ""possibly lost"" memory according to valgrind as the hash table
never gets destroyed.
This commit adds a custom destructor so that we can clean up the
singleton hash table as well and avoid unnecessary noise in valgrind
output.","AsRefString uses a singleton hash table for deduplicating strings. This
is all ""possibly lost"" memory according to valgrind as the hash table
never gets destroyed.
This commit adds a custom destructor so that we can clean up the
singleton hash table as well and avoid unnecessary noise in valgrind
output.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,151,2017-01-28T16:55:26Z,2017-01-28T17:45:33Z,2017-01-31T10:45:01Z,MERGED,True,6,0,1,https://github.com/kalev,Add a destructor for AsRefString,1,[],https://github.com/hughsie/appstream-glib/pull/151,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/151#issuecomment-275861093,"AsRefString uses a singleton hash table for deduplicating strings. This
is all ""possibly lost"" memory according to valgrind as the hash table
never gets destroyed.
This commit adds a custom destructor so that we can clean up the
singleton hash table as well and avoid unnecessary noise in valgrind
output.","Looks good, but does this work on all compilers?",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,151,2017-01-28T16:55:26Z,2017-01-28T17:45:33Z,2017-01-31T10:45:01Z,MERGED,True,6,0,1,https://github.com/kalev,Add a destructor for AsRefString,1,[],https://github.com/hughsie/appstream-glib/pull/151,https://github.com/kalev,3,https://github.com/hughsie/appstream-glib/pull/151#issuecomment-275862519,"AsRefString uses a singleton hash table for deduplicating strings. This
is all ""possibly lost"" memory according to valgrind as the hash table
never gets destroyed.
This commit adds a custom destructor so that we can clean up the
singleton hash table as well and avoid unnecessary noise in valgrind
output.",attribute ((destructor)) should be supported on gcc and clang at least. There's a private gconstructor.h header file in glib we could copy to get additional msvc and sunpro compiler support too.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,151,2017-01-28T16:55:26Z,2017-01-28T17:45:33Z,2017-01-31T10:45:01Z,MERGED,True,6,0,1,https://github.com/kalev,Add a destructor for AsRefString,1,[],https://github.com/hughsie/appstream-glib/pull/151,https://github.com/hughsie,4,https://github.com/hughsie/appstream-glib/pull/151#issuecomment-275862596,"AsRefString uses a singleton hash table for deduplicating strings. This
is all ""possibly lost"" memory according to valgrind as the hash table
never gets destroyed.
This commit adds a custom destructor so that we can clean up the
singleton hash table as well and avoid unnecessary noise in valgrind
output.","Okay, lets wait for the person using msvc to provide the patch :)",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,152,2017-01-29T12:00:06Z,2017-01-30T12:38:15Z,2017-01-30T12:38:20Z,MERGED,True,29,26,3,https://github.com/kalev,Fix the build with gperf 3.1,3,[],https://github.com/hughsie/appstream-glib/pull/152,https://github.com/kalev,1,https://github.com/hughsie/appstream-glib/pull/152,,,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,152,2017-01-29T12:00:06Z,2017-01-30T12:38:15Z,2017-01-30T12:38:20Z,MERGED,True,29,26,3,https://github.com/kalev,Fix the build with gperf 3.1,3,[],https://github.com/hughsie/appstream-glib/pull/152,https://github.com/kalev,2,https://github.com/hughsie/appstream-glib/pull/152#issuecomment-275911334,,"An alternative way to fix this would be to add a configure check to detect the function signature, similar to how is done in systemd/systemd@c9f7b4d",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,152,2017-01-29T12:00:06Z,2017-01-30T12:38:15Z,2017-01-30T12:38:20Z,MERGED,True,29,26,3,https://github.com/kalev,Fix the build with gperf 3.1,3,[],https://github.com/hughsie/appstream-glib/pull/152,https://github.com/hughsie,3,https://github.com/hughsie/appstream-glib/pull/152#issuecomment-275942290,,"Could we do the 3rd section fix like libguestfs/libguestfs@004de6c ?
Richard.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,152,2017-01-29T12:00:06Z,2017-01-30T12:38:15Z,2017-01-30T12:38:20Z,MERGED,True,29,26,3,https://github.com/kalev,Fix the build with gperf 3.1,3,[],https://github.com/hughsie/appstream-glib/pull/152,https://github.com/kalev,4,https://github.com/hughsie/appstream-glib/pull/152#issuecomment-275945871,,You mean merge as-tag.c and as-tag.gperf together into one file?,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,152,2017-01-29T12:00:06Z,2017-01-30T12:38:15Z,2017-01-30T12:38:20Z,MERGED,True,29,26,3,https://github.com/kalev,Fix the build with gperf 3.1,3,[],https://github.com/hughsie/appstream-glib/pull/152,https://github.com/hughsie,5,https://github.com/hughsie/appstream-glib/pull/152#issuecomment-276033312,,"Well, if we do that it's a bit more tricky to support with-and-without gperf. Ideally not all of as-tag.c, but just _as_tag_from_gperf()",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,152,2017-01-29T12:00:06Z,2017-01-30T12:38:15Z,2017-01-30T12:38:20Z,MERGED,True,29,26,3,https://github.com/kalev,Fix the build with gperf 3.1,3,[],https://github.com/hughsie/appstream-glib/pull/152,https://github.com/kalev,6,https://github.com/hughsie/appstream-glib/pull/152#issuecomment-276052090,,Pushed a new approach that follows what systemd is doing after our irc discussion.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,156,2017-02-27T18:34:08Z,2017-02-27T19:56:40Z,2017-02-27T19:58:44Z,MERGED,True,1,0,1,https://github.com/piotrdrag,its: add <developer_name> to tags extracted for translation,1,[],https://github.com/hughsie/appstream-glib/pull/156,https://github.com/piotrdrag,1,https://github.com/hughsie/appstream-glib/pull/156,Fixes #155.,Fixes #155.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,157,2017-02-28T15:31:22Z,2017-02-28T15:32:50Z,2017-02-28T15:32:50Z,MERGED,True,40,0,2,https://github.com/iainlane,"as-node: Add back as_node_context_{get,set}_source_kind",1,[],https://github.com/hughsie/appstream-glib/pull/157,https://github.com/iainlane,1,https://github.com/hughsie/appstream-glib/pull/157,As discussed at 2557bb9,As discussed at 2557bb9,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,160,2017-03-16T07:14:54Z,2017-03-17T14:47:14Z,2017-03-27T07:20:53Z,CLOSED,False,16,2,2,https://github.com/timchen119,preserve 0x prefix in the version string less than 0xff,2,[],https://github.com/hughsie/appstream-glib/pull/160,https://github.com/timchen119,1,https://github.com/hughsie/appstream-glib/pull/160,"For hex version less than 0xff, the 0x prefix was being removed accidentally and later it may converted to wrong value. A use case is that in https://bugs.launchpad.net/bugs/1651552 when fwupdmgr parse firmware.inf in the .cab file with version 0x1a, it will first convert to 1a and later 1a is being treat as non-numeric content. The pull request should fix this issue by preserving the 0x prefix in the version string less than 0xff.","For hex version less than 0xff, the 0x prefix was being removed accidentally and later it may converted to wrong value. A use case is that in https://bugs.launchpad.net/bugs/1651552 when fwupdmgr parse firmware.inf in the .cab file with version 0x1a, it will first convert to 1a and later 1a is being treat as non-numeric content. The pull request should fix this issue by preserving the 0x prefix in the version string less than 0xff.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,160,2017-03-16T07:14:54Z,2017-03-17T14:47:14Z,2017-03-27T07:20:53Z,CLOSED,False,16,2,2,https://github.com/timchen119,preserve 0x prefix in the version string less than 0xff,2,[],https://github.com/hughsie/appstream-glib/pull/160,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/160#issuecomment-287161418,"For hex version less than 0xff, the 0x prefix was being removed accidentally and later it may converted to wrong value. A use case is that in https://bugs.launchpad.net/bugs/1651552 when fwupdmgr parse firmware.inf in the .cab file with version 0x1a, it will first convert to 1a and later 1a is being treat as non-numeric content. The pull request should fix this issue by preserving the 0x prefix in the version string less than 0xff.",Can you include some tests in as-self-test.c please.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,160,2017-03-16T07:14:54Z,2017-03-17T14:47:14Z,2017-03-27T07:20:53Z,CLOSED,False,16,2,2,https://github.com/timchen119,preserve 0x prefix in the version string less than 0xff,2,[],https://github.com/hughsie/appstream-glib/pull/160,https://github.com/timchen119,3,https://github.com/hughsie/appstream-glib/pull/160#issuecomment-287300874,"For hex version less than 0xff, the 0x prefix was being removed accidentally and later it may converted to wrong value. A use case is that in https://bugs.launchpad.net/bugs/1651552 when fwupdmgr parse firmware.inf in the .cab file with version 0x1a, it will first convert to 1a and later 1a is being treat as non-numeric content. The pull request should fix this issue by preserving the 0x prefix in the version string less than 0xff.","Added some tests, thanks!",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,160,2017-03-16T07:14:54Z,2017-03-17T14:47:14Z,2017-03-27T07:20:53Z,CLOSED,False,16,2,2,https://github.com/timchen119,preserve 0x prefix in the version string less than 0xff,2,[],https://github.com/hughsie/appstream-glib/pull/160,https://github.com/hughsie,4,https://github.com/hughsie/appstream-glib/pull/160#issuecomment-287374057,"For hex version less than 0xff, the 0x prefix was being removed accidentally and later it may converted to wrong value. A use case is that in https://bugs.launchpad.net/bugs/1651552 when fwupdmgr parse firmware.inf in the .cab file with version 0x1a, it will first convert to 1a and later 1a is being treat as non-numeric content. The pull request should fix this issue by preserving the 0x prefix in the version string less than 0xff.",I've pushed 1a327eb which fixes things in a slightly different way. Can you verify this fixes the original bug you see please. Thanks!,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,160,2017-03-16T07:14:54Z,2017-03-17T14:47:14Z,2017-03-27T07:20:53Z,CLOSED,False,16,2,2,https://github.com/timchen119,preserve 0x prefix in the version string less than 0xff,2,[],https://github.com/hughsie/appstream-glib/pull/160,https://github.com/timchen119,5,https://github.com/hughsie/appstream-glib/pull/160#issuecomment-289373358,"For hex version less than 0xff, the 0x prefix was being removed accidentally and later it may converted to wrong value. A use case is that in https://bugs.launchpad.net/bugs/1651552 when fwupdmgr parse firmware.inf in the .cab file with version 0x1a, it will first convert to 1a and later 1a is being treat as non-numeric content. The pull request should fix this issue by preserving the 0x prefix in the version string less than 0xff.",Confirmed 1a327eb fixes the original bug. Thanks!,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,161,2017-03-17T13:27:13Z,2019-02-06T12:07:31Z,2019-02-06T13:20:22Z,CLOSED,False,2,0,1,https://github.com/jbicha,as-app-validate: Allow MIT for metadata_license,1,[],https://github.com/hughsie/appstream-glib/pull/161,https://github.com/jbicha,1,https://github.com/hughsie/appstream-glib/pull/161,"According to the specification, MIT is acceptable for metadata_license.","According to the specification, MIT is acceptable for metadata_license.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,161,2017-03-17T13:27:13Z,2019-02-06T12:07:31Z,2019-02-06T13:20:22Z,CLOSED,False,2,0,1,https://github.com/jbicha,as-app-validate: Allow MIT for metadata_license,1,[],https://github.com/hughsie/appstream-glib/pull/161,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/161#issuecomment-287357723,"According to the specification, MIT is acceptable for metadata_license.","Urgh, @ximion was there any discussion on this? I need to run this past the RH legal team.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,161,2017-03-17T13:27:13Z,2019-02-06T12:07:31Z,2019-02-06T13:20:22Z,CLOSED,False,2,0,1,https://github.com/jbicha,as-app-validate: Allow MIT for metadata_license,1,[],https://github.com/hughsie/appstream-glib/pull/161,https://github.com/ximion,3,https://github.com/hughsie/appstream-glib/pull/161#issuecomment-287389354,"According to the specification, MIT is acceptable for metadata_license.","The MIT license was requested incredibly early, I think it has been on the list since the inception of the metadata_license tag. Weird that nobody noticed so far, in #127 apparently there even was no warning for it.
Anyway, I didn't even know that this is something that needs discussion, since the spec pretty much states ""all free permissive licenses"" and just gives examples for what that means. So in theory, people can put any license in there, in practice libappstream(-glib) limit the choices to a list of predefined ""OK"" licenses.
I had no idea that appstream-glib didn't accept MIT... I think quite a few projects are using that.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,161,2017-03-17T13:27:13Z,2019-02-06T12:07:31Z,2019-02-06T13:20:22Z,CLOSED,False,2,0,1,https://github.com/jbicha,as-app-validate: Allow MIT for metadata_license,1,[],https://github.com/hughsie/appstream-glib/pull/161,https://github.com/hughsie,4,https://github.com/hughsie/appstream-glib/pull/161#issuecomment-287391027,"According to the specification, MIT is acceptable for metadata_license.","The issue isn't so much that it's a permissive license, it needs to be a valid ""content"" license rather than a code license.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,161,2017-03-17T13:27:13Z,2019-02-06T12:07:31Z,2019-02-06T13:20:22Z,CLOSED,False,2,0,1,https://github.com/jbicha,as-app-validate: Allow MIT for metadata_license,1,[],https://github.com/hughsie/appstream-glib/pull/161,https://github.com/ximion,5,https://github.com/hughsie/appstream-glib/pull/161#issuecomment-287404762,"According to the specification, MIT is acceptable for metadata_license.","At time the spec says ""all permissive"" - should we restrict that to ""only licenses from this list""?
Btw, I think MIT/Expat shouldn't cause problems, as it adds no restrictions which make mixing the metadata with other data problematic.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,161,2017-03-17T13:27:13Z,2019-02-06T12:07:31Z,2019-02-06T13:20:22Z,CLOSED,False,2,0,1,https://github.com/jbicha,as-app-validate: Allow MIT for metadata_license,1,[],https://github.com/hughsie/appstream-glib/pull/161,https://github.com/hughsie,6,https://github.com/hughsie/appstream-glib/pull/161#issuecomment-287410553,"According to the specification, MIT is acceptable for metadata_license.","I think it certainly has to be from a hardcoded list. What license is the DEP-11 file, for instance? The Fedora AppStream file is listed as CC0 OR CC-BY... etc",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,161,2017-03-17T13:27:13Z,2019-02-06T12:07:31Z,2019-02-06T13:20:22Z,CLOSED,False,2,0,1,https://github.com/jbicha,as-app-validate: Allow MIT for metadata_license,1,[],https://github.com/hughsie/appstream-glib/pull/161,https://github.com/ximion,7,https://github.com/hughsie/appstream-glib/pull/161#issuecomment-287447545,"According to the specification, MIT is acceptable for metadata_license.","The DEP-11 stuff is handled like the rest of the archive metadata: ""For the individual licenses refer to the package files (debian/copyright)"".",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,161,2017-03-17T13:27:13Z,2019-02-06T12:07:31Z,2019-02-06T13:20:22Z,CLOSED,False,2,0,1,https://github.com/jbicha,as-app-validate: Allow MIT for metadata_license,1,[],https://github.com/hughsie/appstream-glib/pull/161,https://github.com/Conan-Kudo,8,https://github.com/hughsie/appstream-glib/pull/161#issuecomment-312616850,"According to the specification, MIT is acceptable for metadata_license.","I'm not sure it makes sense to have ""code"" licenses allowed for content, even ones like the MIT/Expat license.
@ximion The behavior for DEP-11 sounds like a cop-out. Aren't they supposed to render the license information in the AppStream metadata?",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,161,2017-03-17T13:27:13Z,2019-02-06T12:07:31Z,2019-02-06T13:20:22Z,CLOSED,False,2,0,1,https://github.com/jbicha,as-app-validate: Allow MIT for metadata_license,1,[],https://github.com/hughsie/appstream-glib/pull/161,https://github.com/ximion,9,https://github.com/hughsie/appstream-glib/pull/161#issuecomment-312623790,"According to the specification, MIT is acceptable for metadata_license.","@Conan-Kudo No, the spec actually only defines the metadata_license tag for metainfo files, not for the collection data.
Adding it wouldn't be a problem, but the gain of doing so wouldn't be huge (unless there is one of the permitted licenses which demands its name to be shown in the processed data, which I think isn't the case).
Also, the processed data contains information from other sources (.desktop files) as well, so I am not sure if we can just declare it FSFAP or whatever license is defined in the metainfo file.
OT: There is actually no clear distinction between code and content licenses, e.g. FSFAP or CC-0 count for both.
Worse, CC-0 actually demands a copy of it to be shipped with the source code (so does MIT), so I think the FSFAP license should be our default selected choice for this field.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,161,2017-03-17T13:27:13Z,2019-02-06T12:07:31Z,2019-02-06T13:20:22Z,CLOSED,False,2,0,1,https://github.com/jbicha,as-app-validate: Allow MIT for metadata_license,1,[],https://github.com/hughsie/appstream-glib/pull/161,https://github.com/Conan-Kudo,10,https://github.com/hughsie/appstream-glib/pull/161#issuecomment-312714156,"According to the specification, MIT is acceptable for metadata_license.","@ximion As far as I know, CC-BY should be satisfactory for this case, and everyone actually knows what that is...",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,161,2017-03-17T13:27:13Z,2019-02-06T12:07:31Z,2019-02-06T13:20:22Z,CLOSED,False,2,0,1,https://github.com/jbicha,as-app-validate: Allow MIT for metadata_license,1,[],https://github.com/hughsie/appstream-glib/pull/161,https://github.com/ximion,11,https://github.com/hughsie/appstream-glib/pull/161#issuecomment-312721875,"According to the specification, MIT is acceptable for metadata_license.","@Conan-Kudo There is no ""one license fits all"" many projects have different requirements...
From a perspective of Debian, all CC-* licenses are a bit nasty because they demand a copy of the license to be shipped with the source, and many upstream projects (who might only use CC-0 for the metainfo file) don't comply with that. So we have to file bugs etc., and additionally copy the whole license text into debian/copyright for documentation.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,161,2017-03-17T13:27:13Z,2019-02-06T12:07:31Z,2019-02-06T13:20:22Z,CLOSED,False,2,0,1,https://github.com/jbicha,as-app-validate: Allow MIT for metadata_license,1,[],https://github.com/hughsie/appstream-glib/pull/161,https://github.com/Conan-Kudo,12,https://github.com/hughsie/appstream-glib/pull/161#issuecomment-312736509,"According to the specification, MIT is acceptable for metadata_license.","@ximion What?
As far as I understand it, that's not true.
For example, CC-BY states that a link to the resource is sufficient (see §3(a)(1) and §3(a)(2)).
That applies across the entirety of the CC family.
The debian/copyright thing is a special burden from Debian. You could have just as easily added it to your common-licenses package and added a reference, just like you did for the GNU licenses. And the GNU licenses require verbatim copies shipped with it, which Debian blatantly ignores...",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,161,2017-03-17T13:27:13Z,2019-02-06T12:07:31Z,2019-02-06T13:20:22Z,CLOSED,False,2,0,1,https://github.com/jbicha,as-app-validate: Allow MIT for metadata_license,1,[],https://github.com/hughsie/appstream-glib/pull/161,https://github.com/ximion,13,https://github.com/hughsie/appstream-glib/pull/161#issuecomment-312739962,"According to the specification, MIT is acceptable for metadata_license.","For example, CC-BY states that a link to the resource is sufficient (see §3(a)(1) and §3(a)(2)).

And that link is usually nowhere to be seen.

The debian/copyright thing is a special burden from Debian. You could have just as easily added it to your common-licenses package

The licenses there are only extended in very rare events when the amount of packages using a particular license becomes high enough. This is not (yet?) the case for CC-BY licenses.

And the GNU licenses require verbatim copies shipped with it, which Debian blatantly ignores...

That is just wrong, it's one of the things our ftpmasters and QA tools look out for. You won't find any GPL-licensed source package without full GPL copy, and no binary package without debian/copyright file linking to the full GPL copy in common-licenses, which is available on each and every Debian system and can not be removed (as it's part of base-files, which also defines the root directory layout).",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,161,2017-03-17T13:27:13Z,2019-02-06T12:07:31Z,2019-02-06T13:20:22Z,CLOSED,False,2,0,1,https://github.com/jbicha,as-app-validate: Allow MIT for metadata_license,1,[],https://github.com/hughsie/appstream-glib/pull/161,https://github.com/Conan-Kudo,14,https://github.com/hughsie/appstream-glib/pull/161#issuecomment-312741420,"According to the specification, MIT is acceptable for metadata_license.","@ximion In the case of app centers like GNOME Software, the link is present. In the case of Debian with the copyright file, they're just doing it wrong.
And if your ftp masters are looking out for this, then why do none of them ship the GPL license that comes with the source code? Instead, you point them to common-licenses. There are scores of software targeting Debian and derivatives that don't ship the license because they believe it is sufficient to just point to some other copy. For CC licenses, this is fine. For GNU licenses, it is not.
I have gone through this pain before with other projects, because in Fedora, we ship the copy of the license included with the sources. We don't do any mangling, assumptions, or ignoring.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,161,2017-03-17T13:27:13Z,2019-02-06T12:07:31Z,2019-02-06T13:20:22Z,CLOSED,False,2,0,1,https://github.com/jbicha,as-app-validate: Allow MIT for metadata_license,1,[],https://github.com/hughsie/appstream-glib/pull/161,https://github.com/ximion,15,https://github.com/hughsie/appstream-glib/pull/161#issuecomment-312747677,"According to the specification, MIT is acceptable for metadata_license.","In the case of app centers like GNOME Software, the link is present.

Whether some other random tool shows a link has nothing to do with what the license text demands the project author to do, and you know that.

And if your ftp masters are looking out for this, then why do none of them ship the GPL license that comes with the source code?

Ehh, what? All sources ship the GPL license, if one is missing we ask upstream to include it.

Instead, you point them to common-licenses.

No, that is only for binary packages. And even there it's legit, because there is no Debian system in existence that does not ship a copy of the GPL, simply because you can not remove it without breaking the system or making something that is non-Debian (i.e. by patching base-files).
That is sufficient. Think of common-licenses as a deduplication thing for texts in debian/copyright. The debian/copyright file does not replace the full copy of the license upstream has to ship with the code and that must be present in an orig.tar.* tarball.
Each Debian package is considered to be part of Debian as a whole and is treated as such.
So, what was the actual topic of this bug again?",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,161,2017-03-17T13:27:13Z,2019-02-06T12:07:31Z,2019-02-06T13:20:22Z,CLOSED,False,2,0,1,https://github.com/jbicha,as-app-validate: Allow MIT for metadata_license,1,[],https://github.com/hughsie/appstream-glib/pull/161,https://github.com/hughsie,16,https://github.com/hughsie/appstream-glib/pull/161#issuecomment-461000752,"According to the specification, MIT is acceptable for metadata_license.",I think close this. MIT isn't a content license.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,161,2017-03-17T13:27:13Z,2019-02-06T12:07:31Z,2019-02-06T13:20:22Z,CLOSED,False,2,0,1,https://github.com/jbicha,as-app-validate: Allow MIT for metadata_license,1,[],https://github.com/hughsie/appstream-glib/pull/161,https://github.com/jbicha,17,https://github.com/hughsie/appstream-glib/pull/161#issuecomment-461001754,"According to the specification, MIT is acceptable for metadata_license.","Then we need to fix the specification.
https://codesearch.debian.net/search?q=metadata_license.*MIT",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,161,2017-03-17T13:27:13Z,2019-02-06T12:07:31Z,2019-02-06T13:20:22Z,CLOSED,False,2,0,1,https://github.com/jbicha,as-app-validate: Allow MIT for metadata_license,1,[],https://github.com/hughsie/appstream-glib/pull/161,https://github.com/jbicha,18,https://github.com/hughsie/appstream-glib/pull/161#issuecomment-461002179,"According to the specification, MIT is acceptable for metadata_license.","Unlike someone using say GPL for the metadata, Debian and Ubuntu does show apps (Telegnome, Beignet, etc.) using MIT in the GNOME Software app.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,161,2017-03-17T13:27:13Z,2019-02-06T12:07:31Z,2019-02-06T13:20:22Z,CLOSED,False,2,0,1,https://github.com/jbicha,as-app-validate: Allow MIT for metadata_license,1,[],https://github.com/hughsie/appstream-glib/pull/161,https://github.com/ximion,19,https://github.com/hughsie/appstream-glib/pull/161#issuecomment-461019585,"According to the specification, MIT is acceptable for metadata_license.","The MIT license was recognized as valid content license in libappstream since basically forever, so changing that back would be quite invasive.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,161,2017-03-17T13:27:13Z,2019-02-06T12:07:31Z,2019-02-06T13:20:22Z,CLOSED,False,2,0,1,https://github.com/jbicha,as-app-validate: Allow MIT for metadata_license,1,[],https://github.com/hughsie/appstream-glib/pull/161,https://github.com/hughsie,20,https://github.com/hughsie/appstream-glib/pull/161#issuecomment-461020252,"According to the specification, MIT is acceptable for metadata_license.","I'm just telling you what our legal team advised me. I'm not sure I can go into much more details here, but happy to expand in private.",True,{'CONFUSED': ['https://github.com/jbicha']}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,163,2017-03-28T04:14:01Z,2017-03-30T07:04:38Z,2017-03-31T09:44:26Z,MERGED,True,44,6,2,https://github.com/robert-ancell,Copy hash table keys from AsApp to avoid them being used after they've been freed,3,[],https://github.com/hughsie/appstream-glib/pull/163,https://github.com/robert-ancell,1,https://github.com/hughsie/appstream-glib/pull/163,"The hash tables currently reference the keys in the AsApp object, however this
fails in two cases:


If you insert two apps with the same ID into the same table the second app
replaces the first but the key is from the original one (confirmed in glib
source code). The first app is unreffed leaving the table to contain an invalid
key (or may occur later if a reference is held elsewhere).


There are two tables that contain GPtrArrays of apps. If AsApp in the array
that was used as the key is unreffed then the hash table again contains a freed
key.


I'm assuming these keys weren't copied to save memory, if that is important then
the keys will have to be reference counted or atoms used.","The hash tables currently reference the keys in the AsApp object, however this
fails in two cases:


If you insert two apps with the same ID into the same table the second app
replaces the first but the key is from the original one (confirmed in glib
source code). The first app is unreffed leaving the table to contain an invalid
key (or may occur later if a reference is held elsewhere).


There are two tables that contain GPtrArrays of apps. If AsApp in the array
that was used as the key is unreffed then the hash table again contains a freed
key.


I'm assuming these keys weren't copied to save memory, if that is important then
the keys will have to be reference counted or atoms used.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,163,2017-03-28T04:14:01Z,2017-03-30T07:04:38Z,2017-03-31T09:44:26Z,MERGED,True,44,6,2,https://github.com/robert-ancell,Copy hash table keys from AsApp to avoid them being used after they've been freed,3,[],https://github.com/hughsie/appstream-glib/pull/163,https://github.com/robert-ancell,2,https://github.com/hughsie/appstream-glib/pull/163#issuecomment-289658274,"The hash tables currently reference the keys in the AsApp object, however this
fails in two cases:


If you insert two apps with the same ID into the same table the second app
replaces the first but the key is from the original one (confirmed in glib
source code). The first app is unreffed leaving the table to contain an invalid
key (or may occur later if a reference is held elsewhere).


There are two tables that contain GPtrArrays of apps. If AsApp in the array
that was used as the key is unreffed then the hash table again contains a freed
key.


I'm assuming these keys weren't copied to save memory, if that is important then
the keys will have to be reference counted or atoms used.","This was found by running the following through valgrind on Ubuntu Zesty (code copied from gnome-software):
g_autoptr(AsStore) store = as_store_new ();
g_autoptr(GError) error = NULL;

if (!as_store_load (store,
                    AS_STORE_LOAD_FLAG_IGNORE_INVALID |
                    AS_STORE_LOAD_FLAG_APP_INFO_SYSTEM |
                    AS_STORE_LOAD_FLAG_APP_INFO_USER |
                    AS_STORE_LOAD_FLAG_APPDATA |
                    AS_STORE_LOAD_FLAG_DESKTOP |
                    AS_STORE_LOAD_FLAG_APP_INSTALL,
                    NULL,
                    &error)) {
     g_printerr (""Failed to load store: %s\n"", error->message);
     return EXIT_FAILURE;
}

The app in this case that was causing the issue is org.gnome.Software.desktop (which I found quite funny to be crashing itself).",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,163,2017-03-28T04:14:01Z,2017-03-30T07:04:38Z,2017-03-31T09:44:26Z,MERGED,True,44,6,2,https://github.com/robert-ancell,Copy hash table keys from AsApp to avoid them being used after they've been freed,3,[],https://github.com/hughsie/appstream-glib/pull/163,https://github.com/robert-ancell,3,https://github.com/hughsie/appstream-glib/pull/163#issuecomment-289658435,"The hash tables currently reference the keys in the AsApp object, however this
fails in two cases:


If you insert two apps with the same ID into the same table the second app
replaces the first but the key is from the original one (confirmed in glib
source code). The first app is unreffed leaving the table to contain an invalid
key (or may occur later if a reference is held elsewhere).


There are two tables that contain GPtrArrays of apps. If AsApp in the array
that was used as the key is unreffed then the hash table again contains a freed
key.


I'm assuming these keys weren't copied to save memory, if that is important then
the keys will have to be reference counted or atoms used.",This is the main crasher in Ubuntu with gnome-software in Ubuntu Zesty.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,163,2017-03-28T04:14:01Z,2017-03-30T07:04:38Z,2017-03-31T09:44:26Z,MERGED,True,44,6,2,https://github.com/robert-ancell,Copy hash table keys from AsApp to avoid them being used after they've been freed,3,[],https://github.com/hughsie/appstream-glib/pull/163,https://github.com/hughsie,4,https://github.com/hughsie/appstream-glib/pull/163#issuecomment-289680556,"The hash tables currently reference the keys in the AsApp object, however this
fails in two cases:


If you insert two apps with the same ID into the same table the second app
replaces the first but the key is from the original one (confirmed in glib
source code). The first app is unreffed leaving the table to contain an invalid
key (or may occur later if a reference is held elsewhere).


There are two tables that contain GPtrArrays of apps. If AsApp in the array
that was used as the key is unreffed then the hash table again contains a freed
key.


I'm assuming these keys weren't copied to save memory, if that is important then
the keys will have to be reference counted or atoms used.",Can you also write a self test (that crashes) that's also fixed by this please. Something little and self contained in as-self-test -- thanks.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,163,2017-03-28T04:14:01Z,2017-03-30T07:04:38Z,2017-03-31T09:44:26Z,MERGED,True,44,6,2,https://github.com/robert-ancell,Copy hash table keys from AsApp to avoid them being used after they've been freed,3,[],https://github.com/hughsie/appstream-glib/pull/163,https://github.com/hughsie,5,https://github.com/hughsie/appstream-glib/pull/163#issuecomment-290009704,"The hash tables currently reference the keys in the AsApp object, however this
fails in two cases:


If you insert two apps with the same ID into the same table the second app
replaces the first but the key is from the original one (confirmed in glib
source code). The first app is unreffed leaving the table to contain an invalid
key (or may occur later if a reference is held elsewhere).


There are two tables that contain GPtrArrays of apps. If AsApp in the array
that was used as the key is unreffed then the hash table again contains a freed
key.


I'm assuming these keys weren't copied to save memory, if that is important then
the keys will have to be reference counted or atoms used.",Just the self tests then we're good to roll up and push. Thanks.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,163,2017-03-28T04:14:01Z,2017-03-30T07:04:38Z,2017-03-31T09:44:26Z,MERGED,True,44,6,2,https://github.com/robert-ancell,Copy hash table keys from AsApp to avoid them being used after they've been freed,3,[],https://github.com/hughsie/appstream-glib/pull/163,https://github.com/robert-ancell,6,https://github.com/hughsie/appstream-glib/pull/163#issuecomment-290010648,"The hash tables currently reference the keys in the AsApp object, however this
fails in two cases:


If you insert two apps with the same ID into the same table the second app
replaces the first but the key is from the original one (confirmed in glib
source code). The first app is unreffed leaving the table to contain an invalid
key (or may occur later if a reference is held elsewhere).


There are two tables that contain GPtrArrays of apps. If AsApp in the array
that was used as the key is unreffed then the hash table again contains a freed
key.


I'm assuming these keys weren't copied to save memory, if that is important then
the keys will have to be reference counted or atoms used.","Ack, still working on it. I think I can modify it to not copy the keys, but it's not playing nice :(",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,163,2017-03-28T04:14:01Z,2017-03-30T07:04:38Z,2017-03-31T09:44:26Z,MERGED,True,44,6,2,https://github.com/robert-ancell,Copy hash table keys from AsApp to avoid them being used after they've been freed,3,[],https://github.com/hughsie/appstream-glib/pull/163,https://github.com/robert-ancell,7,https://github.com/hughsie/appstream-glib/pull/163#issuecomment-290319546,"The hash tables currently reference the keys in the AsApp object, however this
fails in two cases:


If you insert two apps with the same ID into the same table the second app
replaces the first but the key is from the original one (confirmed in glib
source code). The first app is unreffed leaving the table to contain an invalid
key (or may occur later if a reference is held elsewhere).


There are two tables that contain GPtrArrays of apps. If AsApp in the array
that was used as the key is unreffed then the hash table again contains a freed
key.


I'm assuming these keys weren't copied to save memory, if that is important then
the keys will have to be reference counted or atoms used.","The test case is odd, because it is a quite specific set of actions. It also runs fine normally, unless you are checking the output of valgrind (or happen to have a system that crashes on the invalid memory access).
I gave up making the hash tables not copy the keys, it just makes too flaky.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,163,2017-03-28T04:14:01Z,2017-03-30T07:04:38Z,2017-03-31T09:44:26Z,MERGED,True,44,6,2,https://github.com/robert-ancell,Copy hash table keys from AsApp to avoid them being used after they've been freed,3,[],https://github.com/hughsie/appstream-glib/pull/163,https://github.com/robert-ancell,8,https://github.com/hughsie/appstream-glib/pull/163#issuecomment-290320618,"The hash tables currently reference the keys in the AsApp object, however this
fails in two cases:


If you insert two apps with the same ID into the same table the second app
replaces the first but the key is from the original one (confirmed in glib
source code). The first app is unreffed leaving the table to contain an invalid
key (or may occur later if a reference is held elsewhere).


There are two tables that contain GPtrArrays of apps. If AsApp in the array
that was used as the key is unreffed then the hash table again contains a freed
key.


I'm assuming these keys weren't copied to save memory, if that is important then
the keys will have to be reference counted or atoms used.","The actual case on my system that was causing this:

The store loading the gnome-software metadata from the .desktop file (priority -1)
The store loading the .appdata.xml file for gnome-software, and merging it with the .desktop file content (priority -1)
The store loading the gnome-software metadata from the YAML files, replacing the previous data (priority 0).

At least once in the above the merging and replacing referred to the new AsApp object using the ID key from one of the previous AsApp objects.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,163,2017-03-28T04:14:01Z,2017-03-30T07:04:38Z,2017-03-31T09:44:26Z,MERGED,True,44,6,2,https://github.com/robert-ancell,Copy hash table keys from AsApp to avoid them being used after they've been freed,3,[],https://github.com/hughsie/appstream-glib/pull/163,https://github.com/smcv,9,https://github.com/hughsie/appstream-glib/pull/163#issuecomment-290668344,"The hash tables currently reference the keys in the AsApp object, however this
fails in two cases:


If you insert two apps with the same ID into the same table the second app
replaces the first but the key is from the original one (confirmed in glib
source code). The first app is unreffed leaving the table to contain an invalid
key (or may occur later if a reference is held elsewhere).


There are two tables that contain GPtrArrays of apps. If AsApp in the array
that was used as the key is unreffed then the hash table again contains a freed
key.


I'm assuming these keys weren't copied to save memory, if that is important then
the keys will have to be reference counted or atoms used.","I gave up making the hash tables not copy the keys, it just makes too flaky.

If the keys are ""borrowed"" from a struct member of the values, g_hash_table_replace() is the usual trick. But if it isn't obvious how to do it correctly, copying the keys is much simpler - obviously-correct is usually better than correct-but-subtle.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,166,2017-05-10T13:03:36Z,2017-05-10T13:07:37Z,2017-05-10T13:08:23Z,MERGED,True,47,12,1,https://github.com/ebassi,build: Improve build-api wrapper for Meson,1,[],https://github.com/hughsie/appstream-glib/pull/166,https://github.com/ebassi,1,https://github.com/hughsie/appstream-glib/pull/166,"Add all the existing options, and allow calling the configure script
without a builddir.","Add all the existing options, and allow calling the configure script
without a builddir.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,167,2017-05-10T13:23:37Z,2017-05-10T13:33:00Z,2017-05-10T13:33:03Z,MERGED,True,6,2,3,https://github.com/ebassi,Conditionally generate docs,3,[],https://github.com/hughsie/appstream-glib/pull/167,https://github.com/ebassi,1,https://github.com/hughsie/appstream-glib/pull/167,"In some environments generating documentation is unnecessary, or downright impossible.","In some environments generating documentation is unnecessary, or downright impossible.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,172,2017-06-15T16:34:59Z,2019-02-06T14:09:06Z,2019-02-06T14:09:06Z,CLOSED,False,10,2,3,https://github.com/iainlane,tests: Fix 'gcab' executable requirement,1,[],https://github.com/hughsie/appstream-glib/pull/172,https://github.com/iainlane,1,https://github.com/hughsie/appstream-glib/pull/172,"I noticed that we were trying to run this test even though we hadn't built the file. It depends on 'gcab' (exe) but we check for libgcab the library.
I guess you could do this dynamically too, to avoid the need for the extra define. Let me know if you want that instead.","I noticed that we were trying to run this test even though we hadn't built the file. It depends on 'gcab' (exe) but we check for libgcab the library.
I guess you could do this dynamically too, to avoid the need for the extra define. Let me know if you want that instead.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,172,2017-06-15T16:34:59Z,2019-02-06T14:09:06Z,2019-02-06T14:09:06Z,CLOSED,False,10,2,3,https://github.com/iainlane,tests: Fix 'gcab' executable requirement,1,[],https://github.com/hughsie/appstream-glib/pull/172,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/172#issuecomment-308797445,"I noticed that we were trying to run this test even though we hadn't built the file. It depends on 'gcab' (exe) but we check for libgcab the library.
I guess you could do this dynamically too, to avoid the need for the extra define. Let me know if you want that instead.","Is there a case where we want the library but not the binary, or vice versa? It seems to me we just want a big HAVE_GCAB that checks for the binary and the library.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,172,2017-06-15T16:34:59Z,2019-02-06T14:09:06Z,2019-02-06T14:09:06Z,CLOSED,False,10,2,3,https://github.com/iainlane,tests: Fix 'gcab' executable requirement,1,[],https://github.com/hughsie/appstream-glib/pull/172,https://github.com/iainlane,3,https://github.com/hughsie/appstream-glib/pull/172#issuecomment-308800048,"I noticed that we were trying to run this test even though we hadn't built the file. It depends on 'gcab' (exe) but we check for libgcab the library.
I guess you could do this dynamically too, to avoid the need for the extra define. Let me know if you want that instead.","We only actually use the executable in as-builder, and meson.build already checks for it in that case. libappstream-glib itself doesn't require it AFAICS - just its testsuite for this one test.
Can do it like that if you want, it's just asking for a little bit more than is strictly required.
(Actually I just realised that HAVE_GCAB_EXE implies HAVE_GCAB, so we don't need the && in the current proposal.)",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,172,2017-06-15T16:34:59Z,2019-02-06T14:09:06Z,2019-02-06T14:09:06Z,CLOSED,False,10,2,3,https://github.com/iainlane,tests: Fix 'gcab' executable requirement,1,[],https://github.com/hughsie/appstream-glib/pull/172,https://github.com/iainlane,4,https://github.com/hughsie/appstream-glib/pull/172#issuecomment-309009965,"I noticed that we were trying to run this test even though we hadn't built the file. It depends on 'gcab' (exe) but we check for libgcab the library.
I guess you could do this dynamically too, to avoid the need for the extra define. Let me know if you want that instead.","Sorry, I wasn't clear - do you want me to change it like you described or do you accept my argument? :-)",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,172,2017-06-15T16:34:59Z,2019-02-06T14:09:06Z,2019-02-06T14:09:06Z,CLOSED,False,10,2,3,https://github.com/iainlane,tests: Fix 'gcab' executable requirement,1,[],https://github.com/hughsie/appstream-glib/pull/172,https://github.com/hughsie,5,https://github.com/hughsie/appstream-glib/pull/172#issuecomment-309028399,"I noticed that we were trying to run this test even though we hadn't built the file. It depends on 'gcab' (exe) but we check for libgcab the library.
I guess you could do this dynamically too, to avoid the need for the extra define. Let me know if you want that instead.",build_by_default seems to be upsetting Travis. Is there any way we can avoid bumping the required meson version?,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,172,2017-06-15T16:34:59Z,2019-02-06T14:09:06Z,2019-02-06T14:09:06Z,CLOSED,False,10,2,3,https://github.com/iainlane,tests: Fix 'gcab' executable requirement,1,[],https://github.com/hughsie/appstream-glib/pull/172,https://github.com/ignatenkobrain,6,https://github.com/hughsie/appstream-glib/pull/172#issuecomment-309030941,"I noticed that we were trying to run this test even though we hadn't built the file. It depends on 'gcab' (exe) but we check for libgcab the library.
I guess you could do this dynamically too, to avoid the need for the extra define. Let me know if you want that instead.","Actually, 0.38.0 is quite old... I don't think there is problem with bumping that.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,172,2017-06-15T16:34:59Z,2019-02-06T14:09:06Z,2019-02-06T14:09:06Z,CLOSED,False,10,2,3,https://github.com/iainlane,tests: Fix 'gcab' executable requirement,1,[],https://github.com/hughsie/appstream-glib/pull/172,https://github.com/ximion,7,https://github.com/hughsie/appstream-glib/pull/172#issuecomment-309043298,"I noticed that we were trying to run this test even though we hadn't built the file. It depends on 'gcab' (exe) but we check for libgcab the library.
I guess you could do this dynamically too, to avoid the need for the extra define. Let me know if you want that instead.","@hughsie Bump it, there shouldn't be an issue with that for Debian (except for backporting, obviously, but I think Meson will receive a backport anyway).",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,172,2017-06-15T16:34:59Z,2019-02-06T14:09:06Z,2019-02-06T14:09:06Z,CLOSED,False,10,2,3,https://github.com/iainlane,tests: Fix 'gcab' executable requirement,1,[],https://github.com/hughsie/appstream-glib/pull/172,https://github.com/Conan-Kudo,8,https://github.com/hughsie/appstream-glib/pull/172#issuecomment-335144123,"I noticed that we were trying to run this test even though we hadn't built the file. It depends on 'gcab' (exe) but we check for libgcab the library.
I guess you could do this dynamically too, to avoid the need for the extra define. Let me know if you want that instead.","@ximion Do you have a solution to make it pass on Debian Stretch?
$ docker run -t -v `pwd`:/build appstream-glib-debian-stretch ./contrib/ci/build_and_test.sh -Denable-rpm=false -Denable-dep11=false

WARNING: You are using 'ANSI_X3.4-1968' which is not a a Unicode-compatible locale.

WARNING: You might see errors if you use UTF-8 strings as filenames, as strings, or as file contents.

WARNING: Please switch to a UTF-8 locale for your platform.

The Meson build system

Version: 0.37.1

Source dir: /build

Build dir: /build/build

Build type: native build


Meson encountered an error in file meson.build, line 1, column 0:

Meson version is 0.37.1 but project requires >=0.38.0.



The command ""docker run -t -v `pwd`:/build appstream-glib-debian-stretch ./contrib/ci/build_and_test.sh -Denable-rpm=false -Denable-dep11=false"" exited with 1.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,172,2017-06-15T16:34:59Z,2019-02-06T14:09:06Z,2019-02-06T14:09:06Z,CLOSED,False,10,2,3,https://github.com/iainlane,tests: Fix 'gcab' executable requirement,1,[],https://github.com/hughsie/appstream-glib/pull/172,https://github.com/ximion,9,https://github.com/hughsie/appstream-glib/pull/172#issuecomment-335147650,"I noticed that we were trying to run this test even though we hadn't built the file. It depends on 'gcab' (exe) but we check for libgcab the library.
I guess you could do this dynamically too, to avoid the need for the extra define. Let me know if you want that instead.",@Conan-Kudo Yes. Install a newer Meson from stretch-backports :-P,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,172,2017-06-15T16:34:59Z,2019-02-06T14:09:06Z,2019-02-06T14:09:06Z,CLOSED,False,10,2,3,https://github.com/iainlane,tests: Fix 'gcab' executable requirement,1,[],https://github.com/hughsie/appstream-glib/pull/172,https://github.com/hughsie,10,https://github.com/hughsie/appstream-glib/pull/172#issuecomment-461001004,"I noticed that we were trying to run this test even though we hadn't built the file. It depends on 'gcab' (exe) but we check for libgcab the library.
I guess you could do this dynamically too, to avoid the need for the extra define. Let me know if you want that instead.",@iainlane can you rebase this please. Thanks.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,172,2017-06-15T16:34:59Z,2019-02-06T14:09:06Z,2019-02-06T14:09:06Z,CLOSED,False,10,2,3,https://github.com/iainlane,tests: Fix 'gcab' executable requirement,1,[],https://github.com/hughsie/appstream-glib/pull/172,https://github.com/iainlane,11,https://github.com/hughsie/appstream-glib/pull/172#issuecomment-461034618,"I noticed that we were trying to run this test even though we hadn't built the file. It depends on 'gcab' (exe) but we check for libgcab the library.
I guess you could do this dynamically too, to avoid the need for the extra define. Let me know if you want that instead.","@hughsie is it right that since d301f0c we don't actually require gcab any more? If so, this can be closed.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,172,2017-06-15T16:34:59Z,2019-02-06T14:09:06Z,2019-02-06T14:09:06Z,CLOSED,False,10,2,3,https://github.com/iainlane,tests: Fix 'gcab' executable requirement,1,[],https://github.com/hughsie/appstream-glib/pull/172,https://github.com/hughsie,12,https://github.com/hughsie/appstream-glib/pull/172#issuecomment-461035469,"I noticed that we were trying to run this test even though we hadn't built the file. It depends on 'gcab' (exe) but we check for libgcab the library.
I guess you could do this dynamically too, to avoid the need for the extra define. Let me know if you want that instead.",My kind of bug. Thanks for verifying.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,173,2017-06-16T12:15:26Z,2017-06-16T12:17:27Z,2017-06-16T12:19:25Z,MERGED,True,2,2,1,https://github.com/iainlane,as-app-builder: Don't cast gsize to guint32 when getting file length,1,[],https://github.com/hughsie/appstream-glib/pull/173,https://github.com/iainlane,1,https://github.com/hughsie/appstream-glib/pull/173,"Ok, here's another one!
On Ubuntu/Debian s390x, the test as_test_app_builder_qt_func fails.
As:ERROR:../libappstream-glib/as-self-test.c:418:as_test_app_builder_qt_func: assertion failed (error == NULL): file /home/ubuntu/appstream-glib-0.7.0~git20170615/data/tests/usr/share/kdeapp/translations/kdeapp_fr.qm is invalid (as-app-error-quark, 0)

I spent ages thinking this was an endianness problem, but then I actually looked at the code and it was the len < sizeof(qm_magic) that was failing, because len is 0. To be honest I'm not exactly sure why the cast doesn't work, but hey ho - it seems to be not required here.","Ok, here's another one!
On Ubuntu/Debian s390x, the test as_test_app_builder_qt_func fails.
As:ERROR:../libappstream-glib/as-self-test.c:418:as_test_app_builder_qt_func: assertion failed (error == NULL): file /home/ubuntu/appstream-glib-0.7.0~git20170615/data/tests/usr/share/kdeapp/translations/kdeapp_fr.qm is invalid (as-app-error-quark, 0)

I spent ages thinking this was an endianness problem, but then I actually looked at the code and it was the len < sizeof(qm_magic) that was failing, because len is 0. To be honest I'm not exactly sure why the cast doesn't work, but hey ho - it seems to be not required here.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,173,2017-06-16T12:15:26Z,2017-06-16T12:17:27Z,2017-06-16T12:19:25Z,MERGED,True,2,2,1,https://github.com/iainlane,as-app-builder: Don't cast gsize to guint32 when getting file length,1,[],https://github.com/hughsie/appstream-glib/pull/173,https://github.com/iainlane,2,https://github.com/hughsie/appstream-glib/pull/173#issuecomment-309011451,"Ok, here's another one!
On Ubuntu/Debian s390x, the test as_test_app_builder_qt_func fails.
As:ERROR:../libappstream-glib/as-self-test.c:418:as_test_app_builder_qt_func: assertion failed (error == NULL): file /home/ubuntu/appstream-glib-0.7.0~git20170615/data/tests/usr/share/kdeapp/translations/kdeapp_fr.qm is invalid (as-app-error-quark, 0)

I spent ages thinking this was an endianness problem, but then I actually looked at the code and it was the len < sizeof(qm_magic) that was failing, because len is 0. To be honest I'm not exactly sure why the cast doesn't work, but hey ho - it seems to be not required here.","I'm only finding these issues now because we had disabled the testsuite at build-time before, and I just turned it back on.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,173,2017-06-16T12:15:26Z,2017-06-16T12:17:27Z,2017-06-16T12:19:25Z,MERGED,True,2,2,1,https://github.com/iainlane,as-app-builder: Don't cast gsize to guint32 when getting file length,1,[],https://github.com/hughsie/appstream-glib/pull/173,https://github.com/iainlane,3,https://github.com/hughsie/appstream-glib/pull/173#issuecomment-309012054,"Ok, here's another one!
On Ubuntu/Debian s390x, the test as_test_app_builder_qt_func fails.
As:ERROR:../libappstream-glib/as-self-test.c:418:as_test_app_builder_qt_func: assertion failed (error == NULL): file /home/ubuntu/appstream-glib-0.7.0~git20170615/data/tests/usr/share/kdeapp/translations/kdeapp_fr.qm is invalid (as-app-error-quark, 0)

I spent ages thinking this was an endianness problem, but then I actually looked at the code and it was the len < sizeof(qm_magic) that was failing, because len is 0. To be honest I'm not exactly sure why the cast doesn't work, but hey ho - it seems to be not required here.","PHWOAR that was fast, thanks!",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,176,2017-07-07T14:54:42Z,2018-08-06T14:00:21Z,2018-08-06T14:00:21Z,CLOSED,False,147,0,2,https://github.com/fmuellner,store: Provide async variants of load functions,1,[],https://github.com/hughsie/appstream-glib/pull/176,https://github.com/fmuellner,1,https://github.com/hughsie/appstream-glib/pull/176,"The existing functions may block, which isn't ideal in IO-sensitive
contexts. To address this, add async variants that run the functions
in a thread.","The existing functions may block, which isn't ideal in IO-sensitive
contexts. To address this, add async variants that run the functions
in a thread.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,176,2017-07-07T14:54:42Z,2018-08-06T14:00:21Z,2018-08-06T14:00:21Z,CLOSED,False,147,0,2,https://github.com/fmuellner,store: Provide async variants of load functions,1,[],https://github.com/hughsie/appstream-glib/pull/176,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/176#issuecomment-313705713,"The existing functions may block, which isn't ideal in IO-sensitive
contexts. To address this, add async variants that run the functions
in a thread.",Can you use 8-char tabs please. Otherwise LGTM.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,176,2017-07-07T14:54:42Z,2018-08-06T14:00:21Z,2018-08-06T14:00:21Z,CLOSED,False,147,0,2,https://github.com/fmuellner,store: Provide async variants of load functions,1,[],https://github.com/hughsie/appstream-glib/pull/176,https://github.com/fmuellner,3,https://github.com/hughsie/appstream-glib/pull/176#issuecomment-367965562,"The existing functions may block, which isn't ideal in IO-sensitive
contexts. To address this, add async variants that run the functions
in a thread.",Ping?,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,176,2017-07-07T14:54:42Z,2018-08-06T14:00:21Z,2018-08-06T14:00:21Z,CLOSED,False,147,0,2,https://github.com/fmuellner,store: Provide async variants of load functions,1,[],https://github.com/hughsie/appstream-glib/pull/176,https://github.com/hughsie,4,https://github.com/hughsie/appstream-glib/pull/176#issuecomment-367967611,"The existing functions may block, which isn't ideal in IO-sensitive
contexts. To address this, add async variants that run the functions
in a thread.","Sorry, I dropped the ball on this. A few tiny nits, and then LGTM.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,176,2017-07-07T14:54:42Z,2018-08-06T14:00:21Z,2018-08-06T14:00:21Z,CLOSED,False,147,0,2,https://github.com/fmuellner,store: Provide async variants of load functions,1,[],https://github.com/hughsie/appstream-glib/pull/176,https://github.com/hughsie,5,https://github.com/hughsie/appstream-glib/pull/176#issuecomment-410717790,"The existing functions may block, which isn't ideal in IO-sensitive
contexts. To address this, add async variants that run the functions
in a thread.","Fixed up the Since lines, and pushed, thanks.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,178,2017-07-10T13:02:11Z,2017-07-10T13:09:37Z,2017-07-10T13:09:37Z,MERGED,True,11,0,1,https://github.com/iainlane,Support CompulsoryForDesktops in YAML,1,[],https://github.com/hughsie/appstream-glib/pull/178,https://github.com/iainlane,1,https://github.com/hughsie/appstream-glib/pull/178,"So that software centres don't present them as removable.
Closes #175","So that software centres don't present them as removable.
Closes #175",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,178,2017-07-10T13:02:11Z,2017-07-10T13:09:37Z,2017-07-10T13:09:37Z,MERGED,True,11,0,1,https://github.com/iainlane,Support CompulsoryForDesktops in YAML,1,[],https://github.com/hughsie/appstream-glib/pull/178,https://github.com/iainlane,2,https://github.com/hughsie/appstream-glib/pull/178#issuecomment-314098658,"So that software centres don't present them as removable.
Closes #175",as requested on IRC!,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,180,2017-07-24T13:48:26Z,2017-07-24T13:57:32Z,2017-07-24T14:09:49Z,MERGED,True,6,6,1,https://github.com/Conan-Kudo,Have plugins link with asglib along with asbuilder,1,[],https://github.com/hughsie/appstream-glib/pull/180,https://github.com/Conan-Kudo,1,https://github.com/hughsie/appstream-glib/pull/180,"This fixes the build for appstream-glib on Mageia.
Fixes #179","This fixes the build for appstream-glib on Mageia.
Fixes #179",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,182,2017-07-25T14:50:59Z,2017-07-26T12:13:09Z,2017-07-27T11:08:49Z,MERGED,True,40,35,4,https://github.com/pohly,simplify build,2,[],https://github.com/hughsie/appstream-glib/pull/182,https://github.com/pohly,1,https://github.com/hughsie/appstream-glib/pull/182,"I'm working on packaging fwupd for OpenEmbedded, or more specifically,
https://github.com/intel/intel-iot-refkit.
OE currently has technical problems with gobject-introspection when
using meson. This is going to be addressed eventually, but some
intermediate solution is needed. As gir data is not needed for fwupd,
it would be great if it could be made optional. That might also be
useful in other builds that try to build only what's really needed.
I also found that the dependency checking was a bit too broad and
always pulled in gdk.","I'm working on packaging fwupd for OpenEmbedded, or more specifically,
https://github.com/intel/intel-iot-refkit.
OE currently has technical problems with gobject-introspection when
using meson. This is going to be addressed eventually, but some
intermediate solution is needed. As gir data is not needed for fwupd,
it would be great if it could be made optional. That might also be
useful in other builds that try to build only what's really needed.
I also found that the dependency checking was a bit too broad and
always pulled in gdk.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,182,2017-07-25T14:50:59Z,2017-07-26T12:13:09Z,2017-07-27T11:08:49Z,MERGED,True,40,35,4,https://github.com/pohly,simplify build,2,[],https://github.com/hughsie/appstream-glib/pull/182,https://github.com/pohly,2,https://github.com/hughsie/appstream-glib/pull/182#issuecomment-318029842,"I'm working on packaging fwupd for OpenEmbedded, or more specifically,
https://github.com/intel/intel-iot-refkit.
OE currently has technical problems with gobject-introspection when
using meson. This is going to be addressed eventually, but some
intermediate solution is needed. As gir data is not needed for fwupd,
it would be great if it could be made optional. That might also be
useful in other builds that try to build only what's really needed.
I also found that the dependency checking was a bit too broad and
always pulled in gdk.","I've pushed revised patches. But before you merge, please let me also do some more testing locally. So far I've only made change without testing the resulting patches with OE.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,182,2017-07-25T14:50:59Z,2017-07-26T12:13:09Z,2017-07-27T11:08:49Z,MERGED,True,40,35,4,https://github.com/pohly,simplify build,2,[],https://github.com/hughsie/appstream-glib/pull/182,https://github.com/hughsie,3,https://github.com/hughsie/appstream-glib/pull/182#issuecomment-318030480,"I'm working on packaging fwupd for OpenEmbedded, or more specifically,
https://github.com/intel/intel-iot-refkit.
OE currently has technical problems with gobject-introspection when
using meson. This is going to be addressed eventually, but some
intermediate solution is needed. As gir data is not needed for fwupd,
it would be great if it could be made optional. That might also be
useful in other builds that try to build only what's really needed.
I also found that the dependency checking was a bit too broad and
always pulled in gdk.","Okay, both patches look fine to me, so yell when you've completed testing. I'd also be interested in any other ""pain points"" you experienced when trying to import fwupd.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,182,2017-07-25T14:50:59Z,2017-07-26T12:13:09Z,2017-07-27T11:08:49Z,MERGED,True,40,35,4,https://github.com/pohly,simplify build,2,[],https://github.com/hughsie/appstream-glib/pull/182,https://github.com/pohly,4,https://github.com/hughsie/appstream-glib/pull/182#issuecomment-318034433,"I'm working on packaging fwupd for OpenEmbedded, or more specifically,
https://github.com/intel/intel-iot-refkit.
OE currently has technical problems with gobject-introspection when
using meson. This is going to be addressed eventually, but some
intermediate solution is needed. As gir data is not needed for fwupd,
it would be great if it could be made optional. That might also be
useful in other builds that try to build only what's really needed.
I also found that the dependency checking was a bit too broad and
always pulled in gdk.","Patches are fine, also for fwupd.
Regarding pain points: the number of ""new"" libraries was a bit of work (libgusb, gcab). Besides providing the recipes, I also need to get the new components reviewed with regards to software quality, release processes, etc. You can help with that by clearly documenting whether you do automatic builds, static code analysis, etc. #181 is related to that.
I currently have no hardware to test it with - not much you can do about that, though ;-}
The dependency on polkit is problematic in an embedded device. It's overkill and drags in a JavaScript engine. The current solution is to use the polkit client library (so no changes needed in your code) with a pokit replacement service that implements the polkit D-Bus interface (see https://github.com/ostroproject/groupcheck).
Finally, some mechanism for feeding updates into fwupd without devices polling for updates would be useful. I'll file an enhancement request for that.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,182,2017-07-25T14:50:59Z,2017-07-26T12:13:09Z,2017-07-27T11:08:49Z,MERGED,True,40,35,4,https://github.com/pohly,simplify build,2,[],https://github.com/hughsie/appstream-glib/pull/182,https://github.com/hughsie,5,https://github.com/hughsie/appstream-glib/pull/182#issuecomment-318037197,"I'm working on packaging fwupd for OpenEmbedded, or more specifically,
https://github.com/intel/intel-iot-refkit.
OE currently has technical problems with gobject-introspection when
using meson. This is going to be addressed eventually, but some
intermediate solution is needed. As gir data is not needed for fwupd,
it would be great if it could be made optional. That might also be
useful in other builds that try to build only what's really needed.
I also found that the dependency checking was a bit too broad and
always pulled in gdk.","Patches are fine, also for fwupd.

Can you push the branch for fwupd with the new parameter name please.

You can help with that by clearly documenting whether you do automatic builds, static code analysis

Right, I'm open for ideas here. I'm slowly converting all my projects to using Travis-CI for each commit, but each tarball release is checked using clang, coverity and valgrind -- as all of these components are in RHEL. The review process for RHEL is arduous but does mean the code is presumably high quality.
I don't know a formal way of saying all that, so ideas welcome.

I currently have no hardware to test it with - not much you can do about that, though ;-}

If you send me an email with your physical address I can send you a free PCB (it's really a ColorHug-v1 that failed QA and is unrepairable) that pretends it's a DFU device. I use one of those for the hardware.py checks that test downloading, deploying and downgrading a real hardware device.

The dependency on polkit is problematic in an embedded device.

Any other ideas? Compiling out PolicyKit means that any user can do anything, which for an embedded device maybe isn't the end of the world.

Finally, some mechanism for feeding updates into fwupd without devices polling for updates would be useful.

/me is suitably intrigued. I'll wait for the issue and discuss there.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,182,2017-07-25T14:50:59Z,2017-07-26T12:13:09Z,2017-07-27T11:08:49Z,MERGED,True,40,35,4,https://github.com/pohly,simplify build,2,[],https://github.com/hughsie/appstream-glib/pull/182,https://github.com/pohly,6,https://github.com/hughsie/appstream-glib/pull/182#issuecomment-318040515,"I'm working on packaging fwupd for OpenEmbedded, or more specifically,
https://github.com/intel/intel-iot-refkit.
OE currently has technical problems with gobject-introspection when
using meson. This is going to be addressed eventually, but some
intermediate solution is needed. As gir data is not needed for fwupd,
it would be great if it could be made optional. That might also be
useful in other builds that try to build only what's really needed.
I also found that the dependency checking was a bit too broad and
always pulled in gdk.","Can you push the branch for fwupd with the new parameter name please.
Sorry, I had forgotten that. Done.
 If you send me an email with your physical address I can send you a
 free PCB (it's really a ColorHug-v1 that failed QA and is
 unrepairable) that pretends it's a DFU device. I use one of those for
 the hardware.py checks that test downloading, deploying and
 downgrading a real hardware device.
Thanks for the offer, but we'd also need other units for the automated
QA setup that we use for refkit. I need to think about this some more.
 Any other ideas?
 Compiling out PolicyKit means that any user can do
 anything, which for an embedded device maybe isn't the end of the
 world.
No good idea either. I had considered making the polkit calls optional,
but even embedded devices may run less-trusted software which has
access to the system bus, so some kind of permission check is useful. I
think the current solution with groupcheck is good enough.
 /me is suitably intrigued. I'll wait for the issue and discuss there.
See fwupd/fwupd#162",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,182,2017-07-25T14:50:59Z,2017-07-26T12:13:09Z,2017-07-27T11:08:49Z,MERGED,True,40,35,4,https://github.com/pohly,simplify build,2,[],https://github.com/hughsie/appstream-glib/pull/182,https://github.com/hughsie,7,https://github.com/hughsie/appstream-glib/pull/182#issuecomment-318042615,"I'm working on packaging fwupd for OpenEmbedded, or more specifically,
https://github.com/intel/intel-iot-refkit.
OE currently has technical problems with gobject-introspection when
using meson. This is going to be addressed eventually, but some
intermediate solution is needed. As gir data is not needed for fwupd,
it would be great if it could be made optional. That might also be
useful in other builds that try to build only what's really needed.
I also found that the dependency checking was a bit too broad and
always pulled in gdk.","but we'd also need other units for the automated QA setup that we use for refkit

There are currently 12 PCBs in the same drawer sitting there unloved, I don't know how many you need. The other way of testing this is just buying a few dozen Logitech unifying dongles -- which are also part of the pre-release tests I do. https://github.com/hughsie/fwupd/blob/master/data/installed-tests/hardware.py#L88",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,182,2017-07-25T14:50:59Z,2017-07-26T12:13:09Z,2017-07-27T11:08:49Z,MERGED,True,40,35,4,https://github.com/pohly,simplify build,2,[],https://github.com/hughsie/appstream-glib/pull/182,https://github.com/pohly,8,https://github.com/hughsie/appstream-glib/pull/182#issuecomment-318322598,"I'm working on packaging fwupd for OpenEmbedded, or more specifically,
https://github.com/intel/intel-iot-refkit.
OE currently has technical problems with gobject-introspection when
using meson. This is going to be addressed eventually, but some
intermediate solution is needed. As gir data is not needed for fwupd,
it would be great if it could be made optional. That might also be
useful in other builds that try to build only what's really needed.
I also found that the dependency checking was a bit too broad and
always pulled in gdk.","On Wed, 2017-07-26 at 12:47 +0000, Richard Hughes wrote:
 The other way of testing this is just
 buying a few dozen Logitech unifying dongles -- which are also part
 of the pre-release tests I do.
 https://github.com/hughsie/fwupd/blob/master/data/installed-
 tests/hardware.py#L88
That looks like a usable approach. Just for my understanding, in that
test you are downgrading and then upgrading each time you run the test?",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,182,2017-07-25T14:50:59Z,2017-07-26T12:13:09Z,2017-07-27T11:08:49Z,MERGED,True,40,35,4,https://github.com/pohly,simplify build,2,[],https://github.com/hughsie/appstream-glib/pull/182,https://github.com/hughsie,9,https://github.com/hughsie/appstream-glib/pull/182#issuecomment-318331969,"I'm working on packaging fwupd for OpenEmbedded, or more specifically,
https://github.com/intel/intel-iot-refkit.
OE currently has technical problems with gobject-introspection when
using meson. This is going to be addressed eventually, but some
intermediate solution is needed. As gir data is not needed for fwupd,
it would be great if it could be made optional. That might also be
useful in other builds that try to build only what's really needed.
I also found that the dependency checking was a bit too broad and
always pulled in gdk.","you are downgrading and then upgrading each time you run the test

Yes, so it's only going to work a few (tens of?) thousand times before the dongle's EEPROM dies. Basically it's okay to do on each release, but probably not for each commit.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,184,2017-07-29T02:12:14Z,2017-07-29T10:43:17Z,2017-07-29T10:43:17Z,MERGED,True,1,0,1,https://github.com/jbicha,meson: Install appdata-xml.m4,1,[],https://github.com/hughsie/appstream-glib/pull/184,https://github.com/jbicha,1,https://github.com/hughsie/appstream-glib/pull/184,"Accidentally dropped when ported to meson
Fixes: #183","Accidentally dropped when ported to meson
Fixes: #183",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,186,2017-08-03T09:11:38Z,2017-08-03T09:34:43Z,2017-08-03T09:34:43Z,MERGED,True,14,18,2,https://github.com/pwithnall,build: Make gperf dependency fully required,1,[],https://github.com/hughsie/appstream-glib/pull/186,https://github.com/pwithnall,1,https://github.com/hughsie/appstream-glib/pull/186,"Commit 081ced4 made the gperf dependency mandatory, but that seems to
have been partially lost in the migration to Meson. If building without
gperf available, Meson configure would succeed, but then build would
fail due to as-tag-private.h not being generated.
Fix that by removing the conditions for gperf in the meson.build files.
Signed-off-by: Philip Withnall withnall@endlessm.com","Commit 081ced4 made the gperf dependency mandatory, but that seems to
have been partially lost in the migration to Meson. If building without
gperf available, Meson configure would succeed, but then build would
fail due to as-tag-private.h not being generated.
Fix that by removing the conditions for gperf in the meson.build files.
Signed-off-by: Philip Withnall withnall@endlessm.com",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,188,2017-08-14T22:01:34Z,2017-08-15T06:22:06Z,2017-08-15T08:43:24Z,MERGED,True,5,2,2,https://github.com/pwithnall,Meson build fixes,3,[],https://github.com/hughsie/appstream-glib/pull/188,https://github.com/pwithnall,1,https://github.com/hughsie/appstream-glib/pull/188,Various build fixes resulting from trying to build this on a Jessie machine using JHBuild. Because I know how to have fun.,Various build fixes resulting from trying to build this on a Jessie machine using JHBuild. Because I know how to have fun.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,189,2017-08-20T19:56:15Z,2017-08-20T20:16:42Z,2017-08-20T20:16:42Z,MERGED,True,3,5,2,https://github.com/pwithnall,A couple of Coverity fixes,2,[],https://github.com/hughsie/appstream-glib/pull/189,https://github.com/pwithnall,1,https://github.com/hughsie/appstream-glib/pull/189,All trivial or in the tests.,All trivial or in the tests.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,191,2017-09-18T12:12:07Z,2017-10-16T15:51:37Z,2017-10-16T15:51:37Z,MERGED,True,10,0,2,https://github.com/mvollmer,Let appstream-builder emit new <launchables> ,1,[],https://github.com/hughsie/appstream-glib/pull/191,https://github.com/mvollmer,1,https://github.com/hughsie/appstream-glib/pull/191,"This pull request addresses the following issues:


Appstream-builder throws away the type of launchables that it doesn't understand.  This PR makes it understand the new types from the 0.11 series of he AppStream spec.


Launchables don't appear in the appstream-builder output at all since it restricts itself to version 0.8 of the AppStream spec.  This PR makes it output according to version 0.11.4.


The AppStream version is represented as a double, which has trouble working with anything that has a minor version above 0.9.  This PR switches to strings to represent versions.","This pull request addresses the following issues:


Appstream-builder throws away the type of launchables that it doesn't understand.  This PR makes it understand the new types from the 0.11 series of he AppStream spec.


Launchables don't appear in the appstream-builder output at all since it restricts itself to version 0.8 of the AppStream spec.  This PR makes it output according to version 0.11.4.


The AppStream version is represented as a double, which has trouble working with anything that has a minor version above 0.9.  This PR switches to strings to represent versions.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,191,2017-09-18T12:12:07Z,2017-10-16T15:51:37Z,2017-10-16T15:51:37Z,MERGED,True,10,0,2,https://github.com/mvollmer,Let appstream-builder emit new <launchables> ,1,[],https://github.com/hughsie/appstream-glib/pull/191,https://github.com/mvollmer,2,https://github.com/hughsie/appstream-glib/pull/191#issuecomment-330201344,"This pull request addresses the following issues:


Appstream-builder throws away the type of launchables that it doesn't understand.  This PR makes it understand the new types from the 0.11 series of he AppStream spec.


Launchables don't appear in the appstream-builder output at all since it restricts itself to version 0.8 of the AppStream spec.  This PR makes it output according to version 0.11.4.


The AppStream version is represented as a double, which has trouble working with anything that has a minor version above 0.9.  This PR switches to strings to represent versions.","I think the code used the condition api_version > 0.9 to mean ""in the future""or something like this.  No literal version 0.9 was meant.  Now we can spell out the exact version, but I didn't dig them out yet.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,191,2017-09-18T12:12:07Z,2017-10-16T15:51:37Z,2017-10-16T15:51:37Z,MERGED,True,10,0,2,https://github.com/mvollmer,Let appstream-builder emit new <launchables> ,1,[],https://github.com/hughsie/appstream-glib/pull/191,https://github.com/mvollmer,3,https://github.com/hughsie/appstream-glib/pull/191#issuecomment-336452292,"This pull request addresses the following issues:


Appstream-builder throws away the type of launchables that it doesn't understand.  This PR makes it understand the new types from the 0.11 series of he AppStream spec.


Launchables don't appear in the appstream-builder output at all since it restricts itself to version 0.8 of the AppStream spec.  This PR makes it output according to version 0.11.4.


The AppStream version is represented as a double, which has trouble working with anything that has a minor version above 0.9.  This PR switches to strings to represent versions.","Okay, since a1481d2 we don't need to worry about versions anymore, so this gets a lot simpler.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,192,2017-09-19T11:25:56Z,2018-05-03T08:23:43Z,2018-05-03T08:30:49Z,CLOSED,False,131,5,1,https://github.com/mvollmer,Allow icons in metainfo and appdata inputs,1,[],https://github.com/hughsie/appstream-glib/pull/192,https://github.com/mvollmer,1,https://github.com/hughsie/appstream-glib/pull/192,And convert local icons to cached ones.,And convert local icons to cached ones.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,192,2017-09-19T11:25:56Z,2018-05-03T08:23:43Z,2018-05-03T08:30:49Z,CLOSED,False,131,5,1,https://github.com/mvollmer,Allow icons in metainfo and appdata inputs,1,[],https://github.com/hughsie/appstream-glib/pull/192,https://github.com/mvollmer,2,https://github.com/hughsie/appstream-glib/pull/192#issuecomment-330509995,And convert local icons to cached ones.,See ximion/appstream#138 for the corresponding spec addition.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,192,2017-09-19T11:25:56Z,2018-05-03T08:23:43Z,2018-05-03T08:30:49Z,CLOSED,False,131,5,1,https://github.com/mvollmer,Allow icons in metainfo and appdata inputs,1,[],https://github.com/hughsie/appstream-glib/pull/192,https://github.com/mvollmer,3,https://github.com/hughsie/appstream-glib/pull/192#issuecomment-330516913,And convert local icons to cached ones.,"I noticed that appstream-builder --enable-hidpi produces XML like this:
<icon type=""cached"" height=""64"" width=""64"">64x64/cockpit.png</icon>

Note the unwanted ""64x64"" in the value of the icon tag.
This happens with libappstream-glib-builder-0.7.2-1.fc26.x86_64 when processing the cockpit-150-1.fc26.x86_64.rpm package.
The actual collection data in appstream-data-26-15.fc26.noarch contains correct <icon> values for cockpit.destop.
Any idea what's going on?",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,192,2017-09-19T11:25:56Z,2018-05-03T08:23:43Z,2018-05-03T08:30:49Z,CLOSED,False,131,5,1,https://github.com/mvollmer,Allow icons in metainfo and appdata inputs,1,[],https://github.com/hughsie/appstream-glib/pull/192,https://github.com/hughsie,4,https://github.com/hughsie/appstream-glib/pull/192#issuecomment-330590511,And convert local icons to cached ones.,"Any idea what's going on?

It's hugely and overly complicated. AppStream used to only support one icon size, and then we added HiDPI support which was optional. We actually changed the way we handled the HiDPI icons I think 3 times, and appstream-builder had to support them all for various versions of RHEL and Fedora. :( I think the builder we have configured for Fedora 27 produces:
<icon type=""cached"" height=""128"" width=""128"">2dslamdemo.png</icon>
<icon type=""cached"" height=""64"" width=""64"">2dslamdemo.png</icon>",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,192,2017-09-19T11:25:56Z,2018-05-03T08:23:43Z,2018-05-03T08:30:49Z,CLOSED,False,131,5,1,https://github.com/mvollmer,Allow icons in metainfo and appdata inputs,1,[],https://github.com/hughsie/appstream-glib/pull/192,https://github.com/mvollmer,5,https://github.com/hughsie/appstream-glib/pull/192#issuecomment-331845997,And convert local icons to cached ones.,"<icon type=""cached"" height=""128"" width=""128"">2dslamdemo.png</icon>
<icon type=""cached"" height=""64"" width=""64"">2dslamdemo.png</icon>


Isn't that actually incorrect according to the spec?  Cached icons shouldn't tell their size, and the client is supposed to look through all cached locations to find the available sizes.  So, shouldn't the builder generate simply this:
<icon type=""cached"" >2dslamdemo.png</icon>",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,192,2017-09-19T11:25:56Z,2018-05-03T08:23:43Z,2018-05-03T08:30:49Z,CLOSED,False,131,5,1,https://github.com/mvollmer,Allow icons in metainfo and appdata inputs,1,[],https://github.com/hughsie/appstream-glib/pull/192,https://github.com/ximion,6,https://github.com/hughsie/appstream-glib/pull/192#issuecomment-331847786,And convert local icons to cached ones.,"Isn't that actually incorrect according to the spec? Cached icons shouldn't tell their size, and the client is supposed to look through all cached locations to find the available sizes. So, shouldn't the builder generate simply this:

Yes, this was incorrect - but @hughsie and some benchmarking convinced me that listing the sizes there is worth it due to the performance boost we get when knowing which sizes are available.
Since AppStream does not actually allow extending the amount of icons (unlike the themes approach the XDG icon theme standard establishes), encoding icon sizes does not cause any unwanted inflexibility as well.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,192,2017-09-19T11:25:56Z,2018-05-03T08:23:43Z,2018-05-03T08:30:49Z,CLOSED,False,131,5,1,https://github.com/mvollmer,Allow icons in metainfo and appdata inputs,1,[],https://github.com/hughsie/appstream-glib/pull/192,https://github.com/mvollmer,7,https://github.com/hughsie/appstream-glib/pull/192#issuecomment-338601299,And convert local icons to cached ones.,Now both local and stock icons are converted to remote.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,192,2017-09-19T11:25:56Z,2018-05-03T08:23:43Z,2018-05-03T08:30:49Z,CLOSED,False,131,5,1,https://github.com/mvollmer,Allow icons in metainfo and appdata inputs,1,[],https://github.com/hughsie/appstream-glib/pull/192,https://github.com/mvollmer,8,https://github.com/hughsie/appstream-glib/pull/192#issuecomment-361523942,And convert local icons to cached ones.,"@hughsie, is there anything I can do to move this forward?  Or is the whole idea fundamentally wrong?",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,192,2017-09-19T11:25:56Z,2018-05-03T08:23:43Z,2018-05-03T08:30:49Z,CLOSED,False,131,5,1,https://github.com/mvollmer,Allow icons in metainfo and appdata inputs,1,[],https://github.com/hughsie/appstream-glib/pull/192,https://github.com/hughsie,9,https://github.com/hughsie/appstream-glib/pull/192#issuecomment-361538951,And convert local icons to cached ones.,"@mvollmer I think you've got the right idea, I'm just not sure if it's the right way to put it all in asb-plugin-appdata.c I think splitting this up so that we have something like asb-plugin-icon.c and using that to convert the local icon to the cached icon type would be much better. That way the -desktop.c plugin focuses on reading in the AsApp, and the -appdata.c plugin focuses on the XML. I can have a go at this, but do you have an .rpm that has an metainfo.xml file specifying an icon?",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,192,2017-09-19T11:25:56Z,2018-05-03T08:23:43Z,2018-05-03T08:30:49Z,CLOSED,False,131,5,1,https://github.com/mvollmer,Allow icons in metainfo and appdata inputs,1,[],https://github.com/hughsie/appstream-glib/pull/192,https://github.com/ximion,10,https://github.com/hughsie/appstream-glib/pull/192#issuecomment-361548651,And convert local icons to cached ones.,"FWIW, appstream-generator deals with stock/local icons exactly this way, creating cached icons from them.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,192,2017-09-19T11:25:56Z,2018-05-03T08:23:43Z,2018-05-03T08:30:49Z,CLOSED,False,131,5,1,https://github.com/mvollmer,Allow icons in metainfo and appdata inputs,1,[],https://github.com/hughsie/appstream-glib/pull/192,https://github.com/hughsie,11,https://github.com/hughsie/appstream-glib/pull/192#issuecomment-361550943,And convert local icons to cached ones.,@mvollmer does https://github.com/hughsie/appstream-glib/tree/wip/hughsie/icons-in-metainfo do what you expect?,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,192,2017-09-19T11:25:56Z,2018-05-03T08:23:43Z,2018-05-03T08:30:49Z,CLOSED,False,131,5,1,https://github.com/mvollmer,Allow icons in metainfo and appdata inputs,1,[],https://github.com/hughsie/appstream-glib/pull/192,https://github.com/mvollmer,12,https://github.com/hughsie/appstream-glib/pull/192#issuecomment-385987185,And convert local icons to cached ones.,"does https://github.com/hughsie/appstream-glib/tree/wip/hughsie/icons-in-metainfo do what you expect?

Yes!
Sorry for missing the updates in this PR, and thanks a lot for picking this up.  I'll try out your branch and make sure the two existing Cockpit extensions work with it.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,192,2017-09-19T11:25:56Z,2018-05-03T08:23:43Z,2018-05-03T08:30:49Z,CLOSED,False,131,5,1,https://github.com/mvollmer,Allow icons in metainfo and appdata inputs,1,[],https://github.com/hughsie/appstream-glib/pull/192,https://github.com/mvollmer,13,https://github.com/hughsie/appstream-glib/pull/192#issuecomment-386215521,And convert local icons to cached ones.,"I'll try out your branch and make sure the two existing Cockpit extensions work with it.

Works!


g_error (""using stock"") of course crashes the program, but I guess you are not finished with that part, right?


Local icons should have a absolute filename as their value, right?  The driver test package doesn't have that.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,192,2017-09-19T11:25:56Z,2018-05-03T08:23:43Z,2018-05-03T08:30:49Z,CLOSED,False,131,5,1,https://github.com/mvollmer,Allow icons in metainfo and appdata inputs,1,[],https://github.com/hughsie/appstream-glib/pull/192,https://github.com/mvollmer,14,https://github.com/hughsie/appstream-glib/pull/192#issuecomment-386216441,And convert local icons to cached ones.,"@hughsie, so I obviously want your branch to be merged. :-) Can I help?",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,192,2017-09-19T11:25:56Z,2018-05-03T08:23:43Z,2018-05-03T08:30:49Z,CLOSED,False,131,5,1,https://github.com/mvollmer,Allow icons in metainfo and appdata inputs,1,[],https://github.com/hughsie/appstream-glib/pull/192,https://github.com/hughsie,15,https://github.com/hughsie/appstream-glib/pull/192#issuecomment-386219008,And convert local icons to cached ones.,"@mvollmer I've just rebased my branch against master, and just waiting for CI to complete. If that works, I'll merge to master in a few minutes.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,192,2017-09-19T11:25:56Z,2018-05-03T08:23:43Z,2018-05-03T08:30:49Z,CLOSED,False,131,5,1,https://github.com/mvollmer,Allow icons in metainfo and appdata inputs,1,[],https://github.com/hughsie/appstream-glib/pull/192,https://github.com/hughsie,16,https://github.com/hughsie/appstream-glib/pull/192#issuecomment-386223482,And convert local icons to cached ones.,"I merged my branch, thanks everybody! Yell if you find any problems.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,192,2017-09-19T11:25:56Z,2018-05-03T08:23:43Z,2018-05-03T08:30:49Z,CLOSED,False,131,5,1,https://github.com/mvollmer,Allow icons in metainfo and appdata inputs,1,[],https://github.com/hughsie/appstream-glib/pull/192,https://github.com/mvollmer,17,https://github.com/hughsie/appstream-glib/pull/192#issuecomment-386225128,And convert local icons to cached ones.,"I merged my branch, thanks everybody! Yell if you find any problems.

Awesome, thanks!",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,194,2017-10-02T07:45:48Z,2017-10-02T08:09:36Z,2017-10-26T08:34:07Z,MERGED,True,4,4,1,https://github.com/pwithnall,lib/app-validate: Fix typo in variable name,1,[],https://github.com/hughsie/appstream-glib/pull/194,https://github.com/pwithnall,1,https://github.com/hughsie/appstream-glib/pull/194,Signed-off-by: Philip Withnall withnall@endlessm.com,Signed-off-by: Philip Withnall withnall@endlessm.com,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,195,2017-10-18T18:34:31Z,2017-10-21T19:26:58Z,2017-10-21T19:26:58Z,CLOSED,False,6,0,2,https://github.com/dchristidis,Add the WEB_APP URL kind,1,[],https://github.com/hughsie/appstream-glib/pull/195,https://github.com/dchristidis,1,https://github.com/hughsie/appstream-glib/pull/195,"The Telegram web application opens its homepage. Instead, it should open this location. As it stands, a user has to perform unnecessary clicks each time the application is launched. Another example is Skype (homepage, web app), which would be a wonderful addition once WebKitGTK+ can support it.
I suggest adding a new, optional type AS_URL_KIND_WEB_APP. If this is acceptable, I will submit a patch to GNOME Software so that it prefers it over AS_URL_KIND_HOMEPAGE during the web application installation.","The Telegram web application opens its homepage. Instead, it should open this location. As it stands, a user has to perform unnecessary clicks each time the application is launched. Another example is Skype (homepage, web app), which would be a wonderful addition once WebKitGTK+ can support it.
I suggest adding a new, optional type AS_URL_KIND_WEB_APP. If this is acceptable, I will submit a patch to GNOME Software so that it prefers it over AS_URL_KIND_HOMEPAGE during the web application installation.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,195,2017-10-18T18:34:31Z,2017-10-21T19:26:58Z,2017-10-21T19:26:58Z,CLOSED,False,6,0,2,https://github.com/dchristidis,Add the WEB_APP URL kind,1,[],https://github.com/hughsie/appstream-glib/pull/195,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/195#issuecomment-337695358,"The Telegram web application opens its homepage. Instead, it should open this location. As it stands, a user has to perform unnecessary clicks each time the application is launched. Another example is Skype (homepage, web app), which would be a wonderful addition once WebKitGTK+ can support it.
I suggest adding a new, optional type AS_URL_KIND_WEB_APP. If this is acceptable, I will submit a patch to GNOME Software so that it prefers it over AS_URL_KIND_HOMEPAGE during the web application installation.",@ximion ?,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,195,2017-10-18T18:34:31Z,2017-10-21T19:26:58Z,2017-10-21T19:26:58Z,CLOSED,False,6,0,2,https://github.com/dchristidis,Add the WEB_APP URL kind,1,[],https://github.com/hughsie/appstream-glib/pull/195,https://github.com/dchristidis,3,https://github.com/hughsie/appstream-glib/pull/195#issuecomment-337700200,"The Telegram web application opens its homepage. Instead, it should open this location. As it stands, a user has to perform unnecessary clicks each time the application is launched. Another example is Skype (homepage, web app), which would be a wonderful addition once WebKitGTK+ can support it.
I suggest adding a new, optional type AS_URL_KIND_WEB_APP. If this is acceptable, I will submit a patch to GNOME Software so that it prefers it over AS_URL_KIND_HOMEPAGE during the web application installation.","I was mistaken, I should have opened a PR on AppStream first. I will do so now.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,195,2017-10-18T18:34:31Z,2017-10-21T19:26:58Z,2017-10-21T19:26:58Z,CLOSED,False,6,0,2,https://github.com/dchristidis,Add the WEB_APP URL kind,1,[],https://github.com/hughsie/appstream-glib/pull/195,https://github.com/dchristidis,4,https://github.com/hughsie/appstream-glib/pull/195#issuecomment-338426675,"The Telegram web application opens its homepage. Instead, it should open this location. As it stands, a user has to perform unnecessary clicks each time the application is launched. Another example is Skype (homepage, web app), which would be a wonderful addition once WebKitGTK+ can support it.
I suggest adding a new, optional type AS_URL_KIND_WEB_APP. If this is acceptable, I will submit a patch to GNOME Software so that it prefers it over AS_URL_KIND_HOMEPAGE during the web application installation.",I’m closing this PR for now and I’ll open a new one once the next version of the AppStream specification is released.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,197,2017-10-22T21:37:26Z,2017-10-23T06:28:43Z,2017-10-23T17:55:31Z,MERGED,True,1,1,1,https://github.com/jbicha,Prefer /usr/share/metainfo as default path for metainfo files,1,[],https://github.com/hughsie/appstream-glib/pull/197,https://github.com/jbicha,1,https://github.com/hughsie/appstream-glib/pull/197,follow-up from commit 9df56f2,follow-up from commit 9df56f2,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,198,2017-10-31T14:07:00Z,2017-10-31T16:07:57Z,2017-10-31T17:57:54Z,MERGED,True,13,1,3,https://github.com/hughsie,Add the 'hardware' requires type,1,[],https://github.com/hughsie/appstream-glib/pull/198,https://github.com/hughsie,1,https://github.com/hughsie/appstream-glib/pull/198,,,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,198,2017-10-31T14:07:00Z,2017-10-31T16:07:57Z,2017-10-31T17:57:54Z,MERGED,True,13,1,3,https://github.com/hughsie,Add the 'hardware' requires type,1,[],https://github.com/hughsie/appstream-glib/pull/198,https://github.com/superm1,2,https://github.com/hughsie/appstream-glib/pull/198#issuecomment-340811437,,LGTM,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,198,2017-10-31T14:07:00Z,2017-10-31T16:07:57Z,2017-10-31T17:57:54Z,MERGED,True,13,1,3,https://github.com/hughsie,Add the 'hardware' requires type,1,[],https://github.com/hughsie/appstream-glib/pull/198,https://github.com/ximion,3,https://github.com/hughsie/appstream-glib/pull/198#issuecomment-340813857,,@hughsie This requires stuff isn't present in the spec - what is it used for any why does AppStream apparently have dependency logic now?,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,198,2017-10-31T14:07:00Z,2017-10-31T16:07:57Z,2017-10-31T17:57:54Z,MERGED,True,13,1,3,https://github.com/hughsie,Add the 'hardware' requires type,1,[],https://github.com/hughsie/appstream-glib/pull/198,https://github.com/hughsie,4,https://github.com/hughsie/appstream-glib/pull/198#issuecomment-340815475,,"@ximion we're using it for firmware updating stuff. Maybe when it's working I'll propose it upstream, although I can't see anything other than fwupd using it.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,198,2017-10-31T14:07:00Z,2017-10-31T16:07:57Z,2017-10-31T17:57:54Z,MERGED,True,13,1,3,https://github.com/hughsie,Add the 'hardware' requires type,1,[],https://github.com/hughsie/appstream-glib/pull/198,https://github.com/ximion,5,https://github.com/hughsie/appstream-glib/pull/198#issuecomment-340816867,,"As long as you're not using those things in a custom tag, it's part of the spec though and should be in there.
What I am worried about (slightly) is that as soon as you propose it we'll change it to make it more generic or fit some broader scheme (for example, we use ""modalias"" in a <provides/>, tag, so a requires should probably use similar semantics?), and at that point we'll have yet another divergence.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,198,2017-10-31T14:07:00Z,2017-10-31T16:07:57Z,2017-10-31T17:57:54Z,MERGED,True,13,1,3,https://github.com/hughsie,Add the 'hardware' requires type,1,[],https://github.com/hughsie/appstream-glib/pull/198,https://github.com/hughsie,6,https://github.com/hughsie/appstream-glib/pull/198#issuecomment-340845975,,"Sure, I could see modalias being useful too, but that's a different thing to a CHID. I'm still in the ""is this useful"" stage before I propose it upstream, and when I do I'm happy to make changes and compromises like the other stuff I've done.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,198,2017-10-31T14:07:00Z,2017-10-31T16:07:57Z,2017-10-31T17:57:54Z,MERGED,True,13,1,3,https://github.com/hughsie,Add the 'hardware' requires type,1,[],https://github.com/hughsie/appstream-glib/pull/198,https://github.com/ximion,7,https://github.com/hughsie/appstream-glib/pull/198#issuecomment-340848691,,"I'm still in the ""is this useful"" stage before I propose it upstream, and when I do I'm happy to make changes and compromises like the other stuff I've done.

That's perfectly fine then :-)
Until just now, I didn't know that something like a CHID even exists :P",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,198,2017-10-31T14:07:00Z,2017-10-31T16:07:57Z,2017-10-31T17:57:54Z,MERGED,True,13,1,3,https://github.com/hughsie,Add the 'hardware' requires type,1,[],https://github.com/hughsie/appstream-glib/pull/198,https://github.com/superm1,8,https://github.com/hughsie/appstream-glib/pull/198#issuecomment-340849111,,@ximion relevant details: https://docs.microsoft.com/en-us/windows-hardware/drivers/dashboard/using-chids and https://docs.microsoft.com/en-us/windows-hardware/drivers/dashboard/publish-a-driver-to-windows-update,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,202,2017-11-10T19:57:04Z,2017-11-10T20:23:19Z,2017-11-10T20:23:24Z,MERGED,True,3,1,1,https://github.com/joaquimrocha,Fix the arithmetic when fitting an image in 16:9,1,[],https://github.com/hughsie/appstream-glib/pull/202,https://github.com/joaquimrocha,1,https://github.com/hughsie/appstream-glib/pull/202,"When saving a 16:9 pixbuf and the image parameter is not 16:9 we create
a transparent pixbuf with this ratio and fit the image in it. However,
this calculation was not correctly done due to an integer division so
the result is that the width/height of the pixbuf's area to be copied
was bigger than what the dimensions of the pixbuf; so no image was
copied and we'd be left with a trasnparent pixbuf.
This patch fixes this problem by using multiplications instead of
a division in the mentioned code (as they avoid imprecision problems).","When saving a 16:9 pixbuf and the image parameter is not 16:9 we create
a transparent pixbuf with this ratio and fit the image in it. However,
this calculation was not correctly done due to an integer division so
the result is that the width/height of the pixbuf's area to be copied
was bigger than what the dimensions of the pixbuf; so no image was
copied and we'd be left with a trasnparent pixbuf.
This patch fixes this problem by using multiplications instead of
a division in the mentioned code (as they avoid imprecision problems).",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,205,2017-11-16T15:27:43Z,2017-11-16T15:29:31Z,2017-11-16T15:29:56Z,MERGED,True,1,1,1,https://github.com/DimStar77,Trivial: Set minimal required version for pngquant in the sample .spec file,1,[],https://github.com/hughsie/appstream-glib/pull/205,https://github.com/DimStar77,1,https://github.com/hughsie/appstream-glib/pull/205,"commit 562772 introduced the usage of pngquant (by calling out to the binary)
and makes use of the --strip parameter, which was introduced in version 2.8 of pngquant.","commit 562772 introduced the usage of pngquant (by calling out to the binary)
and makes use of the --strip parameter, which was introduced in version 2.8 of pngquant.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,206,2017-11-21T16:45:27Z,2017-11-21T17:08:30Z,2017-11-21T17:08:30Z,MERGED,True,2,0,1,https://github.com/mavit,Generate icons and samples for emoji fonts.,1,[],https://github.com/hughsie/appstream-glib/pull/206,https://github.com/mavit,1,https://github.com/hughsie/appstream-glib/pull/206,"This prevents emoji-only fonts from being vetoed because they lack an icon.
I tried to pick wide a selection of characters from https://unicode.org/emoji/charts-5.0/emoji-list.html.","This prevents emoji-only fonts from being vetoed because they lack an icon.
I tried to pick wide a selection of characters from https://unicode.org/emoji/charts-5.0/emoji-list.html.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,208,2017-11-24T22:31:36Z,2017-11-30T16:55:55Z,2017-12-01T00:26:41Z,MERGED,True,1,3,1,https://github.com/mavit,Don’t fall back to en if other languages are available.,1,[],https://github.com/hughsie/appstream-glib/pull/208,https://github.com/mavit,1,https://github.com/hughsie/appstream-glib/pull/208,"I think this should fix #207, and it works for me.  Note however that I don’t know C, so please review carefully.","I think this should fix #207, and it works for me.  Note however that I don’t know C, so please review carefully.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,212,2017-12-10T18:51:46Z,2019-02-06T12:10:38Z,2019-02-06T12:10:38Z,CLOSED,False,8,7,2,https://github.com/suve,Update build instructions,3,[],https://github.com/hughsie/appstream-glib/pull/212,https://github.com/suve,1,https://github.com/hughsie/appstream-glib/pull/212,"This closes issue #201.
I've removed the required: false qualifier from libgcab because when I tried building libappstream-glib on my system, missing libgcab caused the build to fail.","This closes issue #201.
I've removed the required: false qualifier from libgcab because when I tried building libappstream-glib on my system, missing libgcab caused the build to fail.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,212,2017-12-10T18:51:46Z,2019-02-06T12:10:38Z,2019-02-06T12:10:38Z,CLOSED,False,8,7,2,https://github.com/suve,Update build instructions,3,[],https://github.com/hughsie/appstream-glib/pull/212,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/212#issuecomment-350573465,"This closes issue #201.
I've removed the required: false qualifier from libgcab because when I tried building libappstream-glib on my system, missing libgcab caused the build to fail.",Isn't libcab only required for the builder?,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,212,2017-12-10T18:51:46Z,2019-02-06T12:10:38Z,2019-02-06T12:10:38Z,CLOSED,False,8,7,2,https://github.com/suve,Update build instructions,3,[],https://github.com/hughsie/appstream-glib/pull/212,https://github.com/suve,3,https://github.com/hughsie/appstream-glib/pull/212#issuecomment-350880244,"This closes issue #201.
I've removed the required: false qualifier from libgcab because when I tried building libappstream-glib on my system, missing libgcab caused the build to fail.","I checked again by removing libgcab1-devel from my system and running ./configure && make.
../libappstream-glib/as-store-cab.c:24:10: fatal error: libgcab.h: No such file or directory",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,212,2017-12-10T18:51:46Z,2019-02-06T12:10:38Z,2019-02-06T12:10:38Z,CLOSED,False,8,7,2,https://github.com/suve,Update build instructions,3,[],https://github.com/hughsie/appstream-glib/pull/212,https://github.com/hughsie,4,https://github.com/hughsie/appstream-glib/pull/212#issuecomment-461001598,"This closes issue #201.
I've removed the required: false qualifier from libgcab because when I tried building libappstream-glib on my system, missing libgcab caused the build to fail.","I think with the port to meson this PR is no longer valid. If it is, please re-open with a rebased patch. Thanks.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,214,2017-12-17T01:11:10Z,2017-12-17T11:14:29Z,2017-12-17T11:14:29Z,MERGED,True,11,3,1,https://github.com/suve,Describe connection problems/HTTP errors when validating images,1,[],https://github.com/hughsie/appstream-glib/pull/214,https://github.com/suve,1,https://github.com/hughsie/appstream-glib/pull/214,"This changeset makes the image validation code display some descriptive error messages when downloading the image fails. Instead of a simple ""url not found"" message, the user either gets a ""failed to connect message"" or an HTTP error code. This should make it easier for users to differentiate between faulty networks, unresponsive or badly configured servers.
The soup_status_get_phrase() function is available since libsoup-2.4. (link)
This fixes issue #200.","This changeset makes the image validation code display some descriptive error messages when downloading the image fails. Instead of a simple ""url not found"" message, the user either gets a ""failed to connect message"" or an HTTP error code. This should make it easier for users to differentiate between faulty networks, unresponsive or badly configured servers.
The soup_status_get_phrase() function is available since libsoup-2.4. (link)
This fixes issue #200.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,214,2017-12-17T01:11:10Z,2017-12-17T11:14:29Z,2017-12-17T11:14:29Z,MERGED,True,11,3,1,https://github.com/suve,Describe connection problems/HTTP errors when validating images,1,[],https://github.com/hughsie/appstream-glib/pull/214,https://github.com/suve,2,https://github.com/hughsie/appstream-glib/pull/214#issuecomment-352246565,"This changeset makes the image validation code display some descriptive error messages when downloading the image fails. Instead of a simple ""url not found"" message, the user either gets a ""failed to connect message"" or an HTTP error code. This should make it easier for users to differentiate between faulty networks, unresponsive or badly configured servers.
The soup_status_get_phrase() function is available since libsoup-2.4. (link)
This fixes issue #200.","To fit in the 80-char limit, I changed the indentation a bit. I wonder if the first argument to ai_app_validate_add() should't now go on a separate line, to be more consistent with the rest of the arguments.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,214,2017-12-17T01:11:10Z,2017-12-17T11:14:29Z,2017-12-17T11:14:29Z,MERGED,True,11,3,1,https://github.com/suve,Describe connection problems/HTTP errors when validating images,1,[],https://github.com/hughsie/appstream-glib/pull/214,https://github.com/hughsie,3,https://github.com/hughsie/appstream-glib/pull/214#issuecomment-352246586,"This changeset makes the image validation code display some descriptive error messages when downloading the image fails. Instead of a simple ""url not found"" message, the user either gets a ""failed to connect message"" or an HTTP error code. This should make it easier for users to differentiate between faulty networks, unresponsive or badly configured servers.
The soup_status_get_phrase() function is available since libsoup-2.4. (link)
This fixes issue #200.",If you merge that into one commit and force push to update the PR I think it's good to merge. Thanks.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,214,2017-12-17T01:11:10Z,2017-12-17T11:14:29Z,2017-12-17T11:14:29Z,MERGED,True,11,3,1,https://github.com/suve,Describe connection problems/HTTP errors when validating images,1,[],https://github.com/hughsie/appstream-glib/pull/214,https://github.com/suve,4,https://github.com/hughsie/appstream-glib/pull/214#issuecomment-352246665,"This changeset makes the image validation code display some descriptive error messages when downloading the image fails. Instead of a simple ""url not found"" message, the user either gets a ""failed to connect message"" or an HTTP error code. This should make it easier for users to differentiate between faulty networks, unresponsive or badly configured servers.
The soup_status_get_phrase() function is available since libsoup-2.4. (link)
This fixes issue #200.","So a squash, then? Sure.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,214,2017-12-17T01:11:10Z,2017-12-17T11:14:29Z,2017-12-17T11:14:29Z,MERGED,True,11,3,1,https://github.com/suve,Describe connection problems/HTTP errors when validating images,1,[],https://github.com/hughsie/appstream-glib/pull/214,https://github.com/suve,5,https://github.com/hughsie/appstream-glib/pull/214#issuecomment-352247590,"This changeset makes the image validation code display some descriptive error messages when downloading the image fails. Instead of a simple ""url not found"" message, the user either gets a ""failed to connect message"" or an HTTP error code. This should make it easier for users to differentiate between faulty networks, unresponsive or badly configured servers.
The soup_status_get_phrase() function is available since libsoup-2.4. (link)
This fixes issue #200.",Done.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,215,2017-12-18T14:23:31Z,2017-12-18T14:23:46Z,2017-12-18T14:23:48Z,MERGED,True,84,89,14,https://github.com/hughsie,Do not use an 'enable' prefix for meson arguments,1,[],https://github.com/hughsie/appstream-glib/pull/215,https://github.com/hughsie,1,https://github.com/hughsie/appstream-glib/pull/215,,,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,217,2018-01-13T03:16:14Z,2018-01-13T12:05:00Z,2018-01-13T12:05:00Z,CLOSED,False,2,0,2,https://github.com/maxice8,Fix build on musl systems.,2,[],https://github.com/hughsie/appstream-glib/pull/217,https://github.com/maxice8,1,https://github.com/hughsie/appstream-glib/pull/217,"Systems that use musl as libc fail to compile with the following error
In file included from ../libappstream-glib/as-utils.c:37:0:
/usr/x86_64-linux-musl/usr/include/archive_entry.h:64:9: error: unknown type name ‘int64_t’
 typedef int64_t la_int64_t;

same happens with client/as-utils.c, including stdint.h before the archive_entry.h include fixes the build error.
Tested on Void Linux x86_64, i686, aarch64, armv7hf, x86_64-musl, armv6hf-musl, aarch64-musl. Travis  Builds","Systems that use musl as libc fail to compile with the following error
In file included from ../libappstream-glib/as-utils.c:37:0:
/usr/x86_64-linux-musl/usr/include/archive_entry.h:64:9: error: unknown type name ‘int64_t’
 typedef int64_t la_int64_t;

same happens with client/as-utils.c, including stdint.h before the archive_entry.h include fixes the build error.
Tested on Void Linux x86_64, i686, aarch64, armv7hf, x86_64-musl, armv6hf-musl, aarch64-musl. Travis  Builds",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,217,2018-01-13T03:16:14Z,2018-01-13T12:05:00Z,2018-01-13T12:05:00Z,CLOSED,False,2,0,2,https://github.com/maxice8,Fix build on musl systems.,2,[],https://github.com/hughsie/appstream-glib/pull/217,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/217#issuecomment-357417677,"Systems that use musl as libc fail to compile with the following error
In file included from ../libappstream-glib/as-utils.c:37:0:
/usr/x86_64-linux-musl/usr/include/archive_entry.h:64:9: error: unknown type name ‘int64_t’
 typedef int64_t la_int64_t;

same happens with client/as-utils.c, including stdint.h before the archive_entry.h include fixes the build error.
Tested on Void Linux x86_64, i686, aarch64, armv7hf, x86_64-musl, armv6hf-musl, aarch64-musl. Travis  Builds",I don't think those patches are correct. I think the stdint.h include needs to go in the archive_entry.h header. appstream-glib doesn't use the int64_t type at all.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,217,2018-01-13T03:16:14Z,2018-01-13T12:05:00Z,2018-01-13T12:05:00Z,CLOSED,False,2,0,2,https://github.com/maxice8,Fix build on musl systems.,2,[],https://github.com/hughsie/appstream-glib/pull/217,https://github.com/maxice8,3,https://github.com/hughsie/appstream-glib/pull/217#issuecomment-357419913,"Systems that use musl as libc fail to compile with the following error
In file included from ../libappstream-glib/as-utils.c:37:0:
/usr/x86_64-linux-musl/usr/include/archive_entry.h:64:9: error: unknown type name ‘int64_t’
 typedef int64_t la_int64_t;

same happens with client/as-utils.c, including stdint.h before the archive_entry.h include fixes the build error.
Tested on Void Linux x86_64, i686, aarch64, armv7hf, x86_64-musl, armv6hf-musl, aarch64-musl. Travis  Builds","On Sat, Jan 13, 2018 at 12:07:42AM -0800, Richard Hughes wrote:
 I don't think those patches are correct. I think the `stdint.h` include needs to go in the `archive_entry.h` header. appstream-glib doesn't use the `int64_t` type at all.

 --
 You are receiving this because you authored the thread.
 Reply to this email directly or view it on GitHub:
 #217 (comment)

Yes i suspected that, archive_entry.h has nowhere where it gets stdint.h but apparently (my interpreation, take with a grain of salt, i'm not experienced) instead relies on archive.h being included first where it gets int64_t from a inttypes.h include https://github.com/libarchive/libarchive/blob/master/libarchive/archive.h#L56 , just flipping both the includes seems to fix for musl arches.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,217,2018-01-13T03:16:14Z,2018-01-13T12:05:00Z,2018-01-13T12:05:00Z,CLOSED,False,2,0,2,https://github.com/maxice8,Fix build on musl systems.,2,[],https://github.com/hughsie/appstream-glib/pull/217,https://github.com/hughsie,4,https://github.com/hughsie/appstream-glib/pull/217#issuecomment-357430041,"Systems that use musl as libc fail to compile with the following error
In file included from ../libappstream-glib/as-utils.c:37:0:
/usr/x86_64-linux-musl/usr/include/archive_entry.h:64:9: error: unknown type name ‘int64_t’
 typedef int64_t la_int64_t;

same happens with client/as-utils.c, including stdint.h before the archive_entry.h include fixes the build error.
Tested on Void Linux x86_64, i686, aarch64, armv7hf, x86_64-musl, armv6hf-musl, aarch64-musl. Travis  Builds","The include order shouldn't be important when using a library externally. I think this needs to be fixed in libarchive, sorry.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,220,2018-01-18T21:07:49Z,2018-01-22T16:16:59Z,2018-01-22T16:17:01Z,MERGED,True,94,97,8,https://github.com/hughsie,Wip/hughsie/introspection fixes,4,[],https://github.com/hughsie/appstream-glib/pull/220,https://github.com/hughsie,1,https://github.com/hughsie/appstream-glib/pull/220,"Hey @kalev -- quick sanity check -- these changes don't break API/ABI, right?","Hey @kalev -- quick sanity check -- these changes don't break API/ABI, right?",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,220,2018-01-18T21:07:49Z,2018-01-22T16:16:59Z,2018-01-22T16:17:01Z,MERGED,True,94,97,8,https://github.com/hughsie,Wip/hughsie/introspection fixes,4,[],https://github.com/hughsie/appstream-glib/pull/220,https://github.com/kalev,2,https://github.com/hughsie/appstream-glib/pull/220#issuecomment-358787274,"Hey @kalev -- quick sanity check -- these changes don't break API/ABI, right?","I think the introspection fixes should be fine even if they end up changing the introspection API/ABI -- as far as I know, nothing in Fedora currently uses the appstream-glib introspection bindings.
As for the last patch that changes enums to guint16/guint32/guint64, my first guess would be that some of the changes there might change the C ABI, but not entirely sure. Could also be that they change the ABI on, let's say i686 and not on x86_64. Seems like a tricky thing to get right :)",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,220,2018-01-18T21:07:49Z,2018-01-22T16:16:59Z,2018-01-22T16:17:01Z,MERGED,True,94,97,8,https://github.com/hughsie,Wip/hughsie/introspection fixes,4,[],https://github.com/hughsie/appstream-glib/pull/220,https://github.com/kalev,3,https://github.com/hughsie/appstream-glib/pull/220#issuecomment-358788121,"Hey @kalev -- quick sanity check -- these changes don't break API/ABI, right?","Also, if you are unsure about C ABI, I think it should be fine to bump soname. appstream-glib is basically gnome-software private library and I don't think anyone would yell if we bumped soname.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,220,2018-01-18T21:07:49Z,2018-01-22T16:16:59Z,2018-01-22T16:17:01Z,MERGED,True,94,97,8,https://github.com/hughsie,Wip/hughsie/introspection fixes,4,[],https://github.com/hughsie/appstream-glib/pull/220,https://github.com/smcv,4,https://github.com/hughsie/appstream-glib/pull/220#issuecomment-358818370,"Hey @kalev -- quick sanity check -- these changes don't break API/ABI, right?","You might be interested in https://bugzilla.gnome.org/show_bug.cgi?id=730932 which statically asserts some reasonable compiler behaviour, without which any vaguely recent GLib will fail to compile.",True,{'THUMBS_UP': ['https://github.com/hughsie']}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,220,2018-01-18T21:07:49Z,2018-01-22T16:16:59Z,2018-01-22T16:17:01Z,MERGED,True,94,97,8,https://github.com/hughsie,Wip/hughsie/introspection fixes,4,[],https://github.com/hughsie/appstream-glib/pull/220,https://github.com/smcv,5,https://github.com/hughsie/appstream-glib/pull/220#issuecomment-358818974,"Hey @kalev -- quick sanity check -- these changes don't break API/ABI, right?","It seems to be a pervasive assumption throughout the GLib/GNOME ecosystem that any reasonable compiler will ensure that all enums whose members are ""fairly small"" (fit in 31 bits) are the same size as an int. If a compiler didn't do this, strict ISO C would allow it, but most practical uses of GLib would either fail to work or break ABI regularly; hence the static assertion, to catch that early.
(In practice I don't think there's any reason anyone would implement their compiler or ABI that way - it would just break software for little or no benefit.)",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,220,2018-01-18T21:07:49Z,2018-01-22T16:16:59Z,2018-01-22T16:17:01Z,MERGED,True,94,97,8,https://github.com/hughsie,Wip/hughsie/introspection fixes,4,[],https://github.com/hughsie/appstream-glib/pull/220,https://github.com/hughsie,6,https://github.com/hughsie/appstream-glib/pull/220#issuecomment-358907561,"Hey @kalev -- quick sanity check -- these changes don't break API/ABI, right?","some of the changes there might change the C ABI

I was a little careful about this. I used a few tricks to force the enum to 16 bits (e.g. last entry of 0xffff) and also specifically typedef'ing the 64-bit one, so I think I'm fine on x64 at least.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,220,2018-01-18T21:07:49Z,2018-01-22T16:16:59Z,2018-01-22T16:17:01Z,MERGED,True,94,97,8,https://github.com/hughsie,Wip/hughsie/introspection fixes,4,[],https://github.com/hughsie/appstream-glib/pull/220,https://github.com/smcv,7,https://github.com/hughsie/appstream-glib/pull/220#issuecomment-358933379,"Hey @kalev -- quick sanity check -- these changes don't break API/ABI, right?","I used a few tricks to force the enum to 16 bits (e.g. last entry of 0xffff)

The static assertions in GNOME #730932 should guarantee that you don't need to do that for any enum that will fit in 32 bits - if GLib compiles on a particular compiler, then that compiler allocates 4 bytes for all ""reasonably small"" enums.
(You'd still need to apply that trick for enums with more than 32 significant bits, or avoid such enums altogether. Generic int-based APIs like g_value_set_enum(), g_value_set_flags() won't work with larger-than-32-bit enums anyway, so they're best avoided.)",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,220,2018-01-18T21:07:49Z,2018-01-22T16:16:59Z,2018-01-22T16:17:01Z,MERGED,True,94,97,8,https://github.com/hughsie,Wip/hughsie/introspection fixes,4,[],https://github.com/hughsie/appstream-glib/pull/220,https://github.com/hughsie,8,https://github.com/hughsie/appstream-glib/pull/220#issuecomment-359476483,"Hey @kalev -- quick sanity check -- these changes don't break API/ABI, right?","@smcv much appreciated, thanks.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,221,2018-01-23T13:40:20Z,2018-01-23T14:22:13Z,2018-01-23T14:22:33Z,MERGED,True,4,4,1,https://github.com/3v1n0,as-app-desktop: don't deference invalid lists,1,[],https://github.com/hughsie/appstream-glib/pull/221,https://github.com/3v1n0,1,https://github.com/hughsie/appstream-glib/pull/221,"Malformed .desktop files might causes crashes because
the returned list is NULL.
I had this malformed desktop file (See MimeType) in my system and this was causing gnome-software to crash all the times when started.
Since g_key_file_get_string_list can also return a NULL pointer, I think its's safer to do a proper check.","Malformed .desktop files might causes crashes because
the returned list is NULL.
I had this malformed desktop file (See MimeType) in my system and this was causing gnome-software to crash all the times when started.
Since g_key_file_get_string_list can also return a NULL pointer, I think its's safer to do a proper check.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,221,2018-01-23T13:40:20Z,2018-01-23T14:22:13Z,2018-01-23T14:22:33Z,MERGED,True,4,4,1,https://github.com/3v1n0,as-app-desktop: don't deference invalid lists,1,[],https://github.com/hughsie/appstream-glib/pull/221,https://github.com/3v1n0,2,https://github.com/hughsie/appstream-glib/pull/221#issuecomment-359794356,"Malformed .desktop files might causes crashes because
the returned list is NULL.
I had this malformed desktop file (See MimeType) in my system and this was causing gnome-software to crash all the times when started.
Since g_key_file_get_string_list can also return a NULL pointer, I think its's safer to do a proper check.","FYI stacktrace was
#0  0x00007fe6342ca9b9 in as_app_parse_desktop_file (error=0x7ffdc3ad4088, flags=AS_APP_PARSE_FLAG_USE_HEURISTICS, key=0x1ac4050 ""MimeType"", kf=0x19a8b20, app=0x1abd710 [AsApp]) at as-app-desktop.c:274
#1  0x00007fe6342ca9b9 in as_app_parse_desktop_file (app=app@entry=0x1abd710 [AsApp], desktop_file=desktop_file@entry=0x1abcdc0 ""/usr/share/applications/org.gnome.frogr.desktop"", flags=flags@entry=AS_APP_PARSE_FLAG_USE_HEURISTICS, error=error@entry=0x7ffdc3ad4088)
    at as-app-desktop.c:475
#2  0x00007fe6342c90fe in as_app_parse_file (app=app@entry=0x1abd710 [AsApp], filename=filename@entry=0x1abcdc0 ""/usr/share/applications/org.gnome.frogr.desktop"", flags=flags@entry=AS_APP_PARSE_FLAG_USE_HEURISTICS, error=error@entry=0x7ffdc3ad4088) at as-app.c:4941
#3  0x00007fe6342dd256 in as_store_load_installed (store=store@entry=0x16fd330 [AsStore], flags=flags@entry=95, id_prefix=id_prefix@entry=0x7fe6342e7e1e ""system"", path=path@entry=0x1772960 ""/usr/share/applications"", cancellable=cancellable@entry=0x0, error=error@entry=0x7ffdc3ad4250) at as-store.c:2232
#4  0x00007fe6342dd4e4 in as_store_search_installed (store=store@entry=0x16fd330 [AsStore], flags=flags@entry=95, id_prefix=id_prefix@entry=0x7fe6342e7e1e ""system"", path=path@entry=0x17956d0 ""/usr/share/applications"", cancellable=cancellable@entry=0x0, error=error@entry=0x7ffdc3ad4250) at as-store.c:2306
#5  0x00007fe6342dfa87 in as_store_load (error=0x7ffdc3ad4250, cancellable=0x0, flags=95, store=0x16fd330 [AsStore]) at as-store.c:2528
#6  0x00007fe6342dfa87 in as_store_load (store=0x16fd330 [AsStore], flags=95, cancellable=0x0, error=0x7ffdc3ad4250) at as-store.c:2687
#7  0x00007fe6225a55b6 in gs_plugin_setup () at /usr/lib/gs-plugins-9/libgs_plugin_appstream.so
#8  0x00000000004480d8 in gs_plugin_loader_setup ()
#9  0x000000000044acae in  ()
#10 0x000000000044b7f8 in  ()
#11 0x00007fe631eeb328 in g_application_impl_register (error=0x7ffdc3ad43c0, cancellable=0x0, impl=0x16b3500)
    at /build/glib2.0-prJhLS/glib2.0-2.48.2/./gio/gapplicationimpl-dbus.c:406
#12 0x00007fe631eeb328 in g_application_impl_register (application=application@entry=0x16bd0e0 [GsApplication], appid=0x16bf360 ""org.gnome.Software"", flags=G_APPLICATION_HANDLES_OPEN, exported_actions=<optimized out>, remote_actions=remote_actions@entry=0x16bd098, cancellable=cancellable@entry=0x0, error=0x7ffdc3ad43c0) at /build/glib2.0-prJhLS/glib2.0-2.48.2/./gio/gapplicationimpl-dbus.c:555
#13 0x00007fe631ee80e3 in g_application_register (application=0x16bd0e0 [GsApplication], cancellable=0x0, error=0x7ffdc3ad43c0)
    at /build/glib2.0-prJhLS/glib2.0-2.48.2/./gio/gapplication.c:2033
#14 0x000000000044adbf in  ()
#15 0x00007fe62b121e40 in ffi_call_unix64 () at /usr/lib/x86_64-linux-gnu/libffi.so.6
#16 0x00007fe62b1218ab in ffi_call () at /usr/lib/x86_64-linux-gnu/libffi.so.6
#17 0x00007fe631bf8cf5 in g_cclosure_marshal_generic_va (closure=0x16ba500, return_value=0x7ffdc3ad47e0, instance=0x16bd0e0, args_list=<optimized out>, marshal_data=0x44ad00, n_params=1, param_types=0x16b73d0) at /build/glib2.0-prJhLS/glib2.0-2.48.2/./gobject/gclosure.c:1604
#18 0x00007fe631bf81d4 in _g_closure_invoke_va (closure=closure@entry=0x16ba500, return_value=return_value@entry=0x7ffdc3ad47e0, instance=instance@entry=0x16bd0e0, args=args@entry=0x7ffdc3ad48b0, n_params=<optimized out>, param_types=0x16b73d0)
    at /build/glib2.0-prJhLS/glib2.0-2.48.2/./gobject/gclosure.c:867
#19 0x00007fe631c124b8 in g_signal_emit_valist (instance=0x16bd0e0, signal_id=<optimized out>, detail=0, var_args=var_args@entry=0x7ffdc3ad48b0) at /build/glib2.0-prJhLS/glib2.0-2.48.2/./gobject/gsignal.c:3294
#20 0x00007fe631c1308f in g_signal_emit (instance=instance@entry=0x16bd0e0, signal_id=<optimized out>, detail=detail@entry=0)
    at /build/glib2.0-prJhLS/glib2.0-2.48.2/./gobject/gsignal.c:3441
#21 0x00007fe631ee8958 in g_application_real_local_command_line (application=0x16bd0e0 [GsApplication], arguments=0x7ffdc3ad4ab8, exit_status=0x7ffdc3ad4ab4) at /build/glib2.0-prJhLS/glib2.0-2.48.2/./gio/gapplication.c:1004
#22 0x00007fe631ee8ce2 in g_application_run (application=0x16bd0e0 [GsApplication], argc=2, argv=0x7ffdc3ad4c18)
    at /build/glib2.0-prJhLS/glib2.0-2.48.2/./gio/gapplication.c:2350
#23 0x0000000000417593 in main ()",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,221,2018-01-23T13:40:20Z,2018-01-23T14:22:13Z,2018-01-23T14:22:33Z,MERGED,True,4,4,1,https://github.com/3v1n0,as-app-desktop: don't deference invalid lists,1,[],https://github.com/hughsie/appstream-glib/pull/221,https://github.com/hughsie,3,https://github.com/hughsie/appstream-glib/pull/221#issuecomment-359795885,"Malformed .desktop files might causes crashes because
the returned list is NULL.
I had this malformed desktop file (See MimeType) in my system and this was causing gnome-software to crash all the times when started.
Since g_key_file_get_string_list can also return a NULL pointer, I think its's safer to do a proper check.",Good catch! Can you please do list && list[i] != NULL -> list != NULL && list[i] != NULL and then it's good to go. Thanks.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,221,2018-01-23T13:40:20Z,2018-01-23T14:22:13Z,2018-01-23T14:22:33Z,MERGED,True,4,4,1,https://github.com/3v1n0,as-app-desktop: don't deference invalid lists,1,[],https://github.com/hughsie/appstream-glib/pull/221,https://github.com/3v1n0,4,https://github.com/hughsie/appstream-glib/pull/221#issuecomment-359799186,"Malformed .desktop files might causes crashes because
the returned list is NULL.
I had this malformed desktop file (See MimeType) in my system and this was causing gnome-software to crash all the times when started.
Since g_key_file_get_string_list can also return a NULL pointer, I think its's safer to do a proper check.","Done :)
PS: if you can, please backport this also in stable versions as I got this in an LTS ubuntu release for example.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,221,2018-01-23T13:40:20Z,2018-01-23T14:22:13Z,2018-01-23T14:22:33Z,MERGED,True,4,4,1,https://github.com/3v1n0,as-app-desktop: don't deference invalid lists,1,[],https://github.com/hughsie/appstream-glib/pull/221,https://github.com/hughsie,5,https://github.com/hughsie/appstream-glib/pull/221#issuecomment-359805335,"Malformed .desktop files might causes crashes because
the returned list is NULL.
I had this malformed desktop file (See MimeType) in my system and this was causing gnome-software to crash all the times when started.
Since g_key_file_get_string_list can also return a NULL pointer, I think its's safer to do a proper check.","Will do, thanks. I'll do a stable release in a week or so with other fixes.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,229,2018-03-20T07:30:59Z,2018-03-27T09:44:44Z,2018-03-27T09:44:44Z,CLOSED,False,1,1,1,https://github.com/CrazyCxl,for issues#228 update asb_package_guess_from_filename for inaccuracy rpm filename,1,[],https://github.com/hughsie/appstream-glib/pull/229,https://github.com/CrazyCxl,1,https://github.com/hughsie/appstream-glib/pull/229,"in appstream-glib/libappstream-builder/asb-package.c asb_package_guess_from_filename
if priv->filename likes /xxx/xxx-xxx/xxx-xxx/free/x86_64/xxx.x86_64.rpm , then priv will get
arch:x86_64
release:ccc/free/x86_64/test
version:bbb/ccc
name:bbb

Obviously, that's wrong.","in appstream-glib/libappstream-builder/asb-package.c asb_package_guess_from_filename
if priv->filename likes /xxx/xxx-xxx/xxx-xxx/free/x86_64/xxx.x86_64.rpm , then priv will get
arch:x86_64
release:ccc/free/x86_64/test
version:bbb/ccc
name:bbb

Obviously, that's wrong.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,229,2018-03-20T07:30:59Z,2018-03-27T09:44:44Z,2018-03-27T09:44:44Z,CLOSED,False,1,1,1,https://github.com/CrazyCxl,for issues#228 update asb_package_guess_from_filename for inaccuracy rpm filename,1,[],https://github.com/hughsie/appstream-glib/pull/229,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/229#issuecomment-376463103,"in appstream-glib/libappstream-builder/asb-package.c asb_package_guess_from_filename
if priv->filename likes /xxx/xxx-xxx/xxx-xxx/free/x86_64/xxx.x86_64.rpm , then priv will get
arch:x86_64
release:ccc/free/x86_64/test
version:bbb/ccc
name:bbb

Obviously, that's wrong.",I fixed this a slightly different way -- thanks for the PR tho.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,232,2018-04-17T14:02:44Z,2018-04-17T15:14:56Z,2018-04-17T15:15:01Z,MERGED,True,4,1,1,https://github.com/kalev,Veto apps that have empty OnlyShowIn=,1,[],https://github.com/hughsie/appstream-glib/pull/232,https://github.com/kalev,1,https://github.com/hughsie/appstream-glib/pull/232,"Apps that have OnlyShowIn= are equivalent to NoDisplay=True (gnome-shell
doesn't show them). Veto such apps to avoid them inadvertently showing
up in gnome-software and to match gnome-shell behaviour.
https://bugzilla.redhat.com/show_bug.cgi?id=1567689
https://gitlab.gnome.org/GNOME/gnome-software/issues/367","Apps that have OnlyShowIn= are equivalent to NoDisplay=True (gnome-shell
doesn't show them). Veto such apps to avoid them inadvertently showing
up in gnome-software and to match gnome-shell behaviour.
https://bugzilla.redhat.com/show_bug.cgi?id=1567689
https://gitlab.gnome.org/GNOME/gnome-software/issues/367",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,240,2018-05-14T09:01:02Z,2018-06-12T07:27:43Z,2018-06-12T07:27:46Z,MERGED,True,34,961,24,https://github.com/hughsie,Do not parse firmware files,1,[],https://github.com/hughsie/appstream-glib/pull/240,https://github.com/hughsie,1,https://github.com/hughsie/appstream-glib/pull/240,"Firmware should now be distributed using the LVFS and consumed by fwupd.
This makes the library a lot simpler and drops a dep that most projects won't need.","Firmware should now be distributed using the LVFS and consumed by fwupd.
This makes the library a lot simpler and drops a dep that most projects won't need.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,240,2018-05-14T09:01:02Z,2018-06-12T07:27:43Z,2018-06-12T07:27:46Z,MERGED,True,34,961,24,https://github.com/hughsie,Do not parse firmware files,1,[],https://github.com/hughsie/appstream-glib/pull/240,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/240#issuecomment-388747265,"Firmware should now be distributed using the LVFS and consumed by fwupd.
This makes the library a lot simpler and drops a dep that most projects won't need.",@superm1 comments welcome,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,240,2018-05-14T09:01:02Z,2018-06-12T07:27:43Z,2018-06-12T07:27:46Z,MERGED,True,34,961,24,https://github.com/hughsie,Do not parse firmware files,1,[],https://github.com/hughsie/appstream-glib/pull/240,https://github.com/superm1,3,https://github.com/hughsie/appstream-glib/pull/240#issuecomment-388793560,"Firmware should now be distributed using the LVFS and consumed by fwupd.
This makes the library a lot simpler and drops a dep that most projects won't need.",Will this prevent being able to create a local appstream metadata to use with fwupd via appstream-util?,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,240,2018-05-14T09:01:02Z,2018-06-12T07:27:43Z,2018-06-12T07:27:46Z,MERGED,True,34,961,24,https://github.com/hughsie,Do not parse firmware files,1,[],https://github.com/hughsie/appstream-glib/pull/240,https://github.com/hughsie,4,https://github.com/hughsie/appstream-glib/pull/240#issuecomment-388802761,"Firmware should now be distributed using the LVFS and consumed by fwupd.
This makes the library a lot simpler and drops a dep that most projects won't need.","Yes, although because we've been doing this on the LVFS it's now horribly out-of-specification. All the clever bits are in the LVFS, and I think it's okay to tell people to just spin up a private instance if they're not comfortable with the public one. Either way, it sucks having the code in two places, in different languages, handled in different ways.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,240,2018-05-14T09:01:02Z,2018-06-12T07:27:43Z,2018-06-12T07:27:46Z,MERGED,True,34,961,24,https://github.com/hughsie,Do not parse firmware files,1,[],https://github.com/hughsie/appstream-glib/pull/240,https://github.com/superm1,5,https://github.com/hughsie/appstream-glib/pull/240#issuecomment-388807593,"Firmware should now be distributed using the LVFS and consumed by fwupd.
This makes the library a lot simpler and drops a dep that most projects won't need.","Well the main thing I'm thinking about is ""local repository"" support where an embedded distro may try to use a bunch of cabs that were locally built into the filesystem and generate the metadata from it.
I do get the problem with the same code in multiple languages but I think that there needs to be an easy way to generate that metadata without spinning up LVFS still. An easy to run python script is probably fine (maybe the LVFS code just repackaged into something easily executable).",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,240,2018-05-14T09:01:02Z,2018-06-12T07:27:43Z,2018-06-12T07:27:46Z,MERGED,True,34,961,24,https://github.com/hughsie,Do not parse firmware files,1,[],https://github.com/hughsie/appstream-glib/pull/240,https://github.com/hughsie,6,https://github.com/hughsie/appstream-glib/pull/240#issuecomment-388823009,"Firmware should now be distributed using the LVFS and consumed by fwupd.
This makes the library a lot simpler and drops a dep that most projects won't need.","where an embedded distro may try to use a bunch of cabs

Valid point.

maybe the LVFS code just repackaged into something easily executable

I think this might be the best plan.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,242,2018-06-10T13:58:02Z,2018-06-10T15:58:24Z,2018-06-10T16:07:10Z,MERGED,True,4,1,1,https://github.com/piotrdrag,its: Extract release descriptions and agreement sections for translation,1,[],https://github.com/hughsie/appstream-glib/pull/242,https://github.com/piotrdrag,1,https://github.com/hughsie/appstream-glib/pull/242,To keep up with https://github.com/ximion/appstream/commits/master/data/its/metainfo.its.,To keep up with https://github.com/ximion/appstream/commits/master/data/its/metainfo.its.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,245,2018-06-21T23:12:32Z,2018-06-26T23:54:12Z,2018-06-26T23:54:19Z,MERGED,True,271,7,19,https://github.com/robert-ancell,Add object type checks on the inputs of all functions,1,[],https://github.com/hughsie/appstream-glib/pull/245,https://github.com/robert-ancell,1,https://github.com/hughsie/appstream-glib/pull/245,,,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,245,2018-06-21T23:12:32Z,2018-06-26T23:54:12Z,2018-06-26T23:54:19Z,MERGED,True,271,7,19,https://github.com/robert-ancell,Add object type checks on the inputs of all functions,1,[],https://github.com/hughsie/appstream-glib/pull/245,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/245#issuecomment-400246762,,"Do you really need the:
AsAgreementSectionPrivate *priv;
g_return_val_if_fail (AS_IS_AGREEMENT_SECTION (agreement_section), NULL);
priv = GET_PRIVATE (agreement_section);

I thought GET_PRIVATE was just doing a pointer addition (i.e. not dereferencing anything) and was safe to do before the object check?",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,245,2018-06-21T23:12:32Z,2018-06-26T23:54:12Z,2018-06-26T23:54:19Z,MERGED,True,271,7,19,https://github.com/robert-ancell,Add object type checks on the inputs of all functions,1,[],https://github.com/hughsie/appstream-glib/pull/245,https://github.com/robert-ancell,3,https://github.com/hughsie/appstream-glib/pull/245#issuecomment-400464791,,"@hughsie I came to the same conclusion about 80% of the way through the patch, though I wasn't 100% sure and couldn't find any explicit documentation to assert that would be true. I'm happy to change them all to do it before the object check.
I thought there was a small risk of another variable definition using priv before the check, but this seems reasonable low (and should cease to exist when we finally start using C99 variable declarations at the point we need the variable...).",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,247,2018-06-26T14:09:20Z,2019-02-06T12:11:28Z,2019-02-06T12:11:28Z,CLOSED,False,1,1,1,https://github.com/Jehan,Augment the max length of <li> tag to 300 in strict validation.,1,[],https://github.com/hughsie/appstream-glib/pull/247,https://github.com/Jehan,1,https://github.com/hughsie/appstream-glib/pull/247,"Our release <description> is not long, but clearly not one-worded. We still give a short description of the new features we list. Otherwise if we just drop titles, we may as well not write anything because that would be barely understandable.
Unfortunately it seems you limit list items to 100 characters. This is just too short IMO. It's like worse than a tweet or something! :P
• style-invalid         : <li> is too long [Horizon Straightening: the Measurement tool is augmented with a button to rotate the active drawable with the measurement line used as horizon. It works on linked drawables as well.] maximum is 100 chars

Could we drop the limit or raise it to something reasonable (like at least 300 characters?).
Also nothing in the spec says anything either about size limitation.","Our release <description> is not long, but clearly not one-worded. We still give a short description of the new features we list. Otherwise if we just drop titles, we may as well not write anything because that would be barely understandable.
Unfortunately it seems you limit list items to 100 characters. This is just too short IMO. It's like worse than a tweet or something! :P
• style-invalid         : <li> is too long [Horizon Straightening: the Measurement tool is augmented with a button to rotate the active drawable with the measurement line used as horizon. It works on linked drawables as well.] maximum is 100 chars

Could we drop the limit or raise it to something reasonable (like at least 300 characters?).
Also nothing in the spec says anything either about size limitation.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,247,2018-06-26T14:09:20Z,2019-02-06T12:11:28Z,2019-02-06T12:11:28Z,CLOSED,False,1,1,1,https://github.com/Jehan,Augment the max length of <li> tag to 300 in strict validation.,1,[],https://github.com/hughsie/appstream-glib/pull/247,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/247#issuecomment-400334712,"Our release <description> is not long, but clearly not one-worded. We still give a short description of the new features we list. Otherwise if we just drop titles, we may as well not write anything because that would be barely understandable.
Unfortunately it seems you limit list items to 100 characters. This is just too short IMO. It's like worse than a tweet or something! :P
• style-invalid         : <li> is too long [Horizon Straightening: the Measurement tool is augmented with a button to rotate the active drawable with the measurement line used as horizon. It works on linked drawables as well.] maximum is 100 chars

Could we drop the limit or raise it to something reasonable (like at least 300 characters?).
Also nothing in the spec says anything either about size limitation.","Horizon Straightening: the Measurement tool is augmented with a button to rotate the active drawable with the measurement line used as horizon. It works on linked drawables as well.

This is too long. List elements are supposed to be one sentence long.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,247,2018-06-26T14:09:20Z,2019-02-06T12:11:28Z,2019-02-06T12:11:28Z,CLOSED,False,1,1,1,https://github.com/Jehan,Augment the max length of <li> tag to 300 in strict validation.,1,[],https://github.com/hughsie/appstream-glib/pull/247,https://github.com/Jehan,3,https://github.com/hughsie/appstream-glib/pull/247#issuecomment-400342990,"Our release <description> is not long, but clearly not one-worded. We still give a short description of the new features we list. Otherwise if we just drop titles, we may as well not write anything because that would be barely understandable.
Unfortunately it seems you limit list items to 100 characters. This is just too short IMO. It's like worse than a tweet or something! :P
• style-invalid         : <li> is too long [Horizon Straightening: the Measurement tool is augmented with a button to rotate the active drawable with the measurement line used as horizon. It works on linked drawables as well.] maximum is 100 chars

Could we drop the limit or raise it to something reasonable (like at least 300 characters?).
Also nothing in the spec says anything either about size limitation.","I think the problem is that we just have a very different definition of how should be the release notes. How would you reword so that the feature stays understandable within 100 chars?
For this example, I even chose an easy one. In the 2.10.4 list, I have longer items, for which a 100-char descriptions simple impossible to me. E.g.:

PSD loader improvements: new file type ""Photoshop image (merged)"" to import a correctly rendered PSD file by loading pre-composited version of the image, even when some features are not supported by GIMP.

If we cannot write down understandable description of the release, I am just wondering what the feature is about (maybe we should stick to just give the release dates as most other projects are doing).",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,247,2018-06-26T14:09:20Z,2019-02-06T12:11:28Z,2019-02-06T12:11:28Z,CLOSED,False,1,1,1,https://github.com/Jehan,Augment the max length of <li> tag to 300 in strict validation.,1,[],https://github.com/hughsie/appstream-glib/pull/247,https://github.com/hughsie,4,https://github.com/hughsie/appstream-glib/pull/247#issuecomment-400347117,"Our release <description> is not long, but clearly not one-worded. We still give a short description of the new features we list. Otherwise if we just drop titles, we may as well not write anything because that would be barely understandable.
Unfortunately it seems you limit list items to 100 characters. This is just too short IMO. It's like worse than a tweet or something! :P
• style-invalid         : <li> is too long [Horizon Straightening: the Measurement tool is augmented with a button to rotate the active drawable with the measurement line used as horizon. It works on linked drawables as well.] maximum is 100 chars

Could we drop the limit or raise it to something reasonable (like at least 300 characters?).
Also nothing in the spec says anything either about size limitation.","PSD loader improvements: new file type ""Photoshop image (merged)"" to import a correctly rendered PSD file by loading pre-composited version of the image, even when some features are not supported by GIMP.

That's just too wordy. How about Improve the PSD loader to import a pre-composited version of the image when not all features are supported

If we cannot write down understandable description of the release

The release notes are supposed to be just that, notes -- rather than a huge document used to promote the release. It's the same reason we don't allow images or screenshots in the release tags.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,247,2018-06-26T14:09:20Z,2019-02-06T12:11:28Z,2019-02-06T12:11:28Z,CLOSED,False,1,1,1,https://github.com/Jehan,Augment the max length of <li> tag to 300 in strict validation.,1,[],https://github.com/hughsie/appstream-glib/pull/247,https://github.com/Jehan,5,https://github.com/hughsie/appstream-glib/pull/247#issuecomment-400365699,"Our release <description> is not long, but clearly not one-worded. We still give a short description of the new features we list. Otherwise if we just drop titles, we may as well not write anything because that would be barely understandable.
Unfortunately it seems you limit list items to 100 characters. This is just too short IMO. It's like worse than a tweet or something! :P
• style-invalid         : <li> is too long [Horizon Straightening: the Measurement tool is augmented with a button to rotate the active drawable with the measurement line used as horizon. It works on linked drawables as well.] maximum is 100 chars

Could we drop the limit or raise it to something reasonable (like at least 300 characters?).
Also nothing in the spec says anything either about size limitation.","Improve the PSD loader to import a pre-composited version of the image when not all features are supported

For the records, it's still too long. My editor counts 106 characters. So your version would also trigger an error with validate-strict. ;-)

The release notes are supposed to be just that, notes -- rather than a huge document used to promote the release. It's the same reason we don't allow images or screenshots in the release tags.

Ok. Then maybe let's forget this request. What about discussing again (I think we discussed this as well, let's revive the discussion!) a release URL? For each of our releases, we have a corresponding blog post which does just that: longer descriptions, screenshots, etc. It's not necessarily that long nor exhaustive, but at least it's more than just a list of 100-chars lines.
But validate-strict also tells us:
<release> description should be prose and not contain hyperlinks

What about allowing hyperlinks, or simply allowing <url/> as possible child tag of <release> in appdata? Then people who want more info about a release can just click it.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,247,2018-06-26T14:09:20Z,2019-02-06T12:11:28Z,2019-02-06T12:11:28Z,CLOSED,False,1,1,1,https://github.com/Jehan,Augment the max length of <li> tag to 300 in strict validation.,1,[],https://github.com/hughsie/appstream-glib/pull/247,https://github.com/Jehan,6,https://github.com/hughsie/appstream-glib/pull/247#issuecomment-400367593,"Our release <description> is not long, but clearly not one-worded. We still give a short description of the new features we list. Otherwise if we just drop titles, we may as well not write anything because that would be barely understandable.
Unfortunately it seems you limit list items to 100 characters. This is just too short IMO. It's like worse than a tweet or something! :P
• style-invalid         : <li> is too long [Horizon Straightening: the Measurement tool is augmented with a button to rotate the active drawable with the measurement line used as horizon. It works on linked drawables as well.] maximum is 100 chars

Could we drop the limit or raise it to something reasonable (like at least 300 characters?).
Also nothing in the spec says anything either about size limitation.","Oh well I just found where we had this discussion. I completely forgot that I opened a pull request on the appstream repo long ago with a commit to amend the spec for exactly this:
ximion/appstream#160
If we have this feature, I don't mind at all that descriptions could be just very small texts. Right now my problem is that we are stuck in this half-assed situation where appdata proposes us to write about our release while giving us no chance to give any details to people.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,247,2018-06-26T14:09:20Z,2019-02-06T12:11:28Z,2019-02-06T12:11:28Z,CLOSED,False,1,1,1,https://github.com/Jehan,Augment the max length of <li> tag to 300 in strict validation.,1,[],https://github.com/hughsie/appstream-glib/pull/247,https://github.com/hughsie,7,https://github.com/hughsie/appstream-glib/pull/247#issuecomment-400732143,"Our release <description> is not long, but clearly not one-worded. We still give a short description of the new features we list. Otherwise if we just drop titles, we may as well not write anything because that would be barely understandable.
Unfortunately it seems you limit list items to 100 characters. This is just too short IMO. It's like worse than a tweet or something! :P
• style-invalid         : <li> is too long [Horizon Straightening: the Measurement tool is augmented with a button to rotate the active drawable with the measurement line used as horizon. It works on linked drawables as well.] maximum is 100 chars

Could we drop the limit or raise it to something reasonable (like at least 300 characters?).
Also nothing in the spec says anything either about size limitation.",I think use validate relax and then I'll work on the appstream-glib and gnome-software functionality to display the URL in gnome-software.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,247,2018-06-26T14:09:20Z,2019-02-06T12:11:28Z,2019-02-06T12:11:28Z,CLOSED,False,1,1,1,https://github.com/Jehan,Augment the max length of <li> tag to 300 in strict validation.,1,[],https://github.com/hughsie/appstream-glib/pull/247,https://github.com/Jehan,8,https://github.com/hughsie/appstream-glib/pull/247#issuecomment-400742120,"Our release <description> is not long, but clearly not one-worded. We still give a short description of the new features we list. Otherwise if we just drop titles, we may as well not write anything because that would be barely understandable.
Unfortunately it seems you limit list items to 100 characters. This is just too short IMO. It's like worse than a tweet or something! :P
• style-invalid         : <li> is too long [Horizon Straightening: the Measurement tool is augmented with a button to rotate the active drawable with the measurement line used as horizon. It works on linked drawables as well.] maximum is 100 chars

Could we drop the limit or raise it to something reasonable (like at least 300 characters?).
Also nothing in the spec says anything either about size limitation.","Thanks! We are actually validating with relax currently, though I sometimes check what we would miss to be validated as ""strict"", hence the sudden flow of bug reports when I do such check. ;-)
Anyway looking forward to the possibility to add an URL to a release. :-)",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,247,2018-06-26T14:09:20Z,2019-02-06T12:11:28Z,2019-02-06T12:11:28Z,CLOSED,False,1,1,1,https://github.com/Jehan,Augment the max length of <li> tag to 300 in strict validation.,1,[],https://github.com/hughsie/appstream-glib/pull/247,https://github.com/hughsie,9,https://github.com/hughsie/appstream-glib/pull/247#issuecomment-461001840,"Our release <description> is not long, but clearly not one-worded. We still give a short description of the new features we list. Otherwise if we just drop titles, we may as well not write anything because that would be barely understandable.
Unfortunately it seems you limit list items to 100 characters. This is just too short IMO. It's like worse than a tweet or something! :P
• style-invalid         : <li> is too long [Horizon Straightening: the Measurement tool is augmented with a button to rotate the active drawable with the measurement line used as horizon. It works on linked drawables as well.] maximum is 100 chars

Could we drop the limit or raise it to something reasonable (like at least 300 characters?).
Also nothing in the spec says anything either about size limitation.","Anyway looking forward to the possibility to add an URL to a release.

We have this now: you can put a  into the release section.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,251,2018-07-11T18:23:53Z,2018-07-11T18:33:22Z,2018-07-11T18:34:18Z,MERGED,True,2,0,1,https://github.com/Androbin,Escape quotes in attributes,1,[],https://github.com/hughsie/appstream-glib/pull/251,https://github.com/Androbin,1,https://github.com/hughsie/appstream-glib/pull/251,Follow-up on 6048520,Follow-up on 6048520,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,254,2018-07-29T22:47:57Z,2018-08-04T10:18:11Z,2018-08-04T10:18:11Z,MERGED,True,9,4,2,https://github.com/robert-ancell,Never include '&' in attribute values,1,[],https://github.com/hughsie/appstream-glib/pull/254,https://github.com/robert-ancell,1,https://github.com/hughsie/appstream-glib/pull/254,Fixes: https://github.com/hughsie/lvfs-website/issues/33,Fixes: https://github.com/hughsie/lvfs-website/issues/33,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,255,2018-07-30T10:05:42Z,,2019-04-09T16:02:50Z,OPEN,False,20,11,1,https://github.com/iainlane,as-image: Handle images which are smaller than the destination,1,[],https://github.com/hughsie/appstream-glib/pull/255,https://github.com/iainlane,1,https://github.com/hughsie/appstream-glib/pull/255,"We currently don't consider this case at all, which results in negative
coordinates being passed to gdk_pixbuf_copy_area().
Let's instead look and see if the source image is smaller than the
destination. If it is, we just need to put it in the middle of our
desintation pixbuf.
This fixes a bug in gnome-software on Debian/Ubuntu where font previews are not shown, because they are smaller than the 1024x96 (?) that gnome-software is requesting and the code tries to upscale them. A later error makes this fail, but we should probably handle this by just never upscaling.","We currently don't consider this case at all, which results in negative
coordinates being passed to gdk_pixbuf_copy_area().
Let's instead look and see if the source image is smaller than the
destination. If it is, we just need to put it in the middle of our
desintation pixbuf.
This fixes a bug in gnome-software on Debian/Ubuntu where font previews are not shown, because they are smaller than the 1024x96 (?) that gnome-software is requesting and the code tries to upscale them. A later error makes this fail, but we should probably handle this by just never upscaling.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,255,2018-07-30T10:05:42Z,,2019-04-09T16:02:50Z,OPEN,False,20,11,1,https://github.com/iainlane,as-image: Handle images which are smaller than the destination,1,[],https://github.com/hughsie/appstream-glib/pull/255,https://github.com/ximion,2,https://github.com/hughsie/appstream-glib/pull/255#issuecomment-409138708,"We currently don't consider this case at all, which results in negative
coordinates being passed to gdk_pixbuf_copy_area().
Let's instead look and see if the source image is smaller than the
destination. If it is, we just need to put it in the middle of our
desintation pixbuf.
This fixes a bug in gnome-software on Debian/Ubuntu where font previews are not shown, because they are smaller than the 1024x96 (?) that gnome-software is requesting and the code tries to upscale them. A later error makes this fail, but we should probably handle this by just never upscaling.","+1 in general, but @hughsie has the last word.
One thing that leaves me puzzled here is that I experience this bug when running GNOME Software on GNOME Shell (no screenshots for fonts get shown), but when I run GS on KDE Plasma, the bug does not appear and GS works as expected.
So, for some reason GNOME Software works better on Plasma than on GNOME.
I also have no idea why the DE would have any impact on the behavior of a image scaling/padding function, so at the moment I just admire this bug for its weirdness.
Regardless, Iains patch looks good to me and makes sense.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,255,2018-07-30T10:05:42Z,,2019-04-09T16:02:50Z,OPEN,False,20,11,1,https://github.com/iainlane,as-image: Handle images which are smaller than the destination,1,[],https://github.com/hughsie/appstream-glib/pull/255,https://github.com/robert-ancell,3,https://github.com/hughsie/appstream-glib/pull/255#issuecomment-409764204,"We currently don't consider this case at all, which results in negative
coordinates being passed to gdk_pixbuf_copy_area().
Let's instead look and see if the source image is smaller than the
destination. If it is, we just need to put it in the middle of our
desintation pixbuf.
This fixes a bug in gnome-software on Debian/Ubuntu where font previews are not shown, because they are smaller than the 1024x96 (?) that gnome-software is requesting and the code tries to upscale them. A later error makes this fail, but we should probably handle this by just never upscaling.",This change seems overly complex - I think the solution is just to fix the scaling code to handle all requested sizes - see #256,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,255,2018-07-30T10:05:42Z,,2019-04-09T16:02:50Z,OPEN,False,20,11,1,https://github.com/iainlane,as-image: Handle images which are smaller than the destination,1,[],https://github.com/hughsie/appstream-glib/pull/255,https://github.com/iainlane,4,https://github.com/hughsie/appstream-glib/pull/255#issuecomment-409776713,"We currently don't consider this case at all, which results in negative
coordinates being passed to gdk_pixbuf_copy_area().
Let's instead look and see if the source image is smaller than the
destination. If it is, we just need to put it in the middle of our
desintation pixbuf.
This fixes a bug in gnome-software on Debian/Ubuntu where font previews are not shown, because they are smaller than the 1024x96 (?) that gnome-software is requesting and the code tries to upscale them. A later error makes this fail, but we should probably handle this by just never upscaling.","Thanks Robert. The outcomes are different between the two cases though, I think. In this one we never upscale, but just position the source image in the middle, and in the other one (AFAICS) you upscale the required dimension so it fits.
This PR:

#256:",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,255,2018-07-30T10:05:42Z,,2019-04-09T16:02:50Z,OPEN,False,20,11,1,https://github.com/iainlane,as-image: Handle images which are smaller than the destination,1,[],https://github.com/hughsie/appstream-glib/pull/255,https://github.com/robert-ancell,5,https://github.com/hughsie/appstream-glib/pull/255#issuecomment-409780950,"We currently don't consider this case at all, which results in negative
coordinates being passed to gdk_pixbuf_copy_area().
Let's instead look and see if the source image is smaller than the
destination. If it is, we just need to put it in the middle of our
desintation pixbuf.
This fixes a bug in gnome-software on Debian/Ubuntu where font previews are not shown, because they are smaller than the 1024x96 (?) that gnome-software is requesting and the code tries to upscale them. A later error makes this fail, but we should probably handle this by just never upscaling.","@iainlane yeah, correct the other MR scales in all cases. Your method looks a lot sharper which seems the right solution here. I'm not sure what the intention of as_image_save_pixbuf is supposed to be - I guess we'll have to see what @hughsie says.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,255,2018-07-30T10:05:42Z,,2019-04-09T16:02:50Z,OPEN,False,20,11,1,https://github.com/iainlane,as-image: Handle images which are smaller than the destination,1,[],https://github.com/hughsie/appstream-glib/pull/255,https://github.com/kalev,6,https://github.com/hughsie/appstream-glib/pull/255#issuecomment-481260864,"We currently don't consider this case at all, which results in negative
coordinates being passed to gdk_pixbuf_copy_area().
Let's instead look and see if the source image is smaller than the
destination. If it is, we just need to put it in the middle of our
desintation pixbuf.
This fixes a bug in gnome-software on Debian/Ubuntu where font previews are not shown, because they are smaller than the 1024x96 (?) that gnome-software is requesting and the code tries to upscale them. A later error makes this fail, but we should probably handle this by just never upscaling.","The image scaling here is deliberate as much as I remember. We had a long long discussion in the past how to handle icons that aren't the correct size for gnome-software UI. The options were a) scale icons so that it fits gnome-software UI, but makes icons blurry, or b) show pixel-perfect icons and throw off gnome-software UI elements due to that.
It's mostly a tradeoff question. I don't think there's a right answer here. We used to have (b), but then we changed it to (a) so that we could rely on gnome-software UI looking as we designed it, and instead ask app authors to ship the correct size icons.
Maybe the answer is different for front screenshots and option (b) would make more sense, but in that case I'd like to make sure that the up scaling doesn't apply to regular icons, because this here is generic code that applies to both I believe.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,255,2018-07-30T10:05:42Z,,2019-04-09T16:02:50Z,OPEN,False,20,11,1,https://github.com/iainlane,as-image: Handle images which are smaller than the destination,1,[],https://github.com/hughsie/appstream-glib/pull/255,https://github.com/kalev,7,https://github.com/hughsie/appstream-glib/pull/255#issuecomment-481261819,"We currently don't consider this case at all, which results in negative
coordinates being passed to gdk_pixbuf_copy_area().
Let's instead look and see if the source image is smaller than the
destination. If it is, we just need to put it in the middle of our
desintation pixbuf.
This fixes a bug in gnome-software on Debian/Ubuntu where font previews are not shown, because they are smaller than the 1024x96 (?) that gnome-software is requesting and the code tries to upscale them. A later error makes this fail, but we should probably handle this by just never upscaling.",Can't you just fix the appstream data in Ubuntu to ship font screenshots that are correctly sized for gnome-software?,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,255,2018-07-30T10:05:42Z,,2019-04-09T16:02:50Z,OPEN,False,20,11,1,https://github.com/iainlane,as-image: Handle images which are smaller than the destination,1,[],https://github.com/hughsie/appstream-glib/pull/255,https://github.com/iainlane,8,https://github.com/hughsie/appstream-glib/pull/255#issuecomment-481271252,"We currently don't consider this case at all, which results in negative
coordinates being passed to gdk_pixbuf_copy_area().
Let's instead look and see if the source image is smaller than the
destination. If it is, we just need to put it in the middle of our
desintation pixbuf.
This fixes a bug in gnome-software on Debian/Ubuntu where font previews are not shown, because they are smaller than the 1024x96 (?) that gnome-software is requesting and the code tries to upscale them. A later error makes this fail, but we should probably handle this by just never upscaling.","Isn't the value that GNOME software uses essentially arbitrary? Not sure it would be right for the appstream generator to have knowledge of the value 1024×96 to be honest.
I think icons use AsIcon and this is essentially only for screenshots, or is that wrong?",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,255,2018-07-30T10:05:42Z,,2019-04-09T16:02:50Z,OPEN,False,20,11,1,https://github.com/iainlane,as-image: Handle images which are smaller than the destination,1,[],https://github.com/hughsie/appstream-glib/pull/255,https://github.com/kalev,9,https://github.com/hughsie/appstream-glib/pull/255#issuecomment-481275269,"We currently don't consider this case at all, which results in negative
coordinates being passed to gdk_pixbuf_copy_area().
Let's instead look and see if the source image is smaller than the
destination. If it is, we just need to put it in the middle of our
desintation pixbuf.
This fixes a bug in gnome-software on Debian/Ubuntu where font previews are not shown, because they are smaller than the 1024x96 (?) that gnome-software is requesting and the code tries to upscale them. A later error makes this fail, but we should probably handle this by just never upscaling.","@hughsie, is this code just for screenshots?
@ximion Does it sound right or wrong for you to have appstream generator output 1024x96 px font screenshots?",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,255,2018-07-30T10:05:42Z,,2019-04-09T16:02:50Z,OPEN,False,20,11,1,https://github.com/iainlane,as-image: Handle images which are smaller than the destination,1,[],https://github.com/hughsie/appstream-glib/pull/255,https://github.com/ximion,10,https://github.com/hughsie/appstream-glib/pull/255#issuecomment-481315230,"We currently don't consider this case at all, which results in negative
coordinates being passed to gdk_pixbuf_copy_area().
Let's instead look and see if the source image is smaller than the
destination. If it is, we just need to put it in the middle of our
desintation pixbuf.
This fixes a bug in gnome-software on Debian/Ubuntu where font previews are not shown, because they are smaller than the 1024x96 (?) that gnome-software is requesting and the code tries to upscale them. A later error makes this fail, but we should probably handle this by just never upscaling.","@kalev The AppStream spec is very explicit about icon sizes (there are rules that must be followed), but for screenshots there are only recommendations for apps and the software center has to deal with whatever it gets.
That also means though that there would be nothing wrong with having appstream-generator produce arbitrary screenshot sizes for fonts, including 1024x96px (if that doesn't mess up other software centers that started to rely on other sizes).",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,256,2018-08-02T00:08:25Z,2018-08-02T02:04:59Z,2018-08-02T02:04:59Z,CLOSED,False,10,3,2,https://github.com/robert-ancell,as-image: Correctly scale and position images into requested size,1,[],https://github.com/hughsie/appstream-glib/pull/256,https://github.com/robert-ancell,1,https://github.com/hughsie/appstream-glib/pull/256,The previous code didn't handle output dimensions that were needed letterboxing.,The previous code didn't handle output dimensions that were needed letterboxing.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,256,2018-08-02T00:08:25Z,2018-08-02T02:04:59Z,2018-08-02T02:04:59Z,CLOSED,False,10,3,2,https://github.com/robert-ancell,as-image: Correctly scale and position images into requested size,1,[],https://github.com/hughsie/appstream-glib/pull/256,https://github.com/robert-ancell,2,https://github.com/hughsie/appstream-glib/pull/256#issuecomment-409764270,The previous code didn't handle output dimensions that were needed letterboxing.,This is an alternative solution to #255,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,256,2018-08-02T00:08:25Z,2018-08-02T02:04:59Z,2018-08-02T02:04:59Z,CLOSED,False,10,3,2,https://github.com/robert-ancell,as-image: Correctly scale and position images into requested size,1,[],https://github.com/hughsie/appstream-glib/pull/256,https://github.com/robert-ancell,3,https://github.com/hughsie/appstream-glib/pull/256#issuecomment-409781778,The previous code didn't handle output dimensions that were needed letterboxing.,"I'm pretty sure that #255 is more correct, so closing this.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,257,2018-08-06T23:46:39Z,2018-08-07T06:46:51Z,2018-08-07T06:46:51Z,MERGED,True,2,0,1,https://github.com/robert-ancell,Add AS_APP_QUIRK_DEVELOPER_VERIFIED,1,[],https://github.com/hughsie/appstream-glib/pull/257,https://github.com/robert-ancell,1,https://github.com/hughsie/appstream-glib/pull/257,"This quirk allows apps to marked as having an additional level of checking
performed on the developer. This is to give confidence to the user that this
is the official version of an app. This is a common design pattern used in
modern packaging systems (e.g. Apple App Store, Google Play).","This quirk allows apps to marked as having an additional level of checking
performed on the developer. This is to give confidence to the user that this
is the official version of an app. This is a common design pattern used in
modern packaging systems (e.g. Apple App Store, Google Play).",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,259,2018-08-22T19:23:27Z,2018-08-27T12:45:05Z,2018-08-27T12:45:05Z,MERGED,True,5,4,1,https://github.com/suve,Change order of arguments in matrix-html to match status-html,1,[],https://github.com/hughsie/appstream-glib/pull/259,https://github.com/suve,1,https://github.com/hughsie/appstream-glib/pull/259,"This changeset fixes issue #253.
There's one thing I'm wondering about, though - matrix-html can take multiple input.tar.gz arguments, while the status-* functions can only take one. Is there any particular reason behind this? Because if not, then I think that also should be changed to make the API more consistent.","This changeset fixes issue #253.
There's one thing I'm wondering about, though - matrix-html can take multiple input.tar.gz arguments, while the status-* functions can only take one. Is there any particular reason behind this? Because if not, then I think that also should be changed to make the API more consistent.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,259,2018-08-22T19:23:27Z,2018-08-27T12:45:05Z,2018-08-27T12:45:05Z,MERGED,True,5,4,1,https://github.com/suve,Change order of arguments in matrix-html to match status-html,1,[],https://github.com/hughsie/appstream-glib/pull/259,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/259#issuecomment-416018959,"This changeset fixes issue #253.
There's one thing I'm wondering about, though - matrix-html can take multiple input.tar.gz arguments, while the status-* functions can only take one. Is there any particular reason behind this? Because if not, then I think that also should be changed to make the API more consistent.","Mostly looks good to me, a few tiny nits. Thanks!",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,259,2018-08-22T19:23:27Z,2018-08-27T12:45:05Z,2018-08-27T12:45:05Z,MERGED,True,5,4,1,https://github.com/suve,Change order of arguments in matrix-html to match status-html,1,[],https://github.com/hughsie/appstream-glib/pull/259,https://github.com/suve,3,https://github.com/hughsie/appstream-glib/pull/259#issuecomment-416185685,"This changeset fixes issue #253.
There's one thing I'm wondering about, though - matrix-html can take multiple input.tar.gz arguments, while the status-* functions can only take one. Is there any particular reason behind this? Because if not, then I think that also should be changed to make the API more consistent.",Done via amending the commit.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,261,2018-08-29T04:15:43Z,,2019-02-06T22:56:29Z,OPEN,False,6,2,1,https://github.com/robert-ancell,Fix potential buffer underflow and inefficient copy using fnmatch.,1,[],https://github.com/hughsie/appstream-glib/pull/261,https://github.com/robert-ancell,1,https://github.com/hughsie/appstream-glib/pull/261,"If length was zero we could check the -1 index.
A nul was always added because we only used the length of the string, not the
buffer (i.e. off by one).
Also remove a check for a negative number from an unsigned number.","If length was zero we could check the -1 index.
A nul was always added because we only used the length of the string, not the
buffer (i.e. off by one).
Also remove a check for a negative number from an unsigned number.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,261,2018-08-29T04:15:43Z,,2019-02-06T22:56:29Z,OPEN,False,6,2,1,https://github.com/robert-ancell,Fix potential buffer underflow and inefficient copy using fnmatch.,1,[],https://github.com/hughsie/appstream-glib/pull/261,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/261#issuecomment-417319684,"If length was zero we could check the -1 index.
A nul was always added because we only used the length of the string, not the
buffer (i.e. off by one).
Also remove a check for a negative number from an unsigned number.",CI seems to be failing -- can you check than out pls?,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,261,2018-08-29T04:15:43Z,,2019-02-06T22:56:29Z,OPEN,False,6,2,1,https://github.com/robert-ancell,Fix potential buffer underflow and inefficient copy using fnmatch.,1,[],https://github.com/hughsie/appstream-glib/pull/261,https://github.com/hughsie,3,https://github.com/hughsie/appstream-glib/pull/261#issuecomment-461002449,"If length was zero we could check the -1 index.
A nul was always added because we only used the length of the string, not the
buffer (i.e. off by one).
Also remove a check for a negative number from an unsigned number.",@robert-ancell ?,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,262,2018-09-11T16:15:45Z,2018-09-11T16:52:28Z,2018-09-11T16:52:28Z,MERGED,True,9,2,1,https://github.com/hadess,Throw an error when a launchable desktop-id is invalid,2,[],https://github.com/hughsie/appstream-glib/pull/262,https://github.com/hadess,1,https://github.com/hughsie/appstream-glib/pull/262,See flathub/com.adobe.Flash-Player-Projector#2,See flathub/com.adobe.Flash-Player-Projector#2,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,266,2018-10-24T14:41:21Z,2018-10-24T14:47:50Z,2018-10-24T14:47:50Z,MERGED,True,3,3,1,https://github.com/wjt,as-content-rating: fix 'mey' typo,1,[],https://github.com/hughsie/appstream-glib/pull/266,https://github.com/wjt,1,https://github.com/hughsie/appstream-glib/pull/266,Also tweak a few bits of punctuation I noticed at the same time.,Also tweak a few bits of punctuation I noticed at the same time.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,267,2018-10-25T15:34:34Z,2018-10-29T16:29:04Z,2018-10-29T16:29:26Z,CLOSED,False,5,67,4,https://github.com/superm1,as-app: Disable subsuming of releases with duplicate versions,1,[],https://github.com/hughsie/appstream-glib/pull/267,https://github.com/superm1,1,https://github.com/hughsie/appstream-glib/pull/267,"In the case of composite firmware packages it's possible that the same
firmware binary will be in two different stores but the newer store
is preferred since other binaries in the store are newer.
Fixes: fwupd #818","In the case of composite firmware packages it's possible that the same
firmware binary will be in two different stores but the newer store
is preferred since other binaries in the store are newer.
Fixes: fwupd #818",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,267,2018-10-25T15:34:34Z,2018-10-29T16:29:04Z,2018-10-29T16:29:26Z,CLOSED,False,5,67,4,https://github.com/superm1,as-app: Disable subsuming of releases with duplicate versions,1,[],https://github.com/hughsie/appstream-glib/pull/267,https://github.com/superm1,2,https://github.com/hughsie/appstream-glib/pull/267#issuecomment-433979289,"In the case of composite firmware packages it's possible that the same
firmware binary will be in two different stores but the newer store
is preferred since other binaries in the store are newer.
Fixes: fwupd #818",Closing due to preference of a different approach to fix.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,268,2018-10-30T17:08:40Z,2018-11-01T10:49:37Z,2018-11-01T10:49:37Z,MERGED,True,7,1,1,https://github.com/pwithnall,as-store: Guarantee to return G_IO_ERROR_NOT_FOUND when loading fails,1,[],https://github.com/hughsie/appstream-glib/pull/268,https://github.com/pwithnall,1,https://github.com/hughsie/appstream-glib/pull/268,"Previously, as_store_from_file() would either return
G_IO_ERROR_NOT_FOUND or AS_STORE_ERROR_FAILED if the given file did not
exist, depending on its file extension. That is not particularly helpful
for callers.
Instead, guarantee to always return G_IO_ERROR_NOT_FOUND if the file was
not found.
Signed-off-by: Philip Withnall withnall@endlessm.com","Previously, as_store_from_file() would either return
G_IO_ERROR_NOT_FOUND or AS_STORE_ERROR_FAILED if the given file did not
exist, depending on its file extension. That is not particularly helpful
for callers.
Instead, guarantee to always return G_IO_ERROR_NOT_FOUND if the file was
not found.
Signed-off-by: Philip Withnall withnall@endlessm.com",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,268,2018-10-30T17:08:40Z,2018-11-01T10:49:37Z,2018-11-01T10:49:37Z,MERGED,True,7,1,1,https://github.com/pwithnall,as-store: Guarantee to return G_IO_ERROR_NOT_FOUND when loading fails,1,[],https://github.com/hughsie/appstream-glib/pull/268,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/268#issuecomment-434649998,"Previously, as_store_from_file() would either return
G_IO_ERROR_NOT_FOUND or AS_STORE_ERROR_FAILED if the given file did not
exist, depending on its file extension. That is not particularly helpful
for callers.
Instead, guarantee to always return G_IO_ERROR_NOT_FOUND if the file was
not found.
Signed-off-by: Philip Withnall withnall@endlessm.com",I think the general idea was that we'd use AsStoreError domains where-ever possible. Shouldn't the G_IO_ERROR_NOT_FOUND be converted to be AS_STORE_ERROR_FAILED instead? I concede it's not hugely helpful.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,268,2018-10-30T17:08:40Z,2018-11-01T10:49:37Z,2018-11-01T10:49:37Z,MERGED,True,7,1,1,https://github.com/pwithnall,as-store: Guarantee to return G_IO_ERROR_NOT_FOUND when loading fails,1,[],https://github.com/hughsie/appstream-glib/pull/268,https://github.com/pwithnall,3,https://github.com/hughsie/appstream-glib/pull/268#issuecomment-434765223,"Previously, as_store_from_file() would either return
G_IO_ERROR_NOT_FOUND or AS_STORE_ERROR_FAILED if the given file did not
exist, depending on its file extension. That is not particularly helpful
for callers.
Instead, guarantee to always return G_IO_ERROR_NOT_FOUND if the file was
not found.
Signed-off-by: Philip Withnall withnall@endlessm.com","I think the general idea was that we'd use AsStoreError domains where-ever possible.

Why? That either means you reduce the specificity of error reporting (by coalescing multiple error codes from other domains into a single AS_STORE_ERROR_FAILED code), or you duplicate loads of error codes from other domains.

Shouldn't the G_IO_ERROR_NOT_FOUND be converted to be AS_STORE_ERROR_FAILED instead? I concede it's not hugely helpful.

The motivation behind me writing this patch was so that I could distinguish “file not found” errors from everything else when loading an AppStream file.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,269,2018-11-01T00:03:09Z,2018-11-01T10:42:07Z,2018-11-01T10:44:45Z,MERGED,True,58,0,3,https://github.com/pwithnall,as-content-rating: Add as_content_rating_get_rating_ids(),1,[],https://github.com/hughsie/appstream-glib/pull/269,https://github.com/pwithnall,1,https://github.com/hughsie/appstream-glib/pull/269,"This allows the set of rating IDs in the AsContentRating to be returned,
allowing the caller to iterate over them to check their values, rather
than having to hard-code their own list of OARS rating IDs.
Includes a basic test.
Signed-off-by: Philip Withnall withnall@endlessm.com","This allows the set of rating IDs in the AsContentRating to be returned,
allowing the caller to iterate over them to check their values, rather
than having to hard-code their own list of OARS rating IDs.
Includes a basic test.
Signed-off-by: Philip Withnall withnall@endlessm.com",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,269,2018-11-01T00:03:09Z,2018-11-01T10:42:07Z,2018-11-01T10:44:45Z,MERGED,True,58,0,3,https://github.com/pwithnall,as-content-rating: Add as_content_rating_get_rating_ids(),1,[],https://github.com/hughsie/appstream-glib/pull/269,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/269#issuecomment-435000896,"This allows the set of rating IDs in the AsContentRating to be returned,
allowing the caller to iterate over them to check their values, rather
than having to hard-code their own list of OARS rating IDs.
Includes a basic test.
Signed-off-by: Philip Withnall withnall@endlessm.com","One little nit, and then LGTM, thanks. I've given you push access to master, so please just merge when you've fixed it up locally.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,269,2018-11-01T00:03:09Z,2018-11-01T10:42:07Z,2018-11-01T10:44:45Z,MERGED,True,58,0,3,https://github.com/pwithnall,as-content-rating: Add as_content_rating_get_rating_ids(),1,[],https://github.com/hughsie/appstream-glib/pull/269,https://github.com/pwithnall,3,https://github.com/hughsie/appstream-glib/pull/269#issuecomment-435002161,"This allows the set of rating IDs in the AsContentRating to be returned,
allowing the caller to iterate over them to check their values, rather
than having to hard-code their own list of OARS rating IDs.
Includes a basic test.
Signed-off-by: Philip Withnall withnall@endlessm.com",Thanks for the fast review!,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,272,2018-11-13T08:50:55Z,2019-02-06T12:17:24Z,2019-02-06T12:17:25Z,CLOSED,False,229,46,3,https://github.com/scx,Rewrite the version comparison algorithm,6,[],https://github.com/hughsie/appstream-glib/pull/272,https://github.com/scx,1,https://github.com/hughsie/appstream-glib/pull/272,"Proposed patch: libappstream-glib-rpmvercmp.patch
diff -Naur a/appstream-glib/libappstream-glib/as-utils.c b/appstream-glib/libappstream-glib/as-utils.c
--- a/appstream-glib/libappstream-glib/as-utils.c	2018-11-13 06:28:45.000000000 +0100
+++ b/appstream-glib/libappstream-glib/as-utils.c	2018-11-13 08:55:25.000000000 +0100
@@ -1463,6 +1463,209 @@
 }
 
 /**
+ * as_utils_version_reparse:
+ * @version: A version number
+ *
+ * Returns a dotted decimal version string from a version string. The supported
+ * formats are:
+ *
+ * - Dotted decimal, e.g. ""1.2.3""
+ * - Base 16, a hex number *with* a 0x prefix, e.g. ""0x10203""
+ *
+ * Anything with a '.' or that doesn't match 0x[a-f,0-9] is considered
+ * a string and returned without modification.
+ *
+ * Returns: A version number, e.g. ""1.0.3""
+ *
+ * Since: 0.7.15
+ */
+gchar *
+as_utils_version_reparse (const gchar *version)
+{
+	const gchar *version_noprefix = version;
+	gchar *endptr = NULL;
+	guint64 tmp;
+	guint base;
+
+	/* already dotted decimal */
+	if (g_strstr_len (version, -1, ""."") != NULL)
+		return g_strdup (version);
+
+	/* convert 0x prefixed strings to dotted decimal */
+	if (g_str_has_prefix (version, ""0x"")) {
+		version_noprefix += 2;
+		base = 16;
+	} else {
+		/* just return the string */
+		return g_strdup (version);
+	}
+
+	/* convert */
+	tmp = g_ascii_strtoull (version_noprefix, &endptr, base);
+	if (endptr != NULL && endptr[0] != '\0')
+		return g_strdup (version);
+	if (tmp == 0)
+		return g_strdup (version);
+	return as_utils_version_from_uint32 ((guint32) tmp, AS_VERSION_PARSE_FLAG_USE_TRIPLET);
+}
+
+// Based on: https://github.com/rpm-software-management/rpm/blob/ca8ff08e4f61f05c743797ea4afbb9bf0bce3064/lib/rpmvercmp.c#L12-L122
+/**
+ * as_utils_vercmp_rpm:
+ * @version_a: the release version, e.g. 1.2.3
+ * @version_b: the release version, e.g. 1.2.3.1
+ *
+ * Compares version numbers for sorting.
+ *
+ * Returns: -1 if a < b, +1 if a > b, 0 if they are equal
+ *
+ * Since: 0.7.15
+ */
+gint
+as_utils_vercmp_rpm (const gchar *version_a, const gchar *version_b)
+{
+	/* easy comparison to see if versions are identical */
+	if (g_strcmp0(version_a, version_b) == 0) return 0;
+
+	gchar oldch1, oldch2;
+	gchar abuf[strlen(version_a)+1], bbuf[strlen(version_b)+1];
+	gchar *str1 = abuf, *str2 = bbuf;
+	gchar * one, * two;
+	gint rc;
+	gint isnum;
+
+	g_strlcpy(str1, version_a, sizeof(abuf));
+	g_strlcpy(str2, version_b, sizeof(bbuf));
+
+	one = str1;
+	two = str2;
+
+	/* loop through each version segment of str1 and str2 and compare them */
+	while (*one || *two) {
+	while (*one && !g_ascii_isalnum(*one) && *one != '~') one++;
+	while (*two && !g_ascii_isalnum(*two) && *two != '~') two++;
+
+	/* handle the tilde separator, it sorts before everything else */
+	if (*one == '~' || *two == '~') {
+		if (*one != '~') return 1;
+		if (*two != '~') return -1;
+		one++;
+		two++;
+		continue;
+	}
+
+	/* If we ran to the end of either, we are finished with the loop */
+	if (!(*one && *two)) break;
+
+	str1 = one;
+	str2 = two;
+
+	/* grab first completely alpha or completely numeric segment */
+	/* leave one and two pointing to the start of the alpha or numeric */
+	/* segment and walk str1 and str2 to end of segment */
+	if (g_ascii_isdigit(*str1)) {
+		while (*str1 && g_ascii_isdigit(*str1)) str1++;
+		while (*str2 && g_ascii_isdigit(*str2)) str2++;
+		isnum = 1;
+	} else {
+		while (*str1 && g_ascii_isalpha(*str1)) str1++;
+		while (*str2 && g_ascii_isalpha(*str2)) str2++;
+		isnum = 0;
+	}
+
+	/* save character at the end of the alpha or numeric segment */
+	/* so that they can be restored after the comparison */
+	oldch1 = *str1;
+	*str1 = '\0';
+	oldch2 = *str2;
+	*str2 = '\0';
+
+	/* this cannot happen, as we previously tested to make sure that */
+	/* the first string has a non-null segment */
+	if (one == str1) return -1;	/* arbitrary */
+
+	/* take care of the case where the two version segments are */
+	/* different types: one numeric, the other alpha (i.e. empty) */
+	/* numeric segments are always newer than alpha segments */
+	/* XXX See patch #60884 (and details) from bugzilla #50977. */
+	if (two == str2) return (isnum ? 1 : -1);
+
+	if (isnum) {
+		gsize onelen, twolen;
+		/* this used to be done by converting the digit segments */
+		/* to ints using atoi() - it's changed because long  */
+		/* digit segments can overflow an int - this should fix that. */
+
+		/* throw away any leading zeros - it's a number, right? */
+		while (*one == '0') one++;
+		while (*two == '0') two++;
+
+		/* whichever number has more digits wins */
+		onelen = strlen(one);
+		twolen = strlen(two);
+		if (onelen > twolen) return 1;
+		if (twolen > onelen) return -1;
+	}
+
+	/* strcmp will return which one is greater - even if the two */
+	/* segments are alpha or if they are numeric.  don't return  */
+	/* if they are equal because there might be more segments to */
+	/* compare */
+	rc = g_strcmp0(one, two);
+	if (rc) return (rc < 1 ? -1 : 1);
+
+	/* restore character that was replaced by null above */
+	*str1 = oldch1;
+	one = str1;
+	*str2 = oldch2;
+	two = str2;
+	}
+
+	/* this catches the case where all numeric and alpha segments have */
+	/* compared identically but the segment sepparating characters were */
+	/* different */
+	if ((!*one) && (!*two)) return 0;
+
+	/* whichever version still has characters left over wins */
+	if (!*one) return -1; else return 1;
+}
+
+/**
+ * as_utils_vercmp_complex:
+ * @version_a: the release version, e.g. 1.2.3
+ * @version_b: the release version, e.g. 1.2.3.1
+ * @flags: some #AsVersionCompareFlag
+ *
+ * Compares version numbers for sorting.
+ *
+ * Returns: -1 if a < b, +1 if a > b, 0 if they are equal, and %G_MAXINT on error
+ *
+ * Since: 0.7.15
+ */
+gint
+as_utils_vercmp_complex (const gchar *version_a,
+			 const gchar *version_b,
+			 AsVersionCompareFlag flags)
+{
+	/* sanity check */
+	if (version_a == NULL || version_b == NULL)
+		return G_MAXINT;
+
+	/* optimisation */
+	if (g_strcmp0 (version_a, version_b) == 0)
+		return 0;
+
+	/* split into sections, and try to parse */
+	if (flags & AS_VERSION_COMPARE_FLAG_USE_HEURISTICS) {
+		g_autofree gchar *str_a = as_utils_version_reparse (version_a);
+		g_autofree gchar *str_b = as_utils_version_reparse (version_b);
+		return as_utils_vercmp_rpm (str_a, str_b);
+	} else {
+		return as_utils_vercmp_rpm (version_a, version_b);
+	}
+}
+
+/**
  * as_utils_vercmp:
  * @version_a: the release version, e.g. 1.2.3
  * @version_b: the release version, e.g. 1.2.3.1
@@ -1476,8 +1679,8 @@
 gint
 as_utils_vercmp (const gchar *version_a, const gchar *version_b)
 {
-	return as_utils_vercmp_full (version_a, version_b,
-				     AS_VERSION_COMPARE_FLAG_USE_HEURISTICS);
+	return as_utils_vercmp_complex (version_a, version_b,
+					AS_VERSION_COMPARE_FLAG_USE_HEURISTICS);
 }
 
 /**
diff -Naur a/appstream-glib/libappstream-glib/as-utils.h b/appstream-glib/libappstream-glib/as-utils.h
--- a/appstream-glib/libappstream-glib/as-utils.h	2018-11-13 06:28:45.000000000 +0100
+++ b/appstream-glib/libappstream-glib/as-utils.h	2018-11-13 08:39:21.000000000 +0100
@@ -163,6 +163,12 @@
 gint		 as_utils_vercmp_full		(const gchar	*version_a,
 						 const gchar	*version_b,
 						 AsVersionCompareFlag flags);
+gchar		*as_utils_version_reparse	(const gchar	*version);
+gint		 as_utils_vercmp_rpm		(const gchar	*version_a,
+						 const gchar	*version_b);
+gint		 as_utils_vercmp_complex	(const gchar	*version_a,
+						 const gchar	*version_b,
+						 AsVersionCompareFlag flags);
 gint		 as_utils_vercmp		(const gchar	*version_a,
 						 const gchar	*version_b);
 gboolean	 as_utils_guid_is_valid		(const gchar	*guid);

This patch deprecates the following functions:

as_utils_vercmp_full
as_utils_version_parse

If you want, I can just insert the code from as_utils_vercmp_complex and as_utils_version_reparse into them.
I also prepared a simple test: org.freedesktop.appstream-test.yaml
app-id: org.freedesktop.appstream-test
runtime: org.freedesktop.Platform
runtime-version: '18.08'
sdk: org.freedesktop.Sdk
command: appstream-test
modules:
  - name: libappstream-glib
    buildsystem: meson
    config-opts:
      - -Dfonts=false
      - -Ddep11=false
      - -Drpm=false
      - -Dstemmer=false
    sources:
      - type: git
        url: https://github.com/scx/appstream-glib.git
        branch: master
        commit: 2ff970eb3cc748da336695f941356b74da16c55f
    post-install:
      - meson test
    cleanup:
      - /share/installed-tests
  - name: appstream-test
    buildsystem: simple
    sources:
      - type: script
        commands:
          - appstream-util --version
          - appstream-util vercmp 'Build 9half' 'Build 10'
          - appstream-util vercmp 'Build 9.5' 'Build 10'
          - appstream-util vercmp 'Build 9+' 'Build 10'
          - appstream-util vercmp 'Build 9a' 'Build 10'
          - appstream-util vercmp 'Build 9' 'Build 10'
          - appstream-util vercmp '9half' '10'
          - appstream-util vercmp '9.5' '10'
          - appstream-util vercmp '9+' '10'
          - appstream-util vercmp '9a' '10'
          - appstream-util vercmp '9' '10'
          - appstream-util vercmp '1.2.3' '1.2.3'
          - appstream-util vercmp '001.002.003' '001.002.003'
          - appstream-util vercmp '1.2.3' '0x1020003'
          - appstream-util vercmp '0x10203' '0x10203'
          - appstream-util vercmp '1.2.3' '1.2.4'
          - appstream-util vercmp '001.002.000' '001.002.009'
          - appstream-util vercmp '1.2.3' '1.2.2'
          - appstream-util vercmp '001.002.009' '001.002.000'
          - appstream-util vercmp '1.2.3' '1.2.3.1'
          - appstream-util vercmp '1.2.3.1' '1.2.4'
          - appstream-util vercmp '1.2.3a' '1.2.3a'
          - appstream-util vercmp '1.2.3a' '1.2.3b'
          - appstream-util vercmp '1.2.3b' '1.2.3a'
          - appstream-util vercmp '1.2.3' '1.2.3a'
          - appstream-util vercmp '1.2.3a' '1.2.3'
          - appstream-util vercmp 'alpha' 'alpha'
          - appstream-util vercmp 'alpha' 'beta'
          - appstream-util vercmp 'beta' 'alpha'
          - appstream-util vercmp '1.2a.3' '1.2a.3'
          - appstream-util vercmp '1.2a.3' '1.2b.3'
          - appstream-util vercmp '1.2b.3' '1.2a.3'
          - appstream-util vercmp '1.2.3~rc1' '1.2.3~rc1'
          - appstream-util vercmp '1.2.3~rc1' '1.2.3'
          - appstream-util vercmp '1.2.3' '1.2.3~rc1'
          - appstream-util vercmp '1.2.3~rc2' '1.2.3~rc1'
        dest-filename: appstream-test
    build-commands:
      - install -p -D -m 0755 'appstream-test' -t '/app/bin/'

Build command:
mkdir -p build && flatpak-builder 'build' 'org.freedesktop.appstream-test.yaml' --force-clean --install-deps-from='flathub'

Run command:
flatpak-builder --run 'build' 'org.freedesktop.appstream-test.yaml' 'appstream-test' 2>/dev/null

Results:
Version:	0.7.14
Build 9half < Build 10
Build 9.5 < Build 10
Build 9+ < Build 10
Build 9a < Build 10
Build 9 < Build 10
9half < 10
9.5 < 10
9+ < 10
9a < 10
9 < 10
1.2.3 = 1.2.3
001.002.003 = 001.002.003
1.2.3 = 0x1020003
0x10203 = 0x10203
1.2.3 < 1.2.4
001.002.000 < 001.002.009
1.2.3 > 1.2.2
001.002.009 > 001.002.000
1.2.3 < 1.2.3.1
1.2.3.1 < 1.2.4
1.2.3a = 1.2.3a
1.2.3a < 1.2.3b
1.2.3b > 1.2.3a
1.2.3 < 1.2.3a
1.2.3a > 1.2.3
alpha = alpha
alpha < beta
beta > alpha
1.2a.3 = 1.2a.3
1.2a.3 < 1.2b.3
1.2b.3 > 1.2a.3
1.2.3~rc1 = 1.2.3~rc1
1.2.3~rc1 < 1.2.3
1.2.3 > 1.2.3~rc1
1.2.3~rc2 > 1.2.3~rc1

See also: #270 (comment)","Proposed patch: libappstream-glib-rpmvercmp.patch
diff -Naur a/appstream-glib/libappstream-glib/as-utils.c b/appstream-glib/libappstream-glib/as-utils.c
--- a/appstream-glib/libappstream-glib/as-utils.c	2018-11-13 06:28:45.000000000 +0100
+++ b/appstream-glib/libappstream-glib/as-utils.c	2018-11-13 08:55:25.000000000 +0100
@@ -1463,6 +1463,209 @@
 }
 
 /**
+ * as_utils_version_reparse:
+ * @version: A version number
+ *
+ * Returns a dotted decimal version string from a version string. The supported
+ * formats are:
+ *
+ * - Dotted decimal, e.g. ""1.2.3""
+ * - Base 16, a hex number *with* a 0x prefix, e.g. ""0x10203""
+ *
+ * Anything with a '.' or that doesn't match 0x[a-f,0-9] is considered
+ * a string and returned without modification.
+ *
+ * Returns: A version number, e.g. ""1.0.3""
+ *
+ * Since: 0.7.15
+ */
+gchar *
+as_utils_version_reparse (const gchar *version)
+{
+	const gchar *version_noprefix = version;
+	gchar *endptr = NULL;
+	guint64 tmp;
+	guint base;
+
+	/* already dotted decimal */
+	if (g_strstr_len (version, -1, ""."") != NULL)
+		return g_strdup (version);
+
+	/* convert 0x prefixed strings to dotted decimal */
+	if (g_str_has_prefix (version, ""0x"")) {
+		version_noprefix += 2;
+		base = 16;
+	} else {
+		/* just return the string */
+		return g_strdup (version);
+	}
+
+	/* convert */
+	tmp = g_ascii_strtoull (version_noprefix, &endptr, base);
+	if (endptr != NULL && endptr[0] != '\0')
+		return g_strdup (version);
+	if (tmp == 0)
+		return g_strdup (version);
+	return as_utils_version_from_uint32 ((guint32) tmp, AS_VERSION_PARSE_FLAG_USE_TRIPLET);
+}
+
+// Based on: https://github.com/rpm-software-management/rpm/blob/ca8ff08e4f61f05c743797ea4afbb9bf0bce3064/lib/rpmvercmp.c#L12-L122
+/**
+ * as_utils_vercmp_rpm:
+ * @version_a: the release version, e.g. 1.2.3
+ * @version_b: the release version, e.g. 1.2.3.1
+ *
+ * Compares version numbers for sorting.
+ *
+ * Returns: -1 if a < b, +1 if a > b, 0 if they are equal
+ *
+ * Since: 0.7.15
+ */
+gint
+as_utils_vercmp_rpm (const gchar *version_a, const gchar *version_b)
+{
+	/* easy comparison to see if versions are identical */
+	if (g_strcmp0(version_a, version_b) == 0) return 0;
+
+	gchar oldch1, oldch2;
+	gchar abuf[strlen(version_a)+1], bbuf[strlen(version_b)+1];
+	gchar *str1 = abuf, *str2 = bbuf;
+	gchar * one, * two;
+	gint rc;
+	gint isnum;
+
+	g_strlcpy(str1, version_a, sizeof(abuf));
+	g_strlcpy(str2, version_b, sizeof(bbuf));
+
+	one = str1;
+	two = str2;
+
+	/* loop through each version segment of str1 and str2 and compare them */
+	while (*one || *two) {
+	while (*one && !g_ascii_isalnum(*one) && *one != '~') one++;
+	while (*two && !g_ascii_isalnum(*two) && *two != '~') two++;
+
+	/* handle the tilde separator, it sorts before everything else */
+	if (*one == '~' || *two == '~') {
+		if (*one != '~') return 1;
+		if (*two != '~') return -1;
+		one++;
+		two++;
+		continue;
+	}
+
+	/* If we ran to the end of either, we are finished with the loop */
+	if (!(*one && *two)) break;
+
+	str1 = one;
+	str2 = two;
+
+	/* grab first completely alpha or completely numeric segment */
+	/* leave one and two pointing to the start of the alpha or numeric */
+	/* segment and walk str1 and str2 to end of segment */
+	if (g_ascii_isdigit(*str1)) {
+		while (*str1 && g_ascii_isdigit(*str1)) str1++;
+		while (*str2 && g_ascii_isdigit(*str2)) str2++;
+		isnum = 1;
+	} else {
+		while (*str1 && g_ascii_isalpha(*str1)) str1++;
+		while (*str2 && g_ascii_isalpha(*str2)) str2++;
+		isnum = 0;
+	}
+
+	/* save character at the end of the alpha or numeric segment */
+	/* so that they can be restored after the comparison */
+	oldch1 = *str1;
+	*str1 = '\0';
+	oldch2 = *str2;
+	*str2 = '\0';
+
+	/* this cannot happen, as we previously tested to make sure that */
+	/* the first string has a non-null segment */
+	if (one == str1) return -1;	/* arbitrary */
+
+	/* take care of the case where the two version segments are */
+	/* different types: one numeric, the other alpha (i.e. empty) */
+	/* numeric segments are always newer than alpha segments */
+	/* XXX See patch #60884 (and details) from bugzilla #50977. */
+	if (two == str2) return (isnum ? 1 : -1);
+
+	if (isnum) {
+		gsize onelen, twolen;
+		/* this used to be done by converting the digit segments */
+		/* to ints using atoi() - it's changed because long  */
+		/* digit segments can overflow an int - this should fix that. */
+
+		/* throw away any leading zeros - it's a number, right? */
+		while (*one == '0') one++;
+		while (*two == '0') two++;
+
+		/* whichever number has more digits wins */
+		onelen = strlen(one);
+		twolen = strlen(two);
+		if (onelen > twolen) return 1;
+		if (twolen > onelen) return -1;
+	}
+
+	/* strcmp will return which one is greater - even if the two */
+	/* segments are alpha or if they are numeric.  don't return  */
+	/* if they are equal because there might be more segments to */
+	/* compare */
+	rc = g_strcmp0(one, two);
+	if (rc) return (rc < 1 ? -1 : 1);
+
+	/* restore character that was replaced by null above */
+	*str1 = oldch1;
+	one = str1;
+	*str2 = oldch2;
+	two = str2;
+	}
+
+	/* this catches the case where all numeric and alpha segments have */
+	/* compared identically but the segment sepparating characters were */
+	/* different */
+	if ((!*one) && (!*two)) return 0;
+
+	/* whichever version still has characters left over wins */
+	if (!*one) return -1; else return 1;
+}
+
+/**
+ * as_utils_vercmp_complex:
+ * @version_a: the release version, e.g. 1.2.3
+ * @version_b: the release version, e.g. 1.2.3.1
+ * @flags: some #AsVersionCompareFlag
+ *
+ * Compares version numbers for sorting.
+ *
+ * Returns: -1 if a < b, +1 if a > b, 0 if they are equal, and %G_MAXINT on error
+ *
+ * Since: 0.7.15
+ */
+gint
+as_utils_vercmp_complex (const gchar *version_a,
+			 const gchar *version_b,
+			 AsVersionCompareFlag flags)
+{
+	/* sanity check */
+	if (version_a == NULL || version_b == NULL)
+		return G_MAXINT;
+
+	/* optimisation */
+	if (g_strcmp0 (version_a, version_b) == 0)
+		return 0;
+
+	/* split into sections, and try to parse */
+	if (flags & AS_VERSION_COMPARE_FLAG_USE_HEURISTICS) {
+		g_autofree gchar *str_a = as_utils_version_reparse (version_a);
+		g_autofree gchar *str_b = as_utils_version_reparse (version_b);
+		return as_utils_vercmp_rpm (str_a, str_b);
+	} else {
+		return as_utils_vercmp_rpm (version_a, version_b);
+	}
+}
+
+/**
  * as_utils_vercmp:
  * @version_a: the release version, e.g. 1.2.3
  * @version_b: the release version, e.g. 1.2.3.1
@@ -1476,8 +1679,8 @@
 gint
 as_utils_vercmp (const gchar *version_a, const gchar *version_b)
 {
-	return as_utils_vercmp_full (version_a, version_b,
-				     AS_VERSION_COMPARE_FLAG_USE_HEURISTICS);
+	return as_utils_vercmp_complex (version_a, version_b,
+					AS_VERSION_COMPARE_FLAG_USE_HEURISTICS);
 }
 
 /**
diff -Naur a/appstream-glib/libappstream-glib/as-utils.h b/appstream-glib/libappstream-glib/as-utils.h
--- a/appstream-glib/libappstream-glib/as-utils.h	2018-11-13 06:28:45.000000000 +0100
+++ b/appstream-glib/libappstream-glib/as-utils.h	2018-11-13 08:39:21.000000000 +0100
@@ -163,6 +163,12 @@
 gint		 as_utils_vercmp_full		(const gchar	*version_a,
 						 const gchar	*version_b,
 						 AsVersionCompareFlag flags);
+gchar		*as_utils_version_reparse	(const gchar	*version);
+gint		 as_utils_vercmp_rpm		(const gchar	*version_a,
+						 const gchar	*version_b);
+gint		 as_utils_vercmp_complex	(const gchar	*version_a,
+						 const gchar	*version_b,
+						 AsVersionCompareFlag flags);
 gint		 as_utils_vercmp		(const gchar	*version_a,
 						 const gchar	*version_b);
 gboolean	 as_utils_guid_is_valid		(const gchar	*guid);

This patch deprecates the following functions:

as_utils_vercmp_full
as_utils_version_parse

If you want, I can just insert the code from as_utils_vercmp_complex and as_utils_version_reparse into them.
I also prepared a simple test: org.freedesktop.appstream-test.yaml
app-id: org.freedesktop.appstream-test
runtime: org.freedesktop.Platform
runtime-version: '18.08'
sdk: org.freedesktop.Sdk
command: appstream-test
modules:
  - name: libappstream-glib
    buildsystem: meson
    config-opts:
      - -Dfonts=false
      - -Ddep11=false
      - -Drpm=false
      - -Dstemmer=false
    sources:
      - type: git
        url: https://github.com/scx/appstream-glib.git
        branch: master
        commit: 2ff970eb3cc748da336695f941356b74da16c55f
    post-install:
      - meson test
    cleanup:
      - /share/installed-tests
  - name: appstream-test
    buildsystem: simple
    sources:
      - type: script
        commands:
          - appstream-util --version
          - appstream-util vercmp 'Build 9half' 'Build 10'
          - appstream-util vercmp 'Build 9.5' 'Build 10'
          - appstream-util vercmp 'Build 9+' 'Build 10'
          - appstream-util vercmp 'Build 9a' 'Build 10'
          - appstream-util vercmp 'Build 9' 'Build 10'
          - appstream-util vercmp '9half' '10'
          - appstream-util vercmp '9.5' '10'
          - appstream-util vercmp '9+' '10'
          - appstream-util vercmp '9a' '10'
          - appstream-util vercmp '9' '10'
          - appstream-util vercmp '1.2.3' '1.2.3'
          - appstream-util vercmp '001.002.003' '001.002.003'
          - appstream-util vercmp '1.2.3' '0x1020003'
          - appstream-util vercmp '0x10203' '0x10203'
          - appstream-util vercmp '1.2.3' '1.2.4'
          - appstream-util vercmp '001.002.000' '001.002.009'
          - appstream-util vercmp '1.2.3' '1.2.2'
          - appstream-util vercmp '001.002.009' '001.002.000'
          - appstream-util vercmp '1.2.3' '1.2.3.1'
          - appstream-util vercmp '1.2.3.1' '1.2.4'
          - appstream-util vercmp '1.2.3a' '1.2.3a'
          - appstream-util vercmp '1.2.3a' '1.2.3b'
          - appstream-util vercmp '1.2.3b' '1.2.3a'
          - appstream-util vercmp '1.2.3' '1.2.3a'
          - appstream-util vercmp '1.2.3a' '1.2.3'
          - appstream-util vercmp 'alpha' 'alpha'
          - appstream-util vercmp 'alpha' 'beta'
          - appstream-util vercmp 'beta' 'alpha'
          - appstream-util vercmp '1.2a.3' '1.2a.3'
          - appstream-util vercmp '1.2a.3' '1.2b.3'
          - appstream-util vercmp '1.2b.3' '1.2a.3'
          - appstream-util vercmp '1.2.3~rc1' '1.2.3~rc1'
          - appstream-util vercmp '1.2.3~rc1' '1.2.3'
          - appstream-util vercmp '1.2.3' '1.2.3~rc1'
          - appstream-util vercmp '1.2.3~rc2' '1.2.3~rc1'
        dest-filename: appstream-test
    build-commands:
      - install -p -D -m 0755 'appstream-test' -t '/app/bin/'

Build command:
mkdir -p build && flatpak-builder 'build' 'org.freedesktop.appstream-test.yaml' --force-clean --install-deps-from='flathub'

Run command:
flatpak-builder --run 'build' 'org.freedesktop.appstream-test.yaml' 'appstream-test' 2>/dev/null

Results:
Version:	0.7.14
Build 9half < Build 10
Build 9.5 < Build 10
Build 9+ < Build 10
Build 9a < Build 10
Build 9 < Build 10
9half < 10
9.5 < 10
9+ < 10
9a < 10
9 < 10
1.2.3 = 1.2.3
001.002.003 = 001.002.003
1.2.3 = 0x1020003
0x10203 = 0x10203
1.2.3 < 1.2.4
001.002.000 < 001.002.009
1.2.3 > 1.2.2
001.002.009 > 001.002.000
1.2.3 < 1.2.3.1
1.2.3.1 < 1.2.4
1.2.3a = 1.2.3a
1.2.3a < 1.2.3b
1.2.3b > 1.2.3a
1.2.3 < 1.2.3a
1.2.3a > 1.2.3
alpha = alpha
alpha < beta
beta > alpha
1.2a.3 = 1.2a.3
1.2a.3 < 1.2b.3
1.2b.3 > 1.2a.3
1.2.3~rc1 = 1.2.3~rc1
1.2.3~rc1 < 1.2.3
1.2.3 > 1.2.3~rc1
1.2.3~rc2 > 1.2.3~rc1

See also: #270 (comment)",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,272,2018-11-13T08:50:55Z,2019-02-06T12:17:24Z,2019-02-06T12:17:25Z,CLOSED,False,229,46,3,https://github.com/scx,Rewrite the version comparison algorithm,6,[],https://github.com/hughsie/appstream-glib/pull/272,https://github.com/ximion,2,https://github.com/hughsie/appstream-glib/pull/272#issuecomment-439715305,"Proposed patch: libappstream-glib-rpmvercmp.patch
diff -Naur a/appstream-glib/libappstream-glib/as-utils.c b/appstream-glib/libappstream-glib/as-utils.c
--- a/appstream-glib/libappstream-glib/as-utils.c	2018-11-13 06:28:45.000000000 +0100
+++ b/appstream-glib/libappstream-glib/as-utils.c	2018-11-13 08:55:25.000000000 +0100
@@ -1463,6 +1463,209 @@
 }
 
 /**
+ * as_utils_version_reparse:
+ * @version: A version number
+ *
+ * Returns a dotted decimal version string from a version string. The supported
+ * formats are:
+ *
+ * - Dotted decimal, e.g. ""1.2.3""
+ * - Base 16, a hex number *with* a 0x prefix, e.g. ""0x10203""
+ *
+ * Anything with a '.' or that doesn't match 0x[a-f,0-9] is considered
+ * a string and returned without modification.
+ *
+ * Returns: A version number, e.g. ""1.0.3""
+ *
+ * Since: 0.7.15
+ */
+gchar *
+as_utils_version_reparse (const gchar *version)
+{
+	const gchar *version_noprefix = version;
+	gchar *endptr = NULL;
+	guint64 tmp;
+	guint base;
+
+	/* already dotted decimal */
+	if (g_strstr_len (version, -1, ""."") != NULL)
+		return g_strdup (version);
+
+	/* convert 0x prefixed strings to dotted decimal */
+	if (g_str_has_prefix (version, ""0x"")) {
+		version_noprefix += 2;
+		base = 16;
+	} else {
+		/* just return the string */
+		return g_strdup (version);
+	}
+
+	/* convert */
+	tmp = g_ascii_strtoull (version_noprefix, &endptr, base);
+	if (endptr != NULL && endptr[0] != '\0')
+		return g_strdup (version);
+	if (tmp == 0)
+		return g_strdup (version);
+	return as_utils_version_from_uint32 ((guint32) tmp, AS_VERSION_PARSE_FLAG_USE_TRIPLET);
+}
+
+// Based on: https://github.com/rpm-software-management/rpm/blob/ca8ff08e4f61f05c743797ea4afbb9bf0bce3064/lib/rpmvercmp.c#L12-L122
+/**
+ * as_utils_vercmp_rpm:
+ * @version_a: the release version, e.g. 1.2.3
+ * @version_b: the release version, e.g. 1.2.3.1
+ *
+ * Compares version numbers for sorting.
+ *
+ * Returns: -1 if a < b, +1 if a > b, 0 if they are equal
+ *
+ * Since: 0.7.15
+ */
+gint
+as_utils_vercmp_rpm (const gchar *version_a, const gchar *version_b)
+{
+	/* easy comparison to see if versions are identical */
+	if (g_strcmp0(version_a, version_b) == 0) return 0;
+
+	gchar oldch1, oldch2;
+	gchar abuf[strlen(version_a)+1], bbuf[strlen(version_b)+1];
+	gchar *str1 = abuf, *str2 = bbuf;
+	gchar * one, * two;
+	gint rc;
+	gint isnum;
+
+	g_strlcpy(str1, version_a, sizeof(abuf));
+	g_strlcpy(str2, version_b, sizeof(bbuf));
+
+	one = str1;
+	two = str2;
+
+	/* loop through each version segment of str1 and str2 and compare them */
+	while (*one || *two) {
+	while (*one && !g_ascii_isalnum(*one) && *one != '~') one++;
+	while (*two && !g_ascii_isalnum(*two) && *two != '~') two++;
+
+	/* handle the tilde separator, it sorts before everything else */
+	if (*one == '~' || *two == '~') {
+		if (*one != '~') return 1;
+		if (*two != '~') return -1;
+		one++;
+		two++;
+		continue;
+	}
+
+	/* If we ran to the end of either, we are finished with the loop */
+	if (!(*one && *two)) break;
+
+	str1 = one;
+	str2 = two;
+
+	/* grab first completely alpha or completely numeric segment */
+	/* leave one and two pointing to the start of the alpha or numeric */
+	/* segment and walk str1 and str2 to end of segment */
+	if (g_ascii_isdigit(*str1)) {
+		while (*str1 && g_ascii_isdigit(*str1)) str1++;
+		while (*str2 && g_ascii_isdigit(*str2)) str2++;
+		isnum = 1;
+	} else {
+		while (*str1 && g_ascii_isalpha(*str1)) str1++;
+		while (*str2 && g_ascii_isalpha(*str2)) str2++;
+		isnum = 0;
+	}
+
+	/* save character at the end of the alpha or numeric segment */
+	/* so that they can be restored after the comparison */
+	oldch1 = *str1;
+	*str1 = '\0';
+	oldch2 = *str2;
+	*str2 = '\0';
+
+	/* this cannot happen, as we previously tested to make sure that */
+	/* the first string has a non-null segment */
+	if (one == str1) return -1;	/* arbitrary */
+
+	/* take care of the case where the two version segments are */
+	/* different types: one numeric, the other alpha (i.e. empty) */
+	/* numeric segments are always newer than alpha segments */
+	/* XXX See patch #60884 (and details) from bugzilla #50977. */
+	if (two == str2) return (isnum ? 1 : -1);
+
+	if (isnum) {
+		gsize onelen, twolen;
+		/* this used to be done by converting the digit segments */
+		/* to ints using atoi() - it's changed because long  */
+		/* digit segments can overflow an int - this should fix that. */
+
+		/* throw away any leading zeros - it's a number, right? */
+		while (*one == '0') one++;
+		while (*two == '0') two++;
+
+		/* whichever number has more digits wins */
+		onelen = strlen(one);
+		twolen = strlen(two);
+		if (onelen > twolen) return 1;
+		if (twolen > onelen) return -1;
+	}
+
+	/* strcmp will return which one is greater - even if the two */
+	/* segments are alpha or if they are numeric.  don't return  */
+	/* if they are equal because there might be more segments to */
+	/* compare */
+	rc = g_strcmp0(one, two);
+	if (rc) return (rc < 1 ? -1 : 1);
+
+	/* restore character that was replaced by null above */
+	*str1 = oldch1;
+	one = str1;
+	*str2 = oldch2;
+	two = str2;
+	}
+
+	/* this catches the case where all numeric and alpha segments have */
+	/* compared identically but the segment sepparating characters were */
+	/* different */
+	if ((!*one) && (!*two)) return 0;
+
+	/* whichever version still has characters left over wins */
+	if (!*one) return -1; else return 1;
+}
+
+/**
+ * as_utils_vercmp_complex:
+ * @version_a: the release version, e.g. 1.2.3
+ * @version_b: the release version, e.g. 1.2.3.1
+ * @flags: some #AsVersionCompareFlag
+ *
+ * Compares version numbers for sorting.
+ *
+ * Returns: -1 if a < b, +1 if a > b, 0 if they are equal, and %G_MAXINT on error
+ *
+ * Since: 0.7.15
+ */
+gint
+as_utils_vercmp_complex (const gchar *version_a,
+			 const gchar *version_b,
+			 AsVersionCompareFlag flags)
+{
+	/* sanity check */
+	if (version_a == NULL || version_b == NULL)
+		return G_MAXINT;
+
+	/* optimisation */
+	if (g_strcmp0 (version_a, version_b) == 0)
+		return 0;
+
+	/* split into sections, and try to parse */
+	if (flags & AS_VERSION_COMPARE_FLAG_USE_HEURISTICS) {
+		g_autofree gchar *str_a = as_utils_version_reparse (version_a);
+		g_autofree gchar *str_b = as_utils_version_reparse (version_b);
+		return as_utils_vercmp_rpm (str_a, str_b);
+	} else {
+		return as_utils_vercmp_rpm (version_a, version_b);
+	}
+}
+
+/**
  * as_utils_vercmp:
  * @version_a: the release version, e.g. 1.2.3
  * @version_b: the release version, e.g. 1.2.3.1
@@ -1476,8 +1679,8 @@
 gint
 as_utils_vercmp (const gchar *version_a, const gchar *version_b)
 {
-	return as_utils_vercmp_full (version_a, version_b,
-				     AS_VERSION_COMPARE_FLAG_USE_HEURISTICS);
+	return as_utils_vercmp_complex (version_a, version_b,
+					AS_VERSION_COMPARE_FLAG_USE_HEURISTICS);
 }
 
 /**
diff -Naur a/appstream-glib/libappstream-glib/as-utils.h b/appstream-glib/libappstream-glib/as-utils.h
--- a/appstream-glib/libappstream-glib/as-utils.h	2018-11-13 06:28:45.000000000 +0100
+++ b/appstream-glib/libappstream-glib/as-utils.h	2018-11-13 08:39:21.000000000 +0100
@@ -163,6 +163,12 @@
 gint		 as_utils_vercmp_full		(const gchar	*version_a,
 						 const gchar	*version_b,
 						 AsVersionCompareFlag flags);
+gchar		*as_utils_version_reparse	(const gchar	*version);
+gint		 as_utils_vercmp_rpm		(const gchar	*version_a,
+						 const gchar	*version_b);
+gint		 as_utils_vercmp_complex	(const gchar	*version_a,
+						 const gchar	*version_b,
+						 AsVersionCompareFlag flags);
 gint		 as_utils_vercmp		(const gchar	*version_a,
 						 const gchar	*version_b);
 gboolean	 as_utils_guid_is_valid		(const gchar	*guid);

This patch deprecates the following functions:

as_utils_vercmp_full
as_utils_version_parse

If you want, I can just insert the code from as_utils_vercmp_complex and as_utils_version_reparse into them.
I also prepared a simple test: org.freedesktop.appstream-test.yaml
app-id: org.freedesktop.appstream-test
runtime: org.freedesktop.Platform
runtime-version: '18.08'
sdk: org.freedesktop.Sdk
command: appstream-test
modules:
  - name: libappstream-glib
    buildsystem: meson
    config-opts:
      - -Dfonts=false
      - -Ddep11=false
      - -Drpm=false
      - -Dstemmer=false
    sources:
      - type: git
        url: https://github.com/scx/appstream-glib.git
        branch: master
        commit: 2ff970eb3cc748da336695f941356b74da16c55f
    post-install:
      - meson test
    cleanup:
      - /share/installed-tests
  - name: appstream-test
    buildsystem: simple
    sources:
      - type: script
        commands:
          - appstream-util --version
          - appstream-util vercmp 'Build 9half' 'Build 10'
          - appstream-util vercmp 'Build 9.5' 'Build 10'
          - appstream-util vercmp 'Build 9+' 'Build 10'
          - appstream-util vercmp 'Build 9a' 'Build 10'
          - appstream-util vercmp 'Build 9' 'Build 10'
          - appstream-util vercmp '9half' '10'
          - appstream-util vercmp '9.5' '10'
          - appstream-util vercmp '9+' '10'
          - appstream-util vercmp '9a' '10'
          - appstream-util vercmp '9' '10'
          - appstream-util vercmp '1.2.3' '1.2.3'
          - appstream-util vercmp '001.002.003' '001.002.003'
          - appstream-util vercmp '1.2.3' '0x1020003'
          - appstream-util vercmp '0x10203' '0x10203'
          - appstream-util vercmp '1.2.3' '1.2.4'
          - appstream-util vercmp '001.002.000' '001.002.009'
          - appstream-util vercmp '1.2.3' '1.2.2'
          - appstream-util vercmp '001.002.009' '001.002.000'
          - appstream-util vercmp '1.2.3' '1.2.3.1'
          - appstream-util vercmp '1.2.3.1' '1.2.4'
          - appstream-util vercmp '1.2.3a' '1.2.3a'
          - appstream-util vercmp '1.2.3a' '1.2.3b'
          - appstream-util vercmp '1.2.3b' '1.2.3a'
          - appstream-util vercmp '1.2.3' '1.2.3a'
          - appstream-util vercmp '1.2.3a' '1.2.3'
          - appstream-util vercmp 'alpha' 'alpha'
          - appstream-util vercmp 'alpha' 'beta'
          - appstream-util vercmp 'beta' 'alpha'
          - appstream-util vercmp '1.2a.3' '1.2a.3'
          - appstream-util vercmp '1.2a.3' '1.2b.3'
          - appstream-util vercmp '1.2b.3' '1.2a.3'
          - appstream-util vercmp '1.2.3~rc1' '1.2.3~rc1'
          - appstream-util vercmp '1.2.3~rc1' '1.2.3'
          - appstream-util vercmp '1.2.3' '1.2.3~rc1'
          - appstream-util vercmp '1.2.3~rc2' '1.2.3~rc1'
        dest-filename: appstream-test
    build-commands:
      - install -p -D -m 0755 'appstream-test' -t '/app/bin/'

Build command:
mkdir -p build && flatpak-builder 'build' 'org.freedesktop.appstream-test.yaml' --force-clean --install-deps-from='flathub'

Run command:
flatpak-builder --run 'build' 'org.freedesktop.appstream-test.yaml' 'appstream-test' 2>/dev/null

Results:
Version:	0.7.14
Build 9half < Build 10
Build 9.5 < Build 10
Build 9+ < Build 10
Build 9a < Build 10
Build 9 < Build 10
9half < 10
9.5 < 10
9+ < 10
9a < 10
9 < 10
1.2.3 = 1.2.3
001.002.003 = 001.002.003
1.2.3 = 0x1020003
0x10203 = 0x10203
1.2.3 < 1.2.4
001.002.000 < 001.002.009
1.2.3 > 1.2.2
001.002.009 > 001.002.000
1.2.3 < 1.2.3.1
1.2.3.1 < 1.2.4
1.2.3a = 1.2.3a
1.2.3a < 1.2.3b
1.2.3b > 1.2.3a
1.2.3 < 1.2.3a
1.2.3a > 1.2.3
alpha = alpha
alpha < beta
beta > alpha
1.2a.3 = 1.2a.3
1.2a.3 < 1.2b.3
1.2b.3 > 1.2a.3
1.2.3~rc1 = 1.2.3~rc1
1.2.3~rc1 < 1.2.3
1.2.3 > 1.2.3~rc1
1.2.3~rc2 > 1.2.3~rc1

See also: #270 (comment)","This is pretty much exactly the code libappstream uses (except that it's the only way to compare versions in libas, without any implementation of ""choose what algorithm you want to compare versions"")",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,272,2018-11-13T08:50:55Z,2019-02-06T12:17:24Z,2019-02-06T12:17:25Z,CLOSED,False,229,46,3,https://github.com/scx,Rewrite the version comparison algorithm,6,[],https://github.com/hughsie/appstream-glib/pull/272,https://github.com/scx,3,https://github.com/hughsie/appstream-glib/pull/272#issuecomment-439718284,"Proposed patch: libappstream-glib-rpmvercmp.patch
diff -Naur a/appstream-glib/libappstream-glib/as-utils.c b/appstream-glib/libappstream-glib/as-utils.c
--- a/appstream-glib/libappstream-glib/as-utils.c	2018-11-13 06:28:45.000000000 +0100
+++ b/appstream-glib/libappstream-glib/as-utils.c	2018-11-13 08:55:25.000000000 +0100
@@ -1463,6 +1463,209 @@
 }
 
 /**
+ * as_utils_version_reparse:
+ * @version: A version number
+ *
+ * Returns a dotted decimal version string from a version string. The supported
+ * formats are:
+ *
+ * - Dotted decimal, e.g. ""1.2.3""
+ * - Base 16, a hex number *with* a 0x prefix, e.g. ""0x10203""
+ *
+ * Anything with a '.' or that doesn't match 0x[a-f,0-9] is considered
+ * a string and returned without modification.
+ *
+ * Returns: A version number, e.g. ""1.0.3""
+ *
+ * Since: 0.7.15
+ */
+gchar *
+as_utils_version_reparse (const gchar *version)
+{
+	const gchar *version_noprefix = version;
+	gchar *endptr = NULL;
+	guint64 tmp;
+	guint base;
+
+	/* already dotted decimal */
+	if (g_strstr_len (version, -1, ""."") != NULL)
+		return g_strdup (version);
+
+	/* convert 0x prefixed strings to dotted decimal */
+	if (g_str_has_prefix (version, ""0x"")) {
+		version_noprefix += 2;
+		base = 16;
+	} else {
+		/* just return the string */
+		return g_strdup (version);
+	}
+
+	/* convert */
+	tmp = g_ascii_strtoull (version_noprefix, &endptr, base);
+	if (endptr != NULL && endptr[0] != '\0')
+		return g_strdup (version);
+	if (tmp == 0)
+		return g_strdup (version);
+	return as_utils_version_from_uint32 ((guint32) tmp, AS_VERSION_PARSE_FLAG_USE_TRIPLET);
+}
+
+// Based on: https://github.com/rpm-software-management/rpm/blob/ca8ff08e4f61f05c743797ea4afbb9bf0bce3064/lib/rpmvercmp.c#L12-L122
+/**
+ * as_utils_vercmp_rpm:
+ * @version_a: the release version, e.g. 1.2.3
+ * @version_b: the release version, e.g. 1.2.3.1
+ *
+ * Compares version numbers for sorting.
+ *
+ * Returns: -1 if a < b, +1 if a > b, 0 if they are equal
+ *
+ * Since: 0.7.15
+ */
+gint
+as_utils_vercmp_rpm (const gchar *version_a, const gchar *version_b)
+{
+	/* easy comparison to see if versions are identical */
+	if (g_strcmp0(version_a, version_b) == 0) return 0;
+
+	gchar oldch1, oldch2;
+	gchar abuf[strlen(version_a)+1], bbuf[strlen(version_b)+1];
+	gchar *str1 = abuf, *str2 = bbuf;
+	gchar * one, * two;
+	gint rc;
+	gint isnum;
+
+	g_strlcpy(str1, version_a, sizeof(abuf));
+	g_strlcpy(str2, version_b, sizeof(bbuf));
+
+	one = str1;
+	two = str2;
+
+	/* loop through each version segment of str1 and str2 and compare them */
+	while (*one || *two) {
+	while (*one && !g_ascii_isalnum(*one) && *one != '~') one++;
+	while (*two && !g_ascii_isalnum(*two) && *two != '~') two++;
+
+	/* handle the tilde separator, it sorts before everything else */
+	if (*one == '~' || *two == '~') {
+		if (*one != '~') return 1;
+		if (*two != '~') return -1;
+		one++;
+		two++;
+		continue;
+	}
+
+	/* If we ran to the end of either, we are finished with the loop */
+	if (!(*one && *two)) break;
+
+	str1 = one;
+	str2 = two;
+
+	/* grab first completely alpha or completely numeric segment */
+	/* leave one and two pointing to the start of the alpha or numeric */
+	/* segment and walk str1 and str2 to end of segment */
+	if (g_ascii_isdigit(*str1)) {
+		while (*str1 && g_ascii_isdigit(*str1)) str1++;
+		while (*str2 && g_ascii_isdigit(*str2)) str2++;
+		isnum = 1;
+	} else {
+		while (*str1 && g_ascii_isalpha(*str1)) str1++;
+		while (*str2 && g_ascii_isalpha(*str2)) str2++;
+		isnum = 0;
+	}
+
+	/* save character at the end of the alpha or numeric segment */
+	/* so that they can be restored after the comparison */
+	oldch1 = *str1;
+	*str1 = '\0';
+	oldch2 = *str2;
+	*str2 = '\0';
+
+	/* this cannot happen, as we previously tested to make sure that */
+	/* the first string has a non-null segment */
+	if (one == str1) return -1;	/* arbitrary */
+
+	/* take care of the case where the two version segments are */
+	/* different types: one numeric, the other alpha (i.e. empty) */
+	/* numeric segments are always newer than alpha segments */
+	/* XXX See patch #60884 (and details) from bugzilla #50977. */
+	if (two == str2) return (isnum ? 1 : -1);
+
+	if (isnum) {
+		gsize onelen, twolen;
+		/* this used to be done by converting the digit segments */
+		/* to ints using atoi() - it's changed because long  */
+		/* digit segments can overflow an int - this should fix that. */
+
+		/* throw away any leading zeros - it's a number, right? */
+		while (*one == '0') one++;
+		while (*two == '0') two++;
+
+		/* whichever number has more digits wins */
+		onelen = strlen(one);
+		twolen = strlen(two);
+		if (onelen > twolen) return 1;
+		if (twolen > onelen) return -1;
+	}
+
+	/* strcmp will return which one is greater - even if the two */
+	/* segments are alpha or if they are numeric.  don't return  */
+	/* if they are equal because there might be more segments to */
+	/* compare */
+	rc = g_strcmp0(one, two);
+	if (rc) return (rc < 1 ? -1 : 1);
+
+	/* restore character that was replaced by null above */
+	*str1 = oldch1;
+	one = str1;
+	*str2 = oldch2;
+	two = str2;
+	}
+
+	/* this catches the case where all numeric and alpha segments have */
+	/* compared identically but the segment sepparating characters were */
+	/* different */
+	if ((!*one) && (!*two)) return 0;
+
+	/* whichever version still has characters left over wins */
+	if (!*one) return -1; else return 1;
+}
+
+/**
+ * as_utils_vercmp_complex:
+ * @version_a: the release version, e.g. 1.2.3
+ * @version_b: the release version, e.g. 1.2.3.1
+ * @flags: some #AsVersionCompareFlag
+ *
+ * Compares version numbers for sorting.
+ *
+ * Returns: -1 if a < b, +1 if a > b, 0 if they are equal, and %G_MAXINT on error
+ *
+ * Since: 0.7.15
+ */
+gint
+as_utils_vercmp_complex (const gchar *version_a,
+			 const gchar *version_b,
+			 AsVersionCompareFlag flags)
+{
+	/* sanity check */
+	if (version_a == NULL || version_b == NULL)
+		return G_MAXINT;
+
+	/* optimisation */
+	if (g_strcmp0 (version_a, version_b) == 0)
+		return 0;
+
+	/* split into sections, and try to parse */
+	if (flags & AS_VERSION_COMPARE_FLAG_USE_HEURISTICS) {
+		g_autofree gchar *str_a = as_utils_version_reparse (version_a);
+		g_autofree gchar *str_b = as_utils_version_reparse (version_b);
+		return as_utils_vercmp_rpm (str_a, str_b);
+	} else {
+		return as_utils_vercmp_rpm (version_a, version_b);
+	}
+}
+
+/**
  * as_utils_vercmp:
  * @version_a: the release version, e.g. 1.2.3
  * @version_b: the release version, e.g. 1.2.3.1
@@ -1476,8 +1679,8 @@
 gint
 as_utils_vercmp (const gchar *version_a, const gchar *version_b)
 {
-	return as_utils_vercmp_full (version_a, version_b,
-				     AS_VERSION_COMPARE_FLAG_USE_HEURISTICS);
+	return as_utils_vercmp_complex (version_a, version_b,
+					AS_VERSION_COMPARE_FLAG_USE_HEURISTICS);
 }
 
 /**
diff -Naur a/appstream-glib/libappstream-glib/as-utils.h b/appstream-glib/libappstream-glib/as-utils.h
--- a/appstream-glib/libappstream-glib/as-utils.h	2018-11-13 06:28:45.000000000 +0100
+++ b/appstream-glib/libappstream-glib/as-utils.h	2018-11-13 08:39:21.000000000 +0100
@@ -163,6 +163,12 @@
 gint		 as_utils_vercmp_full		(const gchar	*version_a,
 						 const gchar	*version_b,
 						 AsVersionCompareFlag flags);
+gchar		*as_utils_version_reparse	(const gchar	*version);
+gint		 as_utils_vercmp_rpm		(const gchar	*version_a,
+						 const gchar	*version_b);
+gint		 as_utils_vercmp_complex	(const gchar	*version_a,
+						 const gchar	*version_b,
+						 AsVersionCompareFlag flags);
 gint		 as_utils_vercmp		(const gchar	*version_a,
 						 const gchar	*version_b);
 gboolean	 as_utils_guid_is_valid		(const gchar	*guid);

This patch deprecates the following functions:

as_utils_vercmp_full
as_utils_version_parse

If you want, I can just insert the code from as_utils_vercmp_complex and as_utils_version_reparse into them.
I also prepared a simple test: org.freedesktop.appstream-test.yaml
app-id: org.freedesktop.appstream-test
runtime: org.freedesktop.Platform
runtime-version: '18.08'
sdk: org.freedesktop.Sdk
command: appstream-test
modules:
  - name: libappstream-glib
    buildsystem: meson
    config-opts:
      - -Dfonts=false
      - -Ddep11=false
      - -Drpm=false
      - -Dstemmer=false
    sources:
      - type: git
        url: https://github.com/scx/appstream-glib.git
        branch: master
        commit: 2ff970eb3cc748da336695f941356b74da16c55f
    post-install:
      - meson test
    cleanup:
      - /share/installed-tests
  - name: appstream-test
    buildsystem: simple
    sources:
      - type: script
        commands:
          - appstream-util --version
          - appstream-util vercmp 'Build 9half' 'Build 10'
          - appstream-util vercmp 'Build 9.5' 'Build 10'
          - appstream-util vercmp 'Build 9+' 'Build 10'
          - appstream-util vercmp 'Build 9a' 'Build 10'
          - appstream-util vercmp 'Build 9' 'Build 10'
          - appstream-util vercmp '9half' '10'
          - appstream-util vercmp '9.5' '10'
          - appstream-util vercmp '9+' '10'
          - appstream-util vercmp '9a' '10'
          - appstream-util vercmp '9' '10'
          - appstream-util vercmp '1.2.3' '1.2.3'
          - appstream-util vercmp '001.002.003' '001.002.003'
          - appstream-util vercmp '1.2.3' '0x1020003'
          - appstream-util vercmp '0x10203' '0x10203'
          - appstream-util vercmp '1.2.3' '1.2.4'
          - appstream-util vercmp '001.002.000' '001.002.009'
          - appstream-util vercmp '1.2.3' '1.2.2'
          - appstream-util vercmp '001.002.009' '001.002.000'
          - appstream-util vercmp '1.2.3' '1.2.3.1'
          - appstream-util vercmp '1.2.3.1' '1.2.4'
          - appstream-util vercmp '1.2.3a' '1.2.3a'
          - appstream-util vercmp '1.2.3a' '1.2.3b'
          - appstream-util vercmp '1.2.3b' '1.2.3a'
          - appstream-util vercmp '1.2.3' '1.2.3a'
          - appstream-util vercmp '1.2.3a' '1.2.3'
          - appstream-util vercmp 'alpha' 'alpha'
          - appstream-util vercmp 'alpha' 'beta'
          - appstream-util vercmp 'beta' 'alpha'
          - appstream-util vercmp '1.2a.3' '1.2a.3'
          - appstream-util vercmp '1.2a.3' '1.2b.3'
          - appstream-util vercmp '1.2b.3' '1.2a.3'
          - appstream-util vercmp '1.2.3~rc1' '1.2.3~rc1'
          - appstream-util vercmp '1.2.3~rc1' '1.2.3'
          - appstream-util vercmp '1.2.3' '1.2.3~rc1'
          - appstream-util vercmp '1.2.3~rc2' '1.2.3~rc1'
        dest-filename: appstream-test
    build-commands:
      - install -p -D -m 0755 'appstream-test' -t '/app/bin/'

Build command:
mkdir -p build && flatpak-builder 'build' 'org.freedesktop.appstream-test.yaml' --force-clean --install-deps-from='flathub'

Run command:
flatpak-builder --run 'build' 'org.freedesktop.appstream-test.yaml' 'appstream-test' 2>/dev/null

Results:
Version:	0.7.14
Build 9half < Build 10
Build 9.5 < Build 10
Build 9+ < Build 10
Build 9a < Build 10
Build 9 < Build 10
9half < 10
9.5 < 10
9+ < 10
9a < 10
9 < 10
1.2.3 = 1.2.3
001.002.003 = 001.002.003
1.2.3 = 0x1020003
0x10203 = 0x10203
1.2.3 < 1.2.4
001.002.000 < 001.002.009
1.2.3 > 1.2.2
001.002.009 > 001.002.000
1.2.3 < 1.2.3.1
1.2.3.1 < 1.2.4
1.2.3a = 1.2.3a
1.2.3a < 1.2.3b
1.2.3b > 1.2.3a
1.2.3 < 1.2.3a
1.2.3a > 1.2.3
alpha = alpha
alpha < beta
beta > alpha
1.2a.3 = 1.2a.3
1.2a.3 < 1.2b.3
1.2b.3 > 1.2a.3
1.2.3~rc1 = 1.2.3~rc1
1.2.3~rc1 < 1.2.3
1.2.3 > 1.2.3~rc1
1.2.3~rc2 > 1.2.3~rc1

See also: #270 (comment)","@ximion

This is pretty much exactly the code libappstream uses

I have to disagree with you. Current algorithm used in AppStream-Glib is simply not compatible with the specification. Documentation says that The version compare algorithm is also used by RPM. However, this is not true. It is not compatible with RPM (rpmvercmp), neither with DEB (dpkg). I'm trying to fix it.
What is worse, there is also a strange heuristic here, that causes 9.5 > 10, because it treats 10 as 0.0.10, which is nonsense.

except that it's the only way to compare versions in libas, without any implementation of ""choose what algorithm you want to compare versions""

I'd love to get rid of the old algorithm, but I'm not sure if I have the rights to do it. There may be 3rd party software based on old behavior, especially on old heuristic, which can be independent of the main algorithm.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,272,2018-11-13T08:50:55Z,2019-02-06T12:17:24Z,2019-02-06T12:17:25Z,CLOSED,False,229,46,3,https://github.com/scx,Rewrite the version comparison algorithm,6,[],https://github.com/hughsie/appstream-glib/pull/272,https://github.com/scx,4,https://github.com/hughsie/appstream-glib/pull/272#issuecomment-439812546,"Proposed patch: libappstream-glib-rpmvercmp.patch
diff -Naur a/appstream-glib/libappstream-glib/as-utils.c b/appstream-glib/libappstream-glib/as-utils.c
--- a/appstream-glib/libappstream-glib/as-utils.c	2018-11-13 06:28:45.000000000 +0100
+++ b/appstream-glib/libappstream-glib/as-utils.c	2018-11-13 08:55:25.000000000 +0100
@@ -1463,6 +1463,209 @@
 }
 
 /**
+ * as_utils_version_reparse:
+ * @version: A version number
+ *
+ * Returns a dotted decimal version string from a version string. The supported
+ * formats are:
+ *
+ * - Dotted decimal, e.g. ""1.2.3""
+ * - Base 16, a hex number *with* a 0x prefix, e.g. ""0x10203""
+ *
+ * Anything with a '.' or that doesn't match 0x[a-f,0-9] is considered
+ * a string and returned without modification.
+ *
+ * Returns: A version number, e.g. ""1.0.3""
+ *
+ * Since: 0.7.15
+ */
+gchar *
+as_utils_version_reparse (const gchar *version)
+{
+	const gchar *version_noprefix = version;
+	gchar *endptr = NULL;
+	guint64 tmp;
+	guint base;
+
+	/* already dotted decimal */
+	if (g_strstr_len (version, -1, ""."") != NULL)
+		return g_strdup (version);
+
+	/* convert 0x prefixed strings to dotted decimal */
+	if (g_str_has_prefix (version, ""0x"")) {
+		version_noprefix += 2;
+		base = 16;
+	} else {
+		/* just return the string */
+		return g_strdup (version);
+	}
+
+	/* convert */
+	tmp = g_ascii_strtoull (version_noprefix, &endptr, base);
+	if (endptr != NULL && endptr[0] != '\0')
+		return g_strdup (version);
+	if (tmp == 0)
+		return g_strdup (version);
+	return as_utils_version_from_uint32 ((guint32) tmp, AS_VERSION_PARSE_FLAG_USE_TRIPLET);
+}
+
+// Based on: https://github.com/rpm-software-management/rpm/blob/ca8ff08e4f61f05c743797ea4afbb9bf0bce3064/lib/rpmvercmp.c#L12-L122
+/**
+ * as_utils_vercmp_rpm:
+ * @version_a: the release version, e.g. 1.2.3
+ * @version_b: the release version, e.g. 1.2.3.1
+ *
+ * Compares version numbers for sorting.
+ *
+ * Returns: -1 if a < b, +1 if a > b, 0 if they are equal
+ *
+ * Since: 0.7.15
+ */
+gint
+as_utils_vercmp_rpm (const gchar *version_a, const gchar *version_b)
+{
+	/* easy comparison to see if versions are identical */
+	if (g_strcmp0(version_a, version_b) == 0) return 0;
+
+	gchar oldch1, oldch2;
+	gchar abuf[strlen(version_a)+1], bbuf[strlen(version_b)+1];
+	gchar *str1 = abuf, *str2 = bbuf;
+	gchar * one, * two;
+	gint rc;
+	gint isnum;
+
+	g_strlcpy(str1, version_a, sizeof(abuf));
+	g_strlcpy(str2, version_b, sizeof(bbuf));
+
+	one = str1;
+	two = str2;
+
+	/* loop through each version segment of str1 and str2 and compare them */
+	while (*one || *two) {
+	while (*one && !g_ascii_isalnum(*one) && *one != '~') one++;
+	while (*two && !g_ascii_isalnum(*two) && *two != '~') two++;
+
+	/* handle the tilde separator, it sorts before everything else */
+	if (*one == '~' || *two == '~') {
+		if (*one != '~') return 1;
+		if (*two != '~') return -1;
+		one++;
+		two++;
+		continue;
+	}
+
+	/* If we ran to the end of either, we are finished with the loop */
+	if (!(*one && *two)) break;
+
+	str1 = one;
+	str2 = two;
+
+	/* grab first completely alpha or completely numeric segment */
+	/* leave one and two pointing to the start of the alpha or numeric */
+	/* segment and walk str1 and str2 to end of segment */
+	if (g_ascii_isdigit(*str1)) {
+		while (*str1 && g_ascii_isdigit(*str1)) str1++;
+		while (*str2 && g_ascii_isdigit(*str2)) str2++;
+		isnum = 1;
+	} else {
+		while (*str1 && g_ascii_isalpha(*str1)) str1++;
+		while (*str2 && g_ascii_isalpha(*str2)) str2++;
+		isnum = 0;
+	}
+
+	/* save character at the end of the alpha or numeric segment */
+	/* so that they can be restored after the comparison */
+	oldch1 = *str1;
+	*str1 = '\0';
+	oldch2 = *str2;
+	*str2 = '\0';
+
+	/* this cannot happen, as we previously tested to make sure that */
+	/* the first string has a non-null segment */
+	if (one == str1) return -1;	/* arbitrary */
+
+	/* take care of the case where the two version segments are */
+	/* different types: one numeric, the other alpha (i.e. empty) */
+	/* numeric segments are always newer than alpha segments */
+	/* XXX See patch #60884 (and details) from bugzilla #50977. */
+	if (two == str2) return (isnum ? 1 : -1);
+
+	if (isnum) {
+		gsize onelen, twolen;
+		/* this used to be done by converting the digit segments */
+		/* to ints using atoi() - it's changed because long  */
+		/* digit segments can overflow an int - this should fix that. */
+
+		/* throw away any leading zeros - it's a number, right? */
+		while (*one == '0') one++;
+		while (*two == '0') two++;
+
+		/* whichever number has more digits wins */
+		onelen = strlen(one);
+		twolen = strlen(two);
+		if (onelen > twolen) return 1;
+		if (twolen > onelen) return -1;
+	}
+
+	/* strcmp will return which one is greater - even if the two */
+	/* segments are alpha or if they are numeric.  don't return  */
+	/* if they are equal because there might be more segments to */
+	/* compare */
+	rc = g_strcmp0(one, two);
+	if (rc) return (rc < 1 ? -1 : 1);
+
+	/* restore character that was replaced by null above */
+	*str1 = oldch1;
+	one = str1;
+	*str2 = oldch2;
+	two = str2;
+	}
+
+	/* this catches the case where all numeric and alpha segments have */
+	/* compared identically but the segment sepparating characters were */
+	/* different */
+	if ((!*one) && (!*two)) return 0;
+
+	/* whichever version still has characters left over wins */
+	if (!*one) return -1; else return 1;
+}
+
+/**
+ * as_utils_vercmp_complex:
+ * @version_a: the release version, e.g. 1.2.3
+ * @version_b: the release version, e.g. 1.2.3.1
+ * @flags: some #AsVersionCompareFlag
+ *
+ * Compares version numbers for sorting.
+ *
+ * Returns: -1 if a < b, +1 if a > b, 0 if they are equal, and %G_MAXINT on error
+ *
+ * Since: 0.7.15
+ */
+gint
+as_utils_vercmp_complex (const gchar *version_a,
+			 const gchar *version_b,
+			 AsVersionCompareFlag flags)
+{
+	/* sanity check */
+	if (version_a == NULL || version_b == NULL)
+		return G_MAXINT;
+
+	/* optimisation */
+	if (g_strcmp0 (version_a, version_b) == 0)
+		return 0;
+
+	/* split into sections, and try to parse */
+	if (flags & AS_VERSION_COMPARE_FLAG_USE_HEURISTICS) {
+		g_autofree gchar *str_a = as_utils_version_reparse (version_a);
+		g_autofree gchar *str_b = as_utils_version_reparse (version_b);
+		return as_utils_vercmp_rpm (str_a, str_b);
+	} else {
+		return as_utils_vercmp_rpm (version_a, version_b);
+	}
+}
+
+/**
  * as_utils_vercmp:
  * @version_a: the release version, e.g. 1.2.3
  * @version_b: the release version, e.g. 1.2.3.1
@@ -1476,8 +1679,8 @@
 gint
 as_utils_vercmp (const gchar *version_a, const gchar *version_b)
 {
-	return as_utils_vercmp_full (version_a, version_b,
-				     AS_VERSION_COMPARE_FLAG_USE_HEURISTICS);
+	return as_utils_vercmp_complex (version_a, version_b,
+					AS_VERSION_COMPARE_FLAG_USE_HEURISTICS);
 }
 
 /**
diff -Naur a/appstream-glib/libappstream-glib/as-utils.h b/appstream-glib/libappstream-glib/as-utils.h
--- a/appstream-glib/libappstream-glib/as-utils.h	2018-11-13 06:28:45.000000000 +0100
+++ b/appstream-glib/libappstream-glib/as-utils.h	2018-11-13 08:39:21.000000000 +0100
@@ -163,6 +163,12 @@
 gint		 as_utils_vercmp_full		(const gchar	*version_a,
 						 const gchar	*version_b,
 						 AsVersionCompareFlag flags);
+gchar		*as_utils_version_reparse	(const gchar	*version);
+gint		 as_utils_vercmp_rpm		(const gchar	*version_a,
+						 const gchar	*version_b);
+gint		 as_utils_vercmp_complex	(const gchar	*version_a,
+						 const gchar	*version_b,
+						 AsVersionCompareFlag flags);
 gint		 as_utils_vercmp		(const gchar	*version_a,
 						 const gchar	*version_b);
 gboolean	 as_utils_guid_is_valid		(const gchar	*guid);

This patch deprecates the following functions:

as_utils_vercmp_full
as_utils_version_parse

If you want, I can just insert the code from as_utils_vercmp_complex and as_utils_version_reparse into them.
I also prepared a simple test: org.freedesktop.appstream-test.yaml
app-id: org.freedesktop.appstream-test
runtime: org.freedesktop.Platform
runtime-version: '18.08'
sdk: org.freedesktop.Sdk
command: appstream-test
modules:
  - name: libappstream-glib
    buildsystem: meson
    config-opts:
      - -Dfonts=false
      - -Ddep11=false
      - -Drpm=false
      - -Dstemmer=false
    sources:
      - type: git
        url: https://github.com/scx/appstream-glib.git
        branch: master
        commit: 2ff970eb3cc748da336695f941356b74da16c55f
    post-install:
      - meson test
    cleanup:
      - /share/installed-tests
  - name: appstream-test
    buildsystem: simple
    sources:
      - type: script
        commands:
          - appstream-util --version
          - appstream-util vercmp 'Build 9half' 'Build 10'
          - appstream-util vercmp 'Build 9.5' 'Build 10'
          - appstream-util vercmp 'Build 9+' 'Build 10'
          - appstream-util vercmp 'Build 9a' 'Build 10'
          - appstream-util vercmp 'Build 9' 'Build 10'
          - appstream-util vercmp '9half' '10'
          - appstream-util vercmp '9.5' '10'
          - appstream-util vercmp '9+' '10'
          - appstream-util vercmp '9a' '10'
          - appstream-util vercmp '9' '10'
          - appstream-util vercmp '1.2.3' '1.2.3'
          - appstream-util vercmp '001.002.003' '001.002.003'
          - appstream-util vercmp '1.2.3' '0x1020003'
          - appstream-util vercmp '0x10203' '0x10203'
          - appstream-util vercmp '1.2.3' '1.2.4'
          - appstream-util vercmp '001.002.000' '001.002.009'
          - appstream-util vercmp '1.2.3' '1.2.2'
          - appstream-util vercmp '001.002.009' '001.002.000'
          - appstream-util vercmp '1.2.3' '1.2.3.1'
          - appstream-util vercmp '1.2.3.1' '1.2.4'
          - appstream-util vercmp '1.2.3a' '1.2.3a'
          - appstream-util vercmp '1.2.3a' '1.2.3b'
          - appstream-util vercmp '1.2.3b' '1.2.3a'
          - appstream-util vercmp '1.2.3' '1.2.3a'
          - appstream-util vercmp '1.2.3a' '1.2.3'
          - appstream-util vercmp 'alpha' 'alpha'
          - appstream-util vercmp 'alpha' 'beta'
          - appstream-util vercmp 'beta' 'alpha'
          - appstream-util vercmp '1.2a.3' '1.2a.3'
          - appstream-util vercmp '1.2a.3' '1.2b.3'
          - appstream-util vercmp '1.2b.3' '1.2a.3'
          - appstream-util vercmp '1.2.3~rc1' '1.2.3~rc1'
          - appstream-util vercmp '1.2.3~rc1' '1.2.3'
          - appstream-util vercmp '1.2.3' '1.2.3~rc1'
          - appstream-util vercmp '1.2.3~rc2' '1.2.3~rc1'
        dest-filename: appstream-test
    build-commands:
      - install -p -D -m 0755 'appstream-test' -t '/app/bin/'

Build command:
mkdir -p build && flatpak-builder 'build' 'org.freedesktop.appstream-test.yaml' --force-clean --install-deps-from='flathub'

Run command:
flatpak-builder --run 'build' 'org.freedesktop.appstream-test.yaml' 'appstream-test' 2>/dev/null

Results:
Version:	0.7.14
Build 9half < Build 10
Build 9.5 < Build 10
Build 9+ < Build 10
Build 9a < Build 10
Build 9 < Build 10
9half < 10
9.5 < 10
9+ < 10
9a < 10
9 < 10
1.2.3 = 1.2.3
001.002.003 = 001.002.003
1.2.3 = 0x1020003
0x10203 = 0x10203
1.2.3 < 1.2.4
001.002.000 < 001.002.009
1.2.3 > 1.2.2
001.002.009 > 001.002.000
1.2.3 < 1.2.3.1
1.2.3.1 < 1.2.4
1.2.3a = 1.2.3a
1.2.3a < 1.2.3b
1.2.3b > 1.2.3a
1.2.3 < 1.2.3a
1.2.3a > 1.2.3
alpha = alpha
alpha < beta
beta > alpha
1.2a.3 = 1.2a.3
1.2a.3 < 1.2b.3
1.2b.3 > 1.2a.3
1.2.3~rc1 = 1.2.3~rc1
1.2.3~rc1 < 1.2.3
1.2.3 > 1.2.3~rc1
1.2.3~rc2 > 1.2.3~rc1

See also: #270 (comment)","@ximion
New patch: libappstream-glib-rpmvercmp.patch
diff -Naur a/appstream-glib/libappstream-glib/as-utils.c b/appstream-glib/libappstream-glib/as-utils.c
--- a/appstream-glib/libappstream-glib/as-utils.c	2018-11-18 23:13:09.000000000 +0100
+++ b/appstream-glib/libappstream-glib/as-utils.c	2018-11-19 00:06:27.000000000 +0100
@@ -1404,10 +1404,6 @@
 		      const gchar *version_b,
 		      AsVersionCompareFlag flags)
 {
-	guint longest_split;
-	g_auto(GStrv) split_a = NULL;
-	g_auto(GStrv) split_b = NULL;
-
 	/* sanity check */
 	if (version_a == NULL || version_b == NULL)
 		return G_MAXINT;
@@ -1418,48 +1414,133 @@
 
 	/* split into sections, and try to parse */
 	if (flags & AS_VERSION_COMPARE_FLAG_USE_HEURISTICS) {
-		g_autofree gchar *str_a = as_utils_version_parse (version_a);
-		g_autofree gchar *str_b = as_utils_version_parse (version_b);
-		split_a = g_strsplit (str_a, ""."", -1);
-		split_b = g_strsplit (str_b, ""."", -1);
+		g_autofree gchar *str_a = as_utils_version_parse_full (version_a, TRUE);
+		g_autofree gchar *str_b = as_utils_version_parse_full (version_b, TRUE);
+		return as_utils_vercmp_rpm (str_a, str_b);
 	} else {
-		split_a = g_strsplit (version_a, ""."", -1);
-		split_b = g_strsplit (version_b, ""."", -1);
+		return as_utils_vercmp_rpm (version_a, version_b);
 	}
-	longest_split = MAX (g_strv_length (split_a), g_strv_length (split_b));
-	for (guint i = 0; i < longest_split; i++) {
-		gchar *endptr_a = NULL;
-		gchar *endptr_b = NULL;
-		gint64 ver_a;
-		gint64 ver_b;
-
-		/* we lost or gained a dot */
-		if (split_a[i] == NULL)
-			return -1;
-		if (split_b[i] == NULL)
-			return 1;
-
-		/* compare integers */
-		ver_a = g_ascii_strtoll (split_a[i], &endptr_a, 10);
-		ver_b = g_ascii_strtoll (split_b[i], &endptr_b, 10);
-		if (ver_a < ver_b)
-			return -1;
-		if (ver_a > ver_b)
-			return 1;
-
-		/* compare strings */
-		if ((endptr_a != NULL && endptr_a[0] != '\0') ||
-		    (endptr_b != NULL && endptr_b[0] != '\0')) {
-			gint rc = as_utils_vercmp_chunk (endptr_a, endptr_b);
-			if (rc < 0)
-				return -1;
-			if (rc > 0)
-				return 1;
-		}
+}
+
+// Based on: https://github.com/rpm-software-management/rpm/blob/ca8ff08e4f61f05c743797ea4afbb9bf0bce3064/lib/rpmvercmp.c#L12-L122
+/**
+ * as_utils_vercmp_rpm:
+ * @version_a: the release version, e.g. 1.2.3
+ * @version_b: the release version, e.g. 1.2.3.1
+ *
+ * Compares version numbers for sorting.
+ *
+ * Returns: -1 if a < b, +1 if a > b, 0 if they are equal
+ *
+ * Since: 0.7.15
+ */
+gint
+as_utils_vercmp_rpm (const gchar *version_a, const gchar *version_b)
+{
+	/* easy comparison to see if versions are identical */
+	if (g_strcmp0(version_a, version_b) == 0) return 0;
+
+	gchar oldch1, oldch2;
+	gchar abuf[strlen(version_a)+1], bbuf[strlen(version_b)+1];
+	gchar *str1 = abuf, *str2 = bbuf;
+	gchar * one, * two;
+	gint rc;
+	gint isnum;
+
+	g_strlcpy(str1, version_a, sizeof(abuf));
+	g_strlcpy(str2, version_b, sizeof(bbuf));
+
+	one = str1;
+	two = str2;
+
+	/* loop through each version segment of str1 and str2 and compare them */
+	while (*one || *two) {
+	while (*one && !g_ascii_isalnum(*one) && *one != '~') one++;
+	while (*two && !g_ascii_isalnum(*two) && *two != '~') two++;
+
+	/* handle the tilde separator, it sorts before everything else */
+	if (*one == '~' || *two == '~') {
+		if (*one != '~') return 1;
+		if (*two != '~') return -1;
+		one++;
+		two++;
+		continue;
+	}
+
+	/* If we ran to the end of either, we are finished with the loop */
+	if (!(*one && *two)) break;
+
+	str1 = one;
+	str2 = two;
+
+	/* grab first completely alpha or completely numeric segment */
+	/* leave one and two pointing to the start of the alpha or numeric */
+	/* segment and walk str1 and str2 to end of segment */
+	if (g_ascii_isdigit(*str1)) {
+		while (*str1 && g_ascii_isdigit(*str1)) str1++;
+		while (*str2 && g_ascii_isdigit(*str2)) str2++;
+		isnum = 1;
+	} else {
+		while (*str1 && g_ascii_isalpha(*str1)) str1++;
+		while (*str2 && g_ascii_isalpha(*str2)) str2++;
+		isnum = 0;
+	}
+
+	/* save character at the end of the alpha or numeric segment */
+	/* so that they can be restored after the comparison */
+	oldch1 = *str1;
+	*str1 = '\0';
+	oldch2 = *str2;
+	*str2 = '\0';
+
+	/* this cannot happen, as we previously tested to make sure that */
+	/* the first string has a non-null segment */
+	if (one == str1) return -1;	/* arbitrary */
+
+	/* take care of the case where the two version segments are */
+	/* different types: one numeric, the other alpha (i.e. empty) */
+	/* numeric segments are always newer than alpha segments */
+	/* XXX See patch #60884 (and details) from bugzilla #50977. */
+	if (two == str2) return (isnum ? 1 : -1);
+
+	if (isnum) {
+		gsize onelen, twolen;
+		/* this used to be done by converting the digit segments */
+		/* to ints using atoi() - it's changed because long  */
+		/* digit segments can overflow an int - this should fix that. */
+
+		/* throw away any leading zeros - it's a number, right? */
+		while (*one == '0') one++;
+		while (*two == '0') two++;
+
+		/* whichever number has more digits wins */
+		onelen = strlen(one);
+		twolen = strlen(two);
+		if (onelen > twolen) return 1;
+		if (twolen > onelen) return -1;
 	}
 
-	/* we really shouldn't get here */
-	return 0;
+	/* strcmp will return which one is greater - even if the two */
+	/* segments are alpha or if they are numeric.  don't return  */
+	/* if they are equal because there might be more segments to */
+	/* compare */
+	rc = g_strcmp0(one, two);
+	if (rc) return (rc < 1 ? -1 : 1);
+
+	/* restore character that was replaced by null above */
+	*str1 = oldch1;
+	one = str1;
+	*str2 = oldch2;
+	two = str2;
+	}
+
+	/* this catches the case where all numeric and alpha segments have */
+	/* compared identically but the segment sepparating characters were */
+	/* different */
+	if ((!*one) && (!*two)) return 0;
+
+	/* whichever version still has characters left over wins */
+	if (!*one) return -1; else return 1;
 }
 
 /**
@@ -1669,15 +1750,16 @@
 }
 
 /**
- * as_utils_version_parse:
+ * as_utils_version_parse_full:
  * @version: A version number
+ * @hex_only: Turn off heuristic for anything that does not match hex number
  *
  * Returns a dotted decimal version string from a version string. The supported
  * formats are:
  *
  * - Dotted decimal, e.g. ""1.2.3""
  * - Base 16, a hex number *with* a 0x prefix, e.g. ""0x10203""
- * - Base 10, a string containing just [0-9], e.g. ""66051""
+ * - Base 10, a string containing just [0-9], e.g. ""66051"" (only if hex_only == FALSE)
  * - Date in YYYYMMDD format, e.g. 20150915
  *
  * Anything with a '.' or that doesn't match [0-9] or 0x[a-f,0-9] is considered
@@ -1685,10 +1767,10 @@
  *
  * Returns: A version number, e.g. ""1.0.3""
  *
- * Since: 0.5.2
+ * Since: 0.7.15
  */
 gchar *
-as_utils_version_parse (const gchar *version)
+as_utils_version_parse_full (const gchar *version, const gboolean hex_only)
 {
 	const gchar *version_noprefix = version;
 	gchar *endptr = NULL;
@@ -1710,6 +1792,10 @@
 		version_noprefix += 2;
 		base = 16;
 	} else {
+		/* just return the string */
+		if (hex_only)
+			return g_strdup (version);
+		
 		/* for non-numeric content, just return the string */
 		for (i = 0; version[i] != '\0'; i++) {
 			if (!g_ascii_isdigit (version[i]))
@@ -1728,6 +1814,31 @@
 }
 
 /**
+ * as_utils_version_parse:
+ * @version: A version number
+ *
+ * Returns a dotted decimal version string from a version string. The supported
+ * formats are:
+ *
+ * - Dotted decimal, e.g. ""1.2.3""
+ * - Base 16, a hex number *with* a 0x prefix, e.g. ""0x10203""
+ * - Base 10, a string containing just [0-9], e.g. ""66051""
+ * - Date in YYYYMMDD format, e.g. 20150915
+ *
+ * Anything with a '.' or that doesn't match [0-9] or 0x[a-f,0-9] is considered
+ * a string and returned without modification.
+ *
+ * Returns: A version number, e.g. ""1.0.3""
+ *
+ * Since: 0.5.2
+ */
+gchar *
+as_utils_version_parse (const gchar *version)
+{
+	return as_utils_version_parse_full (version, FALSE);
+}
+
+/**
  * as_utils_string_replace:
  * @string: The #GString to operate on
  * @search: The text to search for
diff -Naur a/appstream-glib/libappstream-glib/as-utils.h b/appstream-glib/libappstream-glib/as-utils.h
--- a/appstream-glib/libappstream-glib/as-utils.h	2018-11-18 23:13:09.000000000 +0100
+++ b/appstream-glib/libappstream-glib/as-utils.h	2018-11-19 00:05:59.000000000 +0100
@@ -163,6 +163,8 @@
 gint		 as_utils_vercmp_full		(const gchar	*version_a,
 						 const gchar	*version_b,
 						 AsVersionCompareFlag flags);
+gint		 as_utils_vercmp_rpm		(const gchar	*version_a,
+						 const gchar	*version_b);
 gint		 as_utils_vercmp		(const gchar	*version_a,
 						 const gchar	*version_b);
 gboolean	 as_utils_guid_is_valid		(const gchar	*guid);
@@ -175,6 +177,8 @@
 						 AsVersionParseFlag flags);
 gchar		*as_utils_version_from_uint16	(guint16	 val,
 						 AsVersionParseFlag flags);
+gchar		*as_utils_version_parse_full	(const gchar	*version,
+						 const gboolean	hex_only);
 gchar		*as_utils_version_parse		(const gchar	*version);
 guint		 as_utils_string_replace	(GString	*string,
 						 const gchar	*search,",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,272,2018-11-13T08:50:55Z,2019-02-06T12:17:24Z,2019-02-06T12:17:25Z,CLOSED,False,229,46,3,https://github.com/scx,Rewrite the version comparison algorithm,6,[],https://github.com/hughsie/appstream-glib/pull/272,https://github.com/smcv,5,https://github.com/hughsie/appstream-glib/pull/272#issuecomment-439942510,"Proposed patch: libappstream-glib-rpmvercmp.patch
diff -Naur a/appstream-glib/libappstream-glib/as-utils.c b/appstream-glib/libappstream-glib/as-utils.c
--- a/appstream-glib/libappstream-glib/as-utils.c	2018-11-13 06:28:45.000000000 +0100
+++ b/appstream-glib/libappstream-glib/as-utils.c	2018-11-13 08:55:25.000000000 +0100
@@ -1463,6 +1463,209 @@
 }
 
 /**
+ * as_utils_version_reparse:
+ * @version: A version number
+ *
+ * Returns a dotted decimal version string from a version string. The supported
+ * formats are:
+ *
+ * - Dotted decimal, e.g. ""1.2.3""
+ * - Base 16, a hex number *with* a 0x prefix, e.g. ""0x10203""
+ *
+ * Anything with a '.' or that doesn't match 0x[a-f,0-9] is considered
+ * a string and returned without modification.
+ *
+ * Returns: A version number, e.g. ""1.0.3""
+ *
+ * Since: 0.7.15
+ */
+gchar *
+as_utils_version_reparse (const gchar *version)
+{
+	const gchar *version_noprefix = version;
+	gchar *endptr = NULL;
+	guint64 tmp;
+	guint base;
+
+	/* already dotted decimal */
+	if (g_strstr_len (version, -1, ""."") != NULL)
+		return g_strdup (version);
+
+	/* convert 0x prefixed strings to dotted decimal */
+	if (g_str_has_prefix (version, ""0x"")) {
+		version_noprefix += 2;
+		base = 16;
+	} else {
+		/* just return the string */
+		return g_strdup (version);
+	}
+
+	/* convert */
+	tmp = g_ascii_strtoull (version_noprefix, &endptr, base);
+	if (endptr != NULL && endptr[0] != '\0')
+		return g_strdup (version);
+	if (tmp == 0)
+		return g_strdup (version);
+	return as_utils_version_from_uint32 ((guint32) tmp, AS_VERSION_PARSE_FLAG_USE_TRIPLET);
+}
+
+// Based on: https://github.com/rpm-software-management/rpm/blob/ca8ff08e4f61f05c743797ea4afbb9bf0bce3064/lib/rpmvercmp.c#L12-L122
+/**
+ * as_utils_vercmp_rpm:
+ * @version_a: the release version, e.g. 1.2.3
+ * @version_b: the release version, e.g. 1.2.3.1
+ *
+ * Compares version numbers for sorting.
+ *
+ * Returns: -1 if a < b, +1 if a > b, 0 if they are equal
+ *
+ * Since: 0.7.15
+ */
+gint
+as_utils_vercmp_rpm (const gchar *version_a, const gchar *version_b)
+{
+	/* easy comparison to see if versions are identical */
+	if (g_strcmp0(version_a, version_b) == 0) return 0;
+
+	gchar oldch1, oldch2;
+	gchar abuf[strlen(version_a)+1], bbuf[strlen(version_b)+1];
+	gchar *str1 = abuf, *str2 = bbuf;
+	gchar * one, * two;
+	gint rc;
+	gint isnum;
+
+	g_strlcpy(str1, version_a, sizeof(abuf));
+	g_strlcpy(str2, version_b, sizeof(bbuf));
+
+	one = str1;
+	two = str2;
+
+	/* loop through each version segment of str1 and str2 and compare them */
+	while (*one || *two) {
+	while (*one && !g_ascii_isalnum(*one) && *one != '~') one++;
+	while (*two && !g_ascii_isalnum(*two) && *two != '~') two++;
+
+	/* handle the tilde separator, it sorts before everything else */
+	if (*one == '~' || *two == '~') {
+		if (*one != '~') return 1;
+		if (*two != '~') return -1;
+		one++;
+		two++;
+		continue;
+	}
+
+	/* If we ran to the end of either, we are finished with the loop */
+	if (!(*one && *two)) break;
+
+	str1 = one;
+	str2 = two;
+
+	/* grab first completely alpha or completely numeric segment */
+	/* leave one and two pointing to the start of the alpha or numeric */
+	/* segment and walk str1 and str2 to end of segment */
+	if (g_ascii_isdigit(*str1)) {
+		while (*str1 && g_ascii_isdigit(*str1)) str1++;
+		while (*str2 && g_ascii_isdigit(*str2)) str2++;
+		isnum = 1;
+	} else {
+		while (*str1 && g_ascii_isalpha(*str1)) str1++;
+		while (*str2 && g_ascii_isalpha(*str2)) str2++;
+		isnum = 0;
+	}
+
+	/* save character at the end of the alpha or numeric segment */
+	/* so that they can be restored after the comparison */
+	oldch1 = *str1;
+	*str1 = '\0';
+	oldch2 = *str2;
+	*str2 = '\0';
+
+	/* this cannot happen, as we previously tested to make sure that */
+	/* the first string has a non-null segment */
+	if (one == str1) return -1;	/* arbitrary */
+
+	/* take care of the case where the two version segments are */
+	/* different types: one numeric, the other alpha (i.e. empty) */
+	/* numeric segments are always newer than alpha segments */
+	/* XXX See patch #60884 (and details) from bugzilla #50977. */
+	if (two == str2) return (isnum ? 1 : -1);
+
+	if (isnum) {
+		gsize onelen, twolen;
+		/* this used to be done by converting the digit segments */
+		/* to ints using atoi() - it's changed because long  */
+		/* digit segments can overflow an int - this should fix that. */
+
+		/* throw away any leading zeros - it's a number, right? */
+		while (*one == '0') one++;
+		while (*two == '0') two++;
+
+		/* whichever number has more digits wins */
+		onelen = strlen(one);
+		twolen = strlen(two);
+		if (onelen > twolen) return 1;
+		if (twolen > onelen) return -1;
+	}
+
+	/* strcmp will return which one is greater - even if the two */
+	/* segments are alpha or if they are numeric.  don't return  */
+	/* if they are equal because there might be more segments to */
+	/* compare */
+	rc = g_strcmp0(one, two);
+	if (rc) return (rc < 1 ? -1 : 1);
+
+	/* restore character that was replaced by null above */
+	*str1 = oldch1;
+	one = str1;
+	*str2 = oldch2;
+	two = str2;
+	}
+
+	/* this catches the case where all numeric and alpha segments have */
+	/* compared identically but the segment sepparating characters were */
+	/* different */
+	if ((!*one) && (!*two)) return 0;
+
+	/* whichever version still has characters left over wins */
+	if (!*one) return -1; else return 1;
+}
+
+/**
+ * as_utils_vercmp_complex:
+ * @version_a: the release version, e.g. 1.2.3
+ * @version_b: the release version, e.g. 1.2.3.1
+ * @flags: some #AsVersionCompareFlag
+ *
+ * Compares version numbers for sorting.
+ *
+ * Returns: -1 if a < b, +1 if a > b, 0 if they are equal, and %G_MAXINT on error
+ *
+ * Since: 0.7.15
+ */
+gint
+as_utils_vercmp_complex (const gchar *version_a,
+			 const gchar *version_b,
+			 AsVersionCompareFlag flags)
+{
+	/* sanity check */
+	if (version_a == NULL || version_b == NULL)
+		return G_MAXINT;
+
+	/* optimisation */
+	if (g_strcmp0 (version_a, version_b) == 0)
+		return 0;
+
+	/* split into sections, and try to parse */
+	if (flags & AS_VERSION_COMPARE_FLAG_USE_HEURISTICS) {
+		g_autofree gchar *str_a = as_utils_version_reparse (version_a);
+		g_autofree gchar *str_b = as_utils_version_reparse (version_b);
+		return as_utils_vercmp_rpm (str_a, str_b);
+	} else {
+		return as_utils_vercmp_rpm (version_a, version_b);
+	}
+}
+
+/**
  * as_utils_vercmp:
  * @version_a: the release version, e.g. 1.2.3
  * @version_b: the release version, e.g. 1.2.3.1
@@ -1476,8 +1679,8 @@
 gint
 as_utils_vercmp (const gchar *version_a, const gchar *version_b)
 {
-	return as_utils_vercmp_full (version_a, version_b,
-				     AS_VERSION_COMPARE_FLAG_USE_HEURISTICS);
+	return as_utils_vercmp_complex (version_a, version_b,
+					AS_VERSION_COMPARE_FLAG_USE_HEURISTICS);
 }
 
 /**
diff -Naur a/appstream-glib/libappstream-glib/as-utils.h b/appstream-glib/libappstream-glib/as-utils.h
--- a/appstream-glib/libappstream-glib/as-utils.h	2018-11-13 06:28:45.000000000 +0100
+++ b/appstream-glib/libappstream-glib/as-utils.h	2018-11-13 08:39:21.000000000 +0100
@@ -163,6 +163,12 @@
 gint		 as_utils_vercmp_full		(const gchar	*version_a,
 						 const gchar	*version_b,
 						 AsVersionCompareFlag flags);
+gchar		*as_utils_version_reparse	(const gchar	*version);
+gint		 as_utils_vercmp_rpm		(const gchar	*version_a,
+						 const gchar	*version_b);
+gint		 as_utils_vercmp_complex	(const gchar	*version_a,
+						 const gchar	*version_b,
+						 AsVersionCompareFlag flags);
 gint		 as_utils_vercmp		(const gchar	*version_a,
 						 const gchar	*version_b);
 gboolean	 as_utils_guid_is_valid		(const gchar	*guid);

This patch deprecates the following functions:

as_utils_vercmp_full
as_utils_version_parse

If you want, I can just insert the code from as_utils_vercmp_complex and as_utils_version_reparse into them.
I also prepared a simple test: org.freedesktop.appstream-test.yaml
app-id: org.freedesktop.appstream-test
runtime: org.freedesktop.Platform
runtime-version: '18.08'
sdk: org.freedesktop.Sdk
command: appstream-test
modules:
  - name: libappstream-glib
    buildsystem: meson
    config-opts:
      - -Dfonts=false
      - -Ddep11=false
      - -Drpm=false
      - -Dstemmer=false
    sources:
      - type: git
        url: https://github.com/scx/appstream-glib.git
        branch: master
        commit: 2ff970eb3cc748da336695f941356b74da16c55f
    post-install:
      - meson test
    cleanup:
      - /share/installed-tests
  - name: appstream-test
    buildsystem: simple
    sources:
      - type: script
        commands:
          - appstream-util --version
          - appstream-util vercmp 'Build 9half' 'Build 10'
          - appstream-util vercmp 'Build 9.5' 'Build 10'
          - appstream-util vercmp 'Build 9+' 'Build 10'
          - appstream-util vercmp 'Build 9a' 'Build 10'
          - appstream-util vercmp 'Build 9' 'Build 10'
          - appstream-util vercmp '9half' '10'
          - appstream-util vercmp '9.5' '10'
          - appstream-util vercmp '9+' '10'
          - appstream-util vercmp '9a' '10'
          - appstream-util vercmp '9' '10'
          - appstream-util vercmp '1.2.3' '1.2.3'
          - appstream-util vercmp '001.002.003' '001.002.003'
          - appstream-util vercmp '1.2.3' '0x1020003'
          - appstream-util vercmp '0x10203' '0x10203'
          - appstream-util vercmp '1.2.3' '1.2.4'
          - appstream-util vercmp '001.002.000' '001.002.009'
          - appstream-util vercmp '1.2.3' '1.2.2'
          - appstream-util vercmp '001.002.009' '001.002.000'
          - appstream-util vercmp '1.2.3' '1.2.3.1'
          - appstream-util vercmp '1.2.3.1' '1.2.4'
          - appstream-util vercmp '1.2.3a' '1.2.3a'
          - appstream-util vercmp '1.2.3a' '1.2.3b'
          - appstream-util vercmp '1.2.3b' '1.2.3a'
          - appstream-util vercmp '1.2.3' '1.2.3a'
          - appstream-util vercmp '1.2.3a' '1.2.3'
          - appstream-util vercmp 'alpha' 'alpha'
          - appstream-util vercmp 'alpha' 'beta'
          - appstream-util vercmp 'beta' 'alpha'
          - appstream-util vercmp '1.2a.3' '1.2a.3'
          - appstream-util vercmp '1.2a.3' '1.2b.3'
          - appstream-util vercmp '1.2b.3' '1.2a.3'
          - appstream-util vercmp '1.2.3~rc1' '1.2.3~rc1'
          - appstream-util vercmp '1.2.3~rc1' '1.2.3'
          - appstream-util vercmp '1.2.3' '1.2.3~rc1'
          - appstream-util vercmp '1.2.3~rc2' '1.2.3~rc1'
        dest-filename: appstream-test
    build-commands:
      - install -p -D -m 0755 'appstream-test' -t '/app/bin/'

Build command:
mkdir -p build && flatpak-builder 'build' 'org.freedesktop.appstream-test.yaml' --force-clean --install-deps-from='flathub'

Run command:
flatpak-builder --run 'build' 'org.freedesktop.appstream-test.yaml' 'appstream-test' 2>/dev/null

Results:
Version:	0.7.14
Build 9half < Build 10
Build 9.5 < Build 10
Build 9+ < Build 10
Build 9a < Build 10
Build 9 < Build 10
9half < 10
9.5 < 10
9+ < 10
9a < 10
9 < 10
1.2.3 = 1.2.3
001.002.003 = 001.002.003
1.2.3 = 0x1020003
0x10203 = 0x10203
1.2.3 < 1.2.4
001.002.000 < 001.002.009
1.2.3 > 1.2.2
001.002.009 > 001.002.000
1.2.3 < 1.2.3.1
1.2.3.1 < 1.2.4
1.2.3a = 1.2.3a
1.2.3a < 1.2.3b
1.2.3b > 1.2.3a
1.2.3 < 1.2.3a
1.2.3a > 1.2.3
alpha = alpha
alpha < beta
beta > alpha
1.2a.3 = 1.2a.3
1.2a.3 < 1.2b.3
1.2b.3 > 1.2a.3
1.2.3~rc1 = 1.2.3~rc1
1.2.3~rc1 < 1.2.3
1.2.3 > 1.2.3~rc1
1.2.3~rc2 > 1.2.3~rc1

See also: #270 (comment)","This is pretty much exactly the code libappstream uses


Current algorithm used in AppStream-Glib is simply not compatible

These are not contradictory statements: libappstream (https://github.com/ximion/appstream), the reference implementation of AppStream, is not the same codebase as appstream-glib (this repository).",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,272,2018-11-13T08:50:55Z,2019-02-06T12:17:24Z,2019-02-06T12:17:25Z,CLOSED,False,229,46,3,https://github.com/scx,Rewrite the version comparison algorithm,6,[],https://github.com/hughsie/appstream-glib/pull/272,https://github.com/scx,6,https://github.com/hughsie/appstream-glib/pull/272#issuecomment-439962127,"Proposed patch: libappstream-glib-rpmvercmp.patch
diff -Naur a/appstream-glib/libappstream-glib/as-utils.c b/appstream-glib/libappstream-glib/as-utils.c
--- a/appstream-glib/libappstream-glib/as-utils.c	2018-11-13 06:28:45.000000000 +0100
+++ b/appstream-glib/libappstream-glib/as-utils.c	2018-11-13 08:55:25.000000000 +0100
@@ -1463,6 +1463,209 @@
 }
 
 /**
+ * as_utils_version_reparse:
+ * @version: A version number
+ *
+ * Returns a dotted decimal version string from a version string. The supported
+ * formats are:
+ *
+ * - Dotted decimal, e.g. ""1.2.3""
+ * - Base 16, a hex number *with* a 0x prefix, e.g. ""0x10203""
+ *
+ * Anything with a '.' or that doesn't match 0x[a-f,0-9] is considered
+ * a string and returned without modification.
+ *
+ * Returns: A version number, e.g. ""1.0.3""
+ *
+ * Since: 0.7.15
+ */
+gchar *
+as_utils_version_reparse (const gchar *version)
+{
+	const gchar *version_noprefix = version;
+	gchar *endptr = NULL;
+	guint64 tmp;
+	guint base;
+
+	/* already dotted decimal */
+	if (g_strstr_len (version, -1, ""."") != NULL)
+		return g_strdup (version);
+
+	/* convert 0x prefixed strings to dotted decimal */
+	if (g_str_has_prefix (version, ""0x"")) {
+		version_noprefix += 2;
+		base = 16;
+	} else {
+		/* just return the string */
+		return g_strdup (version);
+	}
+
+	/* convert */
+	tmp = g_ascii_strtoull (version_noprefix, &endptr, base);
+	if (endptr != NULL && endptr[0] != '\0')
+		return g_strdup (version);
+	if (tmp == 0)
+		return g_strdup (version);
+	return as_utils_version_from_uint32 ((guint32) tmp, AS_VERSION_PARSE_FLAG_USE_TRIPLET);
+}
+
+// Based on: https://github.com/rpm-software-management/rpm/blob/ca8ff08e4f61f05c743797ea4afbb9bf0bce3064/lib/rpmvercmp.c#L12-L122
+/**
+ * as_utils_vercmp_rpm:
+ * @version_a: the release version, e.g. 1.2.3
+ * @version_b: the release version, e.g. 1.2.3.1
+ *
+ * Compares version numbers for sorting.
+ *
+ * Returns: -1 if a < b, +1 if a > b, 0 if they are equal
+ *
+ * Since: 0.7.15
+ */
+gint
+as_utils_vercmp_rpm (const gchar *version_a, const gchar *version_b)
+{
+	/* easy comparison to see if versions are identical */
+	if (g_strcmp0(version_a, version_b) == 0) return 0;
+
+	gchar oldch1, oldch2;
+	gchar abuf[strlen(version_a)+1], bbuf[strlen(version_b)+1];
+	gchar *str1 = abuf, *str2 = bbuf;
+	gchar * one, * two;
+	gint rc;
+	gint isnum;
+
+	g_strlcpy(str1, version_a, sizeof(abuf));
+	g_strlcpy(str2, version_b, sizeof(bbuf));
+
+	one = str1;
+	two = str2;
+
+	/* loop through each version segment of str1 and str2 and compare them */
+	while (*one || *two) {
+	while (*one && !g_ascii_isalnum(*one) && *one != '~') one++;
+	while (*two && !g_ascii_isalnum(*two) && *two != '~') two++;
+
+	/* handle the tilde separator, it sorts before everything else */
+	if (*one == '~' || *two == '~') {
+		if (*one != '~') return 1;
+		if (*two != '~') return -1;
+		one++;
+		two++;
+		continue;
+	}
+
+	/* If we ran to the end of either, we are finished with the loop */
+	if (!(*one && *two)) break;
+
+	str1 = one;
+	str2 = two;
+
+	/* grab first completely alpha or completely numeric segment */
+	/* leave one and two pointing to the start of the alpha or numeric */
+	/* segment and walk str1 and str2 to end of segment */
+	if (g_ascii_isdigit(*str1)) {
+		while (*str1 && g_ascii_isdigit(*str1)) str1++;
+		while (*str2 && g_ascii_isdigit(*str2)) str2++;
+		isnum = 1;
+	} else {
+		while (*str1 && g_ascii_isalpha(*str1)) str1++;
+		while (*str2 && g_ascii_isalpha(*str2)) str2++;
+		isnum = 0;
+	}
+
+	/* save character at the end of the alpha or numeric segment */
+	/* so that they can be restored after the comparison */
+	oldch1 = *str1;
+	*str1 = '\0';
+	oldch2 = *str2;
+	*str2 = '\0';
+
+	/* this cannot happen, as we previously tested to make sure that */
+	/* the first string has a non-null segment */
+	if (one == str1) return -1;	/* arbitrary */
+
+	/* take care of the case where the two version segments are */
+	/* different types: one numeric, the other alpha (i.e. empty) */
+	/* numeric segments are always newer than alpha segments */
+	/* XXX See patch #60884 (and details) from bugzilla #50977. */
+	if (two == str2) return (isnum ? 1 : -1);
+
+	if (isnum) {
+		gsize onelen, twolen;
+		/* this used to be done by converting the digit segments */
+		/* to ints using atoi() - it's changed because long  */
+		/* digit segments can overflow an int - this should fix that. */
+
+		/* throw away any leading zeros - it's a number, right? */
+		while (*one == '0') one++;
+		while (*two == '0') two++;
+
+		/* whichever number has more digits wins */
+		onelen = strlen(one);
+		twolen = strlen(two);
+		if (onelen > twolen) return 1;
+		if (twolen > onelen) return -1;
+	}
+
+	/* strcmp will return which one is greater - even if the two */
+	/* segments are alpha or if they are numeric.  don't return  */
+	/* if they are equal because there might be more segments to */
+	/* compare */
+	rc = g_strcmp0(one, two);
+	if (rc) return (rc < 1 ? -1 : 1);
+
+	/* restore character that was replaced by null above */
+	*str1 = oldch1;
+	one = str1;
+	*str2 = oldch2;
+	two = str2;
+	}
+
+	/* this catches the case where all numeric and alpha segments have */
+	/* compared identically but the segment sepparating characters were */
+	/* different */
+	if ((!*one) && (!*two)) return 0;
+
+	/* whichever version still has characters left over wins */
+	if (!*one) return -1; else return 1;
+}
+
+/**
+ * as_utils_vercmp_complex:
+ * @version_a: the release version, e.g. 1.2.3
+ * @version_b: the release version, e.g. 1.2.3.1
+ * @flags: some #AsVersionCompareFlag
+ *
+ * Compares version numbers for sorting.
+ *
+ * Returns: -1 if a < b, +1 if a > b, 0 if they are equal, and %G_MAXINT on error
+ *
+ * Since: 0.7.15
+ */
+gint
+as_utils_vercmp_complex (const gchar *version_a,
+			 const gchar *version_b,
+			 AsVersionCompareFlag flags)
+{
+	/* sanity check */
+	if (version_a == NULL || version_b == NULL)
+		return G_MAXINT;
+
+	/* optimisation */
+	if (g_strcmp0 (version_a, version_b) == 0)
+		return 0;
+
+	/* split into sections, and try to parse */
+	if (flags & AS_VERSION_COMPARE_FLAG_USE_HEURISTICS) {
+		g_autofree gchar *str_a = as_utils_version_reparse (version_a);
+		g_autofree gchar *str_b = as_utils_version_reparse (version_b);
+		return as_utils_vercmp_rpm (str_a, str_b);
+	} else {
+		return as_utils_vercmp_rpm (version_a, version_b);
+	}
+}
+
+/**
  * as_utils_vercmp:
  * @version_a: the release version, e.g. 1.2.3
  * @version_b: the release version, e.g. 1.2.3.1
@@ -1476,8 +1679,8 @@
 gint
 as_utils_vercmp (const gchar *version_a, const gchar *version_b)
 {
-	return as_utils_vercmp_full (version_a, version_b,
-				     AS_VERSION_COMPARE_FLAG_USE_HEURISTICS);
+	return as_utils_vercmp_complex (version_a, version_b,
+					AS_VERSION_COMPARE_FLAG_USE_HEURISTICS);
 }
 
 /**
diff -Naur a/appstream-glib/libappstream-glib/as-utils.h b/appstream-glib/libappstream-glib/as-utils.h
--- a/appstream-glib/libappstream-glib/as-utils.h	2018-11-13 06:28:45.000000000 +0100
+++ b/appstream-glib/libappstream-glib/as-utils.h	2018-11-13 08:39:21.000000000 +0100
@@ -163,6 +163,12 @@
 gint		 as_utils_vercmp_full		(const gchar	*version_a,
 						 const gchar	*version_b,
 						 AsVersionCompareFlag flags);
+gchar		*as_utils_version_reparse	(const gchar	*version);
+gint		 as_utils_vercmp_rpm		(const gchar	*version_a,
+						 const gchar	*version_b);
+gint		 as_utils_vercmp_complex	(const gchar	*version_a,
+						 const gchar	*version_b,
+						 AsVersionCompareFlag flags);
 gint		 as_utils_vercmp		(const gchar	*version_a,
 						 const gchar	*version_b);
 gboolean	 as_utils_guid_is_valid		(const gchar	*guid);

This patch deprecates the following functions:

as_utils_vercmp_full
as_utils_version_parse

If you want, I can just insert the code from as_utils_vercmp_complex and as_utils_version_reparse into them.
I also prepared a simple test: org.freedesktop.appstream-test.yaml
app-id: org.freedesktop.appstream-test
runtime: org.freedesktop.Platform
runtime-version: '18.08'
sdk: org.freedesktop.Sdk
command: appstream-test
modules:
  - name: libappstream-glib
    buildsystem: meson
    config-opts:
      - -Dfonts=false
      - -Ddep11=false
      - -Drpm=false
      - -Dstemmer=false
    sources:
      - type: git
        url: https://github.com/scx/appstream-glib.git
        branch: master
        commit: 2ff970eb3cc748da336695f941356b74da16c55f
    post-install:
      - meson test
    cleanup:
      - /share/installed-tests
  - name: appstream-test
    buildsystem: simple
    sources:
      - type: script
        commands:
          - appstream-util --version
          - appstream-util vercmp 'Build 9half' 'Build 10'
          - appstream-util vercmp 'Build 9.5' 'Build 10'
          - appstream-util vercmp 'Build 9+' 'Build 10'
          - appstream-util vercmp 'Build 9a' 'Build 10'
          - appstream-util vercmp 'Build 9' 'Build 10'
          - appstream-util vercmp '9half' '10'
          - appstream-util vercmp '9.5' '10'
          - appstream-util vercmp '9+' '10'
          - appstream-util vercmp '9a' '10'
          - appstream-util vercmp '9' '10'
          - appstream-util vercmp '1.2.3' '1.2.3'
          - appstream-util vercmp '001.002.003' '001.002.003'
          - appstream-util vercmp '1.2.3' '0x1020003'
          - appstream-util vercmp '0x10203' '0x10203'
          - appstream-util vercmp '1.2.3' '1.2.4'
          - appstream-util vercmp '001.002.000' '001.002.009'
          - appstream-util vercmp '1.2.3' '1.2.2'
          - appstream-util vercmp '001.002.009' '001.002.000'
          - appstream-util vercmp '1.2.3' '1.2.3.1'
          - appstream-util vercmp '1.2.3.1' '1.2.4'
          - appstream-util vercmp '1.2.3a' '1.2.3a'
          - appstream-util vercmp '1.2.3a' '1.2.3b'
          - appstream-util vercmp '1.2.3b' '1.2.3a'
          - appstream-util vercmp '1.2.3' '1.2.3a'
          - appstream-util vercmp '1.2.3a' '1.2.3'
          - appstream-util vercmp 'alpha' 'alpha'
          - appstream-util vercmp 'alpha' 'beta'
          - appstream-util vercmp 'beta' 'alpha'
          - appstream-util vercmp '1.2a.3' '1.2a.3'
          - appstream-util vercmp '1.2a.3' '1.2b.3'
          - appstream-util vercmp '1.2b.3' '1.2a.3'
          - appstream-util vercmp '1.2.3~rc1' '1.2.3~rc1'
          - appstream-util vercmp '1.2.3~rc1' '1.2.3'
          - appstream-util vercmp '1.2.3' '1.2.3~rc1'
          - appstream-util vercmp '1.2.3~rc2' '1.2.3~rc1'
        dest-filename: appstream-test
    build-commands:
      - install -p -D -m 0755 'appstream-test' -t '/app/bin/'

Build command:
mkdir -p build && flatpak-builder 'build' 'org.freedesktop.appstream-test.yaml' --force-clean --install-deps-from='flathub'

Run command:
flatpak-builder --run 'build' 'org.freedesktop.appstream-test.yaml' 'appstream-test' 2>/dev/null

Results:
Version:	0.7.14
Build 9half < Build 10
Build 9.5 < Build 10
Build 9+ < Build 10
Build 9a < Build 10
Build 9 < Build 10
9half < 10
9.5 < 10
9+ < 10
9a < 10
9 < 10
1.2.3 = 1.2.3
001.002.003 = 001.002.003
1.2.3 = 0x1020003
0x10203 = 0x10203
1.2.3 < 1.2.4
001.002.000 < 001.002.009
1.2.3 > 1.2.2
001.002.009 > 001.002.000
1.2.3 < 1.2.3.1
1.2.3.1 < 1.2.4
1.2.3a = 1.2.3a
1.2.3a < 1.2.3b
1.2.3b > 1.2.3a
1.2.3 < 1.2.3a
1.2.3a > 1.2.3
alpha = alpha
alpha < beta
beta > alpha
1.2a.3 = 1.2a.3
1.2a.3 < 1.2b.3
1.2b.3 > 1.2a.3
1.2.3~rc1 = 1.2.3~rc1
1.2.3~rc1 < 1.2.3
1.2.3 > 1.2.3~rc1
1.2.3~rc2 > 1.2.3~rc1

See also: #270 (comment)","@smcv
Well, it seems that my version is almost identical to the reference implementation.
https://github.com/scx/appstream-glib/blob/83ffcd5cca1f0744cad87ae252fe8556bbcd4d7f/libappstream-glib/as-utils.c#L1437-L1544
https://github.com/ximion/appstream/blob/d10f947e4590b0f04fc6bd74acf04b7987057e36/src/as-utils.c#L1013-L1125
I still don't understand why AppStream-Glib is trying to create its own standard, incompatible with RPM and DEB.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,272,2018-11-13T08:50:55Z,2019-02-06T12:17:24Z,2019-02-06T12:17:25Z,CLOSED,False,229,46,3,https://github.com/scx,Rewrite the version comparison algorithm,6,[],https://github.com/hughsie/appstream-glib/pull/272,https://github.com/hughsie,7,https://github.com/hughsie/appstream-glib/pull/272#issuecomment-440637455,"Proposed patch: libappstream-glib-rpmvercmp.patch
diff -Naur a/appstream-glib/libappstream-glib/as-utils.c b/appstream-glib/libappstream-glib/as-utils.c
--- a/appstream-glib/libappstream-glib/as-utils.c	2018-11-13 06:28:45.000000000 +0100
+++ b/appstream-glib/libappstream-glib/as-utils.c	2018-11-13 08:55:25.000000000 +0100
@@ -1463,6 +1463,209 @@
 }
 
 /**
+ * as_utils_version_reparse:
+ * @version: A version number
+ *
+ * Returns a dotted decimal version string from a version string. The supported
+ * formats are:
+ *
+ * - Dotted decimal, e.g. ""1.2.3""
+ * - Base 16, a hex number *with* a 0x prefix, e.g. ""0x10203""
+ *
+ * Anything with a '.' or that doesn't match 0x[a-f,0-9] is considered
+ * a string and returned without modification.
+ *
+ * Returns: A version number, e.g. ""1.0.3""
+ *
+ * Since: 0.7.15
+ */
+gchar *
+as_utils_version_reparse (const gchar *version)
+{
+	const gchar *version_noprefix = version;
+	gchar *endptr = NULL;
+	guint64 tmp;
+	guint base;
+
+	/* already dotted decimal */
+	if (g_strstr_len (version, -1, ""."") != NULL)
+		return g_strdup (version);
+
+	/* convert 0x prefixed strings to dotted decimal */
+	if (g_str_has_prefix (version, ""0x"")) {
+		version_noprefix += 2;
+		base = 16;
+	} else {
+		/* just return the string */
+		return g_strdup (version);
+	}
+
+	/* convert */
+	tmp = g_ascii_strtoull (version_noprefix, &endptr, base);
+	if (endptr != NULL && endptr[0] != '\0')
+		return g_strdup (version);
+	if (tmp == 0)
+		return g_strdup (version);
+	return as_utils_version_from_uint32 ((guint32) tmp, AS_VERSION_PARSE_FLAG_USE_TRIPLET);
+}
+
+// Based on: https://github.com/rpm-software-management/rpm/blob/ca8ff08e4f61f05c743797ea4afbb9bf0bce3064/lib/rpmvercmp.c#L12-L122
+/**
+ * as_utils_vercmp_rpm:
+ * @version_a: the release version, e.g. 1.2.3
+ * @version_b: the release version, e.g. 1.2.3.1
+ *
+ * Compares version numbers for sorting.
+ *
+ * Returns: -1 if a < b, +1 if a > b, 0 if they are equal
+ *
+ * Since: 0.7.15
+ */
+gint
+as_utils_vercmp_rpm (const gchar *version_a, const gchar *version_b)
+{
+	/* easy comparison to see if versions are identical */
+	if (g_strcmp0(version_a, version_b) == 0) return 0;
+
+	gchar oldch1, oldch2;
+	gchar abuf[strlen(version_a)+1], bbuf[strlen(version_b)+1];
+	gchar *str1 = abuf, *str2 = bbuf;
+	gchar * one, * two;
+	gint rc;
+	gint isnum;
+
+	g_strlcpy(str1, version_a, sizeof(abuf));
+	g_strlcpy(str2, version_b, sizeof(bbuf));
+
+	one = str1;
+	two = str2;
+
+	/* loop through each version segment of str1 and str2 and compare them */
+	while (*one || *two) {
+	while (*one && !g_ascii_isalnum(*one) && *one != '~') one++;
+	while (*two && !g_ascii_isalnum(*two) && *two != '~') two++;
+
+	/* handle the tilde separator, it sorts before everything else */
+	if (*one == '~' || *two == '~') {
+		if (*one != '~') return 1;
+		if (*two != '~') return -1;
+		one++;
+		two++;
+		continue;
+	}
+
+	/* If we ran to the end of either, we are finished with the loop */
+	if (!(*one && *two)) break;
+
+	str1 = one;
+	str2 = two;
+
+	/* grab first completely alpha or completely numeric segment */
+	/* leave one and two pointing to the start of the alpha or numeric */
+	/* segment and walk str1 and str2 to end of segment */
+	if (g_ascii_isdigit(*str1)) {
+		while (*str1 && g_ascii_isdigit(*str1)) str1++;
+		while (*str2 && g_ascii_isdigit(*str2)) str2++;
+		isnum = 1;
+	} else {
+		while (*str1 && g_ascii_isalpha(*str1)) str1++;
+		while (*str2 && g_ascii_isalpha(*str2)) str2++;
+		isnum = 0;
+	}
+
+	/* save character at the end of the alpha or numeric segment */
+	/* so that they can be restored after the comparison */
+	oldch1 = *str1;
+	*str1 = '\0';
+	oldch2 = *str2;
+	*str2 = '\0';
+
+	/* this cannot happen, as we previously tested to make sure that */
+	/* the first string has a non-null segment */
+	if (one == str1) return -1;	/* arbitrary */
+
+	/* take care of the case where the two version segments are */
+	/* different types: one numeric, the other alpha (i.e. empty) */
+	/* numeric segments are always newer than alpha segments */
+	/* XXX See patch #60884 (and details) from bugzilla #50977. */
+	if (two == str2) return (isnum ? 1 : -1);
+
+	if (isnum) {
+		gsize onelen, twolen;
+		/* this used to be done by converting the digit segments */
+		/* to ints using atoi() - it's changed because long  */
+		/* digit segments can overflow an int - this should fix that. */
+
+		/* throw away any leading zeros - it's a number, right? */
+		while (*one == '0') one++;
+		while (*two == '0') two++;
+
+		/* whichever number has more digits wins */
+		onelen = strlen(one);
+		twolen = strlen(two);
+		if (onelen > twolen) return 1;
+		if (twolen > onelen) return -1;
+	}
+
+	/* strcmp will return which one is greater - even if the two */
+	/* segments are alpha or if they are numeric.  don't return  */
+	/* if they are equal because there might be more segments to */
+	/* compare */
+	rc = g_strcmp0(one, two);
+	if (rc) return (rc < 1 ? -1 : 1);
+
+	/* restore character that was replaced by null above */
+	*str1 = oldch1;
+	one = str1;
+	*str2 = oldch2;
+	two = str2;
+	}
+
+	/* this catches the case where all numeric and alpha segments have */
+	/* compared identically but the segment sepparating characters were */
+	/* different */
+	if ((!*one) && (!*two)) return 0;
+
+	/* whichever version still has characters left over wins */
+	if (!*one) return -1; else return 1;
+}
+
+/**
+ * as_utils_vercmp_complex:
+ * @version_a: the release version, e.g. 1.2.3
+ * @version_b: the release version, e.g. 1.2.3.1
+ * @flags: some #AsVersionCompareFlag
+ *
+ * Compares version numbers for sorting.
+ *
+ * Returns: -1 if a < b, +1 if a > b, 0 if they are equal, and %G_MAXINT on error
+ *
+ * Since: 0.7.15
+ */
+gint
+as_utils_vercmp_complex (const gchar *version_a,
+			 const gchar *version_b,
+			 AsVersionCompareFlag flags)
+{
+	/* sanity check */
+	if (version_a == NULL || version_b == NULL)
+		return G_MAXINT;
+
+	/* optimisation */
+	if (g_strcmp0 (version_a, version_b) == 0)
+		return 0;
+
+	/* split into sections, and try to parse */
+	if (flags & AS_VERSION_COMPARE_FLAG_USE_HEURISTICS) {
+		g_autofree gchar *str_a = as_utils_version_reparse (version_a);
+		g_autofree gchar *str_b = as_utils_version_reparse (version_b);
+		return as_utils_vercmp_rpm (str_a, str_b);
+	} else {
+		return as_utils_vercmp_rpm (version_a, version_b);
+	}
+}
+
+/**
  * as_utils_vercmp:
  * @version_a: the release version, e.g. 1.2.3
  * @version_b: the release version, e.g. 1.2.3.1
@@ -1476,8 +1679,8 @@
 gint
 as_utils_vercmp (const gchar *version_a, const gchar *version_b)
 {
-	return as_utils_vercmp_full (version_a, version_b,
-				     AS_VERSION_COMPARE_FLAG_USE_HEURISTICS);
+	return as_utils_vercmp_complex (version_a, version_b,
+					AS_VERSION_COMPARE_FLAG_USE_HEURISTICS);
 }
 
 /**
diff -Naur a/appstream-glib/libappstream-glib/as-utils.h b/appstream-glib/libappstream-glib/as-utils.h
--- a/appstream-glib/libappstream-glib/as-utils.h	2018-11-13 06:28:45.000000000 +0100
+++ b/appstream-glib/libappstream-glib/as-utils.h	2018-11-13 08:39:21.000000000 +0100
@@ -163,6 +163,12 @@
 gint		 as_utils_vercmp_full		(const gchar	*version_a,
 						 const gchar	*version_b,
 						 AsVersionCompareFlag flags);
+gchar		*as_utils_version_reparse	(const gchar	*version);
+gint		 as_utils_vercmp_rpm		(const gchar	*version_a,
+						 const gchar	*version_b);
+gint		 as_utils_vercmp_complex	(const gchar	*version_a,
+						 const gchar	*version_b,
+						 AsVersionCompareFlag flags);
 gint		 as_utils_vercmp		(const gchar	*version_a,
 						 const gchar	*version_b);
 gboolean	 as_utils_guid_is_valid		(const gchar	*guid);

This patch deprecates the following functions:

as_utils_vercmp_full
as_utils_version_parse

If you want, I can just insert the code from as_utils_vercmp_complex and as_utils_version_reparse into them.
I also prepared a simple test: org.freedesktop.appstream-test.yaml
app-id: org.freedesktop.appstream-test
runtime: org.freedesktop.Platform
runtime-version: '18.08'
sdk: org.freedesktop.Sdk
command: appstream-test
modules:
  - name: libappstream-glib
    buildsystem: meson
    config-opts:
      - -Dfonts=false
      - -Ddep11=false
      - -Drpm=false
      - -Dstemmer=false
    sources:
      - type: git
        url: https://github.com/scx/appstream-glib.git
        branch: master
        commit: 2ff970eb3cc748da336695f941356b74da16c55f
    post-install:
      - meson test
    cleanup:
      - /share/installed-tests
  - name: appstream-test
    buildsystem: simple
    sources:
      - type: script
        commands:
          - appstream-util --version
          - appstream-util vercmp 'Build 9half' 'Build 10'
          - appstream-util vercmp 'Build 9.5' 'Build 10'
          - appstream-util vercmp 'Build 9+' 'Build 10'
          - appstream-util vercmp 'Build 9a' 'Build 10'
          - appstream-util vercmp 'Build 9' 'Build 10'
          - appstream-util vercmp '9half' '10'
          - appstream-util vercmp '9.5' '10'
          - appstream-util vercmp '9+' '10'
          - appstream-util vercmp '9a' '10'
          - appstream-util vercmp '9' '10'
          - appstream-util vercmp '1.2.3' '1.2.3'
          - appstream-util vercmp '001.002.003' '001.002.003'
          - appstream-util vercmp '1.2.3' '0x1020003'
          - appstream-util vercmp '0x10203' '0x10203'
          - appstream-util vercmp '1.2.3' '1.2.4'
          - appstream-util vercmp '001.002.000' '001.002.009'
          - appstream-util vercmp '1.2.3' '1.2.2'
          - appstream-util vercmp '001.002.009' '001.002.000'
          - appstream-util vercmp '1.2.3' '1.2.3.1'
          - appstream-util vercmp '1.2.3.1' '1.2.4'
          - appstream-util vercmp '1.2.3a' '1.2.3a'
          - appstream-util vercmp '1.2.3a' '1.2.3b'
          - appstream-util vercmp '1.2.3b' '1.2.3a'
          - appstream-util vercmp '1.2.3' '1.2.3a'
          - appstream-util vercmp '1.2.3a' '1.2.3'
          - appstream-util vercmp 'alpha' 'alpha'
          - appstream-util vercmp 'alpha' 'beta'
          - appstream-util vercmp 'beta' 'alpha'
          - appstream-util vercmp '1.2a.3' '1.2a.3'
          - appstream-util vercmp '1.2a.3' '1.2b.3'
          - appstream-util vercmp '1.2b.3' '1.2a.3'
          - appstream-util vercmp '1.2.3~rc1' '1.2.3~rc1'
          - appstream-util vercmp '1.2.3~rc1' '1.2.3'
          - appstream-util vercmp '1.2.3' '1.2.3~rc1'
          - appstream-util vercmp '1.2.3~rc2' '1.2.3~rc1'
        dest-filename: appstream-test
    build-commands:
      - install -p -D -m 0755 'appstream-test' -t '/app/bin/'

Build command:
mkdir -p build && flatpak-builder 'build' 'org.freedesktop.appstream-test.yaml' --force-clean --install-deps-from='flathub'

Run command:
flatpak-builder --run 'build' 'org.freedesktop.appstream-test.yaml' 'appstream-test' 2>/dev/null

Results:
Version:	0.7.14
Build 9half < Build 10
Build 9.5 < Build 10
Build 9+ < Build 10
Build 9a < Build 10
Build 9 < Build 10
9half < 10
9.5 < 10
9+ < 10
9a < 10
9 < 10
1.2.3 = 1.2.3
001.002.003 = 001.002.003
1.2.3 = 0x1020003
0x10203 = 0x10203
1.2.3 < 1.2.4
001.002.000 < 001.002.009
1.2.3 > 1.2.2
001.002.009 > 001.002.000
1.2.3 < 1.2.3.1
1.2.3.1 < 1.2.4
1.2.3a = 1.2.3a
1.2.3a < 1.2.3b
1.2.3b > 1.2.3a
1.2.3 < 1.2.3a
1.2.3a > 1.2.3
alpha = alpha
alpha < beta
beta > alpha
1.2a.3 = 1.2a.3
1.2a.3 < 1.2b.3
1.2b.3 > 1.2a.3
1.2.3~rc1 = 1.2.3~rc1
1.2.3~rc1 < 1.2.3
1.2.3 > 1.2.3~rc1
1.2.3~rc2 > 1.2.3~rc1

See also: #270 (comment)","I still don't understand why AppStream-Glib is trying to create its own standard

I don't think we can link to librpm on all distros. Can we just copy-and-paste the RPM implementation? Is the licence LGPLv2+ compatible?",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,272,2018-11-13T08:50:55Z,2019-02-06T12:17:24Z,2019-02-06T12:17:25Z,CLOSED,False,229,46,3,https://github.com/scx,Rewrite the version comparison algorithm,6,[],https://github.com/hughsie/appstream-glib/pull/272,https://github.com/scx,8,https://github.com/hughsie/appstream-glib/pull/272#issuecomment-440648700,"Proposed patch: libappstream-glib-rpmvercmp.patch
diff -Naur a/appstream-glib/libappstream-glib/as-utils.c b/appstream-glib/libappstream-glib/as-utils.c
--- a/appstream-glib/libappstream-glib/as-utils.c	2018-11-13 06:28:45.000000000 +0100
+++ b/appstream-glib/libappstream-glib/as-utils.c	2018-11-13 08:55:25.000000000 +0100
@@ -1463,6 +1463,209 @@
 }
 
 /**
+ * as_utils_version_reparse:
+ * @version: A version number
+ *
+ * Returns a dotted decimal version string from a version string. The supported
+ * formats are:
+ *
+ * - Dotted decimal, e.g. ""1.2.3""
+ * - Base 16, a hex number *with* a 0x prefix, e.g. ""0x10203""
+ *
+ * Anything with a '.' or that doesn't match 0x[a-f,0-9] is considered
+ * a string and returned without modification.
+ *
+ * Returns: A version number, e.g. ""1.0.3""
+ *
+ * Since: 0.7.15
+ */
+gchar *
+as_utils_version_reparse (const gchar *version)
+{
+	const gchar *version_noprefix = version;
+	gchar *endptr = NULL;
+	guint64 tmp;
+	guint base;
+
+	/* already dotted decimal */
+	if (g_strstr_len (version, -1, ""."") != NULL)
+		return g_strdup (version);
+
+	/* convert 0x prefixed strings to dotted decimal */
+	if (g_str_has_prefix (version, ""0x"")) {
+		version_noprefix += 2;
+		base = 16;
+	} else {
+		/* just return the string */
+		return g_strdup (version);
+	}
+
+	/* convert */
+	tmp = g_ascii_strtoull (version_noprefix, &endptr, base);
+	if (endptr != NULL && endptr[0] != '\0')
+		return g_strdup (version);
+	if (tmp == 0)
+		return g_strdup (version);
+	return as_utils_version_from_uint32 ((guint32) tmp, AS_VERSION_PARSE_FLAG_USE_TRIPLET);
+}
+
+// Based on: https://github.com/rpm-software-management/rpm/blob/ca8ff08e4f61f05c743797ea4afbb9bf0bce3064/lib/rpmvercmp.c#L12-L122
+/**
+ * as_utils_vercmp_rpm:
+ * @version_a: the release version, e.g. 1.2.3
+ * @version_b: the release version, e.g. 1.2.3.1
+ *
+ * Compares version numbers for sorting.
+ *
+ * Returns: -1 if a < b, +1 if a > b, 0 if they are equal
+ *
+ * Since: 0.7.15
+ */
+gint
+as_utils_vercmp_rpm (const gchar *version_a, const gchar *version_b)
+{
+	/* easy comparison to see if versions are identical */
+	if (g_strcmp0(version_a, version_b) == 0) return 0;
+
+	gchar oldch1, oldch2;
+	gchar abuf[strlen(version_a)+1], bbuf[strlen(version_b)+1];
+	gchar *str1 = abuf, *str2 = bbuf;
+	gchar * one, * two;
+	gint rc;
+	gint isnum;
+
+	g_strlcpy(str1, version_a, sizeof(abuf));
+	g_strlcpy(str2, version_b, sizeof(bbuf));
+
+	one = str1;
+	two = str2;
+
+	/* loop through each version segment of str1 and str2 and compare them */
+	while (*one || *two) {
+	while (*one && !g_ascii_isalnum(*one) && *one != '~') one++;
+	while (*two && !g_ascii_isalnum(*two) && *two != '~') two++;
+
+	/* handle the tilde separator, it sorts before everything else */
+	if (*one == '~' || *two == '~') {
+		if (*one != '~') return 1;
+		if (*two != '~') return -1;
+		one++;
+		two++;
+		continue;
+	}
+
+	/* If we ran to the end of either, we are finished with the loop */
+	if (!(*one && *two)) break;
+
+	str1 = one;
+	str2 = two;
+
+	/* grab first completely alpha or completely numeric segment */
+	/* leave one and two pointing to the start of the alpha or numeric */
+	/* segment and walk str1 and str2 to end of segment */
+	if (g_ascii_isdigit(*str1)) {
+		while (*str1 && g_ascii_isdigit(*str1)) str1++;
+		while (*str2 && g_ascii_isdigit(*str2)) str2++;
+		isnum = 1;
+	} else {
+		while (*str1 && g_ascii_isalpha(*str1)) str1++;
+		while (*str2 && g_ascii_isalpha(*str2)) str2++;
+		isnum = 0;
+	}
+
+	/* save character at the end of the alpha or numeric segment */
+	/* so that they can be restored after the comparison */
+	oldch1 = *str1;
+	*str1 = '\0';
+	oldch2 = *str2;
+	*str2 = '\0';
+
+	/* this cannot happen, as we previously tested to make sure that */
+	/* the first string has a non-null segment */
+	if (one == str1) return -1;	/* arbitrary */
+
+	/* take care of the case where the two version segments are */
+	/* different types: one numeric, the other alpha (i.e. empty) */
+	/* numeric segments are always newer than alpha segments */
+	/* XXX See patch #60884 (and details) from bugzilla #50977. */
+	if (two == str2) return (isnum ? 1 : -1);
+
+	if (isnum) {
+		gsize onelen, twolen;
+		/* this used to be done by converting the digit segments */
+		/* to ints using atoi() - it's changed because long  */
+		/* digit segments can overflow an int - this should fix that. */
+
+		/* throw away any leading zeros - it's a number, right? */
+		while (*one == '0') one++;
+		while (*two == '0') two++;
+
+		/* whichever number has more digits wins */
+		onelen = strlen(one);
+		twolen = strlen(two);
+		if (onelen > twolen) return 1;
+		if (twolen > onelen) return -1;
+	}
+
+	/* strcmp will return which one is greater - even if the two */
+	/* segments are alpha or if they are numeric.  don't return  */
+	/* if they are equal because there might be more segments to */
+	/* compare */
+	rc = g_strcmp0(one, two);
+	if (rc) return (rc < 1 ? -1 : 1);
+
+	/* restore character that was replaced by null above */
+	*str1 = oldch1;
+	one = str1;
+	*str2 = oldch2;
+	two = str2;
+	}
+
+	/* this catches the case where all numeric and alpha segments have */
+	/* compared identically but the segment sepparating characters were */
+	/* different */
+	if ((!*one) && (!*two)) return 0;
+
+	/* whichever version still has characters left over wins */
+	if (!*one) return -1; else return 1;
+}
+
+/**
+ * as_utils_vercmp_complex:
+ * @version_a: the release version, e.g. 1.2.3
+ * @version_b: the release version, e.g. 1.2.3.1
+ * @flags: some #AsVersionCompareFlag
+ *
+ * Compares version numbers for sorting.
+ *
+ * Returns: -1 if a < b, +1 if a > b, 0 if they are equal, and %G_MAXINT on error
+ *
+ * Since: 0.7.15
+ */
+gint
+as_utils_vercmp_complex (const gchar *version_a,
+			 const gchar *version_b,
+			 AsVersionCompareFlag flags)
+{
+	/* sanity check */
+	if (version_a == NULL || version_b == NULL)
+		return G_MAXINT;
+
+	/* optimisation */
+	if (g_strcmp0 (version_a, version_b) == 0)
+		return 0;
+
+	/* split into sections, and try to parse */
+	if (flags & AS_VERSION_COMPARE_FLAG_USE_HEURISTICS) {
+		g_autofree gchar *str_a = as_utils_version_reparse (version_a);
+		g_autofree gchar *str_b = as_utils_version_reparse (version_b);
+		return as_utils_vercmp_rpm (str_a, str_b);
+	} else {
+		return as_utils_vercmp_rpm (version_a, version_b);
+	}
+}
+
+/**
  * as_utils_vercmp:
  * @version_a: the release version, e.g. 1.2.3
  * @version_b: the release version, e.g. 1.2.3.1
@@ -1476,8 +1679,8 @@
 gint
 as_utils_vercmp (const gchar *version_a, const gchar *version_b)
 {
-	return as_utils_vercmp_full (version_a, version_b,
-				     AS_VERSION_COMPARE_FLAG_USE_HEURISTICS);
+	return as_utils_vercmp_complex (version_a, version_b,
+					AS_VERSION_COMPARE_FLAG_USE_HEURISTICS);
 }
 
 /**
diff -Naur a/appstream-glib/libappstream-glib/as-utils.h b/appstream-glib/libappstream-glib/as-utils.h
--- a/appstream-glib/libappstream-glib/as-utils.h	2018-11-13 06:28:45.000000000 +0100
+++ b/appstream-glib/libappstream-glib/as-utils.h	2018-11-13 08:39:21.000000000 +0100
@@ -163,6 +163,12 @@
 gint		 as_utils_vercmp_full		(const gchar	*version_a,
 						 const gchar	*version_b,
 						 AsVersionCompareFlag flags);
+gchar		*as_utils_version_reparse	(const gchar	*version);
+gint		 as_utils_vercmp_rpm		(const gchar	*version_a,
+						 const gchar	*version_b);
+gint		 as_utils_vercmp_complex	(const gchar	*version_a,
+						 const gchar	*version_b,
+						 AsVersionCompareFlag flags);
 gint		 as_utils_vercmp		(const gchar	*version_a,
 						 const gchar	*version_b);
 gboolean	 as_utils_guid_is_valid		(const gchar	*guid);

This patch deprecates the following functions:

as_utils_vercmp_full
as_utils_version_parse

If you want, I can just insert the code from as_utils_vercmp_complex and as_utils_version_reparse into them.
I also prepared a simple test: org.freedesktop.appstream-test.yaml
app-id: org.freedesktop.appstream-test
runtime: org.freedesktop.Platform
runtime-version: '18.08'
sdk: org.freedesktop.Sdk
command: appstream-test
modules:
  - name: libappstream-glib
    buildsystem: meson
    config-opts:
      - -Dfonts=false
      - -Ddep11=false
      - -Drpm=false
      - -Dstemmer=false
    sources:
      - type: git
        url: https://github.com/scx/appstream-glib.git
        branch: master
        commit: 2ff970eb3cc748da336695f941356b74da16c55f
    post-install:
      - meson test
    cleanup:
      - /share/installed-tests
  - name: appstream-test
    buildsystem: simple
    sources:
      - type: script
        commands:
          - appstream-util --version
          - appstream-util vercmp 'Build 9half' 'Build 10'
          - appstream-util vercmp 'Build 9.5' 'Build 10'
          - appstream-util vercmp 'Build 9+' 'Build 10'
          - appstream-util vercmp 'Build 9a' 'Build 10'
          - appstream-util vercmp 'Build 9' 'Build 10'
          - appstream-util vercmp '9half' '10'
          - appstream-util vercmp '9.5' '10'
          - appstream-util vercmp '9+' '10'
          - appstream-util vercmp '9a' '10'
          - appstream-util vercmp '9' '10'
          - appstream-util vercmp '1.2.3' '1.2.3'
          - appstream-util vercmp '001.002.003' '001.002.003'
          - appstream-util vercmp '1.2.3' '0x1020003'
          - appstream-util vercmp '0x10203' '0x10203'
          - appstream-util vercmp '1.2.3' '1.2.4'
          - appstream-util vercmp '001.002.000' '001.002.009'
          - appstream-util vercmp '1.2.3' '1.2.2'
          - appstream-util vercmp '001.002.009' '001.002.000'
          - appstream-util vercmp '1.2.3' '1.2.3.1'
          - appstream-util vercmp '1.2.3.1' '1.2.4'
          - appstream-util vercmp '1.2.3a' '1.2.3a'
          - appstream-util vercmp '1.2.3a' '1.2.3b'
          - appstream-util vercmp '1.2.3b' '1.2.3a'
          - appstream-util vercmp '1.2.3' '1.2.3a'
          - appstream-util vercmp '1.2.3a' '1.2.3'
          - appstream-util vercmp 'alpha' 'alpha'
          - appstream-util vercmp 'alpha' 'beta'
          - appstream-util vercmp 'beta' 'alpha'
          - appstream-util vercmp '1.2a.3' '1.2a.3'
          - appstream-util vercmp '1.2a.3' '1.2b.3'
          - appstream-util vercmp '1.2b.3' '1.2a.3'
          - appstream-util vercmp '1.2.3~rc1' '1.2.3~rc1'
          - appstream-util vercmp '1.2.3~rc1' '1.2.3'
          - appstream-util vercmp '1.2.3' '1.2.3~rc1'
          - appstream-util vercmp '1.2.3~rc2' '1.2.3~rc1'
        dest-filename: appstream-test
    build-commands:
      - install -p -D -m 0755 'appstream-test' -t '/app/bin/'

Build command:
mkdir -p build && flatpak-builder 'build' 'org.freedesktop.appstream-test.yaml' --force-clean --install-deps-from='flathub'

Run command:
flatpak-builder --run 'build' 'org.freedesktop.appstream-test.yaml' 'appstream-test' 2>/dev/null

Results:
Version:	0.7.14
Build 9half < Build 10
Build 9.5 < Build 10
Build 9+ < Build 10
Build 9a < Build 10
Build 9 < Build 10
9half < 10
9.5 < 10
9+ < 10
9a < 10
9 < 10
1.2.3 = 1.2.3
001.002.003 = 001.002.003
1.2.3 = 0x1020003
0x10203 = 0x10203
1.2.3 < 1.2.4
001.002.000 < 001.002.009
1.2.3 > 1.2.2
001.002.009 > 001.002.000
1.2.3 < 1.2.3.1
1.2.3.1 < 1.2.4
1.2.3a = 1.2.3a
1.2.3a < 1.2.3b
1.2.3b > 1.2.3a
1.2.3 < 1.2.3a
1.2.3a > 1.2.3
alpha = alpha
alpha < beta
beta > alpha
1.2a.3 = 1.2a.3
1.2a.3 < 1.2b.3
1.2b.3 > 1.2a.3
1.2.3~rc1 = 1.2.3~rc1
1.2.3~rc1 < 1.2.3
1.2.3 > 1.2.3~rc1
1.2.3~rc2 > 1.2.3~rc1

See also: #270 (comment)","@hughsie

I don't think we can link to librpm on all distros.

As I said before, it is not necessary.

Can we just copy-and-paste the RPM implementation?

This is exactly what I suggested from the beginning.
#270 (comment)

Is the licence LGPLv2+ compatible?

https://github.com/rpm-software-management/rpm/blob/ca8ff08e4f61f05c743797ea4afbb9bf0bce3064/COPYING
The entire code base may be distributed under the terms of the GNU General
Public License (GPL), which appears immediately below.  Alternatively,
all of the source code in the lib subdirectory of the RPM source code
distribution as well as any code derived from that code may instead be
distributed under the GNU Library General Public License (LGPL), at the
choice of the distributor. The complete text of the LGPL appears
at the bottom of this file.

The same applies to the reference implementation:
https://github.com/ximion/appstream/blob/d10f947e4590b0f04fc6bd74acf04b7987057e36/LICENSE.LGPLv2.1
So, in conclusion, we already have two GLib-ed rpmvercmp implementations:

rpm-software-management: rpm: rpmvercmp.c: rpmvercmp
-(make it more GLib-way)->
ximion: appstream: as-utils.c: as_utils_compare_versions
/* the reference implementation of AppStream */
rpm-software-management: rpm: rpmvercmp.c: rpmvercmp
-(make it even more GLib-way)->
scx: appstream-glib: as-utils.c: as_utils_vercmp_rpm
/* this pull request */

My solution (the entire patch) can handle both RPM specification and hex format (e.g. ""0x10203""). The reference implementation supports only the first one.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,272,2018-11-13T08:50:55Z,2019-02-06T12:17:24Z,2019-02-06T12:17:25Z,CLOSED,False,229,46,3,https://github.com/scx,Rewrite the version comparison algorithm,6,[],https://github.com/hughsie/appstream-glib/pull/272,https://github.com/kalev,9,https://github.com/hughsie/appstream-glib/pull/272#issuecomment-440652053,"Proposed patch: libappstream-glib-rpmvercmp.patch
diff -Naur a/appstream-glib/libappstream-glib/as-utils.c b/appstream-glib/libappstream-glib/as-utils.c
--- a/appstream-glib/libappstream-glib/as-utils.c	2018-11-13 06:28:45.000000000 +0100
+++ b/appstream-glib/libappstream-glib/as-utils.c	2018-11-13 08:55:25.000000000 +0100
@@ -1463,6 +1463,209 @@
 }
 
 /**
+ * as_utils_version_reparse:
+ * @version: A version number
+ *
+ * Returns a dotted decimal version string from a version string. The supported
+ * formats are:
+ *
+ * - Dotted decimal, e.g. ""1.2.3""
+ * - Base 16, a hex number *with* a 0x prefix, e.g. ""0x10203""
+ *
+ * Anything with a '.' or that doesn't match 0x[a-f,0-9] is considered
+ * a string and returned without modification.
+ *
+ * Returns: A version number, e.g. ""1.0.3""
+ *
+ * Since: 0.7.15
+ */
+gchar *
+as_utils_version_reparse (const gchar *version)
+{
+	const gchar *version_noprefix = version;
+	gchar *endptr = NULL;
+	guint64 tmp;
+	guint base;
+
+	/* already dotted decimal */
+	if (g_strstr_len (version, -1, ""."") != NULL)
+		return g_strdup (version);
+
+	/* convert 0x prefixed strings to dotted decimal */
+	if (g_str_has_prefix (version, ""0x"")) {
+		version_noprefix += 2;
+		base = 16;
+	} else {
+		/* just return the string */
+		return g_strdup (version);
+	}
+
+	/* convert */
+	tmp = g_ascii_strtoull (version_noprefix, &endptr, base);
+	if (endptr != NULL && endptr[0] != '\0')
+		return g_strdup (version);
+	if (tmp == 0)
+		return g_strdup (version);
+	return as_utils_version_from_uint32 ((guint32) tmp, AS_VERSION_PARSE_FLAG_USE_TRIPLET);
+}
+
+// Based on: https://github.com/rpm-software-management/rpm/blob/ca8ff08e4f61f05c743797ea4afbb9bf0bce3064/lib/rpmvercmp.c#L12-L122
+/**
+ * as_utils_vercmp_rpm:
+ * @version_a: the release version, e.g. 1.2.3
+ * @version_b: the release version, e.g. 1.2.3.1
+ *
+ * Compares version numbers for sorting.
+ *
+ * Returns: -1 if a < b, +1 if a > b, 0 if they are equal
+ *
+ * Since: 0.7.15
+ */
+gint
+as_utils_vercmp_rpm (const gchar *version_a, const gchar *version_b)
+{
+	/* easy comparison to see if versions are identical */
+	if (g_strcmp0(version_a, version_b) == 0) return 0;
+
+	gchar oldch1, oldch2;
+	gchar abuf[strlen(version_a)+1], bbuf[strlen(version_b)+1];
+	gchar *str1 = abuf, *str2 = bbuf;
+	gchar * one, * two;
+	gint rc;
+	gint isnum;
+
+	g_strlcpy(str1, version_a, sizeof(abuf));
+	g_strlcpy(str2, version_b, sizeof(bbuf));
+
+	one = str1;
+	two = str2;
+
+	/* loop through each version segment of str1 and str2 and compare them */
+	while (*one || *two) {
+	while (*one && !g_ascii_isalnum(*one) && *one != '~') one++;
+	while (*two && !g_ascii_isalnum(*two) && *two != '~') two++;
+
+	/* handle the tilde separator, it sorts before everything else */
+	if (*one == '~' || *two == '~') {
+		if (*one != '~') return 1;
+		if (*two != '~') return -1;
+		one++;
+		two++;
+		continue;
+	}
+
+	/* If we ran to the end of either, we are finished with the loop */
+	if (!(*one && *two)) break;
+
+	str1 = one;
+	str2 = two;
+
+	/* grab first completely alpha or completely numeric segment */
+	/* leave one and two pointing to the start of the alpha or numeric */
+	/* segment and walk str1 and str2 to end of segment */
+	if (g_ascii_isdigit(*str1)) {
+		while (*str1 && g_ascii_isdigit(*str1)) str1++;
+		while (*str2 && g_ascii_isdigit(*str2)) str2++;
+		isnum = 1;
+	} else {
+		while (*str1 && g_ascii_isalpha(*str1)) str1++;
+		while (*str2 && g_ascii_isalpha(*str2)) str2++;
+		isnum = 0;
+	}
+
+	/* save character at the end of the alpha or numeric segment */
+	/* so that they can be restored after the comparison */
+	oldch1 = *str1;
+	*str1 = '\0';
+	oldch2 = *str2;
+	*str2 = '\0';
+
+	/* this cannot happen, as we previously tested to make sure that */
+	/* the first string has a non-null segment */
+	if (one == str1) return -1;	/* arbitrary */
+
+	/* take care of the case where the two version segments are */
+	/* different types: one numeric, the other alpha (i.e. empty) */
+	/* numeric segments are always newer than alpha segments */
+	/* XXX See patch #60884 (and details) from bugzilla #50977. */
+	if (two == str2) return (isnum ? 1 : -1);
+
+	if (isnum) {
+		gsize onelen, twolen;
+		/* this used to be done by converting the digit segments */
+		/* to ints using atoi() - it's changed because long  */
+		/* digit segments can overflow an int - this should fix that. */
+
+		/* throw away any leading zeros - it's a number, right? */
+		while (*one == '0') one++;
+		while (*two == '0') two++;
+
+		/* whichever number has more digits wins */
+		onelen = strlen(one);
+		twolen = strlen(two);
+		if (onelen > twolen) return 1;
+		if (twolen > onelen) return -1;
+	}
+
+	/* strcmp will return which one is greater - even if the two */
+	/* segments are alpha or if they are numeric.  don't return  */
+	/* if they are equal because there might be more segments to */
+	/* compare */
+	rc = g_strcmp0(one, two);
+	if (rc) return (rc < 1 ? -1 : 1);
+
+	/* restore character that was replaced by null above */
+	*str1 = oldch1;
+	one = str1;
+	*str2 = oldch2;
+	two = str2;
+	}
+
+	/* this catches the case where all numeric and alpha segments have */
+	/* compared identically but the segment sepparating characters were */
+	/* different */
+	if ((!*one) && (!*two)) return 0;
+
+	/* whichever version still has characters left over wins */
+	if (!*one) return -1; else return 1;
+}
+
+/**
+ * as_utils_vercmp_complex:
+ * @version_a: the release version, e.g. 1.2.3
+ * @version_b: the release version, e.g. 1.2.3.1
+ * @flags: some #AsVersionCompareFlag
+ *
+ * Compares version numbers for sorting.
+ *
+ * Returns: -1 if a < b, +1 if a > b, 0 if they are equal, and %G_MAXINT on error
+ *
+ * Since: 0.7.15
+ */
+gint
+as_utils_vercmp_complex (const gchar *version_a,
+			 const gchar *version_b,
+			 AsVersionCompareFlag flags)
+{
+	/* sanity check */
+	if (version_a == NULL || version_b == NULL)
+		return G_MAXINT;
+
+	/* optimisation */
+	if (g_strcmp0 (version_a, version_b) == 0)
+		return 0;
+
+	/* split into sections, and try to parse */
+	if (flags & AS_VERSION_COMPARE_FLAG_USE_HEURISTICS) {
+		g_autofree gchar *str_a = as_utils_version_reparse (version_a);
+		g_autofree gchar *str_b = as_utils_version_reparse (version_b);
+		return as_utils_vercmp_rpm (str_a, str_b);
+	} else {
+		return as_utils_vercmp_rpm (version_a, version_b);
+	}
+}
+
+/**
  * as_utils_vercmp:
  * @version_a: the release version, e.g. 1.2.3
  * @version_b: the release version, e.g. 1.2.3.1
@@ -1476,8 +1679,8 @@
 gint
 as_utils_vercmp (const gchar *version_a, const gchar *version_b)
 {
-	return as_utils_vercmp_full (version_a, version_b,
-				     AS_VERSION_COMPARE_FLAG_USE_HEURISTICS);
+	return as_utils_vercmp_complex (version_a, version_b,
+					AS_VERSION_COMPARE_FLAG_USE_HEURISTICS);
 }
 
 /**
diff -Naur a/appstream-glib/libappstream-glib/as-utils.h b/appstream-glib/libappstream-glib/as-utils.h
--- a/appstream-glib/libappstream-glib/as-utils.h	2018-11-13 06:28:45.000000000 +0100
+++ b/appstream-glib/libappstream-glib/as-utils.h	2018-11-13 08:39:21.000000000 +0100
@@ -163,6 +163,12 @@
 gint		 as_utils_vercmp_full		(const gchar	*version_a,
 						 const gchar	*version_b,
 						 AsVersionCompareFlag flags);
+gchar		*as_utils_version_reparse	(const gchar	*version);
+gint		 as_utils_vercmp_rpm		(const gchar	*version_a,
+						 const gchar	*version_b);
+gint		 as_utils_vercmp_complex	(const gchar	*version_a,
+						 const gchar	*version_b,
+						 AsVersionCompareFlag flags);
 gint		 as_utils_vercmp		(const gchar	*version_a,
 						 const gchar	*version_b);
 gboolean	 as_utils_guid_is_valid		(const gchar	*guid);

This patch deprecates the following functions:

as_utils_vercmp_full
as_utils_version_parse

If you want, I can just insert the code from as_utils_vercmp_complex and as_utils_version_reparse into them.
I also prepared a simple test: org.freedesktop.appstream-test.yaml
app-id: org.freedesktop.appstream-test
runtime: org.freedesktop.Platform
runtime-version: '18.08'
sdk: org.freedesktop.Sdk
command: appstream-test
modules:
  - name: libappstream-glib
    buildsystem: meson
    config-opts:
      - -Dfonts=false
      - -Ddep11=false
      - -Drpm=false
      - -Dstemmer=false
    sources:
      - type: git
        url: https://github.com/scx/appstream-glib.git
        branch: master
        commit: 2ff970eb3cc748da336695f941356b74da16c55f
    post-install:
      - meson test
    cleanup:
      - /share/installed-tests
  - name: appstream-test
    buildsystem: simple
    sources:
      - type: script
        commands:
          - appstream-util --version
          - appstream-util vercmp 'Build 9half' 'Build 10'
          - appstream-util vercmp 'Build 9.5' 'Build 10'
          - appstream-util vercmp 'Build 9+' 'Build 10'
          - appstream-util vercmp 'Build 9a' 'Build 10'
          - appstream-util vercmp 'Build 9' 'Build 10'
          - appstream-util vercmp '9half' '10'
          - appstream-util vercmp '9.5' '10'
          - appstream-util vercmp '9+' '10'
          - appstream-util vercmp '9a' '10'
          - appstream-util vercmp '9' '10'
          - appstream-util vercmp '1.2.3' '1.2.3'
          - appstream-util vercmp '001.002.003' '001.002.003'
          - appstream-util vercmp '1.2.3' '0x1020003'
          - appstream-util vercmp '0x10203' '0x10203'
          - appstream-util vercmp '1.2.3' '1.2.4'
          - appstream-util vercmp '001.002.000' '001.002.009'
          - appstream-util vercmp '1.2.3' '1.2.2'
          - appstream-util vercmp '001.002.009' '001.002.000'
          - appstream-util vercmp '1.2.3' '1.2.3.1'
          - appstream-util vercmp '1.2.3.1' '1.2.4'
          - appstream-util vercmp '1.2.3a' '1.2.3a'
          - appstream-util vercmp '1.2.3a' '1.2.3b'
          - appstream-util vercmp '1.2.3b' '1.2.3a'
          - appstream-util vercmp '1.2.3' '1.2.3a'
          - appstream-util vercmp '1.2.3a' '1.2.3'
          - appstream-util vercmp 'alpha' 'alpha'
          - appstream-util vercmp 'alpha' 'beta'
          - appstream-util vercmp 'beta' 'alpha'
          - appstream-util vercmp '1.2a.3' '1.2a.3'
          - appstream-util vercmp '1.2a.3' '1.2b.3'
          - appstream-util vercmp '1.2b.3' '1.2a.3'
          - appstream-util vercmp '1.2.3~rc1' '1.2.3~rc1'
          - appstream-util vercmp '1.2.3~rc1' '1.2.3'
          - appstream-util vercmp '1.2.3' '1.2.3~rc1'
          - appstream-util vercmp '1.2.3~rc2' '1.2.3~rc1'
        dest-filename: appstream-test
    build-commands:
      - install -p -D -m 0755 'appstream-test' -t '/app/bin/'

Build command:
mkdir -p build && flatpak-builder 'build' 'org.freedesktop.appstream-test.yaml' --force-clean --install-deps-from='flathub'

Run command:
flatpak-builder --run 'build' 'org.freedesktop.appstream-test.yaml' 'appstream-test' 2>/dev/null

Results:
Version:	0.7.14
Build 9half < Build 10
Build 9.5 < Build 10
Build 9+ < Build 10
Build 9a < Build 10
Build 9 < Build 10
9half < 10
9.5 < 10
9+ < 10
9a < 10
9 < 10
1.2.3 = 1.2.3
001.002.003 = 001.002.003
1.2.3 = 0x1020003
0x10203 = 0x10203
1.2.3 < 1.2.4
001.002.000 < 001.002.009
1.2.3 > 1.2.2
001.002.009 > 001.002.000
1.2.3 < 1.2.3.1
1.2.3.1 < 1.2.4
1.2.3a = 1.2.3a
1.2.3a < 1.2.3b
1.2.3b > 1.2.3a
1.2.3 < 1.2.3a
1.2.3a > 1.2.3
alpha = alpha
alpha < beta
beta > alpha
1.2a.3 = 1.2a.3
1.2a.3 < 1.2b.3
1.2b.3 > 1.2a.3
1.2.3~rc1 = 1.2.3~rc1
1.2.3~rc1 < 1.2.3
1.2.3 > 1.2.3~rc1
1.2.3~rc2 > 1.2.3~rc1

See also: #270 (comment)","hughsie mentioned a few weeks ago that he'd like to keep the hex format support (e.g. ""0x10203"") for compatibility with older fwupd versions, but that current fwupd versions don't need it any more as they no longer use as_utils_vercmp.
I wonder if it would ok to just break compatibility with old fwupd versions and drop the hex format support  from as_utils_vercmp? That should open the door for fixing as_utils_vercmp",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,272,2018-11-13T08:50:55Z,2019-02-06T12:17:24Z,2019-02-06T12:17:25Z,CLOSED,False,229,46,3,https://github.com/scx,Rewrite the version comparison algorithm,6,[],https://github.com/hughsie/appstream-glib/pull/272,https://github.com/scx,10,https://github.com/hughsie/appstream-glib/pull/272#issuecomment-440658295,"Proposed patch: libappstream-glib-rpmvercmp.patch
diff -Naur a/appstream-glib/libappstream-glib/as-utils.c b/appstream-glib/libappstream-glib/as-utils.c
--- a/appstream-glib/libappstream-glib/as-utils.c	2018-11-13 06:28:45.000000000 +0100
+++ b/appstream-glib/libappstream-glib/as-utils.c	2018-11-13 08:55:25.000000000 +0100
@@ -1463,6 +1463,209 @@
 }
 
 /**
+ * as_utils_version_reparse:
+ * @version: A version number
+ *
+ * Returns a dotted decimal version string from a version string. The supported
+ * formats are:
+ *
+ * - Dotted decimal, e.g. ""1.2.3""
+ * - Base 16, a hex number *with* a 0x prefix, e.g. ""0x10203""
+ *
+ * Anything with a '.' or that doesn't match 0x[a-f,0-9] is considered
+ * a string and returned without modification.
+ *
+ * Returns: A version number, e.g. ""1.0.3""
+ *
+ * Since: 0.7.15
+ */
+gchar *
+as_utils_version_reparse (const gchar *version)
+{
+	const gchar *version_noprefix = version;
+	gchar *endptr = NULL;
+	guint64 tmp;
+	guint base;
+
+	/* already dotted decimal */
+	if (g_strstr_len (version, -1, ""."") != NULL)
+		return g_strdup (version);
+
+	/* convert 0x prefixed strings to dotted decimal */
+	if (g_str_has_prefix (version, ""0x"")) {
+		version_noprefix += 2;
+		base = 16;
+	} else {
+		/* just return the string */
+		return g_strdup (version);
+	}
+
+	/* convert */
+	tmp = g_ascii_strtoull (version_noprefix, &endptr, base);
+	if (endptr != NULL && endptr[0] != '\0')
+		return g_strdup (version);
+	if (tmp == 0)
+		return g_strdup (version);
+	return as_utils_version_from_uint32 ((guint32) tmp, AS_VERSION_PARSE_FLAG_USE_TRIPLET);
+}
+
+// Based on: https://github.com/rpm-software-management/rpm/blob/ca8ff08e4f61f05c743797ea4afbb9bf0bce3064/lib/rpmvercmp.c#L12-L122
+/**
+ * as_utils_vercmp_rpm:
+ * @version_a: the release version, e.g. 1.2.3
+ * @version_b: the release version, e.g. 1.2.3.1
+ *
+ * Compares version numbers for sorting.
+ *
+ * Returns: -1 if a < b, +1 if a > b, 0 if they are equal
+ *
+ * Since: 0.7.15
+ */
+gint
+as_utils_vercmp_rpm (const gchar *version_a, const gchar *version_b)
+{
+	/* easy comparison to see if versions are identical */
+	if (g_strcmp0(version_a, version_b) == 0) return 0;
+
+	gchar oldch1, oldch2;
+	gchar abuf[strlen(version_a)+1], bbuf[strlen(version_b)+1];
+	gchar *str1 = abuf, *str2 = bbuf;
+	gchar * one, * two;
+	gint rc;
+	gint isnum;
+
+	g_strlcpy(str1, version_a, sizeof(abuf));
+	g_strlcpy(str2, version_b, sizeof(bbuf));
+
+	one = str1;
+	two = str2;
+
+	/* loop through each version segment of str1 and str2 and compare them */
+	while (*one || *two) {
+	while (*one && !g_ascii_isalnum(*one) && *one != '~') one++;
+	while (*two && !g_ascii_isalnum(*two) && *two != '~') two++;
+
+	/* handle the tilde separator, it sorts before everything else */
+	if (*one == '~' || *two == '~') {
+		if (*one != '~') return 1;
+		if (*two != '~') return -1;
+		one++;
+		two++;
+		continue;
+	}
+
+	/* If we ran to the end of either, we are finished with the loop */
+	if (!(*one && *two)) break;
+
+	str1 = one;
+	str2 = two;
+
+	/* grab first completely alpha or completely numeric segment */
+	/* leave one and two pointing to the start of the alpha or numeric */
+	/* segment and walk str1 and str2 to end of segment */
+	if (g_ascii_isdigit(*str1)) {
+		while (*str1 && g_ascii_isdigit(*str1)) str1++;
+		while (*str2 && g_ascii_isdigit(*str2)) str2++;
+		isnum = 1;
+	} else {
+		while (*str1 && g_ascii_isalpha(*str1)) str1++;
+		while (*str2 && g_ascii_isalpha(*str2)) str2++;
+		isnum = 0;
+	}
+
+	/* save character at the end of the alpha or numeric segment */
+	/* so that they can be restored after the comparison */
+	oldch1 = *str1;
+	*str1 = '\0';
+	oldch2 = *str2;
+	*str2 = '\0';
+
+	/* this cannot happen, as we previously tested to make sure that */
+	/* the first string has a non-null segment */
+	if (one == str1) return -1;	/* arbitrary */
+
+	/* take care of the case where the two version segments are */
+	/* different types: one numeric, the other alpha (i.e. empty) */
+	/* numeric segments are always newer than alpha segments */
+	/* XXX See patch #60884 (and details) from bugzilla #50977. */
+	if (two == str2) return (isnum ? 1 : -1);
+
+	if (isnum) {
+		gsize onelen, twolen;
+		/* this used to be done by converting the digit segments */
+		/* to ints using atoi() - it's changed because long  */
+		/* digit segments can overflow an int - this should fix that. */
+
+		/* throw away any leading zeros - it's a number, right? */
+		while (*one == '0') one++;
+		while (*two == '0') two++;
+
+		/* whichever number has more digits wins */
+		onelen = strlen(one);
+		twolen = strlen(two);
+		if (onelen > twolen) return 1;
+		if (twolen > onelen) return -1;
+	}
+
+	/* strcmp will return which one is greater - even if the two */
+	/* segments are alpha or if they are numeric.  don't return  */
+	/* if they are equal because there might be more segments to */
+	/* compare */
+	rc = g_strcmp0(one, two);
+	if (rc) return (rc < 1 ? -1 : 1);
+
+	/* restore character that was replaced by null above */
+	*str1 = oldch1;
+	one = str1;
+	*str2 = oldch2;
+	two = str2;
+	}
+
+	/* this catches the case where all numeric and alpha segments have */
+	/* compared identically but the segment sepparating characters were */
+	/* different */
+	if ((!*one) && (!*two)) return 0;
+
+	/* whichever version still has characters left over wins */
+	if (!*one) return -1; else return 1;
+}
+
+/**
+ * as_utils_vercmp_complex:
+ * @version_a: the release version, e.g. 1.2.3
+ * @version_b: the release version, e.g. 1.2.3.1
+ * @flags: some #AsVersionCompareFlag
+ *
+ * Compares version numbers for sorting.
+ *
+ * Returns: -1 if a < b, +1 if a > b, 0 if they are equal, and %G_MAXINT on error
+ *
+ * Since: 0.7.15
+ */
+gint
+as_utils_vercmp_complex (const gchar *version_a,
+			 const gchar *version_b,
+			 AsVersionCompareFlag flags)
+{
+	/* sanity check */
+	if (version_a == NULL || version_b == NULL)
+		return G_MAXINT;
+
+	/* optimisation */
+	if (g_strcmp0 (version_a, version_b) == 0)
+		return 0;
+
+	/* split into sections, and try to parse */
+	if (flags & AS_VERSION_COMPARE_FLAG_USE_HEURISTICS) {
+		g_autofree gchar *str_a = as_utils_version_reparse (version_a);
+		g_autofree gchar *str_b = as_utils_version_reparse (version_b);
+		return as_utils_vercmp_rpm (str_a, str_b);
+	} else {
+		return as_utils_vercmp_rpm (version_a, version_b);
+	}
+}
+
+/**
  * as_utils_vercmp:
  * @version_a: the release version, e.g. 1.2.3
  * @version_b: the release version, e.g. 1.2.3.1
@@ -1476,8 +1679,8 @@
 gint
 as_utils_vercmp (const gchar *version_a, const gchar *version_b)
 {
-	return as_utils_vercmp_full (version_a, version_b,
-				     AS_VERSION_COMPARE_FLAG_USE_HEURISTICS);
+	return as_utils_vercmp_complex (version_a, version_b,
+					AS_VERSION_COMPARE_FLAG_USE_HEURISTICS);
 }
 
 /**
diff -Naur a/appstream-glib/libappstream-glib/as-utils.h b/appstream-glib/libappstream-glib/as-utils.h
--- a/appstream-glib/libappstream-glib/as-utils.h	2018-11-13 06:28:45.000000000 +0100
+++ b/appstream-glib/libappstream-glib/as-utils.h	2018-11-13 08:39:21.000000000 +0100
@@ -163,6 +163,12 @@
 gint		 as_utils_vercmp_full		(const gchar	*version_a,
 						 const gchar	*version_b,
 						 AsVersionCompareFlag flags);
+gchar		*as_utils_version_reparse	(const gchar	*version);
+gint		 as_utils_vercmp_rpm		(const gchar	*version_a,
+						 const gchar	*version_b);
+gint		 as_utils_vercmp_complex	(const gchar	*version_a,
+						 const gchar	*version_b,
+						 AsVersionCompareFlag flags);
 gint		 as_utils_vercmp		(const gchar	*version_a,
 						 const gchar	*version_b);
 gboolean	 as_utils_guid_is_valid		(const gchar	*guid);

This patch deprecates the following functions:

as_utils_vercmp_full
as_utils_version_parse

If you want, I can just insert the code from as_utils_vercmp_complex and as_utils_version_reparse into them.
I also prepared a simple test: org.freedesktop.appstream-test.yaml
app-id: org.freedesktop.appstream-test
runtime: org.freedesktop.Platform
runtime-version: '18.08'
sdk: org.freedesktop.Sdk
command: appstream-test
modules:
  - name: libappstream-glib
    buildsystem: meson
    config-opts:
      - -Dfonts=false
      - -Ddep11=false
      - -Drpm=false
      - -Dstemmer=false
    sources:
      - type: git
        url: https://github.com/scx/appstream-glib.git
        branch: master
        commit: 2ff970eb3cc748da336695f941356b74da16c55f
    post-install:
      - meson test
    cleanup:
      - /share/installed-tests
  - name: appstream-test
    buildsystem: simple
    sources:
      - type: script
        commands:
          - appstream-util --version
          - appstream-util vercmp 'Build 9half' 'Build 10'
          - appstream-util vercmp 'Build 9.5' 'Build 10'
          - appstream-util vercmp 'Build 9+' 'Build 10'
          - appstream-util vercmp 'Build 9a' 'Build 10'
          - appstream-util vercmp 'Build 9' 'Build 10'
          - appstream-util vercmp '9half' '10'
          - appstream-util vercmp '9.5' '10'
          - appstream-util vercmp '9+' '10'
          - appstream-util vercmp '9a' '10'
          - appstream-util vercmp '9' '10'
          - appstream-util vercmp '1.2.3' '1.2.3'
          - appstream-util vercmp '001.002.003' '001.002.003'
          - appstream-util vercmp '1.2.3' '0x1020003'
          - appstream-util vercmp '0x10203' '0x10203'
          - appstream-util vercmp '1.2.3' '1.2.4'
          - appstream-util vercmp '001.002.000' '001.002.009'
          - appstream-util vercmp '1.2.3' '1.2.2'
          - appstream-util vercmp '001.002.009' '001.002.000'
          - appstream-util vercmp '1.2.3' '1.2.3.1'
          - appstream-util vercmp '1.2.3.1' '1.2.4'
          - appstream-util vercmp '1.2.3a' '1.2.3a'
          - appstream-util vercmp '1.2.3a' '1.2.3b'
          - appstream-util vercmp '1.2.3b' '1.2.3a'
          - appstream-util vercmp '1.2.3' '1.2.3a'
          - appstream-util vercmp '1.2.3a' '1.2.3'
          - appstream-util vercmp 'alpha' 'alpha'
          - appstream-util vercmp 'alpha' 'beta'
          - appstream-util vercmp 'beta' 'alpha'
          - appstream-util vercmp '1.2a.3' '1.2a.3'
          - appstream-util vercmp '1.2a.3' '1.2b.3'
          - appstream-util vercmp '1.2b.3' '1.2a.3'
          - appstream-util vercmp '1.2.3~rc1' '1.2.3~rc1'
          - appstream-util vercmp '1.2.3~rc1' '1.2.3'
          - appstream-util vercmp '1.2.3' '1.2.3~rc1'
          - appstream-util vercmp '1.2.3~rc2' '1.2.3~rc1'
        dest-filename: appstream-test
    build-commands:
      - install -p -D -m 0755 'appstream-test' -t '/app/bin/'

Build command:
mkdir -p build && flatpak-builder 'build' 'org.freedesktop.appstream-test.yaml' --force-clean --install-deps-from='flathub'

Run command:
flatpak-builder --run 'build' 'org.freedesktop.appstream-test.yaml' 'appstream-test' 2>/dev/null

Results:
Version:	0.7.14
Build 9half < Build 10
Build 9.5 < Build 10
Build 9+ < Build 10
Build 9a < Build 10
Build 9 < Build 10
9half < 10
9.5 < 10
9+ < 10
9a < 10
9 < 10
1.2.3 = 1.2.3
001.002.003 = 001.002.003
1.2.3 = 0x1020003
0x10203 = 0x10203
1.2.3 < 1.2.4
001.002.000 < 001.002.009
1.2.3 > 1.2.2
001.002.009 > 001.002.000
1.2.3 < 1.2.3.1
1.2.3.1 < 1.2.4
1.2.3a = 1.2.3a
1.2.3a < 1.2.3b
1.2.3b > 1.2.3a
1.2.3 < 1.2.3a
1.2.3a > 1.2.3
alpha = alpha
alpha < beta
beta > alpha
1.2a.3 = 1.2a.3
1.2a.3 < 1.2b.3
1.2b.3 > 1.2a.3
1.2.3~rc1 = 1.2.3~rc1
1.2.3~rc1 < 1.2.3
1.2.3 > 1.2.3~rc1
1.2.3~rc2 > 1.2.3~rc1

See also: #270 (comment)","@kalev

I wonder if it would ok to just break compatibility with old fwupd versions and drop the hex format support from as_utils_vercmp? That should open the door for fixing as_utils_vercmp

Abandoning support for hex format doesn't seem to be necessary. My solution can handle this case:
https://github.com/scx/appstream-glib/blob/83ffcd5cca1f0744cad87ae252fe8556bbcd4d7f/libappstream-glib/as-utils.c#L1416-L1422
The as_utils_version_parse_full function converts hex version string to dotted decimal version string.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,272,2018-11-13T08:50:55Z,2019-02-06T12:17:24Z,2019-02-06T12:17:25Z,CLOSED,False,229,46,3,https://github.com/scx,Rewrite the version comparison algorithm,6,[],https://github.com/hughsie/appstream-glib/pull/272,https://github.com/scx,11,https://github.com/hughsie/appstream-glib/pull/272#issuecomment-440736865,"Proposed patch: libappstream-glib-rpmvercmp.patch
diff -Naur a/appstream-glib/libappstream-glib/as-utils.c b/appstream-glib/libappstream-glib/as-utils.c
--- a/appstream-glib/libappstream-glib/as-utils.c	2018-11-13 06:28:45.000000000 +0100
+++ b/appstream-glib/libappstream-glib/as-utils.c	2018-11-13 08:55:25.000000000 +0100
@@ -1463,6 +1463,209 @@
 }
 
 /**
+ * as_utils_version_reparse:
+ * @version: A version number
+ *
+ * Returns a dotted decimal version string from a version string. The supported
+ * formats are:
+ *
+ * - Dotted decimal, e.g. ""1.2.3""
+ * - Base 16, a hex number *with* a 0x prefix, e.g. ""0x10203""
+ *
+ * Anything with a '.' or that doesn't match 0x[a-f,0-9] is considered
+ * a string and returned without modification.
+ *
+ * Returns: A version number, e.g. ""1.0.3""
+ *
+ * Since: 0.7.15
+ */
+gchar *
+as_utils_version_reparse (const gchar *version)
+{
+	const gchar *version_noprefix = version;
+	gchar *endptr = NULL;
+	guint64 tmp;
+	guint base;
+
+	/* already dotted decimal */
+	if (g_strstr_len (version, -1, ""."") != NULL)
+		return g_strdup (version);
+
+	/* convert 0x prefixed strings to dotted decimal */
+	if (g_str_has_prefix (version, ""0x"")) {
+		version_noprefix += 2;
+		base = 16;
+	} else {
+		/* just return the string */
+		return g_strdup (version);
+	}
+
+	/* convert */
+	tmp = g_ascii_strtoull (version_noprefix, &endptr, base);
+	if (endptr != NULL && endptr[0] != '\0')
+		return g_strdup (version);
+	if (tmp == 0)
+		return g_strdup (version);
+	return as_utils_version_from_uint32 ((guint32) tmp, AS_VERSION_PARSE_FLAG_USE_TRIPLET);
+}
+
+// Based on: https://github.com/rpm-software-management/rpm/blob/ca8ff08e4f61f05c743797ea4afbb9bf0bce3064/lib/rpmvercmp.c#L12-L122
+/**
+ * as_utils_vercmp_rpm:
+ * @version_a: the release version, e.g. 1.2.3
+ * @version_b: the release version, e.g. 1.2.3.1
+ *
+ * Compares version numbers for sorting.
+ *
+ * Returns: -1 if a < b, +1 if a > b, 0 if they are equal
+ *
+ * Since: 0.7.15
+ */
+gint
+as_utils_vercmp_rpm (const gchar *version_a, const gchar *version_b)
+{
+	/* easy comparison to see if versions are identical */
+	if (g_strcmp0(version_a, version_b) == 0) return 0;
+
+	gchar oldch1, oldch2;
+	gchar abuf[strlen(version_a)+1], bbuf[strlen(version_b)+1];
+	gchar *str1 = abuf, *str2 = bbuf;
+	gchar * one, * two;
+	gint rc;
+	gint isnum;
+
+	g_strlcpy(str1, version_a, sizeof(abuf));
+	g_strlcpy(str2, version_b, sizeof(bbuf));
+
+	one = str1;
+	two = str2;
+
+	/* loop through each version segment of str1 and str2 and compare them */
+	while (*one || *two) {
+	while (*one && !g_ascii_isalnum(*one) && *one != '~') one++;
+	while (*two && !g_ascii_isalnum(*two) && *two != '~') two++;
+
+	/* handle the tilde separator, it sorts before everything else */
+	if (*one == '~' || *two == '~') {
+		if (*one != '~') return 1;
+		if (*two != '~') return -1;
+		one++;
+		two++;
+		continue;
+	}
+
+	/* If we ran to the end of either, we are finished with the loop */
+	if (!(*one && *two)) break;
+
+	str1 = one;
+	str2 = two;
+
+	/* grab first completely alpha or completely numeric segment */
+	/* leave one and two pointing to the start of the alpha or numeric */
+	/* segment and walk str1 and str2 to end of segment */
+	if (g_ascii_isdigit(*str1)) {
+		while (*str1 && g_ascii_isdigit(*str1)) str1++;
+		while (*str2 && g_ascii_isdigit(*str2)) str2++;
+		isnum = 1;
+	} else {
+		while (*str1 && g_ascii_isalpha(*str1)) str1++;
+		while (*str2 && g_ascii_isalpha(*str2)) str2++;
+		isnum = 0;
+	}
+
+	/* save character at the end of the alpha or numeric segment */
+	/* so that they can be restored after the comparison */
+	oldch1 = *str1;
+	*str1 = '\0';
+	oldch2 = *str2;
+	*str2 = '\0';
+
+	/* this cannot happen, as we previously tested to make sure that */
+	/* the first string has a non-null segment */
+	if (one == str1) return -1;	/* arbitrary */
+
+	/* take care of the case where the two version segments are */
+	/* different types: one numeric, the other alpha (i.e. empty) */
+	/* numeric segments are always newer than alpha segments */
+	/* XXX See patch #60884 (and details) from bugzilla #50977. */
+	if (two == str2) return (isnum ? 1 : -1);
+
+	if (isnum) {
+		gsize onelen, twolen;
+		/* this used to be done by converting the digit segments */
+		/* to ints using atoi() - it's changed because long  */
+		/* digit segments can overflow an int - this should fix that. */
+
+		/* throw away any leading zeros - it's a number, right? */
+		while (*one == '0') one++;
+		while (*two == '0') two++;
+
+		/* whichever number has more digits wins */
+		onelen = strlen(one);
+		twolen = strlen(two);
+		if (onelen > twolen) return 1;
+		if (twolen > onelen) return -1;
+	}
+
+	/* strcmp will return which one is greater - even if the two */
+	/* segments are alpha or if they are numeric.  don't return  */
+	/* if they are equal because there might be more segments to */
+	/* compare */
+	rc = g_strcmp0(one, two);
+	if (rc) return (rc < 1 ? -1 : 1);
+
+	/* restore character that was replaced by null above */
+	*str1 = oldch1;
+	one = str1;
+	*str2 = oldch2;
+	two = str2;
+	}
+
+	/* this catches the case where all numeric and alpha segments have */
+	/* compared identically but the segment sepparating characters were */
+	/* different */
+	if ((!*one) && (!*two)) return 0;
+
+	/* whichever version still has characters left over wins */
+	if (!*one) return -1; else return 1;
+}
+
+/**
+ * as_utils_vercmp_complex:
+ * @version_a: the release version, e.g. 1.2.3
+ * @version_b: the release version, e.g. 1.2.3.1
+ * @flags: some #AsVersionCompareFlag
+ *
+ * Compares version numbers for sorting.
+ *
+ * Returns: -1 if a < b, +1 if a > b, 0 if they are equal, and %G_MAXINT on error
+ *
+ * Since: 0.7.15
+ */
+gint
+as_utils_vercmp_complex (const gchar *version_a,
+			 const gchar *version_b,
+			 AsVersionCompareFlag flags)
+{
+	/* sanity check */
+	if (version_a == NULL || version_b == NULL)
+		return G_MAXINT;
+
+	/* optimisation */
+	if (g_strcmp0 (version_a, version_b) == 0)
+		return 0;
+
+	/* split into sections, and try to parse */
+	if (flags & AS_VERSION_COMPARE_FLAG_USE_HEURISTICS) {
+		g_autofree gchar *str_a = as_utils_version_reparse (version_a);
+		g_autofree gchar *str_b = as_utils_version_reparse (version_b);
+		return as_utils_vercmp_rpm (str_a, str_b);
+	} else {
+		return as_utils_vercmp_rpm (version_a, version_b);
+	}
+}
+
+/**
  * as_utils_vercmp:
  * @version_a: the release version, e.g. 1.2.3
  * @version_b: the release version, e.g. 1.2.3.1
@@ -1476,8 +1679,8 @@
 gint
 as_utils_vercmp (const gchar *version_a, const gchar *version_b)
 {
-	return as_utils_vercmp_full (version_a, version_b,
-				     AS_VERSION_COMPARE_FLAG_USE_HEURISTICS);
+	return as_utils_vercmp_complex (version_a, version_b,
+					AS_VERSION_COMPARE_FLAG_USE_HEURISTICS);
 }
 
 /**
diff -Naur a/appstream-glib/libappstream-glib/as-utils.h b/appstream-glib/libappstream-glib/as-utils.h
--- a/appstream-glib/libappstream-glib/as-utils.h	2018-11-13 06:28:45.000000000 +0100
+++ b/appstream-glib/libappstream-glib/as-utils.h	2018-11-13 08:39:21.000000000 +0100
@@ -163,6 +163,12 @@
 gint		 as_utils_vercmp_full		(const gchar	*version_a,
 						 const gchar	*version_b,
 						 AsVersionCompareFlag flags);
+gchar		*as_utils_version_reparse	(const gchar	*version);
+gint		 as_utils_vercmp_rpm		(const gchar	*version_a,
+						 const gchar	*version_b);
+gint		 as_utils_vercmp_complex	(const gchar	*version_a,
+						 const gchar	*version_b,
+						 AsVersionCompareFlag flags);
 gint		 as_utils_vercmp		(const gchar	*version_a,
 						 const gchar	*version_b);
 gboolean	 as_utils_guid_is_valid		(const gchar	*guid);

This patch deprecates the following functions:

as_utils_vercmp_full
as_utils_version_parse

If you want, I can just insert the code from as_utils_vercmp_complex and as_utils_version_reparse into them.
I also prepared a simple test: org.freedesktop.appstream-test.yaml
app-id: org.freedesktop.appstream-test
runtime: org.freedesktop.Platform
runtime-version: '18.08'
sdk: org.freedesktop.Sdk
command: appstream-test
modules:
  - name: libappstream-glib
    buildsystem: meson
    config-opts:
      - -Dfonts=false
      - -Ddep11=false
      - -Drpm=false
      - -Dstemmer=false
    sources:
      - type: git
        url: https://github.com/scx/appstream-glib.git
        branch: master
        commit: 2ff970eb3cc748da336695f941356b74da16c55f
    post-install:
      - meson test
    cleanup:
      - /share/installed-tests
  - name: appstream-test
    buildsystem: simple
    sources:
      - type: script
        commands:
          - appstream-util --version
          - appstream-util vercmp 'Build 9half' 'Build 10'
          - appstream-util vercmp 'Build 9.5' 'Build 10'
          - appstream-util vercmp 'Build 9+' 'Build 10'
          - appstream-util vercmp 'Build 9a' 'Build 10'
          - appstream-util vercmp 'Build 9' 'Build 10'
          - appstream-util vercmp '9half' '10'
          - appstream-util vercmp '9.5' '10'
          - appstream-util vercmp '9+' '10'
          - appstream-util vercmp '9a' '10'
          - appstream-util vercmp '9' '10'
          - appstream-util vercmp '1.2.3' '1.2.3'
          - appstream-util vercmp '001.002.003' '001.002.003'
          - appstream-util vercmp '1.2.3' '0x1020003'
          - appstream-util vercmp '0x10203' '0x10203'
          - appstream-util vercmp '1.2.3' '1.2.4'
          - appstream-util vercmp '001.002.000' '001.002.009'
          - appstream-util vercmp '1.2.3' '1.2.2'
          - appstream-util vercmp '001.002.009' '001.002.000'
          - appstream-util vercmp '1.2.3' '1.2.3.1'
          - appstream-util vercmp '1.2.3.1' '1.2.4'
          - appstream-util vercmp '1.2.3a' '1.2.3a'
          - appstream-util vercmp '1.2.3a' '1.2.3b'
          - appstream-util vercmp '1.2.3b' '1.2.3a'
          - appstream-util vercmp '1.2.3' '1.2.3a'
          - appstream-util vercmp '1.2.3a' '1.2.3'
          - appstream-util vercmp 'alpha' 'alpha'
          - appstream-util vercmp 'alpha' 'beta'
          - appstream-util vercmp 'beta' 'alpha'
          - appstream-util vercmp '1.2a.3' '1.2a.3'
          - appstream-util vercmp '1.2a.3' '1.2b.3'
          - appstream-util vercmp '1.2b.3' '1.2a.3'
          - appstream-util vercmp '1.2.3~rc1' '1.2.3~rc1'
          - appstream-util vercmp '1.2.3~rc1' '1.2.3'
          - appstream-util vercmp '1.2.3' '1.2.3~rc1'
          - appstream-util vercmp '1.2.3~rc2' '1.2.3~rc1'
        dest-filename: appstream-test
    build-commands:
      - install -p -D -m 0755 'appstream-test' -t '/app/bin/'

Build command:
mkdir -p build && flatpak-builder 'build' 'org.freedesktop.appstream-test.yaml' --force-clean --install-deps-from='flathub'

Run command:
flatpak-builder --run 'build' 'org.freedesktop.appstream-test.yaml' 'appstream-test' 2>/dev/null

Results:
Version:	0.7.14
Build 9half < Build 10
Build 9.5 < Build 10
Build 9+ < Build 10
Build 9a < Build 10
Build 9 < Build 10
9half < 10
9.5 < 10
9+ < 10
9a < 10
9 < 10
1.2.3 = 1.2.3
001.002.003 = 001.002.003
1.2.3 = 0x1020003
0x10203 = 0x10203
1.2.3 < 1.2.4
001.002.000 < 001.002.009
1.2.3 > 1.2.2
001.002.009 > 001.002.000
1.2.3 < 1.2.3.1
1.2.3.1 < 1.2.4
1.2.3a = 1.2.3a
1.2.3a < 1.2.3b
1.2.3b > 1.2.3a
1.2.3 < 1.2.3a
1.2.3a > 1.2.3
alpha = alpha
alpha < beta
beta > alpha
1.2a.3 = 1.2a.3
1.2a.3 < 1.2b.3
1.2b.3 > 1.2a.3
1.2.3~rc1 = 1.2.3~rc1
1.2.3~rc1 < 1.2.3
1.2.3 > 1.2.3~rc1
1.2.3~rc2 > 1.2.3~rc1

See also: #270 (comment)","Latest patch: libappstream-glib-rpmvercmp.patch
diff -Naur a/appstream-glib/libappstream-glib/as-utils.c b/appstream-glib/libappstream-glib/as-utils.c
--- a/appstream-glib/libappstream-glib/as-utils.c	2018-11-21 17:10:38.000000000 +0100
+++ b/appstream-glib/libappstream-glib/as-utils.c	2018-11-21 17:27:37.000000000 +0100
@@ -1404,10 +1404,6 @@
 		      const gchar *version_b,
 		      AsVersionCompareFlag flags)
 {
-	guint longest_split;
-	g_auto(GStrv) split_a = NULL;
-	g_auto(GStrv) split_b = NULL;
-
 	/* sanity check */
 	if (version_a == NULL || version_b == NULL)
 		return G_MAXINT;
@@ -1416,50 +1412,136 @@
 	if (g_strcmp0 (version_a, version_b) == 0)
 		return 0;
 
-	/* split into sections, and try to parse */
+	/* decide to support hex format or not */
 	if (flags & AS_VERSION_COMPARE_FLAG_USE_HEURISTICS) {
-		g_autofree gchar *str_a = as_utils_version_parse (version_a);
-		g_autofree gchar *str_b = as_utils_version_parse (version_b);
-		split_a = g_strsplit (str_a, ""."", -1);
-		split_b = g_strsplit (str_b, ""."", -1);
+		g_autofree gchar *str_a = as_utils_version_parse_full (version_a, TRUE);
+		g_autofree gchar *str_b = as_utils_version_parse_full (version_b, TRUE);
+		return as_utils_vercmp_rpm (str_a, str_b);
 	} else {
-		split_a = g_strsplit (version_a, ""."", -1);
-		split_b = g_strsplit (version_b, ""."", -1);
+		return as_utils_vercmp_rpm (version_a, version_b);
 	}
-	longest_split = MAX (g_strv_length (split_a), g_strv_length (split_b));
-	for (guint i = 0; i < longest_split; i++) {
-		gchar *endptr_a = NULL;
-		gchar *endptr_b = NULL;
-		gint64 ver_a;
-		gint64 ver_b;
-
-		/* we lost or gained a dot */
-		if (split_a[i] == NULL)
-			return -1;
-		if (split_b[i] == NULL)
-			return 1;
-
-		/* compare integers */
-		ver_a = g_ascii_strtoll (split_a[i], &endptr_a, 10);
-		ver_b = g_ascii_strtoll (split_b[i], &endptr_b, 10);
-		if (ver_a < ver_b)
-			return -1;
-		if (ver_a > ver_b)
-			return 1;
-
-		/* compare strings */
-		if ((endptr_a != NULL && endptr_a[0] != '\0') ||
-		    (endptr_b != NULL && endptr_b[0] != '\0')) {
-			gint rc = as_utils_vercmp_chunk (endptr_a, endptr_b);
-			if (rc < 0)
-				return -1;
-			if (rc > 0)
-				return 1;
+}
+
+// Based on: https://github.com/rpm-software-management/rpm/blob/ca8ff08e4f61f05c743797ea4afbb9bf0bce3064/lib/rpmvercmp.c#L12-L122
+/**
+ * as_utils_vercmp_rpm:
+ * @version_a: the release version, e.g. 1.2.3
+ * @version_b: the release version, e.g. 1.2.3.1
+ *
+ * Compares version numbers for sorting.
+ *
+ * Returns: -1 if a < b, +1 if a > b, 0 if they are equal
+ *
+ * Since: 0.7.15
+ */
+gint
+as_utils_vercmp_rpm (const gchar *version_a, const gchar *version_b)
+{
+	/* easy comparison to see if versions are identical */
+	if (g_strcmp0 (version_a, version_b) == 0)
+		return 0;
+
+	gchar oldch1, oldch2;
+	gchar abuf[strlen (version_a)+1], bbuf[strlen (version_b)+1];
+	gchar *str1 = abuf, *str2 = bbuf;
+	gchar *one, *two;
+	gint rc;
+	gboolean isnum;
+
+	g_strlcpy(str1, version_a, sizeof (abuf));
+	g_strlcpy(str2, version_b, sizeof (bbuf));
+
+	one = str1;
+	two = str2;
+
+	/* loop through each version segment of str1 and str2 and compare them */
+	while (*one || *two) {
+		while (*one && !g_ascii_isalnum (*one) && *one != '~') one++;
+		while (*two && !g_ascii_isalnum (*two) && *two != '~') two++;
+
+		/* handle the tilde separator, it sorts before everything else */
+		if (*one == '~' || *two == '~') {
+			if (*one != '~') return 1;
+			if (*two != '~') return -1;
+			one++;
+			two++;
+			continue;
+		}
+
+		/* If we ran to the end of either, we are finished with the loop */
+		if (!(*one && *two)) break;
+
+		str1 = one;
+		str2 = two;
+
+		/* grab first completely alpha or completely numeric segment */
+		/* leave one and two pointing to the start of the alpha or numeric */
+		/* segment and walk str1 and str2 to end of segment */
+		if (g_ascii_isdigit (*str1)) {
+			while (*str1 && g_ascii_isdigit (*str1)) str1++;
+			while (*str2 && g_ascii_isdigit (*str2)) str2++;
+			isnum = TRUE;
+		} else {
+			while (*str1 && g_ascii_isalpha (*str1)) str1++;
+			while (*str2 && g_ascii_isalpha (*str2)) str2++;
+			isnum = FALSE;
 		}
+
+		/* save character at the end of the alpha or numeric segment */
+		/* so that they can be restored after the comparison */
+		oldch1 = *str1;
+		*str1 = '\0';
+		oldch2 = *str2;
+		*str2 = '\0';
+
+		/* this cannot happen, as we previously tested to make sure that */
+		/* the first string has a non-null segment */
+		if (one == str1) return -1;	/* arbitrary */
+
+		/* take care of the case where the two version segments are */
+		/* different types: one numeric, the other alpha (i.e. empty) */
+		/* numeric segments are always newer than alpha segments */
+		/* XXX See patch #60884 (and details) from bugzilla #50977. */
+		if (two == str2) return (isnum ? 1 : -1);
+
+		if (isnum) {
+			gsize onelen, twolen;
+			/* this used to be done by converting the digit segments */
+			/* to ints using atoi() - it's changed because long  */
+			/* digit segments can overflow an int - this should fix that. */
+
+			/* throw away any leading zeros - it's a number, right? */
+			while (*one == '0') one++;
+			while (*two == '0') two++;
+
+			/* whichever number has more digits wins */
+			onelen = strlen (one);
+			twolen = strlen (two);
+			if (onelen > twolen) return 1;
+			if (twolen > onelen) return -1;
+		}
+
+		/* strcmp will return which one is greater - even if the two */
+		/* segments are alpha or if they are numeric.  don't return  */
+		/* if they are equal because there might be more segments to */
+		/* compare */
+		rc = g_strcmp0 (one, two);
+		if (rc) return (rc < 1 ? -1 : 1);
+
+		/* restore character that was replaced by null above */
+		*str1 = oldch1;
+		one = str1;
+		*str2 = oldch2;
+		two = str2;
 	}
 
-	/* we really shouldn't get here */
-	return 0;
+	/* this catches the case where all numeric and alpha segments have */
+	/* compared identically but the segment sepparating characters were */
+	/* different */
+	if ((!*one) && (!*two)) return 0;
+
+	/* whichever version still has characters left over wins */
+	if (!*one) return -1; else return 1;
 }
 
 /**
@@ -1669,15 +1751,16 @@
 }
 
 /**
- * as_utils_version_parse:
+ * as_utils_version_parse_full:
  * @version: A version number
+ * @hex_only: Turn off heuristic for anything that does not match hex number
  *
  * Returns a dotted decimal version string from a version string. The supported
  * formats are:
  *
  * - Dotted decimal, e.g. ""1.2.3""
  * - Base 16, a hex number *with* a 0x prefix, e.g. ""0x10203""
- * - Base 10, a string containing just [0-9], e.g. ""66051""
+ * - Base 10, a string containing just [0-9], e.g. ""66051"" (only if hex_only == FALSE)
  * - Date in YYYYMMDD format, e.g. 20150915
  *
  * Anything with a '.' or that doesn't match [0-9] or 0x[a-f,0-9] is considered
@@ -1685,10 +1768,10 @@
  *
  * Returns: A version number, e.g. ""1.0.3""
  *
- * Since: 0.5.2
+ * Since: 0.7.15
  */
 gchar *
-as_utils_version_parse (const gchar *version)
+as_utils_version_parse_full (const gchar *version, const gboolean hex_only)
 {
 	const gchar *version_noprefix = version;
 	gchar *endptr = NULL;
@@ -1710,6 +1793,10 @@
 		version_noprefix += 2;
 		base = 16;
 	} else {
+		/* just return the string */
+		if (hex_only)
+			return g_strdup (version);
+		
 		/* for non-numeric content, just return the string */
 		for (i = 0; version[i] != '\0'; i++) {
 			if (!g_ascii_isdigit (version[i]))
@@ -1728,6 +1815,31 @@
 }
 
 /**
+ * as_utils_version_parse:
+ * @version: A version number
+ *
+ * Returns a dotted decimal version string from a version string. The supported
+ * formats are:
+ *
+ * - Dotted decimal, e.g. ""1.2.3""
+ * - Base 16, a hex number *with* a 0x prefix, e.g. ""0x10203""
+ * - Base 10, a string containing just [0-9], e.g. ""66051""
+ * - Date in YYYYMMDD format, e.g. 20150915
+ *
+ * Anything with a '.' or that doesn't match [0-9] or 0x[a-f,0-9] is considered
+ * a string and returned without modification.
+ *
+ * Returns: A version number, e.g. ""1.0.3""
+ *
+ * Since: 0.5.2
+ */
+gchar *
+as_utils_version_parse (const gchar *version)
+{
+	return as_utils_version_parse_full (version, FALSE);
+}
+
+/**
  * as_utils_string_replace:
  * @string: The #GString to operate on
  * @search: The text to search for
diff -Naur a/appstream-glib/libappstream-glib/as-utils.h b/appstream-glib/libappstream-glib/as-utils.h
--- a/appstream-glib/libappstream-glib/as-utils.h	2018-11-21 17:10:39.000000000 +0100
+++ b/appstream-glib/libappstream-glib/as-utils.h	2018-11-21 17:10:41.000000000 +0100
@@ -163,6 +163,8 @@
 gint		 as_utils_vercmp_full		(const gchar	*version_a,
 						 const gchar	*version_b,
 						 AsVersionCompareFlag flags);
+gint		 as_utils_vercmp_rpm		(const gchar	*version_a,
+						 const gchar	*version_b);
 gint		 as_utils_vercmp		(const gchar	*version_a,
 						 const gchar	*version_b);
 gboolean	 as_utils_guid_is_valid		(const gchar	*guid);
@@ -175,6 +177,8 @@
 						 AsVersionParseFlag flags);
 gchar		*as_utils_version_from_uint16	(guint16	 val,
 						 AsVersionParseFlag flags);
+gchar		*as_utils_version_parse_full	(const gchar	*version,
+						 const gboolean	hex_only);
 gchar		*as_utils_version_parse		(const gchar	*version);
 guint		 as_utils_string_replace	(GString	*string,
 						 const gchar	*search,",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,272,2018-11-13T08:50:55Z,2019-02-06T12:17:24Z,2019-02-06T12:17:25Z,CLOSED,False,229,46,3,https://github.com/scx,Rewrite the version comparison algorithm,6,[],https://github.com/hughsie/appstream-glib/pull/272,https://github.com/smcv,12,https://github.com/hughsie/appstream-glib/pull/272#issuecomment-441058027,"Proposed patch: libappstream-glib-rpmvercmp.patch
diff -Naur a/appstream-glib/libappstream-glib/as-utils.c b/appstream-glib/libappstream-glib/as-utils.c
--- a/appstream-glib/libappstream-glib/as-utils.c	2018-11-13 06:28:45.000000000 +0100
+++ b/appstream-glib/libappstream-glib/as-utils.c	2018-11-13 08:55:25.000000000 +0100
@@ -1463,6 +1463,209 @@
 }
 
 /**
+ * as_utils_version_reparse:
+ * @version: A version number
+ *
+ * Returns a dotted decimal version string from a version string. The supported
+ * formats are:
+ *
+ * - Dotted decimal, e.g. ""1.2.3""
+ * - Base 16, a hex number *with* a 0x prefix, e.g. ""0x10203""
+ *
+ * Anything with a '.' or that doesn't match 0x[a-f,0-9] is considered
+ * a string and returned without modification.
+ *
+ * Returns: A version number, e.g. ""1.0.3""
+ *
+ * Since: 0.7.15
+ */
+gchar *
+as_utils_version_reparse (const gchar *version)
+{
+	const gchar *version_noprefix = version;
+	gchar *endptr = NULL;
+	guint64 tmp;
+	guint base;
+
+	/* already dotted decimal */
+	if (g_strstr_len (version, -1, ""."") != NULL)
+		return g_strdup (version);
+
+	/* convert 0x prefixed strings to dotted decimal */
+	if (g_str_has_prefix (version, ""0x"")) {
+		version_noprefix += 2;
+		base = 16;
+	} else {
+		/* just return the string */
+		return g_strdup (version);
+	}
+
+	/* convert */
+	tmp = g_ascii_strtoull (version_noprefix, &endptr, base);
+	if (endptr != NULL && endptr[0] != '\0')
+		return g_strdup (version);
+	if (tmp == 0)
+		return g_strdup (version);
+	return as_utils_version_from_uint32 ((guint32) tmp, AS_VERSION_PARSE_FLAG_USE_TRIPLET);
+}
+
+// Based on: https://github.com/rpm-software-management/rpm/blob/ca8ff08e4f61f05c743797ea4afbb9bf0bce3064/lib/rpmvercmp.c#L12-L122
+/**
+ * as_utils_vercmp_rpm:
+ * @version_a: the release version, e.g. 1.2.3
+ * @version_b: the release version, e.g. 1.2.3.1
+ *
+ * Compares version numbers for sorting.
+ *
+ * Returns: -1 if a < b, +1 if a > b, 0 if they are equal
+ *
+ * Since: 0.7.15
+ */
+gint
+as_utils_vercmp_rpm (const gchar *version_a, const gchar *version_b)
+{
+	/* easy comparison to see if versions are identical */
+	if (g_strcmp0(version_a, version_b) == 0) return 0;
+
+	gchar oldch1, oldch2;
+	gchar abuf[strlen(version_a)+1], bbuf[strlen(version_b)+1];
+	gchar *str1 = abuf, *str2 = bbuf;
+	gchar * one, * two;
+	gint rc;
+	gint isnum;
+
+	g_strlcpy(str1, version_a, sizeof(abuf));
+	g_strlcpy(str2, version_b, sizeof(bbuf));
+
+	one = str1;
+	two = str2;
+
+	/* loop through each version segment of str1 and str2 and compare them */
+	while (*one || *two) {
+	while (*one && !g_ascii_isalnum(*one) && *one != '~') one++;
+	while (*two && !g_ascii_isalnum(*two) && *two != '~') two++;
+
+	/* handle the tilde separator, it sorts before everything else */
+	if (*one == '~' || *two == '~') {
+		if (*one != '~') return 1;
+		if (*two != '~') return -1;
+		one++;
+		two++;
+		continue;
+	}
+
+	/* If we ran to the end of either, we are finished with the loop */
+	if (!(*one && *two)) break;
+
+	str1 = one;
+	str2 = two;
+
+	/* grab first completely alpha or completely numeric segment */
+	/* leave one and two pointing to the start of the alpha or numeric */
+	/* segment and walk str1 and str2 to end of segment */
+	if (g_ascii_isdigit(*str1)) {
+		while (*str1 && g_ascii_isdigit(*str1)) str1++;
+		while (*str2 && g_ascii_isdigit(*str2)) str2++;
+		isnum = 1;
+	} else {
+		while (*str1 && g_ascii_isalpha(*str1)) str1++;
+		while (*str2 && g_ascii_isalpha(*str2)) str2++;
+		isnum = 0;
+	}
+
+	/* save character at the end of the alpha or numeric segment */
+	/* so that they can be restored after the comparison */
+	oldch1 = *str1;
+	*str1 = '\0';
+	oldch2 = *str2;
+	*str2 = '\0';
+
+	/* this cannot happen, as we previously tested to make sure that */
+	/* the first string has a non-null segment */
+	if (one == str1) return -1;	/* arbitrary */
+
+	/* take care of the case where the two version segments are */
+	/* different types: one numeric, the other alpha (i.e. empty) */
+	/* numeric segments are always newer than alpha segments */
+	/* XXX See patch #60884 (and details) from bugzilla #50977. */
+	if (two == str2) return (isnum ? 1 : -1);
+
+	if (isnum) {
+		gsize onelen, twolen;
+		/* this used to be done by converting the digit segments */
+		/* to ints using atoi() - it's changed because long  */
+		/* digit segments can overflow an int - this should fix that. */
+
+		/* throw away any leading zeros - it's a number, right? */
+		while (*one == '0') one++;
+		while (*two == '0') two++;
+
+		/* whichever number has more digits wins */
+		onelen = strlen(one);
+		twolen = strlen(two);
+		if (onelen > twolen) return 1;
+		if (twolen > onelen) return -1;
+	}
+
+	/* strcmp will return which one is greater - even if the two */
+	/* segments are alpha or if they are numeric.  don't return  */
+	/* if they are equal because there might be more segments to */
+	/* compare */
+	rc = g_strcmp0(one, two);
+	if (rc) return (rc < 1 ? -1 : 1);
+
+	/* restore character that was replaced by null above */
+	*str1 = oldch1;
+	one = str1;
+	*str2 = oldch2;
+	two = str2;
+	}
+
+	/* this catches the case where all numeric and alpha segments have */
+	/* compared identically but the segment sepparating characters were */
+	/* different */
+	if ((!*one) && (!*two)) return 0;
+
+	/* whichever version still has characters left over wins */
+	if (!*one) return -1; else return 1;
+}
+
+/**
+ * as_utils_vercmp_complex:
+ * @version_a: the release version, e.g. 1.2.3
+ * @version_b: the release version, e.g. 1.2.3.1
+ * @flags: some #AsVersionCompareFlag
+ *
+ * Compares version numbers for sorting.
+ *
+ * Returns: -1 if a < b, +1 if a > b, 0 if they are equal, and %G_MAXINT on error
+ *
+ * Since: 0.7.15
+ */
+gint
+as_utils_vercmp_complex (const gchar *version_a,
+			 const gchar *version_b,
+			 AsVersionCompareFlag flags)
+{
+	/* sanity check */
+	if (version_a == NULL || version_b == NULL)
+		return G_MAXINT;
+
+	/* optimisation */
+	if (g_strcmp0 (version_a, version_b) == 0)
+		return 0;
+
+	/* split into sections, and try to parse */
+	if (flags & AS_VERSION_COMPARE_FLAG_USE_HEURISTICS) {
+		g_autofree gchar *str_a = as_utils_version_reparse (version_a);
+		g_autofree gchar *str_b = as_utils_version_reparse (version_b);
+		return as_utils_vercmp_rpm (str_a, str_b);
+	} else {
+		return as_utils_vercmp_rpm (version_a, version_b);
+	}
+}
+
+/**
  * as_utils_vercmp:
  * @version_a: the release version, e.g. 1.2.3
  * @version_b: the release version, e.g. 1.2.3.1
@@ -1476,8 +1679,8 @@
 gint
 as_utils_vercmp (const gchar *version_a, const gchar *version_b)
 {
-	return as_utils_vercmp_full (version_a, version_b,
-				     AS_VERSION_COMPARE_FLAG_USE_HEURISTICS);
+	return as_utils_vercmp_complex (version_a, version_b,
+					AS_VERSION_COMPARE_FLAG_USE_HEURISTICS);
 }
 
 /**
diff -Naur a/appstream-glib/libappstream-glib/as-utils.h b/appstream-glib/libappstream-glib/as-utils.h
--- a/appstream-glib/libappstream-glib/as-utils.h	2018-11-13 06:28:45.000000000 +0100
+++ b/appstream-glib/libappstream-glib/as-utils.h	2018-11-13 08:39:21.000000000 +0100
@@ -163,6 +163,12 @@
 gint		 as_utils_vercmp_full		(const gchar	*version_a,
 						 const gchar	*version_b,
 						 AsVersionCompareFlag flags);
+gchar		*as_utils_version_reparse	(const gchar	*version);
+gint		 as_utils_vercmp_rpm		(const gchar	*version_a,
+						 const gchar	*version_b);
+gint		 as_utils_vercmp_complex	(const gchar	*version_a,
+						 const gchar	*version_b,
+						 AsVersionCompareFlag flags);
 gint		 as_utils_vercmp		(const gchar	*version_a,
 						 const gchar	*version_b);
 gboolean	 as_utils_guid_is_valid		(const gchar	*guid);

This patch deprecates the following functions:

as_utils_vercmp_full
as_utils_version_parse

If you want, I can just insert the code from as_utils_vercmp_complex and as_utils_version_reparse into them.
I also prepared a simple test: org.freedesktop.appstream-test.yaml
app-id: org.freedesktop.appstream-test
runtime: org.freedesktop.Platform
runtime-version: '18.08'
sdk: org.freedesktop.Sdk
command: appstream-test
modules:
  - name: libappstream-glib
    buildsystem: meson
    config-opts:
      - -Dfonts=false
      - -Ddep11=false
      - -Drpm=false
      - -Dstemmer=false
    sources:
      - type: git
        url: https://github.com/scx/appstream-glib.git
        branch: master
        commit: 2ff970eb3cc748da336695f941356b74da16c55f
    post-install:
      - meson test
    cleanup:
      - /share/installed-tests
  - name: appstream-test
    buildsystem: simple
    sources:
      - type: script
        commands:
          - appstream-util --version
          - appstream-util vercmp 'Build 9half' 'Build 10'
          - appstream-util vercmp 'Build 9.5' 'Build 10'
          - appstream-util vercmp 'Build 9+' 'Build 10'
          - appstream-util vercmp 'Build 9a' 'Build 10'
          - appstream-util vercmp 'Build 9' 'Build 10'
          - appstream-util vercmp '9half' '10'
          - appstream-util vercmp '9.5' '10'
          - appstream-util vercmp '9+' '10'
          - appstream-util vercmp '9a' '10'
          - appstream-util vercmp '9' '10'
          - appstream-util vercmp '1.2.3' '1.2.3'
          - appstream-util vercmp '001.002.003' '001.002.003'
          - appstream-util vercmp '1.2.3' '0x1020003'
          - appstream-util vercmp '0x10203' '0x10203'
          - appstream-util vercmp '1.2.3' '1.2.4'
          - appstream-util vercmp '001.002.000' '001.002.009'
          - appstream-util vercmp '1.2.3' '1.2.2'
          - appstream-util vercmp '001.002.009' '001.002.000'
          - appstream-util vercmp '1.2.3' '1.2.3.1'
          - appstream-util vercmp '1.2.3.1' '1.2.4'
          - appstream-util vercmp '1.2.3a' '1.2.3a'
          - appstream-util vercmp '1.2.3a' '1.2.3b'
          - appstream-util vercmp '1.2.3b' '1.2.3a'
          - appstream-util vercmp '1.2.3' '1.2.3a'
          - appstream-util vercmp '1.2.3a' '1.2.3'
          - appstream-util vercmp 'alpha' 'alpha'
          - appstream-util vercmp 'alpha' 'beta'
          - appstream-util vercmp 'beta' 'alpha'
          - appstream-util vercmp '1.2a.3' '1.2a.3'
          - appstream-util vercmp '1.2a.3' '1.2b.3'
          - appstream-util vercmp '1.2b.3' '1.2a.3'
          - appstream-util vercmp '1.2.3~rc1' '1.2.3~rc1'
          - appstream-util vercmp '1.2.3~rc1' '1.2.3'
          - appstream-util vercmp '1.2.3' '1.2.3~rc1'
          - appstream-util vercmp '1.2.3~rc2' '1.2.3~rc1'
        dest-filename: appstream-test
    build-commands:
      - install -p -D -m 0755 'appstream-test' -t '/app/bin/'

Build command:
mkdir -p build && flatpak-builder 'build' 'org.freedesktop.appstream-test.yaml' --force-clean --install-deps-from='flathub'

Run command:
flatpak-builder --run 'build' 'org.freedesktop.appstream-test.yaml' 'appstream-test' 2>/dev/null

Results:
Version:	0.7.14
Build 9half < Build 10
Build 9.5 < Build 10
Build 9+ < Build 10
Build 9a < Build 10
Build 9 < Build 10
9half < 10
9.5 < 10
9+ < 10
9a < 10
9 < 10
1.2.3 = 1.2.3
001.002.003 = 001.002.003
1.2.3 = 0x1020003
0x10203 = 0x10203
1.2.3 < 1.2.4
001.002.000 < 001.002.009
1.2.3 > 1.2.2
001.002.009 > 001.002.000
1.2.3 < 1.2.3.1
1.2.3.1 < 1.2.4
1.2.3a = 1.2.3a
1.2.3a < 1.2.3b
1.2.3b > 1.2.3a
1.2.3 < 1.2.3a
1.2.3a > 1.2.3
alpha = alpha
alpha < beta
beta > alpha
1.2a.3 = 1.2a.3
1.2a.3 < 1.2b.3
1.2b.3 > 1.2a.3
1.2.3~rc1 = 1.2.3~rc1
1.2.3~rc1 < 1.2.3
1.2.3 > 1.2.3~rc1
1.2.3~rc2 > 1.2.3~rc1

See also: #270 (comment)","(I am not an appstream-glib maintainer, please do not take my reviews as authoritative.)
Importing someone else's version-comparison algorithm seems like a good approach to solving this, so I think this PR is certainly going in the right direction.
If there aren't tests for the version comparison cases that you have changed, then they seem likely to regress in future, so if I was the maintainer I'd want to see this PR also add test coverage. as_test_utils_vercmp_func() in as-self-test.c seems like the right place. In particular, it would be really good to have test coverage for the comparisons you mentioned in your bug report (9half, etc.), and for the same version comparisons that are tested in test_version_compare() in the reference implementation of Appstream (currently the right line number is https://github.com/ximion/appstream/blob/master/tests/test-basics.c#L388); that would confirm that those comparisons are right, and stop them from becoming wrong in future.
There's no need to paste proposed patches into comments: the commits in the merge request (the ""Files changed"" tab in Github's web UI) already encapsulate what you're proposing.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,272,2018-11-13T08:50:55Z,2019-02-06T12:17:24Z,2019-02-06T12:17:25Z,CLOSED,False,229,46,3,https://github.com/scx,Rewrite the version comparison algorithm,6,[],https://github.com/hughsie/appstream-glib/pull/272,https://github.com/scx,13,https://github.com/hughsie/appstream-glib/pull/272#issuecomment-441125544,"Proposed patch: libappstream-glib-rpmvercmp.patch
diff -Naur a/appstream-glib/libappstream-glib/as-utils.c b/appstream-glib/libappstream-glib/as-utils.c
--- a/appstream-glib/libappstream-glib/as-utils.c	2018-11-13 06:28:45.000000000 +0100
+++ b/appstream-glib/libappstream-glib/as-utils.c	2018-11-13 08:55:25.000000000 +0100
@@ -1463,6 +1463,209 @@
 }
 
 /**
+ * as_utils_version_reparse:
+ * @version: A version number
+ *
+ * Returns a dotted decimal version string from a version string. The supported
+ * formats are:
+ *
+ * - Dotted decimal, e.g. ""1.2.3""
+ * - Base 16, a hex number *with* a 0x prefix, e.g. ""0x10203""
+ *
+ * Anything with a '.' or that doesn't match 0x[a-f,0-9] is considered
+ * a string and returned without modification.
+ *
+ * Returns: A version number, e.g. ""1.0.3""
+ *
+ * Since: 0.7.15
+ */
+gchar *
+as_utils_version_reparse (const gchar *version)
+{
+	const gchar *version_noprefix = version;
+	gchar *endptr = NULL;
+	guint64 tmp;
+	guint base;
+
+	/* already dotted decimal */
+	if (g_strstr_len (version, -1, ""."") != NULL)
+		return g_strdup (version);
+
+	/* convert 0x prefixed strings to dotted decimal */
+	if (g_str_has_prefix (version, ""0x"")) {
+		version_noprefix += 2;
+		base = 16;
+	} else {
+		/* just return the string */
+		return g_strdup (version);
+	}
+
+	/* convert */
+	tmp = g_ascii_strtoull (version_noprefix, &endptr, base);
+	if (endptr != NULL && endptr[0] != '\0')
+		return g_strdup (version);
+	if (tmp == 0)
+		return g_strdup (version);
+	return as_utils_version_from_uint32 ((guint32) tmp, AS_VERSION_PARSE_FLAG_USE_TRIPLET);
+}
+
+// Based on: https://github.com/rpm-software-management/rpm/blob/ca8ff08e4f61f05c743797ea4afbb9bf0bce3064/lib/rpmvercmp.c#L12-L122
+/**
+ * as_utils_vercmp_rpm:
+ * @version_a: the release version, e.g. 1.2.3
+ * @version_b: the release version, e.g. 1.2.3.1
+ *
+ * Compares version numbers for sorting.
+ *
+ * Returns: -1 if a < b, +1 if a > b, 0 if they are equal
+ *
+ * Since: 0.7.15
+ */
+gint
+as_utils_vercmp_rpm (const gchar *version_a, const gchar *version_b)
+{
+	/* easy comparison to see if versions are identical */
+	if (g_strcmp0(version_a, version_b) == 0) return 0;
+
+	gchar oldch1, oldch2;
+	gchar abuf[strlen(version_a)+1], bbuf[strlen(version_b)+1];
+	gchar *str1 = abuf, *str2 = bbuf;
+	gchar * one, * two;
+	gint rc;
+	gint isnum;
+
+	g_strlcpy(str1, version_a, sizeof(abuf));
+	g_strlcpy(str2, version_b, sizeof(bbuf));
+
+	one = str1;
+	two = str2;
+
+	/* loop through each version segment of str1 and str2 and compare them */
+	while (*one || *two) {
+	while (*one && !g_ascii_isalnum(*one) && *one != '~') one++;
+	while (*two && !g_ascii_isalnum(*two) && *two != '~') two++;
+
+	/* handle the tilde separator, it sorts before everything else */
+	if (*one == '~' || *two == '~') {
+		if (*one != '~') return 1;
+		if (*two != '~') return -1;
+		one++;
+		two++;
+		continue;
+	}
+
+	/* If we ran to the end of either, we are finished with the loop */
+	if (!(*one && *two)) break;
+
+	str1 = one;
+	str2 = two;
+
+	/* grab first completely alpha or completely numeric segment */
+	/* leave one and two pointing to the start of the alpha or numeric */
+	/* segment and walk str1 and str2 to end of segment */
+	if (g_ascii_isdigit(*str1)) {
+		while (*str1 && g_ascii_isdigit(*str1)) str1++;
+		while (*str2 && g_ascii_isdigit(*str2)) str2++;
+		isnum = 1;
+	} else {
+		while (*str1 && g_ascii_isalpha(*str1)) str1++;
+		while (*str2 && g_ascii_isalpha(*str2)) str2++;
+		isnum = 0;
+	}
+
+	/* save character at the end of the alpha or numeric segment */
+	/* so that they can be restored after the comparison */
+	oldch1 = *str1;
+	*str1 = '\0';
+	oldch2 = *str2;
+	*str2 = '\0';
+
+	/* this cannot happen, as we previously tested to make sure that */
+	/* the first string has a non-null segment */
+	if (one == str1) return -1;	/* arbitrary */
+
+	/* take care of the case where the two version segments are */
+	/* different types: one numeric, the other alpha (i.e. empty) */
+	/* numeric segments are always newer than alpha segments */
+	/* XXX See patch #60884 (and details) from bugzilla #50977. */
+	if (two == str2) return (isnum ? 1 : -1);
+
+	if (isnum) {
+		gsize onelen, twolen;
+		/* this used to be done by converting the digit segments */
+		/* to ints using atoi() - it's changed because long  */
+		/* digit segments can overflow an int - this should fix that. */
+
+		/* throw away any leading zeros - it's a number, right? */
+		while (*one == '0') one++;
+		while (*two == '0') two++;
+
+		/* whichever number has more digits wins */
+		onelen = strlen(one);
+		twolen = strlen(two);
+		if (onelen > twolen) return 1;
+		if (twolen > onelen) return -1;
+	}
+
+	/* strcmp will return which one is greater - even if the two */
+	/* segments are alpha or if they are numeric.  don't return  */
+	/* if they are equal because there might be more segments to */
+	/* compare */
+	rc = g_strcmp0(one, two);
+	if (rc) return (rc < 1 ? -1 : 1);
+
+	/* restore character that was replaced by null above */
+	*str1 = oldch1;
+	one = str1;
+	*str2 = oldch2;
+	two = str2;
+	}
+
+	/* this catches the case where all numeric and alpha segments have */
+	/* compared identically but the segment sepparating characters were */
+	/* different */
+	if ((!*one) && (!*two)) return 0;
+
+	/* whichever version still has characters left over wins */
+	if (!*one) return -1; else return 1;
+}
+
+/**
+ * as_utils_vercmp_complex:
+ * @version_a: the release version, e.g. 1.2.3
+ * @version_b: the release version, e.g. 1.2.3.1
+ * @flags: some #AsVersionCompareFlag
+ *
+ * Compares version numbers for sorting.
+ *
+ * Returns: -1 if a < b, +1 if a > b, 0 if they are equal, and %G_MAXINT on error
+ *
+ * Since: 0.7.15
+ */
+gint
+as_utils_vercmp_complex (const gchar *version_a,
+			 const gchar *version_b,
+			 AsVersionCompareFlag flags)
+{
+	/* sanity check */
+	if (version_a == NULL || version_b == NULL)
+		return G_MAXINT;
+
+	/* optimisation */
+	if (g_strcmp0 (version_a, version_b) == 0)
+		return 0;
+
+	/* split into sections, and try to parse */
+	if (flags & AS_VERSION_COMPARE_FLAG_USE_HEURISTICS) {
+		g_autofree gchar *str_a = as_utils_version_reparse (version_a);
+		g_autofree gchar *str_b = as_utils_version_reparse (version_b);
+		return as_utils_vercmp_rpm (str_a, str_b);
+	} else {
+		return as_utils_vercmp_rpm (version_a, version_b);
+	}
+}
+
+/**
  * as_utils_vercmp:
  * @version_a: the release version, e.g. 1.2.3
  * @version_b: the release version, e.g. 1.2.3.1
@@ -1476,8 +1679,8 @@
 gint
 as_utils_vercmp (const gchar *version_a, const gchar *version_b)
 {
-	return as_utils_vercmp_full (version_a, version_b,
-				     AS_VERSION_COMPARE_FLAG_USE_HEURISTICS);
+	return as_utils_vercmp_complex (version_a, version_b,
+					AS_VERSION_COMPARE_FLAG_USE_HEURISTICS);
 }
 
 /**
diff -Naur a/appstream-glib/libappstream-glib/as-utils.h b/appstream-glib/libappstream-glib/as-utils.h
--- a/appstream-glib/libappstream-glib/as-utils.h	2018-11-13 06:28:45.000000000 +0100
+++ b/appstream-glib/libappstream-glib/as-utils.h	2018-11-13 08:39:21.000000000 +0100
@@ -163,6 +163,12 @@
 gint		 as_utils_vercmp_full		(const gchar	*version_a,
 						 const gchar	*version_b,
 						 AsVersionCompareFlag flags);
+gchar		*as_utils_version_reparse	(const gchar	*version);
+gint		 as_utils_vercmp_rpm		(const gchar	*version_a,
+						 const gchar	*version_b);
+gint		 as_utils_vercmp_complex	(const gchar	*version_a,
+						 const gchar	*version_b,
+						 AsVersionCompareFlag flags);
 gint		 as_utils_vercmp		(const gchar	*version_a,
 						 const gchar	*version_b);
 gboolean	 as_utils_guid_is_valid		(const gchar	*guid);

This patch deprecates the following functions:

as_utils_vercmp_full
as_utils_version_parse

If you want, I can just insert the code from as_utils_vercmp_complex and as_utils_version_reparse into them.
I also prepared a simple test: org.freedesktop.appstream-test.yaml
app-id: org.freedesktop.appstream-test
runtime: org.freedesktop.Platform
runtime-version: '18.08'
sdk: org.freedesktop.Sdk
command: appstream-test
modules:
  - name: libappstream-glib
    buildsystem: meson
    config-opts:
      - -Dfonts=false
      - -Ddep11=false
      - -Drpm=false
      - -Dstemmer=false
    sources:
      - type: git
        url: https://github.com/scx/appstream-glib.git
        branch: master
        commit: 2ff970eb3cc748da336695f941356b74da16c55f
    post-install:
      - meson test
    cleanup:
      - /share/installed-tests
  - name: appstream-test
    buildsystem: simple
    sources:
      - type: script
        commands:
          - appstream-util --version
          - appstream-util vercmp 'Build 9half' 'Build 10'
          - appstream-util vercmp 'Build 9.5' 'Build 10'
          - appstream-util vercmp 'Build 9+' 'Build 10'
          - appstream-util vercmp 'Build 9a' 'Build 10'
          - appstream-util vercmp 'Build 9' 'Build 10'
          - appstream-util vercmp '9half' '10'
          - appstream-util vercmp '9.5' '10'
          - appstream-util vercmp '9+' '10'
          - appstream-util vercmp '9a' '10'
          - appstream-util vercmp '9' '10'
          - appstream-util vercmp '1.2.3' '1.2.3'
          - appstream-util vercmp '001.002.003' '001.002.003'
          - appstream-util vercmp '1.2.3' '0x1020003'
          - appstream-util vercmp '0x10203' '0x10203'
          - appstream-util vercmp '1.2.3' '1.2.4'
          - appstream-util vercmp '001.002.000' '001.002.009'
          - appstream-util vercmp '1.2.3' '1.2.2'
          - appstream-util vercmp '001.002.009' '001.002.000'
          - appstream-util vercmp '1.2.3' '1.2.3.1'
          - appstream-util vercmp '1.2.3.1' '1.2.4'
          - appstream-util vercmp '1.2.3a' '1.2.3a'
          - appstream-util vercmp '1.2.3a' '1.2.3b'
          - appstream-util vercmp '1.2.3b' '1.2.3a'
          - appstream-util vercmp '1.2.3' '1.2.3a'
          - appstream-util vercmp '1.2.3a' '1.2.3'
          - appstream-util vercmp 'alpha' 'alpha'
          - appstream-util vercmp 'alpha' 'beta'
          - appstream-util vercmp 'beta' 'alpha'
          - appstream-util vercmp '1.2a.3' '1.2a.3'
          - appstream-util vercmp '1.2a.3' '1.2b.3'
          - appstream-util vercmp '1.2b.3' '1.2a.3'
          - appstream-util vercmp '1.2.3~rc1' '1.2.3~rc1'
          - appstream-util vercmp '1.2.3~rc1' '1.2.3'
          - appstream-util vercmp '1.2.3' '1.2.3~rc1'
          - appstream-util vercmp '1.2.3~rc2' '1.2.3~rc1'
        dest-filename: appstream-test
    build-commands:
      - install -p -D -m 0755 'appstream-test' -t '/app/bin/'

Build command:
mkdir -p build && flatpak-builder 'build' 'org.freedesktop.appstream-test.yaml' --force-clean --install-deps-from='flathub'

Run command:
flatpak-builder --run 'build' 'org.freedesktop.appstream-test.yaml' 'appstream-test' 2>/dev/null

Results:
Version:	0.7.14
Build 9half < Build 10
Build 9.5 < Build 10
Build 9+ < Build 10
Build 9a < Build 10
Build 9 < Build 10
9half < 10
9.5 < 10
9+ < 10
9a < 10
9 < 10
1.2.3 = 1.2.3
001.002.003 = 001.002.003
1.2.3 = 0x1020003
0x10203 = 0x10203
1.2.3 < 1.2.4
001.002.000 < 001.002.009
1.2.3 > 1.2.2
001.002.009 > 001.002.000
1.2.3 < 1.2.3.1
1.2.3.1 < 1.2.4
1.2.3a = 1.2.3a
1.2.3a < 1.2.3b
1.2.3b > 1.2.3a
1.2.3 < 1.2.3a
1.2.3a > 1.2.3
alpha = alpha
alpha < beta
beta > alpha
1.2a.3 = 1.2a.3
1.2a.3 < 1.2b.3
1.2b.3 > 1.2a.3
1.2.3~rc1 = 1.2.3~rc1
1.2.3~rc1 < 1.2.3
1.2.3 > 1.2.3~rc1
1.2.3~rc2 > 1.2.3~rc1

See also: #270 (comment)","@smcv
According to your suggestion, I added some tests.
https://github.com/scx/appstream-glib/blob/7239b36bae4e0860c4376e1d4fbb40b6ddaf79e4/libappstream-glib/as-self-test.c#L5069-L5132
Latest patch: libappstream-glib-rpmvercmp.patch

There's no need to paste proposed patches into comments: the commits in the merge request (the ""Files changed"" tab in Github's web UI) already encapsulate what you're proposing.

Yes, I know. I thought it could be useful for someone who follows this discussion and would like to apply my patch to own build right now. Comments here say more than short descriptions in my commits, so it can help to choose the most suitable version of this patch.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,272,2018-11-13T08:50:55Z,2019-02-06T12:17:24Z,2019-02-06T12:17:25Z,CLOSED,False,229,46,3,https://github.com/scx,Rewrite the version comparison algorithm,6,[],https://github.com/hughsie/appstream-glib/pull/272,https://github.com/hughsie,14,https://github.com/hughsie/appstream-glib/pull/272#issuecomment-461003341,"Proposed patch: libappstream-glib-rpmvercmp.patch
diff -Naur a/appstream-glib/libappstream-glib/as-utils.c b/appstream-glib/libappstream-glib/as-utils.c
--- a/appstream-glib/libappstream-glib/as-utils.c	2018-11-13 06:28:45.000000000 +0100
+++ b/appstream-glib/libappstream-glib/as-utils.c	2018-11-13 08:55:25.000000000 +0100
@@ -1463,6 +1463,209 @@
 }
 
 /**
+ * as_utils_version_reparse:
+ * @version: A version number
+ *
+ * Returns a dotted decimal version string from a version string. The supported
+ * formats are:
+ *
+ * - Dotted decimal, e.g. ""1.2.3""
+ * - Base 16, a hex number *with* a 0x prefix, e.g. ""0x10203""
+ *
+ * Anything with a '.' or that doesn't match 0x[a-f,0-9] is considered
+ * a string and returned without modification.
+ *
+ * Returns: A version number, e.g. ""1.0.3""
+ *
+ * Since: 0.7.15
+ */
+gchar *
+as_utils_version_reparse (const gchar *version)
+{
+	const gchar *version_noprefix = version;
+	gchar *endptr = NULL;
+	guint64 tmp;
+	guint base;
+
+	/* already dotted decimal */
+	if (g_strstr_len (version, -1, ""."") != NULL)
+		return g_strdup (version);
+
+	/* convert 0x prefixed strings to dotted decimal */
+	if (g_str_has_prefix (version, ""0x"")) {
+		version_noprefix += 2;
+		base = 16;
+	} else {
+		/* just return the string */
+		return g_strdup (version);
+	}
+
+	/* convert */
+	tmp = g_ascii_strtoull (version_noprefix, &endptr, base);
+	if (endptr != NULL && endptr[0] != '\0')
+		return g_strdup (version);
+	if (tmp == 0)
+		return g_strdup (version);
+	return as_utils_version_from_uint32 ((guint32) tmp, AS_VERSION_PARSE_FLAG_USE_TRIPLET);
+}
+
+// Based on: https://github.com/rpm-software-management/rpm/blob/ca8ff08e4f61f05c743797ea4afbb9bf0bce3064/lib/rpmvercmp.c#L12-L122
+/**
+ * as_utils_vercmp_rpm:
+ * @version_a: the release version, e.g. 1.2.3
+ * @version_b: the release version, e.g. 1.2.3.1
+ *
+ * Compares version numbers for sorting.
+ *
+ * Returns: -1 if a < b, +1 if a > b, 0 if they are equal
+ *
+ * Since: 0.7.15
+ */
+gint
+as_utils_vercmp_rpm (const gchar *version_a, const gchar *version_b)
+{
+	/* easy comparison to see if versions are identical */
+	if (g_strcmp0(version_a, version_b) == 0) return 0;
+
+	gchar oldch1, oldch2;
+	gchar abuf[strlen(version_a)+1], bbuf[strlen(version_b)+1];
+	gchar *str1 = abuf, *str2 = bbuf;
+	gchar * one, * two;
+	gint rc;
+	gint isnum;
+
+	g_strlcpy(str1, version_a, sizeof(abuf));
+	g_strlcpy(str2, version_b, sizeof(bbuf));
+
+	one = str1;
+	two = str2;
+
+	/* loop through each version segment of str1 and str2 and compare them */
+	while (*one || *two) {
+	while (*one && !g_ascii_isalnum(*one) && *one != '~') one++;
+	while (*two && !g_ascii_isalnum(*two) && *two != '~') two++;
+
+	/* handle the tilde separator, it sorts before everything else */
+	if (*one == '~' || *two == '~') {
+		if (*one != '~') return 1;
+		if (*two != '~') return -1;
+		one++;
+		two++;
+		continue;
+	}
+
+	/* If we ran to the end of either, we are finished with the loop */
+	if (!(*one && *two)) break;
+
+	str1 = one;
+	str2 = two;
+
+	/* grab first completely alpha or completely numeric segment */
+	/* leave one and two pointing to the start of the alpha or numeric */
+	/* segment and walk str1 and str2 to end of segment */
+	if (g_ascii_isdigit(*str1)) {
+		while (*str1 && g_ascii_isdigit(*str1)) str1++;
+		while (*str2 && g_ascii_isdigit(*str2)) str2++;
+		isnum = 1;
+	} else {
+		while (*str1 && g_ascii_isalpha(*str1)) str1++;
+		while (*str2 && g_ascii_isalpha(*str2)) str2++;
+		isnum = 0;
+	}
+
+	/* save character at the end of the alpha or numeric segment */
+	/* so that they can be restored after the comparison */
+	oldch1 = *str1;
+	*str1 = '\0';
+	oldch2 = *str2;
+	*str2 = '\0';
+
+	/* this cannot happen, as we previously tested to make sure that */
+	/* the first string has a non-null segment */
+	if (one == str1) return -1;	/* arbitrary */
+
+	/* take care of the case where the two version segments are */
+	/* different types: one numeric, the other alpha (i.e. empty) */
+	/* numeric segments are always newer than alpha segments */
+	/* XXX See patch #60884 (and details) from bugzilla #50977. */
+	if (two == str2) return (isnum ? 1 : -1);
+
+	if (isnum) {
+		gsize onelen, twolen;
+		/* this used to be done by converting the digit segments */
+		/* to ints using atoi() - it's changed because long  */
+		/* digit segments can overflow an int - this should fix that. */
+
+		/* throw away any leading zeros - it's a number, right? */
+		while (*one == '0') one++;
+		while (*two == '0') two++;
+
+		/* whichever number has more digits wins */
+		onelen = strlen(one);
+		twolen = strlen(two);
+		if (onelen > twolen) return 1;
+		if (twolen > onelen) return -1;
+	}
+
+	/* strcmp will return which one is greater - even if the two */
+	/* segments are alpha or if they are numeric.  don't return  */
+	/* if they are equal because there might be more segments to */
+	/* compare */
+	rc = g_strcmp0(one, two);
+	if (rc) return (rc < 1 ? -1 : 1);
+
+	/* restore character that was replaced by null above */
+	*str1 = oldch1;
+	one = str1;
+	*str2 = oldch2;
+	two = str2;
+	}
+
+	/* this catches the case where all numeric and alpha segments have */
+	/* compared identically but the segment sepparating characters were */
+	/* different */
+	if ((!*one) && (!*two)) return 0;
+
+	/* whichever version still has characters left over wins */
+	if (!*one) return -1; else return 1;
+}
+
+/**
+ * as_utils_vercmp_complex:
+ * @version_a: the release version, e.g. 1.2.3
+ * @version_b: the release version, e.g. 1.2.3.1
+ * @flags: some #AsVersionCompareFlag
+ *
+ * Compares version numbers for sorting.
+ *
+ * Returns: -1 if a < b, +1 if a > b, 0 if they are equal, and %G_MAXINT on error
+ *
+ * Since: 0.7.15
+ */
+gint
+as_utils_vercmp_complex (const gchar *version_a,
+			 const gchar *version_b,
+			 AsVersionCompareFlag flags)
+{
+	/* sanity check */
+	if (version_a == NULL || version_b == NULL)
+		return G_MAXINT;
+
+	/* optimisation */
+	if (g_strcmp0 (version_a, version_b) == 0)
+		return 0;
+
+	/* split into sections, and try to parse */
+	if (flags & AS_VERSION_COMPARE_FLAG_USE_HEURISTICS) {
+		g_autofree gchar *str_a = as_utils_version_reparse (version_a);
+		g_autofree gchar *str_b = as_utils_version_reparse (version_b);
+		return as_utils_vercmp_rpm (str_a, str_b);
+	} else {
+		return as_utils_vercmp_rpm (version_a, version_b);
+	}
+}
+
+/**
  * as_utils_vercmp:
  * @version_a: the release version, e.g. 1.2.3
  * @version_b: the release version, e.g. 1.2.3.1
@@ -1476,8 +1679,8 @@
 gint
 as_utils_vercmp (const gchar *version_a, const gchar *version_b)
 {
-	return as_utils_vercmp_full (version_a, version_b,
-				     AS_VERSION_COMPARE_FLAG_USE_HEURISTICS);
+	return as_utils_vercmp_complex (version_a, version_b,
+					AS_VERSION_COMPARE_FLAG_USE_HEURISTICS);
 }
 
 /**
diff -Naur a/appstream-glib/libappstream-glib/as-utils.h b/appstream-glib/libappstream-glib/as-utils.h
--- a/appstream-glib/libappstream-glib/as-utils.h	2018-11-13 06:28:45.000000000 +0100
+++ b/appstream-glib/libappstream-glib/as-utils.h	2018-11-13 08:39:21.000000000 +0100
@@ -163,6 +163,12 @@
 gint		 as_utils_vercmp_full		(const gchar	*version_a,
 						 const gchar	*version_b,
 						 AsVersionCompareFlag flags);
+gchar		*as_utils_version_reparse	(const gchar	*version);
+gint		 as_utils_vercmp_rpm		(const gchar	*version_a,
+						 const gchar	*version_b);
+gint		 as_utils_vercmp_complex	(const gchar	*version_a,
+						 const gchar	*version_b,
+						 AsVersionCompareFlag flags);
 gint		 as_utils_vercmp		(const gchar	*version_a,
 						 const gchar	*version_b);
 gboolean	 as_utils_guid_is_valid		(const gchar	*guid);

This patch deprecates the following functions:

as_utils_vercmp_full
as_utils_version_parse

If you want, I can just insert the code from as_utils_vercmp_complex and as_utils_version_reparse into them.
I also prepared a simple test: org.freedesktop.appstream-test.yaml
app-id: org.freedesktop.appstream-test
runtime: org.freedesktop.Platform
runtime-version: '18.08'
sdk: org.freedesktop.Sdk
command: appstream-test
modules:
  - name: libappstream-glib
    buildsystem: meson
    config-opts:
      - -Dfonts=false
      - -Ddep11=false
      - -Drpm=false
      - -Dstemmer=false
    sources:
      - type: git
        url: https://github.com/scx/appstream-glib.git
        branch: master
        commit: 2ff970eb3cc748da336695f941356b74da16c55f
    post-install:
      - meson test
    cleanup:
      - /share/installed-tests
  - name: appstream-test
    buildsystem: simple
    sources:
      - type: script
        commands:
          - appstream-util --version
          - appstream-util vercmp 'Build 9half' 'Build 10'
          - appstream-util vercmp 'Build 9.5' 'Build 10'
          - appstream-util vercmp 'Build 9+' 'Build 10'
          - appstream-util vercmp 'Build 9a' 'Build 10'
          - appstream-util vercmp 'Build 9' 'Build 10'
          - appstream-util vercmp '9half' '10'
          - appstream-util vercmp '9.5' '10'
          - appstream-util vercmp '9+' '10'
          - appstream-util vercmp '9a' '10'
          - appstream-util vercmp '9' '10'
          - appstream-util vercmp '1.2.3' '1.2.3'
          - appstream-util vercmp '001.002.003' '001.002.003'
          - appstream-util vercmp '1.2.3' '0x1020003'
          - appstream-util vercmp '0x10203' '0x10203'
          - appstream-util vercmp '1.2.3' '1.2.4'
          - appstream-util vercmp '001.002.000' '001.002.009'
          - appstream-util vercmp '1.2.3' '1.2.2'
          - appstream-util vercmp '001.002.009' '001.002.000'
          - appstream-util vercmp '1.2.3' '1.2.3.1'
          - appstream-util vercmp '1.2.3.1' '1.2.4'
          - appstream-util vercmp '1.2.3a' '1.2.3a'
          - appstream-util vercmp '1.2.3a' '1.2.3b'
          - appstream-util vercmp '1.2.3b' '1.2.3a'
          - appstream-util vercmp '1.2.3' '1.2.3a'
          - appstream-util vercmp '1.2.3a' '1.2.3'
          - appstream-util vercmp 'alpha' 'alpha'
          - appstream-util vercmp 'alpha' 'beta'
          - appstream-util vercmp 'beta' 'alpha'
          - appstream-util vercmp '1.2a.3' '1.2a.3'
          - appstream-util vercmp '1.2a.3' '1.2b.3'
          - appstream-util vercmp '1.2b.3' '1.2a.3'
          - appstream-util vercmp '1.2.3~rc1' '1.2.3~rc1'
          - appstream-util vercmp '1.2.3~rc1' '1.2.3'
          - appstream-util vercmp '1.2.3' '1.2.3~rc1'
          - appstream-util vercmp '1.2.3~rc2' '1.2.3~rc1'
        dest-filename: appstream-test
    build-commands:
      - install -p -D -m 0755 'appstream-test' -t '/app/bin/'

Build command:
mkdir -p build && flatpak-builder 'build' 'org.freedesktop.appstream-test.yaml' --force-clean --install-deps-from='flathub'

Run command:
flatpak-builder --run 'build' 'org.freedesktop.appstream-test.yaml' 'appstream-test' 2>/dev/null

Results:
Version:	0.7.14
Build 9half < Build 10
Build 9.5 < Build 10
Build 9+ < Build 10
Build 9a < Build 10
Build 9 < Build 10
9half < 10
9.5 < 10
9+ < 10
9a < 10
9 < 10
1.2.3 = 1.2.3
001.002.003 = 001.002.003
1.2.3 = 0x1020003
0x10203 = 0x10203
1.2.3 < 1.2.4
001.002.000 < 001.002.009
1.2.3 > 1.2.2
001.002.009 > 001.002.000
1.2.3 < 1.2.3.1
1.2.3.1 < 1.2.4
1.2.3a = 1.2.3a
1.2.3a < 1.2.3b
1.2.3b > 1.2.3a
1.2.3 < 1.2.3a
1.2.3a > 1.2.3
alpha = alpha
alpha < beta
beta > alpha
1.2a.3 = 1.2a.3
1.2a.3 < 1.2b.3
1.2b.3 > 1.2a.3
1.2.3~rc1 = 1.2.3~rc1
1.2.3~rc1 < 1.2.3
1.2.3 > 1.2.3~rc1
1.2.3~rc2 > 1.2.3~rc1

See also: #270 (comment)",Closing in favour of #279 -- thanks to everyone that helped.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,273,2018-11-16T16:47:29Z,2019-02-06T12:14:56Z,2019-02-06T12:14:56Z,CLOSED,False,42,43,1,https://github.com/BAKFR,Search icons in $prefix/share even when $prefix/usr exists.,1,[],https://github.com/hughsie/appstream-glib/pull/273,https://github.com/BAKFR,1,https://github.com/hughsie/appstream-glib/pull/273,"Fixes #271
With this commit, as_utils_find_icon_filename_full() loop over both $prefix/usr/share and $prefix/share. If it doesn't find the icon in the first folder, it goes into the second instead of aborting the search. The case prefix == NULL still works as before.
Feel free to ask for clarification or for code changes.","Fixes #271
With this commit, as_utils_find_icon_filename_full() loop over both $prefix/usr/share and $prefix/share. If it doesn't find the icon in the first folder, it goes into the second instead of aborting the search. The case prefix == NULL still works as before.
Feel free to ask for clarification or for code changes.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,273,2018-11-16T16:47:29Z,2019-02-06T12:14:56Z,2019-02-06T12:14:56Z,CLOSED,False,42,43,1,https://github.com/BAKFR,Search icons in $prefix/share even when $prefix/usr exists.,1,[],https://github.com/hughsie/appstream-glib/pull/273,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/273#issuecomment-440636135,"Fixes #271
With this commit, as_utils_find_icon_filename_full() loop over both $prefix/usr/share and $prefix/share. If it doesn't find the icon in the first folder, it goes into the second instead of aborting the search. The case prefix == NULL still works as before.
Feel free to ask for clarification or for code changes.","I'm a bit confused. Isn't the prefix supposed to contain the usr section too? The prefix is certainly a different thing to the destdir... https://www.gnu.org/prep/standards/html_node/Directory-Variables.html
If I understand correctly your code is changing the icon search to look in prefix/share and also destdir/share, rather than the old code that looked to see if destdir/usr existed, and if not used destdir as the prefix.
If that's right, I'm not sure we want to support both -- in fact, maybe we move the fallback out of as_utils_find_icon_filename_full and just call it twice with different destdirs.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,273,2018-11-16T16:47:29Z,2019-02-06T12:14:56Z,2019-02-06T12:14:56Z,CLOSED,False,42,43,1,https://github.com/BAKFR,Search icons in $prefix/share even when $prefix/usr exists.,1,[],https://github.com/hughsie/appstream-glib/pull/273,https://github.com/BAKFR,3,https://github.com/hughsie/appstream-glib/pull/273#issuecomment-441096559,"Fixes #271
With this commit, as_utils_find_icon_filename_full() loop over both $prefix/usr/share and $prefix/share. If it doesn't find the icon in the first folder, it goes into the second instead of aborting the search. The case prefix == NULL still works as before.
Feel free to ask for clarification or for code changes.","I'm not familiar with the GNU terminology. I've read your link, and indeed, what I've called $prefix in my commit message is the destdir.
From what I understand, the prefix would be an ""usr"" folder used to store things, usually /usr or /usr/local. The destdir would correspond to the root folder. In flatpak context, /app is the prefix used by applications, right ?

If I understand correctly your code is changing the icon search to look in prefix/share and also destdir/share, rather than the old code that looked to see if destdir/usr existed, and if not used destdir as the prefix.

Basically, yes.
The behavior between both code is almost identical. The only change is when destdir/usr exists and the icon is not found: the old code will returns an error, while the new code will try to use destdir as the prefix anyway.
When destdir/usr doesn't exist, both code will use destdir as the prefix.

If that's right, I'm not sure we want to support both -- in fact, maybe we move the fallback out of as_utils_find_icon_filename_full and just call it twice with different destdirs.

Currently as_utils_find_icon_filename_full() is sometimes called with a prefix (in client/as-compose.c) and sometimes with a destdir (in libappstream-builder/plugins/asb-plugin-icon.c). Hence the need for this fallback.
Do we need this fallback ? Can we not create two distinct functions ?",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,273,2018-11-16T16:47:29Z,2019-02-06T12:14:56Z,2019-02-06T12:14:56Z,CLOSED,False,42,43,1,https://github.com/BAKFR,Search icons in $prefix/share even when $prefix/usr exists.,1,[],https://github.com/hughsie/appstream-glib/pull/273,https://github.com/hughsie,4,https://github.com/hughsie/appstream-glib/pull/273#issuecomment-461002699,"Fixes #271
With this commit, as_utils_find_icon_filename_full() loop over both $prefix/usr/share and $prefix/share. If it doesn't find the icon in the first folder, it goes into the second instead of aborting the search. The case prefix == NULL still works as before.
Feel free to ask for clarification or for code changes.","I don't think $prefix/usr makes sense, sorry.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,275,2018-12-05T16:10:59Z,2018-12-05T16:41:05Z,2018-12-06T17:42:17Z,MERGED,True,0,1,1,https://github.com/leio,build: Remove unnecessary gtk dependency for builder,1,[],https://github.com/hughsie/appstream-glib/pull/275,https://github.com/leio,1,https://github.com/hughsie/appstream-glib/pull/275,"Builder checks for gtk+, but the result isn't used anywhere, thus
introducing an unnecessary gtk+ dependency.
-Dbuilder=true -Dfonts=true would still depend on gdk, but a
-Dbuilder=true -Dfonts=false build doesn't anymore.
Closes: #274","Builder checks for gtk+, but the result isn't used anywhere, thus
introducing an unnecessary gtk+ dependency.
-Dbuilder=true -Dfonts=true would still depend on gdk, but a
-Dbuilder=true -Dfonts=false build doesn't anymore.
Closes: #274",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,276,2018-12-14T11:27:50Z,2018-12-14T13:48:10Z,2019-02-06T12:33:00Z,MERGED,True,229,44,3,https://github.com/kalev,Various locking and thread safety fixes for AsStore,5,[],https://github.com/hughsie/appstream-glib/pull/276,https://github.com/kalev,1,https://github.com/hughsie/appstream-glib/pull/276,"This should fix a number of gnome-software crashes in F29 that usually involve one thread modifying AsStore, and the other one reading back from it.
It's not always that gnome-software spawns two worker threads (this we could fix by adding locking on gnome-software side); sometimes it's the AsStore internal file monitor watch callback firing in the main loop and then changing AsStore from the callback (which runs in a different thread from the plugin loader's worker threads).","This should fix a number of gnome-software crashes in F29 that usually involve one thread modifying AsStore, and the other one reading back from it.
It's not always that gnome-software spawns two worker threads (this we could fix by adding locking on gnome-software side); sometimes it's the AsStore internal file monitor watch callback firing in the main loop and then changing AsStore from the callback (which runs in a different thread from the plugin loader's worker threads).",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,276,2018-12-14T11:27:50Z,2018-12-14T13:48:10Z,2019-02-06T12:33:00Z,MERGED,True,229,44,3,https://github.com/kalev,Various locking and thread safety fixes for AsStore,5,[],https://github.com/hughsie/appstream-glib/pull/276,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/276#issuecomment-447310253,"This should fix a number of gnome-software crashes in F29 that usually involve one thread modifying AsStore, and the other one reading back from it.
It's not always that gnome-software spawns two worker threads (this we could fix by adding locking on gnome-software side); sometimes it's the AsStore internal file monitor watch callback firing in the main loop and then changing AsStore from the callback (which runs in a different thread from the plugin loader's worker threads).","Squashed down, LGTM. Thanks for working on this.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,278,2018-12-27T13:56:09Z,2018-12-27T20:00:38Z,2018-12-27T20:00:43Z,MERGED,True,2,2,1,https://github.com/kalev,store: Fix threading related crashes when creating the search cache,1,[],https://github.com/hughsie/appstream-glib/pull/278,https://github.com/kalev,1,https://github.com/hughsie/appstream-glib/pull/278,"Keep a ref on the AsApp in the worker thread to make sure it doesn't get
destroyed in another thread while being processed.
https://bugzilla.redhat.com/show_bug.cgi?id=1662130
https://bugzilla.redhat.com/show_bug.cgi?id=1661701
https://bugzilla.redhat.com/show_bug.cgi?id=1661382
https://bugzilla.redhat.com/show_bug.cgi?id=1658140
https://bugzilla.redhat.com/show_bug.cgi?id=1644026
https://bugzilla.redhat.com/show_bug.cgi?id=1639558
https://bugzilla.redhat.com/show_bug.cgi?id=1570096","Keep a ref on the AsApp in the worker thread to make sure it doesn't get
destroyed in another thread while being processed.
https://bugzilla.redhat.com/show_bug.cgi?id=1662130
https://bugzilla.redhat.com/show_bug.cgi?id=1661701
https://bugzilla.redhat.com/show_bug.cgi?id=1661382
https://bugzilla.redhat.com/show_bug.cgi?id=1658140
https://bugzilla.redhat.com/show_bug.cgi?id=1644026
https://bugzilla.redhat.com/show_bug.cgi?id=1639558
https://bugzilla.redhat.com/show_bug.cgi?id=1570096",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,279,2019-01-05T15:34:42Z,2019-02-06T12:16:50Z,2019-02-06T12:16:54Z,MERGED,True,52,33,2,https://github.com/kalev,Use rpmvercmp instead of internal vercmp when built with rpm support,2,[],https://github.com/hughsie/appstream-glib/pull/279,https://github.com/kalev,1,https://github.com/hughsie/appstream-glib/pull/279,"This should help make sure that the version comparison algorithm matches exactly with Fedora's when built on Fedora and supports caret, tilde, and plus characters that all have special semantics in Fedora packages.
#270","This should help make sure that the version comparison algorithm matches exactly with Fedora's when built on Fedora and supports caret, tilde, and plus characters that all have special semantics in Fedora packages.
#270",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,279,2019-01-05T15:34:42Z,2019-02-06T12:16:50Z,2019-02-06T12:16:54Z,MERGED,True,52,33,2,https://github.com/kalev,Use rpmvercmp instead of internal vercmp when built with rpm support,2,[],https://github.com/hughsie/appstream-glib/pull/279,https://github.com/ignatenkobrain,2,https://github.com/hughsie/appstream-glib/pull/279#issuecomment-451667255,"This should help make sure that the version comparison algorithm matches exactly with Fedora's when built on Fedora and supports caret, tilde, and plus characters that all have special semantics in Fedora packages.
#270","Actually + doesn't have any special meaning, it's same as .",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,279,2019-01-05T15:34:42Z,2019-02-06T12:16:50Z,2019-02-06T12:16:54Z,MERGED,True,52,33,2,https://github.com/kalev,Use rpmvercmp instead of internal vercmp when built with rpm support,2,[],https://github.com/hughsie/appstream-glib/pull/279,https://github.com/ximion,3,https://github.com/hughsie/appstream-glib/pull/279#issuecomment-451717207,"This should help make sure that the version comparison algorithm matches exactly with Fedora's when built on Fedora and supports caret, tilde, and plus characters that all have special semantics in Fedora packages.
#270","Ultimately Richard's choice, but I would be concerned by a compile-flag changing the behavior of version comparison on some distributions, but not others in case the algorithm is ever adjusted in either RPM or appstream-glib.
By just always using the internal algorithm instead of the RPM one, at least the behavior would be consistent everywhere. AppStream is designed to be cross-distro, so (potentially) having a version comparison throw out a different result depending on where appstream-glib was built feels wrong.
(It would be neat to have the one version comparison that rules them all, but writing it is very hard (there are so many corner cases to take care of...))",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,279,2019-01-05T15:34:42Z,2019-02-06T12:16:50Z,2019-02-06T12:16:54Z,MERGED,True,52,33,2,https://github.com/kalev,Use rpmvercmp instead of internal vercmp when built with rpm support,2,[],https://github.com/hughsie/appstream-glib/pull/279,https://github.com/hughsie,4,https://github.com/hughsie/appstream-glib/pull/279#issuecomment-451729456,"This should help make sure that the version comparison algorithm matches exactly with Fedora's when built on Fedora and supports caret, tilde, and plus characters that all have special semantics in Fedora packages.
#270","I'm a little hesitant to depend on rpm, but I'm more concerned about rpmvercmp() and the internal vercmp() differing in results. Would we accept a patch to use the dpkg vercmp routine instead? Maybe it would be best to use rpmvercmp, and then fall back to an internal version of the rpmvercmp code.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,279,2019-01-05T15:34:42Z,2019-02-06T12:16:50Z,2019-02-06T12:16:54Z,MERGED,True,52,33,2,https://github.com/kalev,Use rpmvercmp instead of internal vercmp when built with rpm support,2,[],https://github.com/hughsie/appstream-glib/pull/279,https://github.com/kalev,5,https://github.com/hughsie/appstream-glib/pull/279#issuecomment-451893817,"This should help make sure that the version comparison algorithm matches exactly with Fedora's when built on Fedora and supports caret, tilde, and plus characters that all have special semantics in Fedora packages.
#270","Just to make it clear, I'm not pushing much for this solution, just want to get something that works for Fedora packages. Copying the librpm implementation would be fine with me as well. When we chatted about this last year, @hughsie thought that maybe it would make sense to link to librpm instead so that's why the patch here.
So the constraints we have. On one hand, on the distro side we have:

appstream data composed from packages, so we need to match the version comparison algorithm from packages;

and on the upstream side:

appdata files written by upstream and we need to make sure the versions in  tags compare the same way in all distros.

These are somewhat conflicting goals, sadly. I don't have any good ideas how to solve both.
I think in practice the rpm and dpkg algorithms are fairly similar and if any upstream goes outside of the subset that's supported by both they are slightly crazy :)
Maybe the best way to solve this situation here is to make sure we have good test coverage and keep the appstream-glib and appstream tests in sync, so that the algorithms are known to be compatible? And make sure that the same tests pass with both rpmvercmp and with the internal vercmp implementation.
Also, I think if we go with the patch here, we are still going to have to improve the internal vercmp implementation along the lines suggested in #270 -- we can't leave the appstream-builder that runs in flatpak (and doesn't link with librpm) out in the cold.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,279,2019-01-05T15:34:42Z,2019-02-06T12:16:50Z,2019-02-06T12:16:54Z,MERGED,True,52,33,2,https://github.com/kalev,Use rpmvercmp instead of internal vercmp when built with rpm support,2,[],https://github.com/hughsie/appstream-glib/pull/279,https://github.com/smcv,6,https://github.com/hughsie/appstream-glib/pull/279#issuecomment-452013019,"This should help make sure that the version comparison algorithm matches exactly with Fedora's when built on Fedora and supports caret, tilde, and plus characters that all have special semantics in Fedora packages.
#270","Maybe the best way to solve this situation here is to make sure we have good test coverage

This is always a good idea, IMO. If there are indeed corner cases where RPM and dpkg differ, comments in the test data would be a great place to highlight these.

Actually + doesn't have any special meaning, it's same as .

FYI, + sorts earlier than . in dpkg. If they're exactly equivalent in RPM, then that's the sort of difference that should be captured by test data.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,279,2019-01-05T15:34:42Z,2019-02-06T12:16:50Z,2019-02-06T12:16:54Z,MERGED,True,52,33,2,https://github.com/kalev,Use rpmvercmp instead of internal vercmp when built with rpm support,2,[],https://github.com/hughsie/appstream-glib/pull/279,https://github.com/ignatenkobrain,7,https://github.com/hughsie/appstream-glib/pull/279#issuecomment-452051204,"This should help make sure that the version comparison algorithm matches exactly with Fedora's when built on Fedora and supports caret, tilde, and plus characters that all have special semantics in Fedora packages.
#270","Why can't we use semver,?",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,279,2019-01-05T15:34:42Z,2019-02-06T12:16:50Z,2019-02-06T12:16:54Z,MERGED,True,52,33,2,https://github.com/kalev,Use rpmvercmp instead of internal vercmp when built with rpm support,2,[],https://github.com/hughsie/appstream-glib/pull/279,https://github.com/ximion,8,https://github.com/hughsie/appstream-glib/pull/279#issuecomment-452054927,"This should help make sure that the version comparison algorithm matches exactly with Fedora's when built on Fedora and supports caret, tilde, and plus characters that all have special semantics in Fedora packages.
#270","@smcv

This is always a good idea, IMO. If there are indeed corner cases where RPM and dpkg differ, comments in the test data would be a great place to highlight these.

Jup, having comprehensive tests would be awesome. The AppStream testsuite has a few, but a lot more would be needed. I expect the differences to only affect few corner cases though.
The only reason why I used the RPM vercmp algorithm in AppStream (libappstream) to begin with was to have some generic way to compare versions. I originally wanted to use the dpkg algorithm, but the RPM one was more readable and compact. The only reason why I documented this was so people know about it if they wonder how versions are compared in the implementation, and not as a spec recommendation.
@ignatenkobrain Strict semver just doesn't work in the real world. I'd bet that only about 50% of version numbers in the Debian archive would fit that scheme, maybe even less.
@kalev My original intent was to not actually have AppStream compare version numbers provided by the package manager. For that purpose, a software management frontend should just call into PackageKit, which for sure will do the exact version comparison the package manager uses.
What the version comparison was intended for is things like Flatpaks and firmware.
I see a need to compare those version numbers to package version numbers, but for that I am actually planning a dedicated comparison function which handles epochs correctly depending on the source of a component (e.g. when comparing a Flatpak component to a package component, the epoch of the version number from the latter would be dropped. Otherwise, the package would always win). I didn't get around to implementing that yet though (features like this, I learned, need more thought before just throwing them in).",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,279,2019-01-05T15:34:42Z,2019-02-06T12:16:50Z,2019-02-06T12:16:54Z,MERGED,True,52,33,2,https://github.com/kalev,Use rpmvercmp instead of internal vercmp when built with rpm support,2,[],https://github.com/hughsie/appstream-glib/pull/279,https://github.com/smcv,9,https://github.com/hughsie/appstream-glib/pull/279#issuecomment-452219226,"This should help make sure that the version comparison algorithm matches exactly with Fedora's when built on Fedora and supports caret, tilde, and plus characters that all have special semantics in Fedora packages.
#270","Why can't we use semver,?

semver is a very simplified versioning scheme. If upstreams want to use it then they're welcome to (any reasonable version comparison scheme should sort semver versions correctly), and it's infinitely better than having no formalized version numbering at all, but it's unsuitable for many upstreams' release processes.
One of the most notable things semver can't represent is non-linear releases: any time a project has a stable branch and a development branch, it's very easy for a release on the development branch to make it impossible to allocate a new version number for the stable branch, because the unique version number that semver would require it to have is already taken. For instance, suppose you have foo 1.2.3, and you fix a bug with changes that are complex and have a regression risk. The result has to be 1.2.4. Now try to fix a security vulnerability in 1.2.3, without pulling in the risky bug fixes; you can't, because semver says bug fixes always increment the micro version, but you already used version number 1.2.4.
The next-more-complex thing after semver is to restrict version numbers to be tuples of dot-separated integers (1.2.3.4 should be interpreted as (1, 2, 3, 4)), which are equally easy for something like RPM or dpkg to compare, and any reasonable version comparison function should sort them correctly. However, that doesn't allow for non-numeric version number parts like ""1.5a"" or ""git20190108"". Those are also fairly straightforward to add (obviously 1.5a should be less than 1.5b).
Introduce alphas, betas and release candidates and suddenly you also need RPM/dpkg semantics for ~, which sorts less than anything, even the empty string (so that version 1.5 beta 1 can be represented as 1.5~beta1, which is less than 1.5); and now you already have 90% of the version comparison algorithm from RPM or dpkg, so you might as well have the whole thing.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,281,2019-01-09T10:05:03Z,2019-01-14T13:52:44Z,2019-04-09T14:35:11Z,CLOSED,False,13,2,1,https://github.com/kalev,Link with -Bsymbolic if it's supported by the linker,1,[],https://github.com/hughsie/appstream-glib/pull/281,https://github.com/kalev,1,https://github.com/hughsie/appstream-glib/pull/281,"This should fix crashes when libappstream-glib and libappstream are both
linked into the same process by avoiding intra-library PLT jumps.
Flatpak master recently started linking with libappstream-glib, and this
caused issues in other apps that link with both libappstream and flatpak
(e.g. KDE Discover), now pulling in both libappstream-glib and
libappstream into the same process space.
Also bump required meson version to 0.46.0 for has_link_argument
support.
https://bugs.archlinux.org/task/61198","This should fix crashes when libappstream-glib and libappstream are both
linked into the same process by avoiding intra-library PLT jumps.
Flatpak master recently started linking with libappstream-glib, and this
caused issues in other apps that link with both libappstream and flatpak
(e.g. KDE Discover), now pulling in both libappstream-glib and
libappstream into the same process space.
Also bump required meson version to 0.46.0 for has_link_argument
support.
https://bugs.archlinux.org/task/61198",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,281,2019-01-09T10:05:03Z,2019-01-14T13:52:44Z,2019-04-09T14:35:11Z,CLOSED,False,13,2,1,https://github.com/kalev,Link with -Bsymbolic if it's supported by the linker,1,[],https://github.com/hughsie/appstream-glib/pull/281,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/281#issuecomment-452642136,"This should fix crashes when libappstream-glib and libappstream are both
linked into the same process by avoiding intra-library PLT jumps.
Flatpak master recently started linking with libappstream-glib, and this
caused issues in other apps that link with both libappstream and flatpak
(e.g. KDE Discover), now pulling in both libappstream-glib and
libappstream into the same process space.
Also bump required meson version to 0.46.0 for has_link_argument
support.
https://bugs.archlinux.org/task/61198","If CI passes, LGTM, thanks.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,281,2019-01-09T10:05:03Z,2019-01-14T13:52:44Z,2019-04-09T14:35:11Z,CLOSED,False,13,2,1,https://github.com/kalev,Link with -Bsymbolic if it's supported by the linker,1,[],https://github.com/hughsie/appstream-glib/pull/281,https://github.com/kalev,3,https://github.com/hughsie/appstream-glib/pull/281#issuecomment-452648840,"This should fix crashes when libappstream-glib and libappstream are both
linked into the same process by avoiding intra-library PLT jumps.
Flatpak master recently started linking with libappstream-glib, and this
caused issues in other apps that link with both libappstream and flatpak
(e.g. KDE Discover), now pulling in both libappstream-glib and
libappstream into the same process space.
Also bump required meson version to 0.46.0 for has_link_argument
support.
https://bugs.archlinux.org/task/61198","@hughsie Thanks, CI should be fixed now.
@aleixpol Can you test this, please?",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,281,2019-01-09T10:05:03Z,2019-01-14T13:52:44Z,2019-04-09T14:35:11Z,CLOSED,False,13,2,1,https://github.com/kalev,Link with -Bsymbolic if it's supported by the linker,1,[],https://github.com/hughsie/appstream-glib/pull/281,https://github.com/aleixpol,4,https://github.com/hughsie/appstream-glib/pull/281#issuecomment-452708185,"This should fix crashes when libappstream-glib and libappstream are both
linked into the same process by avoiding intra-library PLT jumps.
Flatpak master recently started linking with libappstream-glib, and this
caused issues in other apps that link with both libappstream and flatpak
(e.g. KDE Discover), now pulling in both libappstream-glib and
libappstream into the same process space.
Also bump required meson version to 0.46.0 for has_link_argument
support.
https://bugs.archlinux.org/task/61198","Still got the freeze, now with these warnings:
(process:30227): GLib-GObject-WARNING **: 15:03:20.165: cannot register existing type 'AsIcon'

(process:30227): GLib-GObject-WARNING **: 15:03:20.165: cannot add private field to invalid (non-instantiatable) type '<invalid>'

(process:30227): GLib-CRITICAL **: 15:03:20.165: g_once_init_leave: assertion 'result != 0' failed

(process:30227): GLib-GObject-CRITICAL **: 15:03:20.165: g_object_new_with_properties: assertion 'G_TYPE_IS_OBJECT (object_type)' failed

Here's the backtrace:
#0 syscall() at /usr/lib/libc.so.6
#1 g_cond_wait() at /usr/lib/libglib-2.0.so.0
#2 g_once_init_enter() at /usr/lib/libglib-2.0.so.0
#3 as_icon_get_type() at /usr/src/debug/appstream-glib/libappstream-glib/as-icon.c:59
#4 AS_ICON() at /usr/src/debug/appstream-glib/libappstream-glib/as-icon.h:35
#5 as_icon_new() at /usr/src/debug/appstream-glib/libappstream-glib/as-icon.c:1032
#6 as_app_node_parse_child() at /usr/src/debug/appstream-glib/libappstream-glib/as-app.c:5032
#7 as_app_node_parse_full() at /usr/src/debug/appstream-glib/libappstream-glib/as-app.c:5443
#8 as_store_from_root() at /usr/src/debug/appstream-glib/libappstream-glib/as-store.c:1810
#9 as_store_from_xml() at /usr/src/debug/appstream-glib/libappstream-glib/as-store.c:2347
#10 ??() at /usr/lib/libflatpak.so.0
#11 ??() at /usr/lib/libflatpak.so.0
#12 ??() at /usr/lib/libflatpak.so.0
#13 ??() at /usr/lib/libflatpak.so.0
#14 flatpak_installation_get_installed_ref() at /usr/lib/libflatpak.so.0
#15 FlatpakBackend::getInstalledRefForApp() at /home/apol/devel/frameworks/discover/libdiscover/backends/FlatpakBackend/FlatpakBackend.cpp:223
#16 FlatpakBackend::updateAppState() at /home/apol/devel/frameworks/discover/libdiscover/backends/FlatpakBackend/FlatpakBackend.cpp:1070
#17 FlatpakBackend::addResource() at /home/apol/devel/frameworks/discover/libdiscover/backends/FlatpakBackend/FlatpakBackend.cpp:541
#18 FlatpakBackend::integrateRemote(_FlatpakInstallation*, _FlatpakRemote*)::$_25::operator()() const() at /home/apol/devel/frameworks/discover/libdiscover/backends/FlatpakBackend/FlatpakBackend.cpp:645
#19 QtPrivate::FunctorCall<QtPrivate::IndexesList<>, QtPrivate::List<>, void, FlatpakBackend::integrateRemote(_FlatpakInstallation*, _FlatpakRemote*)::$_25>::call(FlatpakBackend::integrateRemote(_FlatpakInstallation*, _FlatpakRemote*)::$_25&, void**)() at /usr/include/qt/QtCore/qobjectdefs_impl.h:146
#20 QtPrivate::Functor<FlatpakBackend::integrateRemote(_FlatpakInstallation*, _FlatpakRemote*)::$_25, 0>::call<QtPrivate::List<>, void>(FlatpakBackend::integrateRemote(_FlatpakInstallation*, _FlatpakRemote*)::$_25&, void*, void**)() at /usr/include/qt/QtCore/qobjectdefs_impl.h:256
#21 QtPrivate::QFunctorSlotObject<FlatpakBackend::integrateRemote(_FlatpakInstallation*, _FlatpakRemote*)::$_25, 0, QtPrivate::List<>, void>::impl(int, QtPrivate::QSlotObjectBase*, QObject*, void**, bool*)() at /usr/include/qt/QtCore/qobjectdefs_impl.h:439
#22 QMetaObject::activate(QObject*, int, int, void**)() at /usr/lib/libQt5Core.so.5
#23 QFutureWatcherBase::event(QEvent*)() at /usr/lib/libQt5Core.so.5
#24 QApplicationPrivate::notify_helper(QObject*, QEvent*)() at /usr/lib/libQt5Widgets.so.5
#25 QApplication::notify(QObject*, QEvent*)() at /usr/lib/libQt5Widgets.so.5
#26 QCoreApplication::notifyInternal2(QObject*, QEvent*)() at /usr/lib/libQt5Core.so.5
#27 QCoreApplicationPrivate::sendPostedEvents(QObject*, int, QThreadData*)() at /usr/lib/libQt5Core.so.5
#28 ??() at /usr/lib/libQt5Core.so.5
#29 g_main_context_dispatch() at /usr/lib/libglib-2.0.so.0
#30 ??() at /usr/lib/libglib-2.0.so.0
#31 g_main_context_iteration() at /usr/lib/libglib-2.0.so.0
#32 QEventDispatcherGlib::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)() at /usr/lib/libQt5Core.so.5
#33 QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)() at /usr/lib/libQt5Core.so.5
#34 QCoreApplication::exec()() at /usr/lib/libQt5Core.so.5
#35 main() at /home/apol/devel/frameworks/discover/discover/main.cpp:168",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,281,2019-01-09T10:05:03Z,2019-01-14T13:52:44Z,2019-04-09T14:35:11Z,CLOSED,False,13,2,1,https://github.com/kalev,Link with -Bsymbolic if it's supported by the linker,1,[],https://github.com/hughsie/appstream-glib/pull/281,https://github.com/kalev,5,https://github.com/hughsie/appstream-glib/pull/281#issuecomment-452713132,"This should fix crashes when libappstream-glib and libappstream are both
linked into the same process by avoiding intra-library PLT jumps.
Flatpak master recently started linking with libappstream-glib, and this
caused issues in other apps that link with both libappstream and flatpak
(e.g. KDE Discover), now pulling in both libappstream-glib and
libappstream into the same process space.
Also bump required meson version to 0.46.0 for has_link_argument
support.
https://bugs.archlinux.org/task/61198","Hm, maybe appstream needs a similar patch too.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,281,2019-01-09T10:05:03Z,2019-01-14T13:52:44Z,2019-04-09T14:35:11Z,CLOSED,False,13,2,1,https://github.com/kalev,Link with -Bsymbolic if it's supported by the linker,1,[],https://github.com/hughsie/appstream-glib/pull/281,https://github.com/ximion,6,https://github.com/hughsie/appstream-glib/pull/281#issuecomment-453140124,"This should fix crashes when libappstream-glib and libappstream are both
linked into the same process by avoiding intra-library PLT jumps.
Flatpak master recently started linking with libappstream-glib, and this
caused issues in other apps that link with both libappstream and flatpak
(e.g. KDE Discover), now pulling in both libappstream-glib and
libappstream into the same process space.
Also bump required meson version to 0.46.0 for has_link_argument
support.
https://bugs.archlinux.org/task/61198","I don't see how Bsymbolic should help here, and ""Unfortunately, –Bsymbolic is a dangerous option which can often result in some nonintuitive side effects."" doesn't sound great either (after reading about that option).
The only options I see are:

Finally make just one AppStream library happen
Make Flatpak not use asglib / only use it internally
Use Valve/Collabora's libcapsule

The first option will take a few years I fear, the second option could work but I need to look at what Flatpak is actually using asglib for, and the last option is quite an odd hack as well.
I don't know of any way to not have the linker confused, and this error is not limited to just Discover but a lot of other software that uses libappstream and may also link against Flatpak.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,281,2019-01-09T10:05:03Z,2019-01-14T13:52:44Z,2019-04-09T14:35:11Z,CLOSED,False,13,2,1,https://github.com/kalev,Link with -Bsymbolic if it's supported by the linker,1,[],https://github.com/hughsie/appstream-glib/pull/281,https://github.com/smcv,7,https://github.com/hughsie/appstream-glib/pull/281#issuecomment-453235761,"This should fix crashes when libappstream-glib and libappstream are both
linked into the same process by avoiding intra-library PLT jumps.
Flatpak master recently started linking with libappstream-glib, and this
caused issues in other apps that link with both libappstream and flatpak
(e.g. KDE Discover), now pulling in both libappstream-glib and
libappstream into the same process space.
Also bump required meson version to 0.46.0 for has_link_argument
support.
https://bugs.archlinux.org/task/61198","Normally, there would be a fourth option: use versioned symbols in both libappstream and appstream-glib, so that as_whatever() resolves to as_whatever@LIBAPPSTREAM_0.x or as_whatever@APPSTREAM_GLIB_0.y.
However, GObject APIs can't use that if they use the same namespacing prefix, because the GType registry is a flat global namespace.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,281,2019-01-09T10:05:03Z,2019-01-14T13:52:44Z,2019-04-09T14:35:11Z,CLOSED,False,13,2,1,https://github.com/kalev,Link with -Bsymbolic if it's supported by the linker,1,[],https://github.com/hughsie/appstream-glib/pull/281,https://github.com/smcv,8,https://github.com/hughsie/appstream-glib/pull/281#issuecomment-453237863,"This should fix crashes when libappstream-glib and libappstream are both
linked into the same process by avoiding intra-library PLT jumps.
Flatpak master recently started linking with libappstream-glib, and this
caused issues in other apps that link with both libappstream and flatpak
(e.g. KDE Discover), now pulling in both libappstream-glib and
libappstream into the same process space.
Also bump required meson version to 0.46.0 for has_link_argument
support.
https://bugs.archlinux.org/task/61198","Use Valve/Collabora's libcapsule

I don't think libcapsule helps you here. It's specifically for use with chroots and containers where a particular library might exist both ""inside"" and ""outside"".
If the Flatpak part and/or the part that uses libappstream are plugins, then you could use dlmopen(), which is the glibc function that libcapsule uses to get symbol namespaces; or maybe RTLD_LOCAL would even be enough.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,281,2019-01-09T10:05:03Z,2019-01-14T13:52:44Z,2019-04-09T14:35:11Z,CLOSED,False,13,2,1,https://github.com/kalev,Link with -Bsymbolic if it's supported by the linker,1,[],https://github.com/hughsie/appstream-glib/pull/281,https://github.com/smcv,9,https://github.com/hughsie/appstream-glib/pull/281#issuecomment-453238215,"This should fix crashes when libappstream-glib and libappstream are both
linked into the same process by avoiding intra-library PLT jumps.
Flatpak master recently started linking with libappstream-glib, and this
caused issues in other apps that link with both libappstream and flatpak
(e.g. KDE Discover), now pulling in both libappstream-glib and
libappstream into the same process space.
Also bump required meson version to 0.46.0 for has_link_argument
support.
https://bugs.archlinux.org/task/61198","No, dlmopen doesn't help you either, because GObject type names are a flat global namespace, and both libappstream and appstream-glib want to use the name AsIcon.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,281,2019-01-09T10:05:03Z,2019-01-14T13:52:44Z,2019-04-09T14:35:11Z,CLOSED,False,13,2,1,https://github.com/kalev,Link with -Bsymbolic if it's supported by the linker,1,[],https://github.com/hughsie/appstream-glib/pull/281,https://github.com/smcv,10,https://github.com/hughsie/appstream-glib/pull/281#issuecomment-453239926,"This should fix crashes when libappstream-glib and libappstream are both
linked into the same process by avoiding intra-library PLT jumps.
Flatpak master recently started linking with libappstream-glib, and this
caused issues in other apps that link with both libappstream and flatpak
(e.g. KDE Discover), now pulling in both libappstream-glib and
libappstream into the same process space.
Also bump required meson version to 0.46.0 for has_link_argument
support.
https://bugs.archlinux.org/task/61198","Make Flatpak not use asglib / only use it internally

The only thing in the libflatpak.so.0 shared library that uses asglib is flatpak_dir_load_appstream_store(), which finds AppStream metadata for a remote and calls as_store_from_file().
That seems to just be a convenience function used by flatpak search in the CLI, so it might be feasible to move it outside the shared library and into the flatpak(1) command-line tool. The FlatpakDir object should probably have a method to get the filename of the AppStream XML instead.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,281,2019-01-09T10:05:03Z,2019-01-14T13:52:44Z,2019-04-09T14:35:11Z,CLOSED,False,13,2,1,https://github.com/kalev,Link with -Bsymbolic if it's supported by the linker,1,[],https://github.com/hughsie/appstream-glib/pull/281,https://github.com/smcv,11,https://github.com/hughsie/appstream-glib/pull/281#issuecomment-453240978,"This should fix crashes when libappstream-glib and libappstream are both
linked into the same process by avoiding intra-library PLT jumps.
Flatpak master recently started linking with libappstream-glib, and this
caused issues in other apps that link with both libappstream and flatpak
(e.g. KDE Discover), now pulling in both libappstream-glib and
libappstream into the same process space.
Also bump required meson version to 0.46.0 for has_link_argument
support.
https://bugs.archlinux.org/task/61198",See also flatpak/flatpak#2549,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,281,2019-01-09T10:05:03Z,2019-01-14T13:52:44Z,2019-04-09T14:35:11Z,CLOSED,False,13,2,1,https://github.com/kalev,Link with -Bsymbolic if it's supported by the linker,1,[],https://github.com/hughsie/appstream-glib/pull/281,https://github.com/smcv,12,https://github.com/hughsie/appstream-glib/pull/281#issuecomment-453265384,"This should fix crashes when libappstream-glib and libappstream are both
linked into the same process by avoiding intra-library PLT jumps.
Flatpak master recently started linking with libappstream-glib, and this
caused issues in other apps that link with both libappstream and flatpak
(e.g. KDE Discover), now pulling in both libappstream-glib and
libappstream into the same process space.
Also bump required meson version to 0.46.0 for has_link_argument
support.
https://bugs.archlinux.org/task/61198","The only thing in the libflatpak.so.0 shared library that uses asglib is flatpak_dir_load_appstream_store()

Unfortunately that's out-of-date information, and appstream-glib code is now reachable from public APIs in the libflatpak shared library.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,281,2019-01-09T10:05:03Z,2019-01-14T13:52:44Z,2019-04-09T14:35:11Z,CLOSED,False,13,2,1,https://github.com/kalev,Link with -Bsymbolic if it's supported by the linker,1,[],https://github.com/hughsie/appstream-glib/pull/281,https://github.com/kalev,13,https://github.com/hughsie/appstream-glib/pull/281#issuecomment-454011461,"This should fix crashes when libappstream-glib and libappstream are both
linked into the same process by avoiding intra-library PLT jumps.
Flatpak master recently started linking with libappstream-glib, and this
caused issues in other apps that link with both libappstream and flatpak
(e.g. KDE Discover), now pulling in both libappstream-glib and
libappstream into the same process space.
Also bump required meson version to 0.46.0 for has_link_argument
support.
https://bugs.archlinux.org/task/61198",@matthiasclasen fixed this on the flatpak side by dropping the libappstream-glib dependency from libflatpak and doing the appdata parsing manually using GMarkup. Let's close this PR here.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,281,2019-01-09T10:05:03Z,2019-01-14T13:52:44Z,2019-04-09T14:35:11Z,CLOSED,False,13,2,1,https://github.com/kalev,Link with -Bsymbolic if it's supported by the linker,1,[],https://github.com/hughsie/appstream-glib/pull/281,https://github.com/kalev,14,https://github.com/hughsie/appstream-glib/pull/281#issuecomment-454011564,"This should fix crashes when libappstream-glib and libappstream are both
linked into the same process by avoiding intra-library PLT jumps.
Flatpak master recently started linking with libappstream-glib, and this
caused issues in other apps that link with both libappstream and flatpak
(e.g. KDE Discover), now pulling in both libappstream-glib and
libappstream into the same process space.
Also bump required meson version to 0.46.0 for has_link_argument
support.
https://bugs.archlinux.org/task/61198",flatpak/flatpak#2580 is the fix.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,281,2019-01-09T10:05:03Z,2019-01-14T13:52:44Z,2019-04-09T14:35:11Z,CLOSED,False,13,2,1,https://github.com/kalev,Link with -Bsymbolic if it's supported by the linker,1,[],https://github.com/hughsie/appstream-glib/pull/281,https://github.com/ximion,15,https://github.com/hughsie/appstream-glib/pull/281#issuecomment-454012962,"This should fix crashes when libappstream-glib and libappstream are both
linked into the same process by avoiding intra-library PLT jumps.
Flatpak master recently started linking with libappstream-glib, and this
caused issues in other apps that link with both libappstream and flatpak
(e.g. KDE Discover), now pulling in both libappstream-glib and
libappstream into the same process space.
Also bump required meson version to 0.46.0 for has_link_argument
support.
https://bugs.archlinux.org/task/61198","Nice! This resolves the issue for now, and fortunately the changes in Flatpak weren't actually that invasive or complicated (I feared Flatpak was using a lot more AppStream features via asglib).",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,281,2019-01-09T10:05:03Z,2019-01-14T13:52:44Z,2019-04-09T14:35:11Z,CLOSED,False,13,2,1,https://github.com/kalev,Link with -Bsymbolic if it's supported by the linker,1,[],https://github.com/hughsie/appstream-glib/pull/281,https://github.com/matthiasclasen,16,https://github.com/hughsie/appstream-glib/pull/281#issuecomment-454044733,"This should fix crashes when libappstream-glib and libappstream are both
linked into the same process by avoiding intra-library PLT jumps.
Flatpak master recently started linking with libappstream-glib, and this
caused issues in other apps that link with both libappstream and flatpak
(e.g. KDE Discover), now pulling in both libappstream-glib and
libappstream into the same process space.
Also bump required meson version to 0.46.0 for has_link_argument
support.
https://bugs.archlinux.org/task/61198",I still did not like doing this extra work. appstream and libappstream <> libappstream-glib is an example for what not to do in spec and library development,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,281,2019-01-09T10:05:03Z,2019-01-14T13:52:44Z,2019-04-09T14:35:11Z,CLOSED,False,13,2,1,https://github.com/kalev,Link with -Bsymbolic if it's supported by the linker,1,[],https://github.com/hughsie/appstream-glib/pull/281,https://github.com/ximion,17,https://github.com/hughsie/appstream-glib/pull/281#issuecomment-454052139,"This should fix crashes when libappstream-glib and libappstream are both
linked into the same process by avoiding intra-library PLT jumps.
Flatpak master recently started linking with libappstream-glib, and this
caused issues in other apps that link with both libappstream and flatpak
(e.g. KDE Discover), now pulling in both libappstream-glib and
libappstream into the same process space.
Also bump required meson version to 0.46.0 for has_link_argument
support.
https://bugs.archlinux.org/task/61198","@hughsie and I are talking about that problem for a while now, and he recently suggested just to transition over to libappstream - the reason why asglib was originally created doesn't exist anymore for years. The only real issue is that it will take quite a bit of work and a lot of time to do that, if we don't want to risk breaking things.
At least there shouldn't be any behaviour differences between the libs anymore at the current point in time. I am working on finding and fixing them by spec clarifications or changes to asglib or libas, and Richard and I are talking about spec changes prior to making them to ensure there is no new divergence between asglib and libas. So in regards to raw AppStream spec compliance there shouldn't be an issue anymore, you only run into problem in cases like this (and obviously lost synergies when every feature has to be implemented twice).",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,282,2019-01-09T10:17:55Z,2019-01-09T10:28:04Z,2019-01-09T10:28:15Z,MERGED,True,7,8,3,https://github.com/kalev,"CI: Update Fedora from 25 to 29, and Debian from Stretch to Buster",1,[],https://github.com/hughsie/appstream-glib/pull/282,https://github.com/kalev,1,https://github.com/hughsie/appstream-glib/pull/282,"This gets us new meson for #281,
and also makes it possible to enable -Ddep11=true for Debian as it's no
longer blocked by too old meson in Stretch.","This gets us new meson for #281,
and also makes it possible to enable -Ddep11=true for Debian as it's no
longer blocked by too old meson in Stretch.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,282,2019-01-09T10:17:55Z,2019-01-09T10:28:04Z,2019-01-09T10:28:15Z,MERGED,True,7,8,3,https://github.com/kalev,"CI: Update Fedora from 25 to 29, and Debian from Stretch to Buster",1,[],https://github.com/hughsie/appstream-glib/pull/282,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/282#issuecomment-452645985,"This gets us new meson for #281,
and also makes it possible to enable -Ddep11=true for Debian as it's no
longer blocked by too old meson in Stretch.","Assuming CI passes, LGTM.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,283,2019-01-21T19:54:56Z,2019-01-23T15:56:26Z,2020-05-21T10:05:28Z,MERGED,True,140,118,3,https://github.com/pwithnall,Rework CSM ↔ OARS mappings,8,[],https://github.com/hughsie/appstream-glib/pull/283,https://github.com/pwithnall,1,https://github.com/hughsie/appstream-glib/pull/283,"Various changes to the CSM ↔ OARS mappings to fix #280.
Includes a unit test.","Various changes to the CSM ↔ OARS mappings to fix #280.
Includes a unit test.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,283,2019-01-21T19:54:56Z,2019-01-23T15:56:26Z,2020-05-21T10:05:28Z,MERGED,True,140,118,3,https://github.com/pwithnall,Rework CSM ↔ OARS mappings,8,[],https://github.com/hughsie/appstream-glib/pull/283,https://github.com/pwithnall,2,https://github.com/hughsie/appstream-glib/pull/283#issuecomment-456819002,"Various changes to the CSM ↔ OARS mappings to fix #280.
Includes a unit test.",Updated to address review comments.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,284,2019-01-22T09:30:23Z,2019-01-22T15:36:26Z,2019-01-22T15:36:29Z,MERGED,True,92,1,5,https://github.com/hughsie,Add support for per-release URLs,1,['enhancement'],https://github.com/hughsie/appstream-glib/pull/284,https://github.com/hughsie,1,https://github.com/hughsie/appstream-glib/pull/284,,,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,284,2019-01-22T09:30:23Z,2019-01-22T15:36:26Z,2019-01-22T15:36:29Z,MERGED,True,92,1,5,https://github.com/hughsie,Add support for per-release URLs,1,['enhancement'],https://github.com/hughsie/appstream-glib/pull/284,https://github.com/kalev,2,https://github.com/hughsie/appstream-glib/pull/284#issuecomment-456442469,,Looks good to me!,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,285,2019-01-31T00:51:48Z,2019-01-31T07:45:22Z,2019-01-31T07:45:22Z,MERGED,True,6,0,2,https://github.com/robert-ancell,Add support for CONTACT URLs,1,[],https://github.com/hughsie/appstream-glib/pull/285,https://github.com/robert-ancell,1,https://github.com/hughsie/appstream-glib/pull/285,"Added in AppStream spec:
ximion/appstream@556f011","Added in AppStream spec:
ximion/appstream@556f011",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,286,2019-02-04T10:31:23Z,2019-02-04T10:38:28Z,2019-02-04T10:38:28Z,MERGED,True,3,0,1,https://github.com/maxice8,libappstream-glib/meson.build: pass -DAS_COMPILATION to gir compiler,1,[],https://github.com/hughsie/appstream-glib/pull/286,https://github.com/maxice8,1,https://github.com/hughsie/appstream-glib/pull/286,"This fixes cross building of gir using Yocto Project/Buildroot
method.
This is also done on:
atk with -DATK_COMPILATION,
gdk-pixbuf with -DGDK_PIXBUF_COMPILATION,
libgusb with -DGUSB_COMPILATION.","This fixes cross building of gir using Yocto Project/Buildroot
method.
This is also done on:
atk with -DATK_COMPILATION,
gdk-pixbuf with -DGDK_PIXBUF_COMPILATION,
libgusb with -DGUSB_COMPILATION.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,287,2019-02-06T12:04:51Z,2019-02-06T12:32:38Z,2019-02-06T12:32:40Z,MERGED,True,2,78,3,https://github.com/hughsie,Do not install the libappstream-builder shared library,1,['enhancement'],https://github.com/hughsie/appstream-glib/pull/287,https://github.com/hughsie,1,https://github.com/hughsie/appstream-glib/pull/287,"Nothing uses it, and it's not API or ABI stable.","Nothing uses it, and it's not API or ABI stable.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,288,2019-02-06T18:45:47Z,2019-02-08T19:12:09Z,2019-02-08T19:12:09Z,CLOSED,False,339,42,13,https://github.com/Jehan,Wip/jehan/win32 port,14,[],https://github.com/hughsie/appstream-glib/pull/288,https://github.com/Jehan,1,https://github.com/hughsie/appstream-glib/pull/288,"As discussed on #252, this ports appstream-glib to Windows.
With all the changes done, I could successfully build the library, it works on GIMP, and the unit tests work fine too.
Though note that I configured with many options false:
Project options:
  Option        Current Value Possible Values Description                        
  ------        ------------- --------------- -----------                        
  alpm          false         [true, false]   enable ALPM support                
  builder       false         [true, false]   enable AppStream builder           
  dep11         false         [true, false]   enable DEP-11                      
  fonts         true          [true, false]   enable font support                
  gtk-doc       false         [true, false]   generate API reference             
  introspection false         [true, false]   generate GObject Introspection data
  man           true          [true, false]   generate man pages                 
  rpm           false         [true, false]   enable RPM support                 
  stemmer       false         [true, false]   enable stemmer support 

For the time being, I don't think I need most of these (for GIMP extensions, for which we want to add management through metadata; as a reminder of why I need these). If I realize I do, I would gladly try to port whatever part of code these options need. But for now, I went the easy route (which was annoying enough as it is! :P).","As discussed on #252, this ports appstream-glib to Windows.
With all the changes done, I could successfully build the library, it works on GIMP, and the unit tests work fine too.
Though note that I configured with many options false:
Project options:
  Option        Current Value Possible Values Description                        
  ------        ------------- --------------- -----------                        
  alpm          false         [true, false]   enable ALPM support                
  builder       false         [true, false]   enable AppStream builder           
  dep11         false         [true, false]   enable DEP-11                      
  fonts         true          [true, false]   enable font support                
  gtk-doc       false         [true, false]   generate API reference             
  introspection false         [true, false]   generate GObject Introspection data
  man           true          [true, false]   generate man pages                 
  rpm           false         [true, false]   enable RPM support                 
  stemmer       false         [true, false]   enable stemmer support 

For the time being, I don't think I need most of these (for GIMP extensions, for which we want to add management through metadata; as a reminder of why I need these). If I realize I do, I would gladly try to port whatever part of code these options need. But for now, I went the easy route (which was annoying enough as it is! :P).",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,288,2019-02-06T18:45:47Z,2019-02-08T19:12:09Z,2019-02-08T19:12:09Z,CLOSED,False,339,42,13,https://github.com/Jehan,Wip/jehan/win32 port,14,[],https://github.com/hughsie/appstream-glib/pull/288,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/288#issuecomment-461795602,"As discussed on #252, this ports appstream-glib to Windows.
With all the changes done, I could successfully build the library, it works on GIMP, and the unit tests work fine too.
Though note that I configured with many options false:
Project options:
  Option        Current Value Possible Values Description                        
  ------        ------------- --------------- -----------                        
  alpm          false         [true, false]   enable ALPM support                
  builder       false         [true, false]   enable AppStream builder           
  dep11         false         [true, false]   enable DEP-11                      
  fonts         true          [true, false]   enable font support                
  gtk-doc       false         [true, false]   generate API reference             
  introspection false         [true, false]   generate GObject Introspection data
  man           true          [true, false]   generate man pages                 
  rpm           false         [true, false]   enable RPM support                 
  stemmer       false         [true, false]   enable stemmer support 

For the time being, I don't think I need most of these (for GIMP extensions, for which we want to add management through metadata; as a reminder of why I need these). If I realize I do, I would gladly try to port whatever part of code these options need. But for now, I went the easy route (which was annoying enough as it is! :P).","@Jehan looks great! I've simplified it down in my branch -- removing some of the stuff you're not going to be using. Don't worry tho, I know the API :) Can you have a look at wip/hughsie/win32 and see if it work for you please?",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,288,2019-02-06T18:45:47Z,2019-02-08T19:12:09Z,2019-02-08T19:12:09Z,CLOSED,False,339,42,13,https://github.com/Jehan,Wip/jehan/win32 port,14,[],https://github.com/hughsie/appstream-glib/pull/288,https://github.com/Jehan,3,https://github.com/hughsie/appstream-glib/pull/288#issuecomment-461801619,"As discussed on #252, this ports appstream-glib to Windows.
With all the changes done, I could successfully build the library, it works on GIMP, and the unit tests work fine too.
Though note that I configured with many options false:
Project options:
  Option        Current Value Possible Values Description                        
  ------        ------------- --------------- -----------                        
  alpm          false         [true, false]   enable ALPM support                
  builder       false         [true, false]   enable AppStream builder           
  dep11         false         [true, false]   enable DEP-11                      
  fonts         true          [true, false]   enable font support                
  gtk-doc       false         [true, false]   generate API reference             
  introspection false         [true, false]   generate GObject Introspection data
  man           true          [true, false]   generate man pages                 
  rpm           false         [true, false]   enable RPM support                 
  stemmer       false         [true, false]   enable stemmer support 

For the time being, I don't think I need most of these (for GIMP extensions, for which we want to add management through metadata; as a reminder of why I need these). If I realize I do, I would gladly try to port whatever part of code these options need. But for now, I went the easy route (which was annoying enough as it is! :P).","Argh you removed all my hard work on using Win32 Uuid API, fnmatch equivalent and whatnot! 😛
Well if you are sure we won't need these in GIMP (where we will mostly need the lib to read appdata per extension, as well as extension store appdata for installation), I guess it's ok. But for the record, for stuff like all the GUID functions for instance, I checked it worked the same (the unit tests on GUID at the very least worked fine with all expected results).
Yet if you prefer to just set these as ""unsupported"" on Windows and are sure we won't need these anyway (now or in the future; I have not looked in details how/why it is used), I'm not going to fight. :-)

see if it work for you please?

Not going to test today, as I have some other priorities. But will crossbuild your branch and test GIMP in a Windows VM early next week. Thanks for the review! :-)",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,288,2019-02-06T18:45:47Z,2019-02-08T19:12:09Z,2019-02-08T19:12:09Z,CLOSED,False,339,42,13,https://github.com/Jehan,Wip/jehan/win32 port,14,[],https://github.com/hughsie/appstream-glib/pull/288,https://github.com/Jehan,4,https://github.com/hughsie/appstream-glib/pull/288#issuecomment-461873530,"As discussed on #252, this ports appstream-glib to Windows.
With all the changes done, I could successfully build the library, it works on GIMP, and the unit tests work fine too.
Though note that I configured with many options false:
Project options:
  Option        Current Value Possible Values Description                        
  ------        ------------- --------------- -----------                        
  alpm          false         [true, false]   enable ALPM support                
  builder       false         [true, false]   enable AppStream builder           
  dep11         false         [true, false]   enable DEP-11                      
  fonts         true          [true, false]   enable font support                
  gtk-doc       false         [true, false]   generate API reference             
  introspection false         [true, false]   generate GObject Introspection data
  man           true          [true, false]   generate man pages                 
  rpm           false         [true, false]   enable RPM support                 
  stemmer       false         [true, false]   enable stemmer support 

For the time being, I don't think I need most of these (for GIMP extensions, for which we want to add management through metadata; as a reminder of why I need these). If I realize I do, I would gladly try to port whatever part of code these options need. But for now, I went the easy route (which was annoying enough as it is! :P).","@hughsie Well in the end, I lied to myself that I would not be intrigued enough to want and test today! So I just tried to cross-build your branch for Win and it failed with a few errors. Did you manage to build for Windows?
Should I make patches for this branch?",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,288,2019-02-06T18:45:47Z,2019-02-08T19:12:09Z,2019-02-08T19:12:09Z,CLOSED,False,339,42,13,https://github.com/Jehan,Wip/jehan/win32 port,14,[],https://github.com/hughsie/appstream-glib/pull/288,https://github.com/Jehan,5,https://github.com/hughsie/appstream-glib/pull/288#issuecomment-461880278,"As discussed on #252, this ports appstream-glib to Windows.
With all the changes done, I could successfully build the library, it works on GIMP, and the unit tests work fine too.
Though note that I configured with many options false:
Project options:
  Option        Current Value Possible Values Description                        
  ------        ------------- --------------- -----------                        
  alpm          false         [true, false]   enable ALPM support                
  builder       false         [true, false]   enable AppStream builder           
  dep11         false         [true, false]   enable DEP-11                      
  fonts         true          [true, false]   enable font support                
  gtk-doc       false         [true, false]   generate API reference             
  introspection false         [true, false]   generate GObject Introspection data
  man           true          [true, false]   generate man pages                 
  rpm           false         [true, false]   enable RPM support                 
  stemmer       false         [true, false]   enable stemmer support 

For the time being, I don't think I need most of these (for GIMP extensions, for which we want to add management through metadata; as a reminder of why I need these). If I realize I do, I would gladly try to port whatever part of code these options need. But for now, I went the easy route (which was annoying enough as it is! :P).","Ok I just created #289 to fix the build of wip/hughsie/win32 (just 3 easy errors). :-)
With these few fixes, it builds fine, and my GIMP master on a Windows 10 VM runs just fine. Appdata files are properly parsed. All good so far.
Still a bit sad that the stuff I spent the most time on aren't included, but well… the main purpose is to use appdata files for GIMP extensions. And if you say that these other piece of code will definitely not be useful, then I won't be sick over it! :P",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,288,2019-02-06T18:45:47Z,2019-02-08T19:12:09Z,2019-02-08T19:12:09Z,CLOSED,False,339,42,13,https://github.com/Jehan,Wip/jehan/win32 port,14,[],https://github.com/hughsie/appstream-glib/pull/288,https://github.com/hughsie,6,https://github.com/hughsie/appstream-glib/pull/288#issuecomment-461912565,"As discussed on #252, this ports appstream-glib to Windows.
With all the changes done, I could successfully build the library, it works on GIMP, and the unit tests work fine too.
Though note that I configured with many options false:
Project options:
  Option        Current Value Possible Values Description                        
  ------        ------------- --------------- -----------                        
  alpm          false         [true, false]   enable ALPM support                
  builder       false         [true, false]   enable AppStream builder           
  dep11         false         [true, false]   enable DEP-11                      
  fonts         true          [true, false]   enable font support                
  gtk-doc       false         [true, false]   generate API reference             
  introspection false         [true, false]   generate GObject Introspection data
  man           true          [true, false]   generate man pages                 
  rpm           false         [true, false]   enable RPM support                 
  stemmer       false         [true, false]   enable stemmer support 

For the time being, I don't think I need most of these (for GIMP extensions, for which we want to add management through metadata; as a reminder of why I need these). If I realize I do, I would gladly try to port whatever part of code these options need. But for now, I went the easy route (which was annoying enough as it is! :P).","Still a bit sad that the stuff I spent the most time on aren't included

Sorry; I didn't want to include complicated stuff that wasn't going to be used. I might end up using the GUID stuff on fwupd in the future, so I'll acknowledge you when that happens :)",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,288,2019-02-06T18:45:47Z,2019-02-08T19:12:09Z,2019-02-08T19:12:09Z,CLOSED,False,339,42,13,https://github.com/Jehan,Wip/jehan/win32 port,14,[],https://github.com/hughsie/appstream-glib/pull/288,https://github.com/hughsie,7,https://github.com/hughsie/appstream-glib/pull/288#issuecomment-461912826,"As discussed on #252, this ports appstream-glib to Windows.
With all the changes done, I could successfully build the library, it works on GIMP, and the unit tests work fine too.
Though note that I configured with many options false:
Project options:
  Option        Current Value Possible Values Description                        
  ------        ------------- --------------- -----------                        
  alpm          false         [true, false]   enable ALPM support                
  builder       false         [true, false]   enable AppStream builder           
  dep11         false         [true, false]   enable DEP-11                      
  fonts         true          [true, false]   enable font support                
  gtk-doc       false         [true, false]   generate API reference             
  introspection false         [true, false]   generate GObject Introspection data
  man           true          [true, false]   generate man pages                 
  rpm           false         [true, false]   enable RPM support                 
  stemmer       false         [true, false]   enable stemmer support 

For the time being, I don't think I need most of these (for GIMP extensions, for which we want to add management through metadata; as a reminder of why I need these). If I realize I do, I would gladly try to port whatever part of code these options need. But for now, I went the easy route (which was annoying enough as it is! :P).","Okay, tracked in #290",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,289,2019-02-08T17:21:53Z,2019-02-08T18:14:26Z,2019-02-08T18:14:26Z,MERGED,True,6,5,2,https://github.com/Jehan,Fix wip/hughsie/win32 branch.,1,[],https://github.com/hughsie/appstream-glib/pull/289,https://github.com/Jehan,1,https://github.com/hughsie/appstream-glib/pull/289,Fixing the win32 port in progress!,Fixing the win32 port in progress!,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,290,2019-02-08T19:11:38Z,2019-03-26T10:15:16Z,2019-03-26T10:17:29Z,MERGED,True,140,36,13,https://github.com/hughsie,Allow building on Windows,1,[],https://github.com/hughsie/appstream-glib/pull/290,https://github.com/hughsie,1,https://github.com/hughsie/appstream-glib/pull/290,Signed-off-by: Richard Hughes richard@hughsie.com,Signed-off-by: Richard Hughes richard@hughsie.com,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,290,2019-02-08T19:11:38Z,2019-03-26T10:15:16Z,2019-03-26T10:17:29Z,MERGED,True,140,36,13,https://github.com/hughsie,Allow building on Windows,1,[],https://github.com/hughsie/appstream-glib/pull/290,https://github.com/Jehan,2,https://github.com/hughsie/appstream-glib/pull/290#issuecomment-476555707,Signed-off-by: Richard Hughes richard@hughsie.com,"Any reasons why this is not being merged? :-)
We will need appstream to be Windows-compatible before being able to release GIMP with our extension system. And since releases are always a bit delayed, better too soon that late!
Actually we'd probably need the lib to be macOS compatible too, but I don't have the possibility to do this port (unless it already works there, no idea).",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,290,2019-02-08T19:11:38Z,2019-03-26T10:15:16Z,2019-03-26T10:17:29Z,MERGED,True,140,36,13,https://github.com/hughsie,Allow building on Windows,1,[],https://github.com/hughsie/appstream-glib/pull/290,https://github.com/hughsie,3,https://github.com/hughsie/appstream-glib/pull/290#issuecomment-476558404,Signed-off-by: Richard Hughes richard@hughsie.com,"No reason at all, other than overworked and underpaid :)",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,290,2019-02-08T19:11:38Z,2019-03-26T10:15:16Z,2019-03-26T10:17:29Z,MERGED,True,140,36,13,https://github.com/hughsie,Allow building on Windows,1,[],https://github.com/hughsie/appstream-glib/pull/290,https://github.com/Jehan,4,https://github.com/hughsie/appstream-glib/pull/290#issuecomment-476559228,Signed-off-by: Richard Hughes richard@hughsie.com,"Ahah! Thanks @hughsie!
I don't mean to participate to over-exerting you! So have some rest too and thanks for the awesome work! ;-)",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,291,2019-02-09T09:22:39Z,2019-02-09T17:33:45Z,2019-02-09T17:33:47Z,MERGED,True,241,2203,127,https://github.com/hughsie,Wip/hughsie/pragma once,2,[],https://github.com/hughsie/appstream-glib/pull/291,https://github.com/hughsie,1,https://github.com/hughsie/appstream-glib/pull/291,,,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,291,2019-02-09T09:22:39Z,2019-02-09T17:33:45Z,2019-02-09T17:33:47Z,MERGED,True,241,2203,127,https://github.com/hughsie,Wip/hughsie/pragma once,2,[],https://github.com/hughsie/appstream-glib/pull/291,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/291#issuecomment-462029062,,"This pull request fixes 48 alerts when merging 33af24b into e15a71f - view on LGTM.com
fixed alerts:

48 for Missing header guard


Comment posted by LGTM.com",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,292,2019-02-10T04:57:22Z,2019-02-10T06:45:22Z,2019-02-10T06:45:22Z,MERGED,True,31,31,31,https://github.com/juergbi,Fix build of libappstream-glib clients,1,[],https://github.com/hughsie/appstream-glib/pull/292,https://github.com/juergbi,1,https://github.com/hughsie/appstream-glib/pull/292,"With '#pragma once', __APPSTREAM_GLIB_H is never defined.
    In file included from /usr/include/libappstream-glib/appstream-glib.h:35:
    /usr/include/libappstream-glib/as-utils.h:11:2: error: #error ""Only <appstream-glib.h> can be included directly.""
     #error ""Only <appstream-glib.h> can be included directly.""
      ^~~~~

Fixes: 87b7483 (""Use '#pragma once' to avoid a lot of boilerplate"")","With '#pragma once', __APPSTREAM_GLIB_H is never defined.
    In file included from /usr/include/libappstream-glib/appstream-glib.h:35:
    /usr/include/libappstream-glib/as-utils.h:11:2: error: #error ""Only <appstream-glib.h> can be included directly.""
     #error ""Only <appstream-glib.h> can be included directly.""
      ^~~~~

Fixes: 87b7483 (""Use '#pragma once' to avoid a lot of boilerplate"")",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,292,2019-02-10T04:57:22Z,2019-02-10T06:45:22Z,2019-02-10T06:45:22Z,MERGED,True,31,31,31,https://github.com/juergbi,Fix build of libappstream-glib clients,1,[],https://github.com/hughsie/appstream-glib/pull/292,https://github.com/juergbi,2,https://github.com/hughsie/appstream-glib/pull/292#issuecomment-462104095,"With '#pragma once', __APPSTREAM_GLIB_H is never defined.
    In file included from /usr/include/libappstream-glib/appstream-glib.h:35:
    /usr/include/libappstream-glib/as-utils.h:11:2: error: #error ""Only <appstream-glib.h> can be included directly.""
     #error ""Only <appstream-glib.h> can be included directly.""
      ^~~~~

Fixes: 87b7483 (""Use '#pragma once' to avoid a lot of boilerplate"")",This currently breaks gnome-build-meta: https://gitlab.gnome.org/GNOME/gnome-build-meta/-/jobs/210604,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,293,2019-02-11T03:43:53Z,2019-02-11T06:37:46Z,2019-02-11T06:37:46Z,MERGED,True,1,1,1,https://github.com/scootergrisen,Appdata to AppData,1,[],https://github.com/hughsie/appstream-glib/pull/293,https://github.com/scootergrisen,1,https://github.com/hughsie/appstream-glib/pull/293,,,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,294,2019-02-24T12:49:32Z,2019-02-27T15:02:55Z,2019-03-03T10:53:35Z,CLOSED,False,1,1,1,https://github.com/bochecha,build: Properly check for the rpm option,1,[],https://github.com/hughsie/appstream-glib/pull/294,https://github.com/bochecha,1,https://github.com/hughsie/appstream-glib/pull/294,"Currently, building appstream-glib with -Dbuilder=false -Drpm=true fails:
https://gnome1.codethink.co.uk/logs/build-2019-02-24-091101/build-gnome-apps-nightly-master-org.gnome.Software-aarch64.txt
This is because in the top-level meson.build file, the rpm variable is only defined when both the builder and rpm options are true.
That means in libappstream-glib/meson.build we cannot just check for the rpm option and assume the variable was defined.

I'm not sure whether this is the right fix, I can see two other possibilities:


make the rpm option actually depend on the builder one, considering -Dbuilder=false -Drpm=true as an invalid configuration.


always define the rpm variable even when the rpm option is true, even if the builder one is false.


Thinking some more about it, the second point above is probably preferable since commit 2d8182a makes use of the rpm library in a way that is unrelated to the builder.","Currently, building appstream-glib with -Dbuilder=false -Drpm=true fails:
https://gnome1.codethink.co.uk/logs/build-2019-02-24-091101/build-gnome-apps-nightly-master-org.gnome.Software-aarch64.txt
This is because in the top-level meson.build file, the rpm variable is only defined when both the builder and rpm options are true.
That means in libappstream-glib/meson.build we cannot just check for the rpm option and assume the variable was defined.

I'm not sure whether this is the right fix, I can see two other possibilities:


make the rpm option actually depend on the builder one, considering -Dbuilder=false -Drpm=true as an invalid configuration.


always define the rpm variable even when the rpm option is true, even if the builder one is false.


Thinking some more about it, the second point above is probably preferable since commit 2d8182a makes use of the rpm library in a way that is unrelated to the builder.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,294,2019-02-24T12:49:32Z,2019-02-27T15:02:55Z,2019-03-03T10:53:35Z,CLOSED,False,1,1,1,https://github.com/bochecha,build: Properly check for the rpm option,1,[],https://github.com/hughsie/appstream-glib/pull/294,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/294#issuecomment-467895741,"Currently, building appstream-glib with -Dbuilder=false -Drpm=true fails:
https://gnome1.codethink.co.uk/logs/build-2019-02-24-091101/build-gnome-apps-nightly-master-org.gnome.Software-aarch64.txt
This is because in the top-level meson.build file, the rpm variable is only defined when both the builder and rpm options are true.
That means in libappstream-glib/meson.build we cannot just check for the rpm option and assume the variable was defined.

I'm not sure whether this is the right fix, I can see two other possibilities:


make the rpm option actually depend on the builder one, considering -Dbuilder=false -Drpm=true as an invalid configuration.


always define the rpm variable even when the rpm option is true, even if the builder one is false.


Thinking some more about it, the second point above is probably preferable since commit 2d8182a makes use of the rpm library in a way that is unrelated to the builder.","I've fixed this the other way in cf5c810 -- but thanks for reporting this and working it out. In related news, do you think it makes sense to put org.gnome.Software on Flathub? I think we can move some of the patches upstream too.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,294,2019-02-24T12:49:32Z,2019-02-27T15:02:55Z,2019-03-03T10:53:35Z,CLOSED,False,1,1,1,https://github.com/bochecha,build: Properly check for the rpm option,1,[],https://github.com/hughsie/appstream-glib/pull/294,https://github.com/bochecha,3,https://github.com/hughsie/appstream-glib/pull/294#issuecomment-469008500,"Currently, building appstream-glib with -Dbuilder=false -Drpm=true fails:
https://gnome1.codethink.co.uk/logs/build-2019-02-24-091101/build-gnome-apps-nightly-master-org.gnome.Software-aarch64.txt
This is because in the top-level meson.build file, the rpm variable is only defined when both the builder and rpm options are true.
That means in libappstream-glib/meson.build we cannot just check for the rpm option and assume the variable was defined.

I'm not sure whether this is the right fix, I can see two other possibilities:


make the rpm option actually depend on the builder one, considering -Dbuilder=false -Drpm=true as an invalid configuration.


always define the rpm variable even when the rpm option is true, even if the builder one is false.


Thinking some more about it, the second point above is probably preferable since commit 2d8182a makes use of the rpm library in a way that is unrelated to the builder.","In related news, do you think it makes sense to put org.gnome.Software on Flathub?

I don't know.
Does it make sense to use Software as a Flatpak? Or is it instead intended to be part of the OS?
If the latter, should we even continue building it in gnome-apps-nightly?",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,294,2019-02-24T12:49:32Z,2019-02-27T15:02:55Z,2019-03-03T10:53:35Z,CLOSED,False,1,1,1,https://github.com/bochecha,build: Properly check for the rpm option,1,[],https://github.com/hughsie/appstream-glib/pull/294,https://github.com/kalev,4,https://github.com/hughsie/appstream-glib/pull/294#issuecomment-469011141,"Currently, building appstream-glib with -Dbuilder=false -Drpm=true fails:
https://gnome1.codethink.co.uk/logs/build-2019-02-24-091101/build-gnome-apps-nightly-master-org.gnome.Software-aarch64.txt
This is because in the top-level meson.build file, the rpm variable is only defined when both the builder and rpm options are true.
That means in libappstream-glib/meson.build we cannot just check for the rpm option and assume the variable was defined.

I'm not sure whether this is the right fix, I can see two other possibilities:


make the rpm option actually depend on the builder one, considering -Dbuilder=false -Drpm=true as an invalid configuration.


always define the rpm variable even when the rpm option is true, even if the builder one is false.


Thinking some more about it, the second point above is probably preferable since commit 2d8182a makes use of the rpm library in a way that is unrelated to the builder.",I'd say it's supposed to be shipped as part of the OS.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,296,2019-03-20T16:51:10Z,2019-03-20T17:25:13Z,2019-03-20T17:25:23Z,MERGED,True,165,48,5,https://github.com/hughsie,Modernize the validation requirements,1,['enhancement'],https://github.com/hughsie/appstream-glib/pull/296,https://github.com/hughsie,1,https://github.com/hughsie/appstream-glib/pull/296,"Require <content_rating> for any desktop or console application
Make  mandatory when validating
Further relax style requirements
Require description for desktop an console apps

This changes a lot of things that are now best practice for all apps, and
required to be included in Flathub.
Use appstream-util validate-relax to ignore some new failures and use
appstream-util validate-strict to bring them back.
Fixes: #263","Require <content_rating> for any desktop or console application
Make  mandatory when validating
Further relax style requirements
Require description for desktop an console apps

This changes a lot of things that are now best practice for all apps, and
required to be included in Flathub.
Use appstream-util validate-relax to ignore some new failures and use
appstream-util validate-strict to bring them back.
Fixes: #263",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,297,2019-03-24T15:41:51Z,2019-04-09T13:37:05Z,2019-05-16T10:34:07Z,MERGED,True,4,8,1,https://github.com/davidmhewitt,as-compose: Remove relative path from icon names,1,[],https://github.com/hughsie/appstream-glib/pull/297,https://github.com/davidmhewitt,1,https://github.com/hughsie/appstream-glib/pull/297,"According to the AppStream specification (https://www.freedesktop.org/software/appstream/docs/chap-CollectionData.html#sect-AppStream-XML):

cached icons are loaded from the AppStream icon cache. The icon tag should contain the icon file name, including it's extension. It must not contain a full or relative path to the icon file.

This was generating icon tags like the below:
<icon type=""cached"" height=""64"" width=""64"">64x64/org.flatpak.Hello.png</icon>
I don't think this should affect anything as Flathub must be using a different method to generate their appdata which doesn't have the size prefix in the tag content, but these icons still load OK in software centers.","According to the AppStream specification (https://www.freedesktop.org/software/appstream/docs/chap-CollectionData.html#sect-AppStream-XML):

cached icons are loaded from the AppStream icon cache. The icon tag should contain the icon file name, including it's extension. It must not contain a full or relative path to the icon file.

This was generating icon tags like the below:
<icon type=""cached"" height=""64"" width=""64"">64x64/org.flatpak.Hello.png</icon>
I don't think this should affect anything as Flathub must be using a different method to generate their appdata which doesn't have the size prefix in the tag content, but these icons still load OK in software centers.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,297,2019-03-24T15:41:51Z,2019-04-09T13:37:05Z,2019-05-16T10:34:07Z,MERGED,True,4,8,1,https://github.com/davidmhewitt,as-compose: Remove relative path from icon names,1,[],https://github.com/hughsie/appstream-glib/pull/297,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/297#issuecomment-481254260,"According to the AppStream specification (https://www.freedesktop.org/software/appstream/docs/chap-CollectionData.html#sect-AppStream-XML):

cached icons are loaded from the AppStream icon cache. The icon tag should contain the icon file name, including it's extension. It must not contain a full or relative path to the icon file.

This was generating icon tags like the below:
<icon type=""cached"" height=""64"" width=""64"">64x64/org.flatpak.Hello.png</icon>
I don't think this should affect anything as Flathub must be using a different method to generate their appdata which doesn't have the size prefix in the tag content, but these icons still load OK in software centers.",I think this is okay as gnome-software is using AS_ICON_LOAD_FLAG_SEARCH_SIZE -- if it fails on the next Fedora metadata refresh I'll sharpen the pitchfork :),True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,299,2019-03-29T13:39:25Z,2019-03-29T13:47:58Z,2019-03-29T13:48:00Z,MERGED,True,7,4,1,https://github.com/kalev,"Only require <release> for validate, but not validate-relax",1,[],https://github.com/hughsie/appstream-glib/pull/299,https://github.com/kalev,1,https://github.com/hughsie/appstream-glib/pull/299,"The plan was to require  for validate, so that we would be able
to require a version number for flathub, but it accidentally got enabled
for validate-relax as well.","The plan was to require  for validate, so that we would be able
to require a version number for flathub, but it accidentally got enabled
for validate-relax as well.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,300,2019-04-09T15:26:05Z,2019-04-09T15:57:46Z,2019-04-09T15:57:46Z,MERGED,True,1,0,1,https://github.com/salmanfs815,add UPL short name to SPDX conversion,1,[],https://github.com/hughsie/appstream-glib/pull/300,https://github.com/salmanfs815,1,https://github.com/hughsie/appstream-glib/pull/300,,,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,303,2019-05-14T12:35:27Z,2019-05-14T12:47:13Z,2019-05-14T12:47:16Z,MERGED,True,4,8,2,https://github.com/hughsie,Do not require <update_contact> for validation unless strict,1,['bug'],https://github.com/hughsie/appstream-glib/pull/303,https://github.com/hughsie,1,https://github.com/hughsie/appstream-glib/pull/303,Fixes some of #302,Fixes some of #302,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,303,2019-05-14T12:35:27Z,2019-05-14T12:47:13Z,2019-05-14T12:47:16Z,MERGED,True,4,8,2,https://github.com/hughsie,Do not require <update_contact> for validation unless strict,1,['bug'],https://github.com/hughsie/appstream-glib/pull/303,https://github.com/kalev,2,https://github.com/hughsie/appstream-glib/pull/303#issuecomment-492221509,Fixes some of #302,+1 from me!,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,305,2019-05-17T11:36:48Z,2019-05-17T12:28:09Z,2019-05-17T12:28:15Z,MERGED,True,4,8,2,https://github.com/kalev,Do not require <translation> for validation unless strict,1,[],https://github.com/hughsie/appstream-glib/pull/305,https://github.com/kalev,1,https://github.com/hughsie/appstream-glib/pull/305,"Flathub is already patching appstream-glib to remove this check.
Fixes #302","Flathub is already patching appstream-glib to remove this check.
Fixes #302",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,307,2019-05-23T12:14:32Z,,2020-04-13T19:20:44Z,OPEN,False,0,4,1,https://github.com/felipeborges,Don't ignore localized strings that are the same as original,1,[],https://github.com/hughsie/appstream-glib/pull/307,https://github.com/felipeborges,1,https://github.com/hughsie/appstream-glib/pull/307,"Avoiding storing identical strings is a clever measure to keep the
appstream file small and clean, but it ignores translation differences
between languages and their specific locales.
Applications tend to ""fallback"" from missing locales by picking a
translation of the same language but from a different locale.
For instance, when missing a ""pt_BR"" translation, some apps will
pick the ""pt"" translation instead. That usually works but there
are some cases when it doesn't, such as for international words:
Brazilian Portuguese (pt_BR) tends to use them, while European
Portuguese (pt) has a translation for everything.
This way, ""GNOME Boxes"" gets translated to ""Caixas GNOME"" in
European Portuguese (pt) but the same ""GNOME Boxes"" name is
expected in Brazilian Portuguese (pt_BR).
This was initially reported as a Flatpak issue in
https://lists.freedesktop.org/archives/flatpak/2019-May/001578.html
Because OP was seeing the wrong translations in Flathub and
GNOME Software.","Avoiding storing identical strings is a clever measure to keep the
appstream file small and clean, but it ignores translation differences
between languages and their specific locales.
Applications tend to ""fallback"" from missing locales by picking a
translation of the same language but from a different locale.
For instance, when missing a ""pt_BR"" translation, some apps will
pick the ""pt"" translation instead. That usually works but there
are some cases when it doesn't, such as for international words:
Brazilian Portuguese (pt_BR) tends to use them, while European
Portuguese (pt) has a translation for everything.
This way, ""GNOME Boxes"" gets translated to ""Caixas GNOME"" in
European Portuguese (pt) but the same ""GNOME Boxes"" name is
expected in Brazilian Portuguese (pt_BR).
This was initially reported as a Flatpak issue in
https://lists.freedesktop.org/archives/flatpak/2019-May/001578.html
Because OP was seeing the wrong translations in Flathub and
GNOME Software.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,307,2019-05-23T12:14:32Z,,2020-04-13T19:20:44Z,OPEN,False,0,4,1,https://github.com/felipeborges,Don't ignore localized strings that are the same as original,1,[],https://github.com/hughsie/appstream-glib/pull/307,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/307#issuecomment-495207571,"Avoiding storing identical strings is a clever measure to keep the
appstream file small and clean, but it ignores translation differences
between languages and their specific locales.
Applications tend to ""fallback"" from missing locales by picking a
translation of the same language but from a different locale.
For instance, when missing a ""pt_BR"" translation, some apps will
pick the ""pt"" translation instead. That usually works but there
are some cases when it doesn't, such as for international words:
Brazilian Portuguese (pt_BR) tends to use them, while European
Portuguese (pt) has a translation for everything.
This way, ""GNOME Boxes"" gets translated to ""Caixas GNOME"" in
European Portuguese (pt) but the same ""GNOME Boxes"" name is
expected in Brazilian Portuguese (pt_BR).
This was initially reported as a Flatpak issue in
https://lists.freedesktop.org/archives/flatpak/2019-May/001578.html
Because OP was seeing the wrong translations in Flathub and
GNOME Software.",How much does this affect the size of something like the Fedora metadata? Certainly en_GB is 99.9% the same as C although I do concede that gzip should dedupe this effectively. @kalev what do you think?,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,307,2019-05-23T12:14:32Z,,2020-04-13T19:20:44Z,OPEN,False,0,4,1,https://github.com/felipeborges,Don't ignore localized strings that are the same as original,1,[],https://github.com/hughsie/appstream-glib/pull/307,https://github.com/kalev,3,https://github.com/hughsie/appstream-glib/pull/307#issuecomment-495214495,"Avoiding storing identical strings is a clever measure to keep the
appstream file small and clean, but it ignores translation differences
between languages and their specific locales.
Applications tend to ""fallback"" from missing locales by picking a
translation of the same language but from a different locale.
For instance, when missing a ""pt_BR"" translation, some apps will
pick the ""pt"" translation instead. That usually works but there
are some cases when it doesn't, such as for international words:
Brazilian Portuguese (pt_BR) tends to use them, while European
Portuguese (pt) has a translation for everything.
This way, ""GNOME Boxes"" gets translated to ""Caixas GNOME"" in
European Portuguese (pt) but the same ""GNOME Boxes"" name is
expected in Brazilian Portuguese (pt_BR).
This was initially reported as a Flatpak issue in
https://lists.freedesktop.org/archives/flatpak/2019-May/001578.html
Because OP was seeing the wrong translations in Flathub and
GNOME Software.","I'd say it's probably best to go for correctness, even if it increases the metadata size. Let's see how much bigger it gets and back this change out if it's unacceptably large?",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,307,2019-05-23T12:14:32Z,,2020-04-13T19:20:44Z,OPEN,False,0,4,1,https://github.com/felipeborges,Don't ignore localized strings that are the same as original,1,[],https://github.com/hughsie/appstream-glib/pull/307,https://github.com/rffontenelle,4,https://github.com/hughsie/appstream-glib/pull/307#issuecomment-495216809,"Avoiding storing identical strings is a clever measure to keep the
appstream file small and clean, but it ignores translation differences
between languages and their specific locales.
Applications tend to ""fallback"" from missing locales by picking a
translation of the same language but from a different locale.
For instance, when missing a ""pt_BR"" translation, some apps will
pick the ""pt"" translation instead. That usually works but there
are some cases when it doesn't, such as for international words:
Brazilian Portuguese (pt_BR) tends to use them, while European
Portuguese (pt) has a translation for everything.
This way, ""GNOME Boxes"" gets translated to ""Caixas GNOME"" in
European Portuguese (pt) but the same ""GNOME Boxes"" name is
expected in Brazilian Portuguese (pt_BR).
This was initially reported as a Flatpak issue in
https://lists.freedesktop.org/archives/flatpak/2019-May/001578.html
Because OP was seeing the wrong translations in Flathub and
GNOME Software.","How about keeping localized strings equal original only when the fallback language ('pt', in Felipe's example) translation is presented? If absent, there will be no fallback and no problem for other languages (e.g. pt_BR). This way, lines wouldn't be added without being required and file size may not grow too much.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,307,2019-05-23T12:14:32Z,,2020-04-13T19:20:44Z,OPEN,False,0,4,1,https://github.com/felipeborges,Don't ignore localized strings that are the same as original,1,[],https://github.com/hughsie/appstream-glib/pull/307,https://github.com/felipeborges,5,https://github.com/hughsie/appstream-glib/pull/307#issuecomment-495523744,"Avoiding storing identical strings is a clever measure to keep the
appstream file small and clean, but it ignores translation differences
between languages and their specific locales.
Applications tend to ""fallback"" from missing locales by picking a
translation of the same language but from a different locale.
For instance, when missing a ""pt_BR"" translation, some apps will
pick the ""pt"" translation instead. That usually works but there
are some cases when it doesn't, such as for international words:
Brazilian Portuguese (pt_BR) tends to use them, while European
Portuguese (pt) has a translation for everything.
This way, ""GNOME Boxes"" gets translated to ""Caixas GNOME"" in
European Portuguese (pt) but the same ""GNOME Boxes"" name is
expected in Brazilian Portuguese (pt_BR).
This was initially reported as a Flatpak issue in
https://lists.freedesktop.org/archives/flatpak/2019-May/001578.html
Because OP was seeing the wrong translations in Flathub and
GNOME Software.","How about keeping localized strings equal original only when the fallback language ('pt', in Felipe's example) translation is presented? If absent, there will be no fallback and no problem for other languages (e.g. pt_BR). This way, lines wouldn't be added without being required and file size may not grow too much.

My understanding is that the fallback is done in the application's side. All consumers of appstream.xml will read from it (GNOME Software, Flathub, other-software-store-thingies) and they are the ones using this heuristic to fallback missing translations.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,307,2019-05-23T12:14:32Z,,2020-04-13T19:20:44Z,OPEN,False,0,4,1,https://github.com/felipeborges,Don't ignore localized strings that are the same as original,1,[],https://github.com/hughsie/appstream-glib/pull/307,https://github.com/hughsie,6,https://github.com/hughsie/appstream-glib/pull/307#issuecomment-495525645,"Avoiding storing identical strings is a clever measure to keep the
appstream file small and clean, but it ignores translation differences
between languages and their specific locales.
Applications tend to ""fallback"" from missing locales by picking a
translation of the same language but from a different locale.
For instance, when missing a ""pt_BR"" translation, some apps will
pick the ""pt"" translation instead. That usually works but there
are some cases when it doesn't, such as for international words:
Brazilian Portuguese (pt_BR) tends to use them, while European
Portuguese (pt) has a translation for everything.
This way, ""GNOME Boxes"" gets translated to ""Caixas GNOME"" in
European Portuguese (pt) but the same ""GNOME Boxes"" name is
expected in Brazilian Portuguese (pt_BR).
This was initially reported as a Flatpak issue in
https://lists.freedesktop.org/archives/flatpak/2019-May/001578.html
Because OP was seeing the wrong translations in Flathub and
GNOME Software.","and they are the ones using this heuristic to fallback missing translations

Old versions of gnome-software use appstream-glib to get the ""best"" translation, so it should be enough to fix it here for those older versions. For newer versions of gnome-software we parse it directly with libxmlb and so any fix would need to be copied there. I'm going to do some benchmarks compiling the entire fedora repo today with the dedepe functionality and without. It does take some time...",True,{'HEART': ['https://github.com/felipeborges']}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,307,2019-05-23T12:14:32Z,,2020-04-13T19:20:44Z,OPEN,False,0,4,1,https://github.com/felipeborges,Don't ignore localized strings that are the same as original,1,[],https://github.com/hughsie/appstream-glib/pull/307,https://github.com/hughsie,7,https://github.com/hughsie/appstream-glib/pull/307#issuecomment-495603127,"Avoiding storing identical strings is a clever measure to keep the
appstream file small and clean, but it ignores translation differences
between languages and their specific locales.
Applications tend to ""fallback"" from missing locales by picking a
translation of the same language but from a different locale.
For instance, when missing a ""pt_BR"" translation, some apps will
pick the ""pt"" translation instead. That usually works but there
are some cases when it doesn't, such as for international words:
Brazilian Portuguese (pt_BR) tends to use them, while European
Portuguese (pt) has a translation for everything.
This way, ""GNOME Boxes"" gets translated to ""Caixas GNOME"" in
European Portuguese (pt) but the same ""GNOME Boxes"" name is
expected in Brazilian Portuguese (pt_BR).
This was initially reported as a Flatpak issue in
https://lists.freedesktop.org/archives/flatpak/2019-May/001578.html
Because OP was seeing the wrong translations in Flathub and
GNOME Software.","I'm guessing this wasn't tested :) The XML file is the same size, even post decompression. I think this patch needs to drop AS_NODE_INSERT_FLAG_DEDUPE_LANG -- I'm just running the generator again with that dropped to see what it does to the XML file.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,307,2019-05-23T12:14:32Z,,2020-04-13T19:20:44Z,OPEN,False,0,4,1,https://github.com/felipeborges,Don't ignore localized strings that are the same as original,1,[],https://github.com/hughsie/appstream-glib/pull/307,https://github.com/rffontenelle,8,https://github.com/hughsie/appstream-glib/pull/307#issuecomment-564675020,"Avoiding storing identical strings is a clever measure to keep the
appstream file small and clean, but it ignores translation differences
between languages and their specific locales.
Applications tend to ""fallback"" from missing locales by picking a
translation of the same language but from a different locale.
For instance, when missing a ""pt_BR"" translation, some apps will
pick the ""pt"" translation instead. That usually works but there
are some cases when it doesn't, such as for international words:
Brazilian Portuguese (pt_BR) tends to use them, while European
Portuguese (pt) has a translation for everything.
This way, ""GNOME Boxes"" gets translated to ""Caixas GNOME"" in
European Portuguese (pt) but the same ""GNOME Boxes"" name is
expected in Brazilian Portuguese (pt_BR).
This was initially reported as a Flatpak issue in
https://lists.freedesktop.org/archives/flatpak/2019-May/001578.html
Because OP was seeing the wrong translations in Flathub and
GNOME Software.","Hey there, is there anything blocking this PR? Now and then Brazilians ask about this issue.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,307,2019-05-23T12:14:32Z,,2020-04-13T19:20:44Z,OPEN,False,0,4,1,https://github.com/felipeborges,Don't ignore localized strings that are the same as original,1,[],https://github.com/hughsie/appstream-glib/pull/307,https://github.com/hughsie,9,https://github.com/hughsie/appstream-glib/pull/307#issuecomment-564909462,"Avoiding storing identical strings is a clever measure to keep the
appstream file small and clean, but it ignores translation differences
between languages and their specific locales.
Applications tend to ""fallback"" from missing locales by picking a
translation of the same language but from a different locale.
For instance, when missing a ""pt_BR"" translation, some apps will
pick the ""pt"" translation instead. That usually works but there
are some cases when it doesn't, such as for international words:
Brazilian Portuguese (pt_BR) tends to use them, while European
Portuguese (pt) has a translation for everything.
This way, ""GNOME Boxes"" gets translated to ""Caixas GNOME"" in
European Portuguese (pt) but the same ""GNOME Boxes"" name is
expected in Brazilian Portuguese (pt_BR).
This was initially reported as a Flatpak issue in
https://lists.freedesktop.org/archives/flatpak/2019-May/001578.html
Because OP was seeing the wrong translations in Flathub and
GNOME Software.","Hey there, is there anything blocking this PR?

Well, there's CI failure and the fact that the patch doesn't work, but other than that...",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,307,2019-05-23T12:14:32Z,,2020-04-13T19:20:44Z,OPEN,False,0,4,1,https://github.com/felipeborges,Don't ignore localized strings that are the same as original,1,[],https://github.com/hughsie/appstream-glib/pull/307,https://github.com/igaldino,10,https://github.com/hughsie/appstream-glib/pull/307#issuecomment-613052391,"Avoiding storing identical strings is a clever measure to keep the
appstream file small and clean, but it ignores translation differences
between languages and their specific locales.
Applications tend to ""fallback"" from missing locales by picking a
translation of the same language but from a different locale.
For instance, when missing a ""pt_BR"" translation, some apps will
pick the ""pt"" translation instead. That usually works but there
are some cases when it doesn't, such as for international words:
Brazilian Portuguese (pt_BR) tends to use them, while European
Portuguese (pt) has a translation for everything.
This way, ""GNOME Boxes"" gets translated to ""Caixas GNOME"" in
European Portuguese (pt) but the same ""GNOME Boxes"" name is
expected in Brazilian Portuguese (pt_BR).
This was initially reported as a Flatpak issue in
https://lists.freedesktop.org/archives/flatpak/2019-May/001578.html
Because OP was seeing the wrong translations in Flathub and
GNOME Software.","Hi @felipeborges, I tried to update your branch but I don't have rights, so I just commented it.
Changes should be enough to pass test.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,310,2019-07-16T16:17:56Z,2019-07-19T14:03:51Z,2019-07-19T14:03:51Z,CLOSED,False,46,16,1,https://github.com/hughsie,Do not trigger an inotity event when the AppStream XML data is unchanged,1,['bug'],https://github.com/hughsie/appstream-glib/pull/310,https://github.com/hughsie,1,https://github.com/hughsie/appstream-glib/pull/310,"Do not modify the ctime or mtime in as_utils_install_xml() if the SHA1
checksums are identical. This means gnome-software starts without triggering an
XbSilo rebuild if we refresh the repos with PackageKit as dnf is so keen to do.","Do not modify the ctime or mtime in as_utils_install_xml() if the SHA1
checksums are identical. This means gnome-software starts without triggering an
XbSilo rebuild if we refresh the repos with PackageKit as dnf is so keen to do.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,310,2019-07-16T16:17:56Z,2019-07-19T14:03:51Z,2019-07-19T14:03:51Z,CLOSED,False,46,16,1,https://github.com/hughsie,Do not trigger an inotity event when the AppStream XML data is unchanged,1,['bug'],https://github.com/hughsie/appstream-glib/pull/310,https://github.com/kalev,2,https://github.com/hughsie/appstream-glib/pull/310#issuecomment-512784857,"Do not modify the ctime or mtime in as_utils_install_xml() if the SHA1
checksums are identical. This means gnome-software starts without triggering an
XbSilo rebuild if we refresh the repos with PackageKit as dnf is so keen to do.","I don't understand what this is doing. Why do you need to recompress the data and how is it related to not changing mtime? Maybe just avoid copying if the checksum is identical? Could libxmlb silo files keep track of the file checksums, instead of relying on mtime?",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,310,2019-07-16T16:17:56Z,2019-07-19T14:03:51Z,2019-07-19T14:03:51Z,CLOSED,False,46,16,1,https://github.com/hughsie,Do not trigger an inotity event when the AppStream XML data is unchanged,1,['bug'],https://github.com/hughsie/appstream-glib/pull/310,https://github.com/hughsie,3,https://github.com/hughsie/appstream-glib/pull/310#issuecomment-513235058,"Do not modify the ctime or mtime in as_utils_install_xml() if the SHA1
checksums are identical. This means gnome-software starts without triggering an
XbSilo rebuild if we refresh the repos with PackageKit as dnf is so keen to do.","I don't understand what this is doing.

Right, I agree it's not simple. With AppStream metadata coming from distros, COPRs and Flathub we can't trust the <components origin=""foo""> either actually exists or is the right value. On opensuse, I believe all the metadata has the same origin, and then when PackageKit calls install-origin we set the origin stored in the file as the repo name. This is how we know where to look for the icons, and also which repo provides the app. I agree it's inelegant and decompressing, parsing, exporting and compressing each time just to change a simple string is somewhat insane.

Why do you need to recompress the data and how is it related to not changing mtime?

At the moment the existing code copies the source to the destination, loads the source, sets the origin then saves it to the destination, overwriting the last written copy. This means when src=dest we actually get 2 inotify signals about the file, which marks the silo as invalid.

Maybe just avoid copying if the checksum is identical?

Checking the mtime is ""free"", as in it's just one ""stat"" call. Doing a checksum for all the multi-megabyte metadata files (and all the hundreds of tiny appdata/desktop files all over the disk) would be hugely expensive which would kill the start-up time gains we got when switching to the zero-copy xmlb design.
I guess the other thing we could do is find the root problem; like finding out why PackageKit/libdnf is copying over the file (and hopefully not downloading) when we've explicitly asked for a cache timeout of 0.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,310,2019-07-16T16:17:56Z,2019-07-19T14:03:51Z,2019-07-19T14:03:51Z,CLOSED,False,46,16,1,https://github.com/hughsie,Do not trigger an inotity event when the AppStream XML data is unchanged,1,['bug'],https://github.com/hughsie/appstream-glib/pull/310,https://github.com/kalev,4,https://github.com/hughsie/appstream-glib/pull/310#issuecomment-513239182,"Do not modify the ctime or mtime in as_utils_install_xml() if the SHA1
checksums are identical. This means gnome-software starts without triggering an
XbSilo rebuild if we refresh the repos with PackageKit as dnf is so keen to do.","Ahh, thanks for the explanation. It does seem like a wrong layer for fixing the issue, but if you think it's the easiest way for now, works for me :)",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,310,2019-07-16T16:17:56Z,2019-07-19T14:03:51Z,2019-07-19T14:03:51Z,CLOSED,False,46,16,1,https://github.com/hughsie,Do not trigger an inotity event when the AppStream XML data is unchanged,1,['bug'],https://github.com/hughsie/appstream-glib/pull/310,https://github.com/hughsie,5,https://github.com/hughsie/appstream-glib/pull/310#issuecomment-513239470,"Do not modify the ctime or mtime in as_utils_install_xml() if the SHA1
checksums are identical. This means gnome-software starts without triggering an
XbSilo rebuild if we refresh the repos with PackageKit as dnf is so keen to do.","No, you're right to tell me it's insane. I think it's a PK mistake anyway.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,310,2019-07-16T16:17:56Z,2019-07-19T14:03:51Z,2019-07-19T14:03:51Z,CLOSED,False,46,16,1,https://github.com/hughsie,Do not trigger an inotity event when the AppStream XML data is unchanged,1,['bug'],https://github.com/hughsie/appstream-glib/pull/310,https://github.com/hughsie,6,https://github.com/hughsie/appstream-glib/pull/310#issuecomment-513240687,"Do not modify the ctime or mtime in as_utils_install_xml() if the SHA1
checksums are identical. This means gnome-software starts without triggering an
XbSilo rebuild if we refresh the repos with PackageKit as dnf is so keen to do.",I think the real bug is PackageKit/PackageKit#330 -- thanks for the (in)sanity check.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,311,2019-07-22T03:12:22Z,2019-08-05T09:35:19Z,2020-01-16T22:43:03Z,MERGED,True,69,21,1,https://github.com/robert-ancell,Support loading YAML from as_store_from_bytes,1,[],https://github.com/hughsie/appstream-glib/pull/311,https://github.com/robert-ancell,1,https://github.com/hughsie/appstream-glib/pull/311,Added to resolve GNOME Software not loading YAML.,Added to resolve GNOME Software not loading YAML.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,311,2019-07-22T03:12:22Z,2019-08-05T09:35:19Z,2020-01-16T22:43:03Z,MERGED,True,69,21,1,https://github.com/robert-ancell,Support loading YAML from as_store_from_bytes,1,[],https://github.com/hughsie/appstream-glib/pull/311,https://github.com/robert-ancell,2,https://github.com/hughsie/appstream-glib/pull/311#issuecomment-513624262,Added to resolve GNOME Software not loading YAML.,"The DEP-11 check is a bit hacky, wasn't sure if that should be in as-yaml.c.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,313,2019-08-05T09:33:45Z,2019-08-07T03:52:38Z,2019-08-07T03:52:38Z,MERGED,True,2,3,2,https://github.com/hughsie,Do not preserve restrictive permissions when installing AppStream files,1,['bug'],https://github.com/hughsie/appstream-glib/pull/313,https://github.com/hughsie,1,https://github.com/hughsie/appstream-glib/pull/313,Fixes #312,Fixes #312,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,316,2019-08-17T14:56:17Z,2021-08-07T14:57:52Z,2021-08-07T15:34:44Z,MERGED,True,14,0,1,https://github.com/piotrdrag,its: Sync with appstream,1,[],https://github.com/hughsie/appstream-glib/pull/316,https://github.com/piotrdrag,1,https://github.com/hughsie/appstream-glib/pull/316,"Integrates these commits:
ximion/appstream@e42dd0d
ximion/appstream@71d134e
ximion/appstream@8c939f9
ximion/appstream@51ab4f3","Integrates these commits:
ximion/appstream@e42dd0d
ximion/appstream@71d134e
ximion/appstream@8c939f9
ximion/appstream@51ab4f3",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,316,2019-08-17T14:56:17Z,2021-08-07T14:57:52Z,2021-08-07T15:34:44Z,MERGED,True,14,0,1,https://github.com/piotrdrag,its: Sync with appstream,1,[],https://github.com/hughsie/appstream-glib/pull/316,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/316#issuecomment-522310778,"Integrates these commits:
ximion/appstream@e42dd0d
ximion/appstream@71d134e
ximion/appstream@8c939f9
ximion/appstream@51ab4f3","I think this is exactly what we want, but I think we need to add support for the new AppStream elements before merging these patches.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,316,2019-08-17T14:56:17Z,2021-08-07T14:57:52Z,2021-08-07T15:34:44Z,MERGED,True,14,0,1,https://github.com/piotrdrag,its: Sync with appstream,1,[],https://github.com/hughsie/appstream-glib/pull/316,https://github.com/piotrdrag,3,https://github.com/hughsie/appstream-glib/pull/316#issuecomment-581130652,"Integrates these commits:
ximion/appstream@e42dd0d
ximion/appstream@71d134e
ximion/appstream@8c939f9
ximion/appstream@51ab4f3",I added another recent appstream commit.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,316,2019-08-17T14:56:17Z,2021-08-07T14:57:52Z,2021-08-07T15:34:44Z,MERGED,True,14,0,1,https://github.com/piotrdrag,its: Sync with appstream,1,[],https://github.com/hughsie/appstream-glib/pull/316,https://github.com/piotrdrag,4,https://github.com/hughsie/appstream-glib/pull/316#issuecomment-894642158,"Integrates these commits:
ximion/appstream@e42dd0d
ximion/appstream@71d134e
ximion/appstream@8c939f9
ximion/appstream@51ab4f3",Added one more.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,318,2019-08-27T00:09:16Z,2019-08-27T05:40:26Z,2019-08-27T05:40:26Z,MERGED,True,2,1,1,https://github.com/whot,Offset future checks by UTC+14,1,[],https://github.com/hughsie/appstream-glib/pull/318,https://github.com/whot,1,https://github.com/hughsie/appstream-glib/pull/318,"The timestamp comes from a converted release date but it is in UTC. So anyone
east of UTC will get a ""timestamp is in the future"" warning for today's date
until UTC ticks past midnight.
According to Wikipedia the highest offset is UTC+14 so let's offset our time
by that much. This way we treat ""today"" as valid release date anywhere on the
planet.
Fixes #317","The timestamp comes from a converted release date but it is in UTC. So anyone
east of UTC will get a ""timestamp is in the future"" warning for today's date
until UTC ticks past midnight.
According to Wikipedia the highest offset is UTC+14 so let's offset our time
by that much. This way we treat ""today"" as valid release date anywhere on the
planet.
Fixes #317",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,319,2019-08-27T19:40:11Z,2019-08-27T20:06:11Z,2019-08-27T20:06:36Z,MERGED,True,3,5,3,https://github.com/jtojnar,docs: remove SQLite dependency,1,[],https://github.com/hughsie/appstream-glib/pull/319,https://github.com/jtojnar,1,https://github.com/hughsie/appstream-glib/pull/319,"The dependency was removed in f1cdbd8
and 8c58e47. Let's update docs accordingly.","The dependency was removed in f1cdbd8
and 8c58e47. Let's update docs accordingly.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,321,2019-09-13T11:24:15Z,2019-09-13T13:02:02Z,2019-09-13T13:02:02Z,MERGED,True,6,6,1,https://github.com/muelli,Log expected and actual screenshot dimensions when failing,1,[],https://github.com/hughsie/appstream-glib/pull/321,https://github.com/muelli,1,https://github.com/hughsie/appstream-glib/pull/321,"Sometimes it is quite helpful to see the values the validator objects.
Especially when it is hard to comprehend why the validation fails if one has,
say, an image in a stale cache which the validator does not have.","Sometimes it is quite helpful to see the values the validator objects.
Especially when it is hard to comprehend why the validation fails if one has,
say, an image in a stale cache which the validator does not have.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,321,2019-09-13T11:24:15Z,2019-09-13T13:02:02Z,2019-09-13T13:02:02Z,MERGED,True,6,6,1,https://github.com/muelli,Log expected and actual screenshot dimensions when failing,1,[],https://github.com/hughsie/appstream-glib/pull/321,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/321#issuecomment-531212707,"Sometimes it is quite helpful to see the values the validator objects.
Especially when it is hard to comprehend why the validation fails if one has,
say, an image in a stale cache which the validator does not have.","In concept, yes, but it needs to compile :)",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,321,2019-09-13T11:24:15Z,2019-09-13T13:02:02Z,2019-09-13T13:02:02Z,MERGED,True,6,6,1,https://github.com/muelli,Log expected and actual screenshot dimensions when failing,1,[],https://github.com/hughsie/appstream-glib/pull/321,https://github.com/muelli,3,https://github.com/hughsie/appstream-glib/pull/321#issuecomment-531226334,"Sometimes it is quite helpful to see the values the validator objects.
Especially when it is hard to comprehend why the validation fails if one has,
say, an image in a stale cache which the validator does not have.","whoops. silly me. fortunately, there is CI :)",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,324,2019-09-18T21:46:13Z,2019-09-19T07:48:58Z,2019-09-19T10:09:45Z,MERGED,True,11,1,1,https://github.com/scx,Update list of allowed metadata licences,1,[],https://github.com/hughsie/appstream-glib/pull/324,https://github.com/scx,1,https://github.com/hughsie/appstream-glib/pull/324,"This basically updates the list with values from the reference implementation.

  
    
      appstream-glib/libappstream-glib/as-app-validate.c
    
    
        Lines 1046 to 1068
      in
      d9270c5
    
  
  
    

        
          
           static gboolean 
        

        
          
           as_app_validate_is_content_license_id (const gchar *license_id) 
        

        
          
           { 
        

        
          
           	if (g_strcmp0 (license_id, ""@CC0-1.0"") == 0) 
        

        
          
           		return TRUE; 
        

        
          
           	if (g_strcmp0 (license_id, ""@CC-BY-3.0"") == 0) 
        

        
          
           		return TRUE; 
        

        
          
           	if (g_strcmp0 (license_id, ""@CC-BY-4.0"") == 0) 
        

        
          
           		return TRUE; 
        

        
          
           	if (g_strcmp0 (license_id, ""@CC-BY-SA-3.0"") == 0) 
        

        
          
           		return TRUE; 
        

        
          
           	if (g_strcmp0 (license_id, ""@CC-BY-SA-4.0"") == 0) 
        

        
          
           		return TRUE; 
        

        
          
           	if (g_strcmp0 (license_id, ""@GFDL-1.1"") == 0) 
        

        
          
           		return TRUE; 
        

        
          
           	if (g_strcmp0 (license_id, ""@GFDL-1.2"") == 0) 
        

        
          
           		return TRUE; 
        

        
          
           	if (g_strcmp0 (license_id, ""@GFDL-1.3"") == 0) 
        

        
          
           		return TRUE; 
        

        
          
           	if (g_strcmp0 (license_id, ""@FSFAP"") == 0) 
        

        
          
           		return TRUE; 
        

        
          
           	return FALSE; 
        

        
          
           } 
        
    
  


https://github.com/ximion/appstream/blob/08f44a7fda48dc639346414687e79ee2e82963dd/src/as-spdx.c#L469-L507
Fixes #323","This basically updates the list with values from the reference implementation.

  
    
      appstream-glib/libappstream-glib/as-app-validate.c
    
    
        Lines 1046 to 1068
      in
      d9270c5
    
  
  
    

        
          
           static gboolean 
        

        
          
           as_app_validate_is_content_license_id (const gchar *license_id) 
        

        
          
           { 
        

        
          
           	if (g_strcmp0 (license_id, ""@CC0-1.0"") == 0) 
        

        
          
           		return TRUE; 
        

        
          
           	if (g_strcmp0 (license_id, ""@CC-BY-3.0"") == 0) 
        

        
          
           		return TRUE; 
        

        
          
           	if (g_strcmp0 (license_id, ""@CC-BY-4.0"") == 0) 
        

        
          
           		return TRUE; 
        

        
          
           	if (g_strcmp0 (license_id, ""@CC-BY-SA-3.0"") == 0) 
        

        
          
           		return TRUE; 
        

        
          
           	if (g_strcmp0 (license_id, ""@CC-BY-SA-4.0"") == 0) 
        

        
          
           		return TRUE; 
        

        
          
           	if (g_strcmp0 (license_id, ""@GFDL-1.1"") == 0) 
        

        
          
           		return TRUE; 
        

        
          
           	if (g_strcmp0 (license_id, ""@GFDL-1.2"") == 0) 
        

        
          
           		return TRUE; 
        

        
          
           	if (g_strcmp0 (license_id, ""@GFDL-1.3"") == 0) 
        

        
          
           		return TRUE; 
        

        
          
           	if (g_strcmp0 (license_id, ""@FSFAP"") == 0) 
        

        
          
           		return TRUE; 
        

        
          
           	return FALSE; 
        

        
          
           } 
        
    
  


https://github.com/ximion/appstream/blob/08f44a7fda48dc639346414687e79ee2e82963dd/src/as-spdx.c#L469-L507
Fixes #323",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,324,2019-09-18T21:46:13Z,2019-09-19T07:48:58Z,2019-09-19T10:09:45Z,MERGED,True,11,1,1,https://github.com/scx,Update list of allowed metadata licences,1,[],https://github.com/hughsie/appstream-glib/pull/324,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/324#issuecomment-533011521,"This basically updates the list with values from the reference implementation.

  
    
      appstream-glib/libappstream-glib/as-app-validate.c
    
    
        Lines 1046 to 1068
      in
      d9270c5
    
  
  
    

        
          
           static gboolean 
        

        
          
           as_app_validate_is_content_license_id (const gchar *license_id) 
        

        
          
           { 
        

        
          
           	if (g_strcmp0 (license_id, ""@CC0-1.0"") == 0) 
        

        
          
           		return TRUE; 
        

        
          
           	if (g_strcmp0 (license_id, ""@CC-BY-3.0"") == 0) 
        

        
          
           		return TRUE; 
        

        
          
           	if (g_strcmp0 (license_id, ""@CC-BY-4.0"") == 0) 
        

        
          
           		return TRUE; 
        

        
          
           	if (g_strcmp0 (license_id, ""@CC-BY-SA-3.0"") == 0) 
        

        
          
           		return TRUE; 
        

        
          
           	if (g_strcmp0 (license_id, ""@CC-BY-SA-4.0"") == 0) 
        

        
          
           		return TRUE; 
        

        
          
           	if (g_strcmp0 (license_id, ""@GFDL-1.1"") == 0) 
        

        
          
           		return TRUE; 
        

        
          
           	if (g_strcmp0 (license_id, ""@GFDL-1.2"") == 0) 
        

        
          
           		return TRUE; 
        

        
          
           	if (g_strcmp0 (license_id, ""@GFDL-1.3"") == 0) 
        

        
          
           		return TRUE; 
        

        
          
           	if (g_strcmp0 (license_id, ""@FSFAP"") == 0) 
        

        
          
           		return TRUE; 
        

        
          
           	return FALSE; 
        

        
          
           } 
        
    
  


https://github.com/ximion/appstream/blob/08f44a7fda48dc639346414687e79ee2e82963dd/src/as-spdx.c#L469-L507
Fixes #323","I've been told I can merge this. The legal team did say the list of permissible licences ""was getting ridiculous"" so please @ximion please don't add any more upstream. I have to do a whole heap of ""paperwork"" now to change the superset licence of appstream-data in Fedora and RHEL now.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,324,2019-09-18T21:46:13Z,2019-09-19T07:48:58Z,2019-09-19T10:09:45Z,MERGED,True,11,1,1,https://github.com/scx,Update list of allowed metadata licences,1,[],https://github.com/hughsie/appstream-glib/pull/324,https://github.com/ximion,3,https://github.com/hughsie/appstream-glib/pull/324#issuecomment-533063345,"This basically updates the list with values from the reference implementation.

  
    
      appstream-glib/libappstream-glib/as-app-validate.c
    
    
        Lines 1046 to 1068
      in
      d9270c5
    
  
  
    

        
          
           static gboolean 
        

        
          
           as_app_validate_is_content_license_id (const gchar *license_id) 
        

        
          
           { 
        

        
          
           	if (g_strcmp0 (license_id, ""@CC0-1.0"") == 0) 
        

        
          
           		return TRUE; 
        

        
          
           	if (g_strcmp0 (license_id, ""@CC-BY-3.0"") == 0) 
        

        
          
           		return TRUE; 
        

        
          
           	if (g_strcmp0 (license_id, ""@CC-BY-4.0"") == 0) 
        

        
          
           		return TRUE; 
        

        
          
           	if (g_strcmp0 (license_id, ""@CC-BY-SA-3.0"") == 0) 
        

        
          
           		return TRUE; 
        

        
          
           	if (g_strcmp0 (license_id, ""@CC-BY-SA-4.0"") == 0) 
        

        
          
           		return TRUE; 
        

        
          
           	if (g_strcmp0 (license_id, ""@GFDL-1.1"") == 0) 
        

        
          
           		return TRUE; 
        

        
          
           	if (g_strcmp0 (license_id, ""@GFDL-1.2"") == 0) 
        

        
          
           		return TRUE; 
        

        
          
           	if (g_strcmp0 (license_id, ""@GFDL-1.3"") == 0) 
        

        
          
           		return TRUE; 
        

        
          
           	if (g_strcmp0 (license_id, ""@FSFAP"") == 0) 
        

        
          
           		return TRUE; 
        

        
          
           	return FALSE; 
        

        
          
           } 
        
    
  


https://github.com/ximion/appstream/blob/08f44a7fda48dc639346414687e79ee2e82963dd/src/as-spdx.c#L469-L507
Fixes #323","@hughsie Those have been permitted for a really long time and I don't intend to add more.
In fact, I should probably change the specification from saying ""any permissive license is fine, but AppStream implementations may restrict the list of permitted licenses"" to ""this list of permissive licenses is allowed explicitly, and nothing else"". Now that both implementations support the same stuff, that's probably very sensible to do.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,325,2019-09-27T14:28:25Z,2019-09-30T10:40:22Z,2019-10-04T14:01:22Z,MERGED,True,80,51,3,https://github.com/hughsie,Allow parsing desktop files using as_app_parse_data(),1,[],https://github.com/hughsie/appstream-glib/pull/325,https://github.com/hughsie,1,https://github.com/hughsie/appstream-glib/pull/325,This fixes showing local apps in GNOME Software without AppStream information.,This fixes showing local apps in GNOME Software without AppStream information.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,325,2019-09-27T14:28:25Z,2019-09-30T10:40:22Z,2019-10-04T14:01:22Z,MERGED,True,80,51,3,https://github.com/hughsie,Allow parsing desktop files using as_app_parse_data(),1,[],https://github.com/hughsie/appstream-glib/pull/325,https://github.com/uajain,2,https://github.com/hughsie/appstream-glib/pull/325#issuecomment-535968238,This fixes showing local apps in GNOME Software without AppStream information.,"Sure, LGTM",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,325,2019-09-27T14:28:25Z,2019-09-30T10:40:22Z,2019-10-04T14:01:22Z,MERGED,True,80,51,3,https://github.com/hughsie,Allow parsing desktop files using as_app_parse_data(),1,[],https://github.com/hughsie/appstream-glib/pull/325,https://github.com/kalev,3,https://github.com/hughsie/appstream-glib/pull/325#issuecomment-536503771,This fixes showing local apps in GNOME Software without AppStream information.,"Seems fine to me. This just breaks out a function so you can call it in as_app_parse_data for desktop files, right?",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,325,2019-09-27T14:28:25Z,2019-09-30T10:40:22Z,2019-10-04T14:01:22Z,MERGED,True,80,51,3,https://github.com/hughsie,Allow parsing desktop files using as_app_parse_data(),1,[],https://github.com/hughsie/appstream-glib/pull/325,https://github.com/hughsie,4,https://github.com/hughsie/appstream-glib/pull/325#issuecomment-536505824,This fixes showing local apps in GNOME Software without AppStream information.,"This just breaks out a function so you can call it in as_app_parse_data for desktop files, right

Exactly that.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,328,2019-10-02T11:59:08Z,2019-10-02T12:58:25Z,2019-10-02T15:13:37Z,MERGED,True,106,30,2,https://github.com/pwithnall,as-content-rating: Make default values match OARS semantics,1,[],https://github.com/hughsie/appstream-glib/pull/328,https://github.com/pwithnall,1,https://github.com/hughsie/appstream-glib/pull/328,"If an OARS key is missing from a <content_rating/> element, the
default value should be none, not unknown. Change the implementation
of as_content_rating_get_value() to do that, and add some tests.
See the OARS specification:
https://github.com/hughsie/oars/blob/master/specification/oars-1.1.md
Signed-off-by: Philip Withnall withnall@endlessm.com","If an OARS key is missing from a <content_rating/> element, the
default value should be none, not unknown. Change the implementation
of as_content_rating_get_value() to do that, and add some tests.
See the OARS specification:
https://github.com/hughsie/oars/blob/master/specification/oars-1.1.md
Signed-off-by: Philip Withnall withnall@endlessm.com",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,330,2019-10-17T08:56:35Z,,2019-10-17T08:56:35Z,OPEN,False,99,82,21,https://github.com/hughsie,Wip/hughsie/symbol sanity,2,['bug'],https://github.com/hughsie/appstream-glib/pull/330,https://github.com/hughsie,1,https://github.com/hughsie/appstream-glib/pull/330,,,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,332,2019-11-01T16:28:05Z,2019-11-01T18:47:57Z,2019-11-01T18:47:58Z,MERGED,True,4,0,2,https://github.com/decathorpe,"as-app: add ""icon-theme"" as recognised component type",1,[],https://github.com/hughsie/appstream-glib/pull/332,https://github.com/decathorpe,1,https://github.com/hughsie/appstream-glib/pull/332,"I think making as_app_kind_from_string not return AS_APP_KIND_UNKNOWN should be enough, but I'm not really sure since I'm not familiar with how the validation flow works in detail.
See: https://www.freedesktop.org/software/appstream/docs/sect-Metadata-IconTheme.html
Fixes #331","I think making as_app_kind_from_string not return AS_APP_KIND_UNKNOWN should be enough, but I'm not really sure since I'm not familiar with how the validation flow works in detail.
See: https://www.freedesktop.org/software/appstream/docs/sect-Metadata-IconTheme.html
Fixes #331",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,334,2019-11-14T14:31:09Z,2019-11-14T14:42:21Z,2019-11-14T14:42:28Z,MERGED,True,81,6,3,https://github.com/kalev,Support ${id}/${locale}.qm in addition to ${id}_${locale}.qm,3,[],https://github.com/hughsie/appstream-glib/pull/334,https://github.com/kalev,1,https://github.com/hughsie/appstream-glib/pull/334,"This fixes stellarium flatpak builds in Fedora infrastructure that currently fail with:
Error parsing translations: Error reading file “/tmp/tmpmxupiqos/build/files/share/stellarium/translations/stellarium”: Is a directory","This fixes stellarium flatpak builds in Fedora infrastructure that currently fail with:
Error parsing translations: Error reading file “/tmp/tmpmxupiqos/build/files/share/stellarium/translations/stellarium”: Is a directory",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,335,2019-11-14T14:50:45Z,2019-11-14T14:57:27Z,2019-11-14T15:27:47Z,CLOSED,False,52,81,3,https://github.com/kalev,"Revert ""Allow parsing desktop files using as_app_parse_data()""",1,[],https://github.com/hughsie/appstream-glib/pull/335,https://github.com/kalev,1,https://github.com/hughsie/appstream-glib/pull/335,"The original issue was fixed in gnome-software in a different way that
didn't require appstream-glib changes in
https://gitlab.gnome.org/GNOME/gnome-software/merge_requests/335.
This commit reverts the appstream-glib change as it regressed older
gnome-software versions.
This reverts commit 3b6701a.
This reverts commit d407862.","The original issue was fixed in gnome-software in a different way that
didn't require appstream-glib changes in
https://gitlab.gnome.org/GNOME/gnome-software/merge_requests/335.
This commit reverts the appstream-glib change as it regressed older
gnome-software versions.
This reverts commit 3b6701a.
This reverts commit d407862.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,335,2019-11-14T14:50:45Z,2019-11-14T14:57:27Z,2019-11-14T15:27:47Z,CLOSED,False,52,81,3,https://github.com/kalev,"Revert ""Allow parsing desktop files using as_app_parse_data()""",1,[],https://github.com/hughsie/appstream-glib/pull/335,https://github.com/kalev,2,https://github.com/hughsie/appstream-glib/pull/335#issuecomment-553921597,"The original issue was fixed in gnome-software in a different way that
didn't require appstream-glib changes in
https://gitlab.gnome.org/GNOME/gnome-software/merge_requests/335.
This commit reverts the appstream-glib change as it regressed older
gnome-software versions.
This reverts commit 3b6701a.
This reverts commit d407862.",This would allow updating libappstream-glib in F30. @hughsie Am I correct that this should no longer be needed?,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,335,2019-11-14T14:50:45Z,2019-11-14T14:57:27Z,2019-11-14T15:27:47Z,CLOSED,False,52,81,3,https://github.com/kalev,"Revert ""Allow parsing desktop files using as_app_parse_data()""",1,[],https://github.com/hughsie/appstream-glib/pull/335,https://github.com/hughsie,3,https://github.com/hughsie/appstream-glib/pull/335#issuecomment-553922863,"The original issue was fixed in gnome-software in a different way that
didn't require appstream-glib changes in
https://gitlab.gnome.org/GNOME/gnome-software/merge_requests/335.
This commit reverts the appstream-glib change as it regressed older
gnome-software versions.
This reverts commit 3b6701a.
This reverts commit d407862.","@kalev I don't think we can do this, gnome-software is actually using as_app_parse_data() to avoid spewing warnings everywhere. I think we can backport the GS 314cde9ccff4f0a9eb685b174f7add0f31b1e9c7 commit into f30 tho.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,335,2019-11-14T14:50:45Z,2019-11-14T14:57:27Z,2019-11-14T15:27:47Z,CLOSED,False,52,81,3,https://github.com/kalev,"Revert ""Allow parsing desktop files using as_app_parse_data()""",1,[],https://github.com/hughsie/appstream-glib/pull/335,https://github.com/kalev,4,https://github.com/hughsie/appstream-glib/pull/335#issuecomment-553924207,"The original issue was fixed in gnome-software in a different way that
didn't require appstream-glib changes in
https://gitlab.gnome.org/GNOME/gnome-software/merge_requests/335.
This commit reverts the appstream-glib change as it regressed older
gnome-software versions.
This reverts commit 3b6701a.
This reverts commit d407862.","Ah, sure, works for me. Thanks!",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,335,2019-11-14T14:50:45Z,2019-11-14T14:57:27Z,2019-11-14T15:27:47Z,CLOSED,False,52,81,3,https://github.com/kalev,"Revert ""Allow parsing desktop files using as_app_parse_data()""",1,[],https://github.com/hughsie/appstream-glib/pull/335,https://github.com/kalev,5,https://github.com/hughsie/appstream-glib/pull/335#issuecomment-553926283,"The original issue was fixed in gnome-software in a different way that
didn't require appstream-glib changes in
https://gitlab.gnome.org/GNOME/gnome-software/merge_requests/335.
This commit reverts the appstream-glib change as it regressed older
gnome-software versions.
This reverts commit 3b6701a.
This reverts commit d407862.",I went ahead and did that in https://src.fedoraproject.org/rpms/gnome-software/c/22f0b24c5013c6632ff191eb7d3cf8a0e4ba0dba?branch=f30,True,{'THUMBS_UP': ['https://github.com/hughsie']}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,336,2019-11-21T22:00:30Z,2019-11-25T17:53:25Z,2019-11-25T17:53:25Z,CLOSED,False,3,6,1,https://github.com/Jehan,Fix Win32 headers.,2,[],https://github.com/hughsie/appstream-glib/pull/336,https://github.com/Jehan,1,https://github.com/hughsie/appstream-glib/pull/336,"For some reason, with mingw-w64 64-bit builds, this was just a warning.
But building for 32-bit, linking was failing:

libappstream-glib/as-self-test.c:99: undefined reference to `GetFullPathNameA'
collect2: error: ld returned 1 exit status

Adding the appropriate header fixes both the warning and error.","For some reason, with mingw-w64 64-bit builds, this was just a warning.
But building for 32-bit, linking was failing:

libappstream-glib/as-self-test.c:99: undefined reference to `GetFullPathNameA'
collect2: error: ld returned 1 exit status

Adding the appropriate header fixes both the warning and error.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,336,2019-11-21T22:00:30Z,2019-11-25T17:53:25Z,2019-11-25T17:53:25Z,CLOSED,False,3,6,1,https://github.com/Jehan,Fix Win32 headers.,2,[],https://github.com/hughsie/appstream-glib/pull/336,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/336#issuecomment-557491339,"For some reason, with mingw-w64 64-bit builds, this was just a warning.
But building for 32-bit, linking was failing:

libappstream-glib/as-self-test.c:99: undefined reference to `GetFullPathNameA'
collect2: error: ld returned 1 exit status

Adding the appropriate header fixes both the warning and error.","Also, I wonder if _fullpath would be a better replacement...",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,336,2019-11-21T22:00:30Z,2019-11-25T17:53:25Z,2019-11-25T17:53:25Z,CLOSED,False,3,6,1,https://github.com/Jehan,Fix Win32 headers.,2,[],https://github.com/hughsie/appstream-glib/pull/336,https://github.com/Jehan,3,https://github.com/hughsie/appstream-glib/pull/336#issuecomment-557503027,"For some reason, with mingw-w64 64-bit builds, this was just a warning.
But building for 32-bit, linking was failing:

libappstream-glib/as-self-test.c:99: undefined reference to `GetFullPathNameA'
collect2: error: ld returned 1 exit status

Adding the appropriate header fixes both the warning and error.","Doesn't this include windef.h for us?

Checking windows.h contents (the ones provided by the mingw-w64 project), it indeed includes windef.h. And re-building both 32 and 64-bit, it builds fine. So let's say it's good. I amended the commit.

Also, I wonder if _fullpath would be a better replacement...

I didn't understand the comment.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,336,2019-11-21T22:00:30Z,2019-11-25T17:53:25Z,2019-11-25T17:53:25Z,CLOSED,False,3,6,1,https://github.com/Jehan,Fix Win32 headers.,2,[],https://github.com/hughsie/appstream-glib/pull/336,https://github.com/hughsie,4,https://github.com/hughsie/appstream-glib/pull/336#issuecomment-557549039,"For some reason, with mingw-w64 64-bit builds, this was just a warning.
But building for 32-bit, linking was failing:

libappstream-glib/as-self-test.c:99: undefined reference to `GetFullPathNameA'
collect2: error: ld returned 1 exit status

Adding the appropriate header fixes both the warning and error.","I didn't understand the comment.

This is what i came up with in fwupd:  fwupd/fwupd@2afea05#diff-9f39078dee82f226975a6beb2b04d62cR1499
It very well may be wrong, if so please say! :)",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,336,2019-11-21T22:00:30Z,2019-11-25T17:53:25Z,2019-11-25T17:53:25Z,CLOSED,False,3,6,1,https://github.com/Jehan,Fix Win32 headers.,2,[],https://github.com/hughsie/appstream-glib/pull/336,https://github.com/Jehan,5,https://github.com/hughsie/appstream-glib/pull/336#issuecomment-557557981,"For some reason, with mingw-w64 64-bit builds, this was just a warning.
But building for 32-bit, linking was failing:

libappstream-glib/as-self-test.c:99: undefined reference to `GetFullPathNameA'
collect2: error: ld returned 1 exit status

Adding the appropriate header fixes both the warning and error.","Ah ok, I didn't think it was an actual function name (because, what a weird idea to have a public API starting with underscore and different name style!).

It very well may be wrong, if so please say! :)

Well now that I know and looked at the docs, both function look quite similar. So I tested, and using _fullpath() builds correctly (I didn't run the code, only cross-built it). No error, no warning.
So if you want, I can commit and push this change.
Other than this, I can't say if it is better or whatever.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,336,2019-11-21T22:00:30Z,2019-11-25T17:53:25Z,2019-11-25T17:53:25Z,CLOSED,False,3,6,1,https://github.com/Jehan,Fix Win32 headers.,2,[],https://github.com/hughsie/appstream-glib/pull/336,https://github.com/Jehan,6,https://github.com/hughsie/appstream-glib/pull/336#issuecomment-557559908,"For some reason, with mingw-w64 64-bit builds, this was just a warning.
But building for 32-bit, linking was failing:

libappstream-glib/as-self-test.c:99: undefined reference to `GetFullPathNameA'
collect2: error: ld returned 1 exit status

Adding the appropriate header fixes both the warning and error.","Well actually looking closer at Win32 docs, it says that GetFullPathNameA() is not recommended for multi-threaded applications, and since appstream-glib is a library, it can definitely be used in multi-threaded cases. So whatever. I made the change.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,336,2019-11-21T22:00:30Z,2019-11-25T17:53:25Z,2019-11-25T17:53:25Z,CLOSED,False,3,6,1,https://github.com/Jehan,Fix Win32 headers.,2,[],https://github.com/hughsie/appstream-glib/pull/336,https://github.com/Jehan,7,https://github.com/hughsie/appstream-glib/pull/336#issuecomment-557784960,"For some reason, with mingw-w64 64-bit builds, this was just a warning.
But building for 32-bit, linking was failing:

libappstream-glib/as-self-test.c:99: undefined reference to `GetFullPathNameA'
collect2: error: ld returned 1 exit status

Adding the appropriate header fixes both the warning and error.","I still think you need to test for EXISTS as it returns non null if

Indeed none of these functions test for existence. Yet you already test for existence (just before using relative paths), but only from TESTDIRSRC. I can also add another g_file_test() from TESTDIRBUILD and if it fails, return NULL directly instead of continuing. Is that what you are asking?
P.S.: granted, my initial goal with this patch was only to not have build breakage. I never tried to improve the code. Seriously I have not even checked what this code is for, I only care about the fact it prevented me from building appstream-glib. 😛",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,336,2019-11-21T22:00:30Z,2019-11-25T17:53:25Z,2019-11-25T17:53:25Z,CLOSED,False,3,6,1,https://github.com/Jehan,Fix Win32 headers.,2,[],https://github.com/hughsie/appstream-glib/pull/336,https://github.com/hughsie,8,https://github.com/hughsie/appstream-glib/pull/336#issuecomment-558268071,"For some reason, with mingw-w64 64-bit builds, this was just a warning.
But building for 32-bit, linking was failing:

libappstream-glib/as-self-test.c:99: undefined reference to `GetFullPathNameA'
collect2: error: ld returned 1 exit status

Adding the appropriate header fixes both the warning and error.","I've pushed a slightly modified version of this, thanks!",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,338,2019-12-03T15:16:10Z,2019-12-03T16:01:04Z,2019-12-03T16:01:05Z,MERGED,True,1,0,1,https://github.com/Keruspe,as-app: properly initialize unique_id_mutex,1,[],https://github.com/hughsie/appstream-glib/pull/338,https://github.com/Keruspe,1,https://github.com/hughsie/appstream-glib/pull/338,"We are using it, clearing it, but e never initialize it.
For some reasons it seems to work, not sure how or why,
but when glib is uilt with clang, then the problem
surfaces and we get a nice segmentation fault.
Properly initializing it fixes this","We are using it, clearing it, but e never initialize it.
For some reasons it seems to work, not sure how or why,
but when glib is uilt with clang, then the problem
surfaces and we get a nice segmentation fault.
Properly initializing it fixes this",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,338,2019-12-03T15:16:10Z,2019-12-03T16:01:04Z,2019-12-03T16:01:05Z,MERGED,True,1,0,1,https://github.com/Keruspe,as-app: properly initialize unique_id_mutex,1,[],https://github.com/hughsie/appstream-glib/pull/338,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/338#issuecomment-561213559,"We are using it, clearing it, but e never initialize it.
For some reasons it seems to work, not sure how or why,
but when glib is uilt with clang, then the problem
surfaces and we get a nice segmentation fault.
Properly initializing it fixes this","Great, thanks!",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,342,2019-12-28T11:34:58Z,2019-12-28T11:54:05Z,2019-12-28T11:54:05Z,MERGED,True,411,149,1,https://github.com/frandieguez,Update Galician translations,1,[],https://github.com/hughsie/appstream-glib/pull/342,https://github.com/frandieguez,1,https://github.com/hughsie/appstream-glib/pull/342,"Zanata doesn't allow to import po files so, please merge it from this PR","Zanata doesn't allow to import po files so, please merge it from this PR",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,343,2020-01-03T20:30:19Z,2020-01-06T11:14:55Z,2020-01-06T11:14:55Z,MERGED,True,1,1,1,https://github.com/aclemons,Bump minimum glib2 dependency.,1,[],https://github.com/hughsie/appstream-glib/pull/343,https://github.com/aclemons,1,https://github.com/hughsie/appstream-glib/pull/343,"as-app-desktop.c uses g_key_file_load_from_bytes which was added to glib 2.49.3
(see NEWS¹). Additionally as-format.c uses g_canonicalize_filename which
was added in 2.58 (commit²)
Closes #341.
¹ https://gitlab.gnome.org/GNOME/glib/blob/2.49.3/NEWS#L9
² https://gitlab.gnome.org/GNOME/glib/commit/b9b642de06e714584e89aa7b8d878a98599538ed#c0e40c6287fb64a7a3d8c9fa35b5e014025da233_175_175","as-app-desktop.c uses g_key_file_load_from_bytes which was added to glib 2.49.3
(see NEWS¹). Additionally as-format.c uses g_canonicalize_filename which
was added in 2.58 (commit²)
Closes #341.
¹ https://gitlab.gnome.org/GNOME/glib/blob/2.49.3/NEWS#L9
² https://gitlab.gnome.org/GNOME/glib/commit/b9b642de06e714584e89aa7b8d878a98599538ed#c0e40c6287fb64a7a3d8c9fa35b5e014025da233_175_175",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,344,2020-01-06T11:07:34Z,2020-01-06T11:14:35Z,2020-01-06T11:14:39Z,MERGED,True,3,3,2,https://github.com/hughsie,Update the Fedora CI to F31,1,['enhancement'],https://github.com/hughsie/appstream-glib/pull/344,https://github.com/hughsie,1,https://github.com/hughsie/appstream-glib/pull/344,,,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,345,2020-01-17T03:44:38Z,2020-01-17T06:25:00Z,2020-01-17T06:25:00Z,MERGED,True,3,3,2,https://github.com/robert-ancell,docs: Fix examples of AsNodeToXmlFlags using an invalid flag.,1,[],https://github.com/hughsie/appstream-glib/pull/345,https://github.com/robert-ancell,1,https://github.com/hughsie/appstream-glib/pull/345,,,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,346,2020-01-17T12:42:38Z,2020-01-17T15:42:15Z,2020-01-17T16:30:15Z,MERGED,True,30,2,5,https://github.com/samm-git,Fix build on the macOS platform,3,[],https://github.com/hughsie/appstream-glib/pull/346,https://github.com/samm-git,1,https://github.com/hughsie/appstream-glib/pull/346,"This PR includes:

use darwin native uuid library instead of external one
support version script with clang/apple
use .so suffix for internal plugins","This PR includes:

use darwin native uuid library instead of external one
support version script with clang/apple
use .so suffix for internal plugins",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,348,2020-01-27T00:53:23Z,2020-01-27T01:39:13Z,2020-01-27T02:16:55Z,CLOSED,False,24,0,2,https://github.com/Conan-Kudo,WIP: libasglib: Support all compression formats for AppStream XML repodata,1,[],https://github.com/hughsie/appstream-glib/pull/348,https://github.com/Conan-Kudo,1,https://github.com/hughsie/appstream-glib/pull/348,"Various Linux distributions are compressing AppStream XML repodata
with compression algorithms other than gzip. libappstream-glib needs
to recognize these so that they can be properly decompressed and used
accordingly.","Various Linux distributions are compressing AppStream XML repodata
with compression algorithms other than gzip. libappstream-glib needs
to recognize these so that they can be properly decompressed and used
accordingly.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,348,2020-01-27T00:53:23Z,2020-01-27T01:39:13Z,2020-01-27T02:16:55Z,CLOSED,False,24,0,2,https://github.com/Conan-Kudo,WIP: libasglib: Support all compression formats for AppStream XML repodata,1,[],https://github.com/hughsie/appstream-glib/pull/348,https://github.com/Conan-Kudo,2,https://github.com/hughsie/appstream-glib/pull/348#issuecomment-578562006,"Various Linux distributions are compressing AppStream XML repodata
with compression algorithms other than gzip. libappstream-glib needs
to recognize these so that they can be properly decompressed and used
accordingly.","@hughsie This patch was written to resolve issues discovered in getting AppStream repodata to load in OpenMandriva. It will also affect ROSA and a few other distributions using non-gzip XML repodata.
(cc: @berolinux, @mikhailnov, @ximion)",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,348,2020-01-27T00:53:23Z,2020-01-27T01:39:13Z,2020-01-27T02:16:55Z,CLOSED,False,24,0,2,https://github.com/Conan-Kudo,WIP: libasglib: Support all compression formats for AppStream XML repodata,1,[],https://github.com/hughsie/appstream-glib/pull/348,https://github.com/Conan-Kudo,3,https://github.com/hughsie/appstream-glib/pull/348#issuecomment-578562423,"Various Linux distributions are compressing AppStream XML repodata
with compression algorithms other than gzip. libappstream-glib needs
to recognize these so that they can be properly decompressed and used
accordingly.","@hughsie Ugh, this patch is not finished, just noticed the gzip hardcode in as-node.c...",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,348,2020-01-27T00:53:23Z,2020-01-27T01:39:13Z,2020-01-27T02:16:55Z,CLOSED,False,24,0,2,https://github.com/Conan-Kudo,WIP: libasglib: Support all compression formats for AppStream XML repodata,1,[],https://github.com/hughsie/appstream-glib/pull/348,https://github.com/berolinux,4,https://github.com/hughsie/appstream-glib/pull/348#issuecomment-578563355,"Various Linux distributions are compressing AppStream XML repodata
with compression algorithms other than gzip. libappstream-glib needs
to recognize these so that they can be properly decompressed and used
accordingly.",Another identical use in as-yaml.c,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,348,2020-01-27T00:53:23Z,2020-01-27T01:39:13Z,2020-01-27T02:16:55Z,CLOSED,False,24,0,2,https://github.com/Conan-Kudo,WIP: libasglib: Support all compression formats for AppStream XML repodata,1,[],https://github.com/hughsie/appstream-glib/pull/348,https://github.com/Conan-Kudo,5,https://github.com/hughsie/appstream-glib/pull/348#issuecomment-578563906,"Various Linux distributions are compressing AppStream XML repodata
with compression algorithms other than gzip. libappstream-glib needs
to recognize these so that they can be properly decompressed and used
accordingly.","@berolinux I'm not concerned about the YAML ones, that's only used by Debian and they're still using gzip.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,348,2020-01-27T00:53:23Z,2020-01-27T01:39:13Z,2020-01-27T02:16:55Z,CLOSED,False,24,0,2,https://github.com/Conan-Kudo,WIP: libasglib: Support all compression formats for AppStream XML repodata,1,[],https://github.com/hughsie/appstream-glib/pull/348,https://github.com/ximion,6,https://github.com/hughsie/appstream-glib/pull/348#issuecomment-578566521,"Various Linux distributions are compressing AppStream XML repodata
with compression algorithms other than gzip. libappstream-glib needs
to recognize these so that they can be properly decompressed and used
accordingly.","Well, that's actually not permitted by the specification... (""The XML files might be compressed with GZip."") People can ship it over the wire as whatever they want, but in in app-info folders the files must either be raw data or GZip-compressed. The specification is very explicit on that matter (mentioning it twice, which is probably a style issue ^^).
On Debian, APT also changes the compression format to gzip explicitly in case it was something else before.
Not sure if we should accommodate for distributions deliberately doing the wrong thing and implementing something that no compliant AppStream implementation supports.
Personally, I am very much against adding a wide array of different compression formats - if there was one more it should probably be Zstd or LZ4 (XZ doesn't make much sense especially for appstream-glib, as that relies on fast decompression speed even more than libappstream does. And bz2 is pretty much dead for most purposes, as there are better options available now)",True,{'THUMBS_UP': ['https://github.com/hughsie']}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,348,2020-01-27T00:53:23Z,2020-01-27T01:39:13Z,2020-01-27T02:16:55Z,CLOSED,False,24,0,2,https://github.com/Conan-Kudo,WIP: libasglib: Support all compression formats for AppStream XML repodata,1,[],https://github.com/hughsie/appstream-glib/pull/348,https://github.com/Conan-Kudo,7,https://github.com/hughsie/appstream-glib/pull/348#issuecomment-578566677,"Various Linux distributions are compressing AppStream XML repodata
with compression algorithms other than gzip. libappstream-glib needs
to recognize these so that they can be properly decompressed and used
accordingly.","@ximion Then that means we should probably be decompressing this at the PackageKit backend level, before handing it to asglib?",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,348,2020-01-27T00:53:23Z,2020-01-27T01:39:13Z,2020-01-27T02:16:55Z,CLOSED,False,24,0,2,https://github.com/Conan-Kudo,WIP: libasglib: Support all compression formats for AppStream XML repodata,1,[],https://github.com/hughsie/appstream-glib/pull/348,https://github.com/Conan-Kudo,8,https://github.com/hughsie/appstream-glib/pull/348#issuecomment-578566766,"Various Linux distributions are compressing AppStream XML repodata
with compression algorithms other than gzip. libappstream-glib needs
to recognize these so that they can be properly decompressed and used
accordingly.","Hmm, since this is the wrong kind of fix entirely, I'm closing this.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,348,2020-01-27T00:53:23Z,2020-01-27T01:39:13Z,2020-01-27T02:16:55Z,CLOSED,False,24,0,2,https://github.com/Conan-Kudo,WIP: libasglib: Support all compression formats for AppStream XML repodata,1,[],https://github.com/hughsie/appstream-glib/pull/348,https://github.com/ximion,9,https://github.com/hughsie/appstream-glib/pull/348#issuecomment-578567334,"Various Linux distributions are compressing AppStream XML repodata
with compression algorithms other than gzip. libappstream-glib needs
to recognize these so that they can be properly decompressed and used
accordingly.","@ximion Then that means we should probably be decompressing this at the PackageKit backend level, before handing it to asglib?

Exactly. I am not against adding a new compression method if there's a benefit to it though. I wonder how many things would need to be adjusted to support that though, and whether that potential breakage is worth it... (ideally it would be only libappstream and libappstream-glib... @hughsie 's input is very welcome on this. Personally, I'm fine with gzip, it's fast to decompress and that's why we use it here in the first place)",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,348,2020-01-27T00:53:23Z,2020-01-27T01:39:13Z,2020-01-27T02:16:55Z,CLOSED,False,24,0,2,https://github.com/Conan-Kudo,WIP: libasglib: Support all compression formats for AppStream XML repodata,1,[],https://github.com/hughsie/appstream-glib/pull/348,https://github.com/Conan-Kudo,10,https://github.com/hughsie/appstream-glib/pull/348#issuecomment-578567685,"Various Linux distributions are compressing AppStream XML repodata
with compression algorithms other than gzip. libappstream-glib needs
to recognize these so that they can be properly decompressed and used
accordingly.","@ximion So Fedora and Mageia currently ship repodata in gzip and zck, while OpenMandriva and ROSA ship in xz. I believe Arch is transitioning to zstd from gzip and xz.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,348,2020-01-27T00:53:23Z,2020-01-27T01:39:13Z,2020-01-27T02:16:55Z,CLOSED,False,24,0,2,https://github.com/Conan-Kudo,WIP: libasglib: Support all compression formats for AppStream XML repodata,1,[],https://github.com/hughsie/appstream-glib/pull/348,https://github.com/ximion,11,https://github.com/hughsie/appstream-glib/pull/348#issuecomment-578568147,"Various Linux distributions are compressing AppStream XML repodata
with compression algorithms other than gzip. libappstream-glib needs
to recognize these so that they can be properly decompressed and used
accordingly.","Debian ships it as gzip or xz, with xz being preferred (I just looked) and APT transparently recompresses AppStream data to be stored as gzip on-disk.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,348,2020-01-27T00:53:23Z,2020-01-27T01:39:13Z,2020-01-27T02:16:55Z,CLOSED,False,24,0,2,https://github.com/Conan-Kudo,WIP: libasglib: Support all compression formats for AppStream XML repodata,1,[],https://github.com/hughsie/appstream-glib/pull/348,https://github.com/Conan-Kudo,12,https://github.com/hughsie/appstream-glib/pull/348#issuecomment-578571096,"Various Linux distributions are compressing AppStream XML repodata
with compression algorithms other than gzip. libappstream-glib needs
to recognize these so that they can be properly decompressed and used
accordingly.","Right now, the only part of the DNF package manager stack that is aware of AppStream is PackageKit, so that's probably where the logic would need to be fixed...",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,351,2020-03-21T16:50:09Z,2020-03-22T16:09:44Z,2020-03-22T16:09:44Z,MERGED,True,108,0,1,https://github.com/fmuellner,"util: Add ""validate-version"" command",1,[],https://github.com/hughsie/appstream-glib/pull/351,https://github.com/fmuellner,1,https://github.com/hughsie/appstream-glib/pull/351,"The command validates that an AppData or MetaInfo file includes a release
for the specified version. For forgetful maintainers (hi!), this can be
a useful test during distcheck.","The command validates that an AppData or MetaInfo file includes a release
for the specified version. For forgetful maintainers (hi!), this can be
a useful test during distcheck.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,352,2020-03-22T22:51:16Z,2020-03-23T05:54:37Z,2020-03-23T05:54:38Z,MERGED,True,3,0,1,https://github.com/fmuellner,util: Complete new validate-version command,1,[],https://github.com/hughsie/appstream-glib/pull/352,https://github.com/fmuellner,1,https://github.com/hughsie/appstream-glib/pull/352,"Commit 5cbcfe0 missed updating appstream-util's bash completion
for the new command, do that now.","Commit 5cbcfe0 missed updating appstream-util's bash completion
for the new command, do that now.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,353,2020-03-30T09:19:06Z,2020-03-30T09:59:44Z,2020-03-30T09:59:44Z,MERGED,True,1,1,1,https://github.com/tim77,The AppData files now go to /usr/share/metainfo,1,[],https://github.com/hughsie/appstream-glib/pull/353,https://github.com/tim77,1,https://github.com/hughsie/appstream-glib/pull/353,https://www.freedesktop.org/software/appstream/docs/chap-Quickstart.html#sect-Quickstart-DesktopApps,https://www.freedesktop.org/software/appstream/docs/chap-Quickstart.html#sect-Quickstart-DesktopApps,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,357,2020-04-15T22:42:24Z,2020-04-16T05:50:38Z,2020-04-16T07:36:37Z,MERGED,True,1,0,1,https://github.com/bigon,as-app: Properly initialize unique_id_mutex,1,[],https://github.com/hughsie/appstream-glib/pull/357,https://github.com/bigon,1,https://github.com/hughsie/appstream-glib/pull/357,"That should fix FTBFS on some architectures
Fixes: #356","That should fix FTBFS on some architectures
Fixes: #356",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,359,2020-04-22T09:24:09Z,2020-04-22T09:34:03Z,2020-04-22T09:34:04Z,MERGED,True,12,1,2,https://github.com/Vogtinator,Fix crash with invalid children of <ul/>,1,[],https://github.com/hughsie/appstream-glib/pull/359,https://github.com/Vogtinator,1,https://github.com/hughsie/appstream-glib/pull/359,"It segfaulted when building the error message as data_c->name was invalid.
data_c was a valid tag, so only the data_c->tag union member was active.
Fix the crash by calling the proper function instead and add a test case.","It segfaulted when building the error message as data_c->name was invalid.
data_c was a valid tag, so only the data_c->tag union member was active.
Fix the crash by calling the proper function instead and add a test case.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,361,2020-04-24T11:12:41Z,2020-04-24T13:16:54Z,2020-04-27T10:35:27Z,MERGED,True,3,1,1,https://github.com/barthalion,Allow timestamp in the future in validate-relax,1,[],https://github.com/hughsie/appstream-glib/pull/361,https://github.com/barthalion,1,https://github.com/hughsie/appstream-glib/pull/361,"KDE team prepares releases for nightly builds far in advance and having the release timestamp in the future is expected. validate-relax is being run by appstream-compose, thus breaking flatpak-builder builds for them.","KDE team prepares releases for nightly builds far in advance and having the release timestamp in the future is expected. validate-relax is being run by appstream-compose, thus breaking flatpak-builder builds for them.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,364,2020-05-21T14:50:44Z,2020-06-05T14:47:28Z,2020-06-08T11:30:22Z,MERGED,True,28917,6396,34,https://github.com/pwithnall,as-content-rating: Add content rating system APIs from gnome-software,3,[],https://github.com/hughsie/appstream-glib/pull/364,https://github.com/pwithnall,1,https://github.com/hughsie/appstream-glib/pull/364,"These are moving to libappstream-glib as they are used by gnome-software
and libmalcontent-ui, and are potentially useful in other projects. In
particular, there are a number of translatable strings which need to be
centralised so that translation work isn’t repeated.
This code was originally written by:
• Richard Hughes richard@hughsie.com
• Piotr Drąg piotrdrag@gmail.com
• Philip Withnall withnall@endlessm.com
• Jordi Mas jmas@softcatala.org
It was previously in src/gs-content-rating.[ch] in gnome-software,
under the GPL-2.0+; and in libmalcontent-ui/gs-content-rating.[ch] in
malcontent, also under the GPL-2.0+. Relicensing from LGPL to GPL can
happen automatically.
In moving it from one project to the other, I have added documentation
comments and tweaked some of the APIs to make them more usable.
Signed-off-by: Philip Withnall withnall@endlessm.com

Draft until:
[ ] Relicensing is agreed to by all contributors (see below)
[ ] Commit message has been updated to include relicensing details/agreements
[ ] MR exists for moving translations over","These are moving to libappstream-glib as they are used by gnome-software
and libmalcontent-ui, and are potentially useful in other projects. In
particular, there are a number of translatable strings which need to be
centralised so that translation work isn’t repeated.
This code was originally written by:
• Richard Hughes richard@hughsie.com
• Piotr Drąg piotrdrag@gmail.com
• Philip Withnall withnall@endlessm.com
• Jordi Mas jmas@softcatala.org
It was previously in src/gs-content-rating.[ch] in gnome-software,
under the GPL-2.0+; and in libmalcontent-ui/gs-content-rating.[ch] in
malcontent, also under the GPL-2.0+. Relicensing from LGPL to GPL can
happen automatically.
In moving it from one project to the other, I have added documentation
comments and tweaked some of the APIs to make them more usable.
Signed-off-by: Philip Withnall withnall@endlessm.com

Draft until:
[ ] Relicensing is agreed to by all contributors (see below)
[ ] Commit message has been updated to include relicensing details/agreements
[ ] MR exists for moving translations over",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,364,2020-05-21T14:50:44Z,2020-06-05T14:47:28Z,2020-06-08T11:30:22Z,MERGED,True,28917,6396,34,https://github.com/pwithnall,as-content-rating: Add content rating system APIs from gnome-software,3,[],https://github.com/hughsie/appstream-glib/pull/364,https://github.com/pwithnall,2,https://github.com/hughsie/appstream-glib/pull/364#issuecomment-632133382,"These are moving to libappstream-glib as they are used by gnome-software
and libmalcontent-ui, and are potentially useful in other projects. In
particular, there are a number of translatable strings which need to be
centralised so that translation work isn’t repeated.
This code was originally written by:
• Richard Hughes richard@hughsie.com
• Piotr Drąg piotrdrag@gmail.com
• Philip Withnall withnall@endlessm.com
• Jordi Mas jmas@softcatala.org
It was previously in src/gs-content-rating.[ch] in gnome-software,
under the GPL-2.0+; and in libmalcontent-ui/gs-content-rating.[ch] in
malcontent, also under the GPL-2.0+. Relicensing from LGPL to GPL can
happen automatically.
In moving it from one project to the other, I have added documentation
comments and tweaked some of the APIs to make them more usable.
Signed-off-by: Philip Withnall withnall@endlessm.com

Draft until:
[ ] Relicensing is agreed to by all contributors (see below)
[ ] Commit message has been updated to include relicensing details/agreements
[ ] MR exists for moving translations over",Use of this in gnome-software: https://gitlab.gnome.org/GNOME/gnome-software/-/merge_requests/462,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,364,2020-05-21T14:50:44Z,2020-06-05T14:47:28Z,2020-06-08T11:30:22Z,MERGED,True,28917,6396,34,https://github.com/pwithnall,as-content-rating: Add content rating system APIs from gnome-software,3,[],https://github.com/hughsie/appstream-glib/pull/364,https://github.com/pwithnall,3,https://github.com/hughsie/appstream-glib/pull/364#issuecomment-632145232,"These are moving to libappstream-glib as they are used by gnome-software
and libmalcontent-ui, and are potentially useful in other projects. In
particular, there are a number of translatable strings which need to be
centralised so that translation work isn’t repeated.
This code was originally written by:
• Richard Hughes richard@hughsie.com
• Piotr Drąg piotrdrag@gmail.com
• Philip Withnall withnall@endlessm.com
• Jordi Mas jmas@softcatala.org
It was previously in src/gs-content-rating.[ch] in gnome-software,
under the GPL-2.0+; and in libmalcontent-ui/gs-content-rating.[ch] in
malcontent, also under the GPL-2.0+. Relicensing from LGPL to GPL can
happen automatically.
In moving it from one project to the other, I have added documentation
comments and tweaked some of the APIs to make them more usable.
Signed-off-by: Philip Withnall withnall@endlessm.com

Draft until:
[ ] Relicensing is agreed to by all contributors (see below)
[ ] Commit message has been updated to include relicensing details/agreements
[ ] MR exists for moving translations over",And use of this in libmalcontent-ui: https://gitlab.freedesktop.org/pwithnall/malcontent/-/merge_requests/70,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,364,2020-05-21T14:50:44Z,2020-06-05T14:47:28Z,2020-06-08T11:30:22Z,MERGED,True,28917,6396,34,https://github.com/pwithnall,as-content-rating: Add content rating system APIs from gnome-software,3,[],https://github.com/hughsie/appstream-glib/pull/364,https://github.com/hughsie,4,https://github.com/hughsie/appstream-glib/pull/364#issuecomment-632770772,"These are moving to libappstream-glib as they are used by gnome-software
and libmalcontent-ui, and are potentially useful in other projects. In
particular, there are a number of translatable strings which need to be
centralised so that translation work isn’t repeated.
This code was originally written by:
• Richard Hughes richard@hughsie.com
• Piotr Drąg piotrdrag@gmail.com
• Philip Withnall withnall@endlessm.com
• Jordi Mas jmas@softcatala.org
It was previously in src/gs-content-rating.[ch] in gnome-software,
under the GPL-2.0+; and in libmalcontent-ui/gs-content-rating.[ch] in
malcontent, also under the GPL-2.0+. Relicensing from LGPL to GPL can
happen automatically.
In moving it from one project to the other, I have added documentation
comments and tweaked some of the APIs to make them more usable.
Signed-off-by: Philip Withnall withnall@endlessm.com

Draft until:
[ ] Relicensing is agreed to by all contributors (see below)
[ ] Commit message has been updated to include relicensing details/agreements
[ ] MR exists for moving translations over","Relicensing from LGPL to GPL can happen automatically

But all of libappstream-glib is LGPLv2+, no?",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,364,2020-05-21T14:50:44Z,2020-06-05T14:47:28Z,2020-06-08T11:30:22Z,MERGED,True,28917,6396,34,https://github.com/pwithnall,as-content-rating: Add content rating system APIs from gnome-software,3,[],https://github.com/hughsie/appstream-glib/pull/364,https://github.com/hughsie,5,https://github.com/hughsie/appstream-glib/pull/364#issuecomment-632772605,"These are moving to libappstream-glib as they are used by gnome-software
and libmalcontent-ui, and are potentially useful in other projects. In
particular, there are a number of translatable strings which need to be
centralised so that translation work isn’t repeated.
This code was originally written by:
• Richard Hughes richard@hughsie.com
• Piotr Drąg piotrdrag@gmail.com
• Philip Withnall withnall@endlessm.com
• Jordi Mas jmas@softcatala.org
It was previously in src/gs-content-rating.[ch] in gnome-software,
under the GPL-2.0+; and in libmalcontent-ui/gs-content-rating.[ch] in
malcontent, also under the GPL-2.0+. Relicensing from LGPL to GPL can
happen automatically.
In moving it from one project to the other, I have added documentation
comments and tweaked some of the APIs to make them more usable.
Signed-off-by: Philip Withnall withnall@endlessm.com

Draft until:
[ ] Relicensing is agreed to by all contributors (see below)
[ ] Commit message has been updated to include relicensing details/agreements
[ ] MR exists for moving translations over",I really feel like we should drag some of the translations from gnome-software to here; it's a huge amount of work to translate all those strings :(,True,{'THUMBS_UP': ['https://github.com/piotrdrag']}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,364,2020-05-21T14:50:44Z,2020-06-05T14:47:28Z,2020-06-08T11:30:22Z,MERGED,True,28917,6396,34,https://github.com/pwithnall,as-content-rating: Add content rating system APIs from gnome-software,3,[],https://github.com/hughsie/appstream-glib/pull/364,https://github.com/pwithnall,6,https://github.com/hughsie/appstream-glib/pull/364#issuecomment-632773905,"These are moving to libappstream-glib as they are used by gnome-software
and libmalcontent-ui, and are potentially useful in other projects. In
particular, there are a number of translatable strings which need to be
centralised so that translation work isn’t repeated.
This code was originally written by:
• Richard Hughes richard@hughsie.com
• Piotr Drąg piotrdrag@gmail.com
• Philip Withnall withnall@endlessm.com
• Jordi Mas jmas@softcatala.org
It was previously in src/gs-content-rating.[ch] in gnome-software,
under the GPL-2.0+; and in libmalcontent-ui/gs-content-rating.[ch] in
malcontent, also under the GPL-2.0+. Relicensing from LGPL to GPL can
happen automatically.
In moving it from one project to the other, I have added documentation
comments and tweaked some of the APIs to make them more usable.
Signed-off-by: Philip Withnall withnall@endlessm.com

Draft until:
[ ] Relicensing is agreed to by all contributors (see below)
[ ] Commit message has been updated to include relicensing details/agreements
[ ] MR exists for moving translations over","Relicensing from LGPL to GPL can happen automatically

But all of libappstream-glib is LGPLv2+, no?

Complete brain fail, sorry. It is indeed a relicensing from GPL-2.0+ → LGPL-2.1+, and hence needs agreement from all the contributors.
I agree to my contributions being relicensed.

@hughsie, do you agree to relicense your contributions from GPL-2.0+ → LGPL-2.1+?
@piotrdrag, do you agree to relicense your contributions from GPL-2.0+ → LGPL-2.1+?
@jordimas, do you agree to relicense your contributions from GPL-2.0+ → LGPL-2.1+?",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,364,2020-05-21T14:50:44Z,2020-06-05T14:47:28Z,2020-06-08T11:30:22Z,MERGED,True,28917,6396,34,https://github.com/pwithnall,as-content-rating: Add content rating system APIs from gnome-software,3,[],https://github.com/hughsie/appstream-glib/pull/364,https://github.com/pwithnall,7,https://github.com/hughsie/appstream-glib/pull/364#issuecomment-632774243,"These are moving to libappstream-glib as they are used by gnome-software
and libmalcontent-ui, and are potentially useful in other projects. In
particular, there are a number of translatable strings which need to be
centralised so that translation work isn’t repeated.
This code was originally written by:
• Richard Hughes richard@hughsie.com
• Piotr Drąg piotrdrag@gmail.com
• Philip Withnall withnall@endlessm.com
• Jordi Mas jmas@softcatala.org
It was previously in src/gs-content-rating.[ch] in gnome-software,
under the GPL-2.0+; and in libmalcontent-ui/gs-content-rating.[ch] in
malcontent, also under the GPL-2.0+. Relicensing from LGPL to GPL can
happen automatically.
In moving it from one project to the other, I have added documentation
comments and tweaked some of the APIs to make them more usable.
Signed-off-by: Philip Withnall withnall@endlessm.com

Draft until:
[ ] Relicensing is agreed to by all contributors (see below)
[ ] Commit message has been updated to include relicensing details/agreements
[ ] MR exists for moving translations over","I really feel like we should drag some of the translations from gnome-software to here; it's a huge amount of work to translate all those strings :(

Agreed, I was going to do that as a follow-up if this MR is acceptable.",True,{'THUMBS_UP': ['https://github.com/hughsie']}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,364,2020-05-21T14:50:44Z,2020-06-05T14:47:28Z,2020-06-08T11:30:22Z,MERGED,True,28917,6396,34,https://github.com/pwithnall,as-content-rating: Add content rating system APIs from gnome-software,3,[],https://github.com/hughsie/appstream-glib/pull/364,https://github.com/hughsie,8,https://github.com/hughsie/appstream-glib/pull/364#issuecomment-632775883,"These are moving to libappstream-glib as they are used by gnome-software
and libmalcontent-ui, and are potentially useful in other projects. In
particular, there are a number of translatable strings which need to be
centralised so that translation work isn’t repeated.
This code was originally written by:
• Richard Hughes richard@hughsie.com
• Piotr Drąg piotrdrag@gmail.com
• Philip Withnall withnall@endlessm.com
• Jordi Mas jmas@softcatala.org
It was previously in src/gs-content-rating.[ch] in gnome-software,
under the GPL-2.0+; and in libmalcontent-ui/gs-content-rating.[ch] in
malcontent, also under the GPL-2.0+. Relicensing from LGPL to GPL can
happen automatically.
In moving it from one project to the other, I have added documentation
comments and tweaked some of the APIs to make them more usable.
Signed-off-by: Philip Withnall withnall@endlessm.com

Draft until:
[ ] Relicensing is agreed to by all contributors (see below)
[ ] Commit message has been updated to include relicensing details/agreements
[ ] MR exists for moving translations over",I agree to my contributions being relicensed. ;),True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,364,2020-05-21T14:50:44Z,2020-06-05T14:47:28Z,2020-06-08T11:30:22Z,MERGED,True,28917,6396,34,https://github.com/pwithnall,as-content-rating: Add content rating system APIs from gnome-software,3,[],https://github.com/hughsie/appstream-glib/pull/364,https://github.com/jordimas,9,https://github.com/hughsie/appstream-glib/pull/364#issuecomment-632780096,"These are moving to libappstream-glib as they are used by gnome-software
and libmalcontent-ui, and are potentially useful in other projects. In
particular, there are a number of translatable strings which need to be
centralised so that translation work isn’t repeated.
This code was originally written by:
• Richard Hughes richard@hughsie.com
• Piotr Drąg piotrdrag@gmail.com
• Philip Withnall withnall@endlessm.com
• Jordi Mas jmas@softcatala.org
It was previously in src/gs-content-rating.[ch] in gnome-software,
under the GPL-2.0+; and in libmalcontent-ui/gs-content-rating.[ch] in
malcontent, also under the GPL-2.0+. Relicensing from LGPL to GPL can
happen automatically.
In moving it from one project to the other, I have added documentation
comments and tweaked some of the APIs to make them more usable.
Signed-off-by: Philip Withnall withnall@endlessm.com

Draft until:
[ ] Relicensing is agreed to by all contributors (see below)
[ ] Commit message has been updated to include relicensing details/agreements
[ ] MR exists for moving translations over","Agreed.

👍

…
On Friday, May 22, 2020, Philip Withnall ***@***.***> wrote:
 Relicensing from LGPL to GPL can happen automatically

 But all of libappstream-glib is LGPLv2+, no?

 Complete brain fail, sorry. It is indeed a relicensing from GPL-2.0+ →
 LGPL-2.1+, and hence needs agreement from all the contributors.

 I agree to my contributions being relicensed.

    - @hughsie <https://github.com/hughsie>, do you agree to relicense
    your contributions from GPL-2.0+ → LGPL-2.1+?
    - @piotrdrag <https://github.com/piotrdrag>, do you agree to relicense
    your contributions from GPL-2.0+ → LGPL-2.1+?
    - @jordimas <https://github.com/jordimas>, do you agree to relicense
    your contributions from GPL-2.0+ → LGPL-2.1+?

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#364 (comment)>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/AACLQENIIENHWLTZMUAHS63RS2QDVANCNFSM4NG4XLEA>
 .",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,364,2020-05-21T14:50:44Z,2020-06-05T14:47:28Z,2020-06-08T11:30:22Z,MERGED,True,28917,6396,34,https://github.com/pwithnall,as-content-rating: Add content rating system APIs from gnome-software,3,[],https://github.com/hughsie/appstream-glib/pull/364,https://github.com/piotrdrag,10,https://github.com/hughsie/appstream-glib/pull/364#issuecomment-632815825,"These are moving to libappstream-glib as they are used by gnome-software
and libmalcontent-ui, and are potentially useful in other projects. In
particular, there are a number of translatable strings which need to be
centralised so that translation work isn’t repeated.
This code was originally written by:
• Richard Hughes richard@hughsie.com
• Piotr Drąg piotrdrag@gmail.com
• Philip Withnall withnall@endlessm.com
• Jordi Mas jmas@softcatala.org
It was previously in src/gs-content-rating.[ch] in gnome-software,
under the GPL-2.0+; and in libmalcontent-ui/gs-content-rating.[ch] in
malcontent, also under the GPL-2.0+. Relicensing from LGPL to GPL can
happen automatically.
In moving it from one project to the other, I have added documentation
comments and tweaked some of the APIs to make them more usable.
Signed-off-by: Philip Withnall withnall@endlessm.com

Draft until:
[ ] Relicensing is agreed to by all contributors (see below)
[ ] Commit message has been updated to include relicensing details/agreements
[ ] MR exists for moving translations over",I very much agree to my contributions being relicensed. :),True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,364,2020-05-21T14:50:44Z,2020-06-05T14:47:28Z,2020-06-08T11:30:22Z,MERGED,True,28917,6396,34,https://github.com/pwithnall,as-content-rating: Add content rating system APIs from gnome-software,3,[],https://github.com/hughsie/appstream-glib/pull/364,https://github.com/ximion,11,https://github.com/hughsie/appstream-glib/pull/364#issuecomment-633536101,"These are moving to libappstream-glib as they are used by gnome-software
and libmalcontent-ui, and are potentially useful in other projects. In
particular, there are a number of translatable strings which need to be
centralised so that translation work isn’t repeated.
This code was originally written by:
• Richard Hughes richard@hughsie.com
• Piotr Drąg piotrdrag@gmail.com
• Philip Withnall withnall@endlessm.com
• Jordi Mas jmas@softcatala.org
It was previously in src/gs-content-rating.[ch] in gnome-software,
under the GPL-2.0+; and in libmalcontent-ui/gs-content-rating.[ch] in
malcontent, also under the GPL-2.0+. Relicensing from LGPL to GPL can
happen automatically.
In moving it from one project to the other, I have added documentation
comments and tweaked some of the APIs to make them more usable.
Signed-off-by: Philip Withnall withnall@endlessm.com

Draft until:
[ ] Relicensing is agreed to by all contributors (see below)
[ ] Commit message has been updated to include relicensing details/agreements
[ ] MR exists for moving translations over","I had a couple of requests to add this particular code to libappstream as well, but didn't because I wasn't sure whether the code was ""final"" (I remember we had a lot of discussions about legal things there and how the content ratings map to each other) and because it was GPL licensed.
If this goes into asglib and given that asglib and libas can't be used together in the same application, is it okay if I reuse the exact same code there as well? Would amount to some duplication, but I can't see any better way to do this.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,364,2020-05-21T14:50:44Z,2020-06-05T14:47:28Z,2020-06-08T11:30:22Z,MERGED,True,28917,6396,34,https://github.com/pwithnall,as-content-rating: Add content rating system APIs from gnome-software,3,[],https://github.com/hughsie/appstream-glib/pull/364,https://github.com/pwithnall,12,https://github.com/hughsie/appstream-glib/pull/364#issuecomment-634015411,"These are moving to libappstream-glib as they are used by gnome-software
and libmalcontent-ui, and are potentially useful in other projects. In
particular, there are a number of translatable strings which need to be
centralised so that translation work isn’t repeated.
This code was originally written by:
• Richard Hughes richard@hughsie.com
• Piotr Drąg piotrdrag@gmail.com
• Philip Withnall withnall@endlessm.com
• Jordi Mas jmas@softcatala.org
It was previously in src/gs-content-rating.[ch] in gnome-software,
under the GPL-2.0+; and in libmalcontent-ui/gs-content-rating.[ch] in
malcontent, also under the GPL-2.0+. Relicensing from LGPL to GPL can
happen automatically.
In moving it from one project to the other, I have added documentation
comments and tweaked some of the APIs to make them more usable.
Signed-off-by: Philip Withnall withnall@endlessm.com

Draft until:
[ ] Relicensing is agreed to by all contributors (see below)
[ ] Commit message has been updated to include relicensing details/agreements
[ ] MR exists for moving translations over","Relicensing updated in commit message
Translations pulled in (see the final two commits)
Ready for review and merging",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,364,2020-05-21T14:50:44Z,2020-06-05T14:47:28Z,2020-06-08T11:30:22Z,MERGED,True,28917,6396,34,https://github.com/pwithnall,as-content-rating: Add content rating system APIs from gnome-software,3,[],https://github.com/hughsie/appstream-glib/pull/364,https://github.com/pwithnall,13,https://github.com/hughsie/appstream-glib/pull/364#issuecomment-636804106,"These are moving to libappstream-glib as they are used by gnome-software
and libmalcontent-ui, and are potentially useful in other projects. In
particular, there are a number of translatable strings which need to be
centralised so that translation work isn’t repeated.
This code was originally written by:
• Richard Hughes richard@hughsie.com
• Piotr Drąg piotrdrag@gmail.com
• Philip Withnall withnall@endlessm.com
• Jordi Mas jmas@softcatala.org
It was previously in src/gs-content-rating.[ch] in gnome-software,
under the GPL-2.0+; and in libmalcontent-ui/gs-content-rating.[ch] in
malcontent, also under the GPL-2.0+. Relicensing from LGPL to GPL can
happen automatically.
In moving it from one project to the other, I have added documentation
comments and tweaked some of the APIs to make them more usable.
Signed-off-by: Philip Withnall withnall@endlessm.com

Draft until:
[ ] Relicensing is agreed to by all contributors (see below)
[ ] Commit message has been updated to include relicensing details/agreements
[ ] MR exists for moving translations over",Ping?,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,364,2020-05-21T14:50:44Z,2020-06-05T14:47:28Z,2020-06-08T11:30:22Z,MERGED,True,28917,6396,34,https://github.com/pwithnall,as-content-rating: Add content rating system APIs from gnome-software,3,[],https://github.com/hughsie/appstream-glib/pull/364,https://github.com/hughsie,14,https://github.com/hughsie/appstream-glib/pull/364#issuecomment-636805073,"These are moving to libappstream-glib as they are used by gnome-software
and libmalcontent-ui, and are potentially useful in other projects. In
particular, there are a number of translatable strings which need to be
centralised so that translation work isn’t repeated.
This code was originally written by:
• Richard Hughes richard@hughsie.com
• Piotr Drąg piotrdrag@gmail.com
• Philip Withnall withnall@endlessm.com
• Jordi Mas jmas@softcatala.org
It was previously in src/gs-content-rating.[ch] in gnome-software,
under the GPL-2.0+; and in libmalcontent-ui/gs-content-rating.[ch] in
malcontent, also under the GPL-2.0+. Relicensing from LGPL to GPL can
happen automatically.
In moving it from one project to the other, I have added documentation
comments and tweaked some of the APIs to make them more usable.
Signed-off-by: Philip Withnall withnall@endlessm.com

Draft until:
[ ] Relicensing is agreed to by all contributors (see below)
[ ] Commit message has been updated to include relicensing details/agreements
[ ] MR exists for moving translations over","Just got back after 5 days of PTO, will review soon.",True,"{'ROCKET': ['https://github.com/pwithnall', 'https://github.com/wjt'], 'HOORAY': ['https://github.com/pwithnall']}"
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,365,2020-06-02T09:34:36Z,2020-09-29T13:59:09Z,2020-09-29T13:59:09Z,CLOSED,False,27,2,1,https://github.com/barthalion,as-compose: Add checksum to icons file names,1,[],https://github.com/hughsie/appstream-glib/pull/365,https://github.com/barthalion,1,https://github.com/hughsie/appstream-glib/pull/365,"Flathub infrastructure aggressively caches screenshots and icons from appstream. It turned out to cause an issue for icons which do not include any hash in their names, meaning that when upstream project updated it, the old one was still displayed in the web store.","Flathub infrastructure aggressively caches screenshots and icons from appstream. It turned out to cause an issue for icons which do not include any hash in their names, meaning that when upstream project updated it, the old one was still displayed in the web store.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,365,2020-06-02T09:34:36Z,2020-09-29T13:59:09Z,2020-09-29T13:59:09Z,CLOSED,False,27,2,1,https://github.com/barthalion,as-compose: Add checksum to icons file names,1,[],https://github.com/hughsie/appstream-glib/pull/365,https://github.com/barthalion,2,https://github.com/hughsie/appstream-glib/pull/365#issuecomment-637420968,"Flathub infrastructure aggressively caches screenshots and icons from appstream. It turned out to cause an issue for icons which do not include any hash in their names, meaning that when upstream project updated it, the old one was still displayed in the web store.",Converted to draft as currently flatpak does not resolve symlinks when extracting appstream.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,365,2020-06-02T09:34:36Z,2020-09-29T13:59:09Z,2020-09-29T13:59:09Z,CLOSED,False,27,2,1,https://github.com/barthalion,as-compose: Add checksum to icons file names,1,[],https://github.com/hughsie/appstream-glib/pull/365,https://github.com/hughsie,3,https://github.com/hughsie/appstream-glib/pull/365#issuecomment-637604458,"Flathub infrastructure aggressively caches screenshots and icons from appstream. It turned out to cause an issue for icons which do not include any hash in their names, meaning that when upstream project updated it, the old one was still displayed in the web store.",Isn't the icon basename specified in the AppStream spec? I don't think we can just add the hash there.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,365,2020-06-02T09:34:36Z,2020-09-29T13:59:09Z,2020-09-29T13:59:09Z,CLOSED,False,27,2,1,https://github.com/barthalion,as-compose: Add checksum to icons file names,1,[],https://github.com/hughsie/appstream-glib/pull/365,https://github.com/barthalion,4,https://github.com/hughsie/appstream-glib/pull/365#issuecomment-637642939,"Flathub infrastructure aggressively caches screenshots and icons from appstream. It turned out to cause an issue for icons which do not include any hash in their names, meaning that when upstream project updated it, the old one was still displayed in the web store.","Maybe I missed it, but I don't see it in spec. Wouldn't the symlink cover that case anyway?",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,365,2020-06-02T09:34:36Z,2020-09-29T13:59:09Z,2020-09-29T13:59:09Z,CLOSED,False,27,2,1,https://github.com/barthalion,as-compose: Add checksum to icons file names,1,[],https://github.com/hughsie/appstream-glib/pull/365,https://github.com/barthalion,5,https://github.com/hughsie/appstream-glib/pull/365#issuecomment-637645042,"Flathub infrastructure aggressively caches screenshots and icons from appstream. It turned out to cause an issue for icons which do not include any hash in their names, meaning that when upstream project updated it, the old one was still displayed in the web store.","I'm aware it's rather Flathub-specific change, I'll sort out some workaround from infrastructure side if it's not compliant with specification or too specific to our use case.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,365,2020-06-02T09:34:36Z,2020-09-29T13:59:09Z,2020-09-29T13:59:09Z,CLOSED,False,27,2,1,https://github.com/barthalion,as-compose: Add checksum to icons file names,1,[],https://github.com/hughsie/appstream-glib/pull/365,https://github.com/ximion,6,https://github.com/hughsie/appstream-glib/pull/365#issuecomment-637789980,"Flathub infrastructure aggressively caches screenshots and icons from appstream. It turned out to cause an issue for icons which do not include any hash in their names, meaning that when upstream project updated it, the old one was still displayed in the web store.","The approach sounds wrong to me, like papering over a bug in Flathub's caching logic.
Caching icons is legit, they would just need to be updated if the AppStream metadata is also updated. And surely Flathub has to account for that in some way already, so it could generate its own hash or simply update the icons in lockstep then?",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,365,2020-06-02T09:34:36Z,2020-09-29T13:59:09Z,2020-09-29T13:59:09Z,CLOSED,False,27,2,1,https://github.com/barthalion,as-compose: Add checksum to icons file names,1,[],https://github.com/hughsie/appstream-glib/pull/365,https://github.com/barthalion,7,https://github.com/hughsie/appstream-glib/pull/365#issuecomment-637799839,"Flathub infrastructure aggressively caches screenshots and icons from appstream. It turned out to cause an issue for icons which do not include any hash in their names, meaning that when upstream project updated it, the old one was still displayed in the web store.","It's rather common way to handle cache invalidation without having to employ server-side logic (either by setting proper headers or purging data from CDN), and it's already there for screenshots via mirror-screenshots. In fact some websites never purge cached assets. It's not a hill I'm willing to die on though.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,365,2020-06-02T09:34:36Z,2020-09-29T13:59:09Z,2020-09-29T13:59:09Z,CLOSED,False,27,2,1,https://github.com/barthalion,as-compose: Add checksum to icons file names,1,[],https://github.com/hughsie/appstream-glib/pull/365,https://github.com/barthalion,8,https://github.com/hughsie/appstream-glib/pull/365#issuecomment-700723717,"Flathub infrastructure aggressively caches screenshots and icons from appstream. It turned out to cause an issue for icons which do not include any hash in their names, meaning that when upstream project updated it, the old one was still displayed in the web store.",I assume nothing is going to happen about this so I'll just close it.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,366,2020-06-09T09:30:07Z,2020-06-09T09:50:15Z,2020-06-09T10:09:43Z,MERGED,True,99,99,1,https://github.com/pwithnall,as-content-rating: Lower the OARS/CSM mapping of sex-homosexuality/intense,2,[],https://github.com/hughsie/appstream-glib/pull/366,https://github.com/pwithnall,1,https://github.com/hughsie/appstream-glib/pull/366,"This rationalises it with the OARS/CSM mapping of
sex-homosexuality/intense, and with many western societal norms. It is
against the laws and morals of various western countries to discriminate
on sexual orientation, so the mappings for sex-homosexuality/intense and
sex-themes/intense should be the same.
The mappings for the other values of sex-homosexuality and sex-themes
remain different, as their descriptions aren’t as comparable (for
example, for mild, the descriptions are “Indirect references to
homosexuality” vs “Provocative references or descriptions”).
The sex-homosexuality ratings category does need to continue to exist,
though, as it’s illegal in some countries to not discriminate on
sexual orientation. Those countries can provide and maintain their own
OARS/age mappings.
See https://gitlab.freedesktop.org/pwithnall/malcontent/-/issues/21.
This issue is now being solved in appstream-glib as the content rating
code has been moved there so it can be shared between malcontent and
gnome-software.
Signed-off-by: Philip Withnall withnall@endlessm.com","This rationalises it with the OARS/CSM mapping of
sex-homosexuality/intense, and with many western societal norms. It is
against the laws and morals of various western countries to discriminate
on sexual orientation, so the mappings for sex-homosexuality/intense and
sex-themes/intense should be the same.
The mappings for the other values of sex-homosexuality and sex-themes
remain different, as their descriptions aren’t as comparable (for
example, for mild, the descriptions are “Indirect references to
homosexuality” vs “Provocative references or descriptions”).
The sex-homosexuality ratings category does need to continue to exist,
though, as it’s illegal in some countries to not discriminate on
sexual orientation. Those countries can provide and maintain their own
OARS/age mappings.
See https://gitlab.freedesktop.org/pwithnall/malcontent/-/issues/21.
This issue is now being solved in appstream-glib as the content rating
code has been moved there so it can be shared between malcontent and
gnome-software.
Signed-off-by: Philip Withnall withnall@endlessm.com",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,366,2020-06-09T09:30:07Z,2020-06-09T09:50:15Z,2020-06-09T10:09:43Z,MERGED,True,99,99,1,https://github.com/pwithnall,as-content-rating: Lower the OARS/CSM mapping of sex-homosexuality/intense,2,[],https://github.com/hughsie/appstream-glib/pull/366,https://github.com/pwithnall,2,https://github.com/hughsie/appstream-glib/pull/366#issuecomment-641163126,"This rationalises it with the OARS/CSM mapping of
sex-homosexuality/intense, and with many western societal norms. It is
against the laws and morals of various western countries to discriminate
on sexual orientation, so the mappings for sex-homosexuality/intense and
sex-themes/intense should be the same.
The mappings for the other values of sex-homosexuality and sex-themes
remain different, as their descriptions aren’t as comparable (for
example, for mild, the descriptions are “Indirect references to
homosexuality” vs “Provocative references or descriptions”).
The sex-homosexuality ratings category does need to continue to exist,
though, as it’s illegal in some countries to not discriminate on
sexual orientation. Those countries can provide and maintain their own
OARS/age mappings.
See https://gitlab.freedesktop.org/pwithnall/malcontent/-/issues/21.
This issue is now being solved in appstream-glib as the content rating
code has been moved there so it can be shared between malcontent and
gnome-software.
Signed-off-by: Philip Withnall withnall@endlessm.com","Once this is merged it will need to be backported to gnome-software and malcontent, since they still embed copies of the OARS/CSM mappings in lieu of bumping their hard dependency on appstream-glib.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,366,2020-06-09T09:30:07Z,2020-06-09T09:50:15Z,2020-06-09T10:09:43Z,MERGED,True,99,99,1,https://github.com/pwithnall,as-content-rating: Lower the OARS/CSM mapping of sex-homosexuality/intense,2,[],https://github.com/hughsie/appstream-glib/pull/366,https://github.com/pwithnall,3,https://github.com/hughsie/appstream-glib/pull/366#issuecomment-641186576,"This rationalises it with the OARS/CSM mapping of
sex-homosexuality/intense, and with many western societal norms. It is
against the laws and morals of various western countries to discriminate
on sexual orientation, so the mappings for sex-homosexuality/intense and
sex-themes/intense should be the same.
The mappings for the other values of sex-homosexuality and sex-themes
remain different, as their descriptions aren’t as comparable (for
example, for mild, the descriptions are “Indirect references to
homosexuality” vs “Provocative references or descriptions”).
The sex-homosexuality ratings category does need to continue to exist,
though, as it’s illegal in some countries to not discriminate on
sexual orientation. Those countries can provide and maintain their own
OARS/age mappings.
See https://gitlab.freedesktop.org/pwithnall/malcontent/-/issues/21.
This issue is now being solved in appstream-glib as the content rating
code has been moved there so it can be shared between malcontent and
gnome-software.
Signed-off-by: Philip Withnall withnall@endlessm.com",Copied to malcontent’s compatibility copy of this code here: https://gitlab.freedesktop.org/pwithnall/malcontent/-/merge_requests/71,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,367,2020-06-11T07:32:09Z,2020-06-11T07:48:38Z,2020-06-11T07:48:38Z,MERGED,True,0,1,1,https://github.com/kalev,as-app: Don't initialize mutex twice,1,[],https://github.com/hughsie/appstream-glib/pull/367,https://github.com/kalev,1,https://github.com/hughsie/appstream-glib/pull/367,"We managed to merge two MRs to initialize the unique id mutex. Remove
one of the g_mutex_init calls to avoid doing it twice.","We managed to merge two MRs to initialize the unique id mutex. Remove
one of the g_mutex_init calls to avoid doing it twice.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,371,2020-06-14T16:21:19Z,2020-06-15T09:27:41Z,2020-06-15T09:27:41Z,MERGED,True,42,3,4,https://github.com/imciner2,Validate launchable tags,2,[],https://github.com/hughsie/appstream-glib/pull/371,https://github.com/imciner2,1,https://github.com/hughsie/appstream-glib/pull/371,"This adds in validation of the  tags on every validation mode (since the type field of a launchable tag is a required field if launchable is present).
It also adds a dependency to the readme that was missing (the configuration step wouldn't succeed until I installed that).
Fixes #368.","This adds in validation of the  tags on every validation mode (since the type field of a launchable tag is a required field if launchable is present).
It also adds a dependency to the readme that was missing (the configuration step wouldn't succeed until I installed that).
Fixes #368.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,372,2020-06-19T19:15:26Z,2020-06-21T13:00:29Z,2020-06-21T13:00:29Z,CLOSED,False,1074,0,2,https://github.com/milotype,Croatian translation,2,[],https://github.com/hughsie/appstream-glib/pull/372,https://github.com/milotype,1,https://github.com/hughsie/appstream-glib/pull/372,,,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,372,2020-06-19T19:15:26Z,2020-06-21T13:00:29Z,2020-06-21T13:00:29Z,CLOSED,False,1074,0,2,https://github.com/milotype,Croatian translation,2,[],https://github.com/hughsie/appstream-glib/pull/372,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/372#issuecomment-646956281,,Can you squash down into one commit please; CI is also failing as the .po name is wrong.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,372,2020-06-19T19:15:26Z,2020-06-21T13:00:29Z,2020-06-21T13:00:29Z,CLOSED,False,1074,0,2,https://github.com/milotype,Croatian translation,2,[],https://github.com/hughsie/appstream-glib/pull/372,https://github.com/milotype,3,https://github.com/hughsie/appstream-glib/pull/372#issuecomment-647033209,,"I'm sorry for the wrong file name. I just made a new branch on my side and made the necessary changes. (I'm no programmer, so that was easiest for me). I've also initiated a new PR:
Croatian translation 2nd attempt #373
Also, I don't know how to squash - sorry :-(
It would be great if you can close my first PR #372. Thank you.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,373,2020-06-20T18:49:54Z,2020-06-21T13:01:10Z,2020-06-21T13:01:10Z,MERGED,True,1074,0,2,https://github.com/milotype,Croatian translation 2nd attempt,2,[],https://github.com/hughsie/appstream-glib/pull/373,https://github.com/milotype,1,https://github.com/hughsie/appstream-glib/pull/373,,,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,374,2020-06-23T03:02:38Z,2020-06-23T06:33:01Z,2020-06-23T10:44:21Z,MERGED,True,1,6,1,https://github.com/igaldino,Don't ignore localized strings that are the same as original,1,[],https://github.com/hughsie/appstream-glib/pull/374,https://github.com/igaldino,1,https://github.com/hughsie/appstream-glib/pull/374,"Avoiding storing identical strings is a clever measure to keep the
appstream file small and clean, but it ignores translation differences
between languages and their specific locales.
Applications tend to ""fallback"" from missing locales by picking a
translation of the same language but from a different locale.
For instance, when missing a ""pt_BR"" translation, some apps will
pick the ""pt"" translation instead. That usually works but there
are some cases when it doesn't, such as for international words:
Brazilian Portuguese (pt_BR) tends to use them, while European
Portuguese (pt) has a translation for everything.
This way, ""GNOME Boxes"" gets translated to ""Caixas GNOME"" in
European Portuguese (pt) but the same ""GNOME Boxes"" name is
expected in Brazilian Portuguese (pt_BR).
This was initially reported as a Flatpak issue in
https://lists.freedesktop.org/archives/flatpak/2019-May/001578.html
Because OP was seeing the wrong translations in Flathub and
GNOME Software.
Original commit was done by @felipeborges in his personal branch at
github, commit 54f97aa","Avoiding storing identical strings is a clever measure to keep the
appstream file small and clean, but it ignores translation differences
between languages and their specific locales.
Applications tend to ""fallback"" from missing locales by picking a
translation of the same language but from a different locale.
For instance, when missing a ""pt_BR"" translation, some apps will
pick the ""pt"" translation instead. That usually works but there
are some cases when it doesn't, such as for international words:
Brazilian Portuguese (pt_BR) tends to use them, while European
Portuguese (pt) has a translation for everything.
This way, ""GNOME Boxes"" gets translated to ""Caixas GNOME"" in
European Portuguese (pt) but the same ""GNOME Boxes"" name is
expected in Brazilian Portuguese (pt_BR).
This was initially reported as a Flatpak issue in
https://lists.freedesktop.org/archives/flatpak/2019-May/001578.html
Because OP was seeing the wrong translations in Flathub and
GNOME Software.
Original commit was done by @felipeborges in his personal branch at
github, commit 54f97aa",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,374,2020-06-23T03:02:38Z,2020-06-23T06:33:01Z,2020-06-23T10:44:21Z,MERGED,True,1,6,1,https://github.com/igaldino,Don't ignore localized strings that are the same as original,1,[],https://github.com/hughsie/appstream-glib/pull/374,https://github.com/igaldino,2,https://github.com/hughsie/appstream-glib/pull/374#issuecomment-647879119,"Avoiding storing identical strings is a clever measure to keep the
appstream file small and clean, but it ignores translation differences
between languages and their specific locales.
Applications tend to ""fallback"" from missing locales by picking a
translation of the same language but from a different locale.
For instance, when missing a ""pt_BR"" translation, some apps will
pick the ""pt"" translation instead. That usually works but there
are some cases when it doesn't, such as for international words:
Brazilian Portuguese (pt_BR) tends to use them, while European
Portuguese (pt) has a translation for everything.
This way, ""GNOME Boxes"" gets translated to ""Caixas GNOME"" in
European Portuguese (pt) but the same ""GNOME Boxes"" name is
expected in Brazilian Portuguese (pt_BR).
This was initially reported as a Flatpak issue in
https://lists.freedesktop.org/archives/flatpak/2019-May/001578.html
Because OP was seeing the wrong translations in Flathub and
GNOME Software.
Original commit was done by @felipeborges in his personal branch at
github, commit 54f97aa",This is the resume of the work done in PR #307 by @felipeborges.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,376,2020-07-18T20:58:23Z,,2022-02-09T16:43:16Z,OPEN,False,9,4,4,https://github.com/jtojnar,validate: Make missing <releases> more obvious,1,[],https://github.com/hughsie/appstream-glib/pull/376,https://github.com/jtojnar,1,https://github.com/hughsie/appstream-glib/pull/376,"Previously, when <release> was not contained in <releases>, the following confusing error message was printed:
• tag-missing           : <release> required

Now, the validation will print
• tag-missing           : <releases> required

when  is missing altogether and
• tag-missing           : <release> required in <releases>

when the <releases> tag does not contain any <release>.
Fixes: #375","Previously, when <release> was not contained in <releases>, the following confusing error message was printed:
• tag-missing           : <release> required

Now, the validation will print
• tag-missing           : <releases> required

when  is missing altogether and
• tag-missing           : <release> required in <releases>

when the <releases> tag does not contain any <release>.
Fixes: #375",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,376,2020-07-18T20:58:23Z,,2022-02-09T16:43:16Z,OPEN,False,9,4,4,https://github.com/jtojnar,validate: Make missing <releases> more obvious,1,[],https://github.com/hughsie/appstream-glib/pull/376,https://github.com/jtojnar,2,https://github.com/hughsie/appstream-glib/pull/376#issuecomment-660543878,"Previously, when <release> was not contained in <releases>, the following confusing error message was printed:
• tag-missing           : <release> required

Now, the validation will print
• tag-missing           : <releases> required

when  is missing altogether and
• tag-missing           : <release> required in <releases>

when the <releases> tag does not contain any <release>.
Fixes: #375","This slightly improves that particular confusing warning but it is still far from ideal since it is too weak model at the moment. Ideally, we would use something like XSD schema for doing the boring validity check and only write code for checking things that cannot be expressed in schemas.",True,{'THUMBS_UP': ['https://github.com/marcusmueller']}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,380,2020-10-18T11:04:51Z,2020-10-18T19:01:36Z,2020-10-19T09:54:01Z,MERGED,True,15,24,1,https://github.com/piotrdrag,Update Polish translation 201018,1,[],https://github.com/hughsie/appstream-glib/pull/380,https://github.com/piotrdrag,1,https://github.com/hughsie/appstream-glib/pull/380,,,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,382,2020-10-29T13:07:16Z,2020-10-29T14:28:04Z,2020-10-29T15:16:10Z,MERGED,True,15,1,1,https://github.com/pwithnall,as-content-rating: Align the OARS/CSM mappings of sex-*,1,[],https://github.com/hughsie/appstream-glib/pull/382,https://github.com/pwithnall,1,https://github.com/hughsie/appstream-glib/pull/382,"Align the OARS/CSM mappings of sex-homosexuality and sex-themes, as the
two are identical apart from discriminating on sexual orientation.
This is a follow-up to commit 01e9ee8.
Signed-off-by: Philip Withnall pwithnall@endlessos.org","Align the OARS/CSM mappings of sex-homosexuality and sex-themes, as the
two are identical apart from discriminating on sexual orientation.
This is a follow-up to commit 01e9ee8.
Signed-off-by: Philip Withnall pwithnall@endlessos.org",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,382,2020-10-29T13:07:16Z,2020-10-29T14:28:04Z,2020-10-29T15:16:10Z,MERGED,True,15,1,1,https://github.com/pwithnall,as-content-rating: Align the OARS/CSM mappings of sex-*,1,[],https://github.com/hughsie/appstream-glib/pull/382,https://github.com/pwithnall,2,https://github.com/hughsie/appstream-glib/pull/382#issuecomment-718743614,"Align the OARS/CSM mappings of sex-homosexuality and sex-themes, as the
two are identical apart from discriminating on sexual orientation.
This is a follow-up to commit 01e9ee8.
Signed-off-by: Philip Withnall pwithnall@endlessos.org",Related: https://gitlab.gnome.org/GNOME/gnome-software/-/merge_requests/531,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,382,2020-10-29T13:07:16Z,2020-10-29T14:28:04Z,2020-10-29T15:16:10Z,MERGED,True,15,1,1,https://github.com/pwithnall,as-content-rating: Align the OARS/CSM mappings of sex-*,1,[],https://github.com/hughsie/appstream-glib/pull/382,https://github.com/hughsie,3,https://github.com/hughsie/appstream-glib/pull/382#issuecomment-718789762,"Align the OARS/CSM mappings of sex-homosexuality and sex-themes, as the
two are identical apart from discriminating on sexual orientation.
This is a follow-up to commit 01e9ee8.
Signed-off-by: Philip Withnall pwithnall@endlessos.org","Works for me, thank you for the diplomacy.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,382,2020-10-29T13:07:16Z,2020-10-29T14:28:04Z,2020-10-29T15:16:10Z,MERGED,True,15,1,1,https://github.com/pwithnall,as-content-rating: Align the OARS/CSM mappings of sex-*,1,[],https://github.com/hughsie/appstream-glib/pull/382,https://github.com/pwithnall,4,https://github.com/hughsie/appstream-glib/pull/382#issuecomment-718821643,"Align the OARS/CSM mappings of sex-homosexuality and sex-themes, as the
two are identical apart from discriminating on sexual orientation.
This is a follow-up to commit 01e9ee8.
Signed-off-by: Philip Withnall pwithnall@endlessos.org",Thanks. Backported to the compatibility code in libmalcontent-ui here: https://gitlab.freedesktop.org/pwithnall/malcontent/-/merge_requests/100,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,384,2020-12-01T22:09:28Z,2020-12-02T09:17:12Z,2020-12-02T09:17:12Z,MERGED,True,8,0,1,https://github.com/dos1,as-app: Parse custom tags from DEP-11,1,[],https://github.com/hughsie/appstream-glib/pull/384,https://github.com/dos1,1,https://github.com/hughsie/appstream-glib/pull/384,,,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,385,2020-12-01T22:10:15Z,2020-12-02T09:17:23Z,2020-12-02T09:17:23Z,MERGED,True,12,0,1,https://github.com/dos1,as-app: Parse launchables from DEP-11,1,[],https://github.com/hughsie/appstream-glib/pull/385,https://github.com/dos1,1,https://github.com/hughsie/appstream-glib/pull/385,,,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,386,2020-12-06T05:30:04Z,2020-12-06T08:17:13Z,2020-12-06T08:52:49Z,MERGED,True,3,3,1,https://github.com/lemniscati,Replace some links in README.md from http to https,2,[],https://github.com/hughsie/appstream-glib/pull/386,https://github.com/lemniscati,1,https://github.com/hughsie/appstream-glib/pull/386,"Replace some links in README.md:

A link http://www.freedesktop.org/wiki/... by https://www.freedesktop.org/wiki/...
Links http://standards.freedesktop.org/... by https://specifications.freedesktop.org/...","Replace some links in README.md:

A link http://www.freedesktop.org/wiki/... by https://www.freedesktop.org/wiki/...
Links http://standards.freedesktop.org/... by https://specifications.freedesktop.org/...",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,387,2020-12-24T10:57:30Z,,2020-12-26T14:27:19Z,OPEN,False,35,0,1,https://github.com/guinux,fix #350,1,[],https://github.com/hughsie/appstream-glib/pull/387,https://github.com/guinux,1,https://github.com/hughsie/appstream-glib/pull/387,"Add support for <em> and <code> tags, as described in https://www.freedesktop.org/software/appstream/docs/chap-Metadata.html#tag-description .","Add support for <em> and <code> tags, as described in https://www.freedesktop.org/software/appstream/docs/chap-Metadata.html#tag-description .",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,387,2020-12-24T10:57:30Z,,2020-12-26T14:27:19Z,OPEN,False,35,0,1,https://github.com/guinux,fix #350,1,[],https://github.com/hughsie/appstream-glib/pull/387,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/387#issuecomment-751361407,"Add support for <em> and <code> tags, as described in https://www.freedesktop.org/software/appstream/docs/chap-Metadata.html#tag-description .","This also needs a ton of self tests to be added too, please.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,389,2021-01-30T22:31:12Z,2021-01-30T22:45:24Z,2021-01-30T22:45:24Z,MERGED,True,2,2,1,https://github.com/pwithnall,as-util: Fix Markdown underlining in appdata-to-news,1,[],https://github.com/hughsie/appstream-glib/pull/389,https://github.com/pwithnall,1,https://github.com/hughsie/appstream-glib/pull/389,"Markdown underlines are with = or -, not ~. This fixes the
Markdown rendering of appdata-to-news-ed files in GitLab.
Signed-off-by: Philip Withnall pwithnall@endlessos.org","Markdown underlines are with = or -, not ~. This fixes the
Markdown rendering of appdata-to-news-ed files in GitLab.
Signed-off-by: Philip Withnall pwithnall@endlessos.org",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,390,2021-03-16T13:21:54Z,2021-03-17T17:02:17Z,2021-03-18T12:48:16Z,MERGED,True,11,19,2,https://github.com/pwithnall,libappstream-builder: Fix paths for cached icons,1,[],https://github.com/hughsie/appstream-glib/pull/390,https://github.com/pwithnall,1,https://github.com/hughsie/appstream-glib/pull/390,"As per
https://www.freedesktop.org/software/appstream/docs/sect-AppStream-IconCache.html#spec-iconcache-location,
the size of an icon should be specified in its width and height
attributes, rather than as part of its name.
This was resulting in icons like this in the rpmfusion-free-33 appdata:
<icon type=""cached"" height=""128"" width=""128"">128x128/chromium-browser-privacy.png</icon>

which were then being resolved to the path:
/usr/share/app-info/icons/rpmfusion-free-33/128x128/128x128/chromium-browser-privacy.png

which contains a duplicate size subdirectory.
Signed-off-by: Philip Withnall pwithnall@endlessos.org","As per
https://www.freedesktop.org/software/appstream/docs/sect-AppStream-IconCache.html#spec-iconcache-location,
the size of an icon should be specified in its width and height
attributes, rather than as part of its name.
This was resulting in icons like this in the rpmfusion-free-33 appdata:
<icon type=""cached"" height=""128"" width=""128"">128x128/chromium-browser-privacy.png</icon>

which were then being resolved to the path:
/usr/share/app-info/icons/rpmfusion-free-33/128x128/128x128/chromium-browser-privacy.png

which contains a duplicate size subdirectory.
Signed-off-by: Philip Withnall pwithnall@endlessos.org",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,390,2021-03-16T13:21:54Z,2021-03-17T17:02:17Z,2021-03-18T12:48:16Z,MERGED,True,11,19,2,https://github.com/pwithnall,libappstream-builder: Fix paths for cached icons,1,[],https://github.com/hughsie/appstream-glib/pull/390,https://github.com/pwithnall,2,https://github.com/hughsie/appstream-glib/pull/390#issuecomment-800253307,"As per
https://www.freedesktop.org/software/appstream/docs/sect-AppStream-IconCache.html#spec-iconcache-location,
the size of an icon should be specified in its width and height
attributes, rather than as part of its name.
This was resulting in icons like this in the rpmfusion-free-33 appdata:
<icon type=""cached"" height=""128"" width=""128"">128x128/chromium-browser-privacy.png</icon>

which were then being resolved to the path:
/usr/share/app-info/icons/rpmfusion-free-33/128x128/128x128/chromium-browser-privacy.png

which contains a duplicate size subdirectory.
Signed-off-by: Philip Withnall pwithnall@endlessos.org","Note: The script rpmfusion uses to create its appdata files is here. It is essentially:
    appstream-builder --verbose --include-failed --max-threads=6 --log-dir=./logs/ \
    --packages-dir=./Packages/ --temp-dir=./tmp/ --output-dir=./appstream-data/ \
    --basename=""rpmfusion-free-$RELEASE"" --origin=""rpmfusion-free-$RELEASE"" \
    --enable-hidpi --veto-ignore=missing-parents

I could not get rsync to work, so could not test that this PR actually fixes the rpmfusion appstream though.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,390,2021-03-16T13:21:54Z,2021-03-17T17:02:17Z,2021-03-18T12:48:16Z,MERGED,True,11,19,2,https://github.com/pwithnall,libappstream-builder: Fix paths for cached icons,1,[],https://github.com/hughsie/appstream-glib/pull/390,https://github.com/hughsie,3,https://github.com/hughsie/appstream-glib/pull/390#issuecomment-800989118,"As per
https://www.freedesktop.org/software/appstream/docs/sect-AppStream-IconCache.html#spec-iconcache-location,
the size of an icon should be specified in its width and height
attributes, rather than as part of its name.
This was resulting in icons like this in the rpmfusion-free-33 appdata:
<icon type=""cached"" height=""128"" width=""128"">128x128/chromium-browser-privacy.png</icon>

which were then being resolved to the path:
/usr/share/app-info/icons/rpmfusion-free-33/128x128/128x128/chromium-browser-privacy.png

which contains a duplicate size subdirectory.
Signed-off-by: Philip Withnall pwithnall@endlessos.org","IIRC, we uses the filename prefix for older gnome-software versions that did not understand width= etc. It's probably something we don't care about for any supported gnome-software release now. It might be safer to merge this, AND to just get the basename in gnome-software rather than the full name so that new g-s can work with old and new metadata.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,390,2021-03-16T13:21:54Z,2021-03-17T17:02:17Z,2021-03-18T12:48:16Z,MERGED,True,11,19,2,https://github.com/pwithnall,libappstream-builder: Fix paths for cached icons,1,[],https://github.com/hughsie/appstream-glib/pull/390,https://github.com/pwithnall,4,https://github.com/hughsie/appstream-glib/pull/390#issuecomment-801240686,"As per
https://www.freedesktop.org/software/appstream/docs/sect-AppStream-IconCache.html#spec-iconcache-location,
the size of an icon should be specified in its width and height
attributes, rather than as part of its name.
This was resulting in icons like this in the rpmfusion-free-33 appdata:
<icon type=""cached"" height=""128"" width=""128"">128x128/chromium-browser-privacy.png</icon>

which were then being resolved to the path:
/usr/share/app-info/icons/rpmfusion-free-33/128x128/128x128/chromium-browser-privacy.png

which contains a duplicate size subdirectory.
Signed-off-by: Philip Withnall pwithnall@endlessos.org","AND to just get the basename in gnome-software rather than the full name so that new g-s can work with old and new metadata.

The changes to gnome-software to be forwards- and backwards-compatible for this were merged yesterday: https://gitlab.gnome.org/GNOME/gnome-software/-/merge_requests/653",True,{'THUMBS_UP': ['https://github.com/hughsie']}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,394,2021-03-31T09:08:48Z,2021-03-31T09:15:10Z,2021-03-31T09:15:10Z,MERGED,True,16,21,1,https://github.com/yurchor,Update Ukrainian translation,1,[],https://github.com/hughsie/appstream-glib/pull/394,https://github.com/yurchor,1,https://github.com/hughsie/appstream-glib/pull/394,Thanks in advance for merging.,Thanks in advance for merging.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,395,2021-04-07T16:24:46Z,,2021-04-08T10:19:51Z,OPEN,False,6,2,1,https://github.com/jonathonf,[WIP] Strip unknown tags,1,[],https://github.com/hughsie/appstream-glib/pull/395,https://github.com/jonathonf,1,https://github.com/hughsie/appstream-glib/pull/395,"For #350, an alternative approach to unknown tags within descriptions would be to strip them. This is a WIP PR to explore that approach.","For #350, an alternative approach to unknown tags within descriptions would be to strip them. This is a WIP PR to explore that approach.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,395,2021-04-07T16:24:46Z,,2021-04-08T10:19:51Z,OPEN,False,6,2,1,https://github.com/jonathonf,[WIP] Strip unknown tags,1,[],https://github.com/hughsie/appstream-glib/pull/395,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/395#issuecomment-815642568,"For #350, an alternative approach to unknown tags within descriptions would be to strip them. This is a WIP PR to explore that approach.","Looks good, but it's screaming out for for self tests testing all the different permutations...",True,{'THUMBS_UP': ['https://github.com/jonathonf']}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,397,2021-04-15T08:02:46Z,2021-04-15T08:57:52Z,2021-04-15T08:57:54Z,MERGED,True,24,1,2,https://github.com/hughsie,Do not show a critical warning on <suggests><id/></suggests>,1,[],https://github.com/hughsie/appstream-glib/pull/397,https://github.com/hughsie,1,https://github.com/hughsie/appstream-glib/pull/397,Fixes #396,Fixes #396,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,398,2021-04-18T23:28:44Z,2021-04-19T08:35:46Z,2021-08-03T18:23:24Z,MERGED,True,143,146,1,https://github.com/haaninjo,Update Swedish translation,1,[],https://github.com/hughsie/appstream-glib/pull/398,https://github.com/haaninjo,1,https://github.com/hughsie/appstream-glib/pull/398,This updates the Swedish translation,This updates the Swedish translation,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,400,2021-05-04T10:39:36Z,2021-05-04T10:56:28Z,2021-05-04T10:56:28Z,MERGED,True,2,2,2,https://github.com/praiskup,builder: make directories as 0755 && umask,1,[],https://github.com/hughsie/appstream-glib/pull/400,https://github.com/praiskup,1,https://github.com/hughsie/appstream-glib/pull/400,"Ideally only libappstream-builder would be fixed, but
asb_utils_ensure_exists is (transitively) called from builder too, so
fixing also that.
Fixes: #399
Merges: #400","Ideally only libappstream-builder would be fixed, but
asb_utils_ensure_exists is (transitively) called from builder too, so
fixing also that.
Fixes: #399
Merges: #400",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,402,2021-05-13T20:08:02Z,2021-05-18T12:31:18Z,2021-05-18T12:31:18Z,MERGED,True,25,4,6,https://github.com/oturpe,Add validation for duplicate xml elements,2,[],https://github.com/hughsie/appstream-glib/pull/402,https://github.com/oturpe,1,https://github.com/hughsie/appstream-glib/pull/402,"Draft fix of #401
As an example, duplicate checking for two elements is added. Using this simple system, checking all elements requires replicating the code for each checked field. Solution with less replication would require a new data structure and passing it around: instead of enumerated problems like AS_APP_PROBLEM_DUPLICATE_PROJECT_LICENSE, some kind of generic duplicate problem entry that takes element name as input.
Posting this draft for review, because I am really new to this codebase and cannot say what would be best way to proceed:

Replicate the simple solution for all fields that can only appear once
Develop the generic solution
Only check project_license duplicates, as that is what was reported in #401 and there the root of the problem is that even if a project may be under multiple licenses, there can only be one license field and separate syntax for encoding everything in there must be used.

Comments welcome.","Draft fix of #401
As an example, duplicate checking for two elements is added. Using this simple system, checking all elements requires replicating the code for each checked field. Solution with less replication would require a new data structure and passing it around: instead of enumerated problems like AS_APP_PROBLEM_DUPLICATE_PROJECT_LICENSE, some kind of generic duplicate problem entry that takes element name as input.
Posting this draft for review, because I am really new to this codebase and cannot say what would be best way to proceed:

Replicate the simple solution for all fields that can only appear once
Develop the generic solution
Only check project_license duplicates, as that is what was reported in #401 and there the root of the problem is that even if a project may be under multiple licenses, there can only be one license field and separate syntax for encoding everything in there must be used.

Comments welcome.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,402,2021-05-13T20:08:02Z,2021-05-18T12:31:18Z,2021-05-18T12:31:18Z,MERGED,True,25,4,6,https://github.com/oturpe,Add validation for duplicate xml elements,2,[],https://github.com/hughsie/appstream-glib/pull/402,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/402#issuecomment-840804834,"Draft fix of #401
As an example, duplicate checking for two elements is added. Using this simple system, checking all elements requires replicating the code for each checked field. Solution with less replication would require a new data structure and passing it around: instead of enumerated problems like AS_APP_PROBLEM_DUPLICATE_PROJECT_LICENSE, some kind of generic duplicate problem entry that takes element name as input.
Posting this draft for review, because I am really new to this codebase and cannot say what would be best way to proceed:

Replicate the simple solution for all fields that can only appear once
Develop the generic solution
Only check project_license duplicates, as that is what was reported in #401 and there the root of the problem is that even if a project may be under multiple licenses, there can only be one license field and separate syntax for encoding everything in there must be used.

Comments welcome.","A few nits, but looks basically what I would have done, so good job.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,402,2021-05-13T20:08:02Z,2021-05-18T12:31:18Z,2021-05-18T12:31:18Z,MERGED,True,25,4,6,https://github.com/oturpe,Add validation for duplicate xml elements,2,[],https://github.com/hughsie/appstream-glib/pull/402,https://github.com/oturpe,3,https://github.com/hughsie/appstream-glib/pull/402#issuecomment-840814202,"Draft fix of #401
As an example, duplicate checking for two elements is added. Using this simple system, checking all elements requires replicating the code for each checked field. Solution with less replication would require a new data structure and passing it around: instead of enumerated problems like AS_APP_PROBLEM_DUPLICATE_PROJECT_LICENSE, some kind of generic duplicate problem entry that takes element name as input.
Posting this draft for review, because I am really new to this codebase and cannot say what would be best way to proceed:

Replicate the simple solution for all fields that can only appear once
Develop the generic solution
Only check project_license duplicates, as that is what was reported in #401 and there the root of the problem is that even if a project may be under multiple licenses, there can only be one license field and separate syntax for encoding everything in there must be used.

Comments welcome.","Formatting fixed. A test case failed, apparently the ""bad file"" test already had a test file that had these problems, now the asserts need to be fixed. I will see to that soon.",True,{'THUMBS_UP': ['https://github.com/hughsie']}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,402,2021-05-13T20:08:02Z,2021-05-18T12:31:18Z,2021-05-18T12:31:18Z,MERGED,True,25,4,6,https://github.com/oturpe,Add validation for duplicate xml elements,2,[],https://github.com/hughsie/appstream-glib/pull/402,https://github.com/oturpe,4,https://github.com/hughsie/appstream-glib/pull/402#issuecomment-842582990,"Draft fix of #401
As an example, duplicate checking for two elements is added. Using this simple system, checking all elements requires replicating the code for each checked field. Solution with less replication would require a new data structure and passing it around: instead of enumerated problems like AS_APP_PROBLEM_DUPLICATE_PROJECT_LICENSE, some kind of generic duplicate problem entry that takes element name as input.
Posting this draft for review, because I am really new to this codebase and cannot say what would be best way to proceed:

Replicate the simple solution for all fields that can only appear once
Develop the generic solution
Only check project_license duplicates, as that is what was reported in #401 and there the root of the problem is that even if a project may be under multiple licenses, there can only be one license field and separate syntax for encoding everything in there must be used.

Comments welcome.","Tests added. In absence of further comments about which elements should be tested for duplicates, I left the scope as it was initially: only the license fields.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,402,2021-05-13T20:08:02Z,2021-05-18T12:31:18Z,2021-05-18T12:31:18Z,MERGED,True,25,4,6,https://github.com/oturpe,Add validation for duplicate xml elements,2,[],https://github.com/hughsie/appstream-glib/pull/402,https://github.com/oturpe,5,https://github.com/hughsie/appstream-glib/pull/402#issuecomment-842586222,"Draft fix of #401
As an example, duplicate checking for two elements is added. Using this simple system, checking all elements requires replicating the code for each checked field. Solution with less replication would require a new data structure and passing it around: instead of enumerated problems like AS_APP_PROBLEM_DUPLICATE_PROJECT_LICENSE, some kind of generic duplicate problem entry that takes element name as input.
Posting this draft for review, because I am really new to this codebase and cannot say what would be best way to proceed:

Replicate the simple solution for all fields that can only appear once
Develop the generic solution
Only check project_license duplicates, as that is what was reported in #401 and there the root of the problem is that even if a project may be under multiple licenses, there can only be one license field and separate syntax for encoding everything in there must be used.

Comments welcome.","Travis CI build failed, but to me that looks like an unrelated issue, as if something is generated without strict ordering, but is checked against fixed expectation:
Bail out! As:ERROR:../libappstream-builder/asb-self-test.c:524:asb_test_context_func: assertion failed (error == NULL):
--- /tmp/b	2021-05-17 19:42:30.984710347 +0000
+++ /tmp/a	2021-05-17 19:42:30.984710347 +0000
@@ -24,8 +24,8 @@
 <name>App</name>
 <summary>A test application</summary>
 <description><p>Long description goes here.</p></description>
-<icon type=""cached"" height=""128"" width=""128"">app.png</icon>
 <icon type=""cached"" height=""64"" width=""64"">app.png</icon>
+<icon type=""cached"" height=""128"" width=""128"">app.png</icon>
 <categories>
 <category>Profiling</category>
 <category>System</category>
 (-g-type-private--GTypeFlags, 0)",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,402,2021-05-13T20:08:02Z,2021-05-18T12:31:18Z,2021-05-18T12:31:18Z,MERGED,True,25,4,6,https://github.com/oturpe,Add validation for duplicate xml elements,2,[],https://github.com/hughsie/appstream-glib/pull/402,https://github.com/hughsie,6,https://github.com/hughsie/appstream-glib/pull/402#issuecomment-842587021,"Draft fix of #401
As an example, duplicate checking for two elements is added. Using this simple system, checking all elements requires replicating the code for each checked field. Solution with less replication would require a new data structure and passing it around: instead of enumerated problems like AS_APP_PROBLEM_DUPLICATE_PROJECT_LICENSE, some kind of generic duplicate problem entry that takes element name as input.
Posting this draft for review, because I am really new to this codebase and cannot say what would be best way to proceed:

Replicate the simple solution for all fields that can only appear once
Develop the generic solution
Only check project_license duplicates, as that is what was reported in #401 and there the root of the problem is that even if a project may be under multiple licenses, there can only be one license field and separate syntax for encoding everything in there must be used.

Comments welcome.","but to me that looks like an unrelated issue

Agreed! Could I be cheeky and ask you to add the fix for that to this branch please? It should just be reordering the expected lines in asb-self-test.c. Thanks!",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,402,2021-05-13T20:08:02Z,2021-05-18T12:31:18Z,2021-05-18T12:31:18Z,MERGED,True,25,4,6,https://github.com/oturpe,Add validation for duplicate xml elements,2,[],https://github.com/hughsie/appstream-glib/pull/402,https://github.com/oturpe,7,https://github.com/hughsie/appstream-glib/pull/402#issuecomment-842601813,"Draft fix of #401
As an example, duplicate checking for two elements is added. Using this simple system, checking all elements requires replicating the code for each checked field. Solution with less replication would require a new data structure and passing it around: instead of enumerated problems like AS_APP_PROBLEM_DUPLICATE_PROJECT_LICENSE, some kind of generic duplicate problem entry that takes element name as input.
Posting this draft for review, because I am really new to this codebase and cannot say what would be best way to proceed:

Replicate the simple solution for all fields that can only appear once
Develop the generic solution
Only check project_license duplicates, as that is what was reported in #401 and there the root of the problem is that even if a project may be under multiple licenses, there can only be one license field and separate syntax for encoding everything in there must be used.

Comments welcome.","That error is now fixed, but another one was hidden behind it:
Bail out! As:ERROR:../libappstream-builder/asb-self-test.c:628:asb_test_context_func: assertion failed: (g_file_test (""/tmp/asbuilder/temp/icons/64x64/app.png"", G_FILE_TEST_EXISTS))

--- stderr ---
**
As:ERROR:../libappstream-builder/asb-self-test.c:628:asb_test_context_func: assertion failed: (g_file_test (""/tmp/asbuilder/temp/icons/64x64/app.png"", G_FILE_TEST_EXISTS))
-------",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,402,2021-05-13T20:08:02Z,2021-05-18T12:31:18Z,2021-05-18T12:31:18Z,MERGED,True,25,4,6,https://github.com/oturpe,Add validation for duplicate xml elements,2,[],https://github.com/hughsie/appstream-glib/pull/402,https://github.com/hughsie,8,https://github.com/hughsie/appstream-glib/pull/402#issuecomment-843130867,"Draft fix of #401
As an example, duplicate checking for two elements is added. Using this simple system, checking all elements requires replicating the code for each checked field. Solution with less replication would require a new data structure and passing it around: instead of enumerated problems like AS_APP_PROBLEM_DUPLICATE_PROJECT_LICENSE, some kind of generic duplicate problem entry that takes element name as input.
Posting this draft for review, because I am really new to this codebase and cannot say what would be best way to proceed:

Replicate the simple solution for all fields that can only appear once
Develop the generic solution
Only check project_license duplicates, as that is what was reported in #401 and there the root of the problem is that even if a project may be under multiple licenses, there can only be one license field and separate syntax for encoding everything in there must be used.

Comments welcome.","That error is now fixed, but another one was hidden behind it:

Okay, I can look at that later. Thanks for the fixes!",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,403,2021-06-11T08:53:40Z,2021-06-15T10:20:56Z,2021-06-15T10:20:56Z,MERGED,True,52,0,2,https://github.com/philmmanjaro,Support em/code tags,1,[],https://github.com/hughsie/appstream-glib/pull/403,https://github.com/philmmanjaro,1,https://github.com/hughsie/appstream-glib/pull/403,"Some appstream-data packages add <em> and </em> or <code> and </code> to the files.
Not all package manager can handle that. An example would be Pamac from Manjaro","Some appstream-data packages add <em> and </em> or <code> and </code> to the files.
Not all package manager can handle that. An example would be Pamac from Manjaro",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,403,2021-06-11T08:53:40Z,2021-06-15T10:20:56Z,2021-06-15T10:20:56Z,MERGED,True,52,0,2,https://github.com/philmmanjaro,Support em/code tags,1,[],https://github.com/hughsie/appstream-glib/pull/403,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/403#issuecomment-859406460,"Some appstream-data packages add <em> and </em> or <code> and </code> to the files.
Not all package manager can handle that. An example would be Pamac from Manjaro","I think we need something added to the self tests as well, no?",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,403,2021-06-11T08:53:40Z,2021-06-15T10:20:56Z,2021-06-15T10:20:56Z,MERGED,True,52,0,2,https://github.com/philmmanjaro,Support em/code tags,1,[],https://github.com/hughsie/appstream-glib/pull/403,https://github.com/philmmanjaro,3,https://github.com/hughsie/appstream-glib/pull/403#issuecomment-860020600,"Some appstream-data packages add <em> and </em> or <code> and </code> to the files.
Not all package manager can handle that. An example would be Pamac from Manjaro",Tests are now added.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,403,2021-06-11T08:53:40Z,2021-06-15T10:20:56Z,2021-06-15T10:20:56Z,MERGED,True,52,0,2,https://github.com/philmmanjaro,Support em/code tags,1,[],https://github.com/hughsie/appstream-glib/pull/403,https://github.com/hughsie,4,https://github.com/hughsie/appstream-glib/pull/403#issuecomment-860485816,"Some appstream-data packages add <em> and </em> or <code> and </code> to the files.
Not all package manager can handle that. An example would be Pamac from Manjaro","One little nit, and then please squash all the commits into one commit and force push to this branch. Thanks.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,405,2021-07-13T08:06:59Z,2021-07-13T08:29:52Z,2021-07-13T08:32:47Z,MERGED,True,144,144,1,https://github.com/rffontenelle,Update Brazilian Portuguese translation,1,[],https://github.com/hughsie/appstream-glib/pull/405,https://github.com/rffontenelle,1,https://github.com/hughsie/appstream-glib/pull/405,"Translation by Henrique Machado, Proofread by Enrico","Translation by Henrique Machado, Proofread by Enrico",True,{'THUMBS_UP': ['https://github.com/hughsie']}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,407,2021-07-23T06:29:27Z,2021-07-23T07:36:50Z,2021-07-23T12:27:28Z,MERGED,True,1,1,1,https://github.com/tintou,Update current newest version in AsStore,1,[],https://github.com/hughsie/appstream-glib/pull/407,https://github.com/tintou,1,https://github.com/hughsie/appstream-glib/pull/407,"We are now in version 0.14
Closes #406
Signed-off-by: Corentin Noël corentin.noel@collabora.com","We are now in version 0.14
Closes #406
Signed-off-by: Corentin Noël corentin.noel@collabora.com",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,407,2021-07-23T06:29:27Z,2021-07-23T07:36:50Z,2021-07-23T12:27:28Z,MERGED,True,1,1,1,https://github.com/tintou,Update current newest version in AsStore,1,[],https://github.com/hughsie/appstream-glib/pull/407,https://github.com/ximion,2,https://github.com/hughsie/appstream-glib/pull/407#issuecomment-885559535,"We are now in version 0.14
Closes #406
Signed-off-by: Corentin Noël corentin.noel@collabora.com","I wonder: Are there any integer comparisons made with this variable? Because 0.14 < 0.9 - for this reason, libappstream uses an enum for this, so you can still easily check whether the current target API version is > a tested version.
If there's no direct comparisons made with this definition, this change is fine.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,407,2021-07-23T06:29:27Z,2021-07-23T07:36:50Z,2021-07-23T12:27:28Z,MERGED,True,1,1,1,https://github.com/tintou,Update current newest version in AsStore,1,[],https://github.com/hughsie/appstream-glib/pull/407,https://github.com/tintou,3,https://github.com/hughsie/appstream-glib/pull/407#issuecomment-885588959,"We are now in version 0.14
Closes #406
Signed-off-by: Corentin Noël corentin.noel@collabora.com","Hmm, indeed there is indirectly here: 
  
    
      appstream-glib/libappstream-glib/as-app.c
    
    
         Line 4834
      in
      6d6b8f4
    
  
  
    

        
          
           tmp = as_node_context_get_version (ctx) > 0.9 ? ""custom"" : ""metadata""; 
        
    
  

 that compares it.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,407,2021-07-23T06:29:27Z,2021-07-23T07:36:50Z,2021-07-23T12:27:28Z,MERGED,True,1,1,1,https://github.com/tintou,Update current newest version in AsStore,1,[],https://github.com/hughsie/appstream-glib/pull/407,https://github.com/hughsie,4,https://github.com/hughsie/appstream-glib/pull/407#issuecomment-885601694,"We are now in version 0.14
Closes #406
Signed-off-by: Corentin Noël corentin.noel@collabora.com",@tintou could you do a PR to change that comparison to use as_utils_vercmp() please. Thanks!,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,407,2021-07-23T06:29:27Z,2021-07-23T07:36:50Z,2021-07-23T12:27:28Z,MERGED,True,1,1,1,https://github.com/tintou,Update current newest version in AsStore,1,[],https://github.com/hughsie/appstream-glib/pull/407,https://github.com/ximion,5,https://github.com/hughsie/appstream-glib/pull/407#issuecomment-885603348,"We are now in version 0.14
Closes #406
Signed-off-by: Corentin Noël corentin.noel@collabora.com","@hughsie AS_API_VERSION_NEWEST would need to become a string constant then - is this API exported anywhere? Libappstream ""cheats"" an uses an enum for this ^^ ( https://github.com/ximion/appstream/blob/master/src/as-context.h#L49 )",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,409,2021-07-25T20:24:30Z,2021-07-27T15:28:13Z,2021-07-27T15:29:23Z,MERGED,True,6,3,2,https://github.com/Biswa96,meson: Check --version-script linker option before using.,1,[],https://github.com/hughsie/appstream-glib/pull/409,https://github.com/Biswa96,1,https://github.com/hughsie/appstream-glib/pull/409,mingw clang does not support --version-script linker option.,mingw clang does not support --version-script linker option.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,410,2021-08-02T14:51:29Z,2021-08-03T07:20:30Z,2021-08-03T08:09:27Z,MERGED,True,127,76,7,https://github.com/tintou,Consider AppStream version as a string,1,[],https://github.com/hughsie/appstream-glib/pull/410,https://github.com/tintou,1,https://github.com/hughsie/appstream-glib/pull/410,"Always store the AppStream metadata version as a string and compare it
like any other version.
This allows to have 0.10 > 0.8 for instance.","Always store the AppStream metadata version as a string and compare it
like any other version.
This allows to have 0.10 > 0.8 for instance.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,410,2021-08-02T14:51:29Z,2021-08-03T07:20:30Z,2021-08-03T08:09:27Z,MERGED,True,127,76,7,https://github.com/tintou,Consider AppStream version as a string,1,[],https://github.com/hughsie/appstream-glib/pull/410,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/410#issuecomment-891166580,"Always store the AppStream metadata version as a string and compare it
like any other version.
This allows to have 0.10 > 0.8 for instance.",Don't you need to add the new symbols to appstream-glib.map?,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,410,2021-08-02T14:51:29Z,2021-08-03T07:20:30Z,2021-08-03T08:09:27Z,MERGED,True,127,76,7,https://github.com/tintou,Consider AppStream version as a string,1,[],https://github.com/hughsie/appstream-glib/pull/410,https://github.com/tintou,3,https://github.com/hughsie/appstream-glib/pull/410#issuecomment-891589651,"Always store the AppStream metadata version as a string and compare it
like any other version.
This allows to have 0.10 > 0.8 for instance.","It looks like adding it to appstream-glib.map isn't necessary:
{
global:
    as_*;
local:
    *;
};",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,410,2021-08-02T14:51:29Z,2021-08-03T07:20:30Z,2021-08-03T08:09:27Z,MERGED,True,127,76,7,https://github.com/tintou,Consider AppStream version as a string,1,[],https://github.com/hughsie/appstream-glib/pull/410,https://github.com/hughsie,4,https://github.com/hughsie/appstream-glib/pull/410#issuecomment-891601080,"Always store the AppStream metadata version as a string and compare it
like any other version.
This allows to have 0.10 > 0.8 for instance.",as_*;,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,412,2021-08-03T18:36:44Z,2021-08-03T18:46:23Z,2021-08-03T18:46:23Z,MERGED,True,71,69,1,https://github.com/haaninjo,Update Swedish translation,1,[],https://github.com/hughsie/appstream-glib/pull/412,https://github.com/haaninjo,1,https://github.com/hughsie/appstream-glib/pull/412,This completes the Swedish translation.,This completes the Swedish translation.,True,{'THUMBS_UP': ['https://github.com/hughsie']}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,413,2021-08-06T21:47:19Z,2021-08-07T05:34:38Z,2021-08-07T05:34:38Z,MERGED,True,16,19,1,https://github.com/jordimas,Update Catalan translation,1,[],https://github.com/hughsie/appstream-glib/pull/413,https://github.com/jordimas,1,https://github.com/hughsie/appstream-glib/pull/413,,,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,414,2021-08-07T11:41:15Z,2021-08-07T14:58:20Z,2021-08-07T15:34:53Z,MERGED,True,199,197,1,https://github.com/piotrdrag,Update Polish translation 210807,1,[],https://github.com/hughsie/appstream-glib/pull/414,https://github.com/piotrdrag,1,https://github.com/hughsie/appstream-glib/pull/414,,,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,415,2021-08-10T15:00:23Z,2021-08-10T15:59:56Z,2021-12-03T16:42:19Z,MERGED,True,2,2,1,https://github.com/ximion,Don't emit legacy component type values,1,[],https://github.com/hughsie/appstream-glib/pull/415,https://github.com/ximion,1,https://github.com/hughsie/appstream-glib/pull/415,"Emitting the old names was likely kept to not create any breakage and provide full backwards compatibility between different versions. However, asglib has supported the new names for years now and emitting the older ones actually causes problems now, in the case of webapp: https://gitlab.gnome.org/GNOME/gnome-software/-/merge_requests/899
This change also makes asglib emit desktop-application instead of desktop, which likely doesn't fix any real-world issues, as we'll keep the desktop alias forever, but it's nice to emit the full name for consistency.","Emitting the old names was likely kept to not create any breakage and provide full backwards compatibility between different versions. However, asglib has supported the new names for years now and emitting the older ones actually causes problems now, in the case of webapp: https://gitlab.gnome.org/GNOME/gnome-software/-/merge_requests/899
This change also makes asglib emit desktop-application instead of desktop, which likely doesn't fix any real-world issues, as we'll keep the desktop alias forever, but it's nice to emit the full name for consistency.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,415,2021-08-10T15:00:23Z,2021-08-10T15:59:56Z,2021-12-03T16:42:19Z,MERGED,True,2,2,1,https://github.com/ximion,Don't emit legacy component type values,1,[],https://github.com/hughsie/appstream-glib/pull/415,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/415#issuecomment-985459099,"Emitting the old names was likely kept to not create any breakage and provide full backwards compatibility between different versions. However, asglib has supported the new names for years now and emitting the older ones actually causes problems now, in the case of webapp: https://gitlab.gnome.org/GNOME/gnome-software/-/merge_requests/899
This change also makes asglib emit desktop-application instead of desktop, which likely doesn't fix any real-world issues, as we'll keep the desktop alias forever, but it's nice to emit the full name for consistency.","I reverted this, it broke the self tests in lots of places.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,415,2021-08-10T15:00:23Z,2021-08-10T15:59:56Z,2021-12-03T16:42:19Z,MERGED,True,2,2,1,https://github.com/ximion,Don't emit legacy component type values,1,[],https://github.com/hughsie/appstream-glib/pull/415,https://github.com/ximion,3,https://github.com/hughsie/appstream-glib/pull/415#issuecomment-985666528,"Emitting the old names was likely kept to not create any breakage and provide full backwards compatibility between different versions. However, asglib has supported the new names for years now and emitting the older ones actually causes problems now, in the case of webapp: https://gitlab.gnome.org/GNOME/gnome-software/-/merge_requests/899
This change also makes asglib emit desktop-application instead of desktop, which likely doesn't fix any real-world issues, as we'll keep the desktop alias forever, but it's nice to emit the full name for consistency.","I would argue that these tests should probably be fixed ;-)
At least ""webapp"" was never standardized and libappstream will not recognize it (""desktop"" is a different case, that one will probably be supported until the universe dies, way beyond AppStream 1.0 at least).",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,421,2021-11-23T14:55:46Z,,2022-05-26T15:36:55Z,OPEN,False,89,41,7,https://github.com/mcrha,misc: Port to libsoup3,2,[],https://github.com/hughsie/appstream-glib/pull/421,https://github.com/mcrha,1,https://github.com/hughsie/appstream-glib/pull/421,"Build for libsoup3 by default. Use -Dsoup2=true meson option to build
against libsoup2 instead. The libsoup API version is exposed in
the appstream-glib.pc file as well, thus the library users can check
they use the same libsoup API version as the appstream-glib library.","Build for libsoup3 by default. Use -Dsoup2=true meson option to build
against libsoup2 instead. The libsoup API version is exposed in
the appstream-glib.pc file as well, thus the library users can check
they use the same libsoup API version as the appstream-glib library.",True,"{'HEART': ['https://github.com/mcatanzaro'], 'THUMBS_UP': ['https://github.com/mcatanzaro', 'https://github.com/abderrahim']}"
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,421,2021-11-23T14:55:46Z,,2022-05-26T15:36:55Z,OPEN,False,89,41,7,https://github.com/mcrha,misc: Port to libsoup3,2,[],https://github.com/hughsie/appstream-glib/pull/421,https://github.com/mcrha,2,https://github.com/hughsie/appstream-glib/pull/421#issuecomment-976669792,"Build for libsoup3 by default. Use -Dsoup2=true meson option to build
against libsoup2 instead. The libsoup API version is exposed in
the appstream-glib.pc file as well, thus the library users can check
they use the same libsoup API version as the appstream-glib library.","The default value for the libsoup version use mimics what other projects do, like libgweather or geocode-glib. I guess it's for a reason that the libsoup2 is going to be removed, thus the new builds will not need to carry the ""use libsoup3 instead"" option ad infinity.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,421,2021-11-23T14:55:46Z,,2022-05-26T15:36:55Z,OPEN,False,89,41,7,https://github.com/mcrha,misc: Port to libsoup3,2,[],https://github.com/hughsie/appstream-glib/pull/421,https://github.com/hughsie,3,https://github.com/hughsie/appstream-glib/pull/421#issuecomment-976684164,"Build for libsoup3 by default. Use -Dsoup2=true meson option to build
against libsoup2 instead. The libsoup API version is exposed in
the appstream-glib.pc file as well, thus the library users can check
they use the same libsoup API version as the appstream-glib library.","Ohh wow, @kalev what do you think here? Don't we need to break soname if we change the dep soname?",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,421,2021-11-23T14:55:46Z,,2022-05-26T15:36:55Z,OPEN,False,89,41,7,https://github.com/mcrha,misc: Port to libsoup3,2,[],https://github.com/hughsie/appstream-glib/pull/421,https://github.com/mcrha,4,https://github.com/hughsie/appstream-glib/pull/421#issuecomment-976692461,"Build for libsoup3 by default. Use -Dsoup2=true meson option to build
against libsoup2 instead. The libsoup API version is exposed in
the appstream-glib.pc file as well, thus the library users can check
they use the same libsoup API version as the appstream-glib library.","Aha, I did not think of it, but yes, it makes sense, to be able to install both versions on a single machine.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,421,2021-11-23T14:55:46Z,,2022-05-26T15:36:55Z,OPEN,False,89,41,7,https://github.com/mcrha,misc: Port to libsoup3,2,[],https://github.com/hughsie/appstream-glib/pull/421,https://github.com/mcrha,5,https://github.com/hughsie/appstream-glib/pull/421#issuecomment-976693542,"Build for libsoup3 by default. Use -Dsoup2=true meson option to build
against libsoup2 instead. The libsoup API version is exposed in
the appstream-glib.pc file as well, thus the library users can check
they use the same libsoup API version as the appstream-glib library.",Which would require a change in the .pc file name as well?,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,421,2021-11-23T14:55:46Z,,2022-05-26T15:36:55Z,OPEN,False,89,41,7,https://github.com/mcrha,misc: Port to libsoup3,2,[],https://github.com/hughsie/appstream-glib/pull/421,https://github.com/hughsie,6,https://github.com/hughsie/appstream-glib/pull/421#issuecomment-976694773,"Build for libsoup3 by default. Use -Dsoup2=true meson option to build
against libsoup2 instead. The libsoup API version is exposed in
the appstream-glib.pc file as well, thus the library users can check
they use the same libsoup API version as the appstream-glib library.","Which would require a change in the .pc file name as well?

Ohh it requires quite a few painful changes, e.g. include file install location binary tool names etc.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,421,2021-11-23T14:55:46Z,,2022-05-26T15:36:55Z,OPEN,False,89,41,7,https://github.com/mcrha,misc: Port to libsoup3,2,[],https://github.com/hughsie/appstream-glib/pull/421,https://github.com/mcrha,7,https://github.com/hughsie/appstream-glib/pull/421#issuecomment-976759913,"Build for libsoup3 by default. Use -Dsoup2=true meson option to build
against libsoup2 instead. The libsoup API version is exposed in
the appstream-glib.pc file as well, thus the library users can check
they use the same libsoup API version as the appstream-glib library.","Ohh it requires quite a few painful changes, e.g. include file install location binary tool names etc.

In case of the appstream-glib the libsoup usage is not exposed in the public API, thus there's no problem with the headers, only with the library, which bring in the process the libsoup version it is built from.
It's still painful to do, no doubt. I guess it is the reason why other projects, like geocode-glib do not plan to install the two version sin parallels, at least I do not see any such option here: https://gitlab.gnome.org/GNOME/geocode-glib/-/merge_requests/15
@mcatanzaro Do I recall correctly that there is no plan to install (some of) the libraries in parallel, one for libsoup3 and one for libsoup2? The libsoup itself allows it, but not all already ported libraries do.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,421,2021-11-23T14:55:46Z,,2022-05-26T15:36:55Z,OPEN,False,89,41,7,https://github.com/mcrha,misc: Port to libsoup3,2,[],https://github.com/hughsie/appstream-glib/pull/421,https://github.com/ximion,8,https://github.com/hughsie/appstream-glib/pull/421#issuecomment-976782989,"Build for libsoup3 by default. Use -Dsoup2=true meson option to build
against libsoup2 instead. The libsoup API version is exposed in
the appstream-glib.pc file as well, thus the library users can check
they use the same libsoup API version as the appstream-glib library.","Why does this need a feature flag at all? The Meson build definition could autodetect if libsoup3 is present and if so, use it, and otherwise fall back to the old version. Using both in the same process would obviously not work, but having both compiled against different versions would also be odd.
Unless there is a good reason to have both Soup versions, getting rid of one should be the goal, right? At least in Debian, we would rebuild all dependencies of the old soup in order, and then remove the older library version once done.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,421,2021-11-23T14:55:46Z,,2022-05-26T15:36:55Z,OPEN,False,89,41,7,https://github.com/mcrha,misc: Port to libsoup3,2,[],https://github.com/hughsie/appstream-glib/pull/421,https://github.com/mcatanzaro,9,https://github.com/hughsie/appstream-glib/pull/421#issuecomment-976794504,"Build for libsoup3 by default. Use -Dsoup2=true meson option to build
against libsoup2 instead. The libsoup API version is exposed in
the appstream-glib.pc file as well, thus the library users can check
they use the same libsoup API version as the appstream-glib library.","Do I recall correctly that there is no plan to install (some of) the libraries in parallel, one for libsoup3 and one for libsoup2? The libsoup itself allows it, but not all already ported libraries do.

Totally up to you. libsoup itself is indeed parallel-installable. Whether to do that for appstream-glib really depends on how many reverse dependencies you have using libsoup.

The Meson build definition could autodetect if libsoup3 is present and if so, use it, and otherwise fall back to the old version.

I'm going to suggest avoiding automatic anything, since this tends to lead to unexpected or undesired results. I like what Milan has done: libsoup3 is newer and should be the default, but a fallback to libsoup2 is available on an opt-in basis.

Unless there is a good reason to have both Soup versions, getting rid of one should be the goal, right? At least in Debian, we would rebuild all dependencies of the old soup in order, and then remove the older library version once done.

Well you have to manually port each dependency to libsoup3 first. They will all fail to build until ported. It's very unlikely that a distro as large as Debian could do this with a flag day: it will need two parallel-installed libsoups for a long time to come. And distros will make the switch at different times, hence the feature flag seems practical.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,421,2021-11-23T14:55:46Z,,2022-05-26T15:36:55Z,OPEN,False,89,41,7,https://github.com/mcrha,misc: Port to libsoup3,2,[],https://github.com/hughsie/appstream-glib/pull/421,https://github.com/mcrha,10,https://github.com/hughsie/appstream-glib/pull/421#issuecomment-976807024,"Build for libsoup3 by default. Use -Dsoup2=true meson option to build
against libsoup2 instead. The libsoup API version is exposed in
the appstream-glib.pc file as well, thus the library users can check
they use the same libsoup API version as the appstream-glib library.","Whether to do that for appstream-glib really depends on how many reverse dependencies you have using libsoup.

Aha, I see, the it can be fine to not offer to install in parallel both versions. The soname version change (not really only bump) makes sense too, thus the apps already built against the current soname version will eventually break on their execution. They might too, if the libsoup version does not match (as both libsoup 2 and 3 take care of it now).

I like what Milan has done: libsoup3 is newer and should be the default, but a fallback to libsoup2 is available on an opt-in basis.

I just did mimic what had been done in other projects. Including the pkg-config file info, thus the incompatible libsoup API version can be detected in build time, rather than in runtime. Such detection requires changes on the library user code, of course.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,421,2021-11-23T14:55:46Z,,2022-05-26T15:36:55Z,OPEN,False,89,41,7,https://github.com/mcrha,misc: Port to libsoup3,2,[],https://github.com/hughsie/appstream-glib/pull/421,https://github.com/mcrha,11,https://github.com/hughsie/appstream-glib/pull/421#issuecomment-976821796,"Build for libsoup3 by default. Use -Dsoup2=true meson option to build
against libsoup2 instead. The libsoup API version is exposed in
the appstream-glib.pc file as well, thus the library users can check
they use the same libsoup API version as the appstream-glib library.","The commit mcrha@0e54197 handles the soname version change. I can squash it with the previous commit, I only wanted to make it clearer what the change can be.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,421,2021-11-23T14:55:46Z,,2022-05-26T15:36:55Z,OPEN,False,89,41,7,https://github.com/mcrha,misc: Port to libsoup3,2,[],https://github.com/hughsie/appstream-glib/pull/421,https://github.com/ximion,12,https://github.com/hughsie/appstream-glib/pull/421#issuecomment-976823197,"Build for libsoup3 by default. Use -Dsoup2=true meson option to build
against libsoup2 instead. The libsoup API version is exposed in
the appstream-glib.pc file as well, thus the library users can check
they use the same libsoup API version as the appstream-glib library.","Well you have to manually port each dependency to libsoup3 first. They will all fail to build until ported. It's very unlikely that a distro as large as Debian could do this with a flag day: it will need two parallel-installed libsoups for a long time to come. And distros will make the switch at different times, hence the feature flag seems practical.

Sure, supporting both is obviously essential :-) Having an explicit flag is also usually a good idea.
A soname bump and rename and parallel installability feels like a lot of work though. On Debian, there are only two things depending on appstream-glib currently (on the library at least): Flatpak and libmalcontent-ui. The latter could of course be linked to things that use an older libsoup, but at the moment, both its consumer don't do that. Flatpak is an issue, but has its own porting commit to libsoup already.
So, @hughsie's call of course, but the impact of being soup3-only seems to be fairly manageable.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,421,2021-11-23T14:55:46Z,,2022-05-26T15:36:55Z,OPEN,False,89,41,7,https://github.com/mcrha,misc: Port to libsoup3,2,[],https://github.com/hughsie/appstream-glib/pull/421,https://github.com/mcrha,13,https://github.com/hughsie/appstream-glib/pull/421#issuecomment-976854481,"Build for libsoup3 by default. Use -Dsoup2=true meson option to build
against libsoup2 instead. The libsoup API version is exposed in
the appstream-glib.pc file as well, thus the library users can check
they use the same libsoup API version as the appstream-glib library.","On Debian, there are only two things depending on appstream-glib currently (on the library at least): Flatpak and libmalcontent-ui.

For what it's worth, and unless I ran a wrong dnf command, Fedora has a dependency on the libappstream-glib on Flatpak, malcontent-ui-libs and PackageKit. Neither the malcontent nor the PackageKit depend on the libsoup (thus a simple rebuild against new appstream-glib is fine).",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,421,2021-11-23T14:55:46Z,,2022-05-26T15:36:55Z,OPEN,False,89,41,7,https://github.com/mcrha,misc: Port to libsoup3,2,[],https://github.com/hughsie/appstream-glib/pull/421,https://github.com/kalev,14,https://github.com/hughsie/appstream-glib/pull/421#issuecomment-976876469,"Build for libsoup3 by default. Use -Dsoup2=true meson option to build
against libsoup2 instead. The libsoup API version is exposed in
the appstream-glib.pc file as well, thus the library users can check
they use the same libsoup API version as the appstream-glib library.","I don't think it's necessary to change the soname but I think it's also fine to do it if you want :) What I would avoid here is making the whole project parallel-installable (changing the .pc file name and headers and so on) as that seems to just lead to more pain on the distro side.
The situation should be roughly the same in Fedora as in Debian that ximion described and we don't have a lot of packages using libappstream-glib.",True,"{'THUMBS_UP': ['https://github.com/mcatanzaro', 'https://github.com/TingPing']}"
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,421,2021-11-23T14:55:46Z,,2022-05-26T15:36:55Z,OPEN,False,89,41,7,https://github.com/mcrha,misc: Port to libsoup3,2,[],https://github.com/hughsie/appstream-glib/pull/421,https://github.com/mwleeds,15,https://github.com/hughsie/appstream-glib/pull/421#issuecomment-1043158943,"Build for libsoup3 by default. Use -Dsoup2=true meson option to build
against libsoup2 instead. The libsoup API version is exposed in
the appstream-glib.pc file as well, thus the library users can check
they use the same libsoup API version as the appstream-glib library.","Fedora has a dependency on the libappstream-glib on Flatpak, malcontent-ui-libs and PackageKit.

Flatpak now dropped the libappstream-glib dep on the development branch. It might be better to focus on porting those other two projects from libappstream-glib rather than porting libappstream-glib to soup3?",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,421,2021-11-23T14:55:46Z,,2022-05-26T15:36:55Z,OPEN,False,89,41,7,https://github.com/mcrha,misc: Port to libsoup3,2,[],https://github.com/hughsie/appstream-glib/pull/421,https://github.com/mcatanzaro,16,https://github.com/hughsie/appstream-glib/pull/421#issuecomment-1138532118,"Build for libsoup3 by default. Use -Dsoup2=true meson option to build
against libsoup2 instead. The libsoup API version is exposed in
the appstream-glib.pc file as well, thus the library users can check
they use the same libsoup API version as the appstream-glib library.",Ping maintainers. Please land this. A huge amount of software is using appstream-glib. Porting away seems impractical.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,421,2021-11-23T14:55:46Z,,2022-05-26T15:36:55Z,OPEN,False,89,41,7,https://github.com/mcrha,misc: Port to libsoup3,2,[],https://github.com/hughsie/appstream-glib/pull/421,https://github.com/hughsie,17,https://github.com/hughsie/appstream-glib/pull/421#issuecomment-1138534272,"Build for libsoup3 by default. Use -Dsoup2=true meson option to build
against libsoup2 instead. The libsoup API version is exposed in
the appstream-glib.pc file as well, thus the library users can check
they use the same libsoup API version as the appstream-glib library.","It's still an API break, no?",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,421,2021-11-23T14:55:46Z,,2022-05-26T15:36:55Z,OPEN,False,89,41,7,https://github.com/mcrha,misc: Port to libsoup3,2,[],https://github.com/hughsie/appstream-glib/pull/421,https://github.com/nanonyme,18,https://github.com/hughsie/appstream-glib/pull/421#issuecomment-1138546990,"Build for libsoup3 by default. Use -Dsoup2=true meson option to build
against libsoup2 instead. The libsoup API version is exposed in
the appstream-glib.pc file as well, thus the library users can check
they use the same libsoup API version as the appstream-glib library.","Decreasing amount of appstream-glib consumers at this point are using the API, majority just use executables out of the project. Bumping soname seems sensible if this is an API break.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,421,2021-11-23T14:55:46Z,,2022-05-26T15:36:55Z,OPEN,False,89,41,7,https://github.com/mcrha,misc: Port to libsoup3,2,[],https://github.com/hughsie/appstream-glib/pull/421,https://github.com/hughsie,19,https://github.com/hughsie/appstream-glib/pull/421#issuecomment-1138548027,"Build for libsoup3 by default. Use -Dsoup2=true meson option to build
against libsoup2 instead. The libsoup API version is exposed in
the appstream-glib.pc file as well, thus the library users can check
they use the same libsoup API version as the appstream-glib library.","Agreed, the soname has to be bumped too. It probably makes sense to make the next version 0.8.0 too.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,421,2021-11-23T14:55:46Z,,2022-05-26T15:36:55Z,OPEN,False,89,41,7,https://github.com/mcrha,misc: Port to libsoup3,2,[],https://github.com/hughsie/appstream-glib/pull/421,https://github.com/ximion,20,https://github.com/hughsie/appstream-glib/pull/421#issuecomment-1138569288,"Build for libsoup3 by default. Use -Dsoup2=true meson option to build
against libsoup2 instead. The libsoup API version is exposed in
the appstream-glib.pc file as well, thus the library users can check
they use the same libsoup API version as the appstream-glib library.","Ping maintainers. Please land this. A huge amount of software is using appstream-glib. Porting away seems impractical.

Sorry for the slightly OT question, but which software would that be? On my system, actually nothing depends on appstream-glib (apt-cache rdepends libappstream-glib8 also yields nothing). I like to know what software is using asglib and for what reason they might want to stick with it.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,421,2021-11-23T14:55:46Z,,2022-05-26T15:36:55Z,OPEN,False,89,41,7,https://github.com/mcrha,misc: Port to libsoup3,2,[],https://github.com/hughsie/appstream-glib/pull/421,https://github.com/nanonyme,21,https://github.com/hughsie/appstream-glib/pull/421#issuecomment-1138577844,"Build for libsoup3 by default. Use -Dsoup2=true meson option to build
against libsoup2 instead. The libsoup API version is exposed in
the appstream-glib.pc file as well, thus the library users can check
they use the same libsoup API version as the appstream-glib library.","@ximion the dependency is typically on appstream-util provided by appstream-glib, not the rest of appstream-glib.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,421,2021-11-23T14:55:46Z,,2022-05-26T15:36:55Z,OPEN,False,89,41,7,https://github.com/mcrha,misc: Port to libsoup3,2,[],https://github.com/hughsie/appstream-glib/pull/421,https://github.com/mcatanzaro,22,https://github.com/hughsie/appstream-glib/pull/421#issuecomment-1138578821,"Build for libsoup3 by default. Use -Dsoup2=true meson option to build
against libsoup2 instead. The libsoup API version is exposed in
the appstream-glib.pc file as well, thus the library users can check
they use the same libsoup API version as the appstream-glib library.","It's still an API break, no?

Sort of. If the application does not use libsoup, then it doesn't matter. If it does, then yeah distros need to ensure they do not combine libsoup 2 and libsoup 3.
If a lot of software depends on libappstream-glib, then you may wish to bump your API version, so that you have the older API version using libsoup2 and the newer API version using libsoup 3. If not a lot of stuff depends on it, and you don't intend to provide parallel-installability, then I'd say it does not matter.

Sorry for the slightly OT question, but which software would that be?

Quick search of gnome-build-meta:
$ git grep appstream-glib
elements/core-deps/flatpak.bst:- sdk/appstream-glib.bst
elements/core-deps/malcontent.bst:- sdk/appstream-glib.bst
elements/core/baobab.bst:- sdk/appstream-glib.bst
elements/core/cheese.bst:- sdk/appstream-glib.bst
elements/core/dconf-editor.bst:- sdk/appstream-glib.bst
elements/core/devhelp.bst:- sdk/appstream-glib.bst
elements/core/epiphany.bst:- sdk/appstream-glib.bst
elements/core/evince.bst:- sdk/appstream-glib.bst
elements/core/gnome-calculator.bst:- sdk/appstream-glib.bst
elements/core/gnome-calendar.bst:- sdk/appstream-glib.bst
elements/core/gnome-characters.bst:- sdk/appstream-glib.bst
elements/core/gnome-color-manager.bst:- sdk/appstream-glib.bst
elements/core/gnome-disk-utility.bst:- sdk/appstream-glib.bst
elements/core/gnome-logs.bst:- sdk/appstream-glib.bst
elements/core/gnome-weather.bst:- sdk/appstream-glib.bst
elements/core/totem.bst:- sdk/appstream-glib.bst
elements/sdk-platform.bst:- sdk/appstream-glib.bst
elements/sdk-platform.bst:# appstream-glib, at-spi2-*, atk, fcitx, gcab, gdk-pixbuf, geoclue2, glib-networking,
elements/sdk/appstream-glib.bst:  url: freedesktop_people:~hughsient/appstream-glib/releases/appstream-glib-0.7.18.tar.xz
elements/sdk/appstream-glib.bst:        - '%{libdir}/libappstream-glib.so'
elements/sdk/cantarell-fonts.bst:- sdk/appstream-glib.bst
elements/sdk/os-release.bst:- sdk/appstream-glib.bst
elements/sdk/yelp.bst:- sdk/appstream-glib.bst
elements/vm/os-release-devel.bst:- sdk/appstream-glib.bst
elements/vm/os-release-user.bst:- sdk/appstream-glib.bst
elements/world/accerciser.bst:- sdk/appstream-glib.bst
elements/world/five-or-more.bst:- sdk/appstream-glib.bst
elements/world/four-in-a-row.bst:- sdk/appstream-glib.bst
elements/world/geary.bst:- sdk/appstream-glib.bst
elements/world/gnome-2048.bst:- sdk/appstream-glib.bst
elements/world/gnome-chess.bst:- sdk/appstream-glib.bst
elements/world/gnome-klotski.bst:- sdk/appstream-glib.bst
elements/world/gnome-mahjongg.bst:- sdk/appstream-glib.bst
elements/world/gnome-mines.bst:- sdk/appstream-glib.bst
elements/world/gnome-nibbles.bst:- sdk/appstream-glib.bst
elements/world/gnome-robots.bst:- sdk/appstream-glib.bst
elements/world/gnome-screenshot.bst:- sdk/appstream-glib.bst
elements/world/gnome-sudoku.bst:- sdk/appstream-glib.bst
elements/world/gnome-taquin.bst:- sdk/appstream-glib.bst
elements/world/gnome-todo.bst:- sdk/appstream-glib.bst
elements/world/hitori.bst:- sdk/appstream-glib.bst
elements/world/iagno.bst:- sdk/appstream-glib.bst
elements/world/lightsoff.bst:- sdk/appstream-glib.bst
elements/world/polari.bst:- sdk/appstream-glib.bst
elements/world/quadrapassel.bst:- sdk/appstream-glib.bst
elements/world/swell-foop.bst:- sdk/appstream-glib.bst

I think most of this stuff needs /usr/bin/appstream-util, not libappstream-glib.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,421,2021-11-23T14:55:46Z,,2022-05-26T15:36:55Z,OPEN,False,89,41,7,https://github.com/mcrha,misc: Port to libsoup3,2,[],https://github.com/hughsie/appstream-glib/pull/421,https://github.com/ximion,23,https://github.com/hughsie/appstream-glib/pull/421#issuecomment-1138598549,"Build for libsoup3 by default. Use -Dsoup2=true meson option to build
against libsoup2 instead. The libsoup API version is exposed in
the appstream-glib.pc file as well, thus the library users can check
they use the same libsoup API version as the appstream-glib library.","I think most of this stuff needs /usr/bin/appstream-util, not libappstream-glib.

Maybe a half-a-day project for me to make them use appstreamcli as soon as we have some idea how to resolve the GNOME versioning clashing with the AppStream vercmp spec... https://gitlab.gnome.org/GNOME/gnome-software/-/merge_requests/1378
Using appstream-util means that the projects currently can't use newer AppStream features or not have the newer stuff validated.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,421,2021-11-23T14:55:46Z,,2022-05-26T15:36:55Z,OPEN,False,89,41,7,https://github.com/mcrha,misc: Port to libsoup3,2,[],https://github.com/hughsie/appstream-glib/pull/421,https://github.com/nanonyme,24,https://github.com/hughsie/appstream-glib/pull/421#issuecomment-1138705656,"Build for libsoup3 by default. Use -Dsoup2=true meson option to build
against libsoup2 instead. The libsoup API version is exposed in
the appstream-glib.pc file as well, thus the library users can check
they use the same libsoup API version as the appstream-glib library.","The reality is that unless this lands, freedesktop-sdk is going to need to ship libsoup2 in next Fall's release. It is still too early to drop appstream-glib from runtimes. We will most likely delay libsoup3 migration by one more year to reduce risk of apps mixing libsoup2 and libsoup3.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,421,2021-11-23T14:55:46Z,,2022-05-26T15:36:55Z,OPEN,False,89,41,7,https://github.com/mcrha,misc: Port to libsoup3,2,[],https://github.com/hughsie/appstream-glib/pull/421,https://github.com/hughsie,25,https://github.com/hughsie/appstream-glib/pull/421#issuecomment-1138710932,"Build for libsoup3 by default. Use -Dsoup2=true meson option to build
against libsoup2 instead. The libsoup API version is exposed in
the appstream-glib.pc file as well, thus the library users can check
they use the same libsoup API version as the appstream-glib library.","I can work on this, but not until next week.",True,"{'THUMBS_UP': ['https://github.com/mcatanzaro', 'https://github.com/A6GibKm']}"
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,423,2021-12-02T15:37:32Z,2021-12-03T13:46:32Z,2021-12-03T13:46:32Z,CLOSED,False,6,2,2,https://github.com/hughsie,Fix validation of translated captions when LANG is not C,1,[],https://github.com/hughsie/appstream-glib/pull/423,https://github.com/hughsie,1,https://github.com/hughsie/appstream-glib/pull/423,,,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,424,2021-12-03T12:52:43Z,2021-12-03T13:46:20Z,2021-12-03T13:46:25Z,MERGED,True,3,3,1,https://github.com/hughsie,Fix validation of translated captions when LANG is not C,1,[],https://github.com/hughsie/appstream-glib/pull/424,https://github.com/hughsie,1,https://github.com/hughsie/appstream-glib/pull/424,Fixes #422,Fixes #422,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,427,2022-02-08T14:52:54Z,2022-02-08T15:02:16Z,2022-02-08T15:04:51Z,MERGED,True,4,1,1,https://github.com/Vogtinator,as-app: Also unwrap description in metainfo files,1,[],https://github.com/hughsie/appstream-glib/pull/427,https://github.com/Vogtinator,1,https://github.com/hughsie/appstream-glib/pull/427,"According to the specification, there is no difference between both kinds
of upstream metainfo files.
Fixes #381","According to the specification, there is no difference between both kinds
of upstream metainfo files.
Fixes #381",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,429,2022-02-14T22:27:18Z,2022-02-15T11:08:55Z,2022-02-15T11:27:33Z,MERGED,True,75,72,1,https://github.com/rffontenelle,Update Brazilian Portuguese translation,1,[],https://github.com/hughsie/appstream-glib/pull/429,https://github.com/rffontenelle,1,https://github.com/hughsie/appstream-glib/pull/429,Translated by Matheus and proofread by me in Damned Lies.,Translated by Matheus and proofread by me in Damned Lies.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,430,2022-02-15T12:44:50Z,2022-02-16T14:29:56Z,2022-03-09T12:15:24Z,MERGED,True,4,1,1,https://github.com/Vogtinator,libappstream-builder: Fix file paths in icon tarball,1,[],https://github.com/hughsie/appstream-glib/pull/430,https://github.com/Vogtinator,1,https://github.com/hughsie/appstream-glib/pull/430,"dbd62f6 (#390) removed the WxH directory from the icon filenames, which were also
used as-is for the paths in the icons tarball. However, if width and height
are set on the icon, then it has to be inside a size-specific directory.
With HiDPI enabled, it did even overwrite the non-HiDPI icon it saved just
before because the filenames were the same.
Add the subdirectory back in the resource handling code.
CC @pwithnall
Before:
(appstream-builder:18724): Asb-DEBUG: 13:24:10.614: DEBUG:   Saved icon /tmp/tmp.wfYnMaboui/apb/icons/org.qbittorrent.qBittorrent.png
(appstream-builder:18724): Asb-DEBUG: 13:24:10.638: DEBUG:   Saved icon /tmp/tmp.wfYnMaboui/apb/icons/org.qbittorrent.qBittorrent.png
...
    <icon type=""cached"" height=""64"" width=""64"">org.qbittorrent.qBittorrent.png</icon>
    <icon type=""cached"" height=""128"" width=""128"">org.qbittorrent.qBittorrent.png</icon>
...
> tar tvf appdata-icons.tar.gz 
-rw-r--r-- 0/0            4983 1970-01-01 01:00 org.qbittorrent.qBittorrent.png

Now:
(appstream-builder:18837): Asb-DEBUG: 13:25:14.134: DEBUG:   Saved icon /tmp/tmp.wfYnMaboui/apb/icons/64x64/org.qbittorrent.qBittorrent.png
(appstream-builder:18837): Asb-DEBUG: 13:25:14.157: DEBUG:   Saved icon /tmp/tmp.wfYnMaboui/apb/icons/128x128/org.qbittorrent.qBittorrent.png
...
    <icon type=""cached"" height=""64"" width=""64"">org.qbittorrent.qBittorrent.png</icon>
    <icon type=""cached"" height=""128"" width=""128"">org.qbittorrent.qBittorrent.png</icon>
...
-rw-r--r-- 0/0            4983 1970-01-01 01:00 128x128/org.qbittorrent.qBittorrent.png
-rw-r--r-- 0/0            2957 1970-01-01 01:00 64x64/org.qbittorrent.qBittorrent.png","dbd62f6 (#390) removed the WxH directory from the icon filenames, which were also
used as-is for the paths in the icons tarball. However, if width and height
are set on the icon, then it has to be inside a size-specific directory.
With HiDPI enabled, it did even overwrite the non-HiDPI icon it saved just
before because the filenames were the same.
Add the subdirectory back in the resource handling code.
CC @pwithnall
Before:
(appstream-builder:18724): Asb-DEBUG: 13:24:10.614: DEBUG:   Saved icon /tmp/tmp.wfYnMaboui/apb/icons/org.qbittorrent.qBittorrent.png
(appstream-builder:18724): Asb-DEBUG: 13:24:10.638: DEBUG:   Saved icon /tmp/tmp.wfYnMaboui/apb/icons/org.qbittorrent.qBittorrent.png
...
    <icon type=""cached"" height=""64"" width=""64"">org.qbittorrent.qBittorrent.png</icon>
    <icon type=""cached"" height=""128"" width=""128"">org.qbittorrent.qBittorrent.png</icon>
...
> tar tvf appdata-icons.tar.gz 
-rw-r--r-- 0/0            4983 1970-01-01 01:00 org.qbittorrent.qBittorrent.png

Now:
(appstream-builder:18837): Asb-DEBUG: 13:25:14.134: DEBUG:   Saved icon /tmp/tmp.wfYnMaboui/apb/icons/64x64/org.qbittorrent.qBittorrent.png
(appstream-builder:18837): Asb-DEBUG: 13:25:14.157: DEBUG:   Saved icon /tmp/tmp.wfYnMaboui/apb/icons/128x128/org.qbittorrent.qBittorrent.png
...
    <icon type=""cached"" height=""64"" width=""64"">org.qbittorrent.qBittorrent.png</icon>
    <icon type=""cached"" height=""128"" width=""128"">org.qbittorrent.qBittorrent.png</icon>
...
-rw-r--r-- 0/0            4983 1970-01-01 01:00 128x128/org.qbittorrent.qBittorrent.png
-rw-r--r-- 0/0            2957 1970-01-01 01:00 64x64/org.qbittorrent.qBittorrent.png",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,432,2022-03-09T14:44:40Z,2022-03-09T20:07:00Z,2022-03-10T08:53:52Z,MERGED,True,10,46,3,https://github.com/Vogtinator,Fix extracting relative symlinks,1,[],https://github.com/hughsie/appstream-glib/pull/432,https://github.com/Vogtinator,1,https://github.com/hughsie/appstream-glib/pull/432,"ebdefa2 tried to fix handling of relative symlinks in archives, but that
only addressed targets starting with ""..""/. Fix it properly by using
asb_utils_sanitise_path only for absolute paths, keep relative paths as-is.
Simplify code for handling absolute symlinks by just prepending the root
instead of converting it to a relative link.
Hardlink targets are returned as paths relative to the archive root, so the
sanitization code is correct there.","ebdefa2 tried to fix handling of relative symlinks in archives, but that
only addressed targets starting with ""..""/. Fix it properly by using
asb_utils_sanitise_path only for absolute paths, keep relative paths as-is.
Simplify code for handling absolute symlinks by just prepending the root
instead of converting it to a relative link.
Hardlink targets are returned as paths relative to the archive root, so the
sanitization code is correct there.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,432,2022-03-09T14:44:40Z,2022-03-09T20:07:00Z,2022-03-10T08:53:52Z,MERGED,True,10,46,3,https://github.com/Vogtinator,Fix extracting relative symlinks,1,[],https://github.com/hughsie/appstream-glib/pull/432,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/432#issuecomment-1062997198,"ebdefa2 tried to fix handling of relative symlinks in archives, but that
only addressed targets starting with ""..""/. Fix it properly by using
asb_utils_sanitise_path only for absolute paths, keep relative paths as-is.
Simplify code for handling absolute symlinks by just prepending the root
instead of converting it to a relative link.
Hardlink targets are returned as paths relative to the archive root, so the
sanitization code is correct there.",Back a bit; what bug does this solve?,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,432,2022-03-09T14:44:40Z,2022-03-09T20:07:00Z,2022-03-10T08:53:52Z,MERGED,True,10,46,3,https://github.com/Vogtinator,Fix extracting relative symlinks,1,[],https://github.com/hughsie/appstream-glib/pull/432,https://github.com/Vogtinator,3,https://github.com/hughsie/appstream-glib/pull/432#issuecomment-1063009193,"ebdefa2 tried to fix handling of relative symlinks in archives, but that
only addressed targets starting with ""..""/. Fix it properly by using
asb_utils_sanitise_path only for absolute paths, keep relative paths as-is.
Simplify code for handling absolute symlinks by just prepending the root
instead of converting it to a relative link.
Hardlink targets are returned as paths relative to the archive root, so the
sanitization code is correct there.","https://bugzilla.opensuse.org/show_bug.cgi?id=1196459 is the downstream report. The affected package has
lrwxrwxrwx 1 root root 29 19. Sep 05:14 /usr/share/icons/hicolor/32x32/apps/simplescreenrecorder.png -> simplescreenrecorder-idle.png

libappstream-builder extracted that as
lrwxrwxrwx 1 fabian users 47  9. Mär 15:57 tmp/simplescreenrecorder-0.4.3-1.11/usr/share/icons/hicolor/32x32/apps/simplescreenrecorder.png -> ../../../../../../simplescreenrecorder-idle.png

i.e. simplescreenrecorder-idle.png ""sanitized"" to /simplescreenrecorder-idle.png and converted to the relative ../../../../../../simplescreenrecorder-idle.png.
The missing icon file triggers a veto and ultimately the package is missing from the generated collection.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,433,2022-03-09T14:55:07Z,,2022-03-11T12:25:26Z,OPEN,False,6,4,1,https://github.com/Vogtinator,Create icons/64x64 folder also without --enable-hidpi,1,[],https://github.com/hughsie/appstream-glib/pull/433,https://github.com/Vogtinator,1,https://github.com/hughsie/appstream-glib/pull/433,"The icons are written into the folder, so make sure it exists. Without this,
appstream-builder fails if the temporary directory didn't have icons/64x64 yet.
I guess that previously icons didn't have width/height set, so they were written into the icons folder directly instead of the 64x64 subfolder.","The icons are written into the folder, so make sure it exists. Without this,
appstream-builder fails if the temporary directory didn't have icons/64x64 yet.
I guess that previously icons didn't have width/height set, so they were written into the icons folder directly instead of the 64x64 subfolder.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,433,2022-03-09T14:55:07Z,,2022-03-11T12:25:26Z,OPEN,False,6,4,1,https://github.com/Vogtinator,Create icons/64x64 folder also without --enable-hidpi,1,[],https://github.com/hughsie/appstream-glib/pull/433,https://github.com/hughsie,2,https://github.com/hughsie/appstream-glib/pull/433#issuecomment-1065067524,"The icons are written into the folder, so make sure it exists. Without this,
appstream-builder fails if the temporary directory didn't have icons/64x64 yet.
I guess that previously icons didn't have width/height set, so they were written into the icons folder directly instead of the 64x64 subfolder.",Alternate proposal in #434,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,434,2022-03-11T12:25:10Z,,2022-03-11T12:25:10Z,OPEN,False,11,39,8,https://github.com/hughsie,Remove the --enable-hidpi option completely,1,[],https://github.com/hughsie/appstream-glib/pull/434,https://github.com/hughsie,1,https://github.com/hughsie/appstream-glib/pull/434,"Based on a patch by Fabian Vogt fvogt@suse.de, many thanks.","Based on a patch by Fabian Vogt fvogt@suse.de, many thanks.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,436,2022-03-15T21:50:52Z,2022-03-15T22:07:26Z,2022-03-15T22:07:26Z,MERGED,True,105,7,1,https://github.com/nedrichards,update to spdx 3.16,1,[],https://github.com/hughsie/appstream-glib/pull/436,https://github.com/nedrichards,1,https://github.com/hughsie/appstream-glib/pull/436,"Fixes #435
This patch gets a new copy of the SPDX licence list, updating to version 3.16 and follows the previous practice of concatenating the 'deprecated' list to the end in order to maintain backwards compatibility with real world appdata.","Fixes #435
This patch gets a new copy of the SPDX licence list, updating to version 3.16 and follows the previous practice of concatenating the 'deprecated' list to the end in order to maintain backwards compatibility with real world appdata.",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,438,2022-03-30T07:48:06Z,2022-03-30T08:05:21Z,2022-03-30T08:11:43Z,MERGED,True,12,0,2,https://github.com/JakobDev,Add vcs-browser and contribute URL type,1,[],https://github.com/hughsie/appstream-glib/pull/438,https://github.com/JakobDev,1,https://github.com/hughsie/appstream-glib/pull/438,This 2 new URL types were added to AppStream. This PR adds Support for them in appstream-glib.,This 2 new URL types were added to AppStream. This PR adds Support for them in appstream-glib.,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,438,2022-03-30T07:48:06Z,2022-03-30T08:05:21Z,2022-03-30T08:11:43Z,MERGED,True,12,0,2,https://github.com/JakobDev,Add vcs-browser and contribute URL type,1,[],https://github.com/hughsie/appstream-glib/pull/438,https://github.com/JakobDev,2,https://github.com/hughsie/appstream-glib/pull/438#issuecomment-1082761846,This 2 new URL types were added to AppStream. This PR adds Support for them in appstream-glib.,"@hughsie Thanks. Could you please create a new Release, so it's possible to use this new types on Flathub?",True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,438,2022-03-30T07:48:06Z,2022-03-30T08:05:21Z,2022-03-30T08:11:43Z,MERGED,True,12,0,2,https://github.com/JakobDev,Add vcs-browser and contribute URL type,1,[],https://github.com/hughsie/appstream-glib/pull/438,https://github.com/hughsie,3,https://github.com/hughsie/appstream-glib/pull/438#issuecomment-1082763577,This 2 new URL types were added to AppStream. This PR adds Support for them in appstream-glib.,"I wasn't planning a release any time soon, but I can put it on the TODO for next week.",True,{'THUMBS_UP': ['https://github.com/JakobDev']}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,439,2022-04-13T13:50:14Z,2022-04-13T13:54:00Z,2022-04-13T13:54:00Z,MERGED,True,29,35,8,https://github.com/hughsie,Wip/hughsie/covscan,3,[],https://github.com/hughsie/appstream-glib/pull/439,https://github.com/hughsie,1,https://github.com/hughsie/appstream-glib/pull/439,,,True,{}
hughsie/appstream-glib,https://github.com/hughsie/appstream-glib,440,2022-06-01T12:58:55Z,2022-06-01T13:06:13Z,2022-06-01T13:06:13Z,MERGED,True,75,85,1,https://github.com/danialbehzadi,Update fa.po,1,[],https://github.com/hughsie/appstream-glib/pull/440,https://github.com/danialbehzadi,1,https://github.com/hughsie/appstream-glib/pull/440,,,True,{}
