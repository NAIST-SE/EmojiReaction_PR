flashrom/flashrom,https://github.com/flashrom/flashrom,12,2016-01-21T17:37:03Z,2016-05-08T02:18:50Z,2016-07-10T12:37:06Z,CLOSED,False,357,94,22,https://github.com/urjaman,Serprog things and a JEDEC toggle/data polling offload ability,9,[],https://github.com/flashrom/flashrom/pull/12,https://github.com/urjaman,1,https://github.com/flashrom/flashrom/pull/12,"Do note that it does still have 3 commits before the jedec stuff...
(2 fixes and one SPI speedup.)
I highlighted the jedec thing in the title so maybe people not interested of serprog would look at it, too...","Do note that it does still have 3 commits before the jedec stuff...
(2 fixes and one SPI speedup.)
I highlighted the jedec thing in the title so maybe people not interested of serprog would look at it, too...",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,13,2016-12-06T16:28:34Z,2017-09-07T07:00:13Z,2017-09-07T07:00:13Z,CLOSED,False,477,123,16,https://github.com/ribalda,Add support for SST26VF064B,2,[],https://github.com/flashrom/flashrom/pull/13,https://github.com/ribalda,1,https://github.com/flashrom/flashrom/pull/13,"Datasheet available at
http://ww1.microchip.com/downloads/en/DeviceDoc/20005119D.pdf
Add support for SST26VF064B.
Differences between SST26 and SST25:

The WREN instruction must be executed prior to WRSR [Section 5.31].
There is no EWSR.
Block protection bits are no longer in the status register. There
is a dedicated 144-bit register [Table 5-6].  The device is
write-protected by default. A Global Block-Protection Unlock
command unlocks the entire memory [Section 4.1].

This patch was obtained from:
https://patchwork.coreboot.org/patch/4126/
And lost in the wire since 2014
Signed-off-by: Wei Hu wei@aristanetworks.com
Signed-off-by: Stefan Tauner stefan.tauner@alumni.tuwien.ac.at","Datasheet available at
http://ww1.microchip.com/downloads/en/DeviceDoc/20005119D.pdf
Add support for SST26VF064B.
Differences between SST26 and SST25:

The WREN instruction must be executed prior to WRSR [Section 5.31].
There is no EWSR.
Block protection bits are no longer in the status register. There
is a dedicated 144-bit register [Table 5-6].  The device is
write-protected by default. A Global Block-Protection Unlock
command unlocks the entire memory [Section 4.1].

This patch was obtained from:
https://patchwork.coreboot.org/patch/4126/
And lost in the wire since 2014
Signed-off-by: Wei Hu wei@aristanetworks.com
Signed-off-by: Stefan Tauner stefan.tauner@alumni.tuwien.ac.at",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,14,2017-03-22T13:16:30Z,2017-09-07T06:56:58Z,2017-09-07T18:08:29Z,CLOSED,False,24,5,2,https://github.com/ribalda,sb600spi: Add support for Merlin Falcon Chipset,1,[],https://github.com/flashrom/flashrom/pull/14,https://github.com/ribalda,1,https://github.com/flashrom/flashrom/pull/14,"This patch has been tested on a board similar to AMD Bettong.
00:14.0 SMBus [0c05]: Advanced Micro Devices, Inc. [AMD] FCH SMBus
Controller [1022:790b] (rev 4a)
00:14.3 ISA bridge [0601]: Advanced Micro Devices, Inc. [AMD] FCH LPC
Bridge [1022:790e] (rev 11)
root@qt5022-fglrx:~# ./flashrom -p internal -w kk.rom
flashrom v0.9.9-unknown on Linux 4.10.0-qtec-standard (x86_64)
flashrom is free software, get the source code at
https://flashrom.org
Calibrating delay loop... OK.
coreboot table found at 0x9ffd6000.
Found chipset ""AMD FP4"".
Enabling flash write... OK.
Found Micron/Numonyx/ST flash chip ""N25Q128..1E"" (16384 kB, SPI)
mapped at physical address 0x00000000ff000000.
Reading old flash chip contents... done.
Erasing and writing flash chip... Erase/write done.
Verifying flash... VERIFIED.
Signed-off-by: Ricardo Ribalda Delgado ricardo.ribalda@gmail.com","This patch has been tested on a board similar to AMD Bettong.
00:14.0 SMBus [0c05]: Advanced Micro Devices, Inc. [AMD] FCH SMBus
Controller [1022:790b] (rev 4a)
00:14.3 ISA bridge [0601]: Advanced Micro Devices, Inc. [AMD] FCH LPC
Bridge [1022:790e] (rev 11)
root@qt5022-fglrx:~# ./flashrom -p internal -w kk.rom
flashrom v0.9.9-unknown on Linux 4.10.0-qtec-standard (x86_64)
flashrom is free software, get the source code at
https://flashrom.org
Calibrating delay loop... OK.
coreboot table found at 0x9ffd6000.
Found chipset ""AMD FP4"".
Enabling flash write... OK.
Found Micron/Numonyx/ST flash chip ""N25Q128..1E"" (16384 kB, SPI)
mapped at physical address 0x00000000ff000000.
Reading old flash chip contents... done.
Erasing and writing flash chip... Erase/write done.
Verifying flash... VERIFIED.
Signed-off-by: Ricardo Ribalda Delgado ricardo.ribalda@gmail.com",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,14,2017-03-22T13:16:30Z,2017-09-07T06:56:58Z,2017-09-07T18:08:29Z,CLOSED,False,24,5,2,https://github.com/ribalda,sb600spi: Add support for Merlin Falcon Chipset,1,[],https://github.com/flashrom/flashrom/pull/14,https://github.com/ribalda,2,https://github.com/flashrom/flashrom/pull/14#issuecomment-327185877,"This patch has been tested on a board similar to AMD Bettong.
00:14.0 SMBus [0c05]: Advanced Micro Devices, Inc. [AMD] FCH SMBus
Controller [1022:790b] (rev 4a)
00:14.3 ISA bridge [0601]: Advanced Micro Devices, Inc. [AMD] FCH LPC
Bridge [1022:790e] (rev 11)
root@qt5022-fglrx:~# ./flashrom -p internal -w kk.rom
flashrom v0.9.9-unknown on Linux 4.10.0-qtec-standard (x86_64)
flashrom is free software, get the source code at
https://flashrom.org
Calibrating delay loop... OK.
coreboot table found at 0x9ffd6000.
Found chipset ""AMD FP4"".
Enabling flash write... OK.
Found Micron/Numonyx/ST flash chip ""N25Q128..1E"" (16384 kB, SPI)
mapped at physical address 0x00000000ff000000.
Reading old flash chip contents... done.
Erasing and writing flash chip... Erase/write done.
Verifying flash... VERIFIED.
Signed-off-by: Ricardo Ribalda Delgado ricardo.ribalda@gmail.com",ping?,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,14,2017-03-22T13:16:30Z,2017-09-07T06:56:58Z,2017-09-07T18:08:29Z,CLOSED,False,24,5,2,https://github.com/ribalda,sb600spi: Add support for Merlin Falcon Chipset,1,[],https://github.com/flashrom/flashrom/pull/14,https://github.com/dhendrix,3,https://github.com/flashrom/flashrom/pull/14#issuecomment-327637009,"This patch has been tested on a board similar to AMD Bettong.
00:14.0 SMBus [0c05]: Advanced Micro Devices, Inc. [AMD] FCH SMBus
Controller [1022:790b] (rev 4a)
00:14.3 ISA bridge [0601]: Advanced Micro Devices, Inc. [AMD] FCH LPC
Bridge [1022:790e] (rev 11)
root@qt5022-fglrx:~# ./flashrom -p internal -w kk.rom
flashrom v0.9.9-unknown on Linux 4.10.0-qtec-standard (x86_64)
flashrom is free software, get the source code at
https://flashrom.org
Calibrating delay loop... OK.
coreboot table found at 0x9ffd6000.
Found chipset ""AMD FP4"".
Enabling flash write... OK.
Found Micron/Numonyx/ST flash chip ""N25Q128..1E"" (16384 kB, SPI)
mapped at physical address 0x00000000ff000000.
Reading old flash chip contents... done.
Erasing and writing flash chip... Erase/write done.
Verifying flash... VERIFIED.
Signed-off-by: Ricardo Ribalda Delgado ricardo.ribalda@gmail.com","This one looks good to me. I cherry-picked and pushed it to review.coreboot.org so that it goes thru our CI system (Jenkins): https://review.coreboot.org/#/c/21429/
Once it goes in there, the change will show up on github as well.
(thanks for the friendly ping, btw)",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,14,2017-03-22T13:16:30Z,2017-09-07T06:56:58Z,2017-09-07T18:08:29Z,CLOSED,False,24,5,2,https://github.com/ribalda,sb600spi: Add support for Merlin Falcon Chipset,1,[],https://github.com/flashrom/flashrom/pull/14,https://github.com/ribalda,4,https://github.com/flashrom/flashrom/pull/14#issuecomment-327705465,"This patch has been tested on a board similar to AMD Bettong.
00:14.0 SMBus [0c05]: Advanced Micro Devices, Inc. [AMD] FCH SMBus
Controller [1022:790b] (rev 4a)
00:14.3 ISA bridge [0601]: Advanced Micro Devices, Inc. [AMD] FCH LPC
Bridge [1022:790e] (rev 11)
root@qt5022-fglrx:~# ./flashrom -p internal -w kk.rom
flashrom v0.9.9-unknown on Linux 4.10.0-qtec-standard (x86_64)
flashrom is free software, get the source code at
https://flashrom.org
Calibrating delay loop... OK.
coreboot table found at 0x9ffd6000.
Found chipset ""AMD FP4"".
Enabling flash write... OK.
Found Micron/Numonyx/ST flash chip ""N25Q128..1E"" (16384 kB, SPI)
mapped at physical address 0x00000000ff000000.
Reading old flash chip contents... done.
Erasing and writing flash chip... Erase/write done.
Verifying flash... VERIFIED.
Signed-off-by: Ricardo Ribalda Delgado ricardo.ribalda@gmail.com","thanks!
I did not know that patches should go through coreboot gerrit.
Regards!",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,14,2017-03-22T13:16:30Z,2017-09-07T06:56:58Z,2017-09-07T18:08:29Z,CLOSED,False,24,5,2,https://github.com/ribalda,sb600spi: Add support for Merlin Falcon Chipset,1,[],https://github.com/flashrom/flashrom/pull/14,https://github.com/dhendrix,5,https://github.com/flashrom/flashrom/pull/14#issuecomment-327879337,"This patch has been tested on a board similar to AMD Bettong.
00:14.0 SMBus [0c05]: Advanced Micro Devices, Inc. [AMD] FCH SMBus
Controller [1022:790b] (rev 4a)
00:14.3 ISA bridge [0601]: Advanced Micro Devices, Inc. [AMD] FCH LPC
Bridge [1022:790e] (rev 11)
root@qt5022-fglrx:~# ./flashrom -p internal -w kk.rom
flashrom v0.9.9-unknown on Linux 4.10.0-qtec-standard (x86_64)
flashrom is free software, get the source code at
https://flashrom.org
Calibrating delay loop... OK.
coreboot table found at 0x9ffd6000.
Found chipset ""AMD FP4"".
Enabling flash write... OK.
Found Micron/Numonyx/ST flash chip ""N25Q128..1E"" (16384 kB, SPI)
mapped at physical address 0x00000000ff000000.
Reading old flash chip contents... done.
Erasing and writing flash chip... Erase/write done.
Verifying flash... VERIFIED.
Signed-off-by: Ricardo Ribalda Delgado ricardo.ribalda@gmail.com","Sure thing. It's not strictly required to go thru coreboot.org - A lot of people use github and some even send patches via the mailing list, which is totally fine. For merging we can even bypass gerrit entirely, but Jenkins is nice and stefanct has some cross-arch/cross-OS build testing planned as well.
Anyway, thanks for the patches!",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,15,2017-03-22T13:34:53Z,2017-09-07T06:59:05Z,2017-09-07T06:59:05Z,CLOSED,False,79,29,1,https://github.com/ribalda,nicintel_spi: Support for I210/I211 cards,2,[],https://github.com/flashrom/flashrom/pull/15,https://github.com/ribalda,1,https://github.com/flashrom/flashrom/pull/15,"Implements I210 ""raw"" flash access as detailed in:
http://www.intel.com/content/www/us/en/embedded/products/networking/i210-ethernet-controller-datasheet.html
Unfortunately, most of the time the card is in Secure Mode, which means
that the raw access is not available. But his should be pretty useful
for bringing up boards.
Signed-off-by: Ricardo Ribalda Delgado ricardo.ribalda@gmail.com","Implements I210 ""raw"" flash access as detailed in:
http://www.intel.com/content/www/us/en/embedded/products/networking/i210-ethernet-controller-datasheet.html
Unfortunately, most of the time the card is in Secure Mode, which means
that the raw access is not available. But his should be pretty useful
for bringing up boards.
Signed-off-by: Ricardo Ribalda Delgado ricardo.ribalda@gmail.com",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,15,2017-03-22T13:34:53Z,2017-09-07T06:59:05Z,2017-09-07T06:59:05Z,CLOSED,False,79,29,1,https://github.com/ribalda,nicintel_spi: Support for I210/I211 cards,2,[],https://github.com/flashrom/flashrom/pull/15,https://github.com/ribalda,2,https://github.com/flashrom/flashrom/pull/15#issuecomment-327185590,"Implements I210 ""raw"" flash access as detailed in:
http://www.intel.com/content/www/us/en/embedded/products/networking/i210-ethernet-controller-datasheet.html
Unfortunately, most of the time the card is in Secure Mode, which means
that the raw access is not available. But his should be pretty useful
for bringing up boards.
Signed-off-by: Ricardo Ribalda Delgado ricardo.ribalda@gmail.com",ping?,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,15,2017-03-22T13:34:53Z,2017-09-07T06:59:05Z,2017-09-07T06:59:05Z,CLOSED,False,79,29,1,https://github.com/ribalda,nicintel_spi: Support for I210/I211 cards,2,[],https://github.com/flashrom/flashrom/pull/15,https://github.com/dhendrix,3,https://github.com/flashrom/flashrom/pull/15#issuecomment-327647385,"Implements I210 ""raw"" flash access as detailed in:
http://www.intel.com/content/www/us/en/embedded/products/networking/i210-ethernet-controller-datasheet.html
Unfortunately, most of the time the card is in Secure Mode, which means
that the raw access is not available. But his should be pretty useful
for bringing up boards.
Signed-off-by: Ricardo Ribalda Delgado ricardo.ribalda@gmail.com","I went ahead and uploaded this patch to review.coreboot.org: https://review.coreboot.org/#/c/21430/
There was a build warning that looks like a legit bug, but is fixed by the follow-up patch that introduces the BIT() macro.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,15,2017-03-22T13:34:53Z,2017-09-07T06:59:05Z,2017-09-07T06:59:05Z,CLOSED,False,79,29,1,https://github.com/ribalda,nicintel_spi: Support for I210/I211 cards,2,[],https://github.com/flashrom/flashrom/pull/15,https://github.com/ribalda,4,https://github.com/flashrom/flashrom/pull/15#issuecomment-327705949,"Implements I210 ""raw"" flash access as detailed in:
http://www.intel.com/content/www/us/en/embedded/products/networking/i210-ethernet-controller-datasheet.html
Unfortunately, most of the time the card is in Secure Mode, which means
that the raw access is not available. But his should be pretty useful
for bringing up boards.
Signed-off-by: Ricardo Ribalda Delgado ricardo.ribalda@gmail.com",thanks!,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,16,2017-03-23T14:25:17Z,2017-03-23T15:00:09Z,2017-03-23T15:00:16Z,CLOSED,False,166,6,1,https://github.com/ribalda,nicintel_eeprom: Support for I210 emulated EEprom,1,[],https://github.com/flashrom/flashrom/pull/16,https://github.com/ribalda,1,https://github.com/flashrom/flashrom/pull/16,"On the I210 family there is no MAC EEprom, instead there is a big flash
(typically around 16Mb) with contents of the old MAC plus other stuff.
There is an interface to program the whole flash, but once it is
programmed it enters a ""Secure Mode"" that disables the interface.
Luckily, the section with the MAC can still be updated via the EEprom
interface. This patch adds support for this interface.
root@qt5022-fglrx:~# ./flashrom -p nicintel_eeprom:pci=01:0.0 -w kk.raw -V
flashrom v0.9.9-unknown on Linux 4.10.0-qtec-standard (x86_64)
flashrom is free software, get the source code at https://flashrom.org
flashrom was built with libpci 3.4.1, GCC 5.3.0, little endian
Command line (5 args): ./flashrom -p nicintel_eeprom:pci=01:0.0 -w kk.raw -V
Calibrating delay loop... OS timer resolution is 1 usecs, 1856M loops per second, 10 myus = 10 us,
100 myus = 102 us, 1000 myus = 1017 us, 10000 myus = 10044 us, 4 myus = 4 us, OK.
Initializing nicintel_eeprom programmer
Found ""Intel I210 Gigabit Network Connection"" (8086:1533, BDF 01:00.0).
Requested BAR is of type MEM, 32bit, not prefetchable
Requested BAR is of type MEM, 32bit, not prefetchable
The following protocols are supported: Programmer-specific.
Probing for Programmer Opaque flash chip, 0 kB: Found Programmer flash chip ""Opaque flash chip""
(4 kB, Programmer-specific) on nicintel_eeprom.
Found Programmer flash chip ""Opaque flash chip"" (4 kB, Programmer-specific).
Reading old flash chip contents... done.
Erasing and writing flash chip... Trying erase function 0... 0x000000-0x000fff:W
Erase/write done.
Verifying flash... VERIFIED.
Signed-off-by: Ricardo Ribalda Delgado ricardo.ribalda@gmail.com","On the I210 family there is no MAC EEprom, instead there is a big flash
(typically around 16Mb) with contents of the old MAC plus other stuff.
There is an interface to program the whole flash, but once it is
programmed it enters a ""Secure Mode"" that disables the interface.
Luckily, the section with the MAC can still be updated via the EEprom
interface. This patch adds support for this interface.
root@qt5022-fglrx:~# ./flashrom -p nicintel_eeprom:pci=01:0.0 -w kk.raw -V
flashrom v0.9.9-unknown on Linux 4.10.0-qtec-standard (x86_64)
flashrom is free software, get the source code at https://flashrom.org
flashrom was built with libpci 3.4.1, GCC 5.3.0, little endian
Command line (5 args): ./flashrom -p nicintel_eeprom:pci=01:0.0 -w kk.raw -V
Calibrating delay loop... OS timer resolution is 1 usecs, 1856M loops per second, 10 myus = 10 us,
100 myus = 102 us, 1000 myus = 1017 us, 10000 myus = 10044 us, 4 myus = 4 us, OK.
Initializing nicintel_eeprom programmer
Found ""Intel I210 Gigabit Network Connection"" (8086:1533, BDF 01:00.0).
Requested BAR is of type MEM, 32bit, not prefetchable
Requested BAR is of type MEM, 32bit, not prefetchable
The following protocols are supported: Programmer-specific.
Probing for Programmer Opaque flash chip, 0 kB: Found Programmer flash chip ""Opaque flash chip""
(4 kB, Programmer-specific) on nicintel_eeprom.
Found Programmer flash chip ""Opaque flash chip"" (4 kB, Programmer-specific).
Reading old flash chip contents... done.
Erasing and writing flash chip... Trying erase function 0... 0x000000-0x000fff:W
Erase/write done.
Verifying flash... VERIFIED.
Signed-off-by: Ricardo Ribalda Delgado ricardo.ribalda@gmail.com",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,16,2017-03-23T14:25:17Z,2017-03-23T15:00:09Z,2017-03-23T15:00:16Z,CLOSED,False,166,6,1,https://github.com/ribalda,nicintel_eeprom: Support for I210 emulated EEprom,1,[],https://github.com/flashrom/flashrom/pull/16,https://github.com/ribalda,2,https://github.com/flashrom/flashrom/pull/16#issuecomment-288746797,"On the I210 family there is no MAC EEprom, instead there is a big flash
(typically around 16Mb) with contents of the old MAC plus other stuff.
There is an interface to program the whole flash, but once it is
programmed it enters a ""Secure Mode"" that disables the interface.
Luckily, the section with the MAC can still be updated via the EEprom
interface. This patch adds support for this interface.
root@qt5022-fglrx:~# ./flashrom -p nicintel_eeprom:pci=01:0.0 -w kk.raw -V
flashrom v0.9.9-unknown on Linux 4.10.0-qtec-standard (x86_64)
flashrom is free software, get the source code at https://flashrom.org
flashrom was built with libpci 3.4.1, GCC 5.3.0, little endian
Command line (5 args): ./flashrom -p nicintel_eeprom:pci=01:0.0 -w kk.raw -V
Calibrating delay loop... OS timer resolution is 1 usecs, 1856M loops per second, 10 myus = 10 us,
100 myus = 102 us, 1000 myus = 1017 us, 10000 myus = 10044 us, 4 myus = 4 us, OK.
Initializing nicintel_eeprom programmer
Found ""Intel I210 Gigabit Network Connection"" (8086:1533, BDF 01:00.0).
Requested BAR is of type MEM, 32bit, not prefetchable
Requested BAR is of type MEM, 32bit, not prefetchable
The following protocols are supported: Programmer-specific.
Probing for Programmer Opaque flash chip, 0 kB: Found Programmer flash chip ""Opaque flash chip""
(4 kB, Programmer-specific) on nicintel_eeprom.
Found Programmer flash chip ""Opaque flash chip"" (4 kB, Programmer-specific).
Reading old flash chip contents... done.
Erasing and writing flash chip... Trying erase function 0... 0x000000-0x000fff:W
Erase/write done.
Verifying flash... VERIFIED.
Signed-off-by: Ricardo Ribalda Delgado ricardo.ribalda@gmail.com","Please ignore this patch, wrong version. Sorry",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,17,2017-03-23T15:53:53Z,2017-09-07T06:57:19Z,2017-09-07T06:57:19Z,CLOSED,False,168,6,1,https://github.com/ribalda,nicintel_eeprom: Support for I210 emulated EEprom,1,[],https://github.com/flashrom/flashrom/pull/17,https://github.com/ribalda,1,https://github.com/flashrom/flashrom/pull/17,"On the I210 family there is no MAC EEprom, instead there is a big flash
(typically around 16Mb) with contents of the old MAC plus other stuff.
There is an interface to program the whole flash, but once it is
programmed it enters a ""Secure Mode"" that disables the interface.
Luckily, the section with the MAC can still be updated via the EEprom
interface. This patch adds support for this interface.
root@qt5022-fglrx:~# ./flashrom -p nicintel_eeprom:pci=01:0.0 -w kk.raw -V
flashrom v0.9.9-unknown on Linux 4.10.0-qtec-standard (x86_64)
flashrom is free software, get the source code at https://flashrom.org
flashrom was built with libpci 3.4.1, GCC 5.3.0, little endian
Command line (5 args): ./flashrom -p nicintel_eeprom:pci=01:0.0 -w kk.raw -V
Calibrating delay loop... OS timer resolution is 1 usecs, 1856M loops per second, 10 myus = 10 us,
100 myus = 102 us, 1000 myus = 1017 us, 10000 myus = 10044 us, 4 myus = 4 us, OK.
Initializing nicintel_eeprom programmer
Found ""Intel I210 Gigabit Network Connection"" (8086:1533, BDF 01:00.0).
Requested BAR is of type MEM, 32bit, not prefetchable
Requested BAR is of type MEM, 32bit, not prefetchable
The following protocols are supported: Programmer-specific.
Probing for Programmer Opaque flash chip, 0 kB: Found Programmer flash chip ""Opaque flash chip""
(4 kB, Programmer-specific) on nicintel_eeprom.
Found Programmer flash chip ""Opaque flash chip"" (4 kB, Programmer-specific).
Reading old flash chip contents... done.
Erasing and writing flash chip... Trying erase function 0... 0x000000-0x000fff:W
Erase/write done.
Verifying flash... VERIFIED.
Signed-off-by: Ricardo Ribalda Delgado ricardo.ribalda@gmail.com","On the I210 family there is no MAC EEprom, instead there is a big flash
(typically around 16Mb) with contents of the old MAC plus other stuff.
There is an interface to program the whole flash, but once it is
programmed it enters a ""Secure Mode"" that disables the interface.
Luckily, the section with the MAC can still be updated via the EEprom
interface. This patch adds support for this interface.
root@qt5022-fglrx:~# ./flashrom -p nicintel_eeprom:pci=01:0.0 -w kk.raw -V
flashrom v0.9.9-unknown on Linux 4.10.0-qtec-standard (x86_64)
flashrom is free software, get the source code at https://flashrom.org
flashrom was built with libpci 3.4.1, GCC 5.3.0, little endian
Command line (5 args): ./flashrom -p nicintel_eeprom:pci=01:0.0 -w kk.raw -V
Calibrating delay loop... OS timer resolution is 1 usecs, 1856M loops per second, 10 myus = 10 us,
100 myus = 102 us, 1000 myus = 1017 us, 10000 myus = 10044 us, 4 myus = 4 us, OK.
Initializing nicintel_eeprom programmer
Found ""Intel I210 Gigabit Network Connection"" (8086:1533, BDF 01:00.0).
Requested BAR is of type MEM, 32bit, not prefetchable
Requested BAR is of type MEM, 32bit, not prefetchable
The following protocols are supported: Programmer-specific.
Probing for Programmer Opaque flash chip, 0 kB: Found Programmer flash chip ""Opaque flash chip""
(4 kB, Programmer-specific) on nicintel_eeprom.
Found Programmer flash chip ""Opaque flash chip"" (4 kB, Programmer-specific).
Reading old flash chip contents... done.
Erasing and writing flash chip... Trying erase function 0... 0x000000-0x000fff:W
Erase/write done.
Verifying flash... VERIFIED.
Signed-off-by: Ricardo Ribalda Delgado ricardo.ribalda@gmail.com",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,17,2017-03-23T15:53:53Z,2017-09-07T06:57:19Z,2017-09-07T06:57:19Z,CLOSED,False,168,6,1,https://github.com/ribalda,nicintel_eeprom: Support for I210 emulated EEprom,1,[],https://github.com/flashrom/flashrom/pull/17,https://github.com/ribalda,2,https://github.com/flashrom/flashrom/pull/17#issuecomment-327185627,"On the I210 family there is no MAC EEprom, instead there is a big flash
(typically around 16Mb) with contents of the old MAC plus other stuff.
There is an interface to program the whole flash, but once it is
programmed it enters a ""Secure Mode"" that disables the interface.
Luckily, the section with the MAC can still be updated via the EEprom
interface. This patch adds support for this interface.
root@qt5022-fglrx:~# ./flashrom -p nicintel_eeprom:pci=01:0.0 -w kk.raw -V
flashrom v0.9.9-unknown on Linux 4.10.0-qtec-standard (x86_64)
flashrom is free software, get the source code at https://flashrom.org
flashrom was built with libpci 3.4.1, GCC 5.3.0, little endian
Command line (5 args): ./flashrom -p nicintel_eeprom:pci=01:0.0 -w kk.raw -V
Calibrating delay loop... OS timer resolution is 1 usecs, 1856M loops per second, 10 myus = 10 us,
100 myus = 102 us, 1000 myus = 1017 us, 10000 myus = 10044 us, 4 myus = 4 us, OK.
Initializing nicintel_eeprom programmer
Found ""Intel I210 Gigabit Network Connection"" (8086:1533, BDF 01:00.0).
Requested BAR is of type MEM, 32bit, not prefetchable
Requested BAR is of type MEM, 32bit, not prefetchable
The following protocols are supported: Programmer-specific.
Probing for Programmer Opaque flash chip, 0 kB: Found Programmer flash chip ""Opaque flash chip""
(4 kB, Programmer-specific) on nicintel_eeprom.
Found Programmer flash chip ""Opaque flash chip"" (4 kB, Programmer-specific).
Reading old flash chip contents... done.
Erasing and writing flash chip... Trying erase function 0... 0x000000-0x000fff:W
Erase/write done.
Verifying flash... VERIFIED.
Signed-off-by: Ricardo Ribalda Delgado ricardo.ribalda@gmail.com",ping?,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,17,2017-03-23T15:53:53Z,2017-09-07T06:57:19Z,2017-09-07T06:57:19Z,CLOSED,False,168,6,1,https://github.com/ribalda,nicintel_eeprom: Support for I210 emulated EEprom,1,[],https://github.com/flashrom/flashrom/pull/17,https://github.com/dhendrix,3,https://github.com/flashrom/flashrom/pull/17#issuecomment-327647568,"On the I210 family there is no MAC EEprom, instead there is a big flash
(typically around 16Mb) with contents of the old MAC plus other stuff.
There is an interface to program the whole flash, but once it is
programmed it enters a ""Secure Mode"" that disables the interface.
Luckily, the section with the MAC can still be updated via the EEprom
interface. This patch adds support for this interface.
root@qt5022-fglrx:~# ./flashrom -p nicintel_eeprom:pci=01:0.0 -w kk.raw -V
flashrom v0.9.9-unknown on Linux 4.10.0-qtec-standard (x86_64)
flashrom is free software, get the source code at https://flashrom.org
flashrom was built with libpci 3.4.1, GCC 5.3.0, little endian
Command line (5 args): ./flashrom -p nicintel_eeprom:pci=01:0.0 -w kk.raw -V
Calibrating delay loop... OS timer resolution is 1 usecs, 1856M loops per second, 10 myus = 10 us,
100 myus = 102 us, 1000 myus = 1017 us, 10000 myus = 10044 us, 4 myus = 4 us, OK.
Initializing nicintel_eeprom programmer
Found ""Intel I210 Gigabit Network Connection"" (8086:1533, BDF 01:00.0).
Requested BAR is of type MEM, 32bit, not prefetchable
Requested BAR is of type MEM, 32bit, not prefetchable
The following protocols are supported: Programmer-specific.
Probing for Programmer Opaque flash chip, 0 kB: Found Programmer flash chip ""Opaque flash chip""
(4 kB, Programmer-specific) on nicintel_eeprom.
Found Programmer flash chip ""Opaque flash chip"" (4 kB, Programmer-specific).
Reading old flash chip contents... done.
Erasing and writing flash chip... Trying erase function 0... 0x000000-0x000fff:W
Erase/write done.
Verifying flash... VERIFIED.
Signed-off-by: Ricardo Ribalda Delgado ricardo.ribalda@gmail.com","I also uploaded this one to review.coreboot.org: https://review.coreboot.org/#/c/21431/
Jenkins seems happy, and the code looks good IMO. I don't have experience with this hardware though so I'll leave the code review up for a couple more days before merging.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,17,2017-03-23T15:53:53Z,2017-09-07T06:57:19Z,2017-09-07T06:57:19Z,CLOSED,False,168,6,1,https://github.com/ribalda,nicintel_eeprom: Support for I210 emulated EEprom,1,[],https://github.com/flashrom/flashrom/pull/17,https://github.com/ribalda,4,https://github.com/flashrom/flashrom/pull/17#issuecomment-327705539,"On the I210 family there is no MAC EEprom, instead there is a big flash
(typically around 16Mb) with contents of the old MAC plus other stuff.
There is an interface to program the whole flash, but once it is
programmed it enters a ""Secure Mode"" that disables the interface.
Luckily, the section with the MAC can still be updated via the EEprom
interface. This patch adds support for this interface.
root@qt5022-fglrx:~# ./flashrom -p nicintel_eeprom:pci=01:0.0 -w kk.raw -V
flashrom v0.9.9-unknown on Linux 4.10.0-qtec-standard (x86_64)
flashrom is free software, get the source code at https://flashrom.org
flashrom was built with libpci 3.4.1, GCC 5.3.0, little endian
Command line (5 args): ./flashrom -p nicintel_eeprom:pci=01:0.0 -w kk.raw -V
Calibrating delay loop... OS timer resolution is 1 usecs, 1856M loops per second, 10 myus = 10 us,
100 myus = 102 us, 1000 myus = 1017 us, 10000 myus = 10044 us, 4 myus = 4 us, OK.
Initializing nicintel_eeprom programmer
Found ""Intel I210 Gigabit Network Connection"" (8086:1533, BDF 01:00.0).
Requested BAR is of type MEM, 32bit, not prefetchable
Requested BAR is of type MEM, 32bit, not prefetchable
The following protocols are supported: Programmer-specific.
Probing for Programmer Opaque flash chip, 0 kB: Found Programmer flash chip ""Opaque flash chip""
(4 kB, Programmer-specific) on nicintel_eeprom.
Found Programmer flash chip ""Opaque flash chip"" (4 kB, Programmer-specific).
Reading old flash chip contents... done.
Erasing and writing flash chip... Trying erase function 0... 0x000000-0x000fff:W
Erase/write done.
Verifying flash... VERIFIED.
Signed-off-by: Ricardo Ribalda Delgado ricardo.ribalda@gmail.com","thanks!
I did not know that patches should go through coreboot gerrit.
Regards!",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,18,2017-03-31T19:28:24Z,2020-07-28T19:46:41Z,2020-07-28T19:46:41Z,CLOSED,False,42,0,2,https://github.com/arbu,Add support for BG25Q40,1,[],https://github.com/flashrom/flashrom/pull/18,https://github.com/arbu,1,https://github.com/flashrom/flashrom/pull/18,,,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,18,2017-03-31T19:28:24Z,2020-07-28T19:46:41Z,2020-07-28T19:46:41Z,CLOSED,False,42,0,2,https://github.com/arbu,Add support for BG25Q40,1,[],https://github.com/flashrom/flashrom/pull/18,https://github.com/stefanct,2,https://github.com/flashrom/flashrom/pull/18#issuecomment-334982260,,"Hi Aaron,
thanks for the patch! You don't happen to have the respective datasheet, do you? Did you test all the erase opcodes or just the smallest one (that flashrom uses by default)? What about the other features that are referred to in your patch (that are probably only due to c&p-ing another chip definition).
Also, your patch is missing a signed-off-by line...",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,19,2017-07-05T20:34:27Z,2018-02-22T01:40:40Z,2018-02-22T01:40:40Z,CLOSED,False,4,0,1,https://github.com/nickbash11,Update flashchips.h,1,[],https://github.com/flashrom/flashrom/pull/19,https://github.com/nickbash11,1,https://github.com/flashrom/flashrom/pull/19,Added W25P16 (tested) and ZD25D40 (untested),Added W25P16 (tested) and ZD25D40 (untested),True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,19,2017-07-05T20:34:27Z,2018-02-22T01:40:40Z,2018-02-22T01:40:40Z,CLOSED,False,4,0,1,https://github.com/nickbash11,Update flashchips.h,1,[],https://github.com/flashrom/flashrom/pull/19,https://github.com/dhendrix,2,https://github.com/flashrom/flashrom/pull/19#issuecomment-341943662,Added W25P16 (tested) and ZD25D40 (untested),"Thanks for the PR, and apologies for the long delay in getting back to you on this.
Did you intend to also change flashchips.c, particularly for the W25P16 which you tested?",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,19,2017-07-05T20:34:27Z,2018-02-22T01:40:40Z,2018-02-22T01:40:40Z,CLOSED,False,4,0,1,https://github.com/nickbash11,Update flashchips.h,1,[],https://github.com/flashrom/flashrom/pull/19,https://github.com/dhendrix,3,https://github.com/flashrom/flashrom/pull/19#issuecomment-341943722,Added W25P16 (tested) and ZD25D40 (untested),"Oh, I see that flashchips.c is in another PR. Please squash this patch into the other so the changes to the .c and .h files are together.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,19,2017-07-05T20:34:27Z,2018-02-22T01:40:40Z,2018-02-22T01:40:40Z,CLOSED,False,4,0,1,https://github.com/nickbash11,Update flashchips.h,1,[],https://github.com/flashrom/flashrom/pull/19,https://github.com/dhendrix,4,https://github.com/flashrom/flashrom/pull/19#issuecomment-367538776,Added W25P16 (tested) and ZD25D40 (untested),"Merged into master:
a72d5a9 flashchips: Add ZD25D20
cbb46e2 flashchips: Add Zettadevice ZD25D40
c9ee0ed flashchips: Add Winbond W25P80/16/32 support",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,20,2017-07-05T20:36:01Z,2018-02-22T01:40:21Z,2018-02-22T01:40:22Z,CLOSED,False,78,0,1,https://github.com/nickbash11,Added W25P16 (tested) and ZD25D40 (untested),1,[],https://github.com/flashrom/flashrom/pull/20,https://github.com/nickbash11,1,https://github.com/flashrom/flashrom/pull/20,,,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,20,2017-07-05T20:36:01Z,2018-02-22T01:40:21Z,2018-02-22T01:40:22Z,CLOSED,False,78,0,1,https://github.com/nickbash11,Added W25P16 (tested) and ZD25D40 (untested),1,[],https://github.com/flashrom/flashrom/pull/20,https://github.com/dhendrix,2,https://github.com/flashrom/flashrom/pull/20#issuecomment-341944865,,"This patch adds W25Q40 support, but not W25P16. The ZD25D40 portion looks good though.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,20,2017-07-05T20:36:01Z,2018-02-22T01:40:21Z,2018-02-22T01:40:22Z,CLOSED,False,78,0,1,https://github.com/nickbash11,Added W25P16 (tested) and ZD25D40 (untested),1,[],https://github.com/flashrom/flashrom/pull/20,https://github.com/nickbash11,3,https://github.com/flashrom/flashrom/pull/20#issuecomment-342893689,,"So, I am sorry. I have confused something then with W25Q40. In my download directory contains only M25P16.pdf. But ZD25D40 I made from this datasheet: http://www.zettadevice.com/upload/file/20150821/DS_Zetta_25D40_20_RevA.pdf",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,20,2017-07-05T20:36:01Z,2018-02-22T01:40:21Z,2018-02-22T01:40:22Z,CLOSED,False,78,0,1,https://github.com/nickbash11,Added W25P16 (tested) and ZD25D40 (untested),1,[],https://github.com/flashrom/flashrom/pull/20,https://github.com/dhendrix,4,https://github.com/flashrom/flashrom/pull/20#issuecomment-343061828,,No worries - Overall things look good. I'll take another look this weekend and try to get support the chips merged. Thanks for the patches!,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,20,2017-07-05T20:36:01Z,2018-02-22T01:40:21Z,2018-02-22T01:40:22Z,CLOSED,False,78,0,1,https://github.com/nickbash11,Added W25P16 (tested) and ZD25D40 (untested),1,[],https://github.com/flashrom/flashrom/pull/20,https://github.com/dhendrix,5,https://github.com/flashrom/flashrom/pull/20#issuecomment-367538734,,"Merged into master:
a72d5a9 flashchips: Add ZD25D20
cbb46e2 flashchips: Add Zettadevice ZD25D40
c9ee0ed flashchips: Add Winbond W25P80/16/32 support",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,21,2017-09-12T09:02:39Z,,2020-08-26T22:40:47Z,OPEN,False,147,104,2,https://github.com/Baldanos,Add support for Hydrabus hardware,5,[],https://github.com/flashrom/flashrom/pull/21,https://github.com/Baldanos,1,https://github.com/flashrom/flashrom/pull/21,"This patch adds support for Hydrabus hardware (http://hydrabus.com/).
As it reuses the same commands as the Bus Pirate, only detection code has been changed.
This patch has been tested on Hydrabus firmware revision 8488be1e5231ca5e55c4ba193aebaf1b29abcfd1 and on Bus Pirate hw rev 3.a / firmware 6.1 and 6.2.","This patch adds support for Hydrabus hardware (http://hydrabus.com/).
As it reuses the same commands as the Bus Pirate, only detection code has been changed.
This patch has been tested on Hydrabus firmware revision 8488be1e5231ca5e55c4ba193aebaf1b29abcfd1 and on Bus Pirate hw rev 3.a / firmware 6.1 and 6.2.",True,{'THUMBS_UP': ['https://github.com/Zoruk']}
flashrom/flashrom,https://github.com/flashrom/flashrom,21,2017-09-12T09:02:39Z,,2020-08-26T22:40:47Z,OPEN,False,147,104,2,https://github.com/Baldanos,Add support for Hydrabus hardware,5,[],https://github.com/flashrom/flashrom/pull/21,https://github.com/urjaman,2,https://github.com/flashrom/flashrom/pull/21#issuecomment-333915417,"This patch adds support for Hydrabus hardware (http://hydrabus.com/).
As it reuses the same commands as the Bus Pirate, only detection code has been changed.
This patch has been tested on Hydrabus firmware revision 8488be1e5231ca5e55c4ba193aebaf1b29abcfd1 and on Bus Pirate hw rev 3.a / firmware 6.1 and 6.2.","I found some issues with this:

it is missing a signoff (this one only you can do)
if you select spispeed=2.6M, it will complain ""Hydrabus does not support lower speeds."" because that speed is supported also by the bus pirate. I suggest splitting the speeds table in two...
the manpage needs updating

N.B. I'm also working on having serprog/libfrser support in hydrafw, but decided to look at this too...",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,21,2017-09-12T09:02:39Z,,2020-08-26T22:40:47Z,OPEN,False,147,104,2,https://github.com/Baldanos,Add support for Hydrabus hardware,5,[],https://github.com/flashrom/flashrom/pull/21,https://github.com/Baldanos,3,https://github.com/flashrom/flashrom/pull/21#issuecomment-411431262,"This patch adds support for Hydrabus hardware (http://hydrabus.com/).
As it reuses the same commands as the Bus Pirate, only detection code has been changed.
This patch has been tested on Hydrabus firmware revision 8488be1e5231ca5e55c4ba193aebaf1b29abcfd1 and on Bus Pirate hw rev 3.a / firmware 6.1 and 6.2.","Hi @urjaman !
We just made some more tests and corrected some bugs on the patch, seems to work well using BP and hydrabus.
How can I help make it into flashrom ?
I made a new branch synced on master (see https://github.com/Baldanos/flashrom), but I don't know how to change this PR to point to the new branch. Let me know if I need to close this one and open a new one.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,21,2017-09-12T09:02:39Z,,2020-08-26T22:40:47Z,OPEN,False,147,104,2,https://github.com/Baldanos,Add support for Hydrabus hardware,5,[],https://github.com/flashrom/flashrom/pull/21,https://github.com/afiskon,4,https://github.com/flashrom/flashrom/pull/21#issuecomment-430620766,"This patch adds support for Hydrabus hardware (http://hydrabus.com/).
As it reuses the same commands as the Bus Pirate, only detection code has been changed.
This patch has been tested on Hydrabus firmware revision 8488be1e5231ca5e55c4ba193aebaf1b29abcfd1 and on Bus Pirate hw rev 3.a / firmware 6.1 and 6.2.","Hello,
I would very much like to see this patch in the upstream. I've tested @Baldanos branch with HydraBus and various chips and just tested once again the latest version with another chip, W25Q128.V. I can confirm that it works just fine.
Please let me know if there is anything I can do to help with this pull request.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,21,2017-09-12T09:02:39Z,,2020-08-26T22:40:47Z,OPEN,False,147,104,2,https://github.com/Baldanos,Add support for Hydrabus hardware,5,[],https://github.com/flashrom/flashrom/pull/21,https://github.com/afiskon,5,https://github.com/flashrom/flashrom/pull/21#issuecomment-430630966,"This patch adds support for Hydrabus hardware (http://hydrabus.com/).
As it reuses the same commands as the Bus Pirate, only detection code has been changed.
This patch has been tested on Hydrabus firmware revision 8488be1e5231ca5e55c4ba193aebaf1b29abcfd1 and on Bus Pirate hw rev 3.a / firmware 6.1 and 6.2.","Just in case I compared two dumps, first made with HydraBus and second made with FT2232 chip. They are identical.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,21,2017-09-12T09:02:39Z,,2020-08-26T22:40:47Z,OPEN,False,147,104,2,https://github.com/Baldanos,Add support for Hydrabus hardware,5,[],https://github.com/flashrom/flashrom/pull/21,https://github.com/bvernoux,6,https://github.com/flashrom/flashrom/pull/21#issuecomment-440798936,"This patch adds support for Hydrabus hardware (http://hydrabus.com/).
As it reuses the same commands as the Bus Pirate, only detection code has been changed.
This patch has been tested on Hydrabus firmware revision 8488be1e5231ca5e55c4ba193aebaf1b29abcfd1 and on Bus Pirate hw rev 3.a / firmware 6.1 and 6.2.",Could you accept this pull request ? It will be very nice to have official support of HydraBus on next version of flashrom,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,21,2017-09-12T09:02:39Z,,2020-08-26T22:40:47Z,OPEN,False,147,104,2,https://github.com/Baldanos,Add support for Hydrabus hardware,5,[],https://github.com/flashrom/flashrom/pull/21,https://github.com/fridtjof,7,https://github.com/flashrom/flashrom/pull/21#issuecomment-481775607,"This patch adds support for Hydrabus hardware (http://hydrabus.com/).
As it reuses the same commands as the Bus Pirate, only detection code has been changed.
This patch has been tested on Hydrabus firmware revision 8488be1e5231ca5e55c4ba193aebaf1b29abcfd1 and on Bus Pirate hw rev 3.a / firmware 6.1 and 6.2.","What's the status on this? I would very much like to use this, too :)",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,21,2017-09-12T09:02:39Z,,2020-08-26T22:40:47Z,OPEN,False,147,104,2,https://github.com/Baldanos,Add support for Hydrabus hardware,5,[],https://github.com/flashrom/flashrom/pull/21,https://github.com/bvernoux,8,https://github.com/flashrom/flashrom/pull/21#issuecomment-679340370,"This patch adds support for Hydrabus hardware (http://hydrabus.com/).
As it reuses the same commands as the Bus Pirate, only detection code has been changed.
This patch has been tested on Hydrabus firmware revision 8488be1e5231ca5e55c4ba193aebaf1b29abcfd1 and on Bus Pirate hw rev 3.a / firmware 6.1 and 6.2.",Could your provide an update on that Pull Request after more than 1 year I confirm it works perfectly,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,21,2017-09-12T09:02:39Z,,2020-08-26T22:40:47Z,OPEN,False,147,104,2,https://github.com/Baldanos,Add support for Hydrabus hardware,5,[],https://github.com/flashrom/flashrom/pull/21,https://github.com/bvernoux,9,https://github.com/flashrom/flashrom/pull/21#issuecomment-681160197,"This patch adds support for Hydrabus hardware (http://hydrabus.com/).
As it reuses the same commands as the Bus Pirate, only detection code has been changed.
This patch has been tested on Hydrabus firmware revision 8488be1e5231ca5e55c4ba193aebaf1b29abcfd1 and on Bus Pirate hw rev 3.a / firmware 6.1 and 6.2.",I have added a How To/Tutorial for that here https://github.com/hydrabus/hydrafw/blob/master/contrib/How%20to%20ReadWrite%20SPIFlash%20with%20FlashROM%20and%20HydraBus.pdf,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,22,2017-09-27T13:54:40Z,,2018-10-04T09:54:58Z,OPEN,False,123,4,7,https://github.com/fid0did0,Add OTP area read function,1,[],https://github.com/flashrom/flashrom/pull/22,https://github.com/fid0did0,1,https://github.com/flashrom/flashrom/pull/22,"The support to read the flash's OTP area has been added.
The implementation is limited to the MX25L6405 device.
Fully tested on that device.
Change-Id: Iad8fa1cace1af8e02824ee1a8a2d1d4425b55378
Signed-off-by: Giuseppe Lippolis giu.lippolis@gmail.com","The support to read the flash's OTP area has been added.
The implementation is limited to the MX25L6405 device.
Fully tested on that device.
Change-Id: Iad8fa1cace1af8e02824ee1a8a2d1d4425b55378
Signed-off-by: Giuseppe Lippolis giu.lippolis@gmail.com",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,22,2017-09-27T13:54:40Z,,2018-10-04T09:54:58Z,OPEN,False,123,4,7,https://github.com/fid0did0,Add OTP area read function,1,[],https://github.com/flashrom/flashrom/pull/22,https://github.com/sch-m,2,https://github.com/flashrom/flashrom/pull/22#issuecomment-346535098,"The support to read the flash's OTP area has been added.
The implementation is limited to the MX25L6405 device.
Fully tested on that device.
Change-Id: Iad8fa1cace1af8e02824ee1a8a2d1d4425b55378
Signed-off-by: Giuseppe Lippolis giu.lippolis@gmail.com","I would prefer to integrate the work of Hatim Kanchwala from here to support read/write access and all OTP registers of the flashchips:
https://mail.coreboot.org/pipermail/flashrom/2016-July/014737.html
I use this with some fixes by my own, because I also need write access to put some information there.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,22,2017-09-27T13:54:40Z,,2018-10-04T09:54:58Z,OPEN,False,123,4,7,https://github.com/fid0did0,Add OTP area read function,1,[],https://github.com/flashrom/flashrom/pull/22,https://github.com/fid0did0,3,https://github.com/flashrom/flashrom/pull/22#issuecomment-346937086,"The support to read the flash's OTP area has been added.
The implementation is limited to the MX25L6405 device.
Fully tested on that device.
Change-Id: Iad8fa1cace1af8e02824ee1a8a2d1d4425b55378
Signed-off-by: Giuseppe Lippolis giu.lippolis@gmail.com","I agree.
It's better.
I will test it and contribute in case as soon as the merge will be accomplished.
Bye.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,22,2017-09-27T13:54:40Z,,2018-10-04T09:54:58Z,OPEN,False,123,4,7,https://github.com/fid0did0,Add OTP area read function,1,[],https://github.com/flashrom/flashrom/pull/22,https://github.com/dhendrix,4,https://github.com/flashrom/flashrom/pull/22#issuecomment-346966612,"The support to read the flash's OTP area has been added.
The implementation is limited to the MX25L6405 device.
Fully tested on that device.
Change-Id: Iad8fa1cace1af8e02824ee1a8a2d1d4425b55378
Signed-off-by: Giuseppe Lippolis giu.lippolis@gmail.com","Thanks, Giuseppe. Let us know if you get anywhere with Hatim's patches. It would be great to finally get that work merged.
We're currently working thru a large backlog of patches, so if you can take lead on OTP functionality it would be much appreciated!",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,22,2017-09-27T13:54:40Z,,2018-10-04T09:54:58Z,OPEN,False,123,4,7,https://github.com/fid0did0,Add OTP area read function,1,[],https://github.com/flashrom/flashrom/pull/22,https://github.com/fid0did0,5,https://github.com/flashrom/flashrom/pull/22#issuecomment-346995954,"The support to read the flash's OTP area has been added.
The implementation is limited to the MX25L6405 device.
Fully tested on that device.
Change-Id: Iad8fa1cace1af8e02824ee1a8a2d1d4425b55378
Signed-off-by: Giuseppe Lippolis giu.lippolis@gmail.com","Ok.
I will take care of this, but it will take a while.
Bye.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,22,2017-09-27T13:54:40Z,,2018-10-04T09:54:58Z,OPEN,False,123,4,7,https://github.com/fid0did0,Add OTP area read function,1,[],https://github.com/flashrom/flashrom/pull/22,https://github.com/sch-m,6,https://github.com/flashrom/flashrom/pull/22#issuecomment-426957225,"The support to read the flash's OTP area has been added.
The implementation is limited to the MX25L6405 device.
Fully tested on that device.
Change-Id: Iad8fa1cace1af8e02824ee1a8a2d1d4425b55378
Signed-off-by: Giuseppe Lippolis giu.lippolis@gmail.com",I've opened a new PR #60 to get Hatim's patches merged.,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,24,2017-10-11T01:12:19Z,2018-01-31T19:50:23Z,2018-01-31T19:50:23Z,CLOSED,False,18,2,1,https://github.com/Keno,linux_spi: Dynamically detect max buffer size,1,[],https://github.com/flashrom/flashrom/pull/24,https://github.com/Keno,1,https://github.com/flashrom/flashrom/pull/24,"The max buffer size of the linux kernel's SPI device is a compile-time parameter.
Read it on initialization and use it to inform the max transfer size. We allow
up to 5 bytes for the SPI command. On master, SPI commands are always 4 bytes,
but 4ba support will raise that to 5. Choosing 5 makes sure this will keep
working when 4ba support is merged.
Signed-off-by: Keno Fischer keno@juliacomputing.com","The max buffer size of the linux kernel's SPI device is a compile-time parameter.
Read it on initialization and use it to inform the max transfer size. We allow
up to 5 bytes for the SPI command. On master, SPI commands are always 4 bytes,
but 4ba support will raise that to 5. Choosing 5 makes sure this will keep
working when 4ba support is merged.
Signed-off-by: Keno Fischer keno@juliacomputing.com",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,24,2017-10-11T01:12:19Z,2018-01-31T19:50:23Z,2018-01-31T19:50:23Z,CLOSED,False,18,2,1,https://github.com/Keno,linux_spi: Dynamically detect max buffer size,1,[],https://github.com/flashrom/flashrom/pull/24,https://github.com/dhendrix,2,https://github.com/flashrom/flashrom/pull/24#issuecomment-341946139,"The max buffer size of the linux kernel's SPI device is a compile-time parameter.
Read it on initialization and use it to inform the max transfer size. We allow
up to 5 bytes for the SPI command. On master, SPI commands are always 4 bytes,
but 4ba support will raise that to 5. Choosing 5 makes sure this will keep
working when 4ba support is merged.
Signed-off-by: Keno Fischer keno@juliacomputing.com","Looks good! I went ahead and uploaded this to the upstream gerrit code review system: https://review.coreboot.org/#/c/22344/
There might be some comments on minor stuff which I can take care of and then hopefully get this merged soon.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,24,2017-10-11T01:12:19Z,2018-01-31T19:50:23Z,2018-01-31T19:50:23Z,CLOSED,False,18,2,1,https://github.com/Keno,linux_spi: Dynamically detect max buffer size,1,[],https://github.com/flashrom/flashrom/pull/24,https://github.com/dhendrix,3,https://github.com/flashrom/flashrom/pull/24#issuecomment-344828276,"The max buffer size of the linux kernel's SPI device is a compile-time parameter.
Read it on initialization and use it to inform the max transfer size. We allow
up to 5 bytes for the SPI command. On master, SPI commands are always 4 bytes,
but 4ba support will raise that to 5. Choosing 5 makes sure this will keep
working when 4ba support is merged.
Signed-off-by: Keno Fischer keno@juliacomputing.com","FYI we added some error checking and merged your patch. Thanks, Keno!",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,25,2017-11-23T05:31:47Z,2018-02-12T01:02:06Z,2018-05-17T12:19:07Z,CLOSED,False,1,1,1,https://github.com/sch-m,do not stop probing for flashchips after map_flash() failed,1,[],https://github.com/flashrom/flashrom/pull/25,https://github.com/sch-m,1,https://github.com/flashrom/flashrom/pull/25,"Instead, continue probing the next chip.
This fixes the problem that flashrom aborts probing for
flashchips if one big flashchip (e.g. 32M/64M) can't be mapped
because of activated CONFIG_STRICT_DEVMEM kernel option.
Signed-off-by: Martin Schiller ms@dev.tdt.de","Instead, continue probing the next chip.
This fixes the problem that flashrom aborts probing for
flashchips if one big flashchip (e.g. 32M/64M) can't be mapped
because of activated CONFIG_STRICT_DEVMEM kernel option.
Signed-off-by: Martin Schiller ms@dev.tdt.de",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,25,2017-11-23T05:31:47Z,2018-02-12T01:02:06Z,2018-05-17T12:19:07Z,CLOSED,False,1,1,1,https://github.com/sch-m,do not stop probing for flashchips after map_flash() failed,1,[],https://github.com/flashrom/flashrom/pull/25,https://github.com/dhendrix,2,https://github.com/flashrom/flashrom/pull/25#issuecomment-348833996,"Instead, continue probing the next chip.
This fixes the problem that flashrom aborts probing for
flashchips if one big flashchip (e.g. 32M/64M) can't be mapped
because of activated CONFIG_STRICT_DEVMEM kernel option.
Signed-off-by: Martin Schiller ms@dev.tdt.de","Hi Martin,
Thanks for the patch. I uploaded it to the ""upstream"" code review server here: https://review.coreboot.org/#/c/22685/
The patch seems straight forward and I hope to have it merged shortly.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,25,2017-11-23T05:31:47Z,2018-02-12T01:02:06Z,2018-05-17T12:19:07Z,CLOSED,False,1,1,1,https://github.com/sch-m,do not stop probing for flashchips after map_flash() failed,1,[],https://github.com/flashrom/flashrom/pull/25,https://github.com/dhendrix,3,https://github.com/flashrom/flashrom/pull/25#issuecomment-364806088,"Instead, continue probing the next chip.
This fixes the problem that flashrom aborts probing for
flashchips if one big flashchip (e.g. 32M/64M) can't be mapped
because of activated CONFIG_STRICT_DEVMEM kernel option.
Signed-off-by: Martin Schiller ms@dev.tdt.de","The change was merged into master some time ago, so this PR should be closed.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,26,2017-11-24T12:05:50Z,,2017-11-24T12:05:50Z,OPEN,False,4,0,1,https://github.com/maximevince,"buspirate_spi: when using pullup=on, you do not want 3v3 on the IOs, …",1,[],https://github.com/flashrom/flashrom/pull/26,https://github.com/maximevince,1,https://github.com/flashrom/flashrom/pull/26,"…but rather use them open-drain
-> Currently, flashrom will fry e.g. 1v8 chips when using the pullups=on mode, since there is still 3v3 applied on the SPI pins. This patches fixes that.
Change-Id: I9ac4c6b7a0079bb1022f2d70030a6eb29996108f","…but rather use them open-drain
-> Currently, flashrom will fry e.g. 1v8 chips when using the pullups=on mode, since there is still 3v3 applied on the SPI pins. This patches fixes that.
Change-Id: I9ac4c6b7a0079bb1022f2d70030a6eb29996108f",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,27,2017-12-01T09:20:09Z,,2020-12-11T11:05:31Z,OPEN,False,48,0,2,https://github.com/vildmark,"Added support for GigaDevices GD25Q256C (4-byte addressing), Tested PREW",1,[],https://github.com/flashrom/flashrom/pull/27,https://github.com/vildmark,1,https://github.com/flashrom/flashrom/pull/27,,,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,27,2017-12-01T09:20:09Z,,2020-12-11T11:05:31Z,OPEN,False,48,0,2,https://github.com/vildmark,"Added support for GigaDevices GD25Q256C (4-byte addressing), Tested PREW",1,[],https://github.com/flashrom/flashrom/pull/27,https://github.com/vildmark,2,https://github.com/flashrom/flashrom/pull/27#issuecomment-348449014,,Signed-off-by: Mark Spånberg mark.spanberg@gmail.com,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,28,2017-12-02T22:02:33Z,,2017-12-02T22:20:03Z,OPEN,False,2085,76,15,https://github.com/fid0did0,Initial status register and access protection infrastructure,6,[],https://github.com/flashrom/flashrom/pull/28,https://github.com/fid0did0,1,https://github.com/flashrom/flashrom/pull/28,"This pull req apply the patch from the flashrom mailing list sent by Hatim Kanchwala.
Here the post:
[flashrom] [PATCH 0/4] Initial OTP/Security Register infrastructure","This pull req apply the patch from the flashrom mailing list sent by Hatim Kanchwala.
Here the post:
[flashrom] [PATCH 0/4] Initial OTP/Security Register infrastructure",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,30,2018-01-21T13:08:37Z,2019-11-15T06:43:17Z,2019-11-15T06:43:17Z,CLOSED,False,636,1,5,https://github.com/martonmiklos,Added support for National Instruments USB-845x USB-SPI adapters,2,[],https://github.com/flashrom/flashrom/pull/30,https://github.com/martonmiklos,1,https://github.com/flashrom/flashrom/pull/30,"Hello flashrom folks,
NI  currently offers two USB-SPI converters:

USB-8451
USB-8452

This PR adds support to flashrom for these adapters through NI's NI-845x API. This API is available only on Windows at the moment, but it might change with time.
The USB-8452 is a decent adapter with adjustable I/O voltage and 50 MHz maximum SPI clock speed, so it might be helpful to someone in the future.
Known issues/open questions:

The parse_voltage method is copy-pasted from the dediprog. The same code have been copied to the Pickit2, and now as 3 programmers uses the same code I would propose to move it to some common place (even in a new PR even in it).
I think it would be useful to pass the flashchip structure to the programmer initialisation to make a sanity check on the IO voltage and maybe on the SPI speed. I have managed to fry a 1.8V chip by leaving the IO voltage on 3V3.
The mixing of the types from the ni845x.h file and the stdint might seems to be weird at first, but I have used the NI's types just where it is passed to the API's functions.
For now the building of the target is disabled because I do not think that most of the users building on Windows would have the NI-845x API installed.
Hardcoded linker dire and include paths in the Makefile (-L'C:\Program Files\Natio.. and -I'C:\Program Files\Natio...) might seems to be weird, but the headers are installed to these directories for several versions.

Review and comments are welcome!","Hello flashrom folks,
NI  currently offers two USB-SPI converters:

USB-8451
USB-8452

This PR adds support to flashrom for these adapters through NI's NI-845x API. This API is available only on Windows at the moment, but it might change with time.
The USB-8452 is a decent adapter with adjustable I/O voltage and 50 MHz maximum SPI clock speed, so it might be helpful to someone in the future.
Known issues/open questions:

The parse_voltage method is copy-pasted from the dediprog. The same code have been copied to the Pickit2, and now as 3 programmers uses the same code I would propose to move it to some common place (even in a new PR even in it).
I think it would be useful to pass the flashchip structure to the programmer initialisation to make a sanity check on the IO voltage and maybe on the SPI speed. I have managed to fry a 1.8V chip by leaving the IO voltage on 3V3.
The mixing of the types from the ni845x.h file and the stdint might seems to be weird at first, but I have used the NI's types just where it is passed to the API's functions.
For now the building of the target is disabled because I do not think that most of the users building on Windows would have the NI-845x API installed.
Hardcoded linker dire and include paths in the Makefile (-L'C:\Program Files\Natio.. and -I'C:\Program Files\Natio...) might seems to be weird, but the headers are installed to these directories for several versions.

Review and comments are welcome!",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,30,2018-01-21T13:08:37Z,2019-11-15T06:43:17Z,2019-11-15T06:43:17Z,CLOSED,False,636,1,5,https://github.com/martonmiklos,Added support for National Instruments USB-845x USB-SPI adapters,2,[],https://github.com/flashrom/flashrom/pull/30,https://github.com/martonmiklos,2,https://github.com/flashrom/flashrom/pull/30#issuecomment-368616821,"Hello flashrom folks,
NI  currently offers two USB-SPI converters:

USB-8451
USB-8452

This PR adds support to flashrom for these adapters through NI's NI-845x API. This API is available only on Windows at the moment, but it might change with time.
The USB-8452 is a decent adapter with adjustable I/O voltage and 50 MHz maximum SPI clock speed, so it might be helpful to someone in the future.
Known issues/open questions:

The parse_voltage method is copy-pasted from the dediprog. The same code have been copied to the Pickit2, and now as 3 programmers uses the same code I would propose to move it to some common place (even in a new PR even in it).
I think it would be useful to pass the flashchip structure to the programmer initialisation to make a sanity check on the IO voltage and maybe on the SPI speed. I have managed to fry a 1.8V chip by leaving the IO voltage on 3V3.
The mixing of the types from the ni845x.h file and the stdint might seems to be weird at first, but I have used the NI's types just where it is passed to the API's functions.
For now the building of the target is disabled because I do not think that most of the users building on Windows would have the NI-845x API installed.
Hardcoded linker dire and include paths in the Makefile (-L'C:\Program Files\Natio.. and -I'C:\Program Files\Natio...) might seems to be weird, but the headers are installed to these directories for several versions.

Review and comments are welcome!",Thank you very much @dhendrix  for your time invested to the review!,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,30,2018-01-21T13:08:37Z,2019-11-15T06:43:17Z,2019-11-15T06:43:17Z,CLOSED,False,636,1,5,https://github.com/martonmiklos,Added support for National Instruments USB-845x USB-SPI adapters,2,[],https://github.com/flashrom/flashrom/pull/30,https://github.com/martonmiklos,3,https://github.com/flashrom/flashrom/pull/30#issuecomment-554235204,"Hello flashrom folks,
NI  currently offers two USB-SPI converters:

USB-8451
USB-8452

This PR adds support to flashrom for these adapters through NI's NI-845x API. This API is available only on Windows at the moment, but it might change with time.
The USB-8452 is a decent adapter with adjustable I/O voltage and 50 MHz maximum SPI clock speed, so it might be helpful to someone in the future.
Known issues/open questions:

The parse_voltage method is copy-pasted from the dediprog. The same code have been copied to the Pickit2, and now as 3 programmers uses the same code I would propose to move it to some common place (even in a new PR even in it).
I think it would be useful to pass the flashchip structure to the programmer initialisation to make a sanity check on the IO voltage and maybe on the SPI speed. I have managed to fry a 1.8V chip by leaving the IO voltage on 3V3.
The mixing of the types from the ni845x.h file and the stdint might seems to be weird at first, but I have used the NI's types just where it is passed to the API's functions.
For now the building of the target is disabled because I do not think that most of the users building on Windows would have the NI-845x API installed.
Hardcoded linker dire and include paths in the Makefile (-L'C:\Program Files\Natio.. and -I'C:\Program Files\Natio...) might seems to be weird, but the headers are installed to these directories for several versions.

Review and comments are welcome!",Merged through gerrit review.,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,33,2018-01-27T14:39:50Z,2019-01-01T22:06:30Z,2019-01-01T22:06:30Z,CLOSED,False,12,8,2,https://github.com/martonmiklos,Fix mingw detection on Windows 7 (NT-6.1),4,[],https://github.com/flashrom/flashrom/pull/33,https://github.com/martonmiklos,1,https://github.com/flashrom/flashrom/pull/33,"On Windows 7 the uname command returns witn MING32_NT-6.1 so the CC quirk of the Makefile does not get applied.
This PR replaces the comparison of the uname with the ""MINGW32_NT-5.1"" with a regular expression which should properly detect the mingw on newer windows variants (8,8.1,10). I am not aware of 64 bit mingw builds yet, but the regexp will cover if it will be available in the future.","On Windows 7 the uname command returns witn MING32_NT-6.1 so the CC quirk of the Makefile does not get applied.
This PR replaces the comparison of the uname with the ""MINGW32_NT-5.1"" with a regular expression which should properly detect the mingw on newer windows variants (8,8.1,10). I am not aware of 64 bit mingw builds yet, but the regexp will cover if it will be available in the future.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,33,2018-01-27T14:39:50Z,2019-01-01T22:06:30Z,2019-01-01T22:06:30Z,CLOSED,False,12,8,2,https://github.com/martonmiklos,Fix mingw detection on Windows 7 (NT-6.1),4,[],https://github.com/flashrom/flashrom/pull/33,https://github.com/tgotic,2,https://github.com/flashrom/flashrom/pull/33#issuecomment-370215703,"On Windows 7 the uname command returns witn MING32_NT-6.1 so the CC quirk of the Makefile does not get applied.
This PR replaces the comparison of the uname with the ""MINGW32_NT-5.1"" with a regular expression which should properly detect the mingw on newer windows variants (8,8.1,10). I am not aware of 64 bit mingw builds yet, but the regexp will cover if it will be available in the future.","Maybe it is simpler to check for MINGW host with findstring:
HOST_OS ?= $(shell uname)
ifeq ($(findstring MINGW, $(HOST_OS)), MINGW)
# Explicitly set CC = gcc on MinGW, otherwise: ""cc: command not found"".
CC = gcc

This check works on Windows10 x64, Mingw64:
shell uname
MINGW64_NT-10.0",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,33,2018-01-27T14:39:50Z,2019-01-01T22:06:30Z,2019-01-01T22:06:30Z,CLOSED,False,12,8,2,https://github.com/martonmiklos,Fix mingw detection on Windows 7 (NT-6.1),4,[],https://github.com/flashrom/flashrom/pull/33,https://github.com/martonmiklos,3,https://github.com/flashrom/flashrom/pull/33#issuecomment-370219216,"On Windows 7 the uname command returns witn MING32_NT-6.1 so the CC quirk of the Makefile does not get applied.
This PR replaces the comparison of the uname with the ""MINGW32_NT-5.1"" with a regular expression which should properly detect the mingw on newer windows variants (8,8.1,10). I am not aware of 64 bit mingw builds yet, but the regexp will cover if it will be available in the future.","Thanks, makes sense.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,33,2018-01-27T14:39:50Z,2019-01-01T22:06:30Z,2019-01-01T22:06:30Z,CLOSED,False,12,8,2,https://github.com/martonmiklos,Fix mingw detection on Windows 7 (NT-6.1),4,[],https://github.com/flashrom/flashrom/pull/33,https://github.com/martonmiklos,4,https://github.com/flashrom/flashrom/pull/33#issuecomment-450760478,"On Windows 7 the uname command returns witn MING32_NT-6.1 so the CC quirk of the Makefile does not get applied.
This PR replaces the comparison of the uname with the ""MINGW32_NT-5.1"" with a regular expression which should properly detect the mingw on newer windows variants (8,8.1,10). I am not aware of 64 bit mingw builds yet, but the regexp will cover if it will be available in the future.","Closing as it was merged through gerrit:
https://review.coreboot.org/#/c/flashrom/+/23865/",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,34,2018-02-11T03:04:27Z,,2018-09-10T02:53:01Z,OPEN,False,264,65,10,https://github.com/huming2207,Various changes ,5,[],https://github.com/flashrom/flashrom/pull/34,https://github.com/huming2207,1,https://github.com/flashrom/flashrom/pull/34,"Hi there,
Here are some changes I've made in my internship project previously, including:

theatrically improving linux_spi maximum write speed.
Winbond W25Q256 chips' ADP bit read/write support
some performance changes

I'm not sure if I should put several commits in one PR, but I have no idea how to separate them in one branch. If you are not happy about that, I'll create more than one branches and put each of the commit in the branch separately.
Regards,
Jackson","Hi there,
Here are some changes I've made in my internship project previously, including:

theatrically improving linux_spi maximum write speed.
Winbond W25Q256 chips' ADP bit read/write support
some performance changes

I'm not sure if I should put several commits in one PR, but I have no idea how to separate them in one branch. If you are not happy about that, I'll create more than one branches and put each of the commit in the branch separately.
Regards,
Jackson",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,34,2018-02-11T03:04:27Z,,2018-09-10T02:53:01Z,OPEN,False,264,65,10,https://github.com/huming2207,Various changes ,5,[],https://github.com/flashrom/flashrom/pull/34,https://github.com/mikebdp2,2,https://github.com/flashrom/flashrom/pull/34#issuecomment-418441817,"Hi there,
Here are some changes I've made in my internship project previously, including:

theatrically improving linux_spi maximum write speed.
Winbond W25Q256 chips' ADP bit read/write support
some performance changes

I'm not sure if I should put several commits in one PR, but I have no idea how to separate them in one branch. If you are not happy about that, I'll create more than one branches and put each of the commit in the branch separately.
Regards,
Jackson","@huming2207 Sorry, but KB9012 support patches have been already merged with the flashrom's master branch at 12 February 2018. Please check what commits of your pull request are still important, and rebase them on top of the flashrom's master branch. Ideally that should be done at gerrit - https://review.coreboot.org/q/project:flashrom+status:open",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,34,2018-02-11T03:04:27Z,,2018-09-10T02:53:01Z,OPEN,False,264,65,10,https://github.com/huming2207,Various changes ,5,[],https://github.com/flashrom/flashrom/pull/34,https://github.com/huming2207,3,https://github.com/flashrom/flashrom/pull/34#issuecomment-418619851,"Hi there,
Here are some changes I've made in my internship project previously, including:

theatrically improving linux_spi maximum write speed.
Winbond W25Q256 chips' ADP bit read/write support
some performance changes

I'm not sure if I should put several commits in one PR, but I have no idea how to separate them in one branch. If you are not happy about that, I'll create more than one branches and put each of the commit in the branch separately.
Regards,
Jackson","@mikebdp2 Hello Mike,
Sorry for that I forgot this pull request and I cherry-picked that commit into my repo's master branch. I will consider removing it later.
Regards,
Jackson",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,35,2018-02-26T13:54:31Z,,2018-02-26T13:54:31Z,OPEN,False,30,0,2,https://github.com/loigu,added support for atmel AT25XE041B,1,[],https://github.com/flashrom/flashrom/pull/35,https://github.com/loigu,1,https://github.com/flashrom/flashrom/pull/35,"Change-Id: Ia3618a69d9cc409ced3d49095afea4ae7ad8880a
according to datasheet https://www.adestotech.com/wp-content/uploads/DS-AT25XE041B_062.pdf, tested in production","Change-Id: Ia3618a69d9cc409ced3d49095afea4ae7ad8880a
according to datasheet https://www.adestotech.com/wp-content/uploads/DS-AT25XE041B_062.pdf, tested in production",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,36,2018-03-03T08:26:59Z,2018-05-06T20:59:19Z,2018-05-06T20:59:19Z,CLOSED,False,36,0,4,https://github.com/carpikes,flashchips: Add SST26VF016B,1,[],https://github.com/flashrom/flashrom/pull/36,https://github.com/carpikes,1,https://github.com/flashrom/flashrom/pull/36,,,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,36,2018-03-03T08:26:59Z,2018-05-06T20:59:19Z,2018-05-06T20:59:19Z,CLOSED,False,36,0,4,https://github.com/carpikes,flashchips: Add SST26VF016B,1,[],https://github.com/flashrom/flashrom/pull/36,https://github.com/terriblefire,2,https://github.com/flashrom/flashrom/pull/36#issuecomment-380359094,,I have verified this pull request works on the SST26VF016B. Please merge to master.,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,36,2018-03-03T08:26:59Z,2018-05-06T20:59:19Z,2018-05-06T20:59:19Z,CLOSED,False,36,0,4,https://github.com/carpikes,flashchips: Add SST26VF016B,1,[],https://github.com/flashrom/flashrom/pull/36,https://github.com/dhendrix,3,https://github.com/flashrom/flashrom/pull/36#issuecomment-385300570,,"I looked into this a bit more and found an OpenEmbedded patch that seems more complete:
http://cgit.openembedded.org/meta-openembedded/tree/meta-oe/recipes-bsp/flashrom/flashrom/sst26.patch
Mind giving it a try? Would it be better to merge the OpenEmbedded version?",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,36,2018-03-03T08:26:59Z,2018-05-06T20:59:19Z,2018-05-06T20:59:19Z,CLOSED,False,36,0,4,https://github.com/carpikes,flashchips: Add SST26VF016B,1,[],https://github.com/flashrom/flashrom/pull/36,https://github.com/terriblefire,4,https://github.com/flashrom/flashrom/pull/36#issuecomment-385386692,,Happy to try it out later.,True,"{'THUMBS_UP': ['https://github.com/dhendrix', 'https://github.com/carpikes']}"
flashrom/flashrom,https://github.com/flashrom/flashrom,36,2018-03-03T08:26:59Z,2018-05-06T20:59:19Z,2018-05-06T20:59:19Z,CLOSED,False,36,0,4,https://github.com/carpikes,flashchips: Add SST26VF016B,1,[],https://github.com/flashrom/flashrom/pull/36,https://github.com/terriblefire,5,https://github.com/flashrom/flashrom/pull/36#issuecomment-385520791,,Both this patch and the one you linked to work fine for me.,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,36,2018-03-03T08:26:59Z,2018-05-06T20:59:19Z,2018-05-06T20:59:19Z,CLOSED,False,36,0,4,https://github.com/carpikes,flashchips: Add SST26VF016B,1,[],https://github.com/flashrom/flashrom/pull/36,https://github.com/dhendrix,6,https://github.com/flashrom/flashrom/pull/36#issuecomment-385535664,,"Thanks! I went ahead and uploaded the OE version to review.coreboot.org for inclusion in the master branch: https://review.coreboot.org/#/c/flashrom/+/25962/ . There was a bit of history to go along with this patch, hopefully we can get this version in and reduce confusion.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,36,2018-03-03T08:26:59Z,2018-05-06T20:59:19Z,2018-05-06T20:59:19Z,CLOSED,False,36,0,4,https://github.com/carpikes,flashchips: Add SST26VF016B,1,[],https://github.com/flashrom/flashrom/pull/36,https://github.com/dhendrix,7,https://github.com/flashrom/flashrom/pull/36#issuecomment-386913380,,"https://review.coreboot.org/#/c/flashrom/+/25962/ has been merged with support for SST26VF016B, SST26VF032B, and SST26VF064B. It will propagate to the github mirror shortly. Thanks!",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,37,2018-03-04T09:29:13Z,,2018-03-04T09:29:13Z,OPEN,False,498,337,2,https://github.com/tgotic,Change libsub0 to libusb,1,[],https://github.com/flashrom/flashrom/pull/37,https://github.com/tgotic,1,https://github.com/flashrom/flashrom/pull/37,"Recently I tried to use flashrom with PicKit2 on Windows.
I was unable to get it working with various libusb0 dll's,
so I rewrote pickit2_spi.c to use libusb 1.021 (form libusb.info).
Since other external USB programmers use libusb,
flashrom doesn't depend on obsolete libusb0 anymore.
This change is not platform dependant.","Recently I tried to use flashrom with PicKit2 on Windows.
I was unable to get it working with various libusb0 dll's,
so I rewrote pickit2_spi.c to use libusb 1.021 (form libusb.info).
Since other external USB programmers use libusb,
flashrom doesn't depend on obsolete libusb0 anymore.
This change is not platform dependant.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,38,2018-03-04T10:11:49Z,,2018-03-04T10:11:49Z,OPEN,False,15,8,1,https://github.com/tgotic,UsbDk support in libusb,1,[],https://github.com/flashrom/flashrom/pull/38,https://github.com/tgotic,1,https://github.com/flashrom/flashrom/pull/38,"This patch adds support for CH341 drivers on Windows over UsbDk.
Flashrom gets access to ch341a USB programmer through libusb.
On Windows, libusb 1.0.21 uses WinUSB drivers. It is possible to use ch341a with custom signed WinUSB drivers, or as described Installing WinUSB by specifying the system-provided device class. Latest only works if Windows Update is disabled or offline.
New libusb 1.0.22 adds support for UsbDk stack which can access to ch341a programmer via original CH341W(64).SYS drivers.","This patch adds support for CH341 drivers on Windows over UsbDk.
Flashrom gets access to ch341a USB programmer through libusb.
On Windows, libusb 1.0.21 uses WinUSB drivers. It is possible to use ch341a with custom signed WinUSB drivers, or as described Installing WinUSB by specifying the system-provided device class. Latest only works if Windows Update is disabled or offline.
New libusb 1.0.22 adds support for UsbDk stack which can access to ch341a programmer via original CH341W(64).SYS drivers.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,39,2018-03-04T11:03:22Z,,2018-03-04T11:03:22Z,OPEN,False,75,6,4,https://github.com/tgotic,Windows,3,[],https://github.com/flashrom/flashrom/pull/39,https://github.com/tgotic,1,https://github.com/flashrom/flashrom/pull/39,"Patches for Windows version of flashrom:

improved timer resolution to 1ms
icon and version information
improved MinGW detection","Patches for Windows version of flashrom:

improved timer resolution to 1ms
icon and version information
improved MinGW detection",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,40,2018-03-07T22:19:48Z,2018-03-29T23:17:22Z,2018-03-29T23:17:22Z,CLOSED,False,79,1,2,https://github.com/stass,Add support for Atmel/Adesto AT25SF161 and Winbond W25Q80EW.,1,[],https://github.com/flashrom/flashrom/pull/40,https://github.com/stass,1,https://github.com/flashrom/flashrom/pull/40,Signed-off-by: Stanislav Sedov ssedov@fb.com,Signed-off-by: Stanislav Sedov ssedov@fb.com,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,40,2018-03-07T22:19:48Z,2018-03-29T23:17:22Z,2018-03-29T23:17:22Z,CLOSED,False,79,1,2,https://github.com/stass,Add support for Atmel/Adesto AT25SF161 and Winbond W25Q80EW.,1,[],https://github.com/flashrom/flashrom/pull/40,https://github.com/dhendrix,2,https://github.com/flashrom/flashrom/pull/40#issuecomment-377400841,Signed-off-by: Stanislav Sedov ssedov@fb.com,merged into master (f577544) via upstream gerrit,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,44,2018-05-17T21:32:21Z,2018-06-05T04:46:21Z,2018-06-05T04:46:21Z,CLOSED,False,40,1,2,https://github.com/evanpjensen,Add support for the AT25SF081,4,[],https://github.com/flashrom/flashrom/pull/44,https://github.com/evanpjensen,1,https://github.com/flashrom/flashrom/pull/44,"https://www.adestotech.com/wp-content/uploads/DS-AT25SF081_045.pdf
Found one of these in the wild and added support. Tested and working great.","https://www.adestotech.com/wp-content/uploads/DS-AT25SF081_045.pdf
Found one of these in the wild and added support. Tested and working great.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,44,2018-05-17T21:32:21Z,2018-06-05T04:46:21Z,2018-06-05T04:46:21Z,CLOSED,False,40,1,2,https://github.com/evanpjensen,Add support for the AT25SF081,4,[],https://github.com/flashrom/flashrom/pull/44,https://github.com/dhendrix,2,https://github.com/flashrom/flashrom/pull/44#issuecomment-394136257,"https://www.adestotech.com/wp-content/uploads/DS-AT25SF081_045.pdf
Found one of these in the wild and added support. Tested and working great.","Thanks! I sent the patch for review upstream: https://review.coreboot.org/c/flashrom/+/26779
It will propagate to github after being merged in the upstream repo.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,44,2018-05-17T21:32:21Z,2018-06-05T04:46:21Z,2018-06-05T04:46:21Z,CLOSED,False,40,1,2,https://github.com/evanpjensen,Add support for the AT25SF081,4,[],https://github.com/flashrom/flashrom/pull/44,https://github.com/dhendrix,3,https://github.com/flashrom/flashrom/pull/44#issuecomment-394580231,"https://www.adestotech.com/wp-content/uploads/DS-AT25SF081_045.pdf
Found one of these in the wild and added support. Tested and working great.",Patch has been marged (291c101). Thanks!,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,46,2018-05-31T21:42:27Z,,2018-05-31T21:42:27Z,OPEN,False,1,30,4,https://github.com/rminnich,WIP: remove Apple DirectHW support,1,[],https://github.com/flashrom/flashrom/pull/46,https://github.com/rminnich,1,https://github.com/flashrom/flashrom/pull/46,"It has not worked for what seems like years.
If somebody wants to fix it, they can fix it,
but it's wasting a lot of people's time.
Change-Id: If59e4eeb72cbc49cb42ae425cf2ed5af7ac6089a
Signed-off-by: Ronald G. Minnich rminnich@gmail.com","It has not worked for what seems like years.
If somebody wants to fix it, they can fix it,
but it's wasting a lot of people's time.
Change-Id: If59e4eeb72cbc49cb42ae425cf2ed5af7ac6089a
Signed-off-by: Ronald G. Minnich rminnich@gmail.com",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,47,2018-06-02T21:47:08Z,2018-06-10T00:02:18Z,2018-06-10T00:02:18Z,CLOSED,False,40,0,2,https://github.com/steffenmauch,"added support for Adesto, formerly ATMEL, AT25DF021A flash device; te…",2,[],https://github.com/flashrom/flashrom/pull/47,https://github.com/steffenmauch,1,https://github.com/flashrom/flashrom/pull/47,"added support for Adesto, formerly ATMEL, AT25DF021A flash device; tested with FT2232H Mini Module
Change-Id: I0a9acd67653647e077e4e9577c76df0a1eb37718
Signed-off-by: Steffen Mauch steffen.mauch@gmail.com","added support for Adesto, formerly ATMEL, AT25DF021A flash device; tested with FT2232H Mini Module
Change-Id: I0a9acd67653647e077e4e9577c76df0a1eb37718
Signed-off-by: Steffen Mauch steffen.mauch@gmail.com",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,47,2018-06-02T21:47:08Z,2018-06-10T00:02:18Z,2018-06-10T00:02:18Z,CLOSED,False,40,0,2,https://github.com/steffenmauch,"added support for Adesto, formerly ATMEL, AT25DF021A flash device; te…",2,[],https://github.com/flashrom/flashrom/pull/47,https://github.com/steffenmauch,2,https://github.com/flashrom/flashrom/pull/47#issuecomment-394141778,"added support for Adesto, formerly ATMEL, AT25DF021A flash device; tested with FT2232H Mini Module
Change-Id: I0a9acd67653647e077e4e9577c76df0a1eb37718
Signed-off-by: Steffen Mauch steffen.mauch@gmail.com","thanks for the hints, I submitted a correcting patch",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,47,2018-06-02T21:47:08Z,2018-06-10T00:02:18Z,2018-06-10T00:02:18Z,CLOSED,False,40,0,2,https://github.com/steffenmauch,"added support for Adesto, formerly ATMEL, AT25DF021A flash device; te…",2,[],https://github.com/flashrom/flashrom/pull/47,https://github.com/dhendrix,3,https://github.com/flashrom/flashrom/pull/47#issuecomment-394583582,"added support for Adesto, formerly ATMEL, AT25DF021A flash device; tested with FT2232H Mini Module
Change-Id: I0a9acd67653647e077e4e9577c76df0a1eb37718
Signed-off-by: Steffen Mauch steffen.mauch@gmail.com","Looks good overall! I sent the patch to the upstream review server: https://review.coreboot.org/c/flashrom/+/26856
I should have mentioned earlier that we'll need to update the commit message to shorten the summary and move some of the info into the body of the message. We generally follow the coreboot style guidelines, which explain git commit messages here: https://www.coreboot.org/Git#Commit_messages
I can do it if you'd like, or you can update it.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,47,2018-06-02T21:47:08Z,2018-06-10T00:02:18Z,2018-06-10T00:02:18Z,CLOSED,False,40,0,2,https://github.com/steffenmauch,"added support for Adesto, formerly ATMEL, AT25DF021A flash device; te…",2,[],https://github.com/flashrom/flashrom/pull/47,https://github.com/steffenmauch,4,https://github.com/flashrom/flashrom/pull/47#issuecomment-394597285,"added support for Adesto, formerly ATMEL, AT25DF021A flash device; tested with FT2232H Mini Module
Change-Id: I0a9acd67653647e077e4e9577c76df0a1eb37718
Signed-off-by: Steffen Mauch steffen.mauch@gmail.com",Please change the comment as desired.,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,47,2018-06-02T21:47:08Z,2018-06-10T00:02:18Z,2018-06-10T00:02:18Z,CLOSED,False,40,0,2,https://github.com/steffenmauch,"added support for Adesto, formerly ATMEL, AT25DF021A flash device; te…",2,[],https://github.com/flashrom/flashrom/pull/47,https://github.com/dhendrix,5,https://github.com/flashrom/flashrom/pull/47#issuecomment-396007702,"added support for Adesto, formerly ATMEL, AT25DF021A flash device; tested with FT2232H Mini Module
Change-Id: I0a9acd67653647e077e4e9577c76df0a1eb37718
Signed-off-by: Steffen Mauch steffen.mauch@gmail.com",Patch has been merged (commit 0b59b0d). Thanks!,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,50,2018-06-26T18:41:31Z,2018-09-06T19:43:30Z,2018-09-06T19:43:30Z,CLOSED,False,4,0,1,https://github.com/encounter,digilent_spi: Avoid deprecated libusb function,1,[],https://github.com/flashrom/flashrom/pull/50,https://github.com/encounter,1,https://github.com/flashrom/flashrom/pull/50,"Same logic used in ch341a_spi (291764a)
Change-Id: I3546760ab70a5700b739bcaae8f1591730c172dc
Signed-off-by: Luke Street luke.street@encounterpc.com","Same logic used in ch341a_spi (291764a)
Change-Id: I3546760ab70a5700b739bcaae8f1591730c172dc
Signed-off-by: Luke Street luke.street@encounterpc.com",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,50,2018-06-26T18:41:31Z,2018-09-06T19:43:30Z,2018-09-06T19:43:30Z,CLOSED,False,4,0,1,https://github.com/encounter,digilent_spi: Avoid deprecated libusb function,1,[],https://github.com/flashrom/flashrom/pull/50,https://github.com/encounter,2,https://github.com/flashrom/flashrom/pull/50#issuecomment-419217623,"Same logic used in ch341a_spi (291764a)
Change-Id: I3546760ab70a5700b739bcaae8f1591730c172dc
Signed-off-by: Luke Street luke.street@encounterpc.com",Looks like this was included in f3ce951,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,51,2018-07-10T11:01:32Z,2022-04-28T06:14:35Z,2022-04-28T06:14:36Z,CLOSED,False,77,0,2,https://github.com/tomaskovacik,Fremont Micro Devices FT25H04 support,2,[],https://github.com/flashrom/flashrom/pull/51,https://github.com/tomaskovacik,1,https://github.com/flashrom/flashrom/pull/51,"Signed-off-by: Tomas kovacik nail@nodomain.sk
support for 25H04 by freemont micro devices, tested on 0.9.9 changing name on bluetooth module see[1], but it's just definition patch compile fine on 1.0, datasheet at [2]
[1] http://kovo-blog.blogspot.com/2017/11/bk8000l-change-name.html
[2] http://famousconnections.eu/wp-content/uploads/2017/10/FT25H04.pdf","Signed-off-by: Tomas kovacik nail@nodomain.sk
support for 25H04 by freemont micro devices, tested on 0.9.9 changing name on bluetooth module see[1], but it's just definition patch compile fine on 1.0, datasheet at [2]
[1] http://kovo-blog.blogspot.com/2017/11/bk8000l-change-name.html
[2] http://famousconnections.eu/wp-content/uploads/2017/10/FT25H04.pdf",True,"{'THUMBS_UP': ['https://github.com/JakobPetersson', 'https://github.com/minhng99']}"
flashrom/flashrom,https://github.com/flashrom/flashrom,51,2018-07-10T11:01:32Z,2022-04-28T06:14:35Z,2022-04-28T06:14:36Z,CLOSED,False,77,0,2,https://github.com/tomaskovacik,Fremont Micro Devices FT25H04 support,2,[],https://github.com/flashrom/flashrom/pull/51,https://github.com/tomaskovacik,2,https://github.com/flashrom/flashrom/pull/51#issuecomment-405900117,"Signed-off-by: Tomas kovacik nail@nodomain.sk
support for 25H04 by freemont micro devices, tested on 0.9.9 changing name on bluetooth module see[1], but it's just definition patch compile fine on 1.0, datasheet at [2]
[1] http://kovo-blog.blogspot.com/2017/11/bk8000l-change-name.html
[2] http://famousconnections.eu/wp-content/uploads/2017/10/FT25H04.pdf","FM25F04 patch is confirmed to works on real device, success is mentioned with my patch at this forum by Mile Dumanovski:  https://groups.google.com/forum/#!topic/bk8000l/rgy2UiGInDI",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,51,2018-07-10T11:01:32Z,2022-04-28T06:14:35Z,2022-04-28T06:14:36Z,CLOSED,False,77,0,2,https://github.com/tomaskovacik,Fremont Micro Devices FT25H04 support,2,[],https://github.com/flashrom/flashrom/pull/51,https://github.com/minhng99,3,https://github.com/flashrom/flashrom/pull/51#issuecomment-619366289,"Signed-off-by: Tomas kovacik nail@nodomain.sk
support for 25H04 by freemont micro devices, tested on 0.9.9 changing name on bluetooth module see[1], but it's just definition patch compile fine on 1.0, datasheet at [2]
[1] http://kovo-blog.blogspot.com/2017/11/bk8000l-change-name.html
[2] http://famousconnections.eu/wp-content/uploads/2017/10/FT25H04.pdf","confirmed working, both read/write function, thanks!
Probing for Winbond unknown Winbond (ex Nexcom) SPI chip, 0 kB: probe_spi_rdid_generic: id1 0x0e, id2 0x4013
Probing for FMD FT25H04, 512 kB: probe_spi_rdid_generic: id1 0x0e, id2 0x4013
Found FMD flash chip ""FT25H04"" (512 kB, SPI) on ch341a_spi.
Chip status register is 0x00.
Chip status register: Status Register Write Disable (SRWD, SRP, ...) is not set
Chip status register: Bit 6 is not set
Chip status register: Bit 5 is not set
Chip status register: Block Protect 2 (BP2) is not set
Chip status register: Block Protect 1 (BP1) is not set
Chip status register: Block Protect 0 (BP0) is not set
Chip status register: Write Enable Latch (WEL) is not set
Chip status register: Write In Progress (WIP/BUSY) is not set
Probing for SFM FM25F04, 512 kB: probe_spi_rdid_generic: id1 0x0e, id2 0x4013
Probing for Generic unknown SPI chip (RDID), 0 kB: probe_spi_rdid_generic: id1 0x0e, id2 0x4013
Probing for Generic unknown SPI chip (REMS), 0 kB: probe_spi_rems: id1 0xe, id2 0x12
Found FMD flash chip ""FT25H04"" (512 kB, SPI).
===
This flash part has status UNTESTED for operations: PROBE READ ERASE WRITE
The test status of this chip may have been updated in the latest development
version of flashrom. If you are running the latest development version,
please email a report to flashrom@flashrom.org if any of the above operations
work correctly for you with this flash chip. Please include the flashrom log
file for all operations you tested (see the man page for details), and mention
which mainboard or programmer you tested in the subject line.
Thanks for your help!
Reading old flash chip contents... done.
Erasing and writing flash chip... Trying erase function 0... 0x000000-0x000fff:W, 0x001000-0x001fff:W, 0x002000-0x002fff:W, 0x003000-0x003fff:W, 0x004000-0x004fff:W, 0x005000-0x005fff:W, 0x006000-0x006fff:W, 0x007000-0x007fff:W, 0x008000-0x008fff:W, 0x009000-0x009fff:W, 0x00a000-0x00afff:W, 0x00b000-0x00bfff:W, 0x00c000-0x00cfff:W, 0x00d000-0x00dfff:W, 0x00e000-0x00efff:S, 0x00f000-0x00ffff:W, 0x010000-0x010fff:S, 0x011000-0x011fff:S, 0x012000-0x012fff:S, 0x013000-0x013fff:S, 0x014000-0x014fff:S, 0x015000-0x015fff:S, 0x016000-0x016fff:S, 0x017000-0x017fff:S, 0x018000-0x018fff:S, 0x019000-0x019fff:S, 0x01a000-0x01afff:S, 0x01b000-0x01bfff:S, 0x01c000-0x01cfff:S, 0x01d000-0x01dfff:S, 0x01e000-0x01efff:S, 0x01f000-0x01ffff:S, 0x020000-0x020fff:S, 0x021000-0x021fff:S, 0x022000-0x022fff:S, 0x023000-0x023fff:S, 0x024000-0x024fff:S, 0x025000-0x025fff:S, 0x026000-0x026fff:S, 0x027000-0x027fff:S, 0x028000-0x028fff:S, 0x029000-0x029fff:S, 0x02a000-0x02afff:S, 0x02b000-0x02bfff:S, 0x02c000-0x02cfff:S, 0x02d000-0x02dfff:S, 0x02e000-0x02efff:S, 0x02f000-0x02ffff:S, 0x030000-0x030fff:S, 0x031000-0x031fff:S, 0x032000-0x032fff:S, 0x033000-0x033fff:S, 0x034000-0x034fff:S, 0x035000-0x035fff:S, 0x036000-0x036fff:S, 0x037000-0x037fff:S, 0x038000-0x038fff:S, 0x039000-0x039fff:S, 0x03a000-0x03afff:S, 0x03b000-0x03bfff:S, 0x03c000-0x03cfff:S, 0x03d000-0x03dfff:S, 0x03e000-0x03efff:S, 0x03f000-0x03ffff:S, 0x040000-0x040fff:S, 0x041000-0x041fff:S, 0x042000-0x042fff:S, 0x043000-0x043fff:S, 0x044000-0x044fff:S, 0x045000-0x045fff:S, 0x046000-0x046fff:S, 0x047000-0x047fff:S, 0x048000-0x048fff:S, 0x049000-0x049fff:S, 0x04a000-0x04afff:S, 0x04b000-0x04bfff:S, 0x04c000-0x04cfff:S, 0x04d000-0x04dfff:S, 0x04e000-0x04efff:S, 0x04f000-0x04ffff:S, 0x050000-0x050fff:S, 0x051000-0x051fff:S, 0x052000-0x052fff:S, 0x053000-0x053fff:S, 0x054000-0x054fff:S, 0x055000-0x055fff:S, 0x056000-0x056fff:S, 0x057000-0x057fff:S, 0x058000-0x058fff:S, 0x059000-0x059fff:S, 0x05a000-0x05afff:S, 0x05b000-0x05bfff:S, 0x05c000-0x05cfff:S, 0x05d000-0x05dfff:S, 0x05e000-0x05efff:S, 0x05f000-0x05ffff:S, 0x060000-0x060fff:S, 0x061000-0x061fff:S, 0x062000-0x062fff:S, 0x063000-0x063fff:S, 0x064000-0x064fff:S, 0x065000-0x065fff:S, 0x066000-0x066fff:S, 0x067000-0x067fff:S, 0x068000-0x068fff:S, 0x069000-0x069fff:S, 0x06a000-0x06afff:S, 0x06b000-0x06bfff:S, 0x06c000-0x06cfff:S, 0x06d000-0x06dfff:S, 0x06e000-0x06efff:S, 0x06f000-0x06ffff:S, 0x070000-0x070fff:S, 0x071000-0x071fff:S, 0x072000-0x072fff:S, 0x073000-0x073fff:S, 0x074000-0x074fff:S, 0x075000-0x075fff:S, 0x076000-0x076fff:S, 0x077000-0x077fff:S, 0x078000-0x078fff:S, 0x079000-0x079fff:S, 0x07a000-0x07afff:S, 0x07b000-0x07bfff:S, 0x07c000-0x07cfff:S, 0x07d000-0x07dfff:S, 0x07e000-0x07efff:S, 0x07f000-0x07ffff:S
Erase/write done.
Verifying flash... VERIFIED.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,51,2018-07-10T11:01:32Z,2022-04-28T06:14:35Z,2022-04-28T06:14:36Z,CLOSED,False,77,0,2,https://github.com/tomaskovacik,Fremont Micro Devices FT25H04 support,2,[],https://github.com/flashrom/flashrom/pull/51,https://github.com/felixsinger,4,https://github.com/flashrom/flashrom/pull/51#issuecomment-1111788228,"Signed-off-by: Tomas kovacik nail@nodomain.sk
support for 25H04 by freemont micro devices, tested on 0.9.9 changing name on bluetooth module see[1], but it's just definition patch compile fine on 1.0, datasheet at [2]
[1] http://kovo-blog.blogspot.com/2017/11/bk8000l-change-name.html
[2] http://famousconnections.eu/wp-content/uploads/2017/10/FT25H04.pdf","https://review.coreboot.org/c/flashrom/+/63913
https://review.coreboot.org/c/flashrom/+/63914",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,52,2018-07-24T14:52:05Z,2018-11-22T11:11:11Z,2018-11-22T11:11:11Z,CLOSED,False,39,0,2,https://github.com/choryuidentify,ISSI IS25LP064 support,3,[],https://github.com/flashrom/flashrom/pull/52,https://github.com/choryuidentify,1,https://github.com/flashrom/flashrom/pull/52,"Change-Id: I5cb7c247cbd897279486136397e72588b79c7c5b
support for ISSI IS25LP064. It tested on buspirate_spi.
Read, Write, Erase operation confirmed","Change-Id: I5cb7c247cbd897279486136397e72588b79c7c5b
support for ISSI IS25LP064. It tested on buspirate_spi.
Read, Write, Erase operation confirmed",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,53,2018-07-25T19:20:34Z,,2019-01-09T05:29:57Z,OPEN,False,246,0,5,https://github.com/unrelentingtech,Add freebsd_spi programmer,1,[],https://github.com/flashrom/flashrom/pull/53,https://github.com/unrelentingtech,1,https://github.com/flashrom/flashrom/pull/53,"Based on linux_spi, using FreeBSD's spigen(4) interface.
Change-Id: I4e1689416fbb309df94807f51635bc1f4b53e0c8
Signed-off-by: Greg V greg@unrelenting.technology","Based on linux_spi, using FreeBSD's spigen(4) interface.
Change-Id: I4e1689416fbb309df94807f51635bc1f4b53e0c8
Signed-off-by: Greg V greg@unrelenting.technology",True,"{'THUMBS_UP': ['https://github.com/wezm', 'https://github.com/emaste']}"
flashrom/flashrom,https://github.com/flashrom/flashrom,53,2018-07-25T19:20:34Z,,2019-01-09T05:29:57Z,OPEN,False,246,0,5,https://github.com/unrelentingtech,Add freebsd_spi programmer,1,[],https://github.com/flashrom/flashrom/pull/53,https://github.com/emaste,2,https://github.com/flashrom/flashrom/pull/53#issuecomment-441809656,"Based on linux_spi, using FreeBSD's spigen(4) interface.
Change-Id: I4e1689416fbb309df94807f51635bc1f4b53e0c8
Signed-off-by: Greg V greg@unrelenting.technology",Is there anything holding up this change?,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,54,2018-08-01T13:41:54Z,2018-10-22T23:07:06Z,2018-10-22T23:07:06Z,CLOSED,False,27,6,2,https://github.com/l29ah,ft2232_spi: add an ability to use GPIO for chip selection,1,[],https://github.com/flashrom/flashrom/pull/54,https://github.com/l29ah,1,https://github.com/flashrom/flashrom/pull/54,"Change-Id: I6db05619e0d69ad18549c8556ef69225337b1532
Signed-off-by: Sergey Alirzaev zl29ah@gmail.com","Change-Id: I6db05619e0d69ad18549c8556ef69225337b1532
Signed-off-by: Sergey Alirzaev zl29ah@gmail.com",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,56,2018-08-17T18:40:11Z,2018-08-17T18:53:00Z,2018-08-17T18:53:00Z,CLOSED,False,12,2,1,https://github.com/jaytthompson,Adding initial support for Dediprog SF200.,1,[],https://github.com/flashrom/flashrom/pull/56,https://github.com/jaytthompson,1,https://github.com/flashrom/flashrom/pull/56,"Adding basic initial support for the Dediprog SF200.
There does not appear to be much actionable documentation on the SF200 online so I've assumed it's mostly a SF100 workalike- I've confirmed that it works on the sample I have.
Note that I've kept the firmware version checks exactly like the SF100, and my programmer is 2.0.8, so it defaults to protocol v1 and no setting of SPI speed.","Adding basic initial support for the Dediprog SF200.
There does not appear to be much actionable documentation on the SF200 online so I've assumed it's mostly a SF100 workalike- I've confirmed that it works on the sample I have.
Note that I've kept the firmware version checks exactly like the SF100, and my programmer is 2.0.8, so it defaults to protocol v1 and no setting of SPI speed.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,57,2018-08-17T19:34:00Z,2018-09-17T13:04:10Z,2018-09-17T13:04:10Z,CLOSED,False,12,2,1,https://github.com/jaytthompson,Adding initial support for Dediprog SF200.,1,[],https://github.com/flashrom/flashrom/pull/57,https://github.com/jaytthompson,1,https://github.com/flashrom/flashrom/pull/57,"Signed-off-by: Jay Thompson thompson.jay.thomas@gmail.com
Adding Dediprog SF200 support.
I only have one sample, but it appears to be a SF100 workalike for the most part. Its firmware version is 2.0.8 (it's 11 years old) so it's defaulting to protocol v1 and does not attempt to set SPI speed (logic inherited from the SF100).
Confirmed to work (read/write/verify) with my sample.","Signed-off-by: Jay Thompson thompson.jay.thomas@gmail.com
Adding Dediprog SF200 support.
I only have one sample, but it appears to be a SF100 workalike for the most part. Its firmware version is 2.0.8 (it's 11 years old) so it's defaulting to protocol v1 and does not attempt to set SPI speed (logic inherited from the SF100).
Confirmed to work (read/write/verify) with my sample.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,57,2018-08-17T19:34:00Z,2018-09-17T13:04:10Z,2018-09-17T13:04:10Z,CLOSED,False,12,2,1,https://github.com/jaytthompson,Adding initial support for Dediprog SF200.,1,[],https://github.com/flashrom/flashrom/pull/57,https://github.com/dhendrix,2,https://github.com/flashrom/flashrom/pull/57#issuecomment-415125206,"Signed-off-by: Jay Thompson thompson.jay.thomas@gmail.com
Adding Dediprog SF200 support.
I only have one sample, but it appears to be a SF100 workalike for the most part. Its firmware version is 2.0.8 (it's 11 years old) so it's defaulting to protocol v1 and does not attempt to set SPI speed (logic inherited from the SF100).
Confirmed to work (read/write/verify) with my sample.","Hi Jay, thanks for the patch! I've uploaded it to review.coreboot.org here: https://review.coreboot.org/c/flashrom/+/28272
Be advised that there is a conflict with another patch which moves libusb code into a separate file: https://review.coreboot.org/c/flashrom/+/27443
We'll probably merge 27443 first, after which I'll rebase your patch and try to get it merged.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,57,2018-08-17T19:34:00Z,2018-09-17T13:04:10Z,2018-09-17T13:04:10Z,CLOSED,False,12,2,1,https://github.com/jaytthompson,Adding initial support for Dediprog SF200.,1,[],https://github.com/flashrom/flashrom/pull/57,https://github.com/dhendrix,3,https://github.com/flashrom/flashrom/pull/57#issuecomment-422006736,"Signed-off-by: Jay Thompson thompson.jay.thomas@gmail.com
Adding Dediprog SF200 support.
I only have one sample, but it appears to be a SF100 workalike for the most part. Its firmware version is 2.0.8 (it's 11 years old) so it's defaulting to protocol v1 and does not attempt to set SPI speed (logic inherited from the SF100).
Confirmed to work (read/write/verify) with my sample.","Hi Jay,
Your patch was finally merged last week: cabe320
There were some small adjustments needed which were mentioned in the review on review.coreboot.org (whitespace fixes, changing an if-else to switch). Nothing major, so I just went ahead and took care of those.
Thanks!",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,58,2018-08-20T16:48:29Z,,2019-01-01T02:46:57Z,OPEN,False,1,0,1,https://github.com/kingsumos,Add support for Intel Denverton SoC (C3xxx),1,[],https://github.com/flashrom/flashrom/pull/58,https://github.com/kingsumos,1,https://github.com/flashrom/flashrom/pull/58,"test_state set to ""NT"": waiting for someone else approve/test the changes (flashing works ok for Pinelake CRB)","test_state set to ""NT"": waiting for someone else approve/test the changes (flashing works ok for Pinelake CRB)",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,58,2018-08-20T16:48:29Z,,2019-01-01T02:46:57Z,OPEN,False,1,0,1,https://github.com/kingsumos,Add support for Intel Denverton SoC (C3xxx),1,[],https://github.com/flashrom/flashrom/pull/58,https://github.com/dhendrix,2,https://github.com/flashrom/flashrom/pull/58#issuecomment-450706348,"test_state set to ""NT"": waiting for someone else approve/test the changes (flashing works ok for Pinelake CRB)","This looks good, but needs a ""Signed-off-by:"" line in the commit message (as per https://www.flashrom.org/Development_Guidelines#Sending_a_patch).
We really ought to add that to the commit-msg hook...",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,60,2018-10-04T09:52:54Z,,2020-10-24T21:08:00Z,OPEN,False,4366,190,20,https://github.com/sch-m,"Initial status register, access protection and OTP infrastructure",12,[],https://github.com/flashrom/flashrom/pull/60,https://github.com/sch-m,1,https://github.com/flashrom/flashrom/pull/60,"This PR should bring the work of Hatim Kanchwala upstream.
Here are the original descriptions of the patch-sets:
Initial status register and access protection infrastructure:
Following patches add new infrastructure for status register(s) and locking/unlocking of access protection. Detailed points for explaining each patch are included within them.
Some general thoughts -

The code has a lot TODOs and FIXMEs (most of which I have addressed to myself). They are short-term targets and represent the work-in-progress nature of the patches. Future revisions will resolve them.
There are a lot of comments. Eventually much of that will be relocated to documentation and wiki, so comments in future revisions will shrink.
Some CLI code is borrowed from the ChromiumOS fork (https://chromium.googlesource.com/chromiumos/third_party/flashrom/). IMO, the exact words to use for the options is subjective.
The names for struct status_register and struct wp defines (in statusreg_layouts.c and writeprotect_layouts.c respectively) are not very creative and tend to be long. I couldn't come up with a generic scheme that captures most of the information regarding it. You are welcome to offer creative suggestions ;)

Further work -

Read and write ""configuration"" registers (a lot of Spansion chips have those)
Add tested/untested status for new infrastructure similar to what we have for chips (like TEST_PREW, etc.)

write protection modes
protection ranges


Access protection for non-SPI chips (pointed to by Stefan over IRC)
Reuse layouts for locking/unlocking (pointed to by Stafan and David over IRC)
Handling WPS bit (a couple of GigaDevice chips have this)
Exotic chips (mostly Atmel, now Adesto, chips fall under this category)

This is what I particularly seek -

Feedback on code
Feedback on CLI
Any other ideas that you'd like to add tu further work
Please add support for a few chips that you might have, and if possible also test them - would like to know how cumbersome it is

Thank you for your time. I am looking forward to your feedback and having a discussion. I hope this contribution (and many more in the future) adds value to flashrom and its community.
Initial OTP/Security Register infrastructure:
This set of patches should be applied on top of the previous patches (https://www.flashrom.org/pipermail/flashrom/2016-July/014717.html).
Continuing with the major points from the previous mail (linked above), this patch should bring support for new infrastructure to quite a few more chips. OTP models for Eon, GigaDevice and Winbond are supported now. AMIC, Macronix and Spansion OTP models are scheduled for the next revision. I admit that the CLI may not be worded in the most optimum way, but that was a conscious decision so that it could be sorted out while review.","This PR should bring the work of Hatim Kanchwala upstream.
Here are the original descriptions of the patch-sets:
Initial status register and access protection infrastructure:
Following patches add new infrastructure for status register(s) and locking/unlocking of access protection. Detailed points for explaining each patch are included within them.
Some general thoughts -

The code has a lot TODOs and FIXMEs (most of which I have addressed to myself). They are short-term targets and represent the work-in-progress nature of the patches. Future revisions will resolve them.
There are a lot of comments. Eventually much of that will be relocated to documentation and wiki, so comments in future revisions will shrink.
Some CLI code is borrowed from the ChromiumOS fork (https://chromium.googlesource.com/chromiumos/third_party/flashrom/). IMO, the exact words to use for the options is subjective.
The names for struct status_register and struct wp defines (in statusreg_layouts.c and writeprotect_layouts.c respectively) are not very creative and tend to be long. I couldn't come up with a generic scheme that captures most of the information regarding it. You are welcome to offer creative suggestions ;)

Further work -

Read and write ""configuration"" registers (a lot of Spansion chips have those)
Add tested/untested status for new infrastructure similar to what we have for chips (like TEST_PREW, etc.)

write protection modes
protection ranges


Access protection for non-SPI chips (pointed to by Stefan over IRC)
Reuse layouts for locking/unlocking (pointed to by Stafan and David over IRC)
Handling WPS bit (a couple of GigaDevice chips have this)
Exotic chips (mostly Atmel, now Adesto, chips fall under this category)

This is what I particularly seek -

Feedback on code
Feedback on CLI
Any other ideas that you'd like to add tu further work
Please add support for a few chips that you might have, and if possible also test them - would like to know how cumbersome it is

Thank you for your time. I am looking forward to your feedback and having a discussion. I hope this contribution (and many more in the future) adds value to flashrom and its community.
Initial OTP/Security Register infrastructure:
This set of patches should be applied on top of the previous patches (https://www.flashrom.org/pipermail/flashrom/2016-July/014717.html).
Continuing with the major points from the previous mail (linked above), this patch should bring support for new infrastructure to quite a few more chips. OTP models for Eon, GigaDevice and Winbond are supported now. AMIC, Macronix and Spansion OTP models are scheduled for the next revision. I admit that the CLI may not be worded in the most optimum way, but that was a conscious decision so that it could be sorted out while review.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,60,2018-10-04T09:52:54Z,,2020-10-24T21:08:00Z,OPEN,False,4366,190,20,https://github.com/sch-m,"Initial status register, access protection and OTP infrastructure",12,[],https://github.com/flashrom/flashrom/pull/60,https://github.com/milahu,2,https://github.com/flashrom/flashrom/pull/60#issuecomment-716055323,"This PR should bring the work of Hatim Kanchwala upstream.
Here are the original descriptions of the patch-sets:
Initial status register and access protection infrastructure:
Following patches add new infrastructure for status register(s) and locking/unlocking of access protection. Detailed points for explaining each patch are included within them.
Some general thoughts -

The code has a lot TODOs and FIXMEs (most of which I have addressed to myself). They are short-term targets and represent the work-in-progress nature of the patches. Future revisions will resolve them.
There are a lot of comments. Eventually much of that will be relocated to documentation and wiki, so comments in future revisions will shrink.
Some CLI code is borrowed from the ChromiumOS fork (https://chromium.googlesource.com/chromiumos/third_party/flashrom/). IMO, the exact words to use for the options is subjective.
The names for struct status_register and struct wp defines (in statusreg_layouts.c and writeprotect_layouts.c respectively) are not very creative and tend to be long. I couldn't come up with a generic scheme that captures most of the information regarding it. You are welcome to offer creative suggestions ;)

Further work -

Read and write ""configuration"" registers (a lot of Spansion chips have those)
Add tested/untested status for new infrastructure similar to what we have for chips (like TEST_PREW, etc.)

write protection modes
protection ranges


Access protection for non-SPI chips (pointed to by Stefan over IRC)
Reuse layouts for locking/unlocking (pointed to by Stafan and David over IRC)
Handling WPS bit (a couple of GigaDevice chips have this)
Exotic chips (mostly Atmel, now Adesto, chips fall under this category)

This is what I particularly seek -

Feedback on code
Feedback on CLI
Any other ideas that you'd like to add tu further work
Please add support for a few chips that you might have, and if possible also test them - would like to know how cumbersome it is

Thank you for your time. I am looking forward to your feedback and having a discussion. I hope this contribution (and many more in the future) adds value to flashrom and its community.
Initial OTP/Security Register infrastructure:
This set of patches should be applied on top of the previous patches (https://www.flashrom.org/pipermail/flashrom/2016-July/014717.html).
Continuing with the major points from the previous mail (linked above), this patch should bring support for new infrastructure to quite a few more chips. OTP models for Eon, GigaDevice and Winbond are supported now. AMIC, Macronix and Spansion OTP models are scheduled for the next revision. I admit that the CLI may not be worded in the most optimum way, but that was a conscious decision so that it could be sorted out while review.","make fails with

/usr/bin/ld: developerbox_spi.o:(.bss+0x0): multiple definition of `usb_ctx'; dediprog.o:(.bss+0x8): first defined here

$ grep 'usb_ctx;' *.c
dediprog.c:struct libusb_context *usb_ctx;
developerbox_spi.c:struct libusb_context *usb_ctx;

workaround:
sed -i 's/usb_ctx/dediprog_usb_ctx/' dediprog.c
make
# success",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,62,2018-10-31T02:19:44Z,2019-12-22T03:40:01Z,2019-12-22T03:40:01Z,CLOSED,False,599,157,18,https://github.com/yangfl,[RFC] Add initial support for SPI NAND chips,1,[],https://github.com/flashrom/flashrom/pull/62,https://github.com/yangfl,1,https://github.com/flashrom/flashrom/pull/62,"Change-Id: Ic4624315ad7c36cdbc8af508fd00fd3ad39dacd1
Signed-off-by: David Yang mmyangfl@gmail.com","Change-Id: Ic4624315ad7c36cdbc8af508fd00fd3ad39dacd1
Signed-off-by: David Yang mmyangfl@gmail.com",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,62,2018-10-31T02:19:44Z,2019-12-22T03:40:01Z,2019-12-22T03:40:01Z,CLOSED,False,599,157,18,https://github.com/yangfl,[RFC] Add initial support for SPI NAND chips,1,[],https://github.com/flashrom/flashrom/pull/62,https://github.com/minhng99,2,https://github.com/flashrom/flashrom/pull/62#issuecomment-568227728,"Change-Id: Ic4624315ad7c36cdbc8af508fd00fd3ad39dacd1
Signed-off-by: David Yang mmyangfl@gmail.com","Doesn't really work... only outputting a 65.5kb file from a 1Gbit chip
 sudo ./flashrom --programmer ch341a_spi --read dump.bin  -V

flashrom p1.0-132-gb8c861f on Linux 5.4.5-arch1-1 (x86_64)
flashrom is free software, get the source code at https://flashrom.org

flashrom was built with libpci 3.6.2, GCC 9.2.0, little endian
Command line (5 args): ./flashrom --programmer ch341a_spi --read dump.bin -V
Using clock_gettime for delay loops (clk_id: 1, resolution: 1ns).
Initializing ch341a_spi programmer
Device revision is 3.0.4
The following protocols are supported: SPI.
Probing for AMIC A25L05PT, 64 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for AMIC A25L05PU, 64 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for AMIC A25L10PT, 128 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for AMIC A25L10PU, 128 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for AMIC A25L20PT, 256 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for AMIC A25L20PU, 256 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for AMIC A25L40PT, 512 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for AMIC A25L40PU, 512 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for AMIC A25L80P, 1024 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for AMIC A25L16PT, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for AMIC A25L16PU, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for AMIC A25L512, 64 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for AMIC A25L010, 128 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for AMIC A25L020, 256 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for AMIC A25L040, 512 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for AMIC A25L080, 1024 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for AMIC A25L016, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for AMIC A25L032, 4096 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for AMIC A25LQ16, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for AMIC A25LQ032/A25LQ32A, 4096 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for AMIC A25LQ64, 8192 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Atmel AT25DF021, 256 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Atmel AT25DF021A, 256 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Atmel AT25DF041A, 512 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Atmel AT25DF081, 1024 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Atmel AT25DF081A, 1024 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Atmel AT25DF161, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Atmel AT25DF321, 4096 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Atmel AT25DF321A, 4096 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Atmel AT25DF641(A), 8192 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Atmel AT25DL081, 1024 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Atmel AT25DL161, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Atmel AT25DQ161, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Atmel AT25F512, 64 kB: probe_spi_at25f: id1 0xff, id2 0xff
Probing for Atmel AT25F512A, 64 kB: probe_spi_at25f: id1 0xff, id2 0xff
Probing for Atmel AT25F512B, 64 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Atmel AT25F1024(A), 128 kB: probe_spi_at25f: id1 0xff, id2 0xff
Probing for Atmel AT25F2048, 256 kB: probe_spi_at25f: id1 0xff, id2 0xff
Probing for Atmel AT25F4096, 512 kB: probe_spi_at25f: id1 0xff, id2 0xff
Probing for Atmel AT25FS010, 128 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Atmel AT25FS040, 512 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Atmel AT25SF041, 512 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Atmel AT25SF081, 1024 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Atmel AT25SF161, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for ATMEL AT25SL128A, 16384 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Atmel AT26DF041, 512 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Atmel AT26DF081A, 1024 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Atmel AT26DF161, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Atmel AT26DF161A, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Atmel AT26F004, 512 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Atmel AT45CS1282, 16896 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Atmel AT45DB011D, 128 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Atmel AT45DB021D, 256 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Atmel AT45DB041D, 512 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Atmel AT45DB081D, 1024 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Atmel AT45DB161D, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Atmel AT45DB321C, 4224 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Atmel AT45DB321D, 4096 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Atmel AT45DB321E, 4096 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Atmel AT45DB642D, 8192 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for ESMT F25L008A, 1024 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for ESMT F25L32PA, 4096 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25B05, 64 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25B05T, 64 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25P05, 64 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25B10, 128 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25B10T, 128 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25P10, 128 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25B20, 256 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25B20T, 256 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25P20, 256 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25B40, 512 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25B40T, 512 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25P40, 512 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25B80, 1024 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25B80T, 1024 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25P80, 1024 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25B16, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25B16T, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25P16, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25B32, 4096 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25B32T, 4096 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25P32, 4096 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25B64, 8192 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25B64T, 8192 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25P64, 8192 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25F05, 64 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25F10, 128 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25F20, 256 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25F40, 512 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25F80, 1024 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25F16, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25F32, 4096 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25F64, 8192 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25Q40, 512 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25Q80(A), 1024 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25Q16, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25Q32(A/B), 4096 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25Q64, 8192 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25Q128, 16384 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25QH16, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25QH32, 4096 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25QH64, 8192 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25QH128, 16384 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25S10, 128 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25S20, 256 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25S40, 512 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25S80, 1024 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25S16, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25S32, 4096 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon EN25S64, 8192 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for ESI ES25P40, 512 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for ESI ES25P80, 1024 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for ESI ES25P16, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for GigaDevice GD25LQ40, 512 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for GigaDevice GD25LQ80, 1024 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for GigaDevice GD25LQ16, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for GigaDevice GD25LQ32, 4096 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for GigaDevice GD25LQ64(B), 8192 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for GigaDevice GD25LQ128, 16384 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for GigaDevice GD25Q512, 64 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for GigaDevice GD25Q10, 128 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for GigaDevice GD25Q20(B), 256 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for GigaDevice GD25Q40(B), 512 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for GigaDevice GD25Q80(B), 1024 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for GigaDevice GD25Q16(B), 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for GigaDevice GD25Q32(B), 4096 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for GigaDevice GD25Q64(B), 8192 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for GigaDevice GD25B128B/GD25Q128B, 16384 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for GigaDevice GD25Q128C, 16384 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for GigaDevice GD25T80, 1024 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for GigaDevice GD25VQ21B, 256 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for GigaDevice GD25VQ40C, 512 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for GigaDevice GD25VQ41B, 512 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for GigaDevice GD25VQ80C, 1024 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for GigaDevice GD25VQ16C, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Intel 25F160S33B8, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Intel 25F160S33T8, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Intel 25F320S33B8, 4096 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Intel 25F320S33T8, 4096 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Intel 25F640S33B8, 8192 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Intel 25F640S33T8, 8192 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for ISSI IS25LP064, 8192 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for ISSI IS25LP128, 16384 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for ISSI IS25WP032, 4096 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for ISSI IS25WP064, 8192 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for ISSI IS25WP128, 16384 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Macronix MX23L1654, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Macronix MX23L3254, 4096 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Macronix MX23L6454, 8192 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Macronix MX23L12854, 16384 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Macronix MX25L512(E)/MX25V512(C), 64 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Macronix MX25L1005(C)/MX25L1006E, 128 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Macronix MX25L2005(C)/MX25L2006E, 256 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Macronix MX25L4005(A/C)/MX25L4006E, 512 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Macronix MX25L8005/MX25L8006E/MX25L8008E/MX25V8005, 1024 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Macronix MX25L1605, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Macronix MX25L1605A/MX25L1606E/MX25L1608E, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Macronix MX25L1605D/MX25L1608D/MX25L1673E, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Macronix MX25L1635D, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Macronix MX25L1635E, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Macronix MX25L3205(A), 4096 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Macronix MX25L3205D/MX25L3208D, 4096 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Macronix MX25L3206E/MX25L3208E, 4096 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Macronix MX25L3273E, 4096 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Macronix MX25L3235D, 4096 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Macronix MX25L6405, 8192 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Macronix MX25L6405D, 8192 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Macronix MX25L6406E/MX25L6408E, 8192 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Macronix MX25L6436E/MX25L6445E/MX25L6465E/MX25L6473E/MX25L6473F, 8192 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Macronix MX25L12805D, 16384 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Macronix MX25L12835F/MX25L12845E/MX25L12865E, 16384 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Macronix MX25L25635F, 32768 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Macronix MX66L51235F, 65536 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Macronix MX25U8032E, 1024 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Macronix MX25U1635E, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Macronix MX25U3235E/F, 4096 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Macronix MX25U6435E/F, 8192 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Macronix MX25U12835F, 16384 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Macronix MX25U51245G, 65536 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Macronix MX25L6495F, 8192 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Macronix MX25R6435F, 8192 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Micron/Numonyx/ST M25P05-A, 64 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Micron/Numonyx/ST M25P05, 64 kB: Ignoring RES in favour of RDID.
Probing for Micron/Numonyx/ST M25P10-A, 128 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Micron/Numonyx/ST M25P10, 128 kB: Ignoring RES in favour of RDID.
Probing for Micron/Numonyx/ST M25P20, 256 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Micron/Numonyx/ST M25P20-old, 256 kB: Ignoring RES in favour of RDID.
Probing for Micron/Numonyx/ST M25P40, 512 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Micron/Numonyx/ST M25P40-old, 512 kB: Ignoring RES in favour of RDID.
Probing for Micron/Numonyx/ST M25P80, 1024 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Micron/Numonyx/ST M25P16, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Micron/Numonyx/ST M25P32, 4096 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Micron/Numonyx/ST M25P64, 8192 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Micron/Numonyx/ST M25P128, 16384 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Micron/Numonyx/ST M25PE10, 128 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Micron/Numonyx/ST M25PE20, 256 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Micron/Numonyx/ST M25PE40, 512 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Micron/Numonyx/ST M25PE80, 1024 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Micron/Numonyx/ST M25PE16, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Micron/Numonyx/ST M25PX80, 1024 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Micron/Numonyx/ST M25PX16, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Micron/Numonyx/ST M25PX32, 4096 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Micron/Numonyx/ST M25PX64, 8192 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Micron/Numonyx/ST M45PE10, 128 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Micron/Numonyx/ST M45PE20, 256 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Micron/Numonyx/ST M45PE40, 512 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Micron/Numonyx/ST M45PE80, 1024 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Micron/Numonyx/ST M45PE16, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Micron/Numonyx/ST N25Q016, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Micron/Numonyx/ST N25Q032..1E, 4096 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Micron/Numonyx/ST N25Q032..3E, 4096 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Micron/Numonyx/ST N25Q064..1E, 8192 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Micron/Numonyx/ST N25Q064..3E, 8192 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Micron/Numonyx/ST N25Q128..1E, 16384 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Micron/Numonyx/ST N25Q128..3E, 16384 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Micron N25Q256..3E/MT25QL256, 32768 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Micron N25Q512..3E/MT25QL512, 65536 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Nantronics N25S10, 128 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Nantronics N25S20, 256 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Nantronics N25S40, 512 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Nantronics N25S80, 1024 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Nantronics N25S16, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for PMC Pm25LD256C, 32 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for PMC Pm25LD512(C), 64 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for PMC Pm25LD010(C), 128 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for PMC Pm25LD020(C), 256 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for PMC Pm25LD040(C), 512 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for PMC Pm25LQ020, 256 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for PMC Pm25LQ040, 512 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for PMC Pm25LQ080, 1024 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for PMC Pm25LQ016, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for PMC Pm25LQ032C, 4096 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for PMC Pm25LV512(A), 64 kB: probe_spi_res2: id1 0xff, id2 0xff
Probing for PMC Pm25LV010, 128 kB: probe_spi_res2: id1 0xff, id2 0xff
Probing for PMC Pm25LV010A, 128 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for PMC Pm25LV020, 256 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for PMC Pm25LV040, 512 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for PMC Pm25LV080B, 1024 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for PMC Pm25LV016B, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Sanyo LE25FW106, 128 kB: probe_spi_res2: id1 0xff, id2 0xff
Probing for Sanyo LE25FW406A, 512 kB: probe_spi_res2: id1 0xff, id2 0xff
Probing for Sanyo LE25FU406B, 512 kB: probe_spi_res2: id1 0xff, id2 0xff
Probing for Sanyo LE25FU406C/LE25U40CMC, 512 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Sanyo LE25FW203A, 256 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Sanyo LE25FW403A, 512 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Sanyo LE25FW418A, 512 kB: probe_spi_res2: id1 0xff, id2 0xff
Probing for Sanyo LE25FW806, 1024 kB: probe_spi_res2: id1 0xff, id2 0xff
Probing for Sanyo LE25FW808, 1024 kB: probe_spi_res2: id1 0xff, id2 0xff
Probing for Spansion S25FL004A, 512 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Spansion S25FL008A, 1024 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Spansion S25FL016A, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Spansion S25FL032A/P, 4096 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Spansion S25FL064A/P, 8192 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Spansion S25FL204K, 512 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Spansion S25FL208K, 1024 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Spansion S25FL116K/S25FL216K, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Spansion S25FL132K, 4096 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Spansion S25FL164K, 8192 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Spansion S25FL127S-64kB, 16384 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Spansion S25FL127S-256kB, 16384 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Spansion S25FL128P......0, 16384 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Spansion S25FL128P......1, 16384 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Spansion S25FL128S......0, 16384 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Spansion S25FL128S......1, 16384 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Spansion S25FL129P......0, 16384 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Spansion S25FL129P......1, 16384 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Spansion S25FL256S......0, 32768 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for SST SST25LF020A, 256 kB: probe_spi_rems: id1 0xff, id2 0xff
Probing for SST SST25LF040A, 512 kB: probe_spi_res2: id1 0xff, id2 0xff
Probing for SST SST25LF080(A), 1024 kB: probe_spi_res2: id1 0xff, id2 0xff
Probing for SST SST25VF512(A), 64 kB: probe_spi_rems: id1 0xff, id2 0xff
Probing for SST SST25VF010(A), 128 kB: probe_spi_rems: id1 0xff, id2 0xff
Probing for SST SST25VF020, 256 kB: probe_spi_rems: id1 0xff, id2 0xff
Probing for SST SST25VF020B, 256 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for SST SST25VF040, 512 kB: probe_spi_rems: id1 0xff, id2 0xff
Probing for SST SST25VF040B, 512 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for SST SST25VF040B.REMS, 512 kB: probe_spi_rems: id1 0xff, id2 0xff
Probing for SST SST25WF020A, 256 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for SST SST25WF040B, 512 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for SST SST25WF080B, 1024 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for SST SST25VF080B, 1024 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for SST SST25VF016B, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for SST SST25VF032B, 4096 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for SST SST25VF064C, 8192 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for SST SST26VF016B(A), 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for SST SST26VF032B(A), 4096 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for SST SST26VF064B(A), 8192 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for SST SST25WF512, 64 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for SST SST25WF010, 128 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for SST SST25WF020, 256 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for SST SST25WF040, 512 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for SST SST25WF080, 1024 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Winbond W25Q40.V, 512 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Winbond W25Q80.V, 1024 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Winbond W25Q16.V, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Winbond W25Q32.V, 4096 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Winbond W25Q64.V, 8192 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Winbond W25Q128.V, 16384 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Winbond W25Q128.V..M, 16384 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Winbond W25Q256.V, 32768 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Winbond W25Q20.W, 256 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Winbond W25Q40BW, 512 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Winbond W25Q80BW, 1024 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Winbond W25Q40EW, 512 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Winbond W25Q80EW, 1024 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Winbond W25Q16.W, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Winbond W25Q32.W, 4096 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Winbond W25Q64.W, 8192 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Winbond W25Q128.W, 16384 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Winbond W25X10, 128 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Winbond W25X20, 256 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Winbond W25X40, 512 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Winbond W25X80, 1024 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Winbond W25X16, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Winbond W25X32, 4096 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Winbond W25X64, 8192 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Winbond W25P80, 1024 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Winbond W25P16, 2048 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Winbond W25P32, 4096 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Zetta Device ZD25D20, 256 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Zetta Device ZD25D40, 512 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Unknown SFDP-capable chip, 0 kB: No SFDP signature found.
Probing for AMIC unknown AMIC SPI chip, 0 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Atmel unknown Atmel SPI chip, 0 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Eon unknown Eon SPI chip, 0 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Macronix unknown Macronix SPI chip, 0 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for PMC unknown PMC SPI chip, 0 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for SST unknown SST SPI chip, 0 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for ST unknown ST SPI chip, 0 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Sanyo unknown Sanyo SPI chip, 0 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Winbond unknown Winbond (ex Nexcom) SPI chip, 0 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Generic unknown SPI chip (RDID), 0 kB: RDID byte 0 parity violation. probe_spi_rdid_generic: id1 0xff, id2 0xc212
Probing for Generic unknown SPI chip (REMS), 0 kB: probe_spi_rems: id1 0xff, id2 0xff
Probing for Generic Generic NAND chip, 0 kB: page 0
SPI NAND returned 4f 4e 46 49 00 00 00 00 06 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 4d 41 43 52 4f 4e 49 58 20 20 20 20 4d 58 33 35 4c 46 31 47 45 34 41 42 20 20 20 20 20 20 20 20 c2 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 08 00 00 40 00 00 02 00 00 10 00 40 00 00 00 00 04 00 00 01 00 01 14 00 01 05 01 00 00 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0a 00 00 00 00 58 02 ac 0d 46 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 38 de 4f 4e 46 49 00 00 00 00 06 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 4d 41 43 52 4f 4e 49 58 20 20 20 20 4d 58 33 35 4c 46 31 47 45 34 41 42 20 20 20 20 20 20 20 20 c2 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 08 00 00 40 00 00 02 00 00 10 00 40 00 00 00 00 04 00 00 01 00 01 14 00 01 05 01 00 00 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0a 00 00 00 00 58 02 ac 0d 46 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 38 de
probe_spi_nand: Found Micron
Found MACRONIX flash chip ""MX35LF1G"" (64 kB, SPI) on ch341a_spi.
Found MACRONIX flash chip ""MX35LF1G"" (64 kB, SPI).
Reading flash... 2048 11 2047
page 61440
page 57344
page 53248
page 49152
page 45056
page 40960
page 36864
page 32768
page 28672
page 24576
page 20480
page 16384
page 12288
page 8192
page 4096
page 0
chunked 61440
page 57344
page 53248
page 49152
page 45056
page 40960
page 36864
page 32768
page 28672
page 24576
page 20480
page 16384
page 12288
page 8192
page 4096
page 0
chunked 57344
page 53248
page 49152
page 45056
page 40960
page 36864
page 32768
page 28672
page 24576
page 20480
page 16384
page 12288
page 8192
page 4096
page 0
chunked 53248
page 49152
page 45056
page 40960
page 36864
page 32768
page 28672
page 24576
page 20480
page 16384
page 12288
page 8192
page 4096
page 0
chunked 49152
page 45056
page 40960
page 36864
page 32768
page 28672
page 24576
page 20480
page 16384
page 12288
page 8192
page 4096
page 0
chunked 45056
page 40960
page 36864
page 32768
page 28672
page 24576
page 20480
page 16384
page 12288
page 8192
page 4096
page 0
chunked 40960
page 36864
page 32768
page 28672
page 24576
page 20480
page 16384
page 12288
page 8192
page 4096
page 0
chunked 36864
page 32768
page 28672
page 24576
page 20480
page 16384
page 12288
page 8192
page 4096
page 0
chunked 32768
page 28672
page 24576
page 20480
page 16384
page 12288
page 8192
page 4096
page 0
chunked 28672
page 24576
page 20480
page 16384
page 12288
page 8192
page 4096
page 0
chunked 24576
page 20480
page 16384
page 12288
page 8192
page 4096
page 0
chunked 20480
page 16384
page 12288
page 8192
page 4096
page 0
chunked 16384
page 12288
page 8192
page 4096
page 0
chunked 12288
page 8192
page 4096
page 0
chunked 8192
page 4096
page 0
chunked 4096
page 0
chunked 0
done.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,62,2018-10-31T02:19:44Z,2019-12-22T03:40:01Z,2019-12-22T03:40:01Z,CLOSED,False,599,157,18,https://github.com/yangfl,[RFC] Add initial support for SPI NAND chips,1,[],https://github.com/flashrom/flashrom/pull/62,https://github.com/yangfl,3,https://github.com/flashrom/flashrom/pull/62#issuecomment-568230078,"Change-Id: Ic4624315ad7c36cdbc8af508fd00fd3ad39dacd1
Signed-off-by: David Yang mmyangfl@gmail.com","Hi, this code is only prototype and I have no plan to improve it, feel free to use it however you want.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,63,2018-12-03T17:37:48Z,,2018-12-03T17:37:48Z,OPEN,False,68,3,7,https://github.com/tyzoid,Add progress indication API,3,[],https://github.com/flashrom/flashrom/pull/63,https://github.com/tyzoid,1,https://github.com/flashrom/flashrom/pull/63,Works towards resolving the progress issue in TODO: https://www.flashrom.org/Libflashrom#TODO,Works towards resolving the progress issue in TODO: https://www.flashrom.org/Libflashrom#TODO,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,64,2018-12-06T10:23:00Z,2022-04-28T06:07:47Z,2022-04-28T06:07:47Z,CLOSED,False,35,0,2,https://github.com/meron1122,Added f25l16pa,1,[],https://github.com/flashrom/flashrom/pull/64,https://github.com/meron1122,1,https://github.com/flashrom/flashrom/pull/64,Tested with me.,Tested with me.,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,64,2018-12-06T10:23:00Z,2022-04-28T06:07:47Z,2022-04-28T06:07:47Z,CLOSED,False,35,0,2,https://github.com/meron1122,Added f25l16pa,1,[],https://github.com/flashrom/flashrom/pull/64,https://github.com/felixsinger,2,https://github.com/flashrom/flashrom/pull/64#issuecomment-1111784016,Tested with me.,https://review.coreboot.org/c/flashrom/+/63912,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,65,2018-12-11T12:30:53Z,2020-05-20T11:00:46Z,2020-05-20T11:00:47Z,CLOSED,False,38,0,2,https://github.com/ThomCoder,flashchips: Add W25Q64JV support,1,[],https://github.com/flashrom/flashrom/pull/65,https://github.com/ThomCoder,1,https://github.com/flashrom/flashrom/pull/65,"Similar to W25Q128JVSM - just 8MB.
Tested using dediprog.
Change-Id: Ic5f2a5270d16f5649b682f4cd2fcbc07da65fe02
Signed-off-by: Thomas RIENOESSL thomas.rienoessl@bachmann.info","Similar to W25Q128JVSM - just 8MB.
Tested using dediprog.
Change-Id: Ic5f2a5270d16f5649b682f4cd2fcbc07da65fe02
Signed-off-by: Thomas RIENOESSL thomas.rienoessl@bachmann.info",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,65,2018-12-11T12:30:53Z,2020-05-20T11:00:46Z,2020-05-20T11:00:47Z,CLOSED,False,38,0,2,https://github.com/ThomCoder,flashchips: Add W25Q64JV support,1,[],https://github.com/flashrom/flashrom/pull/65,https://github.com/dhendrix,2,https://github.com/flashrom/flashrom/pull/65#issuecomment-450705005,"Similar to W25Q128JVSM - just 8MB.
Tested using dediprog.
Change-Id: Ic5f2a5270d16f5649b682f4cd2fcbc07da65fe02
Signed-off-by: Thomas RIENOESSL thomas.rienoessl@bachmann.info","This looks pretty good overall, just need to add sector erase.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,67,2018-12-19T12:10:01Z,2019-02-06T09:59:19Z,2019-02-06T09:59:19Z,CLOSED,False,620,12,16,https://github.com/hughsie,Wip/hughsie/warnings,8,[],https://github.com/flashrom/flashrom/pull/67,https://github.com/hughsie,1,https://github.com/flashrom/flashrom/pull/67,These fix some warnings I see. Only compile tested I'm afraid. I have a heap more cleanup patches if these are worthwhile.,These fix some warnings I see. Only compile tested I'm afraid. I have a heap more cleanup patches if these are worthwhile.,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,67,2018-12-19T12:10:01Z,2019-02-06T09:59:19Z,2019-02-06T09:59:19Z,CLOSED,False,620,12,16,https://github.com/hughsie,Wip/hughsie/warnings,8,[],https://github.com/flashrom/flashrom/pull/67,https://github.com/i-c-o-n,2,https://github.com/flashrom/flashrom/pull/67#issuecomment-449638877,These fix some warnings I see. Only compile tested I'm afraid. I have a heap more cleanup patches if these are worthwhile.,"Scratch that, this is not what I've been looking at when commenting.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,67,2018-12-19T12:10:01Z,2019-02-06T09:59:19Z,2019-02-06T09:59:19Z,CLOSED,False,620,12,16,https://github.com/hughsie,Wip/hughsie/warnings,8,[],https://github.com/flashrom/flashrom/pull/67,https://github.com/hughsie,3,https://github.com/flashrom/flashrom/pull/67#issuecomment-460672510,These fix some warnings I see. Only compile tested I'm afraid. I have a heap more cleanup patches if these are worthwhile.,"I couldn't find a way to see what changed between the original PR and your last push, is there any

I don't think so, I think when you rewrite the branch by force pushing to update the PR github ""forgets"" about the older commits. If you can grab that one last remaining patch I'll switch to Gerrit for future fixes.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,67,2018-12-19T12:10:01Z,2019-02-06T09:59:19Z,2019-02-06T09:59:19Z,CLOSED,False,620,12,16,https://github.com/hughsie,Wip/hughsie/warnings,8,[],https://github.com/flashrom/flashrom/pull/67,https://github.com/hughsie,4,https://github.com/flashrom/flashrom/pull/67#issuecomment-460964935,These fix some warnings I see. Only compile tested I'm afraid. I have a heap more cleanup patches if these are worthwhile.,I'll close this now I'm using Gerrit successfully. Thanks so far!,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,68,2018-12-21T18:37:23Z,,2019-01-12T13:26:58Z,OPEN,False,596,1,8,https://github.com/kukrimate,Add support for the Microchip MCP2210 USB to SPI bridge.,5,[],https://github.com/flashrom/flashrom/pull/68,https://github.com/kukrimate,1,https://github.com/flashrom/flashrom/pull/68,"Support for the MCP2210 USB to SPI bridge by Microchip.
Datasheet: link
I do not really know how to format this correctly for flashrom, but it is based on a simplified version of my library for the chip libmcp2210.
At the moment it uses the hidraw interface directly and libudev for finding the device. Should I use libusb for this, does it actually support HID devices?
I have tested this with the SPI flasher breakout board I designed for this chip. spi_flasher
I only tested it with a W25Q64.V 8MB and Pm25LD010(C) (128KB) and it seems to work, but there is still room for improvements.
Change-Id: If8aff228d2d442de7ccdc5a210e32e888f918b9e
Signed-off-by: Máté Kukri kukri.mate@gmail.com","Support for the MCP2210 USB to SPI bridge by Microchip.
Datasheet: link
I do not really know how to format this correctly for flashrom, but it is based on a simplified version of my library for the chip libmcp2210.
At the moment it uses the hidraw interface directly and libudev for finding the device. Should I use libusb for this, does it actually support HID devices?
I have tested this with the SPI flasher breakout board I designed for this chip. spi_flasher
I only tested it with a W25Q64.V 8MB and Pm25LD010(C) (128KB) and it seems to work, but there is still room for improvements.
Change-Id: If8aff228d2d442de7ccdc5a210e32e888f918b9e
Signed-off-by: Máté Kukri kukri.mate@gmail.com",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,68,2018-12-21T18:37:23Z,,2019-01-12T13:26:58Z,OPEN,False,596,1,8,https://github.com/kukrimate,Add support for the Microchip MCP2210 USB to SPI bridge.,5,[],https://github.com/flashrom/flashrom/pull/68,https://github.com/kukrimate,2,https://github.com/flashrom/flashrom/pull/68#issuecomment-449947484,"Support for the MCP2210 USB to SPI bridge by Microchip.
Datasheet: link
I do not really know how to format this correctly for flashrom, but it is based on a simplified version of my library for the chip libmcp2210.
At the moment it uses the hidraw interface directly and libudev for finding the device. Should I use libusb for this, does it actually support HID devices?
I have tested this with the SPI flasher breakout board I designed for this chip. spi_flasher
I only tested it with a W25Q64.V 8MB and Pm25LD010(C) (128KB) and it seems to work, but there is still room for improvements.
Change-Id: If8aff228d2d442de7ccdc5a210e32e888f918b9e
Signed-off-by: Máté Kukri kukri.mate@gmail.com","UPDATE: Now I have a version that works with libusb1.
[libusb support] kukrimate@bad9929)",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,71,2019-01-17T19:50:36Z,,2019-07-10T18:02:13Z,OPEN,False,1,1,1,https://github.com/jeremiah,Update ch341a_spi.c,1,[],https://github.com/flashrom/flashrom/pull/71,https://github.com/jeremiah,1,https://github.com/flashrom/flashrom/pull/71,Possible typo so changed libusb_set_debug to libusb_set_option.,Possible typo so changed libusb_set_debug to libusb_set_option.,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,74,2019-02-18T03:12:14Z,2020-10-23T07:55:49Z,2020-10-23T08:01:58Z,CLOSED,False,13513,7448,115,https://github.com/JakobPetersson,Add support for Fudan SPI flash chips,262,[],https://github.com/flashrom/flashrom/pull/74,https://github.com/JakobPetersson,1,https://github.com/flashrom/flashrom/pull/74,"Code is taken from existing PATCH by Stefan Tauner stefan.tauner@alumni.tuwien.ac.at
https://mail.coreboot.org/pipermail/flashrom/2016-June/014672.html
With the only change being the Manufacture ID being changed from 0x04h to 0xA1h.
I have only tested it with FM25F005 and it seems to work.
Signed-off-by: Jakob Petersson github@jakobpetersson.se","Code is taken from existing PATCH by Stefan Tauner stefan.tauner@alumni.tuwien.ac.at
https://mail.coreboot.org/pipermail/flashrom/2016-June/014672.html
With the only change being the Manufacture ID being changed from 0x04h to 0xA1h.
I have only tested it with FM25F005 and it seems to work.
Signed-off-by: Jakob Petersson github@jakobpetersson.se",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,74,2019-02-18T03:12:14Z,2020-10-23T07:55:49Z,2020-10-23T08:01:58Z,CLOSED,False,13513,7448,115,https://github.com/JakobPetersson,Add support for Fudan SPI flash chips,262,[],https://github.com/flashrom/flashrom/pull/74,https://github.com/septs,2,https://github.com/flashrom/flashrom/pull/74#issuecomment-707883284,"Code is taken from existing PATCH by Stefan Tauner stefan.tauner@alumni.tuwien.ac.at
https://mail.coreboot.org/pipermail/flashrom/2016-June/014672.html
With the only change being the Manufacture ID being changed from 0x04h to 0xA1h.
I have only tested it with FM25F005 and it seems to work.
Signed-off-by: Jakob Petersson github@jakobpetersson.se","i tested FM25F01 and it seems to work.
septs@CBDesktop02 ~/Projects/flashrom (Fudan-support) $ export CONFIG_GFXNVIDIA=0 CONFIG_NIC3COM=0 CONFIG_NICREALTEK=0 CONFIG_NICNATSEMI=0 CONFIG_NICINTEL=0 CONFIG_NICINTEL_SPI=0 CONFIG_NICINTEL_EEPROM=0 CONFIG_OGP_SPI=0 CONFIG_SATAMV=0 CONFIG_SATASII=0 CONFIG_DRKAISER=0 CONFIG_RAYER_SPI=0 CONFIG_INTERNAL=0 CONFIG_IT8212=0 CONFIG_ATAHPT=0 CONFIG_ATAVIA=0
septs@CBDesktop02 ~/Projects/flashrom (Fudan-support) $ make
septs@CBDesktop02 ~/Projects/flashrom (Fudan-support) $ ./flashrom --programmer ch341a_spi --read ../gl3520.dump
flashrom p1.0-262-g402a08b on Darwin 19.6.0 (x86_64)
flashrom is free software, get the source code at https://flashrom.org

Calibrating delay loop... OK.
Found Fudan flash chip ""FM25F01"" (128 kB, SPI) on ch341a_spi.
===
This flash part has status UNTESTED for operations: PROBE READ ERASE WRITE
The test status of this chip may have been updated in the latest development
version of flashrom. If you are running the latest development version,
please email a report to flashrom@flashrom.org if any of the above operations
work correctly for you with this flash chip. Please include the flashrom log
file for all operations you tested (see the man page for details), and mention
which mainboard or programmer you tested in the subject line.
Thanks for your help!
Reading flash... done.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,74,2019-02-18T03:12:14Z,2020-10-23T07:55:49Z,2020-10-23T08:01:58Z,CLOSED,False,13513,7448,115,https://github.com/JakobPetersson,Add support for Fudan SPI flash chips,262,[],https://github.com/flashrom/flashrom/pull/74,https://github.com/septs,3,https://github.com/flashrom/flashrom/pull/74#issuecomment-715082964,"Code is taken from existing PATCH by Stefan Tauner stefan.tauner@alumni.tuwien.ac.at
https://mail.coreboot.org/pipermail/flashrom/2016-June/014672.html
With the only change being the Manufacture ID being changed from 0x04h to 0xA1h.
I have only tested it with FM25F005 and it seems to work.
Signed-off-by: Jakob Petersson github@jakobpetersson.se","https://review.coreboot.org/c/flashrom/+/46513
@JakobPetersson plz close this issue.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,77,2019-03-24T04:11:35Z,,2021-03-03T13:30:54Z,OPEN,False,78,24,4,https://github.com/VladimirSkokov,Add support for security register and SBULK command on Macronix chips.,1,[],https://github.com/flashrom/flashrom/pull/77,https://github.com/VladimirSkokov,1,https://github.com/flashrom/flashrom/pull/77,"Change-Id: I49649e3668ca5a0d33e26a9405b1265dce544e2c
Signed-off-by: Vladimir Skokov vl_sk@mail.ru","Change-Id: I49649e3668ca5a0d33e26a9405b1265dce544e2c
Signed-off-by: Vladimir Skokov vl_sk@mail.ru",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,77,2019-03-24T04:11:35Z,,2021-03-03T13:30:54Z,OPEN,False,78,24,4,https://github.com/VladimirSkokov,Add support for security register and SBULK command on Macronix chips.,1,[],https://github.com/flashrom/flashrom/pull/77,https://github.com/TrexaSolutions,2,https://github.com/flashrom/flashrom/pull/77#issuecomment-633374056,"Change-Id: I49649e3668ca5a0d33e26a9405b1265dce544e2c
Signed-off-by: Vladimir Skokov vl_sk@mail.ru","Hi Vladimir, I'm having a probelm when I try to write my Macronix MX25L6473F  and it looks like Write Enable Latch (WEL) bit is the issue. Apparently, it must be set to 1 and it is set to 0. Reading a bit about this, I've realized that some macronix comes with write protection and I found some comments that SBULK must be used right after WREN.
Due so and based on the title of your commit, I though your flashrom branch could might help me but when I downloaded, compiled and tested it, I got the same writing error.
Could you confirm if your flashrom branch is related to this kind of issues and if there is anything else I should use in the command line to trigger SBULK command? Thanks
The error I get is:


Found Macronix flash chip ""MX25L6436E/MX25L6445E/MX25L6465E/MX25L6473E/MX25L6473F"" (8192 kB, SPI) on serprog.
Chip status register is 0x40.
Chip status register: Status Register Write Disable (SRWD, SRP, ...) is not set
Chip status register: Bit 6 is set
Chip status register: Block Protect 3 (BP3) is not set
Chip status register: Block Protect 2 (BP2) is not set
Chip status register: Block Protect 1 (BP1) is not set
Chip status register: Block Protect 0 (BP0) is not set
Chip status register: Write Enable Latch (WEL) is not set
Chip status register: Write In Progress (WIP/BUSY) is not set
This chip may contain one-time programmable memory. flashrom cannot read
and may never be able to write it, hence it may not be able to completely
clone the contents of this chip (see man page for details).


I was using ArduinoUno with frser-duino and Flashrom 1.2 on Ubuntu 20.04",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,77,2019-03-24T04:11:35Z,,2021-03-03T13:30:54Z,OPEN,False,78,24,4,https://github.com/VladimirSkokov,Add support for security register and SBULK command on Macronix chips.,1,[],https://github.com/flashrom/flashrom/pull/77,https://github.com/ln2max,3,https://github.com/flashrom/flashrom/pull/77#issuecomment-789715276,"Change-Id: I49649e3668ca5a0d33e26a9405b1265dce544e2c
Signed-off-by: Vladimir Skokov vl_sk@mail.ru","Hi Vladimir, is this relevant to #185 ?",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,78,2019-04-07T18:14:49Z,,2020-07-26T09:24:15Z,OPEN,False,43,0,3,https://github.com/dfear,Add support for Winbond W25Q64FW,3,[],https://github.com/flashrom/flashrom/pull/78,https://github.com/dfear,1,https://github.com/flashrom/flashrom/pull/78,"Similar to W25Q64FV -The differences are:

Device ID: 6017.
voltage: 1.8V.

flashchips.c & flashchips.h
Add support for W25Q64FW.","Similar to W25Q64FV -The differences are:

Device ID: 6017.
voltage: 1.8V.

flashchips.c & flashchips.h
Add support for W25Q64FW.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,78,2019-04-07T18:14:49Z,,2020-07-26T09:24:15Z,OPEN,False,43,0,3,https://github.com/dfear,Add support for Winbond W25Q64FW,3,[],https://github.com/flashrom/flashrom/pull/78,https://github.com/dfear,2,https://github.com/flashrom/flashrom/pull/78#issuecomment-480615996,"Similar to W25Q64FV -The differences are:

Device ID: 6017.
voltage: 1.8V.

flashchips.c & flashchips.h
Add support for W25Q64FW.","Datasheet:
https://www.winbond.com/resource-files/w25q64fw_revd_032513.pdf",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,78,2019-04-07T18:14:49Z,,2020-07-26T09:24:15Z,OPEN,False,43,0,3,https://github.com/dfear,Add support for Winbond W25Q64FW,3,[],https://github.com/flashrom/flashrom/pull/78,https://github.com/martonmiklos,3,https://github.com/flashrom/flashrom/pull/78#issuecomment-663964240,"Similar to W25Q64FV -The differences are:

Device ID: 6017.
voltage: 1.8V.

flashchips.c & flashchips.h
Add support for W25Q64FW.","@dfear  may I ask you to amend the following line to your commit message end:
Signed-off-by: David Fear david@dfear.co.uk
Then I could rebase and submit your PR to the gerrit for final code review.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,82,2019-05-23T20:18:37Z,2020-07-05T20:03:35Z,2020-07-05T20:03:36Z,CLOSED,False,20,4,3,https://github.com/EvilGremlin,Option to force write if image file is smaller than target chip.,4,[],https://github.com/flashrom/flashrom/pull/82,https://github.com/EvilGremlin,1,https://github.com/flashrom/flashrom/pull/82,"Tested with 25 series SPI flash on various TV boards, STBs and routers. It even somehow pass verification.
Unused area got filled with hex 00, though it doesn't matter, at least for my applications.
I don't really like my text messages and key ""-S"", so change it, if you have better ideas.","Tested with 25 series SPI flash on various TV boards, STBs and routers. It even somehow pass verification.
Unused area got filled with hex 00, though it doesn't matter, at least for my applications.
I don't really like my text messages and key ""-S"", so change it, if you have better ideas.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,82,2019-05-23T20:18:37Z,2020-07-05T20:03:35Z,2020-07-05T20:03:36Z,CLOSED,False,20,4,3,https://github.com/EvilGremlin,Option to force write if image file is smaller than target chip.,4,[],https://github.com/flashrom/flashrom/pull/82,https://github.com/Droid-MAX,2,https://github.com/flashrom/flashrom/pull/82#issuecomment-508635734,"Tested with 25 series SPI flash on various TV boards, STBs and routers. It even somehow pass verification.
Unused area got filled with hex 00, though it doesn't matter, at least for my applications.
I don't really like my text messages and key ""-S"", so change it, if you have better ideas.",This is why there have a layout programming function.,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,82,2019-05-23T20:18:37Z,2020-07-05T20:03:35Z,2020-07-05T20:03:36Z,CLOSED,False,20,4,3,https://github.com/EvilGremlin,Option to force write if image file is smaller than target chip.,4,[],https://github.com/flashrom/flashrom/pull/82,https://github.com/EvilGremlin,3,https://github.com/flashrom/flashrom/pull/82#issuecomment-508681073,"Tested with 25 series SPI flash on various TV boards, STBs and routers. It even somehow pass verification.
Unused area got filled with hex 00, though it doesn't matter, at least for my applications.
I don't really like my text messages and key ""-S"", so change it, if you have better ideas.",Layout is too much of a hassle for such elementary task.,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,82,2019-05-23T20:18:37Z,2020-07-05T20:03:35Z,2020-07-05T20:03:36Z,CLOSED,False,20,4,3,https://github.com/EvilGremlin,Option to force write if image file is smaller than target chip.,4,[],https://github.com/flashrom/flashrom/pull/82,https://github.com/Droid-MAX,4,https://github.com/flashrom/flashrom/pull/82#issuecomment-508701915,"Tested with 25 series SPI flash on various TV boards, STBs and routers. It even somehow pass verification.
Unused area got filled with hex 00, though it doesn't matter, at least for my applications.
I don't really like my text messages and key ""-S"", so change it, if you have better ideas.","May I think Layout is better than your ideas, When programming a single region, you only need to fill the layout of the rom file to a specified blank file with the same capacity as the flash chip, or directly use the firmware backed up by the programmer.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,82,2019-05-23T20:18:37Z,2020-07-05T20:03:35Z,2020-07-05T20:03:36Z,CLOSED,False,20,4,3,https://github.com/EvilGremlin,Option to force write if image file is smaller than target chip.,4,[],https://github.com/flashrom/flashrom/pull/82,https://github.com/EvilGremlin,5,https://github.com/flashrom/flashrom/pull/82#issuecomment-508775446,"Tested with 25 series SPI flash on various TV boards, STBs and routers. It even somehow pass verification.
Unused area got filled with hex 00, though it doesn't matter, at least for my applications.
I don't really like my text messages and key ""-S"", so change it, if you have better ideas.","Do you flash TVs and STBs everyday? How creating and using layout file is better than just two more symbols in command line? It's good if i need to place something in the middle of the flash, but to write something from the beginning ten times a day? I have a bunch of 25x64 that perfectly replaces 25x40, 25x16 and 25x32. You suggest to make layout files for all of them? Nope, thanks.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,82,2019-05-23T20:18:37Z,2020-07-05T20:03:35Z,2020-07-05T20:03:36Z,CLOSED,False,20,4,3,https://github.com/EvilGremlin,Option to force write if image file is smaller than target chip.,4,[],https://github.com/flashrom/flashrom/pull/82,https://github.com/Droid-MAX,6,https://github.com/flashrom/flashrom/pull/82#issuecomment-508786345,"Tested with 25 series SPI flash on various TV boards, STBs and routers. It even somehow pass verification.
Unused area got filled with hex 00, though it doesn't matter, at least for my applications.
I don't really like my text messages and key ""-S"", so change it, if you have better ideas.","This method is too reckless and not considered enough.Then I sincerely wish that your pull request can be merged by owner. In addition, in mass production, I think you should try a high-level programmer such as the RT809 series, so the efficiency should be higher. Thanks.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,82,2019-05-23T20:18:37Z,2020-07-05T20:03:35Z,2020-07-05T20:03:36Z,CLOSED,False,20,4,3,https://github.com/EvilGremlin,Option to force write if image file is smaller than target chip.,4,[],https://github.com/flashrom/flashrom/pull/82,https://github.com/EvilGremlin,7,https://github.com/flashrom/flashrom/pull/82#issuecomment-508825291,"Tested with 25 series SPI flash on various TV boards, STBs and routers. It even somehow pass verification.
Unused area got filled with hex 00, though it doesn't matter, at least for my applications.
I don't really like my text messages and key ""-S"", so change it, if you have better ideas.","How is it ""reckless""? Maybe when flashing on-board BIOS, but nothing could be reckless with external programmer. Most programming software doesn't even check for larger target chip size, only for smaller.
And i have fast programmer for NAND, EMMC, NOR etc, but i use mainly CH341 for 25 series chips, precisely because it's slow. Salvaged quite a few dumps from bad chips with it. Also, slow write holds better. And preferred LPT over fancy programmers before great advent of 341 :)",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,82,2019-05-23T20:18:37Z,2020-07-05T20:03:35Z,2020-07-05T20:03:36Z,CLOSED,False,20,4,3,https://github.com/EvilGremlin,Option to force write if image file is smaller than target chip.,4,[],https://github.com/flashrom/flashrom/pull/82,https://github.com/Nyarmith,8,https://github.com/flashrom/flashrom/pull/82#issuecomment-589303014,"Tested with 25 series SPI flash on various TV boards, STBs and routers. It even somehow pass verification.
Unused area got filled with hex 00, though it doesn't matter, at least for my applications.
I don't really like my text messages and key ""-S"", so change it, if you have better ideas.","This is a useful feature, thanks for making it.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,82,2019-05-23T20:18:37Z,2020-07-05T20:03:35Z,2020-07-05T20:03:36Z,CLOSED,False,20,4,3,https://github.com/EvilGremlin,Option to force write if image file is smaller than target chip.,4,[],https://github.com/flashrom/flashrom/pull/82,https://github.com/tionebrr,9,https://github.com/flashrom/flashrom/pull/82#issuecomment-623007153,"Tested with 25 series SPI flash on various TV boards, STBs and routers. It even somehow pass verification.
Unused area got filled with hex 00, though it doesn't matter, at least for my applications.
I don't really like my text messages and key ""-S"", so change it, if you have better ideas.","Thank you for this.
I don't understand the decision to NOT enable such a feature. I am using flashrom to flash u-boot and kernel on custom boards, and having to modify the layout file every time I make a new build is a bit of a hassle...",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,82,2019-05-23T20:18:37Z,2020-07-05T20:03:35Z,2020-07-05T20:03:36Z,CLOSED,False,20,4,3,https://github.com/EvilGremlin,Option to force write if image file is smaller than target chip.,4,[],https://github.com/flashrom/flashrom/pull/82,https://github.com/dhendrix,10,https://github.com/flashrom/flashrom/pull/82#issuecomment-623145329,"Tested with 25 series SPI flash on various TV boards, STBs and routers. It even somehow pass verification.
Unused area got filled with hex 00, though it doesn't matter, at least for my applications.
I don't really like my text messages and key ""-S"", so change it, if you have better ideas.","The main issue is that flashrom doesn't know where to place an image that is smaller than the ROM size. Does it place it at the end of the ROM which is the convention on x86 (non-IFD), or at the beginning at offset 0 like on some embedded platforms, or somewhere in between?
Choosing incorrectly results in a brick. Bear in mind that one of the main use cases for flashrom is in-system upgrades from the OS, i.e. not thru an external programmer like ch341, and recovery can be difficult.",True,{'THUMBS_UP': ['https://github.com/tionebrr']}
flashrom/flashrom,https://github.com/flashrom/flashrom,82,2019-05-23T20:18:37Z,2020-07-05T20:03:35Z,2020-07-05T20:03:36Z,CLOSED,False,20,4,3,https://github.com/EvilGremlin,Option to force write if image file is smaller than target chip.,4,[],https://github.com/flashrom/flashrom/pull/82,https://github.com/EvilGremlin,11,https://github.com/flashrom/flashrom/pull/82#issuecomment-623208320,"Tested with 25 series SPI flash on various TV boards, STBs and routers. It even somehow pass verification.
Unused area got filled with hex 00, though it doesn't matter, at least for my applications.
I don't really like my text messages and key ""-S"", so change it, if you have better ideas.","1: Well, if nothing explicitly specifeid - it'll default to 0, and i see no rason for it to default to anything else.
2: More like ALL embedded platforms have entry point at the beginning. x86 is white crow in that regard.
3. It's easy to block this option for flashing BIOS.
I have nothing against layout function, it solve it's tasks, but this is not a layout task. Making layouts for each firmware every day is just dumb.",True,{'THUMBS_UP': ['https://github.com/tionebrr']}
flashrom/flashrom,https://github.com/flashrom/flashrom,82,2019-05-23T20:18:37Z,2020-07-05T20:03:35Z,2020-07-05T20:03:36Z,CLOSED,False,20,4,3,https://github.com/EvilGremlin,Option to force write if image file is smaller than target chip.,4,[],https://github.com/flashrom/flashrom/pull/82,https://github.com/tionebrr,12,https://github.com/flashrom/flashrom/pull/82#issuecomment-623222102,"Tested with 25 series SPI flash on various TV boards, STBs and routers. It even somehow pass verification.
Unused area got filled with hex 00, though it doesn't matter, at least for my applications.
I don't really like my text messages and key ""-S"", so change it, if you have better ideas.","The layout function is great! Not the problem here.
I think that not enabling this feature ""as is"" may be the right decision for mainstream flashrom. I mean, even with huge giant WARNINGS, hitting Y ENTER is tempting, even when you know you shouldn't.
The @EvilGremlin branch is built very easily from source, but only people who know how to build and actually know what they are doing can forcefully write to flash when flashrom sniffs something isn't right.
There may be a middle solution here, you just want to make sure then that User somehow have a good understanding of what he's doing.
What about being able to tag the partition as partially writeable in the layout file?",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,82,2019-05-23T20:18:37Z,2020-07-05T20:03:35Z,2020-07-05T20:03:36Z,CLOSED,False,20,4,3,https://github.com/EvilGremlin,Option to force write if image file is smaller than target chip.,4,[],https://github.com/flashrom/flashrom/pull/82,https://github.com/wsuchy,13,https://github.com/flashrom/flashrom/pull/82#issuecomment-653833175,"Tested with 25 series SPI flash on various TV boards, STBs and routers. It even somehow pass verification.
Unused area got filled with hex 00, though it doesn't matter, at least for my applications.
I don't really like my text messages and key ""-S"", so change it, if you have better ideas.","Great job @EvilGremlin.
I wanted to use flashrom to unbrick my router, but found out that for some reason the program expects to have the binary payload to match exactly (not less) the target chip's size - a totally useless limitation for external programmer.
Unfortunately comments like ""This method is too reckless"" only shows the cancer that can be found in some open source projects. Thankfully you can buy now cheap IC programmers with software from China.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,82,2019-05-23T20:18:37Z,2020-07-05T20:03:35Z,2020-07-05T20:03:36Z,CLOSED,False,20,4,3,https://github.com/EvilGremlin,Option to force write if image file is smaller than target chip.,4,[],https://github.com/flashrom/flashrom/pull/82,https://github.com/dhendrix,14,https://github.com/flashrom/flashrom/pull/82#issuecomment-653932677,"Tested with 25 series SPI flash on various TV boards, STBs and routers. It even somehow pass verification.
Unused area got filled with hex 00, though it doesn't matter, at least for my applications.
I don't really like my text messages and key ""-S"", so change it, if you have better ideas.","The answers given to my questions above weren't convincing since they were just assumptions that fit a particular person's use case. And referring to somebody's valid concern about safety of this feature as a ""cancer"" certainly was not helpful and demonstrates a certain selfishness and immaturity.
Closing this out for now. Feel free to re-open with a proposal that doesn't come with a bunch of unanswered caveats.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,84,2019-06-04T21:37:42Z,2019-12-21T20:40:42Z,2021-03-20T15:52:31Z,CLOSED,False,325,17,8,https://github.com/evrinoma, Added ST95XXX chips support. ,1,[],https://github.com/flashrom/flashrom/pull/84,https://github.com/evrinoma,1,https://github.com/flashrom/flashrom/pull/84,"Hi
It's added support for ST95XXX chips . The following chipsets have been tested for read, erase and write operations:
[ STM95080  STM95160  STM95320  STM95640  STM95128  STM95256 ]
The chipsets(except st95xxxA125) can't respond with RDID instruction and for this reason was added FEATURE_IDENTITY_MISSING feature. The feature works with ""force"" option and disable rdid checking during read operation.
Also It's emulates erase operation for chipsets which don't support it.
Known issue: It doesn't support chipset STM95040 because memory size lower then 1K and the chipset has special instruction set for read operation.
Signed-off-by: Nikolay Nikolaev evrinoma@gmail.com","Hi
It's added support for ST95XXX chips . The following chipsets have been tested for read, erase and write operations:
[ STM95080  STM95160  STM95320  STM95640  STM95128  STM95256 ]
The chipsets(except st95xxxA125) can't respond with RDID instruction and for this reason was added FEATURE_IDENTITY_MISSING feature. The feature works with ""force"" option and disable rdid checking during read operation.
Also It's emulates erase operation for chipsets which don't support it.
Known issue: It doesn't support chipset STM95040 because memory size lower then 1K and the chipset has special instruction set for read operation.
Signed-off-by: Nikolay Nikolaev evrinoma@gmail.com",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,84,2019-06-04T21:37:42Z,2019-12-21T20:40:42Z,2021-03-20T15:52:31Z,CLOSED,False,325,17,8,https://github.com/evrinoma, Added ST95XXX chips support. ,1,[],https://github.com/flashrom/flashrom/pull/84,https://github.com/evrinoma,2,https://github.com/flashrom/flashrom/pull/84#issuecomment-559925714,"Hi
It's added support for ST95XXX chips . The following chipsets have been tested for read, erase and write operations:
[ STM95080  STM95160  STM95320  STM95640  STM95128  STM95256 ]
The chipsets(except st95xxxA125) can't respond with RDID instruction and for this reason was added FEATURE_IDENTITY_MISSING feature. The feature works with ""force"" option and disable rdid checking during read operation.
Also It's emulates erase operation for chipsets which don't support it.
Known issue: It doesn't support chipset STM95040 because memory size lower then 1K and the chipset has special instruction set for read operation.
Signed-off-by: Nikolay Nikolaev evrinoma@gmail.com","grudnevkv authored and i-c-o-n committed on 23 Jul 2019
Oh no
3d8868c
this guy сode it' amazing, and you applied  it
but you forgot to copy this feature spi_nbyte_program
that's why this code doesn 't work proper
half the code this - comments, constant, functions name - amazingly matches with
mine commits, that's why branch has conflicts.
Why you team does not accept my patch? my patch 've sened early and
cover all ST 95XXX chips",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,84,2019-06-04T21:37:42Z,2019-12-21T20:40:42Z,2021-03-20T15:52:31Z,CLOSED,False,325,17,8,https://github.com/evrinoma, Added ST95XXX chips support. ,1,[],https://github.com/flashrom/flashrom/pull/84,https://github.com/dhendrix,3,https://github.com/flashrom/flashrom/pull/84#issuecomment-560154278,"Hi
It's added support for ST95XXX chips . The following chipsets have been tested for read, erase and write operations:
[ STM95080  STM95160  STM95320  STM95640  STM95128  STM95256 ]
The chipsets(except st95xxxA125) can't respond with RDID instruction and for this reason was added FEATURE_IDENTITY_MISSING feature. The feature works with ""force"" option and disable rdid checking during read operation.
Also It's emulates erase operation for chipsets which don't support it.
Known issue: It doesn't support chipset STM95040 because memory size lower then 1K and the chipset has special instruction set for read operation.
Signed-off-by: Nikolay Nikolaev evrinoma@gmail.com","Hello Nikolay,
Thanks for the patch. There's a lot of merge conflicts and dead code that needs to be cleaned up, but once that's done we'll be happy to take a closer look.
The commit message also needs to be reformatted. We recently added some documentation on the wiki for this: https://www.flashrom.org/Development_Guidelines#Commit_message",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,84,2019-06-04T21:37:42Z,2019-12-21T20:40:42Z,2021-03-20T15:52:31Z,CLOSED,False,325,17,8,https://github.com/evrinoma, Added ST95XXX chips support. ,1,[],https://github.com/flashrom/flashrom/pull/84,https://github.com/evrinoma,4,https://github.com/flashrom/flashrom/pull/84#issuecomment-568183795,"Hi
It's added support for ST95XXX chips . The following chipsets have been tested for read, erase and write operations:
[ STM95080  STM95160  STM95320  STM95640  STM95128  STM95256 ]
The chipsets(except st95xxxA125) can't respond with RDID instruction and for this reason was added FEATURE_IDENTITY_MISSING feature. The feature works with ""force"" option and disable rdid checking during read operation.
Also It's emulates erase operation for chipsets which don't support it.
Known issue: It doesn't support chipset STM95040 because memory size lower then 1K and the chipset has special instruction set for read operation.
Signed-off-by: Nikolay Nikolaev evrinoma@gmail.com","./flashrom/flashrom -cM95M02 -f -V -p linux_spi:dev=/dev/spidev0.0,spispeed=5000 -w random.256K.bin
Using clock_gettime for delay loops (clk_id: 1, resolution: 1ns).
Initializing linux_spi programmer
Using device /dev/spidev0.0
Using 5000kHz clock
linux_spi_init: Using value from /sys/module/spidev/parameters/bufsiz as max buffer size.
linux_spi_init: max_kernel_buf_size: 4096
The following protocols are supported: SPI.
Probing for ST M95M02, 256 kB: RDID[probe_spi_st95: manID 0x20, modID 0x12, L 0x00, M 0x00, H 0x00]
No EEPROM/flash device found.

i've build flashrom from src master branch.The code doesn't work  proper",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,84,2019-06-04T21:37:42Z,2019-12-21T20:40:42Z,2021-03-20T15:52:31Z,CLOSED,False,325,17,8,https://github.com/evrinoma, Added ST95XXX chips support. ,1,[],https://github.com/flashrom/flashrom/pull/84,https://github.com/greg2891,5,https://github.com/flashrom/flashrom/pull/84#issuecomment-803385610,"Hi
It's added support for ST95XXX chips . The following chipsets have been tested for read, erase and write operations:
[ STM95080  STM95160  STM95320  STM95640  STM95128  STM95256 ]
The chipsets(except st95xxxA125) can't respond with RDID instruction and for this reason was added FEATURE_IDENTITY_MISSING feature. The feature works with ""force"" option and disable rdid checking during read operation.
Also It's emulates erase operation for chipsets which don't support it.
Known issue: It doesn't support chipset STM95040 because memory size lower then 1K and the chipset has special instruction set for read operation.
Signed-off-by: Nikolay Nikolaev evrinoma@gmail.com",i have no idea why the patch for M95640 was not included yet - @evrinoma  helped me previously and saved my life :) with his patch - please can anyone let us know why M95640 i still not in flashrom,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,85,2019-06-05T17:30:46Z,2019-10-04T05:45:36Z,2019-10-05T09:27:21Z,CLOSED,False,187,1,3,https://github.com/artur-rs,libflashrom: add querying functions with meson integration,1,[],https://github.com/flashrom/flashrom/pull/85,https://github.com/artur-rs,1,https://github.com/flashrom/flashrom/pull/85,"Change-Id: I49041b8fa5700dabe59fef0d2337339d34cd6c6f
Signed-off-by: Artur Raglis artur.raglis@3mdeb.com","Change-Id: I49041b8fa5700dabe59fef0d2337339d34cd6c6f
Signed-off-by: Artur Raglis artur.raglis@3mdeb.com",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,85,2019-06-05T17:30:46Z,2019-10-04T05:45:36Z,2019-10-05T09:27:21Z,CLOSED,False,187,1,3,https://github.com/artur-rs,libflashrom: add querying functions with meson integration,1,[],https://github.com/flashrom/flashrom/pull/85,https://github.com/pietrushnic,2,https://github.com/flashrom/flashrom/pull/85#issuecomment-504988809,"Change-Id: I49041b8fa5700dabe59fef0d2337339d34cd6c6f
Signed-off-by: Artur Raglis artur.raglis@3mdeb.com","@rminnich @dhendrix can you help us merging this change? If anything is missing we would be glad to fix that. If you think someone else should know that PR, then please CC.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,85,2019-06-05T17:30:46Z,2019-10-04T05:45:36Z,2019-10-05T09:27:21Z,CLOSED,False,187,1,3,https://github.com/artur-rs,libflashrom: add querying functions with meson integration,1,[],https://github.com/flashrom/flashrom/pull/85,https://github.com/dhendrix,3,https://github.com/flashrom/flashrom/pull/85#issuecomment-538246288,"Change-Id: I49041b8fa5700dabe59fef0d2337339d34cd6c6f
Signed-off-by: Artur Raglis artur.raglis@3mdeb.com",Merged upstream,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,85,2019-06-05T17:30:46Z,2019-10-04T05:45:36Z,2019-10-05T09:27:21Z,CLOSED,False,187,1,3,https://github.com/artur-rs,libflashrom: add querying functions with meson integration,1,[],https://github.com/flashrom/flashrom/pull/85,https://github.com/pietrushnic,4,https://github.com/flashrom/flashrom/pull/85#issuecomment-538633546,"Change-Id: I49041b8fa5700dabe59fef0d2337339d34cd6c6f
Signed-off-by: Artur Raglis artur.raglis@3mdeb.com",@dhendrix thank you very much.,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,86,2019-06-17T18:21:52Z,2019-06-21T19:15:12Z,2019-06-21T19:15:12Z,CLOSED,False,17,3,1,https://github.com/herrera-luis-alberto,Fix overflow error on dediprog reads.,1,[],https://github.com/flashrom/flashrom/pull/86,https://github.com/herrera-luis-alberto,1,https://github.com/flashrom/flashrom/pull/86,"prepare_rw_cmd can only encode reads where the number of transfers is less than
2^16. This condition is not checked for and results on read failures when the
chip size is larger than 16M.
This change updates dediprog_spi_read so that calls to dediprog_spi_bulk_read
are limited in size.
Tested:
Flashing works on 64M MX66L51235F.
$ sudo ./flashrom -c MX66L51235F -w bios.bin -p dediprog:spispeed=24M
flashrom v1.1-rc1-19-g5ca5523-dirty on Linux 4.19.20 (x86_64)
flashrom is free software, get the source code at https://flashrom.org
Using clock_gettime for delay loops (clk_id: 1, resolution: 1ns).
Incomplete/failed Command Receive Device String!
Found Macronix flash chip ""MX66L51235F"" (65536 kB, SPI) on dediprog.
Reading old flash chip contents... done.
Erasing and writing flash chip... Erase/write done.
Verifying flash... VERIFIED.
Change-Id: Id0563eb1cfb772597fbecb4b1cf9645a8ee93b8d
Signed-off-by: Luis Alberto Herrera luisalberto@google.com","prepare_rw_cmd can only encode reads where the number of transfers is less than
2^16. This condition is not checked for and results on read failures when the
chip size is larger than 16M.
This change updates dediprog_spi_read so that calls to dediprog_spi_bulk_read
are limited in size.
Tested:
Flashing works on 64M MX66L51235F.
$ sudo ./flashrom -c MX66L51235F -w bios.bin -p dediprog:spispeed=24M
flashrom v1.1-rc1-19-g5ca5523-dirty on Linux 4.19.20 (x86_64)
flashrom is free software, get the source code at https://flashrom.org
Using clock_gettime for delay loops (clk_id: 1, resolution: 1ns).
Incomplete/failed Command Receive Device String!
Found Macronix flash chip ""MX66L51235F"" (65536 kB, SPI) on dediprog.
Reading old flash chip contents... done.
Erasing and writing flash chip... Erase/write done.
Verifying flash... VERIFIED.
Change-Id: Id0563eb1cfb772597fbecb4b1cf9645a8ee93b8d
Signed-off-by: Luis Alberto Herrera luisalberto@google.com",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,86,2019-06-17T18:21:52Z,2019-06-21T19:15:12Z,2019-06-21T19:15:12Z,CLOSED,False,17,3,1,https://github.com/herrera-luis-alberto,Fix overflow error on dediprog reads.,1,[],https://github.com/flashrom/flashrom/pull/86,https://github.com/herrera-luis-alberto,2,https://github.com/flashrom/flashrom/pull/86#issuecomment-503358917,"prepare_rw_cmd can only encode reads where the number of transfers is less than
2^16. This condition is not checked for and results on read failures when the
chip size is larger than 16M.
This change updates dediprog_spi_read so that calls to dediprog_spi_bulk_read
are limited in size.
Tested:
Flashing works on 64M MX66L51235F.
$ sudo ./flashrom -c MX66L51235F -w bios.bin -p dediprog:spispeed=24M
flashrom v1.1-rc1-19-g5ca5523-dirty on Linux 4.19.20 (x86_64)
flashrom is free software, get the source code at https://flashrom.org
Using clock_gettime for delay loops (clk_id: 1, resolution: 1ns).
Incomplete/failed Command Receive Device String!
Found Macronix flash chip ""MX66L51235F"" (65536 kB, SPI) on dediprog.
Reading old flash chip contents... done.
Erasing and writing flash chip... Erase/write done.
Verifying flash... VERIFIED.
Change-Id: Id0563eb1cfb772597fbecb4b1cf9645a8ee93b8d
Signed-off-by: Luis Alberto Herrera luisalberto@google.com",ping,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,86,2019-06-17T18:21:52Z,2019-06-21T19:15:12Z,2019-06-21T19:15:12Z,CLOSED,False,17,3,1,https://github.com/herrera-luis-alberto,Fix overflow error on dediprog reads.,1,[],https://github.com/flashrom/flashrom/pull/86,https://github.com/herrera-luis-alberto,3,https://github.com/flashrom/flashrom/pull/86#issuecomment-504250008,"prepare_rw_cmd can only encode reads where the number of transfers is less than
2^16. This condition is not checked for and results on read failures when the
chip size is larger than 16M.
This change updates dediprog_spi_read so that calls to dediprog_spi_bulk_read
are limited in size.
Tested:
Flashing works on 64M MX66L51235F.
$ sudo ./flashrom -c MX66L51235F -w bios.bin -p dediprog:spispeed=24M
flashrom v1.1-rc1-19-g5ca5523-dirty on Linux 4.19.20 (x86_64)
flashrom is free software, get the source code at https://flashrom.org
Using clock_gettime for delay loops (clk_id: 1, resolution: 1ns).
Incomplete/failed Command Receive Device String!
Found Macronix flash chip ""MX66L51235F"" (65536 kB, SPI) on dediprog.
Reading old flash chip contents... done.
Erasing and writing flash chip... Erase/write done.
Verifying flash... VERIFIED.
Change-Id: Id0563eb1cfb772597fbecb4b1cf9645a8ee93b8d
Signed-off-by: Luis Alberto Herrera luisalberto@google.com",ping,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,86,2019-06-17T18:21:52Z,2019-06-21T19:15:12Z,2019-06-21T19:15:12Z,CLOSED,False,17,3,1,https://github.com/herrera-luis-alberto,Fix overflow error on dediprog reads.,1,[],https://github.com/flashrom/flashrom/pull/86,https://github.com/dhendrix,4,https://github.com/flashrom/flashrom/pull/86#issuecomment-504289619,"prepare_rw_cmd can only encode reads where the number of transfers is less than
2^16. This condition is not checked for and results on read failures when the
chip size is larger than 16M.
This change updates dediprog_spi_read so that calls to dediprog_spi_bulk_read
are limited in size.
Tested:
Flashing works on 64M MX66L51235F.
$ sudo ./flashrom -c MX66L51235F -w bios.bin -p dediprog:spispeed=24M
flashrom v1.1-rc1-19-g5ca5523-dirty on Linux 4.19.20 (x86_64)
flashrom is free software, get the source code at https://flashrom.org
Using clock_gettime for delay loops (clk_id: 1, resolution: 1ns).
Incomplete/failed Command Receive Device String!
Found Macronix flash chip ""MX66L51235F"" (65536 kB, SPI) on dediprog.
Reading old flash chip contents... done.
Erasing and writing flash chip... Erase/write done.
Verifying flash... VERIFIED.
Change-Id: Id0563eb1cfb772597fbecb4b1cf9645a8ee93b8d
Signed-off-by: Luis Alberto Herrera luisalberto@google.com","I think this is fixed by https://review.coreboot.org/c/flashrom/+/33613 and the next patch in that chain, both of which will be merged soon (likely tomorrow).",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,86,2019-06-17T18:21:52Z,2019-06-21T19:15:12Z,2019-06-21T19:15:12Z,CLOSED,False,17,3,1,https://github.com/herrera-luis-alberto,Fix overflow error on dediprog reads.,1,[],https://github.com/flashrom/flashrom/pull/86,https://github.com/herrera-luis-alberto,5,https://github.com/flashrom/flashrom/pull/86#issuecomment-504542150,"prepare_rw_cmd can only encode reads where the number of transfers is less than
2^16. This condition is not checked for and results on read failures when the
chip size is larger than 16M.
This change updates dediprog_spi_read so that calls to dediprog_spi_bulk_read
are limited in size.
Tested:
Flashing works on 64M MX66L51235F.
$ sudo ./flashrom -c MX66L51235F -w bios.bin -p dediprog:spispeed=24M
flashrom v1.1-rc1-19-g5ca5523-dirty on Linux 4.19.20 (x86_64)
flashrom is free software, get the source code at https://flashrom.org
Using clock_gettime for delay loops (clk_id: 1, resolution: 1ns).
Incomplete/failed Command Receive Device String!
Found Macronix flash chip ""MX66L51235F"" (65536 kB, SPI) on dediprog.
Reading old flash chip contents... done.
Erasing and writing flash chip... Erase/write done.
Verifying flash... VERIFIED.
Change-Id: Id0563eb1cfb772597fbecb4b1cf9645a8ee93b8d
Signed-off-by: Luis Alberto Herrera luisalberto@google.com",Thanks David. Glad is fixed. Will drop this pull request.,True,{'THUMBS_UP': ['https://github.com/dhendrix']}
flashrom/flashrom,https://github.com/flashrom/flashrom,87,2019-06-29T10:13:02Z,,2019-06-29T10:13:02Z,OPEN,False,23,0,2,https://github.com/steffenmauch,fixing compile problems on windows 10 using MinGW compiler,2,[],https://github.com/flashrom/flashrom/pull/87,https://github.com/steffenmauch,1,https://github.com/flashrom/flashrom/pull/87,Flashrom does not compile with mingw-w64\i686-7.3.0-win32 compiler. This patch fixes the issues.,Flashrom does not compile with mingw-w64\i686-7.3.0-win32 compiler. This patch fixes the issues.,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,88,2019-07-02T07:14:56Z,2020-01-30T07:36:11Z,2020-01-30T07:36:11Z,CLOSED,False,16,2,3,https://github.com/neheb,flashrom: Add support for ARC platform,1,[],https://github.com/flashrom/flashrom/pull/88,https://github.com/neheb,1,https://github.com/flashrom/flashrom/pull/88,Signed-off-by: Rosen Penev rosenp@gmail.com,Signed-off-by: Rosen Penev rosenp@gmail.com,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,88,2019-07-02T07:14:56Z,2020-01-30T07:36:11Z,2020-01-30T07:36:11Z,CLOSED,False,16,2,3,https://github.com/neheb,flashrom: Add support for ARC platform,1,[],https://github.com/flashrom/flashrom/pull/88,https://github.com/dhendrix,2,https://github.com/flashrom/flashrom/pull/88#issuecomment-538795677,Signed-off-by: Rosen Penev rosenp@gmail.com,"Thanks for the patch, I've sent this upstream for review: https://review.coreboot.org/c/flashrom/+/35831",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,88,2019-07-02T07:14:56Z,2020-01-30T07:36:11Z,2020-01-30T07:36:11Z,CLOSED,False,16,2,3,https://github.com/neheb,flashrom: Add support for ARC platform,1,[],https://github.com/flashrom/flashrom/pull/88,https://github.com/neheb,3,https://github.com/flashrom/flashrom/pull/88#issuecomment-580122205,Signed-off-by: Rosen Penev rosenp@gmail.com,This was merged.,True,{'THUMBS_UP': ['https://github.com/dhendrix']}
flashrom/flashrom,https://github.com/flashrom/flashrom,90,2019-07-17T17:05:10Z,2019-11-16T21:33:59Z,2019-11-16T21:34:00Z,CLOSED,False,1,0,1,https://github.com/ffontaine,linux_spi: add missing include,1,[],https://github.com/flashrom/flashrom/pull/90,https://github.com/ffontaine,1,https://github.com/flashrom/flashrom/pull/90,"Some defines (e.g. _IOC_SIZEBITS) are defined in linux/ioctl.h,
so it must be included before it is used, by SPI_IOC_MESSAGE
from linux/spi/spidev.h
Fixes build errors with the musl C library, as seen in these
Buildroot autobuilder failures:
http://autobuild.buildroot.org/results/2a3/2a3744007c630c267575a638ebcd83a4b97644f5/build-end.log
http://autobuild.buildroot.org/results/3de/3de936d9be79e151e66af15193084d82a0f2c04a/build-end.log

Signed-off-by: ""Yann E. MORIN"" yann.morin.1998@free.fr
[Retrieved from:
https://git.buildroot.net/buildroot/tree/package/flashrom/0001-spi.patch]
Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com","Some defines (e.g. _IOC_SIZEBITS) are defined in linux/ioctl.h,
so it must be included before it is used, by SPI_IOC_MESSAGE
from linux/spi/spidev.h
Fixes build errors with the musl C library, as seen in these
Buildroot autobuilder failures:
http://autobuild.buildroot.org/results/2a3/2a3744007c630c267575a638ebcd83a4b97644f5/build-end.log
http://autobuild.buildroot.org/results/3de/3de936d9be79e151e66af15193084d82a0f2c04a/build-end.log

Signed-off-by: ""Yann E. MORIN"" yann.morin.1998@free.fr
[Retrieved from:
https://git.buildroot.net/buildroot/tree/package/flashrom/0001-spi.patch]
Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,90,2019-07-17T17:05:10Z,2019-11-16T21:33:59Z,2019-11-16T21:34:00Z,CLOSED,False,1,0,1,https://github.com/ffontaine,linux_spi: add missing include,1,[],https://github.com/flashrom/flashrom/pull/90,https://github.com/dhendrix,2,https://github.com/flashrom/flashrom/pull/90#issuecomment-538795649,"Some defines (e.g. _IOC_SIZEBITS) are defined in linux/ioctl.h,
so it must be included before it is used, by SPI_IOC_MESSAGE
from linux/spi/spidev.h
Fixes build errors with the musl C library, as seen in these
Buildroot autobuilder failures:
http://autobuild.buildroot.org/results/2a3/2a3744007c630c267575a638ebcd83a4b97644f5/build-end.log
http://autobuild.buildroot.org/results/3de/3de936d9be79e151e66af15193084d82a0f2c04a/build-end.log

Signed-off-by: ""Yann E. MORIN"" yann.morin.1998@free.fr
[Retrieved from:
https://git.buildroot.net/buildroot/tree/package/flashrom/0001-spi.patch]
Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com","Thanks for the patch, and apologies for the long delay. I've sent it upstream for review and hope to have it merged soon: https://review.coreboot.org/c/flashrom/+/35830",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,90,2019-07-17T17:05:10Z,2019-11-16T21:33:59Z,2019-11-16T21:34:00Z,CLOSED,False,1,0,1,https://github.com/ffontaine,linux_spi: add missing include,1,[],https://github.com/flashrom/flashrom/pull/90,https://github.com/dhendrix,3,https://github.com/flashrom/flashrom/pull/90#issuecomment-554676489,"Some defines (e.g. _IOC_SIZEBITS) are defined in linux/ioctl.h,
so it must be included before it is used, by SPI_IOC_MESSAGE
from linux/spi/spidev.h
Fixes build errors with the musl C library, as seen in these
Buildroot autobuilder failures:
http://autobuild.buildroot.org/results/2a3/2a3744007c630c267575a638ebcd83a4b97644f5/build-end.log
http://autobuild.buildroot.org/results/3de/3de936d9be79e151e66af15193084d82a0f2c04a/build-end.log

Signed-off-by: ""Yann E. MORIN"" yann.morin.1998@free.fr
[Retrieved from:
https://git.buildroot.net/buildroot/tree/package/flashrom/0001-spi.patch]
Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com","Patch has been merged upstream, closing out.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,94,2019-08-20T02:20:58Z,,2019-10-04T05:39:42Z,OPEN,False,1,0,1,https://github.com/barbeque,Add stub definition for SST27SF256,1,[],https://github.com/flashrom/flashrom/pull/94,https://github.com/barbeque,1,https://github.com/flashrom/flashrom/pull/94,The SF512 is in here but not the SF256. I added the definition from the datasheet. Hoping to get some time this week to add my first flash chip family!,The SF512 is in here but not the SF256. I added the definition from the datasheet. Hoping to get some time this week to add my first flash chip family!,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,94,2019-08-20T02:20:58Z,,2019-10-04T05:39:42Z,OPEN,False,1,0,1,https://github.com/barbeque,Add stub definition for SST27SF256,1,[],https://github.com/flashrom/flashrom/pull/94,https://github.com/dhendrix,2,https://github.com/flashrom/flashrom/pull/94#issuecomment-538244677,The SF512 is in here but not the SF256. I added the definition from the datasheet. Hoping to get some time this week to add my first flash chip family!,Thanks! Please also see the patch submission guidelines for info about the sign-off procedure: https://www.flashrom.org/Development_Guidelines#Patch_submission,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,96,2019-08-26T15:12:00Z,,2020-01-13T15:18:19Z,OPEN,False,42,0,2,https://github.com/Tom435,added BY25D16 - Boya Microelectronics,1,[],https://github.com/flashrom/flashrom/pull/96,https://github.com/Tom435,1,https://github.com/flashrom/flashrom/pull/96,"Change-Id: Ibe24c3dc52c413ce9422deb9045773dfd042f9e0
Added the BY25D16 SPI flash memory in "" flashchips.c"" and "" flashchips.h"" and tried it on a FT2232H adapter.","Change-Id: Ibe24c3dc52c413ce9422deb9045773dfd042f9e0
Added the BY25D16 SPI flash memory in "" flashchips.c"" and "" flashchips.h"" and tried it on a FT2232H adapter.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,96,2019-08-26T15:12:00Z,,2020-01-13T15:18:19Z,OPEN,False,42,0,2,https://github.com/Tom435,added BY25D16 - Boya Microelectronics,1,[],https://github.com/flashrom/flashrom/pull/96,https://github.com/Tom435,2,https://github.com/flashrom/flashrom/pull/96#issuecomment-531758978,"Change-Id: Ibe24c3dc52c413ce9422deb9045773dfd042f9e0
Added the BY25D16 SPI flash memory in "" flashchips.c"" and "" flashchips.h"" and tried it on a FT2232H adapter.",Datasheet: http://www.boyamicro.com/Product/BY25D16_v1.8.pdf,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,98,2019-08-27T08:43:32Z,2022-04-28T06:33:28Z,2022-04-28T06:33:28Z,CLOSED,False,99,0,2,https://github.com/leeseungcheol,flashchips: Add XTX XT25F01D,3,[],https://github.com/flashrom/flashrom/pull/98,https://github.com/leeseungcheol,1,https://github.com/flashrom/flashrom/pull/98,Signed-off-by: Seungchul Lee john.lee@hardkernel.com,Signed-off-by: Seungchul Lee john.lee@hardkernel.com,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,98,2019-08-27T08:43:32Z,2022-04-28T06:33:28Z,2022-04-28T06:33:28Z,CLOSED,False,99,0,2,https://github.com/leeseungcheol,flashchips: Add XTX XT25F01D,3,[],https://github.com/flashrom/flashrom/pull/98,https://github.com/dhendrix,2,https://github.com/flashrom/flashrom/pull/98#issuecomment-538249893,Signed-off-by: Seungchul Lee john.lee@hardkernel.com,"This looks good, I'll send it upstream for merging this weekend. Thanks!",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,98,2019-08-27T08:43:32Z,2022-04-28T06:33:28Z,2022-04-28T06:33:28Z,CLOSED,False,99,0,2,https://github.com/leeseungcheol,flashchips: Add XTX XT25F01D,3,[],https://github.com/flashrom/flashrom/pull/98,https://github.com/dhendrix,3,https://github.com/flashrom/flashrom/pull/98#issuecomment-538768640,Signed-off-by: Seungchul Lee john.lee@hardkernel.com,"Do you know where I can find datasheets for the XTX flash parts? Their website doesn't seem to actually have them. I e-mailed them, but have not yet heard back.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,98,2019-08-27T08:43:32Z,2022-04-28T06:33:28Z,2022-04-28T06:33:28Z,CLOSED,False,99,0,2,https://github.com/leeseungcheol,flashchips: Add XTX XT25F01D,3,[],https://github.com/flashrom/flashrom/pull/98,https://github.com/leeseungcheol,4,https://github.com/flashrom/flashrom/pull/98#issuecomment-569892364,Signed-off-by: Seungchul Lee john.lee@hardkernel.com,I can send you the datasheet. Please let me know your email address.,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,98,2019-08-27T08:43:32Z,2022-04-28T06:33:28Z,2022-04-28T06:33:28Z,CLOSED,False,99,0,2,https://github.com/leeseungcheol,flashchips: Add XTX XT25F01D,3,[],https://github.com/flashrom/flashrom/pull/98,https://github.com/felixsinger,5,https://github.com/flashrom/flashrom/pull/98#issuecomment-1111800717,Signed-off-by: Seungchul Lee john.lee@hardkernel.com,"https://review.coreboot.org/c/flashrom/+/63915
https://review.coreboot.org/c/flashrom/+/63916
https://review.coreboot.org/c/flashrom/+/63917",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,100,2019-08-29T19:17:39Z,2019-08-29T19:51:10Z,2019-09-04T19:38:16Z,CLOSED,False,2,0,1,https://github.com/superm1,libflashrom.h Add includes for types not in all projects,1,[],https://github.com/flashrom/flashrom/pull/100,https://github.com/superm1,1,https://github.com/flashrom/flashrom/pull/100,"Fixes this in fwupd:
cc -Iplugins/flashrom/1ac62b6@@fu_plugin_flashrom@sha -Iplugins/flashrom -I../plugins/flashrom -Iplugins/flashrom/../.. -I../plugins/flashrom/../.. -Iplugins/flashrom/../../src -I../plugins/flashrom/../../src -Iplugins/flashrom/../../libfwupd -I../plugins/flashrom/../../libfwupd -Isubprojects/flashrom -I../subprojects/flashrom -Isrc -I/usr/include/libxmlb-1 -I/usr/include/libmount -I/usr/include/blkid -I/usr/include/uuid -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/gio-unix-2.0 -I/usr/include/gusb-1 -I/usr/include/libusb-1.0 -I/usr/include/libsoup-2.4 -I/usr/include/libxml2 -I/usr/include/gudev-1.0 -I/usr/include/x86_64-linux-gnu -I/usr/include/libftdi1 -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -Wextra -std=c99 -g -fstack-protector-strong -Waggregate-return -Wunused -Warray-bounds -Wcast-align -Wclobbered -Wdeclaration-after-statement -Wduplicated-branches -Wduplicated-cond -Wempty-body -Wformat=2 -Wformat-nonliteral -Wformat-security -Wformat-signedness -Wignored-qualifiers -Wimplicit-function-declaration -Winit-self -Wlogical-op -Wmissing-declarations -Wmissing-format-attribute -Wmissing-include-dirs -Wmissing-noreturn -Wmissing-parameter-type -Wmissing-prototypes -Wnested-externs -Wno-cast-function-type -Wno-address-of-packed-member -Wno-unknown-pragmas -Wno-deprecated-declarations -Wno-discarded-qualifiers -Wno-missing-field-initializers -Wno-strict-aliasing -Wno-suggest-attribute=format -Wno-unused-parameter -Wnull-dereference -Wold-style-definition -Woverride-init -Wpointer-arith -Wredundant-decls -Wreturn-type -Wshadow -Wsign-compare -Wstrict-aliasing -Wstrict-prototypes -Wswitch-default -Wtype-limits -Wundef -Wuninitialized -Wunused-but-set-variable -Wunused-variable -Wvla -Wwrite-strings -D_DEFAULT_SOURCE -DFWUPD_DISABLE_DEPRECATED -D_BSD_SOURCE -D_XOPEN_SOURCE=700 -fPIC -pthread '-DG_LOG_DOMAIN=""FuPluginFlashrom""' '-DLOCALSTATEDIR=""/usr/local/var""' -MD -MQ 'plugins/flashrom/1ac62b6@@fu_plugin_flashrom@sha/fu-plugin-flashrom.c.o' -MF 'plugins/flashrom/1ac62b6@@fu_plugin_flashrom@sha/fu-plugin-flashrom.c.o.d' -o 'plugins/flashrom/1ac62b6@@fu_plugin_flashrom@sha/fu-plugin-flashrom.c.o' -c ../plugins/flashrom/fu-plugin-flashrom.c
In file included from ../plugins/flashrom/fu-plugin-flashrom.c:27:
../subprojects/flashrom/libflashrom.h:57:72: error: unknown type name ‘bool’
   57 | void flashrom_flag_set(struct flashrom_flashctx *, enum flashrom_flag, bool value);
      |                                                                        ^~~~
../subprojects/flashrom/libflashrom.h:58:1: error: unknown type name ‘bool’
   58 | bool flashrom_flag_get(const struct flashrom_flashctx *, enum flashrom_flag);
      | ^~~~
../subprojects/flashrom/libflashrom.h:69:37: error: unknown type name ‘uint8_t’
   69 |   struct flashrom_flashctx *, const uint8_t *buf, size_t len);
      |                                     ^~~~~~~","Fixes this in fwupd:
cc -Iplugins/flashrom/1ac62b6@@fu_plugin_flashrom@sha -Iplugins/flashrom -I../plugins/flashrom -Iplugins/flashrom/../.. -I../plugins/flashrom/../.. -Iplugins/flashrom/../../src -I../plugins/flashrom/../../src -Iplugins/flashrom/../../libfwupd -I../plugins/flashrom/../../libfwupd -Isubprojects/flashrom -I../subprojects/flashrom -Isrc -I/usr/include/libxmlb-1 -I/usr/include/libmount -I/usr/include/blkid -I/usr/include/uuid -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/gio-unix-2.0 -I/usr/include/gusb-1 -I/usr/include/libusb-1.0 -I/usr/include/libsoup-2.4 -I/usr/include/libxml2 -I/usr/include/gudev-1.0 -I/usr/include/x86_64-linux-gnu -I/usr/include/libftdi1 -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -Wextra -std=c99 -g -fstack-protector-strong -Waggregate-return -Wunused -Warray-bounds -Wcast-align -Wclobbered -Wdeclaration-after-statement -Wduplicated-branches -Wduplicated-cond -Wempty-body -Wformat=2 -Wformat-nonliteral -Wformat-security -Wformat-signedness -Wignored-qualifiers -Wimplicit-function-declaration -Winit-self -Wlogical-op -Wmissing-declarations -Wmissing-format-attribute -Wmissing-include-dirs -Wmissing-noreturn -Wmissing-parameter-type -Wmissing-prototypes -Wnested-externs -Wno-cast-function-type -Wno-address-of-packed-member -Wno-unknown-pragmas -Wno-deprecated-declarations -Wno-discarded-qualifiers -Wno-missing-field-initializers -Wno-strict-aliasing -Wno-suggest-attribute=format -Wno-unused-parameter -Wnull-dereference -Wold-style-definition -Woverride-init -Wpointer-arith -Wredundant-decls -Wreturn-type -Wshadow -Wsign-compare -Wstrict-aliasing -Wstrict-prototypes -Wswitch-default -Wtype-limits -Wundef -Wuninitialized -Wunused-but-set-variable -Wunused-variable -Wvla -Wwrite-strings -D_DEFAULT_SOURCE -DFWUPD_DISABLE_DEPRECATED -D_BSD_SOURCE -D_XOPEN_SOURCE=700 -fPIC -pthread '-DG_LOG_DOMAIN=""FuPluginFlashrom""' '-DLOCALSTATEDIR=""/usr/local/var""' -MD -MQ 'plugins/flashrom/1ac62b6@@fu_plugin_flashrom@sha/fu-plugin-flashrom.c.o' -MF 'plugins/flashrom/1ac62b6@@fu_plugin_flashrom@sha/fu-plugin-flashrom.c.o.d' -o 'plugins/flashrom/1ac62b6@@fu_plugin_flashrom@sha/fu-plugin-flashrom.c.o' -c ../plugins/flashrom/fu-plugin-flashrom.c
In file included from ../plugins/flashrom/fu-plugin-flashrom.c:27:
../subprojects/flashrom/libflashrom.h:57:72: error: unknown type name ‘bool’
   57 | void flashrom_flag_set(struct flashrom_flashctx *, enum flashrom_flag, bool value);
      |                                                                        ^~~~
../subprojects/flashrom/libflashrom.h:58:1: error: unknown type name ‘bool’
   58 | bool flashrom_flag_get(const struct flashrom_flashctx *, enum flashrom_flag);
      | ^~~~
../subprojects/flashrom/libflashrom.h:69:37: error: unknown type name ‘uint8_t’
   69 |   struct flashrom_flashctx *, const uint8_t *buf, size_t len);
      |                                     ^~~~~~~",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,100,2019-08-29T19:17:39Z,2019-08-29T19:51:10Z,2019-09-04T19:38:16Z,CLOSED,False,2,0,1,https://github.com/superm1,libflashrom.h Add includes for types not in all projects,1,[],https://github.com/flashrom/flashrom/pull/100,https://github.com/superm1,2,https://github.com/flashrom/flashrom/pull/100#issuecomment-528053365,"Fixes this in fwupd:
cc -Iplugins/flashrom/1ac62b6@@fu_plugin_flashrom@sha -Iplugins/flashrom -I../plugins/flashrom -Iplugins/flashrom/../.. -I../plugins/flashrom/../.. -Iplugins/flashrom/../../src -I../plugins/flashrom/../../src -Iplugins/flashrom/../../libfwupd -I../plugins/flashrom/../../libfwupd -Isubprojects/flashrom -I../subprojects/flashrom -Isrc -I/usr/include/libxmlb-1 -I/usr/include/libmount -I/usr/include/blkid -I/usr/include/uuid -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/gio-unix-2.0 -I/usr/include/gusb-1 -I/usr/include/libusb-1.0 -I/usr/include/libsoup-2.4 -I/usr/include/libxml2 -I/usr/include/gudev-1.0 -I/usr/include/x86_64-linux-gnu -I/usr/include/libftdi1 -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -Wextra -std=c99 -g -fstack-protector-strong -Waggregate-return -Wunused -Warray-bounds -Wcast-align -Wclobbered -Wdeclaration-after-statement -Wduplicated-branches -Wduplicated-cond -Wempty-body -Wformat=2 -Wformat-nonliteral -Wformat-security -Wformat-signedness -Wignored-qualifiers -Wimplicit-function-declaration -Winit-self -Wlogical-op -Wmissing-declarations -Wmissing-format-attribute -Wmissing-include-dirs -Wmissing-noreturn -Wmissing-parameter-type -Wmissing-prototypes -Wnested-externs -Wno-cast-function-type -Wno-address-of-packed-member -Wno-unknown-pragmas -Wno-deprecated-declarations -Wno-discarded-qualifiers -Wno-missing-field-initializers -Wno-strict-aliasing -Wno-suggest-attribute=format -Wno-unused-parameter -Wnull-dereference -Wold-style-definition -Woverride-init -Wpointer-arith -Wredundant-decls -Wreturn-type -Wshadow -Wsign-compare -Wstrict-aliasing -Wstrict-prototypes -Wswitch-default -Wtype-limits -Wundef -Wuninitialized -Wunused-but-set-variable -Wunused-variable -Wvla -Wwrite-strings -D_DEFAULT_SOURCE -DFWUPD_DISABLE_DEPRECATED -D_BSD_SOURCE -D_XOPEN_SOURCE=700 -fPIC -pthread '-DG_LOG_DOMAIN=""FuPluginFlashrom""' '-DLOCALSTATEDIR=""/usr/local/var""' -MD -MQ 'plugins/flashrom/1ac62b6@@fu_plugin_flashrom@sha/fu-plugin-flashrom.c.o' -MF 'plugins/flashrom/1ac62b6@@fu_plugin_flashrom@sha/fu-plugin-flashrom.c.o.d' -o 'plugins/flashrom/1ac62b6@@fu_plugin_flashrom@sha/fu-plugin-flashrom.c.o' -c ../plugins/flashrom/fu-plugin-flashrom.c
In file included from ../plugins/flashrom/fu-plugin-flashrom.c:27:
../subprojects/flashrom/libflashrom.h:57:72: error: unknown type name ‘bool’
   57 | void flashrom_flag_set(struct flashrom_flashctx *, enum flashrom_flag, bool value);
      |                                                                        ^~~~
../subprojects/flashrom/libflashrom.h:58:1: error: unknown type name ‘bool’
   58 | bool flashrom_flag_get(const struct flashrom_flashctx *, enum flashrom_flag);
      | ^~~~
../subprojects/flashrom/libflashrom.h:69:37: error: unknown type name ‘uint8_t’
   69 |   struct flashrom_flashctx *, const uint8_t *buf, size_t len);
      |                                     ^~~~~~~",https://review.coreboot.org/c/flashrom/+/35155,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,101,2019-09-02T13:29:20Z,2020-08-04T12:51:24Z,2020-08-04T12:51:24Z,CLOSED,False,33,0,2,https://github.com/ioerror,Add support for Winbond W25X05CL,2,[],https://github.com/flashrom/flashrom/pull/101,https://github.com/ioerror,1,https://github.com/flashrom/flashrom/pull/101,"This commit adds support for the Winbond W25X05CL SPI flash chip.  The
Winbond W25X05CL is a 512K-BIT SPI flash chip with 4KB sectors.  I have
tested this patch with a Bus Pirate (v3b) and an in-circuit W25X05CL
flash chip using a test clip. Reading, erasing, and writing all function
as expected.
Datasheet: http://www.winbond.com/resource-files/w25x05cl_f%2004252017.pdf
Change-Id: I3d387b4bd711e7d80f0e912a7236e5a75515a1c7
Signed-off-by: Jacob Appelbaum jacob@appelbaum.net","This commit adds support for the Winbond W25X05CL SPI flash chip.  The
Winbond W25X05CL is a 512K-BIT SPI flash chip with 4KB sectors.  I have
tested this patch with a Bus Pirate (v3b) and an in-circuit W25X05CL
flash chip using a test clip. Reading, erasing, and writing all function
as expected.
Datasheet: http://www.winbond.com/resource-files/w25x05cl_f%2004252017.pdf
Change-Id: I3d387b4bd711e7d80f0e912a7236e5a75515a1c7
Signed-off-by: Jacob Appelbaum jacob@appelbaum.net",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,101,2019-09-02T13:29:20Z,2020-08-04T12:51:24Z,2020-08-04T12:51:24Z,CLOSED,False,33,0,2,https://github.com/ioerror,Add support for Winbond W25X05CL,2,[],https://github.com/flashrom/flashrom/pull/101,https://github.com/ioerror,2,https://github.com/flashrom/flashrom/pull/101#issuecomment-553577835,"This commit adds support for the Winbond W25X05CL SPI flash chip.  The
Winbond W25X05CL is a 512K-BIT SPI flash chip with 4KB sectors.  I have
tested this patch with a Bus Pirate (v3b) and an in-circuit W25X05CL
flash chip using a test clip. Reading, erasing, and writing all function
as expected.
Datasheet: http://www.winbond.com/resource-files/w25x05cl_f%2004252017.pdf
Change-Id: I3d387b4bd711e7d80f0e912a7236e5a75515a1c7
Signed-off-by: Jacob Appelbaum jacob@appelbaum.net",I've updated the voltage values at the suggestion of @martonmiklos and pushed the changes.,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,101,2019-09-02T13:29:20Z,2020-08-04T12:51:24Z,2020-08-04T12:51:24Z,CLOSED,False,33,0,2,https://github.com/ioerror,Add support for Winbond W25X05CL,2,[],https://github.com/flashrom/flashrom/pull/101,https://github.com/ioerror,3,https://github.com/flashrom/flashrom/pull/101#issuecomment-660477626,"This commit adds support for the Winbond W25X05CL SPI flash chip.  The
Winbond W25X05CL is a 512K-BIT SPI flash chip with 4KB sectors.  I have
tested this patch with a Bus Pirate (v3b) and an in-circuit W25X05CL
flash chip using a test clip. Reading, erasing, and writing all function
as expected.
Datasheet: http://www.winbond.com/resource-files/w25x05cl_f%2004252017.pdf
Change-Id: I3d387b4bd711e7d80f0e912a7236e5a75515a1c7
Signed-off-by: Jacob Appelbaum jacob@appelbaum.net",@martonmiklos Is there anything that would speed up merging this change?,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,101,2019-09-02T13:29:20Z,2020-08-04T12:51:24Z,2020-08-04T12:51:24Z,CLOSED,False,33,0,2,https://github.com/ioerror,Add support for Winbond W25X05CL,2,[],https://github.com/flashrom/flashrom/pull/101,https://github.com/martonmiklos,4,https://github.com/flashrom/flashrom/pull/101#issuecomment-660519548,"This commit adds support for the Winbond W25X05CL SPI flash chip.  The
Winbond W25X05CL is a 512K-BIT SPI flash chip with 4KB sectors.  I have
tested this patch with a Bus Pirate (v3b) and an in-circuit W25X05CL
flash chip using a test clip. Reading, erasing, and writing all function
as expected.
Datasheet: http://www.winbond.com/resource-files/w25x05cl_f%2004252017.pdf
Change-Id: I3d387b4bd711e7d80f0e912a7236e5a75515a1c7
Signed-off-by: Jacob Appelbaum jacob@appelbaum.net","Hello @ioerror
I apologise for the lack of reply. I am good with the updated voltage levels.
As you may know the flashrom codereview process takes place at gerrit:
https://www.flashrom.org/Development_Guidelines#Using_Github
I have sqashed and submitted you change to gerrit:
https://review.coreboot.org/c/flashrom/+/43573
I would suggest you to create a gerrit account and subscribe to the change just in case if someone has further review comments you could answer there directly and then I will not need to be the mailman ;).",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,101,2019-09-02T13:29:20Z,2020-08-04T12:51:24Z,2020-08-04T12:51:24Z,CLOSED,False,33,0,2,https://github.com/ioerror,Add support for Winbond W25X05CL,2,[],https://github.com/flashrom/flashrom/pull/101,https://github.com/martonmiklos,5,https://github.com/flashrom/flashrom/pull/101#issuecomment-663963570,"This commit adds support for the Winbond W25X05CL SPI flash chip.  The
Winbond W25X05CL is a 512K-BIT SPI flash chip with 4KB sectors.  I have
tested this patch with a Bus Pirate (v3b) and an in-circuit W25X05CL
flash chip using a test clip. Reading, erasing, and writing all function
as expected.
Datasheet: http://www.winbond.com/resource-files/w25x05cl_f%2004252017.pdf
Change-Id: I3d387b4bd711e7d80f0e912a7236e5a75515a1c7
Signed-off-by: Jacob Appelbaum jacob@appelbaum.net","@ioerror your PR just got merged on gerrit.
Many thanks for your contribution and we appreciate your time spent working on the flashrom project!
Feel free to close this PR.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,101,2019-09-02T13:29:20Z,2020-08-04T12:51:24Z,2020-08-04T12:51:24Z,CLOSED,False,33,0,2,https://github.com/ioerror,Add support for Winbond W25X05CL,2,[],https://github.com/flashrom/flashrom/pull/101,https://github.com/ioerror,6,https://github.com/flashrom/flashrom/pull/101#issuecomment-668577317,"This commit adds support for the Winbond W25X05CL SPI flash chip.  The
Winbond W25X05CL is a 512K-BIT SPI flash chip with 4KB sectors.  I have
tested this patch with a Bus Pirate (v3b) and an in-circuit W25X05CL
flash chip using a test clip. Reading, erasing, and writing all function
as expected.
Datasheet: http://www.winbond.com/resource-files/w25x05cl_f%2004252017.pdf
Change-Id: I3d387b4bd711e7d80f0e912a7236e5a75515a1c7
Signed-off-by: Jacob Appelbaum jacob@appelbaum.net",Thank you!,True,{'THUMBS_UP': ['https://github.com/martonmiklos']}
flashrom/flashrom,https://github.com/flashrom/flashrom,102,2019-09-08T02:35:47Z,2021-09-17T23:53:19Z,2021-09-17T23:53:19Z,CLOSED,False,38,0,2,https://github.com/nsayer,Add support for the Winbobd W25Q64,139,[],https://github.com/flashrom/flashrom/pull/102,https://github.com/nsayer,1,https://github.com/flashrom/flashrom/pull/102,,,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,102,2019-09-08T02:35:47Z,2021-09-17T23:53:19Z,2021-09-17T23:53:19Z,CLOSED,False,38,0,2,https://github.com/nsayer,Add support for the Winbobd W25Q64,139,[],https://github.com/flashrom/flashrom/pull/102,https://github.com/dhendrix,2,https://github.com/flashrom/flashrom/pull/102#issuecomment-530247515,,"Looks good, but the commit message needs some work:

Sign-off is a hard requirement (https://www.coreboot.org/Development_Guidelines#Sign-off_Procedure)
Split it so it's not one long summary line.
The new device ID should be mentioned somewhere",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,102,2019-09-08T02:35:47Z,2021-09-17T23:53:19Z,2021-09-17T23:53:19Z,CLOSED,False,38,0,2,https://github.com/nsayer,Add support for the Winbobd W25Q64,139,[],https://github.com/flashrom/flashrom/pull/102,https://github.com/nsayer,3,https://github.com/flashrom/flashrom/pull/102#issuecomment-658463982,,"Oops. I let this fester a while.
I'm willing to sign off in any way you wish me to (I have read the statement).
I'm willing to edit the commit message.... but I don't know how. If you tell me how to edit the commit message, I'll happily do it.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,102,2019-09-08T02:35:47Z,2021-09-17T23:53:19Z,2021-09-17T23:53:19Z,CLOSED,False,38,0,2,https://github.com/nsayer,Add support for the Winbobd W25Q64,139,[],https://github.com/flashrom/flashrom/pull/102,https://github.com/nsayer,4,https://github.com/flashrom/flashrom/pull/102#issuecomment-658472456,,"Holy christ, this went pear-shaped in a hurry.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,102,2019-09-08T02:35:47Z,2021-09-17T23:53:19Z,2021-09-17T23:53:19Z,CLOSED,False,38,0,2,https://github.com/nsayer,Add support for the Winbobd W25Q64,139,[],https://github.com/flashrom/flashrom/pull/102,https://github.com/nsayer,5,https://github.com/flashrom/flashrom/pull/102#issuecomment-922138183,,I'm going to start over.,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,104,2019-10-05T07:25:25Z,2019-10-05T07:52:41Z,2019-10-05T07:52:41Z,CLOSED,False,12,1,2,https://github.com/net147,Fix compilation if CONFIG_INTERNAL=no,1,[],https://github.com/flashrom/flashrom/pull/104,https://github.com/net147,1,https://github.com/flashrom/flashrom/pull/104,"Change-Id: Id83f51c759cdb3b0d2eea03f252f309ab1514080
Signed-off-by: Jonathan Liu net147@gmail.com","Change-Id: Id83f51c759cdb3b0d2eea03f252f309ab1514080
Signed-off-by: Jonathan Liu net147@gmail.com",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,107,2019-10-30T07:42:52Z,2022-04-28T06:39:19Z,2022-04-28T06:39:19Z,CLOSED,False,8,1,2,https://github.com/russdill,ft2232_spi: Add support for Tin Can Tools Flyswatter/Flyswatter 2,1,[],https://github.com/flashrom/flashrom/pull/107,https://github.com/russdill,1,https://github.com/flashrom/flashrom/pull/107,"The Tin Can Tools Flyswatter and Flyswatter 2 have a FT2232H
with a  JTAG interface wired to port A. The buffers that drive the
JTAG pins need to be enabled with an nOE signal from the
FT2232H ADBUS6 and ADBUS7 pins.
Flyswatter has an ARM-14 JTAG interface and Flyswatter 2 has
an ARM-20 JTAG interface.
Change-Id: I56b1fb76dcda32bb02980cd54a2853506bfc9dfd
Signed-off-by: Russ Dill Russ.Dill@gmail.com","The Tin Can Tools Flyswatter and Flyswatter 2 have a FT2232H
with a  JTAG interface wired to port A. The buffers that drive the
JTAG pins need to be enabled with an nOE signal from the
FT2232H ADBUS6 and ADBUS7 pins.
Flyswatter has an ARM-14 JTAG interface and Flyswatter 2 has
an ARM-20 JTAG interface.
Change-Id: I56b1fb76dcda32bb02980cd54a2853506bfc9dfd
Signed-off-by: Russ Dill Russ.Dill@gmail.com",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,107,2019-10-30T07:42:52Z,2022-04-28T06:39:19Z,2022-04-28T06:39:19Z,CLOSED,False,8,1,2,https://github.com/russdill,ft2232_spi: Add support for Tin Can Tools Flyswatter/Flyswatter 2,1,[],https://github.com/flashrom/flashrom/pull/107,https://github.com/dhendrix,2,https://github.com/flashrom/flashrom/pull/107#issuecomment-554694987,"The Tin Can Tools Flyswatter and Flyswatter 2 have a FT2232H
with a  JTAG interface wired to port A. The buffers that drive the
JTAG pins need to be enabled with an nOE signal from the
FT2232H ADBUS6 and ADBUS7 pins.
Flyswatter has an ARM-14 JTAG interface and Flyswatter 2 has
an ARM-20 JTAG interface.
Change-Id: I56b1fb76dcda32bb02980cd54a2853506bfc9dfd
Signed-off-by: Russ Dill Russ.Dill@gmail.com","Thanks! This looks pretty straight forward and should be an easy merge.
I've sent it upstream for final review: https://review.coreboot.org/c/flashrom/+/36896",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,108,2019-11-04T20:21:19Z,2020-01-19T16:19:29Z,2020-01-19T16:19:30Z,CLOSED,False,39,0,2,https://github.com/darkarnium,flashchips: Add AT25SF321,1,[],https://github.com/flashrom/flashrom/pull/108,https://github.com/darkarnium,1,https://github.com/flashrom/flashrom/pull/108,"This commit adds support for the Adesto AT25SF321 SPI flash chip. Probe
and read operations have been tested via FT2232H interface, but writes
have not been verified.
Datasheet is available at the following URL:
https://www.adestotech.com/wp-content/uploads/DS-AT25SF321_047.pdf
Signed-off-by: Peter Adkins pete@kernelpicnic.net","This commit adds support for the Adesto AT25SF321 SPI flash chip. Probe
and read operations have been tested via FT2232H interface, but writes
have not been verified.
Datasheet is available at the following URL:
https://www.adestotech.com/wp-content/uploads/DS-AT25SF321_047.pdf
Signed-off-by: Peter Adkins pete@kernelpicnic.net",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,108,2019-11-04T20:21:19Z,2020-01-19T16:19:29Z,2020-01-19T16:19:30Z,CLOSED,False,39,0,2,https://github.com/darkarnium,flashchips: Add AT25SF321,1,[],https://github.com/flashrom/flashrom/pull/108,https://github.com/dhendrix,2,https://github.com/flashrom/flashrom/pull/108#issuecomment-554695411,"This commit adds support for the Adesto AT25SF321 SPI flash chip. Probe
and read operations have been tested via FT2232H interface, but writes
have not been verified.
Datasheet is available at the following URL:
https://www.adestotech.com/wp-content/uploads/DS-AT25SF321_047.pdf
Signed-off-by: Peter Adkins pete@kernelpicnic.net","Thanks! This patch looks good at a glance, and should be pretty easy to get merged.
I've sent it upstream for final review: https://review.coreboot.org/c/flashrom/+/36904",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,108,2019-11-04T20:21:19Z,2020-01-19T16:19:29Z,2020-01-19T16:19:30Z,CLOSED,False,39,0,2,https://github.com/darkarnium,flashchips: Add AT25SF321,1,[],https://github.com/flashrom/flashrom/pull/108,https://github.com/darkarnium,3,https://github.com/flashrom/flashrom/pull/108#issuecomment-576020854,"This commit adds support for the Adesto AT25SF321 SPI flash chip. Probe
and read operations have been tested via FT2232H interface, but writes
have not been verified.
Datasheet is available at the following URL:
https://www.adestotech.com/wp-content/uploads/DS-AT25SF321_047.pdf
Signed-off-by: Peter Adkins pete@kernelpicnic.net","Hey there,
It looks like this has been merged into master (according to Gerrit) so I'll close this one out :)

https://review.coreboot.org/c/flashrom/+/36904

Cheers,
Peter",True,{'THUMBS_UP': ['https://github.com/dhendrix']}
flashrom/flashrom,https://github.com/flashrom/flashrom,110,2019-11-26T00:39:46Z,,2019-12-01T22:22:01Z,OPEN,False,23,7,2,https://github.com/inakypg,dediprog: add serial argument,1,[],https://github.com/flashrom/flashrom/pull/110,https://github.com/inakypg,1,https://github.com/flashrom/flashrom/pull/110,"A quick hack to be able to select dediprogs by USB serial argument by
just adding a @serial_number parameter to dediprog_open() and using it
in preference to @id if available (since it is more specific).
Change-Id: I9cdfbce6cf941c16bf7b7364aa4166b91369e661
Signed-off-by: Inaky Perez-Gonzalez inaky.perez-gonzalez@intel.com","A quick hack to be able to select dediprogs by USB serial argument by
just adding a @serial_number parameter to dediprog_open() and using it
in preference to @id if available (since it is more specific).
Change-Id: I9cdfbce6cf941c16bf7b7364aa4166b91369e661
Signed-off-by: Inaky Perez-Gonzalez inaky.perez-gonzalez@intel.com",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,110,2019-11-26T00:39:46Z,,2019-12-01T22:22:01Z,OPEN,False,23,7,2,https://github.com/inakypg,dediprog: add serial argument,1,[],https://github.com/flashrom/flashrom/pull/110,https://github.com/dhendrix,2,https://github.com/flashrom/flashrom/pull/110#issuecomment-560167031,"A quick hack to be able to select dediprogs by USB serial argument by
just adding a @serial_number parameter to dediprog_open() and using it
in preference to @id if available (since it is more specific).
Change-Id: I9cdfbce6cf941c16bf7b7364aa4166b91369e661
Signed-off-by: Inaky Perez-Gonzalez inaky.perez-gonzalez@intel.com","Thanks! I had a quick look and this is pretty simple and straightforward. I've sent this patch upstream for review, hopefully we'll get it merged soon: https://review.coreboot.org/c/flashrom/+/37406",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,114,2019-12-11T20:40:27Z,,2020-07-05T05:28:59Z,OPEN,False,39,0,2,https://github.com/0xDouze,flashchips: Added MX25U12873F,1,[],https://github.com/flashrom/flashrom/pull/114,https://github.com/0xDouze,1,https://github.com/flashrom/flashrom/pull/114,"This commit adds support for the Macronix MX25U12873F spi flash chip.
It is similar to the MX25U12835E and shares its RDID, but has no WP# pin.
Probe, read, write and erase have been tested on hardware.
Datasheet is available at the following URL:
https://www.macronix.com/Lists/Datasheet/Attachments/7446/MX25U12873F,%201.8V,%20128Mb,%20v1.2.pdf
Change-Id: I3047b3eda389d4c535376f6747e67de62995e82d
Signed-off-by: Kevin Tavukciyan kevintavukciyan@gmail.com","This commit adds support for the Macronix MX25U12873F spi flash chip.
It is similar to the MX25U12835E and shares its RDID, but has no WP# pin.
Probe, read, write and erase have been tested on hardware.
Datasheet is available at the following URL:
https://www.macronix.com/Lists/Datasheet/Attachments/7446/MX25U12873F,%201.8V,%20128Mb,%20v1.2.pdf
Change-Id: I3047b3eda389d4c535376f6747e67de62995e82d
Signed-off-by: Kevin Tavukciyan kevintavukciyan@gmail.com",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,114,2019-12-11T20:40:27Z,,2020-07-05T05:28:59Z,OPEN,False,39,0,2,https://github.com/0xDouze,flashchips: Added MX25U12873F,1,[],https://github.com/flashrom/flashrom/pull/114,https://github.com/YeaTheMen,2,https://github.com/flashrom/flashrom/pull/114#issuecomment-645724921,"This commit adds support for the Macronix MX25U12873F spi flash chip.
It is similar to the MX25U12835E and shares its RDID, but has no WP# pin.
Probe, read, write and erase have been tested on hardware.
Datasheet is available at the following URL:
https://www.macronix.com/Lists/Datasheet/Attachments/7446/MX25U12873F,%201.8V,%20128Mb,%20v1.2.pdf
Change-Id: I3047b3eda389d4c535376f6747e67de62995e82d
Signed-off-by: Kevin Tavukciyan kevintavukciyan@gmail.com","Hi, I was wondering if you could possibly tell me the desired configuration for this chip is as my MSI B350M Mortar Arctic has the MX25U12837F flash chip and I am trying to read/write to it using flashrom on my Raspberry Pi 4B. But whenever I try flashrom does detect the chip as Generic flash chip ""unknown SPI chip (RDID)"" (0 kB, SPI) on linux_spi. I have it set to the default 2000Khz clock and the following = MISO->SO, MOSI->SI, CLK->SCLK, CS0#->CS#, VCC(1.8V) -> VCC, GND -> GND. This will be greatly appreciated. Thanks",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,114,2019-12-11T20:40:27Z,,2020-07-05T05:28:59Z,OPEN,False,39,0,2,https://github.com/0xDouze,flashchips: Added MX25U12873F,1,[],https://github.com/flashrom/flashrom/pull/114,https://github.com/dhendrix,3,https://github.com/flashrom/flashrom/pull/114#issuecomment-645769489,"This commit adds support for the Macronix MX25U12873F spi flash chip.
It is similar to the MX25U12835E and shares its RDID, but has no WP# pin.
Probe, read, write and erase have been tested on hardware.
Datasheet is available at the following URL:
https://www.macronix.com/Lists/Datasheet/Attachments/7446/MX25U12873F,%201.8V,%20128Mb,%20v1.2.pdf
Change-Id: I3047b3eda389d4c535376f6747e67de62995e82d
Signed-off-by: Kevin Tavukciyan kevintavukciyan@gmail.com","Hi, I was wondering if you could possibly tell me the desired configuration for this chip is as my MSI B350M Mortar Arctic has the MX25U12837F flash chip and I am trying to read/write to it using flashrom on my Raspberry Pi 4B.

Are you using a voltage regulator on the Raspberry Pi to drop the voltage? The chip is 1.8V and IIRC the Raspberry Pi's IO pins are 3.3V.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,114,2019-12-11T20:40:27Z,,2020-07-05T05:28:59Z,OPEN,False,39,0,2,https://github.com/0xDouze,flashchips: Added MX25U12873F,1,[],https://github.com/flashrom/flashrom/pull/114,https://github.com/YeaTheMen,4,https://github.com/flashrom/flashrom/pull/114#issuecomment-645784514,"This commit adds support for the Macronix MX25U12873F spi flash chip.
It is similar to the MX25U12835E and shares its RDID, but has no WP# pin.
Probe, read, write and erase have been tested on hardware.
Datasheet is available at the following URL:
https://www.macronix.com/Lists/Datasheet/Attachments/7446/MX25U12873F,%201.8V,%20128Mb,%20v1.2.pdf
Change-Id: I3047b3eda389d4c535376f6747e67de62995e82d
Signed-off-by: Kevin Tavukciyan kevintavukciyan@gmail.com",Yes i use a bi-directional logic level converter for the SPI communication pins powered by a 1.8V regulator from the pi power pins also Passing the 1.8V to the chips VCC,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,114,2019-12-11T20:40:27Z,,2020-07-05T05:28:59Z,OPEN,False,39,0,2,https://github.com/0xDouze,flashchips: Added MX25U12873F,1,[],https://github.com/flashrom/flashrom/pull/114,https://github.com/0xDouze,5,https://github.com/flashrom/flashrom/pull/114#issuecomment-646040575,"This commit adds support for the Macronix MX25U12873F spi flash chip.
It is similar to the MX25U12835E and shares its RDID, but has no WP# pin.
Probe, read, write and erase have been tested on hardware.
Datasheet is available at the following URL:
https://www.macronix.com/Lists/Datasheet/Attachments/7446/MX25U12873F,%201.8V,%20128Mb,%20v1.2.pdf
Change-Id: I3047b3eda389d4c535376f6747e67de62995e82d
Signed-off-by: Kevin Tavukciyan kevintavukciyan@gmail.com","It was a while back so I don't remember which speed I used, but you should try lowering it a bit if you didn't already. Might be wrong but I feel like I was in the 1900 range.
Also, very basic question but did you apply the commit in this pr?",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,114,2019-12-11T20:40:27Z,,2020-07-05T05:28:59Z,OPEN,False,39,0,2,https://github.com/0xDouze,flashchips: Added MX25U12873F,1,[],https://github.com/flashrom/flashrom/pull/114,https://github.com/YeaTheMen,6,https://github.com/flashrom/flashrom/pull/114#issuecomment-646368692,"This commit adds support for the Macronix MX25U12873F spi flash chip.
It is similar to the MX25U12835E and shares its RDID, but has no WP# pin.
Probe, read, write and erase have been tested on hardware.
Datasheet is available at the following URL:
https://www.macronix.com/Lists/Datasheet/Attachments/7446/MX25U12873F,%201.8V,%20128Mb,%20v1.2.pdf
Change-Id: I3047b3eda389d4c535376f6747e67de62995e82d
Signed-off-by: Kevin Tavukciyan kevintavukciyan@gmail.com","Look I'll be honest I don't know alot about GitHub commits and whatever but I did try the included copy of flashrom on the pi and also cloned this git to my pi, make'd it and tried that flashrom (v1.2) but that still didn't change the result. I also just tried it at 1900Khz, Still finds 'generic flash chip'",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,114,2019-12-11T20:40:27Z,,2020-07-05T05:28:59Z,OPEN,False,39,0,2,https://github.com/0xDouze,flashchips: Added MX25U12873F,1,[],https://github.com/flashrom/flashrom/pull/114,https://github.com/0xDouze,7,https://github.com/flashrom/flashrom/pull/114#issuecomment-647591345,"This commit adds support for the Macronix MX25U12873F spi flash chip.
It is similar to the MX25U12835E and shares its RDID, but has no WP# pin.
Probe, read, write and erase have been tested on hardware.
Datasheet is available at the following URL:
https://www.macronix.com/Lists/Datasheet/Attachments/7446/MX25U12873F,%201.8V,%20128Mb,%20v1.2.pdf
Change-Id: I3047b3eda389d4c535376f6747e67de62995e82d
Signed-off-by: Kevin Tavukciyan kevintavukciyan@gmail.com","There's a commit in this pull request that has not been merged.
Just get the changes that are here and add them to the source code of flashrom.
Then recompile and try again. It should recognize the chip then.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,114,2019-12-11T20:40:27Z,,2020-07-05T05:28:59Z,OPEN,False,39,0,2,https://github.com/0xDouze,flashchips: Added MX25U12873F,1,[],https://github.com/flashrom/flashrom/pull/114,https://github.com/YeaTheMen,8,https://github.com/flashrom/flashrom/pull/114#issuecomment-647933545,"This commit adds support for the Macronix MX25U12873F spi flash chip.
It is similar to the MX25U12835E and shares its RDID, but has no WP# pin.
Probe, read, write and erase have been tested on hardware.
Datasheet is available at the following URL:
https://www.macronix.com/Lists/Datasheet/Attachments/7446/MX25U12873F,%201.8V,%20128Mb,%20v1.2.pdf
Change-Id: I3047b3eda389d4c535376f6747e67de62995e82d
Signed-off-by: Kevin Tavukciyan kevintavukciyan@gmail.com","Oh ok I see. I won't be able to do it for a while but I'll give it a shot.
Update : I tried it out but it still doesnt recognise the chip ;( just generic flash chip",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,115,2020-01-06T11:42:01Z,,2020-01-06T11:42:01Z,OPEN,False,3,3,1,https://github.com/alexmyczko,Update Makefile,1,[],https://github.com/flashrom/flashrom/pull/115,https://github.com/alexmyczko,1,https://github.com/flashrom/flashrom/pull/115,replace bz2 compression with xz,replace bz2 compression with xz,True,{'EYES': ['https://github.com/alexmyczko']}
flashrom/flashrom,https://github.com/flashrom/flashrom,119,2020-01-19T19:12:34Z,2020-02-04T00:20:02Z,2020-03-31T22:10:48Z,CLOSED,False,39,1,4,https://github.com/iddq,"Add support for Microchip 25LC640, 8kB SPI EEPROM",10,[],https://github.com/flashrom/flashrom/pull/119,https://github.com/iddq,1,https://github.com/flashrom/flashrom/pull/119,,,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,123,2020-02-04T00:21:17Z,,2020-07-27T12:53:43Z,OPEN,False,40,1,4,https://github.com/iddq,Add Microchip 25LC640 support,1,[],https://github.com/flashrom/flashrom/pull/123,https://github.com/iddq,1,https://github.com/flashrom/flashrom/pull/123,,,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,123,2020-02-04T00:21:17Z,,2020-07-27T12:53:43Z,OPEN,False,40,1,4,https://github.com/iddq,Add Microchip 25LC640 support,1,[],https://github.com/flashrom/flashrom/pull/123,https://github.com/idwer,2,https://github.com/flashrom/flashrom/pull/123#issuecomment-583474869,,Send a patch! https://www.flashrom.org/Development_Guidelines#Patch_submission,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,128,2020-02-21T03:06:02Z,,2020-02-22T09:41:31Z,OPEN,False,1,0,1,https://github.com/MilhouseVH,meson build: fails to build stlinkv3 when usb is disabled,1,[],https://github.com/flashrom/flashrom/pull/128,https://github.com/MilhouseVH,1,https://github.com/flashrom/flashrom/pull/128,"Presumably this is the correct fix, and it should have been added with 3eae695.
Without this PR, build v1.2 will fail when using the following meson options (cross-compiling for RPi):
-Dpciutils=false
-Dusb=false
-Dconfig_ft2232_spi=false
-Dconfig_usbblaster_spi=false

Error:
[12/82] Compiling C object 'flashrom@sha/stlinkv3_spi.c.o'.
FAILED: flashrom@sha/stlinkv3_spi.c.o 
/home/neil/projects/LibreELEC.tv/build.LibreELEC-RPi4.arm-9.80-devel/toolchain/bin/armv8a-libreelec-linux-gnueabihf-gcc -Iflashrom@sha -I. -I.. -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -std=c99 -Wwrite-strings -Wno-unused-parameter -Wno-address-of-packed-member -Wno-missing-braces -D_DEFAULT_SOURCE -D_POSIX_C_SOURCE -D_BSD_SOURCE '-DFLASHROM_VERSION=""v1.2""' -DHAVE_CLOCK_GETTIME=1 -DHAVE_STRNLEN=1 -DHAVE_UTSNAME=1 -march=armv8-a+crc -mtune=cortex-a53 -mabi=aapcs-linux -Wno-psabi -Wa,-mno-warn-deprecated -mfloat-abi=hard -mfpu=neon-fp-armv8 -Wall -O2 -fomit-frame-pointer -fPIC -DCONFIG_BUSPIRATE_SPI=1 -DCONFIG_DUMMY=1 -DCONFIG_LINUX_MTD=1 -DCONFIG_LINUX_SPI=1 -DCONFIG_PONY_SPI=1 -DCONFIG_SERPROG=1 -DCONFIG_STLINKV3_SPI=1 -DCONFIG_BITBANG_SPI=1 -MD -MQ 'flashrom@sha/stlinkv3_spi.c.o' -MF 'flashrom@sha/stlinkv3_spi.c.o.d' -o 'flashrom@sha/stlinkv3_spi.c.o' -c ../stlinkv3_spi.c
../stlinkv3_spi.c:30:10: fatal error: libusb.h: No such file or directory
   30 | #include <libusb.h>
      |          ^~~~~~~~~~
compilation terminated.

Full log: http://ix.io/2cgY","Presumably this is the correct fix, and it should have been added with 3eae695.
Without this PR, build v1.2 will fail when using the following meson options (cross-compiling for RPi):
-Dpciutils=false
-Dusb=false
-Dconfig_ft2232_spi=false
-Dconfig_usbblaster_spi=false

Error:
[12/82] Compiling C object 'flashrom@sha/stlinkv3_spi.c.o'.
FAILED: flashrom@sha/stlinkv3_spi.c.o 
/home/neil/projects/LibreELEC.tv/build.LibreELEC-RPi4.arm-9.80-devel/toolchain/bin/armv8a-libreelec-linux-gnueabihf-gcc -Iflashrom@sha -I. -I.. -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -std=c99 -Wwrite-strings -Wno-unused-parameter -Wno-address-of-packed-member -Wno-missing-braces -D_DEFAULT_SOURCE -D_POSIX_C_SOURCE -D_BSD_SOURCE '-DFLASHROM_VERSION=""v1.2""' -DHAVE_CLOCK_GETTIME=1 -DHAVE_STRNLEN=1 -DHAVE_UTSNAME=1 -march=armv8-a+crc -mtune=cortex-a53 -mabi=aapcs-linux -Wno-psabi -Wa,-mno-warn-deprecated -mfloat-abi=hard -mfpu=neon-fp-armv8 -Wall -O2 -fomit-frame-pointer -fPIC -DCONFIG_BUSPIRATE_SPI=1 -DCONFIG_DUMMY=1 -DCONFIG_LINUX_MTD=1 -DCONFIG_LINUX_SPI=1 -DCONFIG_PONY_SPI=1 -DCONFIG_SERPROG=1 -DCONFIG_STLINKV3_SPI=1 -DCONFIG_BITBANG_SPI=1 -MD -MQ 'flashrom@sha/stlinkv3_spi.c.o' -MF 'flashrom@sha/stlinkv3_spi.c.o.d' -o 'flashrom@sha/stlinkv3_spi.c.o' -c ../stlinkv3_spi.c
../stlinkv3_spi.c:30:10: fatal error: libusb.h: No such file or directory
   30 | #include <libusb.h>
      |          ^~~~~~~~~~
compilation terminated.

Full log: http://ix.io/2cgY",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,132,2020-03-13T01:16:58Z,,2020-07-27T20:45:39Z,OPEN,False,37,1,2,https://github.com/romsom,Buspirate spi auxpin,2,[],https://github.com/flashrom/flashrom/pull/132,https://github.com/romsom,1,https://github.com/flashrom/flashrom/pull/132,"This change allows using the Bus Pirate's AUX pin to hold a device (e.g., a microcontroller) in reset during SPI transfers.
The old behaviour (high state) is preserved if the parameter is not present.
Change-Id: Ic18cddf8f7c3296eae866a9decd23b0e396d28e3
Signed-off-by: Roman Sommer roman.sommer@fau.de","This change allows using the Bus Pirate's AUX pin to hold a device (e.g., a microcontroller) in reset during SPI transfers.
The old behaviour (high state) is preserved if the parameter is not present.
Change-Id: Ic18cddf8f7c3296eae866a9decd23b0e396d28e3
Signed-off-by: Roman Sommer roman.sommer@fau.de",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,132,2020-03-13T01:16:58Z,,2020-07-27T20:45:39Z,OPEN,False,37,1,2,https://github.com/romsom,Buspirate spi auxpin,2,[],https://github.com/flashrom/flashrom/pull/132,https://github.com/romsom,2,https://github.com/flashrom/flashrom/pull/132#issuecomment-664629122,"This change allows using the Bus Pirate's AUX pin to hold a device (e.g., a microcontroller) in reset during SPI transfers.
The old behaviour (high state) is preserved if the parameter is not present.
Change-Id: Ic18cddf8f7c3296eae866a9decd23b0e396d28e3
Signed-off-by: Roman Sommer roman.sommer@fau.de","Any news here?
Please let me know if I can do anything to improve this PR if necessary!
Thanks!",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,133,2020-03-16T18:36:19Z,2022-04-28T03:01:24Z,2022-04-28T03:01:24Z,CLOSED,False,2,2,1,https://github.com/kraj,typecast enum conversions explicitly,1,[],https://github.com/flashrom/flashrom/pull/133,https://github.com/kraj,1,https://github.com/flashrom/flashrom/pull/133,"clang complains like below
libflashrom.c:191:43: error: implicit conversion from enumeration type 'const enum test_state' to different enumeration type 'enum flashrom_test_state' [-Werror,-Wenum-conversion]
supported_boards[i].working = binfo[i].working;
~ ~~~~~~~~~^~~~~~~
libflashrom.c:229:46: error: implicit conversion from enumeration type 'const enum test_state' to different enumeration type 'enum flashrom_test_state' [-Werror,-Wenum-conversion]
supported_chipsets[i].status = chipset[i].status;
~ ~~~~~~~~~~~^~~~~~
However these enums are exactly same so they can be typecasted
libflashrom.h
/** @InGroup flashrom-query */
enum flashrom_test_state {
FLASHROM_TESTED_OK  = 0,
FLASHROM_TESTED_NT  = 1,
FLASHROM_TESTED_BAD = 2,
FLASHROM_TESTED_DEP = 3,
FLASHROM_TESTED_NA  = 4,
};
flash.h
enum test_state {
OK = 0,
NT = 1, /* Not tested /
BAD,    / Known to not work /
DEP,    / Support depends on configuration (e.g. Intel flash descriptor) /
NA,     / Not applicable (e.g. write support on ROM chips) */
};
Upstream-Status: Pending
Change-Id: If12360e0a2cdbb3cd35bc3c19bdfd74cfe6cac20
Signed-off-by: Khem Raj raj.khem@gmail.com","clang complains like below
libflashrom.c:191:43: error: implicit conversion from enumeration type 'const enum test_state' to different enumeration type 'enum flashrom_test_state' [-Werror,-Wenum-conversion]
supported_boards[i].working = binfo[i].working;
~ ~~~~~~~~~^~~~~~~
libflashrom.c:229:46: error: implicit conversion from enumeration type 'const enum test_state' to different enumeration type 'enum flashrom_test_state' [-Werror,-Wenum-conversion]
supported_chipsets[i].status = chipset[i].status;
~ ~~~~~~~~~~~^~~~~~
However these enums are exactly same so they can be typecasted
libflashrom.h
/** @InGroup flashrom-query */
enum flashrom_test_state {
FLASHROM_TESTED_OK  = 0,
FLASHROM_TESTED_NT  = 1,
FLASHROM_TESTED_BAD = 2,
FLASHROM_TESTED_DEP = 3,
FLASHROM_TESTED_NA  = 4,
};
flash.h
enum test_state {
OK = 0,
NT = 1, /* Not tested /
BAD,    / Known to not work /
DEP,    / Support depends on configuration (e.g. Intel flash descriptor) /
NA,     / Not applicable (e.g. write support on ROM chips) */
};
Upstream-Status: Pending
Change-Id: If12360e0a2cdbb3cd35bc3c19bdfd74cfe6cac20
Signed-off-by: Khem Raj raj.khem@gmail.com",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,133,2020-03-16T18:36:19Z,2022-04-28T03:01:24Z,2022-04-28T03:01:24Z,CLOSED,False,2,2,1,https://github.com/kraj,typecast enum conversions explicitly,1,[],https://github.com/flashrom/flashrom/pull/133,https://github.com/jellelicht,2,https://github.com/flashrom/flashrom/pull/133#issuecomment-890336419,"clang complains like below
libflashrom.c:191:43: error: implicit conversion from enumeration type 'const enum test_state' to different enumeration type 'enum flashrom_test_state' [-Werror,-Wenum-conversion]
supported_boards[i].working = binfo[i].working;
~ ~~~~~~~~~^~~~~~~
libflashrom.c:229:46: error: implicit conversion from enumeration type 'const enum test_state' to different enumeration type 'enum flashrom_test_state' [-Werror,-Wenum-conversion]
supported_chipsets[i].status = chipset[i].status;
~ ~~~~~~~~~~~^~~~~~
However these enums are exactly same so they can be typecasted
libflashrom.h
/** @InGroup flashrom-query */
enum flashrom_test_state {
FLASHROM_TESTED_OK  = 0,
FLASHROM_TESTED_NT  = 1,
FLASHROM_TESTED_BAD = 2,
FLASHROM_TESTED_DEP = 3,
FLASHROM_TESTED_NA  = 4,
};
flash.h
enum test_state {
OK = 0,
NT = 1, /* Not tested /
BAD,    / Known to not work /
DEP,    / Support depends on configuration (e.g. Intel flash descriptor) /
NA,     / Not applicable (e.g. write support on ROM chips) */
};
Upstream-Status: Pending
Change-Id: If12360e0a2cdbb3cd35bc3c19bdfd74cfe6cac20
Signed-off-by: Khem Raj raj.khem@gmail.com","Any chance this can me merged, after resolving conflicts? I had to apply this patch locally to get things to work, and nothing has exploded (yet…) 👍
EDIT: this change was already merged, somehow. I was just using an old checkout 🤡. This MR can be closed then, I guess?",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,134,2020-03-20T13:17:15Z,,2020-03-25T17:45:17Z,OPEN,False,51,3,4,https://github.com/hrvach,udelay.c: Enable providing delay calibration value through CLI,3,[],https://github.com/flashrom/flashrom/pull/134,https://github.com/hrvach,1,https://github.com/flashrom/flashrom/pull/134,"This commit implements --delay option to retrieve and provide the calibration
loop delay through the command line. The delay calibration procedure can take
up to few seconds, which adds up when executed a number of times consecutively.
Therefore, this provides a means to execute it only once, and then re-use the
calibrated value on subsequent runs. Also, it implements a sanity check,
expecting the value to land within 10% of the theoretical delay expectance,
otherwise it ignores the provided value and runs the calibration procedure
instead.
    modified:   cli_classic.c
    modified:   flashrom.8.tmpl
    modified:   programmer.h
    modified:   udelay.c

Change-Id: Iea2a7f62300663bc0a32ed4abced57c8c55c90c8
Signed-off-by: Hrvoje Cavrak hrvoje@hrvoje.org","This commit implements --delay option to retrieve and provide the calibration
loop delay through the command line. The delay calibration procedure can take
up to few seconds, which adds up when executed a number of times consecutively.
Therefore, this provides a means to execute it only once, and then re-use the
calibrated value on subsequent runs. Also, it implements a sanity check,
expecting the value to land within 10% of the theoretical delay expectance,
otherwise it ignores the provided value and runs the calibration procedure
instead.
    modified:   cli_classic.c
    modified:   flashrom.8.tmpl
    modified:   programmer.h
    modified:   udelay.c

Change-Id: Iea2a7f62300663bc0a32ed4abced57c8c55c90c8
Signed-off-by: Hrvoje Cavrak hrvoje@hrvoje.org",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,134,2020-03-20T13:17:15Z,,2020-03-25T17:45:17Z,OPEN,False,51,3,4,https://github.com/hrvach,udelay.c: Enable providing delay calibration value through CLI,3,[],https://github.com/flashrom/flashrom/pull/134,https://github.com/hrvach,2,https://github.com/flashrom/flashrom/pull/134#issuecomment-603986634,"This commit implements --delay option to retrieve and provide the calibration
loop delay through the command line. The delay calibration procedure can take
up to few seconds, which adds up when executed a number of times consecutively.
Therefore, this provides a means to execute it only once, and then re-use the
calibrated value on subsequent runs. Also, it implements a sanity check,
expecting the value to land within 10% of the theoretical delay expectance,
otherwise it ignores the provided value and runs the calibration procedure
instead.
    modified:   cli_classic.c
    modified:   flashrom.8.tmpl
    modified:   programmer.h
    modified:   udelay.c

Change-Id: Iea2a7f62300663bc0a32ed4abced57c8c55c90c8
Signed-off-by: Hrvoje Cavrak hrvoje@hrvoje.org","Fixed, submitted through Gerrit.",True,{'THUMBS_UP': ['https://github.com/martonmiklos']}
flashrom/flashrom,https://github.com/flashrom/flashrom,136,2020-03-29T12:28:38Z,,2020-04-01T19:54:52Z,OPEN,False,30,2,2,https://github.com/martijnberger,pcidev: On arm64 we are not getting a valid BAR0 address,1,[],https://github.com/flashrom/flashrom/pull/136,https://github.com/martijnberger,1,https://github.com/flashrom/flashrom/pull/136,"It seems that there is some code to work around a possible bug in
old versions of libpci. This trusts libpci if it is new enough
Change-Id: I8bd32c6344b0831a949c3853abeb84905420922a
Signed-off-by: Martijn Berger martijn.berger@gmail.com","It seems that there is some code to work around a possible bug in
old versions of libpci. This trusts libpci if it is new enough
Change-Id: I8bd32c6344b0831a949c3853abeb84905420922a
Signed-off-by: Martijn Berger martijn.berger@gmail.com",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,136,2020-03-29T12:28:38Z,,2020-04-01T19:54:52Z,OPEN,False,30,2,2,https://github.com/martijnberger,pcidev: On arm64 we are not getting a valid BAR0 address,1,[],https://github.com/flashrom/flashrom/pull/136,https://github.com/martijnberger,2,https://github.com/flashrom/flashrom/pull/136#issuecomment-605942889,"It seems that there is some code to work around a possible bug in
old versions of libpci. This trusts libpci if it is new enough
Change-Id: I8bd32c6344b0831a949c3853abeb84905420922a
Signed-off-by: Martijn Berger martijn.berger@gmail.com","Another way way that I can see is to only do this on ARM64.
The main problem here seems to be that the 32 bit BAR address is actually 64 bits to the host as a result of how the memory is layed out.
I was looking into how lspci did come up with the correct value.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,137,2020-03-30T17:40:35Z,,2020-04-01T19:52:19Z,OPEN,False,32,7,2,https://github.com/martijnberger,nicintel: add I350 support,1,[],https://github.com/flashrom/flashrom/pull/137,https://github.com/martijnberger,1,https://github.com/flashrom/flashrom/pull/137,"While trying to flash I350 Intel NIC's on arm64 linux I had to change
some things to make it work well
Change-Id: Id203d2ce247cf39a8d650887322ccced0151c6a9
Signed-off-by: Martijn Berger martijn.berger@gmail.com","While trying to flash I350 Intel NIC's on arm64 linux I had to change
some things to make it work well
Change-Id: Id203d2ce247cf39a8d650887322ccced0151c6a9
Signed-off-by: Martijn Berger martijn.berger@gmail.com",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,140,2020-04-12T15:02:19Z,2021-05-04T12:55:46Z,2021-05-04T12:56:02Z,CLOSED,False,5,1,1,https://github.com/koisto,Adding uninstall,2,[],https://github.com/flashrom/flashrom/pull/140,https://github.com/koisto,1,https://github.com/flashrom/flashrom/pull/140,"Hi,
Please see the following simple patch to add an uninstall target to the Makefile.
Regards,
koisto","Hi,
Please see the following simple patch to add an uninstall target to the Makefile.
Regards,
koisto",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,140,2020-04-12T15:02:19Z,2021-05-04T12:55:46Z,2021-05-04T12:56:02Z,CLOSED,False,5,1,1,https://github.com/koisto,Adding uninstall,2,[],https://github.com/flashrom/flashrom/pull/140,https://github.com/koisto,2,https://github.com/flashrom/flashrom/pull/140#issuecomment-831919863,"Hi,
Please see the following simple patch to add an uninstall target to the Makefile.
Regards,
koisto",Closing,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,143,2020-04-27T23:41:46Z,,2021-05-17T13:26:58Z,OPEN,False,62,16,2,https://github.com/mkszuba,Some Meson fixes and enhancements,5,[],https://github.com/flashrom/flashrom/pull/143,https://github.com/mkszuba,1,https://github.com/flashrom/flashrom/pull/143,"A handful of changes I have noticed Meson scripts still needed to get closer to feature parity with the Makefile:

make it actually possible to build flashrom with the bitbang_spi back-end disabled;
fix dependencies of drivers utilising raw hardware access;
fix dependencies of stlinkv3_spi and usbblaster_spi;
make it possible to enable jlink_spi;
make the group-wide off switches for libusb and libpci programmers stay more in sync with options for individual programmers;
introduce similar group logic for libftdi programmers.","A handful of changes I have noticed Meson scripts still needed to get closer to feature parity with the Makefile:

make it actually possible to build flashrom with the bitbang_spi back-end disabled;
fix dependencies of drivers utilising raw hardware access;
fix dependencies of stlinkv3_spi and usbblaster_spi;
make it possible to enable jlink_spi;
make the group-wide off switches for libusb and libpci programmers stay more in sync with options for individual programmers;
introduce similar group logic for libftdi programmers.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,143,2020-04-27T23:41:46Z,,2021-05-17T13:26:58Z,OPEN,False,62,16,2,https://github.com/mkszuba,Some Meson fixes and enhancements,5,[],https://github.com/flashrom/flashrom/pull/143,https://github.com/dhendrix,2,https://github.com/flashrom/flashrom/pull/143#issuecomment-660724272,"A handful of changes I have noticed Meson scripts still needed to get closer to feature parity with the Makefile:

make it actually possible to build flashrom with the bitbang_spi back-end disabled;
fix dependencies of drivers utilising raw hardware access;
fix dependencies of stlinkv3_spi and usbblaster_spi;
make it possible to enable jlink_spi;
make the group-wide off switches for libusb and libpci programmers stay more in sync with options for individual programmers;
introduce similar group logic for libftdi programmers.","At a glance, this looks good. Please add your Sign-off to the commit message and I'll forward it upstream for review (and hopefully merge it).
Details about the sign-off procedure can be found here: https://flashrom.org/Development_Guidelines#Sign-off_Procedure",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,143,2020-04-27T23:41:46Z,,2021-05-17T13:26:58Z,OPEN,False,62,16,2,https://github.com/mkszuba,Some Meson fixes and enhancements,5,[],https://github.com/flashrom/flashrom/pull/143,https://github.com/mkszuba,3,https://github.com/flashrom/flashrom/pull/143#issuecomment-660986981,"A handful of changes I have noticed Meson scripts still needed to get closer to feature parity with the Makefile:

make it actually possible to build flashrom with the bitbang_spi back-end disabled;
fix dependencies of drivers utilising raw hardware access;
fix dependencies of stlinkv3_spi and usbblaster_spi;
make it possible to enable jlink_spi;
make the group-wide off switches for libusb and libpci programmers stay more in sync with options for individual programmers;
introduce similar group logic for libftdi programmers.",Done!,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,143,2020-04-27T23:41:46Z,,2021-05-17T13:26:58Z,OPEN,False,62,16,2,https://github.com/mkszuba,Some Meson fixes and enhancements,5,[],https://github.com/flashrom/flashrom/pull/143,https://github.com/joakim-tjernlund,4,https://github.com/flashrom/flashrom/pull/143#issuecomment-725431031,"A handful of changes I have noticed Meson scripts still needed to get closer to feature parity with the Makefile:

make it actually possible to build flashrom with the bitbang_spi back-end disabled;
fix dependencies of drivers utilising raw hardware access;
fix dependencies of stlinkv3_spi and usbblaster_spi;
make it possible to enable jlink_spi;
make the group-wide off switches for libusb and libpci programmers stay more in sync with options for individual programmers;
introduce similar group logic for libftdi programmers.","@dhendrix , please push upstream. The meson build system is the only way to get a build that works
for fwupd",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,143,2020-04-27T23:41:46Z,,2021-05-17T13:26:58Z,OPEN,False,62,16,2,https://github.com/mkszuba,Some Meson fixes and enhancements,5,[],https://github.com/flashrom/flashrom/pull/143,https://github.com/mkszuba,5,https://github.com/flashrom/flashrom/pull/143#issuecomment-725449084,"A handful of changes I have noticed Meson scripts still needed to get closer to feature parity with the Makefile:

make it actually possible to build flashrom with the bitbang_spi back-end disabled;
fix dependencies of drivers utilising raw hardware access;
fix dependencies of stlinkv3_spi and usbblaster_spi;
make it possible to enable jlink_spi;
make the group-wide off switches for libusb and libpci programmers stay more in sync with options for individual programmers;
introduce similar group logic for libftdi programmers.","Please note that the latest two commits do the same thing as those from PR #154, which I only noticed having pushed my own version to GitHub. I'll keep them in here for now (I use this branch to generate patches for Gentoo ebuilds of flashrom) but should it get in the way of you merging this PR, let me know and I'll trim it down.
Moreover, #176 should be addressed (preferably via #155 because it would then not be a Meson-specific fix) as well for Meson builds to work in more cross-platform fashion.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,143,2020-04-27T23:41:46Z,,2021-05-17T13:26:58Z,OPEN,False,62,16,2,https://github.com/mkszuba,Some Meson fixes and enhancements,5,[],https://github.com/flashrom/flashrom/pull/143,https://github.com/mkszuba,6,https://github.com/flashrom/flashrom/pull/143#issuecomment-842323221,"A handful of changes I have noticed Meson scripts still needed to get closer to feature parity with the Makefile:

make it actually possible to build flashrom with the bitbang_spi back-end disabled;
fix dependencies of drivers utilising raw hardware access;
fix dependencies of stlinkv3_spi and usbblaster_spi;
make it possible to enable jlink_spi;
make the group-wide off switches for libusb and libpci programmers stay more in sync with options for individual programmers;
introduce similar group logic for libftdi programmers.",Rebased against current master.,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,150,2020-07-06T14:31:01Z,2022-04-28T05:00:01Z,2022-04-28T05:00:01Z,CLOSED,False,58,0,2,https://github.com/ayushman4,Added XMC25QH6A chip support,3,[],https://github.com/flashrom/flashrom/pull/150,https://github.com/ayushman4,1,https://github.com/flashrom/flashrom/pull/150,"I was facing issues in reading the chip and created an issue #148. Since, it wasn't getting any attention, I added the support for the XMC chip I was facing issues with and I tested it and I was able to read and write and detect without any issues.","I was facing issues in reading the chip and created an issue #148. Since, it wasn't getting any attention, I added the support for the XMC chip I was facing issues with and I tested it and I was able to read and write and detect without any issues.",True,{'THUMBS_UP': ['https://github.com/chaseadam']}
flashrom/flashrom,https://github.com/flashrom/flashrom,150,2020-07-06T14:31:01Z,2022-04-28T05:00:01Z,2022-04-28T05:00:01Z,CLOSED,False,58,0,2,https://github.com/ayushman4,Added XMC25QH6A chip support,3,[],https://github.com/flashrom/flashrom/pull/150,https://github.com/felixsinger,2,https://github.com/flashrom/flashrom/pull/150#issuecomment-1111747121,"I was facing issues in reading the chip and created an issue #148. Since, it wasn't getting any attention, I added the support for the XMC chip I was facing issues with and I tested it and I was able to read and write and detect without any issues.",https://review.coreboot.org/c/flashrom/+/63900,True,"{'THUMBS_UP': ['https://github.com/martonmiklos', 'https://github.com/AiyionPrime']}"
flashrom/flashrom,https://github.com/flashrom/flashrom,151,2020-07-07T10:34:53Z,,2020-08-04T15:17:49Z,OPEN,False,10,7,3,https://github.com/nieldk,for-loop updated,3,[],https://github.com/flashrom/flashrom/pull/151,https://github.com/nieldk,1,https://github.com/flashrom/flashrom/pull/151,for-loops updated for compatibility,for-loops updated for compatibility,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,152,2020-07-13T20:09:18Z,2020-07-13T20:24:20Z,2020-07-13T20:24:20Z,CLOSED,False,39,0,2,https://github.com/steve-m,flashchips: Add support for Macronix MX25L5121E,1,[],https://github.com/flashrom/flashrom/pull/152,https://github.com/steve-m,1,https://github.com/flashrom/flashrom/pull/152,"Change-Id: I881e2cda938083ba271b2ee0c457d2bbd8e1a766
Signed-off-by: Steve Markgraf steve@steve-m.de","Change-Id: I881e2cda938083ba271b2ee0c457d2bbd8e1a766
Signed-off-by: Steve Markgraf steve@steve-m.de",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,152,2020-07-13T20:09:18Z,2020-07-13T20:24:20Z,2020-07-13T20:24:20Z,CLOSED,False,39,0,2,https://github.com/steve-m,flashchips: Add support for Macronix MX25L5121E,1,[],https://github.com/flashrom/flashrom/pull/152,https://github.com/steve-m,2,https://github.com/flashrom/flashrom/pull/152#issuecomment-657765999,"Change-Id: I881e2cda938083ba271b2ee0c457d2bbd8e1a766
Signed-off-by: Steve Markgraf steve@steve-m.de","I tried using gerrit directly, however, I always get an Internal Server Error when trying to add my public key.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,152,2020-07-13T20:09:18Z,2020-07-13T20:24:20Z,2020-07-13T20:24:20Z,CLOSED,False,39,0,2,https://github.com/steve-m,flashchips: Add support for Macronix MX25L5121E,1,[],https://github.com/flashrom/flashrom/pull/152,https://github.com/steve-m,3,https://github.com/flashrom/flashrom/pull/152#issuecomment-657772509,"Change-Id: I881e2cda938083ba271b2ee0c457d2bbd8e1a766
Signed-off-by: Steve Markgraf steve@steve-m.de",See https://review.coreboot.org/c/flashrom/+/43416,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,154,2020-07-18T18:19:48Z,,2022-04-08T05:17:07Z,OPEN,False,20,0,2,https://github.com/neheb,meson fixes,2,[],https://github.com/flashrom/flashrom/pull/154,https://github.com/neheb,1,https://github.com/flashrom/flashrom/pull/154,"Normally flashrom is built with all options enabled. But it starts to go wrong when several options are disabled. This is the case in the OpenWrt package where 4 separate packages are provided with differing functionality. (flashrom, -pci, -usb, -spi).","Normally flashrom is built with all options enabled. But it starts to go wrong when several options are disabled. This is the case in the OpenWrt package where 4 separate packages are provided with differing functionality. (flashrom, -pci, -usb, -spi).",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,154,2020-07-18T18:19:48Z,,2022-04-08T05:17:07Z,OPEN,False,20,0,2,https://github.com/neheb,meson fixes,2,[],https://github.com/flashrom/flashrom/pull/154,https://github.com/neheb,2,https://github.com/flashrom/flashrom/pull/154#issuecomment-1092436876,"Normally flashrom is built with all options enabled. But it starts to go wrong when several options are disabled. This is the case in the OpenWrt package where 4 separate packages are provided with differing functionality. (flashrom, -pci, -usb, -spi).",ping @felixsinger,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,154,2020-07-18T18:19:48Z,,2022-04-08T05:17:07Z,OPEN,False,20,0,2,https://github.com/neheb,meson fixes,2,[],https://github.com/flashrom/flashrom/pull/154,https://github.com/felixsinger,3,https://github.com/flashrom/flashrom/pull/154#issuecomment-1092437412,"Normally flashrom is built with all options enabled. But it starts to go wrong when several options are disabled. This is the case in the OpenWrt package where 4 separate packages are provided with differing functionality. (flashrom, -pci, -usb, -spi).",Is there any reason why you don't upload them to Gerrit yourself?,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,154,2020-07-18T18:19:48Z,,2022-04-08T05:17:07Z,OPEN,False,20,0,2,https://github.com/neheb,meson fixes,2,[],https://github.com/flashrom/flashrom/pull/154,https://github.com/neheb,4,https://github.com/flashrom/flashrom/pull/154#issuecomment-1092438018,"Normally flashrom is built with all options enabled. But it starts to go wrong when several options are disabled. This is the case in the OpenWrt package where 4 separate packages are provided with differing functionality. (flashrom, -pci, -usb, -spi).",I don't use gerrit.,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,154,2020-07-18T18:19:48Z,,2022-04-08T05:17:07Z,OPEN,False,20,0,2,https://github.com/neheb,meson fixes,2,[],https://github.com/flashrom/flashrom/pull/154,https://github.com/felixsinger,5,https://github.com/flashrom/flashrom/pull/154#issuecomment-1092443804,"Normally flashrom is built with all options enabled. But it starts to go wrong when several options are disabled. This is the case in the OpenWrt package where 4 separate packages are provided with differing functionality. (flashrom, -pci, -usb, -spi).","Yeah, why? What's the reason for this? Like don't you know how to setup your local repository or do you just don't want to create another account somewhere? In the latter case, you can choose between many OAuth providers, including GItHub, and you also can use OpenID if you prefer that. https://review.coreboot.org/login",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,154,2020-07-18T18:19:48Z,,2022-04-08T05:17:07Z,OPEN,False,20,0,2,https://github.com/neheb,meson fixes,2,[],https://github.com/flashrom/flashrom/pull/154,https://github.com/neheb,6,https://github.com/flashrom/flashrom/pull/154#issuecomment-1092450245,"Normally flashrom is built with all options enabled. But it starts to go wrong when several options are disabled. This is the case in the OpenWrt package where 4 separate packages are provided with differing functionality. (flashrom, -pci, -usb, -spi).",latter case. Maybe the LLVM workflow left a bad taste in my mouth (Phabricator). git send-mail is simple enough.,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,155,2020-07-18T19:18:05Z,2022-04-28T02:22:37Z,2022-04-28T05:03:54Z,CLOSED,False,3,3,1,https://github.com/neheb,hwaccess: use __asm__ as is done elsewhere,1,[],https://github.com/flashrom/flashrom/pull/155,https://github.com/neheb,1,https://github.com/flashrom/flashrom/pull/155,"Fixes compilation under powerpc platform. Made the change for the SPARC
platform as well.
../hwaccess.c: In function 'sync_primitive':
../hwaccess.c:74:2: warning: implicit declaration of function 'asm'
[-Wimplicit-function-declaration]
74 |  asm(""eieio"" : : : ""memory"");
|  ^~~
../hwaccess.c:74:13: error: expected ')' before ':' token
74 |  asm(""eieio"" : : : ""memory"");
Signed-off-by: Rosen Penev rosenp@gmail.com","Fixes compilation under powerpc platform. Made the change for the SPARC
platform as well.
../hwaccess.c: In function 'sync_primitive':
../hwaccess.c:74:2: warning: implicit declaration of function 'asm'
[-Wimplicit-function-declaration]
74 |  asm(""eieio"" : : : ""memory"");
|  ^~~
../hwaccess.c:74:13: error: expected ')' before ':' token
74 |  asm(""eieio"" : : : ""memory"");
Signed-off-by: Rosen Penev rosenp@gmail.com",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,155,2020-07-18T19:18:05Z,2022-04-28T02:22:37Z,2022-04-28T05:03:54Z,CLOSED,False,3,3,1,https://github.com/neheb,hwaccess: use __asm__ as is done elsewhere,1,[],https://github.com/flashrom/flashrom/pull/155,https://github.com/neheb,2,https://github.com/flashrom/flashrom/pull/155#issuecomment-660535305,"Fixes compilation under powerpc platform. Made the change for the SPARC
platform as well.
../hwaccess.c: In function 'sync_primitive':
../hwaccess.c:74:2: warning: implicit declaration of function 'asm'
[-Wimplicit-function-declaration]
74 |  asm(""eieio"" : : : ""memory"");
|  ^~~
../hwaccess.c:74:13: error: expected ')' before ':' token
74 |  asm(""eieio"" : : : ""memory"");
Signed-off-by: Rosen Penev rosenp@gmail.com",turns out asm() is a glibc-ism. I'm building on musl.,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,155,2020-07-18T19:18:05Z,2022-04-28T02:22:37Z,2022-04-28T05:03:54Z,CLOSED,False,3,3,1,https://github.com/neheb,hwaccess: use __asm__ as is done elsewhere,1,[],https://github.com/flashrom/flashrom/pull/155,https://github.com/felixsinger,3,https://github.com/flashrom/flashrom/pull/155#issuecomment-1092431998,"Fixes compilation under powerpc platform. Made the change for the SPARC
platform as well.
../hwaccess.c: In function 'sync_primitive':
../hwaccess.c:74:2: warning: implicit declaration of function 'asm'
[-Wimplicit-function-declaration]
74 |  asm(""eieio"" : : : ""memory"");
|  ^~~
../hwaccess.c:74:13: error: expected ')' before ':' token
74 |  asm(""eieio"" : : : ""memory"");
Signed-off-by: Rosen Penev rosenp@gmail.com","I uploaded your patch to our Gerrit. https://review.coreboot.org/c/flashrom/+/63487
Please get familiar with our development process for the future, since we don't look at GitHub pull requests.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,155,2020-07-18T19:18:05Z,2022-04-28T02:22:37Z,2022-04-28T05:03:54Z,CLOSED,False,3,3,1,https://github.com/neheb,hwaccess: use __asm__ as is done elsewhere,1,[],https://github.com/flashrom/flashrom/pull/155,https://github.com/neheb,4,https://github.com/flashrom/flashrom/pull/155#issuecomment-1092432776,"Fixes compilation under powerpc platform. Made the change for the SPARC
platform as well.
../hwaccess.c: In function 'sync_primitive':
../hwaccess.c:74:2: warning: implicit declaration of function 'asm'
[-Wimplicit-function-declaration]
74 |  asm(""eieio"" : : : ""memory"");
|  ^~~
../hwaccess.c:74:13: error: expected ')' before ':' token
74 |  asm(""eieio"" : : : ""memory"");
Signed-off-by: Rosen Penev rosenp@gmail.com",@felixsinger this has also been sent to the mailing list.,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,155,2020-07-18T19:18:05Z,2022-04-28T02:22:37Z,2022-04-28T05:03:54Z,CLOSED,False,3,3,1,https://github.com/neheb,hwaccess: use __asm__ as is done elsewhere,1,[],https://github.com/flashrom/flashrom/pull/155,https://github.com/felixsinger,5,https://github.com/flashrom/flashrom/pull/155#issuecomment-1092436367,"Fixes compilation under powerpc platform. Made the change for the SPARC
platform as well.
../hwaccess.c: In function 'sync_primitive':
../hwaccess.c:74:2: warning: implicit declaration of function 'asm'
[-Wimplicit-function-declaration]
74 |  asm(""eieio"" : : : ""memory"");
|  ^~~
../hwaccess.c:74:13: error: expected ')' before ':' token
74 |  asm(""eieio"" : : : ""memory"");
Signed-off-by: Rosen Penev rosenp@gmail.com","Even if the mailing list is mentioned as a possibility, Gerrit is our primary review platform and thus patches might get lost.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,155,2020-07-18T19:18:05Z,2022-04-28T02:22:37Z,2022-04-28T05:03:54Z,CLOSED,False,3,3,1,https://github.com/neheb,hwaccess: use __asm__ as is done elsewhere,1,[],https://github.com/flashrom/flashrom/pull/155,https://github.com/neheb,6,https://github.com/flashrom/flashrom/pull/155#issuecomment-1092436572,"Fixes compilation under powerpc platform. Made the change for the SPARC
platform as well.
../hwaccess.c: In function 'sync_primitive':
../hwaccess.c:74:2: warning: implicit declaration of function 'asm'
[-Wimplicit-function-declaration]
74 |  asm(""eieio"" : : : ""memory"");
|  ^~~
../hwaccess.c:74:13: error: expected ')' before ':' token
74 |  asm(""eieio"" : : : ""memory"");
Signed-off-by: Rosen Penev rosenp@gmail.com",yeah looks like it.,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,155,2020-07-18T19:18:05Z,2022-04-28T02:22:37Z,2022-04-28T05:03:54Z,CLOSED,False,3,3,1,https://github.com/neheb,hwaccess: use __asm__ as is done elsewhere,1,[],https://github.com/flashrom/flashrom/pull/155,https://github.com/felixsinger,7,https://github.com/flashrom/flashrom/pull/155#issuecomment-1111669893,"Fixes compilation under powerpc platform. Made the change for the SPARC
platform as well.
../hwaccess.c: In function 'sync_primitive':
../hwaccess.c:74:2: warning: implicit declaration of function 'asm'
[-Wimplicit-function-declaration]
74 |  asm(""eieio"" : : : ""memory"");
|  ^~~
../hwaccess.c:74:13: error: expected ')' before ':' token
74 |  asm(""eieio"" : : : ""memory"");
Signed-off-by: Rosen Penev rosenp@gmail.com",https://review.coreboot.org/c/flashrom/+/63487,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,156,2020-07-18T19:52:12Z,2020-07-21T05:28:57Z,2020-07-21T06:04:03Z,CLOSED,False,1,1,1,https://github.com/neheb,meson: fix compilation under uClibc-ng,1,[],https://github.com/flashrom/flashrom/pull/156,https://github.com/neheb,1,https://github.com/flashrom/flashrom/pull/156,"fileno requires _POSIX_C_SOURCE to only be defined.
nanosleep requires _POSIX_C_SOURCE to be defined to 199309L.
strndup requires _POSIX_C_SOURCE to be defined to 200809L.
Signed-off-by: Rosen Penev rosenp@gmail.com","fileno requires _POSIX_C_SOURCE to only be defined.
nanosleep requires _POSIX_C_SOURCE to be defined to 199309L.
strndup requires _POSIX_C_SOURCE to be defined to 200809L.
Signed-off-by: Rosen Penev rosenp@gmail.com",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,156,2020-07-18T19:52:12Z,2020-07-21T05:28:57Z,2020-07-21T06:04:03Z,CLOSED,False,1,1,1,https://github.com/neheb,meson: fix compilation under uClibc-ng,1,[],https://github.com/flashrom/flashrom/pull/156,https://github.com/dhendrix,2,https://github.com/flashrom/flashrom/pull/156#issuecomment-660730319,"fileno requires _POSIX_C_SOURCE to only be defined.
nanosleep requires _POSIX_C_SOURCE to be defined to 199309L.
strndup requires _POSIX_C_SOURCE to be defined to 200809L.
Signed-off-by: Rosen Penev rosenp@gmail.com","Thanks for doing this. I went ahead and sent this one upstream for review: https://review.coreboot.org/c/flashrom/+/43599
I'd like to check with other maintainers to see if there's a preference for how to set feature macros.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,156,2020-07-18T19:52:12Z,2020-07-21T05:28:57Z,2020-07-21T06:04:03Z,CLOSED,False,1,1,1,https://github.com/neheb,meson: fix compilation under uClibc-ng,1,[],https://github.com/flashrom/flashrom/pull/156,https://github.com/neheb,3,https://github.com/flashrom/flashrom/pull/156#issuecomment-660736122,"fileno requires _POSIX_C_SOURCE to only be defined.
nanosleep requires _POSIX_C_SOURCE to be defined to 199309L.
strndup requires _POSIX_C_SOURCE to be defined to 200809L.
Signed-off-by: Rosen Penev rosenp@gmail.com",_GNU_SOURCE enables everyhing. That's the simplest solution.,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,156,2020-07-18T19:52:12Z,2020-07-21T05:28:57Z,2020-07-21T06:04:03Z,CLOSED,False,1,1,1,https://github.com/neheb,meson: fix compilation under uClibc-ng,1,[],https://github.com/flashrom/flashrom/pull/156,https://github.com/dhendrix,4,https://github.com/flashrom/flashrom/pull/156#issuecomment-661642160,"fileno requires _POSIX_C_SOURCE to only be defined.
nanosleep requires _POSIX_C_SOURCE to be defined to 199309L.
strndup requires _POSIX_C_SOURCE to be defined to 200809L.
Signed-off-by: Rosen Penev rosenp@gmail.com","Patch has been merged upstream, thanks!
Closing this out.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,160,2020-07-31T20:42:33Z,2020-07-31T20:56:19Z,2020-07-31T20:56:19Z,CLOSED,False,43,0,2,https://github.com/cecada,Add support for BY25Q128AS - Boya Micro Microelectronics,2,[],https://github.com/flashrom/flashrom/pull/160,https://github.com/cecada,1,https://github.com/flashrom/flashrom/pull/160,"This contrib adds support for BY25Q128AS (128Mb) - Boya Micro Microelectronics. I have tested it and dumped firmware using this code, and this chip.","This contrib adds support for BY25Q128AS (128Mb) - Boya Micro Microelectronics. I have tested it and dumped firmware using this code, and this chip.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,161,2020-08-01T12:57:51Z,,2020-08-09T02:22:08Z,OPEN,False,42,0,2,https://github.com/cecada,Added support for BY25Q128AS - BoyaMicro Electronics ,6,[],https://github.com/flashrom/flashrom/pull/161,https://github.com/cecada,1,https://github.com/flashrom/flashrom/pull/161,"Sorry for the false start earlier, noticed a potential error, fixed it. Retested under several conditions, seems to work great.
Added support for BY25Q128AS - BoyaMicro Electronics
Signed-off-by: Jack Olsen omegasec@tutanota.com","Sorry for the false start earlier, noticed a potential error, fixed it. Retested under several conditions, seems to work great.
Added support for BY25Q128AS - BoyaMicro Electronics
Signed-off-by: Jack Olsen omegasec@tutanota.com",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,161,2020-08-01T12:57:51Z,,2020-08-09T02:22:08Z,OPEN,False,42,0,2,https://github.com/cecada,Added support for BY25Q128AS - BoyaMicro Electronics ,6,[],https://github.com/flashrom/flashrom/pull/161,https://github.com/cecada,2,https://github.com/flashrom/flashrom/pull/161#issuecomment-668934389,"Sorry for the false start earlier, noticed a potential error, fixed it. Retested under several conditions, seems to work great.
Added support for BY25Q128AS - BoyaMicro Electronics
Signed-off-by: Jack Olsen omegasec@tutanota.com","Thanks for the PR. In addition to the comments in flashchips.c, please add your sign-off to the commit message as per https://flashrom.org/Development_Guidelines#Sign-off_Procedure

Added signature line to top level comment. Let me know if this works.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,161,2020-08-01T12:57:51Z,,2020-08-09T02:22:08Z,OPEN,False,42,0,2,https://github.com/cecada,Added support for BY25Q128AS - BoyaMicro Electronics ,6,[],https://github.com/flashrom/flashrom/pull/161,https://github.com/Th3Fanbus,3,https://github.com/flashrom/flashrom/pull/161#issuecomment-669047430,"Sorry for the false start earlier, noticed a potential error, fixed it. Retested under several conditions, seems to work great.
Added support for BY25Q128AS - BoyaMicro Electronics
Signed-off-by: Jack Olsen omegasec@tutanota.com","The GitHub repo is a mirror from Gerrit, where we review and submit patches. It's at https://review.coreboot.org and you can use GitHub as a login method. We use the same infrastructure as coreboot, so you can use the same instructions: https://doc.coreboot.org/tutorial/part2.html
If you cloned the repo from GitHub, you would need to update the remote git repository's location. In case you get an error when running git push, try with git push origin HEAD:refs/for/master instead.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,161,2020-08-01T12:57:51Z,,2020-08-09T02:22:08Z,OPEN,False,42,0,2,https://github.com/cecada,Added support for BY25Q128AS - BoyaMicro Electronics ,6,[],https://github.com/flashrom/flashrom/pull/161,https://github.com/cecada,4,https://github.com/flashrom/flashrom/pull/161#issuecomment-670996234,"Sorry for the false start earlier, noticed a potential error, fixed it. Retested under several conditions, seems to work great.
Added support for BY25Q128AS - BoyaMicro Electronics
Signed-off-by: Jack Olsen omegasec@tutanota.com","The GitHub repo is a mirror from Gerrit, where we review and submit patches. It's at https://review.coreboot.org and you can use GitHub as a login method. We use the same infrastructure as coreboot, so you can use the same instructions: https://doc.coreboot.org/tutorial/part2.html
If you cloned the repo from GitHub, you would need to update the remote git repository's location. In case you get an error when running git push, try with git push origin HEAD:refs/for/master instead.

Done.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,162,2020-08-08T14:12:55Z,2020-12-11T11:34:22Z,2020-12-11T11:34:22Z,CLOSED,False,1,1,1,https://github.com/wigyori,flashchips: Mark Intel 25F640S33B8 as TESTED_PREW,1,[],https://github.com/flashrom/flashrom/pull/162,https://github.com/wigyori,1,https://github.com/flashrom/flashrom/pull/162,"Tested with ch341a_spi from an Atheros AP81 reference board.
Signed-off-by: Zoltan HERPAI wigyori@uid0.hu","Tested with ch341a_spi from an Atheros AP81 reference board.
Signed-off-by: Zoltan HERPAI wigyori@uid0.hu",True,{'THUMBS_UP': ['https://github.com/martonmiklos']}
flashrom/flashrom,https://github.com/flashrom/flashrom,162,2020-08-08T14:12:55Z,2020-12-11T11:34:22Z,2020-12-11T11:34:22Z,CLOSED,False,1,1,1,https://github.com/wigyori,flashchips: Mark Intel 25F640S33B8 as TESTED_PREW,1,[],https://github.com/flashrom/flashrom/pull/162,https://github.com/martonmiklos,2,https://github.com/flashrom/flashrom/pull/162#issuecomment-671435651,"Tested with ch341a_spi from an Atheros AP81 reference board.
Signed-off-by: Zoltan HERPAI wigyori@uid0.hu","Submitted to gerrit for review:
https://review.coreboot.org/c/flashrom/+/44342
Pacsi!",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,162,2020-08-08T14:12:55Z,2020-12-11T11:34:22Z,2020-12-11T11:34:22Z,CLOSED,False,1,1,1,https://github.com/wigyori,flashchips: Mark Intel 25F640S33B8 as TESTED_PREW,1,[],https://github.com/flashrom/flashrom/pull/162,https://github.com/martonmiklos,3,https://github.com/flashrom/flashrom/pull/162#issuecomment-743078434,"Tested with ch341a_spi from an Atheros AP81 reference board.
Signed-off-by: Zoltan HERPAI wigyori@uid0.hu","@wigyori better later than never it got merged now on gerrit:
https://review.coreboot.org/c/flashrom/+/44342
Please close the PR!",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,162,2020-08-08T14:12:55Z,2020-12-11T11:34:22Z,2020-12-11T11:34:22Z,CLOSED,False,1,1,1,https://github.com/wigyori,flashchips: Mark Intel 25F640S33B8 as TESTED_PREW,1,[],https://github.com/flashrom/flashrom/pull/162,https://github.com/Th3Fanbus,4,https://github.com/flashrom/flashrom/pull/162#issuecomment-743142978,"Tested with ch341a_spi from an Atheros AP81 reference board.
Signed-off-by: Zoltan HERPAI wigyori@uid0.hu","Sorry that it took so long to submit, it fell off my radar. In the future, if any patches have been sitting on Gerrit for over a week without any review activity, please comment on them (like Miklós Márton did) or send a message to the #flashrom IRC channel on Freenode. I go by hell__ on IRC, feel free to poke me there anytime (even if I am away or sleeping, I will see the messages when I come back).
Anyway, patch was submitted upstream, closing. \o/",True,{'THUMBS_UP': ['https://github.com/martonmiklos']}
flashrom/flashrom,https://github.com/flashrom/flashrom,166,2020-09-07T12:14:38Z,2021-05-29T08:10:44Z,2021-05-29T08:10:44Z,CLOSED,False,1,0,1,https://github.com/happycorsair,Add Intel B365 chipset support,1,[],https://github.com/flashrom/flashrom/pull/166,https://github.com/happycorsair,1,https://github.com/flashrom/flashrom/pull/166,"Add a new PCH device ID for B365.
Thanks!","Add a new PCH device ID for B365.
Thanks!",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,166,2020-09-07T12:14:38Z,2021-05-29T08:10:44Z,2021-05-29T08:10:44Z,CLOSED,False,1,0,1,https://github.com/happycorsair,Add Intel B365 chipset support,1,[],https://github.com/flashrom/flashrom/pull/166,https://github.com/Th3Fanbus,2,https://github.com/flashrom/flashrom/pull/166#issuecomment-850792731,"Add a new PCH device ID for B365.
Thanks!","Closing, already done in https://review.coreboot.org/52605",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,170,2020-10-13T20:13:26Z,2020-10-21T23:28:50Z,2020-10-23T15:00:11Z,CLOSED,False,284,0,3,https://github.com/septs,Add support for Fudan SPI flash chips,2,[],https://github.com/flashrom/flashrom/pull/170,https://github.com/septs,1,https://github.com/flashrom/flashrom/pull/170,"rebase #74 to master branch.
closes #74 #169","rebase #74 to master branch.
closes #74 #169",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,170,2020-10-13T20:13:26Z,2020-10-21T23:28:50Z,2020-10-23T15:00:11Z,CLOSED,False,284,0,3,https://github.com/septs,Add support for Fudan SPI flash chips,2,[],https://github.com/flashrom/flashrom/pull/170,https://github.com/septs,2,https://github.com/flashrom/flashrom/pull/170#issuecomment-707983469,"rebase #74 to master branch.
closes #74 #169","request merge to upstream, thanks.
@dhendrix",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,173,2020-10-26T06:33:07Z,2020-10-26T07:52:01Z,2020-10-26T07:52:08Z,CLOSED,False,6,0,1,https://github.com/0dvictor,Fixing build failure when installing by HomeBrew,2,[],https://github.com/flashrom/flashrom/pull/173,https://github.com/0dvictor,1,https://github.com/flashrom/flashrom/pull/173,"Fixing #172
Change-Id: I32d7fea872e73e0696cfa5b151f689d5dccb4ad7
Signed-off-by: Victor Ding victording@google.com","Fixing #172
Change-Id: I32d7fea872e73e0696cfa5b151f689d5dccb4ad7
Signed-off-by: Victor Ding victording@google.com",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,173,2020-10-26T06:33:07Z,2020-10-26T07:52:01Z,2020-10-26T07:52:08Z,CLOSED,False,6,0,1,https://github.com/0dvictor,Fixing build failure when installing by HomeBrew,2,[],https://github.com/flashrom/flashrom/pull/173,https://github.com/septs,2,https://github.com/flashrom/flashrom/pull/173#issuecomment-716356027,"Fixing #172
Change-Id: I32d7fea872e73e0696cfa5b151f689d5dccb4ad7
Signed-off-by: Victor Ding victording@google.com",Not commit to https://review.coreboot.org/q/project:flashrom ?,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,173,2020-10-26T06:33:07Z,2020-10-26T07:52:01Z,2020-10-26T07:52:08Z,CLOSED,False,6,0,1,https://github.com/0dvictor,Fixing build failure when installing by HomeBrew,2,[],https://github.com/flashrom/flashrom/pull/173,https://github.com/0dvictor,3,https://github.com/flashrom/flashrom/pull/173#issuecomment-716363203,"Fixing #172
Change-Id: I32d7fea872e73e0696cfa5b151f689d5dccb4ad7
Signed-off-by: Victor Ding victording@google.com","Sure, I can send the patches to https://review.coreboot.org/q/project:flashrom.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,173,2020-10-26T06:33:07Z,2020-10-26T07:52:01Z,2020-10-26T07:52:08Z,CLOSED,False,6,0,1,https://github.com/0dvictor,Fixing build failure when installing by HomeBrew,2,[],https://github.com/flashrom/flashrom/pull/173,https://github.com/septs,4,https://github.com/flashrom/flashrom/pull/173#issuecomment-716364516,"Fixing #172
Change-Id: I32d7fea872e73e0696cfa5b151f689d5dccb4ad7
Signed-off-by: Victor Ding victording@google.com","This fixing include #168, is same problem.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,173,2020-10-26T06:33:07Z,2020-10-26T07:52:01Z,2020-10-26T07:52:08Z,CLOSED,False,6,0,1,https://github.com/0dvictor,Fixing build failure when installing by HomeBrew,2,[],https://github.com/flashrom/flashrom/pull/173,https://github.com/0dvictor,5,https://github.com/flashrom/flashrom/pull/173#issuecomment-716373200,"Fixing #172
Change-Id: I32d7fea872e73e0696cfa5b151f689d5dccb4ad7
Signed-off-by: Victor Ding victording@google.com","The fixes are now at: https://review.coreboot.org/c/flashrom/+/46811 and https://review.coreboot.org/c/flashrom/+/46812.
Should I close this pull request?",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,173,2020-10-26T06:33:07Z,2020-10-26T07:52:01Z,2020-10-26T07:52:08Z,CLOSED,False,6,0,1,https://github.com/0dvictor,Fixing build failure when installing by HomeBrew,2,[],https://github.com/flashrom/flashrom/pull/173,https://github.com/septs,6,https://github.com/flashrom/flashrom/pull/173#issuecomment-716375247,"Fixing #172
Change-Id: I32d7fea872e73e0696cfa5b151f689d5dccb4ad7
Signed-off-by: Victor Ding victording@google.com",yep.,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,178,2020-12-06T18:52:25Z,,2020-12-11T17:20:06Z,OPEN,False,39,0,2,https://github.com/jogolden,Add W25Q16JVNIM support,5,[],https://github.com/flashrom/flashrom/pull/178,https://github.com/jogolden,1,https://github.com/flashrom/flashrom/pull/178,The PlayStation 5 has a W25Q16JVNIM chip from winbond.,The PlayStation 5 has a W25Q16JVNIM chip from winbond.,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,178,2020-12-06T18:52:25Z,,2020-12-11T17:20:06Z,OPEN,False,39,0,2,https://github.com/jogolden,Add W25Q16JVNIM support,5,[],https://github.com/flashrom/flashrom/pull/178,https://github.com/jogolden,2,https://github.com/flashrom/flashrom/pull/178#issuecomment-739546165,The PlayStation 5 has a W25Q16JVNIM chip from winbond.,Datasheet: https://www.winbond.com/resource-files/w25q16jv%20spi%20revg%2003222018%20plus.pdf,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,178,2020-12-06T18:52:25Z,,2020-12-11T17:20:06Z,OPEN,False,39,0,2,https://github.com/jogolden,Add W25Q16JVNIM support,5,[],https://github.com/flashrom/flashrom/pull/178,https://github.com/martonmiklos,3,https://github.com/flashrom/flashrom/pull/178#issuecomment-743061913,The PlayStation 5 has a W25Q16JVNIM chip from winbond.,"Hello @jogolden
Could you please add your signoff to the commit message?
https://flashrom.org/Development_Guidelines#Sign-off_Procedure
Are you familiar with the gerrit review process? If not I can move it there.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,178,2020-12-06T18:52:25Z,,2020-12-11T17:20:06Z,OPEN,False,39,0,2,https://github.com/jogolden,Add W25Q16JVNIM support,5,[],https://github.com/flashrom/flashrom/pull/178,https://github.com/jogolden,4,https://github.com/flashrom/flashrom/pull/178#issuecomment-743291836,The PlayStation 5 has a W25Q16JVNIM chip from winbond.,Is this okay?,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,178,2020-12-06T18:52:25Z,,2020-12-11T17:20:06Z,OPEN,False,39,0,2,https://github.com/jogolden,Add W25Q16JVNIM support,5,[],https://github.com/flashrom/flashrom/pull/178,https://github.com/martonmiklos,5,https://github.com/flashrom/flashrom/pull/178#issuecomment-743299073,The PlayStation 5 has a W25Q16JVNIM chip from winbond.,"Hi  @jogolden
Well I still do not see the signoff in your commit message, so here is what I recommend to do:
Run git commit -a --amend in your repo.
This will open up the commit message editor, paste the following to the end of the message:
Signed-off-by:  John Fitzgerald jofitz@protonmail.com
Save the commit message.
Push the modified message with git push --force
Then I will take care of moving this change to gerrit and get it reviewed and merged there.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,178,2020-12-06T18:52:25Z,,2020-12-11T17:20:06Z,OPEN,False,39,0,2,https://github.com/jogolden,Add W25Q16JVNIM support,5,[],https://github.com/flashrom/flashrom/pull/178,https://github.com/jogolden,6,https://github.com/flashrom/flashrom/pull/178#issuecomment-743310932,The PlayStation 5 has a W25Q16JVNIM chip from winbond.,"Damn this has turned into a mess, Im sorry",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,178,2020-12-06T18:52:25Z,,2020-12-11T17:20:06Z,OPEN,False,39,0,2,https://github.com/jogolden,Add W25Q16JVNIM support,5,[],https://github.com/flashrom/flashrom/pull/178,https://github.com/martonmiklos,7,https://github.com/flashrom/flashrom/pull/178#issuecomment-743320880,The PlayStation 5 has a W25Q16JVNIM chip from winbond.,"No worries, git is hard sometimes.
I can squash it befire moving to gerrit.
I only need a signoff in a commit message for formal reasons.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,193,2021-02-24T12:19:05Z,2022-04-28T05:05:06Z,2022-04-28T05:05:06Z,CLOSED,False,39,0,2,https://github.com/delikely,Add XMC XM25QH128A support,2,[],https://github.com/flashrom/flashrom/pull/193,https://github.com/delikely,1,https://github.com/flashrom/flashrom/pull/193,,,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,193,2021-02-24T12:19:05Z,2022-04-28T05:05:06Z,2022-04-28T05:05:06Z,CLOSED,False,39,0,2,https://github.com/delikely,Add XMC XM25QH128A support,2,[],https://github.com/flashrom/flashrom/pull/193,https://github.com/shr70,2,https://github.com/flashrom/flashrom/pull/193#issuecomment-788252658,,I just used this PR to dump a XM25QH128A. Seems to be working just fine. Thanks!,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,193,2021-02-24T12:19:05Z,2022-04-28T05:05:06Z,2022-04-28T05:05:06Z,CLOSED,False,39,0,2,https://github.com/delikely,Add XMC XM25QH128A support,2,[],https://github.com/flashrom/flashrom/pull/193,https://github.com/DavideFioravanti,3,https://github.com/flashrom/flashrom/pull/193#issuecomment-1075700957,,I can confirm it's working correctly both reading and writing an XM25QH128A,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,193,2021-02-24T12:19:05Z,2022-04-28T05:05:06Z,2022-04-28T05:05:06Z,CLOSED,False,39,0,2,https://github.com/delikely,Add XMC XM25QH128A support,2,[],https://github.com/flashrom/flashrom/pull/193,https://github.com/felixsinger,4,https://github.com/flashrom/flashrom/pull/193#issuecomment-1111749453,,https://review.coreboot.org/c/flashrom/+/63908,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,199,2021-03-10T03:43:52Z,2021-04-14T00:27:42Z,2021-04-14T00:27:42Z,CLOSED,False,30,0,2,https://github.com/thhwalker,Added support for Spansion chip S25FL256L,1,[],https://github.com/flashrom/flashrom/pull/199,https://github.com/thhwalker,1,https://github.com/flashrom/flashrom/pull/199,"Added support for Spansion/Cypress chip S25FL256L.
Full datasheet LOCATED HERE
All functions have been tested on approximately 20 devices repeatedly with no fault.","Added support for Spansion/Cypress chip S25FL256L.
Full datasheet LOCATED HERE
All functions have been tested on approximately 20 devices repeatedly with no fault.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,199,2021-03-10T03:43:52Z,2021-04-14T00:27:42Z,2021-04-14T00:27:42Z,CLOSED,False,30,0,2,https://github.com/thhwalker,Added support for Spansion chip S25FL256L,1,[],https://github.com/flashrom/flashrom/pull/199,https://github.com/thhwalker,2,https://github.com/flashrom/flashrom/pull/199#issuecomment-819135628,"Added support for Spansion/Cypress chip S25FL256L.
Full datasheet LOCATED HERE
All functions have been tested on approximately 20 devices repeatedly with no fault.","Closing this off as I have gone directly through the coreboot repo, rather than the mirror.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,200,2021-03-13T23:12:50Z,2022-04-28T05:10:36Z,2022-04-28T05:10:36Z,CLOSED,False,38,0,1,https://github.com/rtreffer,Add support for BrightMoon T25S40,1,[],https://github.com/flashrom/flashrom/pull/200,https://github.com/rtreffer,1,https://github.com/flashrom/flashrom/pull/200,"I misflashed / had a broken uPD720201 which used a BrightMoon T25S40 that identified as 0x5e/0x2013?
Rumors said it would be similar to the N25S40, so I gave the settings a try, adjusted it a bit based on the datasheet and it flashed without issues. I haven't done more than reviving a single card so I can't guarantee more but it worked.
Change-Id: Ia47e015aca092c2886703fdce1ff793246e1fc24
Signed-off-by: René Treffer treffer@measite.de","I misflashed / had a broken uPD720201 which used a BrightMoon T25S40 that identified as 0x5e/0x2013?
Rumors said it would be similar to the N25S40, so I gave the settings a try, adjusted it a bit based on the datasheet and it flashed without issues. I haven't done more than reviving a single card so I can't guarantee more but it worked.
Change-Id: Ia47e015aca092c2886703fdce1ff793246e1fc24
Signed-off-by: René Treffer treffer@measite.de",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,200,2021-03-13T23:12:50Z,2022-04-28T05:10:36Z,2022-04-28T05:10:36Z,CLOSED,False,38,0,1,https://github.com/rtreffer,Add support for BrightMoon T25S40,1,[],https://github.com/flashrom/flashrom/pull/200,https://github.com/felixsinger,2,https://github.com/flashrom/flashrom/pull/200#issuecomment-1111752054,"I misflashed / had a broken uPD720201 which used a BrightMoon T25S40 that identified as 0x5e/0x2013?
Rumors said it would be similar to the N25S40, so I gave the settings a try, adjusted it a bit based on the datasheet and it flashed without issues. I haven't done more than reviving a single card so I can't guarantee more but it worked.
Change-Id: Ia47e015aca092c2886703fdce1ff793246e1fc24
Signed-off-by: René Treffer treffer@measite.de",https://review.coreboot.org/c/flashrom/+/63909,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,203,2021-03-27T18:18:04Z,,2021-03-30T09:35:44Z,OPEN,False,88,0,2,https://github.com/romanstingler,add support for MX25U4033E,3,[],https://github.com/flashrom/flashrom/pull/203,https://github.com/romanstingler,1,https://github.com/flashrom/flashrom/pull/203,"Change-Id: I3692c6ead4b87e60ae39520ecc10448ee72927d6
Signed-off-by: Roman Stingler  roman.stingler@gmail.com
closes  #202","Change-Id: I3692c6ead4b87e60ae39520ecc10448ee72927d6
Signed-off-by: Roman Stingler  roman.stingler@gmail.com
closes  #202",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,203,2021-03-27T18:18:04Z,,2021-03-30T09:35:44Z,OPEN,False,88,0,2,https://github.com/romanstingler,add support for MX25U4033E,3,[],https://github.com/flashrom/flashrom/pull/203,https://github.com/romanstingler,2,https://github.com/flashrom/flashrom/pull/203#issuecomment-808781536,"Change-Id: I3692c6ead4b87e60ae39520ecc10448ee72927d6
Signed-off-by: Roman Stingler  roman.stingler@gmail.com
closes  #202","tested erasing, reading(empty),writing, verifying (written data). works so far",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,204,2021-03-27T18:50:14Z,2022-04-28T05:35:16Z,2022-04-28T05:35:16Z,CLOSED,False,43,0,2,https://github.com/romanstingler,add support for IS25WQ040,2,[],https://github.com/flashrom/flashrom/pull/204,https://github.com/romanstingler,1,https://github.com/flashrom/flashrom/pull/204,"Change-Id: I6f188e006bda415221c571c6aa9cfece649e572f
Signed-off-by: Roman Stingler  roman.stingler@gmail.com
closes #201
tested, empty, read(empty), write, verify (written data), works","Change-Id: I6f188e006bda415221c571c6aa9cfece649e572f
Signed-off-by: Roman Stingler  roman.stingler@gmail.com
closes #201
tested, empty, read(empty), write, verify (written data), works",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,204,2021-03-27T18:50:14Z,2022-04-28T05:35:16Z,2022-04-28T05:35:16Z,CLOSED,False,43,0,2,https://github.com/romanstingler,add support for IS25WQ040,2,[],https://github.com/flashrom/flashrom/pull/204,https://github.com/romanstingler,2,https://github.com/flashrom/flashrom/pull/204#issuecomment-808785921,"Change-Id: I6f188e006bda415221c571c6aa9cfece649e572f
Signed-off-by: Roman Stingler  roman.stingler@gmail.com
closes #201
tested, empty, read(empty), write, verify (written data), works",closes #201,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,204,2021-03-27T18:50:14Z,2022-04-28T05:35:16Z,2022-04-28T05:35:16Z,CLOSED,False,43,0,2,https://github.com/romanstingler,add support for IS25WQ040,2,[],https://github.com/flashrom/flashrom/pull/204,https://github.com/felixsinger,3,https://github.com/flashrom/flashrom/pull/204#issuecomment-1111767393,"Change-Id: I6f188e006bda415221c571c6aa9cfece649e572f
Signed-off-by: Roman Stingler  roman.stingler@gmail.com
closes #201
tested, empty, read(empty), write, verify (written data), works",https://review.coreboot.org/c/flashrom/+/63910,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,205,2021-03-29T12:55:54Z,2022-04-28T06:49:41Z,2022-04-28T06:49:41Z,CLOSED,False,1,1,1,https://github.com/romanstingler,flashchips.c: mark PM25LQ020 as TESTED_OK_PREW,1,[],https://github.com/flashrom/flashrom/pull/205,https://github.com/romanstingler,1,https://github.com/flashrom/flashrom/pull/205,"Change-Id: I6f188e006bda415221c571c6aa9cfece649e572f
Signed-off-by: Roman Stingler roman.stingler@gmail.com","Change-Id: I6f188e006bda415221c571c6aa9cfece649e572f
Signed-off-by: Roman Stingler roman.stingler@gmail.com",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,205,2021-03-29T12:55:54Z,2022-04-28T06:49:41Z,2022-04-28T06:49:41Z,CLOSED,False,1,1,1,https://github.com/romanstingler,flashchips.c: mark PM25LQ020 as TESTED_OK_PREW,1,[],https://github.com/flashrom/flashrom/pull/205,https://github.com/felixsinger,2,https://github.com/flashrom/flashrom/pull/205#issuecomment-1111811402,"Change-Id: I6f188e006bda415221c571c6aa9cfece649e572f
Signed-off-by: Roman Stingler roman.stingler@gmail.com",https://review.coreboot.org/c/flashrom/+/63921,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,206,2021-03-29T13:09:28Z,2022-04-28T04:52:44Z,2022-04-28T04:52:44Z,CLOSED,False,42,0,1,https://github.com/romanstingler,Support For Macronix MX25V8035F,1,[],https://github.com/flashrom/flashrom/pull/206,https://github.com/romanstingler,1,https://github.com/flashrom/flashrom/pull/206,"Signed-off-by: Roman Stingler  roman.stingler@gmail.com
closes #179
Change-Id: Icaf19910703c5322054c92dda9d27d34c6678526","Signed-off-by: Roman Stingler  roman.stingler@gmail.com
closes #179
Change-Id: Icaf19910703c5322054c92dda9d27d34c6678526",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,206,2021-03-29T13:09:28Z,2022-04-28T04:52:44Z,2022-04-28T04:52:44Z,CLOSED,False,42,0,1,https://github.com/romanstingler,Support For Macronix MX25V8035F,1,[],https://github.com/flashrom/flashrom/pull/206,https://github.com/felixsinger,2,https://github.com/flashrom/flashrom/pull/206#issuecomment-1111744119,"Signed-off-by: Roman Stingler  roman.stingler@gmail.com
closes #179
Change-Id: Icaf19910703c5322054c92dda9d27d34c6678526",https://review.coreboot.org/c/flashrom/+/63906,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,207,2021-03-29T13:12:59Z,2022-04-28T08:23:26Z,2022-04-28T08:23:26Z,CLOSED,False,2,0,1,https://github.com/romanstingler,add idea to gitignore,1,[],https://github.com/flashrom/flashrom/pull/207,https://github.com/romanstingler,1,https://github.com/flashrom/flashrom/pull/207,"Change-Id: Id94b571e4ce089bb0b02c0eb44bb898e8dcc5290
Signed-off-by: Roman Stingler  roman.stingler@gmail.com","Change-Id: Id94b571e4ce089bb0b02c0eb44bb898e8dcc5290
Signed-off-by: Roman Stingler  roman.stingler@gmail.com",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,207,2021-03-29T13:12:59Z,2022-04-28T08:23:26Z,2022-04-28T08:23:26Z,CLOSED,False,2,0,1,https://github.com/romanstingler,add idea to gitignore,1,[],https://github.com/flashrom/flashrom/pull/207,https://github.com/heijligen,2,https://github.com/flashrom/flashrom/pull/207#issuecomment-1111817356,"Change-Id: Id94b571e4ce089bb0b02c0eb44bb898e8dcc5290
Signed-off-by: Roman Stingler  roman.stingler@gmail.com",Please add this to your personal gitignore. This is not flahsroms responsibility. https://git-scm.com/docs/gitignore,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,209,2021-04-15T18:49:03Z,2022-04-28T04:58:17Z,2022-04-28T04:58:18Z,CLOSED,False,43,0,2,https://github.com/charliebruce,Add support for Shenzhen First-Rank T25S32,1,[],https://github.com/flashrom/flashrom/pull/209,https://github.com/charliebruce,1,https://github.com/flashrom/flashrom/pull/209,"To be tested within the next week or so.
(I'll submit it on https://review.coreboot.org/ once it's been tested - this is just in case anyone can spot any mistakes)
Change-Id: I20b959275dd9b1151dad400a2c7b88c74310a10c
Signed-off-by: Charlie Bruce charliebruce@gmail.com","To be tested within the next week or so.
(I'll submit it on https://review.coreboot.org/ once it's been tested - this is just in case anyone can spot any mistakes)
Change-Id: I20b959275dd9b1151dad400a2c7b88c74310a10c
Signed-off-by: Charlie Bruce charliebruce@gmail.com",True,{'THUMBS_UP': ['https://github.com/martonmiklos']}
flashrom/flashrom,https://github.com/flashrom/flashrom,209,2021-04-15T18:49:03Z,2022-04-28T04:58:17Z,2022-04-28T04:58:18Z,CLOSED,False,43,0,2,https://github.com/charliebruce,Add support for Shenzhen First-Rank T25S32,1,[],https://github.com/flashrom/flashrom/pull/209,https://github.com/felixsinger,2,https://github.com/flashrom/flashrom/pull/209#issuecomment-1111746429,"To be tested within the next week or so.
(I'll submit it on https://review.coreboot.org/ once it's been tested - this is just in case anyone can spot any mistakes)
Change-Id: I20b959275dd9b1151dad400a2c7b88c74310a10c
Signed-off-by: Charlie Bruce charliebruce@gmail.com",https://review.coreboot.org/c/flashrom/+/63907,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,212,2021-06-29T21:25:16Z,2021-08-18T18:10:23Z,2021-08-18T18:10:26Z,CLOSED,False,2,0,1,https://github.com/areese,Add support for building on Apple Silicon by setting __FLASHROM_LITTL…,1,[],https://github.com/flashrom/flashrom/pull/212,https://github.com/areese,1,https://github.com/flashrom/flashrom/pull/212,…E_ENDIAN__ when arm64 && APPLE,…E_ENDIAN__ when arm64 && APPLE,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,212,2021-06-29T21:25:16Z,2021-08-18T18:10:23Z,2021-08-18T18:10:26Z,CLOSED,False,2,0,1,https://github.com/areese,Add support for building on Apple Silicon by setting __FLASHROM_LITTL…,1,[],https://github.com/flashrom/flashrom/pull/212,https://github.com/pcm720,2,https://github.com/flashrom/flashrom/pull/212#issuecomment-900948546,…E_ENDIAN__ when arm64 && APPLE,"This has already been fixed, please see 72af02b.
Current master branch builds successfully on M1 Mac with macOS 11.5.2",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,212,2021-06-29T21:25:16Z,2021-08-18T18:10:23Z,2021-08-18T18:10:26Z,CLOSED,False,2,0,1,https://github.com/areese,Add support for building on Apple Silicon by setting __FLASHROM_LITTL…,1,[],https://github.com/flashrom/flashrom/pull/212,https://github.com/areese,3,https://github.com/flashrom/flashrom/pull/212#issuecomment-901323954,…E_ENDIAN__ when arm64 && APPLE,TY,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,214,2021-07-03T16:14:56Z,,2021-07-03T16:14:56Z,OPEN,False,40,1,2,https://github.com/pranjalchanda08,Pranjalchanda08 patch 1,3,[],https://github.com/flashrom/flashrom/pull/214,https://github.com/pranjalchanda08,1,https://github.com/flashrom/flashrom/pull/214,"flashchips: Add ""MX25L3273F"" to add MX25L3273F chip support
Signed-off-by: Pranjal Chanda pranjalchanda08@gmail.com","flashchips: Add ""MX25L3273F"" to add MX25L3273F chip support
Signed-off-by: Pranjal Chanda pranjalchanda08@gmail.com",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,215,2021-07-25T12:10:16Z,2022-04-28T04:46:46Z,2022-04-28T04:46:46Z,CLOSED,False,42,0,2,https://github.com/nicoloboatto,Added support for ISSI IS25LP032 chip,1,[],https://github.com/flashrom/flashrom/pull/215,https://github.com/nicoloboatto,1,https://github.com/flashrom/flashrom/pull/215,Signed-off-by: Nicolò Boatto nicoloboatto@gmail.com,Signed-off-by: Nicolò Boatto nicoloboatto@gmail.com,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,215,2021-07-25T12:10:16Z,2022-04-28T04:46:46Z,2022-04-28T04:46:46Z,CLOSED,False,42,0,2,https://github.com/nicoloboatto,Added support for ISSI IS25LP032 chip,1,[],https://github.com/flashrom/flashrom/pull/215,https://github.com/emard,2,https://github.com/flashrom/flashrom/pull/215#issuecomment-936242691,Signed-off-by: Nicolò Boatto nicoloboatto@gmail.com,"I have IS25LP032, this patch seems good to me.
I'd give it
.tested         = TEST_OK_PREW,",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,215,2021-07-25T12:10:16Z,2022-04-28T04:46:46Z,2022-04-28T04:46:46Z,CLOSED,False,42,0,2,https://github.com/nicoloboatto,Added support for ISSI IS25LP032 chip,1,[],https://github.com/flashrom/flashrom/pull/215,https://github.com/felixsinger,3,https://github.com/flashrom/flashrom/pull/215#issuecomment-1111741600,Signed-off-by: Nicolò Boatto nicoloboatto@gmail.com,https://review.coreboot.org/c/flashrom/+/63905,True,{'THUMBS_UP': ['https://github.com/nicoloboatto']}
flashrom/flashrom,https://github.com/flashrom/flashrom,218,2021-08-03T06:56:37Z,,2021-08-03T06:56:37Z,OPEN,False,39,0,2,https://github.com/mhei,flashchips: add support for Winbond W25Q32JV..M,1,[],https://github.com/flashrom/flashrom/pull/218,https://github.com/mhei,1,https://github.com/flashrom/flashrom/pull/218,Signed-off-by: Michael Heimpold michael.heimpold@in-tech.com,Signed-off-by: Michael Heimpold michael.heimpold@in-tech.com,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,219,2021-08-10T09:48:37Z,2022-04-28T06:46:25Z,2022-04-28T06:46:26Z,CLOSED,False,1,1,1,https://github.com/pulkomandy,nic3com: mark PCI id 9006 as supported,1,[],https://github.com/flashrom/flashrom/pull/219,https://github.com/pulkomandy,1,https://github.com/flashrom/flashrom/pull/219,I have tested this with my 3com ethernet card and it works.,I have tested this with my 3com ethernet card and it works.,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,219,2021-08-10T09:48:37Z,2022-04-28T06:46:25Z,2022-04-28T06:46:26Z,CLOSED,False,1,1,1,https://github.com/pulkomandy,nic3com: mark PCI id 9006 as supported,1,[],https://github.com/flashrom/flashrom/pull/219,https://github.com/felixsinger,2,https://github.com/flashrom/flashrom/pull/219#issuecomment-1111809309,I have tested this with my 3com ethernet card and it works.,https://review.coreboot.org/c/flashrom/+/63920,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,223,2021-09-18T00:05:10Z,,2021-09-18T00:05:10Z,OPEN,False,38,0,2,https://github.com/nsayer,Add support for the W25Q64JVSM,1,[],https://github.com/flashrom/flashrom/pull/223,https://github.com/nsayer,1,https://github.com/flashrom/flashrom/pull/223,"Everything is half the size of the W25Q128JVSM,
and the device ID is 7017 instead of 7018
Signed-off-by: Nick Sayer nsayer@kfu.com","Everything is half the size of the W25Q128JVSM,
and the device ID is 7017 instead of 7018
Signed-off-by: Nick Sayer nsayer@kfu.com",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,224,2021-09-24T02:10:29Z,2022-04-28T04:42:28Z,2022-04-28T04:42:28Z,CLOSED,False,57,0,2,https://github.com/bkacjios,flashchips: Add ZB25VQ64,1,[],https://github.com/flashrom/flashrom/pull/224,https://github.com/bkacjios,1,https://github.com/flashrom/flashrom/pull/224,"The ZB25VQ64 seems to be a clone of the W25Q64FV. Only tested reading
and it seems to work. Verified my nand dump against a partition dump,
using sha1, and it came back as a match.
Change-Id: Idc85084f97275d295c801d982ab47ce3f3358fa3
Signed-off-by: Bkacjios blackops7799@gmail.com","The ZB25VQ64 seems to be a clone of the W25Q64FV. Only tested reading
and it seems to work. Verified my nand dump against a partition dump,
using sha1, and it came back as a match.
Change-Id: Idc85084f97275d295c801d982ab47ce3f3358fa3
Signed-off-by: Bkacjios blackops7799@gmail.com",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,224,2021-09-24T02:10:29Z,2022-04-28T04:42:28Z,2022-04-28T04:42:28Z,CLOSED,False,57,0,2,https://github.com/bkacjios,flashchips: Add ZB25VQ64,1,[],https://github.com/flashrom/flashrom/pull/224,https://github.com/felixsinger,2,https://github.com/flashrom/flashrom/pull/224#issuecomment-1111739901,"The ZB25VQ64 seems to be a clone of the W25Q64FV. Only tested reading
and it seems to work. Verified my nand dump against a partition dump,
using sha1, and it came back as a match.
Change-Id: Idc85084f97275d295c801d982ab47ce3f3358fa3
Signed-off-by: Bkacjios blackops7799@gmail.com",https://review.coreboot.org/c/flashrom/+/63904,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,227,2021-10-15T11:19:17Z,2022-04-28T02:47:14Z,2022-04-28T05:12:02Z,CLOSED,False,3,0,1,https://github.com/vkremneva,Add support for Synopsys ARC64 architecture,1,[],https://github.com/flashrom/flashrom/pull/227,https://github.com/vkremneva,1,https://github.com/flashrom/flashrom/pull/227,,,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,227,2021-10-15T11:19:17Z,2022-04-28T02:47:14Z,2022-04-28T05:12:02Z,CLOSED,False,3,0,1,https://github.com/vkremneva,Add support for Synopsys ARC64 architecture,1,[],https://github.com/flashrom/flashrom/pull/227,https://github.com/felixsinger,2,https://github.com/flashrom/flashrom/pull/227#issuecomment-1111683261,,https://review.coreboot.org/c/flashrom/+/63896,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,227,2021-10-15T11:19:17Z,2022-04-28T02:47:14Z,2022-04-28T05:12:02Z,CLOSED,False,3,0,1,https://github.com/vkremneva,Add support for Synopsys ARC64 architecture,1,[],https://github.com/flashrom/flashrom/pull/227,https://github.com/heijligen,3,https://github.com/flashrom/flashrom/pull/227#issuecomment-1111752748,,"I assume this macro is correct because an employee of synopsys hat add this. But I haven't found this macro in the GCC source code.
Can you point me to a location where to find it? Or is it just in not yet in mainline gcc?
We are switching to meson as primary build system. Is there support for ARC64?
(Crossposting gerrit)",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,228,2021-10-19T17:19:57Z,,2021-10-19T17:19:57Z,OPEN,False,10,10,1,https://github.com/busterbeam,Update and rename README to README.md,1,[],https://github.com/flashrom/flashrom/pull/228,https://github.com/busterbeam,1,https://github.com/flashrom/flashrom/pull/228,markdown is cleaner to read in some scenarios,markdown is cleaner to read in some scenarios,True,{'THUMBS_UP': ['https://github.com/alexmyczko']}
flashrom/flashrom,https://github.com/flashrom/flashrom,236,2021-12-19T14:59:45Z,2022-04-28T03:34:09Z,2022-04-28T03:34:09Z,CLOSED,False,37,0,2,https://github.com/f0rw4rd,Add support for XTX XT25F128B,1,[],https://github.com/flashrom/flashrom/pull/236,https://github.com/f0rw4rd,1,https://github.com/flashrom/flashrom/pull/236,"Read operation was tested on a RUT240 router
Signed-off-by: f0rw4rd f0rw4rd@protonmail.com","Read operation was tested on a RUT240 router
Signed-off-by: f0rw4rd f0rw4rd@protonmail.com",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,236,2021-12-19T14:59:45Z,2022-04-28T03:34:09Z,2022-04-28T03:34:09Z,CLOSED,False,37,0,2,https://github.com/f0rw4rd,Add support for XTX XT25F128B,1,[],https://github.com/flashrom/flashrom/pull/236,https://github.com/felixsinger,2,https://github.com/flashrom/flashrom/pull/236#issuecomment-1111706266,"Read operation was tested on a RUT240 router
Signed-off-by: f0rw4rd f0rw4rd@protonmail.com",https://review.coreboot.org/c/flashrom/+/63901,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,239,2022-02-10T20:47:53Z,2022-04-28T03:29:30Z,2022-04-28T03:29:30Z,CLOSED,False,58,0,2,https://github.com/AiyionPrime,XMC25QH6A chip support,5,[],https://github.com/flashrom/flashrom/pull/239,https://github.com/AiyionPrime,1,https://github.com/flashrom/flashrom/pull/239,"This intends to supersede #150
I fixed the indentation, reordered the additions in files @ayushman4 modified and tested this today on a XMC-XM25QH64AHIG.
The commits are not yet squashed in order to make the changes more visible.
Merging this resolves #148","This intends to supersede #150
I fixed the indentation, reordered the additions in files @ayushman4 modified and tested this today on a XMC-XM25QH64AHIG.
The commits are not yet squashed in order to make the changes more visible.
Merging this resolves #148",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,239,2022-02-10T20:47:53Z,2022-04-28T03:29:30Z,2022-04-28T03:29:30Z,CLOSED,False,58,0,2,https://github.com/AiyionPrime,XMC25QH6A chip support,5,[],https://github.com/flashrom/flashrom/pull/239,https://github.com/AiyionPrime,2,https://github.com/flashrom/flashrom/pull/239#issuecomment-1038171709,"This intends to supersede #150
I fixed the indentation, reordered the additions in files @ayushman4 modified and tested this today on a XMC-XM25QH64AHIG.
The commits are not yet squashed in order to make the changes more visible.
Merging this resolves #148",Let me know when the changes are fine with you and I can squash this into one proper commit.,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,239,2022-02-10T20:47:53Z,2022-04-28T03:29:30Z,2022-04-28T03:29:30Z,CLOSED,False,58,0,2,https://github.com/AiyionPrime,XMC25QH6A chip support,5,[],https://github.com/flashrom/flashrom/pull/239,https://github.com/felixsinger,3,https://github.com/flashrom/flashrom/pull/239#issuecomment-1111704038,"This intends to supersede #150
I fixed the indentation, reordered the additions in files @ayushman4 modified and tested this today on a XMC-XM25QH64AHIG.
The commits are not yet squashed in order to make the changes more visible.
Merging this resolves #148",https://review.coreboot.org/c/flashrom/+/63900,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,241,2022-02-16T02:27:57Z,2022-04-28T06:43:13Z,2022-04-28T06:43:14Z,CLOSED,False,2,0,2,https://github.com/direstraits96,Add support for motherboard Jetway P4MDPT,2,[],https://github.com/flashrom/flashrom/pull/241,https://github.com/direstraits96,1,https://github.com/flashrom/flashrom/pull/241,"Add support for motherboard Jetway P4MDPT
Read: OK
Flash: OK","Add support for motherboard Jetway P4MDPT
Read: OK
Flash: OK",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,241,2022-02-16T02:27:57Z,2022-04-28T06:43:13Z,2022-04-28T06:43:14Z,CLOSED,False,2,0,2,https://github.com/direstraits96,Add support for motherboard Jetway P4MDPT,2,[],https://github.com/flashrom/flashrom/pull/241,https://github.com/felixsinger,2,https://github.com/flashrom/flashrom/pull/241#issuecomment-1111807246,"Add support for motherboard Jetway P4MDPT
Read: OK
Flash: OK",https://review.coreboot.org/c/flashrom/+/63919,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,247,2022-03-01T09:28:25Z,2022-03-04T09:32:10Z,2022-03-04T09:32:10Z,CLOSED,False,5,0,1,https://github.com/CharlesParent,Add FTDI FT4233H,1,[],https://github.com/flashrom/flashrom/pull/247,https://github.com/CharlesParent,1,https://github.com/flashrom/flashrom/pull/247,"Hello,
We develop a PCIe card used for timing applications. The card needs to be flashed using a FTDI FT4233H (is connected to a MT25QU256 EEPROM)
It tested flashrom because FT4232H was supported and FT4233H chip is very similar to FT4232H one.
This PR adds productId for FT4233H chip.
Please let me know if you need more information.
Also as MT25QU256 is specified as untested I will gladly send you logs showing that Probe, read, write and erase works like  charm using flashrom.
Best regards,
Charles","Hello,
We develop a PCIe card used for timing applications. The card needs to be flashed using a FTDI FT4233H (is connected to a MT25QU256 EEPROM)
It tested flashrom because FT4232H was supported and FT4233H chip is very similar to FT4232H one.
This PR adds productId for FT4233H chip.
Please let me know if you need more information.
Also as MT25QU256 is specified as untested I will gladly send you logs showing that Probe, read, write and erase works like  charm using flashrom.
Best regards,
Charles",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,247,2022-03-01T09:28:25Z,2022-03-04T09:32:10Z,2022-03-04T09:32:10Z,CLOSED,False,5,0,1,https://github.com/CharlesParent,Add FTDI FT4233H,1,[],https://github.com/flashrom/flashrom/pull/247,https://github.com/Th3Fanbus,2,https://github.com/flashrom/flashrom/pull/247#issuecomment-1055280163,"Hello,
We develop a PCIe card used for timing applications. The card needs to be flashed using a FTDI FT4233H (is connected to a MT25QU256 EEPROM)
It tested flashrom because FT4232H was supported and FT4233H chip is very similar to FT4232H one.
This PR adds productId for FT4233H chip.
Please let me know if you need more information.
Also as MT25QU256 is specified as untested I will gladly send you logs showing that Probe, read, write and erase works like  charm using flashrom.
Best regards,
Charles","Hi, I just noticed that you also created a change on Gerrit: https://review.coreboot.org/62480
I've already reviewed the Gerrit change, let's continue there. As this GitHub repo is a mirror, we don't accept pull requests: we would need to manually turn the PR into Gerrit changes and submit those, which is cumbersome.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,247,2022-03-01T09:28:25Z,2022-03-04T09:32:10Z,2022-03-04T09:32:10Z,CLOSED,False,5,0,1,https://github.com/CharlesParent,Add FTDI FT4233H,1,[],https://github.com/flashrom/flashrom/pull/247,https://github.com/CharlesParent,3,https://github.com/flashrom/flashrom/pull/247#issuecomment-1055297925,"Hello,
We develop a PCIe card used for timing applications. The card needs to be flashed using a FTDI FT4233H (is connected to a MT25QU256 EEPROM)
It tested flashrom because FT4232H was supported and FT4233H chip is very similar to FT4232H one.
This PR adds productId for FT4233H chip.
Please let me know if you need more information.
Also as MT25QU256 is specified as untested I will gladly send you logs showing that Probe, read, write and erase works like  charm using flashrom.
Best regards,
Charles","Hi @Th3Fanbus, Thank you very much for your reactivity !",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,247,2022-03-01T09:28:25Z,2022-03-04T09:32:10Z,2022-03-04T09:32:10Z,CLOSED,False,5,0,1,https://github.com/CharlesParent,Add FTDI FT4233H,1,[],https://github.com/flashrom/flashrom/pull/247,https://github.com/CharlesParent,4,https://github.com/flashrom/flashrom/pull/247#issuecomment-1058994542,"Hello,
We develop a PCIe card used for timing applications. The card needs to be flashed using a FTDI FT4233H (is connected to a MT25QU256 EEPROM)
It tested flashrom because FT4232H was supported and FT4233H chip is very similar to FT4232H one.
This PR adds productId for FT4233H chip.
Please let me know if you need more information.
Also as MT25QU256 is specified as untested I will gladly send you logs showing that Probe, read, write and erase works like  charm using flashrom.
Best regards,
Charles",PR has been merged after gerrit process,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,250,2022-04-19T14:20:10Z,2022-04-28T03:10:49Z,2022-04-28T03:10:50Z,CLOSED,False,38,1,3,https://github.com/MNMtm,Add support for Spansion S25FL064L Flash device.,1,[],https://github.com/flashrom/flashrom/pull/250,https://github.com/MNMtm,1,https://github.com/flashrom/flashrom/pull/250,"Add support for Spansion S25FL064L Flash device.
Also, a patch is added to prevent UART shutdown on SMSC SCH3221 devices when probing for ITE devices.","Add support for Spansion S25FL064L Flash device.
Also, a patch is added to prevent UART shutdown on SMSC SCH3221 devices when probing for ITE devices.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,250,2022-04-19T14:20:10Z,2022-04-28T03:10:49Z,2022-04-28T03:10:50Z,CLOSED,False,38,1,3,https://github.com/MNMtm,Add support for Spansion S25FL064L Flash device.,1,[],https://github.com/flashrom/flashrom/pull/250,https://github.com/felixsinger,2,https://github.com/flashrom/flashrom/pull/250#issuecomment-1111694831,"Add support for Spansion S25FL064L Flash device.
Also, a patch is added to prevent UART shutdown on SMSC SCH3221 devices when probing for ITE devices.",https://review.coreboot.org/c/flashrom/+/63898,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,254,2022-05-02T10:09:56Z,2022-05-02T10:10:09Z,2022-05-02T10:10:10Z,CLOSED,False,1610,12,16,https://github.com/mgabryelski1,Dasharo develop,6,[],https://github.com/flashrom/flashrom/pull/254,https://github.com/mgabryelski1,1,https://github.com/flashrom/flashrom/pull/254,Added commits from Jira ORNV-64.,Added commits from Jira ORNV-64.,True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,254,2022-05-02T10:09:56Z,2022-05-02T10:10:09Z,2022-05-02T10:10:10Z,CLOSED,False,1610,12,16,https://github.com/mgabryelski1,Dasharo develop,6,[],https://github.com/flashrom/flashrom/pull/254,https://github.com/apps/github-actions,2,https://github.com/flashrom/flashrom/pull/254#issuecomment-1114690718,Added commits from Jira ORNV-64.,"Thank you for your contribution. The flashrom project does not handle GitHub issues or pull requests, since this repository on GitHub is just a mirror of our actual repository. Thus, we would like to encourage you to have a look at on our development guidelines and submit your patch to review.coreboot.org. Issues are handled over our ticket system. If you have questions, feel free to reach out to us. There are multiple ways to contact us.",True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,255,2022-05-02T14:43:36Z,2022-05-02T14:43:50Z,2022-05-09T18:30:48Z,CLOSED,False,1610,74,17,https://github.com/mgabryelski1,Dasharo develop2,8,[],https://github.com/flashrom/flashrom/pull/255,https://github.com/mgabryelski1,1,https://github.com/flashrom/flashrom/pull/255,Changes in branch dasharo-develop2 comparing to dasharo-develop (task: ORNV-64),Changes in branch dasharo-develop2 comparing to dasharo-develop (task: ORNV-64),True,{}
flashrom/flashrom,https://github.com/flashrom/flashrom,255,2022-05-02T14:43:36Z,2022-05-02T14:43:50Z,2022-05-09T18:30:48Z,CLOSED,False,1610,74,17,https://github.com/mgabryelski1,Dasharo develop2,8,[],https://github.com/flashrom/flashrom/pull/255,https://github.com/apps/github-actions,2,https://github.com/flashrom/flashrom/pull/255#issuecomment-1114980146,Changes in branch dasharo-develop2 comparing to dasharo-develop (task: ORNV-64),"Thank you for your contribution. The flashrom project does not handle GitHub issues or pull requests, since this repository on GitHub is just a mirror of our actual repository. Thus, we would like to encourage you to have a look at on our development guidelines and submit your patch to review.coreboot.org. Issues are handled over our ticket system. If you have questions, feel free to reach out to us. There are multiple ways to contact us.",True,{}
