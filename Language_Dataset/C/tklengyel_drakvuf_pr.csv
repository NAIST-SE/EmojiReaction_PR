tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,97,2016-03-08T08:37:49Z,2016-03-29T16:41:18Z,2016-03-29T16:41:18Z,MERGED,True,227,0,4,https://github.com/aoshiken,Added useful Windows routines...,1,[],https://github.com/tklengyel/drakvuf/pull/97,https://github.com/aoshiken,1,https://github.com/tklengyel/drakvuf/pull/97,"...for use within the hooks:

drakvuf_get_current_thread_id(): Get the current thread id
drakvuf_get_previous_mode(): Return the thread PreviousMode (see libdrakvuf.h)
drakvuf_is_ethread(): Check if the address argument is an _ETHREAD
drakvuf_is_eprocess(): Check if the adress argument is an _EPROCESS
drakvuf_obj_ref_by_handle(): Returns the Object body address from a HANDLE cheking its validity

This PR replaces #96","...for use within the hooks:

drakvuf_get_current_thread_id(): Get the current thread id
drakvuf_get_previous_mode(): Return the thread PreviousMode (see libdrakvuf.h)
drakvuf_is_ethread(): Check if the address argument is an _ETHREAD
drakvuf_is_eprocess(): Check if the adress argument is an _EPROCESS
drakvuf_obj_ref_by_handle(): Returns the Object body address from a HANDLE cheking its validity

This PR replaces #96",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,97,2016-03-08T08:37:49Z,2016-03-29T16:41:18Z,2016-03-29T16:41:18Z,MERGED,True,227,0,4,https://github.com/aoshiken,Added useful Windows routines...,1,[],https://github.com/tklengyel/drakvuf/pull/97,https://github.com/aoshiken,2,https://github.com/tklengyel/drakvuf/pull/97#issuecomment-193706266,"...for use within the hooks:

drakvuf_get_current_thread_id(): Get the current thread id
drakvuf_get_previous_mode(): Return the thread PreviousMode (see libdrakvuf.h)
drakvuf_is_ethread(): Check if the address argument is an _ETHREAD
drakvuf_is_eprocess(): Check if the adress argument is an _EPROCESS
drakvuf_obj_ref_by_handle(): Returns the Object body address from a HANDLE cheking its validity

This PR replaces #96","@tklengyel
As you said before I also moved the dispatcher object type  enum definition to win-processes.c",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,97,2016-03-08T08:37:49Z,2016-03-29T16:41:18Z,2016-03-29T16:41:18Z,MERGED,True,227,0,4,https://github.com/aoshiken,Added useful Windows routines...,1,[],https://github.com/tklengyel/drakvuf/pull/97,https://github.com/aoshiken,3,https://github.com/tklengyel/drakvuf/pull/97#issuecomment-193790959,"...for use within the hooks:

drakvuf_get_current_thread_id(): Get the current thread id
drakvuf_get_previous_mode(): Return the thread PreviousMode (see libdrakvuf.h)
drakvuf_is_ethread(): Check if the address argument is an _ETHREAD
drakvuf_is_eprocess(): Check if the adress argument is an _EPROCESS
drakvuf_obj_ref_by_handle(): Returns the Object body address from a HANDLE cheking its validity

This PR replaces #96",Do you need me to squash the commits?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,97,2016-03-08T08:37:49Z,2016-03-29T16:41:18Z,2016-03-29T16:41:18Z,MERGED,True,227,0,4,https://github.com/aoshiken,Added useful Windows routines...,1,[],https://github.com/tklengyel/drakvuf/pull/97,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/97#issuecomment-193797599,"...for use within the hooks:

drakvuf_get_current_thread_id(): Get the current thread id
drakvuf_get_previous_mode(): Return the thread PreviousMode (see libdrakvuf.h)
drakvuf_is_ethread(): Check if the address argument is an _ETHREAD
drakvuf_is_eprocess(): Check if the adress argument is an _EPROCESS
drakvuf_obj_ref_by_handle(): Returns the Object body address from a HANDLE cheking its validity

This PR replaces #96",Yes please. PRs should be having a single commit unless the feature that's being added is large enough and makes sense to break it into subsets.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,97,2016-03-08T08:37:49Z,2016-03-29T16:41:18Z,2016-03-29T16:41:18Z,MERGED,True,227,0,4,https://github.com/aoshiken,Added useful Windows routines...,1,[],https://github.com/tklengyel/drakvuf/pull/97,https://github.com/aoshiken,5,https://github.com/tklengyel/drakvuf/pull/97#issuecomment-193842895,"...for use within the hooks:

drakvuf_get_current_thread_id(): Get the current thread id
drakvuf_get_previous_mode(): Return the thread PreviousMode (see libdrakvuf.h)
drakvuf_is_ethread(): Check if the address argument is an _ETHREAD
drakvuf_is_eprocess(): Check if the adress argument is an _EPROCESS
drakvuf_obj_ref_by_handle(): Returns the Object body address from a HANDLE cheking its validity

This PR replaces #96",In just a few minutes,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,97,2016-03-08T08:37:49Z,2016-03-29T16:41:18Z,2016-03-29T16:41:18Z,MERGED,True,227,0,4,https://github.com/aoshiken,Added useful Windows routines...,1,[],https://github.com/tklengyel/drakvuf/pull/97,https://github.com/aoshiken,6,https://github.com/tklengyel/drakvuf/pull/97#issuecomment-193875528,"...for use within the hooks:

drakvuf_get_current_thread_id(): Get the current thread id
drakvuf_get_previous_mode(): Return the thread PreviousMode (see libdrakvuf.h)
drakvuf_is_ethread(): Check if the address argument is an _ETHREAD
drakvuf_is_eprocess(): Check if the adress argument is an _EPROCESS
drakvuf_obj_ref_by_handle(): Returns the Object body address from a HANDLE cheking its validity

This PR replaces #96",That makes sense for you? :),True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,97,2016-03-08T08:37:49Z,2016-03-29T16:41:18Z,2016-03-29T16:41:18Z,MERGED,True,227,0,4,https://github.com/aoshiken,Added useful Windows routines...,1,[],https://github.com/tklengyel/drakvuf/pull/97,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/97#issuecomment-193876660,"...for use within the hooks:

drakvuf_get_current_thread_id(): Get the current thread id
drakvuf_get_previous_mode(): Return the thread PreviousMode (see libdrakvuf.h)
drakvuf_is_ethread(): Check if the address argument is an _ETHREAD
drakvuf_is_eprocess(): Check if the adress argument is an _EPROCESS
drakvuf_obj_ref_by_handle(): Returns the Object body address from a HANDLE cheking its validity

This PR replaces #96","It's looking good now, I'll merge it once I have the PR tester up again (should be in the next couple weeks). Thanks!",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,97,2016-03-08T08:37:49Z,2016-03-29T16:41:18Z,2016-03-29T16:41:18Z,MERGED,True,227,0,4,https://github.com/aoshiken,Added useful Windows routines...,1,[],https://github.com/tklengyel/drakvuf/pull/97,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/97#issuecomment-199020240,"...for use within the hooks:

drakvuf_get_current_thread_id(): Get the current thread id
drakvuf_get_previous_mode(): Return the thread PreviousMode (see libdrakvuf.h)
drakvuf_is_ethread(): Check if the address argument is an _ETHREAD
drakvuf_is_eprocess(): Check if the adress argument is an _EPROCESS
drakvuf_obj_ref_by_handle(): Returns the Object body address from a HANDLE cheking its validity

This PR replaces #96",This is ok to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,97,2016-03-08T08:37:49Z,2016-03-29T16:41:18Z,2016-03-29T16:41:18Z,MERGED,True,227,0,4,https://github.com/aoshiken,Added useful Windows routines...,1,[],https://github.com/tklengyel/drakvuf/pull/97,https://github.com/drakvuf-jenkins,9,https://github.com/tklengyel/drakvuf/pull/97#issuecomment-199020249,"...for use within the hooks:

drakvuf_get_current_thread_id(): Get the current thread id
drakvuf_get_previous_mode(): Return the thread PreviousMode (see libdrakvuf.h)
drakvuf_is_ethread(): Check if the address argument is an _ETHREAD
drakvuf_is_eprocess(): Check if the adress argument is an _EPROCESS
drakvuf_obj_ref_by_handle(): Returns the Object body address from a HANDLE cheking its validity

This PR replaces #96",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,97,2016-03-08T08:37:49Z,2016-03-29T16:41:18Z,2016-03-29T16:41:18Z,MERGED,True,227,0,4,https://github.com/aoshiken,Added useful Windows routines...,1,[],https://github.com/tklengyel/drakvuf/pull/97,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/97#issuecomment-199033521,"...for use within the hooks:

drakvuf_get_current_thread_id(): Get the current thread id
drakvuf_get_previous_mode(): Return the thread PreviousMode (see libdrakvuf.h)
drakvuf_is_ethread(): Check if the address argument is an _ETHREAD
drakvuf_is_eprocess(): Check if the adress argument is an _EPROCESS
drakvuf_obj_ref_by_handle(): Returns the Object body address from a HANDLE cheking its validity

This PR replaces #96",Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,97,2016-03-08T08:37:49Z,2016-03-29T16:41:18Z,2016-03-29T16:41:18Z,MERGED,True,227,0,4,https://github.com/aoshiken,Added useful Windows routines...,1,[],https://github.com/tklengyel/drakvuf/pull/97,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/97#issuecomment-199037662,"...for use within the hooks:

drakvuf_get_current_thread_id(): Get the current thread id
drakvuf_get_previous_mode(): Return the thread PreviousMode (see libdrakvuf.h)
drakvuf_is_ethread(): Check if the address argument is an _ETHREAD
drakvuf_is_eprocess(): Check if the adress argument is an _EPROCESS
drakvuf_obj_ref_by_handle(): Returns the Object body address from a HANDLE cheking its validity

This PR replaces #96",So some of the changes introduced in this PR break DRAKVUF on x86 Windows 7. Can you look into it?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,97,2016-03-08T08:37:49Z,2016-03-29T16:41:18Z,2016-03-29T16:41:18Z,MERGED,True,227,0,4,https://github.com/aoshiken,Added useful Windows routines...,1,[],https://github.com/tklengyel/drakvuf/pull/97,https://github.com/aoshiken,12,https://github.com/tklengyel/drakvuf/pull/97#issuecomment-199392594,"...for use within the hooks:

drakvuf_get_current_thread_id(): Get the current thread id
drakvuf_get_previous_mode(): Return the thread PreviousMode (see libdrakvuf.h)
drakvuf_is_ethread(): Check if the address argument is an _ETHREAD
drakvuf_is_eprocess(): Check if the adress argument is an _EPROCESS
drakvuf_obj_ref_by_handle(): Returns the Object body address from a HANDLE cheking its validity

This PR replaces #96","Do you mean compiling errors or unexpected behaviour testing with a DomU Win7 x86?
Perhaps due to changes introduced by PR #104?
Unfortunately I won't be available until next week but any kind of info would be appreciated",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,97,2016-03-08T08:37:49Z,2016-03-29T16:41:18Z,2016-03-29T16:41:18Z,MERGED,True,227,0,4,https://github.com/aoshiken,Added useful Windows routines...,1,[],https://github.com/tklengyel/drakvuf/pull/97,https://github.com/tklengyel,13,https://github.com/tklengyel/drakvuf/pull/97#issuecomment-199397518,"...for use within the hooks:

drakvuf_get_current_thread_id(): Get the current thread id
drakvuf_get_previous_mode(): Return the thread PreviousMode (see libdrakvuf.h)
drakvuf_is_ethread(): Check if the address argument is an _ETHREAD
drakvuf_is_eprocess(): Check if the adress argument is an _EPROCESS
drakvuf_obj_ref_by_handle(): Returns the Object body address from a HANDLE cheking its validity

This PR replaces #96","PR #104 passed the CI test just fine and the current master branch is considered stable. However, when this PR is merged DRAKVUF doesn't run on x86 Windows anymore. I'm not quite sure why that would be the case but some extra testing may be necessary before we can merge this PR.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,97,2016-03-08T08:37:49Z,2016-03-29T16:41:18Z,2016-03-29T16:41:18Z,MERGED,True,227,0,4,https://github.com/aoshiken,Added useful Windows routines...,1,[],https://github.com/tklengyel/drakvuf/pull/97,https://github.com/tklengyel,14,https://github.com/tklengyel/drakvuf/pull/97#issuecomment-199913403,"...for use within the hooks:

drakvuf_get_current_thread_id(): Get the current thread id
drakvuf_get_previous_mode(): Return the thread PreviousMode (see libdrakvuf.h)
drakvuf_is_ethread(): Check if the address argument is an _ETHREAD
drakvuf_is_eprocess(): Check if the adress argument is an _EPROCESS
drakvuf_obj_ref_by_handle(): Returns the Object body address from a HANDLE cheking its validity

This PR replaces #96",Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,97,2016-03-08T08:37:49Z,2016-03-29T16:41:18Z,2016-03-29T16:41:18Z,MERGED,True,227,0,4,https://github.com/aoshiken,Added useful Windows routines...,1,[],https://github.com/tklengyel/drakvuf/pull/97,https://github.com/tklengyel,15,https://github.com/tklengyel/drakvuf/pull/97#issuecomment-202989743,"...for use within the hooks:

drakvuf_get_current_thread_id(): Get the current thread id
drakvuf_get_previous_mode(): Return the thread PreviousMode (see libdrakvuf.h)
drakvuf_is_ethread(): Check if the address argument is an _ETHREAD
drakvuf_is_eprocess(): Check if the adress argument is an _EPROCESS
drakvuf_obj_ref_by_handle(): Returns the Object body address from a HANDLE cheking its validity

This PR replaces #96",Looks good! Thanks!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,99,2016-03-11T09:21:46Z,2016-04-26T06:34:37Z,2016-04-26T16:20:27Z,CLOSED,False,864,794,50,https://github.com/aoshiken,Added routines for helping with win32ksys hooking,12,[],https://github.com/tklengyel/drakvuf/pull/99,https://github.com/aoshiken,1,https://github.com/tklengyel/drakvuf/pull/99,"Win32ksys is a especial case because is treated as a DLL, trap is made using the CSRSS pid.
Routines added:

drakvuf_get_kern_module_base_addr(). Return the kernel module base address
drakvuf_add_trap_dll(). Add trap using provided pid and base address.

Skeleton usage example:
drakvuf_get_kern_module_base_addr( drakvuf, ""win32k.sys"", win32k_base_addr );

trap->name   = ""NtUserSetWindowsHookEx"" ;
trap->module = ""win32k.sys"";

drakvuf_get_function_rva( win32ksys_rekall_profile, trap_name, &trap->u2.rva );

drakvuf_add_trap_dll( drakvuf, trap, win32k_base_addr, csrss_pid );

Regards,
Alfredo","Win32ksys is a especial case because is treated as a DLL, trap is made using the CSRSS pid.
Routines added:

drakvuf_get_kern_module_base_addr(). Return the kernel module base address
drakvuf_add_trap_dll(). Add trap using provided pid and base address.

Skeleton usage example:
drakvuf_get_kern_module_base_addr( drakvuf, ""win32k.sys"", win32k_base_addr );

trap->name   = ""NtUserSetWindowsHookEx"" ;
trap->module = ""win32k.sys"";

drakvuf_get_function_rva( win32ksys_rekall_profile, trap_name, &trap->u2.rva );

drakvuf_add_trap_dll( drakvuf, trap, win32k_base_addr, csrss_pid );

Regards,
Alfredo",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,99,2016-03-11T09:21:46Z,2016-04-26T06:34:37Z,2016-04-26T16:20:27Z,CLOSED,False,864,794,50,https://github.com/aoshiken,Added routines for helping with win32ksys hooking,12,[],https://github.com/tklengyel/drakvuf/pull/99,https://github.com/aoshiken,2,https://github.com/tklengyel/drakvuf/pull/99#issuecomment-195422188,"Win32ksys is a especial case because is treated as a DLL, trap is made using the CSRSS pid.
Routines added:

drakvuf_get_kern_module_base_addr(). Return the kernel module base address
drakvuf_add_trap_dll(). Add trap using provided pid and base address.

Skeleton usage example:
drakvuf_get_kern_module_base_addr( drakvuf, ""win32k.sys"", win32k_base_addr );

trap->name   = ""NtUserSetWindowsHookEx"" ;
trap->module = ""win32k.sys"";

drakvuf_get_function_rva( win32ksys_rekall_profile, trap_name, &trap->u2.rva );

drakvuf_add_trap_dll( drakvuf, trap, win32k_base_addr, csrss_pid );

Regards,
Alfredo",Just as a side note: the PID to use with drakvuf_add_trap_dll() must be provided by the plugin,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,99,2016-03-11T09:21:46Z,2016-04-26T06:34:37Z,2016-04-26T16:20:27Z,CLOSED,False,864,794,50,https://github.com/aoshiken,Added routines for helping with win32ksys hooking,12,[],https://github.com/tklengyel/drakvuf/pull/99,https://github.com/aoshiken,3,https://github.com/tklengyel/drakvuf/pull/99#issuecomment-204308581,"Win32ksys is a especial case because is treated as a DLL, trap is made using the CSRSS pid.
Routines added:

drakvuf_get_kern_module_base_addr(). Return the kernel module base address
drakvuf_add_trap_dll(). Add trap using provided pid and base address.

Skeleton usage example:
drakvuf_get_kern_module_base_addr( drakvuf, ""win32k.sys"", win32k_base_addr );

trap->name   = ""NtUserSetWindowsHookEx"" ;
trap->module = ""win32k.sys"";

drakvuf_get_function_rva( win32ksys_rekall_profile, trap_name, &trap->u2.rva );

drakvuf_add_trap_dll( drakvuf, trap, win32k_base_addr, csrss_pid );

Regards,
Alfredo","Hi Tamas,
I haven't taken a look to your latest commits but it seems that we can accomplish the same goal that this PR tries so probably we can close this PR.
What do you think?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,99,2016-03-11T09:21:46Z,2016-04-26T06:34:37Z,2016-04-26T16:20:27Z,CLOSED,False,864,794,50,https://github.com/aoshiken,Added routines for helping with win32ksys hooking,12,[],https://github.com/tklengyel/drakvuf/pull/99,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/99#issuecomment-204432606,"Win32ksys is a especial case because is treated as a DLL, trap is made using the CSRSS pid.
Routines added:

drakvuf_get_kern_module_base_addr(). Return the kernel module base address
drakvuf_add_trap_dll(). Add trap using provided pid and base address.

Skeleton usage example:
drakvuf_get_kern_module_base_addr( drakvuf, ""win32k.sys"", win32k_base_addr );

trap->name   = ""NtUserSetWindowsHookEx"" ;
trap->module = ""win32k.sys"";

drakvuf_get_function_rva( win32ksys_rekall_profile, trap_name, &trap->u2.rva );

drakvuf_add_trap_dll( drakvuf, trap, win32k_base_addr, csrss_pid );

Regards,
Alfredo","Yes, I think this use-case is now covered! Feel free to close the PR if it does indeed work for you as it is.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,99,2016-03-11T09:21:46Z,2016-04-26T06:34:37Z,2016-04-26T16:20:27Z,CLOSED,False,864,794,50,https://github.com/aoshiken,Added routines for helping with win32ksys hooking,12,[],https://github.com/tklengyel/drakvuf/pull/99,https://github.com/aoshiken,5,https://github.com/tklengyel/drakvuf/pull/99#issuecomment-211324766,"Win32ksys is a especial case because is treated as a DLL, trap is made using the CSRSS pid.
Routines added:

drakvuf_get_kern_module_base_addr(). Return the kernel module base address
drakvuf_add_trap_dll(). Add trap using provided pid and base address.

Skeleton usage example:
drakvuf_get_kern_module_base_addr( drakvuf, ""win32k.sys"", win32k_base_addr );

trap->name   = ""NtUserSetWindowsHookEx"" ;
trap->module = ""win32k.sys"";

drakvuf_get_function_rva( win32ksys_rekall_profile, trap_name, &trap->u2.rva );

drakvuf_add_trap_dll( drakvuf, trap, win32k_base_addr, csrss_pid );

Regards,
Alfredo","@tklengyel
I'm unable to set a trap for win32ksys because win32ksys is not listed as a module from ""csrss.exe"" so the current drakvuf_add_trap() routine doesn't find it.
For the trap to work it must be injected in the ""csrss.exe"" context (or another one mapping win32ksys)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,99,2016-03-11T09:21:46Z,2016-04-26T06:34:37Z,2016-04-26T16:20:27Z,CLOSED,False,864,794,50,https://github.com/aoshiken,Added routines for helping with win32ksys hooking,12,[],https://github.com/tklengyel/drakvuf/pull/99,https://github.com/drakvuf-jenkins,6,https://github.com/tklengyel/drakvuf/pull/99#issuecomment-211324771,"Win32ksys is a especial case because is treated as a DLL, trap is made using the CSRSS pid.
Routines added:

drakvuf_get_kern_module_base_addr(). Return the kernel module base address
drakvuf_add_trap_dll(). Add trap using provided pid and base address.

Skeleton usage example:
drakvuf_get_kern_module_base_addr( drakvuf, ""win32k.sys"", win32k_base_addr );

trap->name   = ""NtUserSetWindowsHookEx"" ;
trap->module = ""win32k.sys"";

drakvuf_get_function_rva( win32ksys_rekall_profile, trap_name, &trap->u2.rva );

drakvuf_add_trap_dll( drakvuf, trap, win32k_base_addr, csrss_pid );

Regards,
Alfredo",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,99,2016-03-11T09:21:46Z,2016-04-26T06:34:37Z,2016-04-26T16:20:27Z,CLOSED,False,864,794,50,https://github.com/aoshiken,Added routines for helping with win32ksys hooking,12,[],https://github.com/tklengyel/drakvuf/pull/99,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/99#issuecomment-211483373,"Win32ksys is a especial case because is treated as a DLL, trap is made using the CSRSS pid.
Routines added:

drakvuf_get_kern_module_base_addr(). Return the kernel module base address
drakvuf_add_trap_dll(). Add trap using provided pid and base address.

Skeleton usage example:
drakvuf_get_kern_module_base_addr( drakvuf, ""win32k.sys"", win32k_base_addr );

trap->name   = ""NtUserSetWindowsHookEx"" ;
trap->module = ""win32k.sys"";

drakvuf_get_function_rva( win32ksys_rekall_profile, trap_name, &trap->u2.rva );

drakvuf_add_trap_dll( drakvuf, trap, win32k_base_addr, csrss_pid );

Regards,
Alfredo","Well, if it's not listed in the process as loaded dll then it that means it's not loaded. Furthermore, win32k.sys is a kernel-module, so you won't find that loaded into a process.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,99,2016-03-11T09:21:46Z,2016-04-26T06:34:37Z,2016-04-26T16:20:27Z,CLOSED,False,864,794,50,https://github.com/aoshiken,Added routines for helping with win32ksys hooking,12,[],https://github.com/tklengyel/drakvuf/pull/99,https://github.com/aoshiken,8,https://github.com/tklengyel/drakvuf/pull/99#issuecomment-211535853,"Win32ksys is a especial case because is treated as a DLL, trap is made using the CSRSS pid.
Routines added:

drakvuf_get_kern_module_base_addr(). Return the kernel module base address
drakvuf_add_trap_dll(). Add trap using provided pid and base address.

Skeleton usage example:
drakvuf_get_kern_module_base_addr( drakvuf, ""win32k.sys"", win32k_base_addr );

trap->name   = ""NtUserSetWindowsHookEx"" ;
trap->module = ""win32k.sys"";

drakvuf_get_function_rva( win32ksys_rekall_profile, trap_name, &trap->u2.rva );

drakvuf_add_trap_dll( drakvuf, trap, win32k_base_addr, csrss_pid );

Regards,
Alfredo","Win32k.sys is a special case because is mapped into the csrss.exe context and, at least on windows up to Win7, is using the same base address used on ntoskrnl so you can get the base address from there and set a trap to csrss.exe into the same address and it will work like a charm.
That makes sense for you?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,99,2016-03-11T09:21:46Z,2016-04-26T06:34:37Z,2016-04-26T16:20:27Z,CLOSED,False,864,794,50,https://github.com/aoshiken,Added routines for helping with win32ksys hooking,12,[],https://github.com/tklengyel/drakvuf/pull/99,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/99#issuecomment-211537859,"Win32ksys is a especial case because is treated as a DLL, trap is made using the CSRSS pid.
Routines added:

drakvuf_get_kern_module_base_addr(). Return the kernel module base address
drakvuf_add_trap_dll(). Add trap using provided pid and base address.

Skeleton usage example:
drakvuf_get_kern_module_base_addr( drakvuf, ""win32k.sys"", win32k_base_addr );

trap->name   = ""NtUserSetWindowsHookEx"" ;
trap->module = ""win32k.sys"";

drakvuf_get_function_rva( win32ksys_rekall_profile, trap_name, &trap->u2.rva );

drakvuf_add_trap_dll( drakvuf, trap, win32k_base_addr, csrss_pid );

Regards,
Alfredo","These are the dll's I see loaded into csrss.exe:
csrss.exe pid: 336
Command line : %SystemRoot%\system32\csrss.exe ObjectDirectory=\Windows SharedSection=1024,20480,768 Windows=On SubSystemType=Windows ServerDll=basesrv,1 ServerDll=winsrv:UserServerDllInitialization,3 ServerDll$
Service Pack 1

     Base           Size            Load Reason/Count        Path
-------------- -------------- ------------------------------ ----
0x000049af0000         0x6000 65535                          C:\Windows\system32\csrss.exe
0x000077a70000       0x1a9000 65535                          C:\Windows\SYSTEM32\ntdll.dll
0x07fefda40000        0x13000 65535                          C:\Windows\system32\CSRSRV.dll
0x07fefda20000        0x11000 4                              C:\Windows\system32\basesrv.DLL
0x07fefd9e0000        0x38000 2                              C:\Windows\system32\winsrv.DLL
0x000077850000        0xfa000 11                             C:\Windows\system32\USER32.dll
0x07fefe150000        0x67000 12                             C:\Windows\system32\GDI32.dll
0x000077950000       0x11f000 69                             C:\Windows\SYSTEM32\kernel32.dll
0x07fefdbb0000        0x6b000 219                            C:\Windows\system32\KERNELBASE.dll
0x07feffd70000         0xe000 3                              C:\Windows\system32\LPK.dll
0x07fefe4a0000        0xc9000 3                              C:\Windows\system32\USP10.dll
0x07fefdd90000        0x9f000 3                              C:\Windows\system32\msvcrt.dll
0x07fefd9d0000         0xc000 1                              C:\Windows\system32\sxssrv.DLL
0x07fefd900000        0x91000 1                              C:\Windows\system32\sxs.dll
0x07feff3e0000       0x12d000 1                              C:\Windows\system32\RPCRT4.dll
0x07fefd8f0000         0xf000 1                              C:\Windows\system32\CRYPTBASE.dll

So if as you say it's a special case and it's actually loaded in there at a magic VA, the way you can add drakvuf traps to it is using VAs instead of RVAs. RVA's rely on finding the module base address through this loaded dll list. So if you know the base address of where it should be loaded, and you know the RVA's from debug information (Rekall profile), you can just compute the actual VA address of where the trap should be added in the plugin itself. Does that make sense?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,99,2016-03-11T09:21:46Z,2016-04-26T06:34:37Z,2016-04-26T16:20:27Z,CLOSED,False,864,794,50,https://github.com/aoshiken,Added routines for helping with win32ksys hooking,12,[],https://github.com/tklengyel/drakvuf/pull/99,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/99#issuecomment-211540016,"Win32ksys is a especial case because is treated as a DLL, trap is made using the CSRSS pid.
Routines added:

drakvuf_get_kern_module_base_addr(). Return the kernel module base address
drakvuf_add_trap_dll(). Add trap using provided pid and base address.

Skeleton usage example:
drakvuf_get_kern_module_base_addr( drakvuf, ""win32k.sys"", win32k_base_addr );

trap->name   = ""NtUserSetWindowsHookEx"" ;
trap->module = ""win32k.sys"";

drakvuf_get_function_rva( win32ksys_rekall_profile, trap_name, &trap->u2.rva );

drakvuf_add_trap_dll( drakvuf, trap, win32k_base_addr, csrss_pid );

Regards,
Alfredo","Also, I would double check whether the win32k.sys location in PA is the same in the process as in the kernel. If it's the same, that means it doesn't matter which context you add the traps in as Windows just loaded it once and then shares the memory across multiple contexts.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,99,2016-03-11T09:21:46Z,2016-04-26T06:34:37Z,2016-04-26T16:20:27Z,CLOSED,False,864,794,50,https://github.com/aoshiken,Added routines for helping with win32ksys hooking,12,[],https://github.com/tklengyel/drakvuf/pull/99,https://github.com/aoshiken,11,https://github.com/tklengyel/drakvuf/pull/99#issuecomment-211543716,"Win32ksys is a especial case because is treated as a DLL, trap is made using the CSRSS pid.
Routines added:

drakvuf_get_kern_module_base_addr(). Return the kernel module base address
drakvuf_add_trap_dll(). Add trap using provided pid and base address.

Skeleton usage example:
drakvuf_get_kern_module_base_addr( drakvuf, ""win32k.sys"", win32k_base_addr );

trap->name   = ""NtUserSetWindowsHookEx"" ;
trap->module = ""win32k.sys"";

drakvuf_get_function_rva( win32ksys_rekall_profile, trap_name, &trap->u2.rva );

drakvuf_add_trap_dll( drakvuf, trap, win32k_base_addr, csrss_pid );

Regards,
Alfredo","Using VAs instead of RVAs was one of the things I was trying this morning but failed for one reason or another.
More on this tomorrow if you don't mind
Regards",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,99,2016-03-11T09:21:46Z,2016-04-26T06:34:37Z,2016-04-26T16:20:27Z,CLOSED,False,864,794,50,https://github.com/aoshiken,Added routines for helping with win32ksys hooking,12,[],https://github.com/tklengyel/drakvuf/pull/99,https://github.com/aoshiken,12,https://github.com/tklengyel/drakvuf/pull/99#issuecomment-211990862,"Win32ksys is a especial case because is treated as a DLL, trap is made using the CSRSS pid.
Routines added:

drakvuf_get_kern_module_base_addr(). Return the kernel module base address
drakvuf_add_trap_dll(). Add trap using provided pid and base address.

Skeleton usage example:
drakvuf_get_kern_module_base_addr( drakvuf, ""win32k.sys"", win32k_base_addr );

trap->name   = ""NtUserSetWindowsHookEx"" ;
trap->module = ""win32k.sys"";

drakvuf_get_function_rva( win32ksys_rekall_profile, trap_name, &trap->u2.rva );

drakvuf_add_trap_dll( drakvuf, trap, win32k_base_addr, csrss_pid );

Regards,
Alfredo","Hi again,
I don't know for sure what happened to me yesterday but after testing again using VAs it worked flawlessly (as expected). :)
Anyway, I still need the drakvuf_get_kern_module_base_addr() routine for getting the win32ksys base address from ntoskrnl.
What do you think?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,99,2016-03-11T09:21:46Z,2016-04-26T06:34:37Z,2016-04-26T16:20:27Z,CLOSED,False,864,794,50,https://github.com/aoshiken,Added routines for helping with win32ksys hooking,12,[],https://github.com/tklengyel/drakvuf/pull/99,https://github.com/tklengyel,13,https://github.com/tklengyel/drakvuf/pull/99#issuecomment-211993851,"Win32ksys is a especial case because is treated as a DLL, trap is made using the CSRSS pid.
Routines added:

drakvuf_get_kern_module_base_addr(). Return the kernel module base address
drakvuf_add_trap_dll(). Add trap using provided pid and base address.

Skeleton usage example:
drakvuf_get_kern_module_base_addr( drakvuf, ""win32k.sys"", win32k_base_addr );

trap->name   = ""NtUserSetWindowsHookEx"" ;
trap->module = ""win32k.sys"";

drakvuf_get_function_rva( win32ksys_rekall_profile, trap_name, &trap->u2.rva );

drakvuf_add_trap_dll( drakvuf, trap, win32k_base_addr, csrss_pid );

Regards,
Alfredo",That would be fine but make it non-kernel specific by letting the user provide the module list's head to search in. That would increase the flexibility of the function for other use cases as well.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,99,2016-03-11T09:21:46Z,2016-04-26T06:34:37Z,2016-04-26T16:20:27Z,CLOSED,False,864,794,50,https://github.com/aoshiken,Added routines for helping with win32ksys hooking,12,[],https://github.com/tklengyel/drakvuf/pull/99,https://github.com/aoshiken,14,https://github.com/tklengyel/drakvuf/pull/99#issuecomment-211994550,"Win32ksys is a especial case because is treated as a DLL, trap is made using the CSRSS pid.
Routines added:

drakvuf_get_kern_module_base_addr(). Return the kernel module base address
drakvuf_add_trap_dll(). Add trap using provided pid and base address.

Skeleton usage example:
drakvuf_get_kern_module_base_addr( drakvuf, ""win32k.sys"", win32k_base_addr );

trap->name   = ""NtUserSetWindowsHookEx"" ;
trap->module = ""win32k.sys"";

drakvuf_get_function_rva( win32ksys_rekall_profile, trap_name, &trap->u2.rva );

drakvuf_add_trap_dll( drakvuf, trap, win32k_base_addr, csrss_pid );

Regards,
Alfredo",Agreed,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,99,2016-03-11T09:21:46Z,2016-04-26T06:34:37Z,2016-04-26T16:20:27Z,CLOSED,False,864,794,50,https://github.com/aoshiken,Added routines for helping with win32ksys hooking,12,[],https://github.com/tklengyel/drakvuf/pull/99,https://github.com/aoshiken,15,https://github.com/tklengyel/drakvuf/pull/99#issuecomment-214444171,"Win32ksys is a especial case because is treated as a DLL, trap is made using the CSRSS pid.
Routines added:

drakvuf_get_kern_module_base_addr(). Return the kernel module base address
drakvuf_add_trap_dll(). Add trap using provided pid and base address.

Skeleton usage example:
drakvuf_get_kern_module_base_addr( drakvuf, ""win32k.sys"", win32k_base_addr );

trap->name   = ""NtUserSetWindowsHookEx"" ;
trap->module = ""win32k.sys"";

drakvuf_get_function_rva( win32ksys_rekall_profile, trap_name, &trap->u2.rva );

drakvuf_add_trap_dll( drakvuf, trap, win32k_base_addr, csrss_pid );

Regards,
Alfredo","Tamas, do you need anything else for merging this PR?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,99,2016-03-11T09:21:46Z,2016-04-26T06:34:37Z,2016-04-26T16:20:27Z,CLOSED,False,864,794,50,https://github.com/aoshiken,Added routines for helping with win32ksys hooking,12,[],https://github.com/tklengyel/drakvuf/pull/99,https://github.com/aoshiken,16,https://github.com/tklengyel/drakvuf/pull/99#issuecomment-214628391,"Win32ksys is a especial case because is treated as a DLL, trap is made using the CSRSS pid.
Routines added:

drakvuf_get_kern_module_base_addr(). Return the kernel module base address
drakvuf_add_trap_dll(). Add trap using provided pid and base address.

Skeleton usage example:
drakvuf_get_kern_module_base_addr( drakvuf, ""win32k.sys"", win32k_base_addr );

trap->name   = ""NtUserSetWindowsHookEx"" ;
trap->module = ""win32k.sys"";

drakvuf_get_function_rva( win32ksys_rekall_profile, trap_name, &trap->u2.rva );

drakvuf_add_trap_dll( drakvuf, trap, win32k_base_addr, csrss_pid );

Regards,
Alfredo","Arrrrrgggggggggg!!
I'm sorry but it seems I screwed up :(",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,99,2016-03-11T09:21:46Z,2016-04-26T06:34:37Z,2016-04-26T16:20:27Z,CLOSED,False,864,794,50,https://github.com/aoshiken,Added routines for helping with win32ksys hooking,12,[],https://github.com/tklengyel/drakvuf/pull/99,https://github.com/tklengyel,17,https://github.com/tklengyel/drakvuf/pull/99#issuecomment-214784083,"Win32ksys is a especial case because is treated as a DLL, trap is made using the CSRSS pid.
Routines added:

drakvuf_get_kern_module_base_addr(). Return the kernel module base address
drakvuf_add_trap_dll(). Add trap using provided pid and base address.

Skeleton usage example:
drakvuf_get_kern_module_base_addr( drakvuf, ""win32k.sys"", win32k_base_addr );

trap->name   = ""NtUserSetWindowsHookEx"" ;
trap->module = ""win32k.sys"";

drakvuf_get_function_rva( win32ksys_rekall_profile, trap_name, &trap->u2.rva );

drakvuf_add_trap_dll( drakvuf, trap, win32k_base_addr, csrss_pid );

Regards,
Alfredo","You can always rebase and merge commits into one, then do a force push. If you feel like you screwed your local branch up too much already, just delete your local branch (git branch -D <mybranch>) and checkout the remote again to start over ;)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,99,2016-03-11T09:21:46Z,2016-04-26T06:34:37Z,2016-04-26T16:20:27Z,CLOSED,False,864,794,50,https://github.com/aoshiken,Added routines for helping with win32ksys hooking,12,[],https://github.com/tklengyel/drakvuf/pull/99,https://github.com/aoshiken,18,https://github.com/tklengyel/drakvuf/pull/99#issuecomment-214792541,"Win32ksys is a especial case because is treated as a DLL, trap is made using the CSRSS pid.
Routines added:

drakvuf_get_kern_module_base_addr(). Return the kernel module base address
drakvuf_add_trap_dll(). Add trap using provided pid and base address.

Skeleton usage example:
drakvuf_get_kern_module_base_addr( drakvuf, ""win32k.sys"", win32k_base_addr );

trap->name   = ""NtUserSetWindowsHookEx"" ;
trap->module = ""win32k.sys"";

drakvuf_get_function_rva( win32ksys_rekall_profile, trap_name, &trap->u2.rva );

drakvuf_add_trap_dll( drakvuf, trap, win32k_base_addr, csrss_pid );

Regards,
Alfredo","That's what I did, see PR #131
;)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,99,2016-03-11T09:21:46Z,2016-04-26T06:34:37Z,2016-04-26T16:20:27Z,CLOSED,False,864,794,50,https://github.com/aoshiken,Added routines for helping with win32ksys hooking,12,[],https://github.com/tklengyel/drakvuf/pull/99,https://github.com/tklengyel,19,https://github.com/tklengyel/drakvuf/pull/99#issuecomment-214799866,"Win32ksys is a especial case because is treated as a DLL, trap is made using the CSRSS pid.
Routines added:

drakvuf_get_kern_module_base_addr(). Return the kernel module base address
drakvuf_add_trap_dll(). Add trap using provided pid and base address.

Skeleton usage example:
drakvuf_get_kern_module_base_addr( drakvuf, ""win32k.sys"", win32k_base_addr );

trap->name   = ""NtUserSetWindowsHookEx"" ;
trap->module = ""win32k.sys"";

drakvuf_get_function_rva( win32ksys_rekall_profile, trap_name, &trap->u2.rva );

drakvuf_add_trap_dll( drakvuf, trap, win32k_base_addr, csrss_pid );

Regards,
Alfredo","Right, but that would also update the PR, so no need to open a new one the next time ;)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,102,2016-03-17T22:50:21Z,2016-03-24T19:03:29Z,2016-03-24T19:03:29Z,MERGED,True,15,3,1,https://github.com/v-p-b,Native file name extraction for FILEDELETE,1,[],https://github.com/tklengyel/drakvuf/pull/102,https://github.com/v-p-b,1,https://github.com/tklengyel/drakvuf/pull/102,"A small change to natively extract filenames as requested in #98. Output will be in the following format (CSV and default):
filedelete,0,0x4d2f1a0,svchost.exe,""\Windows\Prefetch\TASKHOST.EXE-7238F31D.pf""
[FILEDELETE] VCPU:0 CR3:0x4d2f2e0,explorer.exe ""\Users\b\Desktop\Új szöveges dokumentum.txt""

As you can see funny Hungarian characters and spaces in paths are handled (although I'm not sure about if CSV parsers treat \ as escape character inside quotes...)","A small change to natively extract filenames as requested in #98. Output will be in the following format (CSV and default):
filedelete,0,0x4d2f1a0,svchost.exe,""\Windows\Prefetch\TASKHOST.EXE-7238F31D.pf""
[FILEDELETE] VCPU:0 CR3:0x4d2f2e0,explorer.exe ""\Users\b\Desktop\Új szöveges dokumentum.txt""

As you can see funny Hungarian characters and spaces in paths are handled (although I'm not sure about if CSV parsers treat \ as escape character inside quotes...)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,102,2016-03-17T22:50:21Z,2016-03-24T19:03:29Z,2016-03-24T19:03:29Z,MERGED,True,15,3,1,https://github.com/v-p-b,Native file name extraction for FILEDELETE,1,[],https://github.com/tklengyel/drakvuf/pull/102,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/102#issuecomment-199020040,"A small change to natively extract filenames as requested in #98. Output will be in the following format (CSV and default):
filedelete,0,0x4d2f1a0,svchost.exe,""\Windows\Prefetch\TASKHOST.EXE-7238F31D.pf""
[FILEDELETE] VCPU:0 CR3:0x4d2f2e0,explorer.exe ""\Users\b\Desktop\Új szöveges dokumentum.txt""

As you can see funny Hungarian characters and spaces in paths are handled (although I'm not sure about if CSV parsers treat \ as escape character inside quotes...)",This is ok to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,102,2016-03-17T22:50:21Z,2016-03-24T19:03:29Z,2016-03-24T19:03:29Z,MERGED,True,15,3,1,https://github.com/v-p-b,Native file name extraction for FILEDELETE,1,[],https://github.com/tklengyel/drakvuf/pull/102,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/102#issuecomment-199020046,"A small change to natively extract filenames as requested in #98. Output will be in the following format (CSV and default):
filedelete,0,0x4d2f1a0,svchost.exe,""\Windows\Prefetch\TASKHOST.EXE-7238F31D.pf""
[FILEDELETE] VCPU:0 CR3:0x4d2f2e0,explorer.exe ""\Users\b\Desktop\Új szöveges dokumentum.txt""

As you can see funny Hungarian characters and spaces in paths are handled (although I'm not sure about if CSV parsers treat \ as escape character inside quotes...)",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,102,2016-03-17T22:50:21Z,2016-03-24T19:03:29Z,2016-03-24T19:03:29Z,MERGED,True,15,3,1,https://github.com/v-p-b,Native file name extraction for FILEDELETE,1,[],https://github.com/tklengyel/drakvuf/pull/102,https://github.com/v-p-b,4,https://github.com/tklengyel/drakvuf/pull/102#issuecomment-200952857,"A small change to natively extract filenames as requested in #98. Output will be in the following format (CSV and default):
filedelete,0,0x4d2f1a0,svchost.exe,""\Windows\Prefetch\TASKHOST.EXE-7238F31D.pf""
[FILEDELETE] VCPU:0 CR3:0x4d2f2e0,explorer.exe ""\Users\b\Desktop\Új szöveges dokumentum.txt""

As you can see funny Hungarian characters and spaces in paths are handled (although I'm not sure about if CSV parsers treat \ as escape character inside quotes...)","So maybe I fckd up something with Git or GitHub updated something but I don't see my latest commit to cause Jenkins to retest the PR.
Anyway: I added the missing free, and moved the process name extraction inside the success branch so maybe we can spare a call now and then.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,102,2016-03-17T22:50:21Z,2016-03-24T19:03:29Z,2016-03-24T19:03:29Z,MERGED,True,15,3,1,https://github.com/v-p-b,Native file name extraction for FILEDELETE,1,[],https://github.com/tklengyel/drakvuf/pull/102,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/102#issuecomment-200971973,"A small change to natively extract filenames as requested in #98. Output will be in the following format (CSV and default):
filedelete,0,0x4d2f1a0,svchost.exe,""\Windows\Prefetch\TASKHOST.EXE-7238F31D.pf""
[FILEDELETE] VCPU:0 CR3:0x4d2f2e0,explorer.exe ""\Users\b\Desktop\Új szöveges dokumentum.txt""

As you can see funny Hungarian characters and spaces in paths are handled (although I'm not sure about if CSV parsers treat \ as escape character inside quotes...)","Nah, it's just that the original PR tester machine is offline and the one I setup for the interim is not online all the time. I just have to turn it on from time to time to do PR testing ;)
Retest this please.",True,{'THUMBS_UP': ['https://github.com/v-p-b']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,104,2016-03-20T20:42:49Z,2016-03-20T20:51:05Z,2016-03-20T20:51:08Z,MERGED,True,172,113,18,https://github.com/tklengyel,Add extra checks during startup and shutdown LibVMI first when done,1,[],https://github.com/tklengyel/drakvuf/pull/104,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/104,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,104,2016-03-20T20:42:49Z,2016-03-20T20:51:05Z,2016-03-20T20:51:08Z,MERGED,True,172,113,18,https://github.com/tklengyel,Add extra checks during startup and shutdown LibVMI first when done,1,[],https://github.com/tklengyel/drakvuf/pull/104,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/104#issuecomment-199018065,,retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,105,2016-03-22T16:18:20Z,2016-03-22T17:15:27Z,2016-05-05T02:16:29Z,MERGED,True,16,3,2,https://github.com/tklengyel,Add checks to pause/unpause routines in xen_helper,1,[],https://github.com/tklengyel/drakvuf/pull/105,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/105,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,105,2016-03-22T16:18:20Z,2016-03-22T17:15:27Z,2016-05-05T02:16:29Z,MERGED,True,16,3,2,https://github.com/tklengyel,Add checks to pause/unpause routines in xen_helper,1,[],https://github.com/tklengyel/drakvuf/pull/105,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/105#issuecomment-199889859,,Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,105,2016-03-22T16:18:20Z,2016-03-22T17:15:27Z,2016-05-05T02:16:29Z,MERGED,True,16,3,2,https://github.com/tklengyel,Add checks to pause/unpause routines in xen_helper,1,[],https://github.com/tklengyel/drakvuf/pull/105,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/105#issuecomment-199891885,,Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,105,2016-03-22T16:18:20Z,2016-03-22T17:15:27Z,2016-05-05T02:16:29Z,MERGED,True,16,3,2,https://github.com/tklengyel,Add checks to pause/unpause routines in xen_helper,1,[],https://github.com/tklengyel/drakvuf/pull/105,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/105#issuecomment-199901621,,Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,105,2016-03-22T16:18:20Z,2016-03-22T17:15:27Z,2016-05-05T02:16:29Z,MERGED,True,16,3,2,https://github.com/tklengyel,Add checks to pause/unpause routines in xen_helper,1,[],https://github.com/tklengyel/drakvuf/pull/105,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/105#issuecomment-199912486,,Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,107,2016-03-24T20:59:46Z,2016-03-24T21:02:38Z,2016-05-05T02:16:28Z,MERGED,True,1,1,1,https://github.com/tklengyel,Safety check on json iteration,1,[],https://github.com/tklengyel/drakvuf/pull/107,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/107,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,109,2016-03-29T16:09:40Z,2016-03-29T16:13:04Z,2016-03-29T16:13:07Z,MERGED,True,35,50,18,https://github.com/tklengyel,Move output_format from libdrakvuf to plugins,1,[],https://github.com/tklengyel/drakvuf/pull/109,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/109,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,110,2016-03-29T18:35:03Z,2016-03-29T18:50:52Z,2016-03-29T18:50:55Z,MERGED,True,5,5,2,https://github.com/tklengyel,Pause tweaks in xen_helper,1,[],https://github.com/tklengyel/drakvuf/pull/110,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/110,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,110,2016-03-29T18:35:03Z,2016-03-29T18:50:52Z,2016-03-29T18:50:55Z,MERGED,True,5,5,2,https://github.com/tklengyel,Pause tweaks in xen_helper,1,[],https://github.com/tklengyel/drakvuf/pull/110,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/110#issuecomment-203042233,,Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,111,2016-03-29T23:44:46Z,2016-03-30T23:55:15Z,2016-03-30T23:55:17Z,MERGED,True,199,162,10,https://github.com/tklengyel,Add support for trapping processes to libdrakvuf,6,[],https://github.com/tklengyel/drakvuf/pull/111,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/111,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,111,2016-03-29T23:44:46Z,2016-03-30T23:55:15Z,2016-03-30T23:55:17Z,MERGED,True,199,162,10,https://github.com/tklengyel,Add support for trapping processes to libdrakvuf,6,[],https://github.com/tklengyel/drakvuf/pull/111,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/111#issuecomment-203678937,,Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,113,2016-03-31T14:56:08Z,2016-03-31T14:58:48Z,2016-03-31T14:58:50Z,MERGED,True,20,19,3,https://github.com/tklengyel,Only pass required structures to libdrakvuf functions,1,[],https://github.com/tklengyel/drakvuf/pull/113,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/113,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,115,2016-04-15T08:45:41Z,2016-04-17T16:20:19Z,2016-04-20T06:14:16Z,MERGED,True,6,3,1,https://github.com/aoshiken,Fix errors on win-process.c,1,[],https://github.com/tklengyel/drakvuf/pull/115,https://github.com/aoshiken,1,https://github.com/tklengyel/drakvuf/pull/115,"Fix using uninitialized-variables on certain functions that lead to unpredictable values: The enums are of 32bits size by default (compiler implementation dependant but at least on gcc and clang++ it is) but some functions treat them as 8bits so if the original variable is not initialized the final value will be unpredictable
Fix walking the processes list on drakvuf_find_eprocess(): The variable 'current_process' was not properly updated","Fix using uninitialized-variables on certain functions that lead to unpredictable values: The enums are of 32bits size by default (compiler implementation dependant but at least on gcc and clang++ it is) but some functions treat them as 8bits so if the original variable is not initialized the final value will be unpredictable
Fix walking the processes list on drakvuf_find_eprocess(): The variable 'current_process' was not properly updated",True,{'THUMBS_UP': ['https://github.com/v-p-b']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,115,2016-04-15T08:45:41Z,2016-04-17T16:20:19Z,2016-04-20T06:14:16Z,MERGED,True,6,3,1,https://github.com/aoshiken,Fix errors on win-process.c,1,[],https://github.com/tklengyel/drakvuf/pull/115,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/115#issuecomment-211051271,"Fix using uninitialized-variables on certain functions that lead to unpredictable values: The enums are of 32bits size by default (compiler implementation dependant but at least on gcc and clang++ it is) but some functions treat them as 8bits so if the original variable is not initialized the final value will be unpredictable
Fix walking the processes list on drakvuf_find_eprocess(): The variable 'current_process' was not properly updated",Thanks for the fixes!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,115,2016-04-15T08:45:41Z,2016-04-17T16:20:19Z,2016-04-20T06:14:16Z,MERGED,True,6,3,1,https://github.com/aoshiken,Fix errors on win-process.c,1,[],https://github.com/tklengyel/drakvuf/pull/115,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/115#issuecomment-211051276,"Fix using uninitialized-variables on certain functions that lead to unpredictable values: The enums are of 32bits size by default (compiler implementation dependant but at least on gcc and clang++ it is) but some functions treat them as 8bits so if the original variable is not initialized the final value will be unpredictable
Fix walking the processes list on drakvuf_find_eprocess(): The variable 'current_process' was not properly updated",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,116,2016-04-17T11:41:38Z,2016-05-23T16:54:04Z,2016-05-23T16:54:04Z,CLOSED,False,2002,1028,58,https://github.com/v-p-b,PROCTRACER - Added support for tracing existing processes,54,[],https://github.com/tklengyel/drakvuf/pull/116,https://github.com/v-p-b,1,https://github.com/tklengyel/drakvuf/pull/116,"KNOWN BUG: PsGetCurrentThreadTeb doesn't always run on new process creation. I'll find other API candidates as replacement/counterpart and will update this PR.
Oh, and I included a fallback to a default config name, since the new -P parameter didn't work for me. Also, it would be better to provide a directory in the command line because the plugin may depend on numerous configuration files (one per traced module).
This PR includes #115 because we need properly working drakvuf_find_eprocess().","KNOWN BUG: PsGetCurrentThreadTeb doesn't always run on new process creation. I'll find other API candidates as replacement/counterpart and will update this PR.
Oh, and I included a fallback to a default config name, since the new -P parameter didn't work for me. Also, it would be better to provide a directory in the command line because the plugin may depend on numerous configuration files (one per traced module).
This PR includes #115 because we need properly working drakvuf_find_eprocess().",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,116,2016-04-17T11:41:38Z,2016-05-23T16:54:04Z,2016-05-23T16:54:04Z,CLOSED,False,2002,1028,58,https://github.com/v-p-b,PROCTRACER - Added support for tracing existing processes,54,[],https://github.com/tklengyel/drakvuf/pull/116,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/116#issuecomment-211053245,"KNOWN BUG: PsGetCurrentThreadTeb doesn't always run on new process creation. I'll find other API candidates as replacement/counterpart and will update this PR.
Oh, and I included a fallback to a default config name, since the new -P parameter didn't work for me. Also, it would be better to provide a directory in the command line because the plugin may depend on numerous configuration files (one per traced module).
This PR includes #115 because we need properly working drakvuf_find_eprocess().","I've just forgot to add P: to the getopt config. I've updated the branch so it should be OK. Also, #115 has been merged to master so I've rebased my branch on it.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,116,2016-04-17T11:41:38Z,2016-05-23T16:54:04Z,2016-05-23T16:54:04Z,CLOSED,False,2002,1028,58,https://github.com/v-p-b,PROCTRACER - Added support for tracing existing processes,54,[],https://github.com/tklengyel/drakvuf/pull/116,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/116#issuecomment-211053248,"KNOWN BUG: PsGetCurrentThreadTeb doesn't always run on new process creation. I'll find other API candidates as replacement/counterpart and will update this PR.
Oh, and I included a fallback to a default config name, since the new -P parameter didn't work for me. Also, it would be better to provide a directory in the command line because the plugin may depend on numerous configuration files (one per traced module).
This PR includes #115 because we need properly working drakvuf_find_eprocess().",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,116,2016-04-17T11:41:38Z,2016-05-23T16:54:04Z,2016-05-23T16:54:04Z,CLOSED,False,2002,1028,58,https://github.com/v-p-b,PROCTRACER - Added support for tracing existing processes,54,[],https://github.com/tklengyel/drakvuf/pull/116,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/116#issuecomment-211074920,"KNOWN BUG: PsGetCurrentThreadTeb doesn't always run on new process creation. I'll find other API candidates as replacement/counterpart and will update this PR.
Oh, and I included a fallback to a default config name, since the new -P parameter didn't work for me. Also, it would be better to provide a directory in the command line because the plugin may depend on numerous configuration files (one per traced module).
This PR includes #115 because we need properly working drakvuf_find_eprocess().","I've added support for CR3 traps in #118, it could be used to detect the scheduling of new processes. Cache invalidation is going to be tricky (shared caches across all vCPUs) but I think if we flush the libvmi cache on each CR3 event we might be OK.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,116,2016-04-17T11:41:38Z,2016-05-23T16:54:04Z,2016-05-23T16:54:04Z,CLOSED,False,2002,1028,58,https://github.com/v-p-b,PROCTRACER - Added support for tracing existing processes,54,[],https://github.com/tklengyel/drakvuf/pull/116,https://github.com/v-p-b,5,https://github.com/tklengyel/drakvuf/pull/116#issuecomment-211242286,"KNOWN BUG: PsGetCurrentThreadTeb doesn't always run on new process creation. I'll find other API candidates as replacement/counterpart and will update this PR.
Oh, and I included a fallback to a default config name, since the new -P parameter didn't work for me. Also, it would be better to provide a directory in the command line because the plugin may depend on numerous configuration files (one per traced module).
This PR includes #115 because we need properly working drakvuf_find_eprocess().","Using CR3 events for cache flushing is probably a good idea, but we'll have to test the performance impact and come up with some clever logic (to handle bursts of new processes for example). I don't think CR3 events would be useful for placing new trace points (dynamic traps) as the corresponding memory regions are probably populated later by the loader.
I think we should stick to the current approach for now, create a version that is stable enough to merge and then figure out these hickups in separate PRs/issues.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,116,2016-04-17T11:41:38Z,2016-05-23T16:54:04Z,2016-05-23T16:54:04Z,CLOSED,False,2002,1028,58,https://github.com/v-p-b,PROCTRACER - Added support for tracing existing processes,54,[],https://github.com/tklengyel/drakvuf/pull/116,https://github.com/aoshiken,6,https://github.com/tklengyel/drakvuf/pull/116#issuecomment-215151247,"KNOWN BUG: PsGetCurrentThreadTeb doesn't always run on new process creation. I'll find other API candidates as replacement/counterpart and will update this PR.
Oh, and I included a fallback to a default config name, since the new -P parameter didn't work for me. Also, it would be better to provide a directory in the command line because the plugin may depend on numerous configuration files (one per traced module).
This PR includes #115 because we need properly working drakvuf_find_eprocess().","@v-p-b : perhaps the cr3 branch worth a try, see issue #130",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,116,2016-04-17T11:41:38Z,2016-05-23T16:54:04Z,2016-05-23T16:54:04Z,CLOSED,False,2002,1028,58,https://github.com/v-p-b,PROCTRACER - Added support for tracing existing processes,54,[],https://github.com/tklengyel/drakvuf/pull/116,https://github.com/v-p-b,7,https://github.com/tklengyel/drakvuf/pull/116#issuecomment-217622297,"KNOWN BUG: PsGetCurrentThreadTeb doesn't always run on new process creation. I'll find other API candidates as replacement/counterpart and will update this PR.
Oh, and I included a fallback to a default config name, since the new -P parameter didn't work for me. Also, it would be better to provide a directory in the command line because the plugin may depend on numerous configuration files (one per traced module).
This PR includes #115 because we need properly working drakvuf_find_eprocess().",It seems that the changes in master resolved lots of issues here. Would you start to review the code and  run some tests so we can get closer to a state that can be merged?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,116,2016-04-17T11:41:38Z,2016-05-23T16:54:04Z,2016-05-23T16:54:04Z,CLOSED,False,2002,1028,58,https://github.com/v-p-b,PROCTRACER - Added support for tracing existing processes,54,[],https://github.com/tklengyel/drakvuf/pull/116,https://github.com/drakvuf-jenkins,8,https://github.com/tklengyel/drakvuf/pull/116#issuecomment-217641498,"KNOWN BUG: PsGetCurrentThreadTeb doesn't always run on new process creation. I'll find other API candidates as replacement/counterpart and will update this PR.
Oh, and I included a fallback to a default config name, since the new -P parameter didn't work for me. Also, it would be better to provide a directory in the command line because the plugin may depend on numerous configuration files (one per traced module).
This PR includes #115 because we need properly working drakvuf_find_eprocess().","Will do after i'm back from the honeynet workshop.
On May 7, 2016 05:24, ""buherator"" notifications@github.com wrote:

It seems that the changes in master resolved lots of issues here. Would
you start to review the code and run some tests so we can get closer to a
state that can be merged?
—
You are receiving this because you commented.
Reply to this email directly or view it on GitHub
#116 (comment)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,116,2016-04-17T11:41:38Z,2016-05-23T16:54:04Z,2016-05-23T16:54:04Z,CLOSED,False,2002,1028,58,https://github.com/v-p-b,PROCTRACER - Added support for tracing existing processes,54,[],https://github.com/tklengyel/drakvuf/pull/116,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/116#issuecomment-218807712,"KNOWN BUG: PsGetCurrentThreadTeb doesn't always run on new process creation. I'll find other API candidates as replacement/counterpart and will update this PR.
Oh, and I included a fallback to a default config name, since the new -P parameter didn't work for me. Also, it would be better to provide a directory in the command line because the plugin may depend on numerous configuration files (one per traced module).
This PR includes #115 because we need properly working drakvuf_find_eprocess().","Can you update this PR to be for merging to master? Also, squashing commits would be nice! Thanks",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,116,2016-04-17T11:41:38Z,2016-05-23T16:54:04Z,2016-05-23T16:54:04Z,CLOSED,False,2002,1028,58,https://github.com/v-p-b,PROCTRACER - Added support for tracing existing processes,54,[],https://github.com/tklengyel/drakvuf/pull/116,https://github.com/v-p-b,10,https://github.com/tklengyel/drakvuf/pull/116#issuecomment-219389045,"KNOWN BUG: PsGetCurrentThreadTeb doesn't always run on new process creation. I'll find other API candidates as replacement/counterpart and will update this PR.
Oh, and I included a fallback to a default config name, since the new -P parameter didn't work for me. Also, it would be better to provide a directory in the command line because the plugin may depend on numerous configuration files (one per traced module).
This PR includes #115 because we need properly working drakvuf_find_eprocess().","So I merged origin/master and pushed the changes (as you can see). Still, the PR says it's conflicting, although I didn't see any conflicts in the last merge. Now what? :)
EDIT: I can also merge proctracer_origin to master locally without conflicts.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,116,2016-04-17T11:41:38Z,2016-05-23T16:54:04Z,2016-05-23T16:54:04Z,CLOSED,False,2002,1028,58,https://github.com/v-p-b,PROCTRACER - Added support for tracing existing processes,54,[],https://github.com/tklengyel/drakvuf/pull/116,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/116#issuecomment-219498273,"KNOWN BUG: PsGetCurrentThreadTeb doesn't always run on new process creation. I'll find other API candidates as replacement/counterpart and will update this PR.
Oh, and I included a fallback to a default config name, since the new -P parameter didn't work for me. Also, it would be better to provide a directory in the command line because the plugin may depend on numerous configuration files (one per traced module).
This PR includes #115 because we need properly working drakvuf_find_eprocess().","So if you look at https://github.com/tklengyel/drakvuf/network you can still see that the starting point of you branch is not from the current head. The idea is that you don't merge master into your branch rather you rebase your branch to start from the current head of the master branch. You can do this easily with: git rebase -i origin/master. You will get conflicts as each of the commit in your branch get applied on top of master which you will have to fix, then add the modified files with git add <modified files> then continue the rebase with git rebase --continue. It's usually easier if you don't have a ton of commits in your branch so I would try to squash as many of the commits as possible before doing the rebasing!",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,116,2016-04-17T11:41:38Z,2016-05-23T16:54:04Z,2016-05-23T16:54:04Z,CLOSED,False,2002,1028,58,https://github.com/v-p-b,PROCTRACER - Added support for tracing existing processes,54,[],https://github.com/tklengyel/drakvuf/pull/116,https://github.com/v-p-b,12,https://github.com/tklengyel/drakvuf/pull/116#issuecomment-219803643,"KNOWN BUG: PsGetCurrentThreadTeb doesn't always run on new process creation. I'll find other API candidates as replacement/counterpart and will update this PR.
Oh, and I included a fallback to a default config name, since the new -P parameter didn't work for me. Also, it would be better to provide a directory in the command line because the plugin may depend on numerous configuration files (one per traced module).
This PR includes #115 because we need properly working drakvuf_find_eprocess().","(insert ""ain't nobody got time for that"" meme here)
If I understand correctly I've been following  a different workflow model than expected? I think it would be really useful if there was some guidance about this in the developers guide!
Considering the complexity of the branch history I think the simplest option for me is to create a new branch from the current master, simply overwrite the files that changed, create a single commit and then force push/open a new PR. From this I can later rebase (instead of merge) every time the master changes that would make final sqashing easier too.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,116,2016-04-17T11:41:38Z,2016-05-23T16:54:04Z,2016-05-23T16:54:04Z,CLOSED,False,2002,1028,58,https://github.com/v-p-b,PROCTRACER - Added support for tracing existing processes,54,[],https://github.com/tklengyel/drakvuf/pull/116,https://github.com/tklengyel,13,https://github.com/tklengyel/drakvuf/pull/116#issuecomment-219823012,"KNOWN BUG: PsGetCurrentThreadTeb doesn't always run on new process creation. I'll find other API candidates as replacement/counterpart and will update this PR.
Oh, and I included a fallback to a default config name, since the new -P parameter didn't work for me. Also, it would be better to provide a directory in the command line because the plugin may depend on numerous configuration files (one per traced module).
This PR includes #115 because we need properly working drakvuf_find_eprocess().","Most projects I work with use the rebase model (Xen, LibVMI). But yea, we should explicitly state that in the Wiki. The link you posted is a good summary of it! In any case, you can try just doing a fresh start by copying the files out then back in as a workaround.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,116,2016-04-17T11:41:38Z,2016-05-23T16:54:04Z,2016-05-23T16:54:04Z,CLOSED,False,2002,1028,58,https://github.com/v-p-b,PROCTRACER - Added support for tracing existing processes,54,[],https://github.com/tklengyel/drakvuf/pull/116,https://github.com/v-p-b,14,https://github.com/tklengyel/drakvuf/pull/116#issuecomment-221030040,"KNOWN BUG: PsGetCurrentThreadTeb doesn't always run on new process creation. I'll find other API candidates as replacement/counterpart and will update this PR.
Oh, and I included a fallback to a default config name, since the new -P parameter didn't work for me. Also, it would be better to provide a directory in the command line because the plugin may depend on numerous configuration files (one per traced module).
This PR includes #115 because we need properly working drakvuf_find_eprocess().",Closing this PR in favor of a newly rebased one.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,117,2016-04-17T16:21:15Z,2016-04-17T16:29:36Z,2016-04-17T16:29:37Z,MERGED,True,10,21,4,https://github.com/tklengyel,Break module loop when target is found and don't start plugins before…,1,[],https://github.com/tklengyel/drakvuf/pull/117,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/117,… injector,… injector,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,117,2016-04-17T16:21:15Z,2016-04-17T16:29:36Z,2016-04-17T16:29:37Z,MERGED,True,10,21,4,https://github.com/tklengyel,Break module loop when target is found and don't start plugins before…,1,[],https://github.com/tklengyel/drakvuf/pull/117,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/117#issuecomment-211052513,… injector,PR tester is kinda broken right now but tested manually and it's all OK.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,118,2016-04-17T18:11:53Z,2016-05-05T02:10:48Z,2016-05-05T02:10:56Z,MERGED,True,253,171,15,https://github.com/tklengyel,Sanitize trap definition and add CR3 register trap,1,[],https://github.com/tklengyel/drakvuf/pull/118,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/118,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,119,2016-04-18T10:41:45Z,2016-04-19T05:55:06Z,2016-04-20T06:13:23Z,CLOSED,False,16,0,2,https://github.com/aoshiken,Added util for getting process id...,1,[],https://github.com/tklengyel/drakvuf/pull/119,https://github.com/aoshiken,1,https://github.com/tklengyel/drakvuf/pull/119,...by process name,...by process name,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,119,2016-04-18T10:41:45Z,2016-04-19T05:55:06Z,2016-04-20T06:13:23Z,CLOSED,False,16,0,2,https://github.com/aoshiken,Added util for getting process id...,1,[],https://github.com/tklengyel/drakvuf/pull/119,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/119#issuecomment-211323528,...by process name,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,119,2016-04-18T10:41:45Z,2016-04-19T05:55:06Z,2016-04-20T06:13:23Z,CLOSED,False,16,0,2,https://github.com/aoshiken,Added util for getting process id...,1,[],https://github.com/tklengyel/drakvuf/pull/119,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/119#issuecomment-211532050,...by process name,"So my only concern with this addition is that it uses drakvuf_find_eprocess which is only safe to use under certain circumstances. For example, if a process is unhooked from the linked-list (DKOM attack) this function would fail. So to make this function useful I would say only do the portion of reading the PID from the eprocess struct, similar to drakvuf_get_process_name. That way it can be used if the eprocess base is gathered for example from the currently executing thread's link.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,119,2016-04-18T10:41:45Z,2016-04-19T05:55:06Z,2016-04-20T06:13:23Z,CLOSED,False,16,0,2,https://github.com/aoshiken,Added util for getting process id...,1,[],https://github.com/tklengyel/drakvuf/pull/119,https://github.com/aoshiken,4,https://github.com/tklengyel/drakvuf/pull/119#issuecomment-211546333,...by process name,"Agreed, I was aiming for getting info about ""usual"" processes on plugin initiation.
Regards",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,120,2016-04-19T15:41:39Z,2016-04-19T15:41:52Z,2016-04-19T15:42:40Z,MERGED,True,11,5,1,https://github.com/tklengyel,Don't return true in drakvuf_get_module_list if modulelist is 0,1,[],https://github.com/tklengyel/drakvuf/pull/120,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/120,and use dtb instead of PID based lookup,and use dtb instead of PID based lookup,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,120,2016-04-19T15:41:39Z,2016-04-19T15:41:52Z,2016-04-19T15:42:40Z,MERGED,True,11,5,1,https://github.com/tklengyel,Don't return true in drakvuf_get_module_list if modulelist is 0,1,[],https://github.com/tklengyel/drakvuf/pull/120,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/120#issuecomment-211985823,and use dtb instead of PID based lookup,Fixed #114,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,121,2016-04-19T15:54:51Z,2016-04-19T16:00:43Z,2016-04-19T16:00:44Z,MERGED,True,10,0,2,https://github.com/tklengyel,Only start timeout on loop start,1,[],https://github.com/tklengyel/drakvuf/pull/121,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/121,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,124,2016-04-22T16:19:50Z,2016-04-26T17:35:18Z,2016-04-26T17:35:22Z,MERGED,True,82,34,11,https://github.com/tklengyel,Runtime configuration of plugin/debug output,1,[],https://github.com/tklengyel/drakvuf/pull/124,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/124,Addressing #123,Addressing #123,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,126,2016-04-25T16:36:08Z,2016-04-25T16:36:13Z,2016-04-25T16:36:15Z,MERGED,True,1,1,1,https://github.com/tklengyel,Bump version to 0.3,1,[],https://github.com/tklengyel/drakvuf/pull/126,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/126,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,127,2016-04-25T16:37:48Z,2016-04-25T16:47:51Z,2016-04-25T16:47:54Z,MERGED,True,43,30,1,https://github.com/tklengyel,Create all tables in init_vmi to avoid unclean shutdown,1,[],https://github.com/tklengyel/drakvuf/pull/127,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/127,"Also, sanitizing shutdown routine to avoid crashing when bailing out on failed inits. Should fix segfault reported in #125.","Also, sanitizing shutdown routine to avoid crashing when bailing out on failed inits. Should fix segfault reported in #125.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,128,2016-04-25T16:55:39Z,2016-04-25T16:55:45Z,2016-04-25T16:55:46Z,MERGED,True,763,763,50,https://github.com/tklengyel,Update year in license,1,[],https://github.com/tklengyel/drakvuf/pull/128,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/128,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,129,2016-04-25T17:00:42Z,2016-04-25T17:00:49Z,2016-04-25T17:00:52Z,MERGED,True,1,1,1,https://github.com/tklengyel,Add git revision information to version number,1,[],https://github.com/tklengyel/drakvuf/pull/129,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/129,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,131,2016-04-26T07:27:03Z,2016-04-26T16:42:23Z,2016-04-26T16:45:18Z,MERGED,True,56,0,2,https://github.com/aoshiken,Added new routine for getting module base address,1,[],https://github.com/tklengyel/drakvuf/pull/131,https://github.com/aoshiken,1,https://github.com/tklengyel/drakvuf/pull/131,"bool drakvuf_get_module_base_addr( drakvuf_t drakvuf, addr_t *module_list_head, const char *module_name, addr_t *base_addr_out )
This PR replaces #99","bool drakvuf_get_module_base_addr( drakvuf_t drakvuf, addr_t *module_list_head, const char *module_name, addr_t *base_addr_out )
This PR replaces #99",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,132,2016-04-27T01:37:44Z,2016-04-27T01:38:12Z,2016-05-05T02:16:17Z,MERGED,True,5,6,2,https://github.com/tklengyel,Minor (cosmetic) fixes in module base address finder,1,[],https://github.com/tklengyel/drakvuf/pull/132,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/132,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,133,2016-04-27T01:43:48Z,2016-04-27T01:44:17Z,2016-05-05T02:16:15Z,MERGED,True,16,4,1,https://github.com/tklengyel,Speed up syscalls plugin startup by calculating absolute VA in the pl…,1,[],https://github.com/tklengyel/drakvuf/pull/133,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/133,…ugin,…ugin,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,134,2016-04-27T02:16:54Z,2016-04-27T02:18:15Z,2016-05-05T02:16:15Z,MERGED,True,3,3,1,https://github.com/tklengyel,Update Travis CI build,1,[],https://github.com/tklengyel/drakvuf/pull/134,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/134,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,135,2016-04-27T02:45:55Z,2016-04-27T02:47:34Z,2016-05-05T02:15:55Z,MERGED,True,6,1,1,https://github.com/tklengyel,Catch initialization error,1,[],https://github.com/tklengyel/drakvuf/pull/135,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/135,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,136,2016-04-27T02:46:34Z,2016-04-27T02:57:22Z,2016-05-05T02:15:55Z,MERGED,True,11,5,2,https://github.com/tklengyel,Check return values in more places,1,[],https://github.com/tklengyel/drakvuf/pull/136,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/136,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,137,2016-04-27T03:00:40Z,2016-04-27T03:29:38Z,2016-04-27T03:29:40Z,MERGED,True,1,7,2,https://github.com/tklengyel,Minor cleanups,1,[],https://github.com/tklengyel/drakvuf/pull/137,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/137,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,138,2016-04-27T04:02:02Z,2016-04-27T04:09:29Z,2016-05-05T02:15:53Z,MERGED,True,10,10,2,https://github.com/tklengyel,Fixing crash introduced by ae593b8,1,[],https://github.com/tklengyel/drakvuf/pull/138,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/138,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,141,2016-05-09T21:22:48Z,2016-05-10T19:03:39Z,2016-05-10T19:03:39Z,MERGED,True,15,4,3,https://github.com/zashraf1337,Dirwatch improvements - Issue #140,3,[],https://github.com/tklengyel/drakvuf/pull/141,https://github.com/zashraf1337,1,https://github.com/tklengyel/drakvuf/pull/141,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,141,2016-05-09T21:22:48Z,2016-05-10T19:03:39Z,2016-05-10T19:03:39Z,MERGED,True,15,4,3,https://github.com/zashraf1337,Dirwatch improvements - Issue #140,3,[],https://github.com/tklengyel/drakvuf/pull/141,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/141#issuecomment-218257264,,"Awesome, looks good! Thanks!",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,144,2016-05-13T16:09:31Z,2016-05-13T19:28:02Z,2016-05-13T19:28:06Z,MERGED,True,3,2,1,https://github.com/tklengyel,Default filedelete to log-only without folder specified,1,[],https://github.com/tklengyel/drakvuf/pull/144,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/144,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,149,2016-05-17T16:14:01Z,2016-05-17T16:33:51Z,2016-05-17T16:33:54Z,MERGED,True,16,9,1,https://github.com/tklengyel,Define stdc format macros through configure,1,[],https://github.com/tklengyel/drakvuf/pull/149,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/149,Fixes #147,Fixes #147,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,150,2016-05-17T17:49:21Z,2016-05-24T20:59:04Z,2016-05-24T20:59:06Z,MERGED,True,751,614,20,https://github.com/tklengyel,Libinjector,1,[],https://github.com/tklengyel/drakvuf/pull/150,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/150,"Relocate injector codebase from libdrakvuf to its own separate library and convert all traps to use DRAKVUF traps instead of manual LibVMI traps. On x86 Windows use new method of trapping userspace entry as the APC injection method is unreliable on multi-vCPU guests.
Fixes #148","Relocate injector codebase from libdrakvuf to its own separate library and convert all traps to use DRAKVUF traps instead of manual LibVMI traps. On x86 Windows use new method of trapping userspace entry as the APC injection method is unreliable on multi-vCPU guests.
Fixes #148",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,152,2016-05-19T17:55:55Z,2016-05-19T18:08:39Z,2016-05-19T18:08:45Z,MERGED,True,1,0,1,https://github.com/tklengyel,Revert remapping on shutdown in idx view,1,[],https://github.com/tklengyel/drakvuf/pull/152,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/152,"Apparently altp2m view destroy doesn't actually free the tables in Xen, just deactivates them. On subsequent creation of the altp2m tables, the same remappings are active as before. So, if we do two DRAKVUF runs with different plugins, we might end up getting the following errors:
Ignoring old breakpoint event found in the queue
This error comes from the re-activated remappings of old DRAKVUF traps that now have no subscribers. By reverting all remappings on shutdown we can avoid running into this issue.","Apparently altp2m view destroy doesn't actually free the tables in Xen, just deactivates them. On subsequent creation of the altp2m tables, the same remappings are active as before. So, if we do two DRAKVUF runs with different plugins, we might end up getting the following errors:
Ignoring old breakpoint event found in the queue
This error comes from the re-activated remappings of old DRAKVUF traps that now have no subscribers. By reverting all remappings on shutdown we can avoid running into this issue.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,153,2016-05-22T01:38:52Z,2016-05-24T01:19:21Z,2016-05-24T01:19:26Z,MERGED,True,113,166,4,https://github.com/tklengyel,Coalesce guard memaccess traps and drakvuf memaccess traps,1,[],https://github.com/tklengyel/drakvuf/pull/153,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/153,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,155,2016-05-23T17:25:02Z,2018-03-12T17:14:39Z,2018-03-12T17:14:39Z,CLOSED,False,759,20,10,https://github.com/v-p-b,Proctracer rebase,8,[],https://github.com/tklengyel/drakvuf/pull/155,https://github.com/v-p-b,1,https://github.com/tklengyel/drakvuf/pull/155,Fresh start after #116,Fresh start after #116,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,155,2016-05-23T17:25:02Z,2018-03-12T17:14:39Z,2018-03-12T17:14:39Z,CLOSED,False,759,20,10,https://github.com/v-p-b,Proctracer rebase,8,[],https://github.com/tklengyel/drakvuf/pull/155,https://github.com/v-p-b,2,https://github.com/tklengyel/drakvuf/pull/155#issuecomment-221239791,Fresh start after #116,"Fair points, thanks! Honestly, I forgot about these, but now that I look at the diffs I'd ask if it's really a good idea to wire plugin-specific arguments into the main code?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,155,2016-05-23T17:25:02Z,2018-03-12T17:14:39Z,2018-03-12T17:14:39Z,CLOSED,False,759,20,10,https://github.com/v-p-b,Proctracer rebase,8,[],https://github.com/tklengyel/drakvuf/pull/155,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/155#issuecomment-221315295,Fresh start after #116,"Yea, I haven't figured a better way to pass custom inputs to the plugins
yet..
On May 24, 2016 05:22, ""buherator"" notifications@github.com wrote:

Fair points, thanks! Honestly, I forgot about these, but now that I look
at the diffs I'd ask if it's really a good idea to wire plugin-specific
arguments into the main code?
—
You are receiving this because you commented.
Reply to this email directly or view it on GitHub
#155 (comment)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,155,2016-05-23T17:25:02Z,2018-03-12T17:14:39Z,2018-03-12T17:14:39Z,CLOSED,False,759,20,10,https://github.com/v-p-b,Proctracer rebase,8,[],https://github.com/tklengyel/drakvuf/pull/155,https://github.com/v-p-b,4,https://github.com/tklengyel/drakvuf/pull/155#issuecomment-221505295,Fresh start after #116,"How about ""convention over configuration"": Like having a plugin_data/ directory (for example) where all plugins can have their configuration (or other data) in their designated subdirectories?
So we could have a structure similar to the following:
plugin_data/
├── filedelete
│   ├── carved_file0.dat
│   └── carved_file1.dat
├── futureplugin
│   └── settings.ini
└── proctracer
    ├── module.dll.json
    └── proctracer.json

This way each plugin could define how it expects its settings/generates output, independently from the main command line argument parser.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,155,2016-05-23T17:25:02Z,2018-03-12T17:14:39Z,2018-03-12T17:14:39Z,CLOSED,False,759,20,10,https://github.com/v-p-b,Proctracer rebase,8,[],https://github.com/tklengyel/drakvuf/pull/155,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/155#issuecomment-221638340,Fresh start after #116,"That would be OK but I would rather not have a separate configuration file for all plugins just now, for most plugins it's not actually needed. It's also kinda nice to be able to just start everything from a single command line. I guess we can revisit this issue once more plugins start having custom inputs.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,155,2016-05-23T17:25:02Z,2018-03-12T17:14:39Z,2018-03-12T17:14:39Z,CLOSED,False,759,20,10,https://github.com/v-p-b,Proctracer rebase,8,[],https://github.com/tklengyel/drakvuf/pull/155,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/155#issuecomment-222864085,Fresh start after #116,This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,155,2016-05-23T17:25:02Z,2018-03-12T17:14:39Z,2018-03-12T17:14:39Z,CLOSED,False,759,20,10,https://github.com/v-p-b,Proctracer rebase,8,[],https://github.com/tklengyel/drakvuf/pull/155,https://github.com/v-p-b,7,https://github.com/tklengyel/drakvuf/pull/155#issuecomment-222925247,Fresh start after #116,"proctracer/proctracer.h:109:9: fatal error: 'list' file not found
#include<list>

Is this a problem at my side? list should be part of std AFAIK.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,155,2016-05-23T17:25:02Z,2018-03-12T17:14:39Z,2018-03-12T17:14:39Z,CLOSED,False,759,20,10,https://github.com/v-p-b,Proctracer rebase,8,[],https://github.com/tklengyel/drakvuf/pull/155,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/155#issuecomment-223031269,Fresh start after #116,"Yea i saw that too, not sure..
On Jun 1, 2016 02:22, ""buherator"" notifications@github.com wrote:

proctracer/proctracer.h:109:9: fatal error: 'list' file not found
#include
Is this a problem at my side? list should be part of std AFAIK.
—
You are receiving this because you commented.
Reply to this email directly, view it on GitHub
#155 (comment),
or mute the thread
https://github.com/notifications/unsubscribe/ADBp3diY5b9l-7K4z_zbVEAl69tv_cL7ks5qHUFTgaJpZM4IksI-
.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,155,2016-05-23T17:25:02Z,2018-03-12T17:14:39Z,2018-03-12T17:14:39Z,CLOSED,False,759,20,10,https://github.com/v-p-b,Proctracer rebase,8,[],https://github.com/tklengyel/drakvuf/pull/155,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/155#issuecomment-225236179,Fresh start after #116,#167 should fix the Travis CI script failing on this PR if you rebase!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,155,2016-05-23T17:25:02Z,2018-03-12T17:14:39Z,2018-03-12T17:14:39Z,CLOSED,False,759,20,10,https://github.com/v-p-b,Proctracer rebase,8,[],https://github.com/tklengyel/drakvuf/pull/155,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/155#issuecomment-225373878,Fresh start after #116,Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,155,2016-05-23T17:25:02Z,2018-03-12T17:14:39Z,2018-03-12T17:14:39Z,CLOSED,False,759,20,10,https://github.com/v-p-b,Proctracer rebase,8,[],https://github.com/tklengyel/drakvuf/pull/155,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/155#issuecomment-225375630,Fresh start after #116,Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,155,2016-05-23T17:25:02Z,2018-03-12T17:14:39Z,2018-03-12T17:14:39Z,CLOSED,False,759,20,10,https://github.com/v-p-b,Proctracer rebase,8,[],https://github.com/tklengyel/drakvuf/pull/155,https://github.com/tklengyel,12,https://github.com/tklengyel/drakvuf/pull/155#issuecomment-225376225,Fresh start after #116,"The PR doesn't pass the CI gate because:
json_object_from_file: error opening file proctracer.json: No such file or directory
Plugin proctracer startup failed!
close_vmi_drakvuf finished
[PROCTRACER] Starting...
[PROCTRACER] Can't find config!
We need to figure out a way to get this tested as well.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,155,2016-05-23T17:25:02Z,2018-03-12T17:14:39Z,2018-03-12T17:14:39Z,CLOSED,False,759,20,10,https://github.com/v-p-b,Proctracer rebase,8,[],https://github.com/tklengyel/drakvuf/pull/155,https://github.com/tklengyel,13,https://github.com/tklengyel/drakvuf/pull/155#issuecomment-244439148,Fresh start after #116,PR ping. Do you still plan on working on this? I would be happy to take over if you don't have time to finish it up.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,155,2016-05-23T17:25:02Z,2018-03-12T17:14:39Z,2018-03-12T17:14:39Z,CLOSED,False,759,20,10,https://github.com/v-p-b,Proctracer rebase,8,[],https://github.com/tklengyel/drakvuf/pull/155,https://github.com/SecureStack,14,https://github.com/tklengyel/drakvuf/pull/155#issuecomment-255537534,Fresh start after #116,@tklengyel  what is the current status on this branch? I can contribute to this if you want. Please let me know.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,155,2016-05-23T17:25:02Z,2018-03-12T17:14:39Z,2018-03-12T17:14:39Z,CLOSED,False,759,20,10,https://github.com/v-p-b,Proctracer rebase,8,[],https://github.com/tklengyel/drakvuf/pull/155,https://github.com/tklengyel,15,https://github.com/tklengyel/drakvuf/pull/155#issuecomment-255624504,Fresh start after #116,@SecureStack: feel free to fork it and work on it! Thanks.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,157,2016-05-25T17:31:23Z,2016-05-25T17:48:40Z,2016-05-25T17:48:41Z,MERGED,True,31,34,1,https://github.com/tklengyel,64-bit injector optimization,1,[],https://github.com/tklengyel/drakvuf/pull/157,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/157,Entry and return traps are the same for 64-bit injection so no need to remove/readd the same trap twice.,Entry and return traps are the same for 64-bit injection so no need to remove/readd the same trap twice.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,159,2016-05-26T16:46:46Z,2016-05-27T01:57:52Z,2016-05-27T01:57:54Z,MERGED,True,12,0,3,https://github.com/tklengyel,Unshare before applying memtrap,1,[],https://github.com/tklengyel/drakvuf/pull/159,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/159,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,160,2016-05-26T20:05:26Z,2016-05-27T01:44:52Z,2016-05-27T01:44:54Z,MERGED,True,53,38,8,https://github.com/tklengyel,Pause tweaking,1,[],https://github.com/tklengyel/drakvuf/pull/160,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/160,The pause/unpause pairs have been out of whack since vmi_pause_vm no longer increments Xen's pause count. This resulted in the VM getting unpaused after every add_trap call.,The pause/unpause pairs have been out of whack since vmi_pause_vm no longer increments Xen's pause count. This resulted in the VM getting unpaused after every add_trap call.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,163,2016-05-31T18:13:52Z,2016-05-31T18:38:54Z,2016-06-11T17:05:59Z,MERGED,True,5,1,3,https://github.com/tklengyel,Injector should leave the VM unpaused,1,[],https://github.com/tklengyel/drakvuf/pull/163,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/163,Fixes parts of #158,Fixes parts of #158,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,164,2016-06-01T00:50:37Z,2016-06-06T17:08:28Z,2016-06-06T17:08:31Z,MERGED,True,83,648,61,https://github.com/tklengyel,Remove 'Dynamic Malware Analysis' from the license,1,[],https://github.com/tklengyel/drakvuf/pull/164,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/164,Also remove some unused headers and scripts.,Also remove some unused headers and scripts.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,167,2016-06-10T16:47:35Z,2016-06-10T16:51:47Z,2016-06-11T17:06:15Z,MERGED,True,2,2,1,https://github.com/tklengyel,Update Travis script to install C++ STD headers,1,[],https://github.com/tklengyel/drakvuf/pull/167,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/167,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,169,2016-06-11T16:30:22Z,2016-06-11T16:41:56Z,2016-06-11T16:41:58Z,MERGED,True,127,1,3,https://github.com/tklengyel,Add facility to use PRINT_DEBUG in plugins,1,[],https://github.com/tklengyel/drakvuf/pull/169,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/169,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,170,2016-06-11T16:49:59Z,2016-06-23T19:24:24Z,2016-06-23T19:24:24Z,CLOSED,False,1,0,1,https://github.com/tklengyel,Test PR to check if master still builds on the CI system,1,[],https://github.com/tklengyel/drakvuf/pull/170,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/170,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,170,2016-06-11T16:49:59Z,2016-06-23T19:24:24Z,2016-06-23T19:24:24Z,CLOSED,False,1,0,1,https://github.com/tklengyel,Test PR to check if master still builds on the CI system,1,[],https://github.com/tklengyel/drakvuf/pull/170,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/170#issuecomment-225374578,,Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,170,2016-06-11T16:49:59Z,2016-06-23T19:24:24Z,2016-06-23T19:24:24Z,CLOSED,False,1,0,1,https://github.com/tklengyel,Test PR to check if master still builds on the CI system,1,[],https://github.com/tklengyel/drakvuf/pull/170,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/170#issuecomment-228154859,,Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,171,2016-06-11T17:00:12Z,2016-06-11T17:05:42Z,2016-06-11T17:05:43Z,MERGED,True,11,11,4,https://github.com/tklengyel,Throw error on plugin start instead of just returning,1,[],https://github.com/tklengyel/drakvuf/pull/171,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/171,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,174,2016-06-16T19:05:09Z,2016-06-16T21:22:46Z,2016-06-16T21:22:48Z,MERGED,True,1,1,1,https://github.com/tklengyel,libinjector: Make sure to release the mutex lock on error,1,[],https://github.com/tklengyel/drakvuf/pull/174,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/174,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,175,2016-06-16T21:53:47Z,2016-06-16T22:46:49Z,2016-06-16T22:46:50Z,MERGED,True,135,67,2,https://github.com/tklengyel,Injector work and cleanup,1,[],https://github.com/tklengyel/drakvuf/pull/175,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/175,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,175,2016-06-16T21:53:47Z,2016-06-16T22:46:49Z,2016-06-16T22:46:50Z,MERGED,True,135,67,2,https://github.com/tklengyel,Injector work and cleanup,1,[],https://github.com/tklengyel/drakvuf/pull/175,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/175#issuecomment-226632786,,Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,176,2016-06-16T23:41:17Z,2016-06-16T23:48:20Z,2016-06-16T23:48:21Z,MERGED,True,6,5,4,https://github.com/tklengyel,Define drakvuk_trap_free_t to silence compiler warnings,1,[],https://github.com/tklengyel/drakvuf/pull/176,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/176,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,176,2016-06-16T23:41:17Z,2016-06-16T23:48:20Z,2016-06-16T23:48:21Z,MERGED,True,6,5,4,https://github.com/tklengyel,Define drakvuk_trap_free_t to silence compiler warnings,1,[],https://github.com/tklengyel/drakvuf/pull/176,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/176#issuecomment-226645125,,Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,177,2016-06-18T01:11:24Z,2016-06-18T01:22:36Z,2016-06-18T01:22:37Z,MERGED,True,78,11,2,https://github.com/tklengyel,Copy remapped gfn's when they get written,1,[],https://github.com/tklengyel/drakvuf/pull/177,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/177,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,178,2016-06-18T17:32:28Z,2016-06-18T17:38:56Z,2016-06-18T17:38:57Z,MERGED,True,9,4,1,https://github.com/tklengyel,Properly free the GSList on shutdown for breakpoint_lookup_gfn,1,[],https://github.com/tklengyel/drakvuf/pull/178,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/178,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,181,2016-06-24T17:22:19Z,2016-06-24T17:35:37Z,2016-06-24T17:35:40Z,MERGED,True,2,4,1,https://github.com/tklengyel,Use new vmi_swap_events API,1,[],https://github.com/tklengyel/drakvuf/pull/181,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/181,Fixes #180,Fixes #180,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,182,2016-06-28T23:17:14Z,2016-06-29T02:51:34Z,2016-06-29T02:51:35Z,MERGED,True,76,15,2,https://github.com/tklengyel,Properly handle int3 double-trapping,1,[],https://github.com/tklengyel/drakvuf/pull/182,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/182,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,182,2016-06-28T23:17:14Z,2016-06-29T02:51:34Z,2016-06-29T02:51:35Z,MERGED,True,76,15,2,https://github.com/tklengyel,Properly handle int3 double-trapping,1,[],https://github.com/tklengyel/drakvuf/pull/182,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/182#issuecomment-229214524,,Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,182,2016-06-28T23:17:14Z,2016-06-29T02:51:34Z,2016-06-29T02:51:35Z,MERGED,True,76,15,2,https://github.com/tklengyel,Properly handle int3 double-trapping,1,[],https://github.com/tklengyel/drakvuf/pull/182,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/182#issuecomment-229242307,,Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,184,2016-06-30T16:55:23Z,2016-06-30T16:59:23Z,2016-06-30T16:59:25Z,MERGED,True,8,2,2,https://github.com/tklengyel,Selectively call memaccess traps for matching permissions,1,[],https://github.com/tklengyel/drakvuf/pull/184,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/184,Fixes #183,Fixes #183,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,185,2016-07-13T18:40:24Z,2016-07-13T18:44:22Z,2016-07-16T16:16:29Z,MERGED,True,8,0,3,https://github.com/tklengyel,Add submodules for Xen and LibVMI,1,[],https://github.com/tklengyel/drakvuf/pull/185,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/185,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,187,2016-07-15T20:44:17Z,2016-07-15T21:05:25Z,2016-07-15T21:05:30Z,MERGED,True,402,7,11,https://github.com/tklengyel,SSDTmon,2,[],https://github.com/tklengyel/drakvuf/pull/187,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/187,Plugin to monitor the SSDT to check if any hooks are written.,Plugin to monitor the SSDT to check if any hooks are written.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,188,2016-07-16T15:57:03Z,2016-07-16T16:01:02Z,2016-07-16T16:01:04Z,MERGED,True,28,15,6,https://github.com/tklengyel,Libinjector: allow specifying the thread id to use for hijacking,1,[],https://github.com/tklengyel/drakvuf/pull/188,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/188,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,194,2016-08-09T13:16:02Z,2016-08-09T17:15:04Z,2016-08-09T17:15:19Z,MERGED,True,9,1,1,https://github.com/masthoon,Fix page rights when placing a breakpoint,1,[],https://github.com/tklengyel/drakvuf/pull/194,https://github.com/masthoon,1,https://github.com/tklengyel/drakvuf/pull/194,"Fix for Issue #193
As VMI_MEMACCESS_INVALID value is 0, I can merge old_access and VMI_MEMACCESS_RW using OR.
If you want, I can add an if statement to check old_access value (different from invalid) and I can add a PRINT_DEBUG when the memaccess is merged (when s isn't null).","Fix for Issue #193
As VMI_MEMACCESS_INVALID value is 0, I can merge old_access and VMI_MEMACCESS_RW using OR.
If you want, I can add an if statement to check old_access value (different from invalid) and I can add a PRINT_DEBUG when the memaccess is merged (when s isn't null).",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,194,2016-08-09T13:16:02Z,2016-08-09T17:15:04Z,2016-08-09T17:15:19Z,MERGED,True,9,1,1,https://github.com/masthoon,Fix page rights when placing a breakpoint,1,[],https://github.com/tklengyel/drakvuf/pull/194,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/194#issuecomment-238621936,"Fix for Issue #193
As VMI_MEMACCESS_INVALID value is 0, I can merge old_access and VMI_MEMACCESS_RW using OR.
If you want, I can add an if statement to check old_access value (different from invalid) and I can add a PRINT_DEBUG when the memaccess is merged (when s isn't null).",This is ok to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,194,2016-08-09T13:16:02Z,2016-08-09T17:15:04Z,2016-08-09T17:15:19Z,MERGED,True,9,1,1,https://github.com/masthoon,Fix page rights when placing a breakpoint,1,[],https://github.com/tklengyel/drakvuf/pull/194,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/194#issuecomment-238621939,"Fix for Issue #193
As VMI_MEMACCESS_INVALID value is 0, I can merge old_access and VMI_MEMACCESS_RW using OR.
If you want, I can add an if statement to check old_access value (different from invalid) and I can add a PRINT_DEBUG when the memaccess is merged (when s isn't null).",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,194,2016-08-09T13:16:02Z,2016-08-09T17:15:04Z,2016-08-09T17:15:19Z,MERGED,True,9,1,1,https://github.com/masthoon,Fix page rights when placing a breakpoint,1,[],https://github.com/tklengyel/drakvuf/pull/194,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/194#issuecomment-238623375,"Fix for Issue #193
As VMI_MEMACCESS_INVALID value is 0, I can merge old_access and VMI_MEMACCESS_RW using OR.
If you want, I can add an if statement to check old_access value (different from invalid) and I can add a PRINT_DEBUG when the memaccess is merged (when s isn't null).",Thanks!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,195,2016-08-09T13:36:56Z,2016-08-10T17:42:56Z,2016-08-10T17:42:56Z,MERGED,True,24,0,1,https://github.com/masthoon,Fix breakpoints on execute trapped page,1,[],https://github.com/tklengyel/drakvuf/pull/195,https://github.com/masthoon,1,https://github.com/tklengyel/drakvuf/pull/195,Fix for Issue #192,Fix for Issue #192,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,195,2016-08-09T13:36:56Z,2016-08-10T17:42:56Z,2016-08-10T17:42:56Z,MERGED,True,24,0,1,https://github.com/masthoon,Fix breakpoints on execute trapped page,1,[],https://github.com/tklengyel/drakvuf/pull/195,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/195#issuecomment-238621807,Fix for Issue #192,"So this looks fine, however I'm thinking that it may still have a hidden issue. An instruction fetch may load up to 8-bytes from memory, however, we only check if the address of the first byte is one we trapped. An int3 instruction may have arbitrary number of prefixes that don't actually change the behavior of the instruction, so it may be possible that our int3 is injected after a prefix, but the memory execute event will be at the address of the prefix thus skipping the int3 simulation here. Maybe we should just go from s->memaccess.pa up to s->memaccess.pa + 7 and check each of those addresses if they are trapped locations with int3.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,195,2016-08-09T13:36:56Z,2016-08-10T17:42:56Z,2016-08-10T17:42:56Z,MERGED,True,24,0,1,https://github.com/masthoon,Fix breakpoints on execute trapped page,1,[],https://github.com/tklengyel/drakvuf/pull/195,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/195#issuecomment-238621821,Fix for Issue #192,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,195,2016-08-09T13:36:56Z,2016-08-10T17:42:56Z,2016-08-10T17:42:56Z,MERGED,True,24,0,1,https://github.com/masthoon,Fix breakpoints on execute trapped page,1,[],https://github.com/tklengyel/drakvuf/pull/195,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/195#issuecomment-238623529,Fix for Issue #192,This is ok to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,195,2016-08-09T13:36:56Z,2016-08-10T17:42:56Z,2016-08-10T17:42:56Z,MERGED,True,24,0,1,https://github.com/masthoon,Fix breakpoints on execute trapped page,1,[],https://github.com/tklengyel/drakvuf/pull/195,https://github.com/masthoon,5,https://github.com/tklengyel/drakvuf/pull/195#issuecomment-238865428,Fix for Issue #192,"I made the changes according to your comments.
In my opinion, breakpoints aren't supposed to be placed at the middle of an instruction or in self-modifying code, so this shouldn't be an issue. All of the plugins use breakpoints on function entry and if you misplace a breakpoint, the guest program will probably crash.
In which cases do you think this can happen ?
By the way, the code handling breakpoints in int3_cb is similar and it is affected by the same issue.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,195,2016-08-09T13:36:56Z,2016-08-10T17:42:56Z,2016-08-10T17:42:56Z,MERGED,True,24,0,1,https://github.com/masthoon,Fix breakpoints on execute trapped page,1,[],https://github.com/tklengyel/drakvuf/pull/195,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/195#issuecomment-238905119,Fix for Issue #192,"Thanks!
We indeed tend to inject breakpoints into function entry points but that's not a hard requirement. Yes, it's a pain to figure out where else to inject it - like injecting it into the middle of an another instruction is not going to go well but you could also just use a disassembler to help you figure out where it is safe to inject.
And yes, the int3_cb has a similar issue when we get an int3 that wasn't injected by us. If it's an int3 with a prefix, we are in trouble as we swallow the int3 (Ignoring old breakpoint event found in the queue).",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,195,2016-08-09T13:36:56Z,2016-08-10T17:42:56Z,2016-08-10T17:42:56Z,MERGED,True,24,0,1,https://github.com/masthoon,Fix breakpoints on execute trapped page,1,[],https://github.com/tklengyel/drakvuf/pull/195,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/195#issuecomment-238918293,Fix for Issue #192,Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,196,2016-08-10T23:34:54Z,2016-08-11T00:37:38Z,2016-08-11T00:37:41Z,MERGED,True,35,33,2,https://github.com/tklengyel,Handle prefixed int3 instructions appropriately,1,[],https://github.com/tklengyel/drakvuf/pull/196,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/196,On x86 the breakpoint instruction may have several superfluous prefixes attached that don't actually do anything other then changing the address and length of the reported breakpoint. In this patch we fix the reinjection behavior to properly check the right address when the reported insn_length is greater then 1 (caused by prefixes). This also requires an update of LibVMI to the latest drakvuf branch.,On x86 the breakpoint instruction may have several superfluous prefixes attached that don't actually do anything other then changing the address and length of the reported breakpoint. In this patch we fix the reinjection behavior to properly check the right address when the reported insn_length is greater then 1 (caused by prefixes). This also requires an update of LibVMI to the latest drakvuf branch.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,198,2016-08-16T17:41:06Z,2016-08-16T18:09:31Z,2016-08-16T18:28:53Z,MERGED,True,19,16,1,https://github.com/tklengyel,Merge access rights on the right page,2,[],https://github.com/tklengyel/drakvuf/pull/198,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/198,"PR #194 attempted to fix the permissions on pages when injecting a breakpoint to an already monitored page for executions. However, the permissions were merged for the remapped page instead of the current_gfn. The remapped_gfn should not actually be accessible with it's real gfn in the default view at all.","PR #194 attempted to fix the permissions on pages when injecting a breakpoint to an already monitored page for executions. However, the permissions were merged for the remapped page instead of the current_gfn. The remapped_gfn should not actually be accessible with it's real gfn in the default view at all.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,198,2016-08-16T17:41:06Z,2016-08-16T18:09:31Z,2016-08-16T18:28:53Z,MERGED,True,19,16,1,https://github.com/tklengyel,Merge access rights on the right page,2,[],https://github.com/tklengyel/drakvuf/pull/198,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/198#issuecomment-240180385,"PR #194 attempted to fix the permissions on pages when injecting a breakpoint to an already monitored page for executions. However, the permissions were merged for the remapped page instead of the current_gfn. The remapped_gfn should not actually be accessible with it's real gfn in the default view at all.",Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,198,2016-08-16T17:41:06Z,2016-08-16T18:09:31Z,2016-08-16T18:28:53Z,MERGED,True,19,16,1,https://github.com/tklengyel,Merge access rights on the right page,2,[],https://github.com/tklengyel/drakvuf/pull/198,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/198#issuecomment-240186628,"PR #194 attempted to fix the permissions on pages when injecting a breakpoint to an already monitored page for executions. However, the permissions were merged for the remapped page instead of the current_gfn. The remapped_gfn should not actually be accessible with it's real gfn in the default view at all.",Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,199,2016-08-16T18:11:46Z,2016-08-16T18:28:45Z,2016-08-16T18:28:47Z,MERGED,True,21,9,1,https://github.com/tklengyel,SSDTmon extra debug output,1,[],https://github.com/tklengyel/drakvuf/pull/199,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/199,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,200,2016-08-17T16:57:02Z,2016-08-17T23:13:31Z,2016-08-17T23:13:33Z,MERGED,True,10,6,4,https://github.com/tklengyel,Update test-packages for Travis CI,1,[],https://github.com/tklengyel/drakvuf/pull/200,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/200,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,202,2016-08-23T17:58:54Z,2016-08-23T18:03:30Z,2016-08-23T18:03:32Z,MERGED,True,3,2,1,https://github.com/tklengyel,Move container check to appropriate location,1,[],https://github.com/tklengyel/drakvuf/pull/202,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/202,Fixes #197,Fixes #197,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,203,2016-08-27T01:05:56Z,2016-08-28T21:55:53Z,2016-08-28T21:55:55Z,MERGED,True,13,9,3,https://github.com/tklengyel,Minor cleanups and fixes,1,[],https://github.com/tklengyel/drakvuf/pull/203,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/203,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,203,2016-08-27T01:05:56Z,2016-08-28T21:55:53Z,2016-08-28T21:55:55Z,MERGED,True,13,9,3,https://github.com/tklengyel,Minor cleanups and fixes,1,[],https://github.com/tklengyel/drakvuf/pull/203,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/203#issuecomment-243001758,,Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,205,2016-08-28T21:33:29Z,2016-08-28T21:38:57Z,2016-08-28T21:39:03Z,MERGED,True,102,121,7,https://github.com/tklengyel,Update libvmi,3,[],https://github.com/tklengyel/drakvuf/pull/205,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/205,"Fixes #204 and also a hitherto lingering bug where the GFN remapping would overwrite the memaccess settings on breakpointed pages, potentially leading to bluescreens as the breakpoints would become visible during read-accesses.","Fixes #204 and also a hitherto lingering bug where the GFN remapping would overwrite the memaccess settings on breakpointed pages, potentially leading to bluescreens as the breakpoints would become visible during read-accesses.",True,{'THUMBS_UP': ['https://github.com/zdzhjx']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,206,2016-08-29T20:13:01Z,2016-08-29T20:22:31Z,2016-09-29T01:43:35Z,MERGED,True,12,10,1,https://github.com/tklengyel,Dirwatch cleanup and coverity fixes,1,[],https://github.com/tklengyel/drakvuf/pull/206,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/206,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,207,2016-08-29T22:12:44Z,2016-08-30T05:10:27Z,2016-09-29T01:43:17Z,MERGED,True,417,202,26,https://github.com/tklengyel,Don't surpress compiler warnings on debug builds,1,[],https://github.com/tklengyel/drakvuf/pull/207,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/207,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,207,2016-08-29T22:12:44Z,2016-08-30T05:10:27Z,2016-09-29T01:43:17Z,MERGED,True,417,202,26,https://github.com/tklengyel,Don't surpress compiler warnings on debug builds,1,[],https://github.com/tklengyel/drakvuf/pull/207,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/207#issuecomment-243334167,,Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,208,2016-08-31T02:28:44Z,2016-08-31T03:14:11Z,2016-08-31T03:14:13Z,MERGED,True,68,40,3,https://github.com/tklengyel,Filedelete plugin cleanup,1,[],https://github.com/tklengyel/drakvuf/pull/208,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/208,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,209,2016-08-31T17:25:39Z,2016-08-31T18:19:55Z,2016-08-31T18:19:58Z,MERGED,True,73,25,11,https://github.com/tklengyel,Get SessionID of currently executing process,1,[],https://github.com/tklengyel/drakvuf/pull/209,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/209,Also bump the version number.,Also bump the version number.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,210,2016-08-31T18:50:34Z,2016-08-31T20:13:47Z,2016-08-31T20:13:49Z,MERGED,True,168,43,11,https://github.com/tklengyel,Include process name and session id in each drakvuf_trap_info_t,1,[],https://github.com/tklengyel/drakvuf/pull/210,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/210,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,211,2016-09-02T19:50:11Z,2016-09-02T20:15:27Z,2016-09-02T20:15:29Z,MERGED,True,54,54,11,https://github.com/tklengyel,Fix warnings reported by Valgrind,1,[],https://github.com/tklengyel/drakvuf/pull/211,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/211,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,212,2016-09-05T23:56:27Z,2016-09-06T00:25:37Z,2016-09-06T00:25:40Z,MERGED,True,119,70,5,https://github.com/tklengyel,Check return values at more spots,1,[],https://github.com/tklengyel/drakvuf/pull/212,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/212,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,218,2016-10-07T19:27:30Z,2016-10-07T19:41:48Z,2016-10-07T19:41:50Z,MERGED,True,4,0,2,https://github.com/tklengyel,Add Rekall submodule,1,[],https://github.com/tklengyel/drakvuf/pull/218,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/218,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,224,2016-11-16T19:35:41Z,2016-12-05T19:41:06Z,2016-12-05T19:49:47Z,MERGED,True,970,123,25,https://github.com/tklengyel,Move to Xen 4.8 and enable debug and CPUID events,3,[],https://github.com/tklengyel/drakvuf/pull/224,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/224,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,226,2016-12-15T20:34:13Z,2016-12-15T21:33:40Z,2016-12-19T16:50:10Z,MERGED,True,1403,241,23,https://github.com/tklengyel,Linux support,2,[],https://github.com/tklengyel/drakvuf/pull/226,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/226,Adding scaffolding to support Linux. Plugin support is only syscalls / cpuidmod / debugmon. KASLR not yet supported.,Adding scaffolding to support Linux. Plugin support is only syscalls / cpuidmod / debugmon. KASLR not yet supported.,True,{'THUMBS_UP': ['https://github.com/zdzhjx']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,226,2016-12-15T20:34:13Z,2016-12-15T21:33:40Z,2016-12-19T16:50:10Z,MERGED,True,1403,241,23,https://github.com/tklengyel,Linux support,2,[],https://github.com/tklengyel/drakvuf/pull/226,https://github.com/Preetixen,2,https://github.com/tklengyel/drakvuf/pull/226#issuecomment-267742759,Adding scaffolding to support Linux. Plugin support is only syscalls / cpuidmod / debugmon. KASLR not yet supported.,"Hi
With reference to #226, can you please provide the commands and instructions for Linux syscall trapping for required programs as provided in https://drakvuf.com/ for windows syscalls.
Thanks",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,226,2016-12-15T20:34:13Z,2016-12-15T21:33:40Z,2016-12-19T16:50:10Z,MERGED,True,1403,241,23,https://github.com/tklengyel,Linux support,2,[],https://github.com/tklengyel/drakvuf/pull/226,https://github.com/Preetixen,3,https://github.com/tklengyel/drakvuf/pull/226#issuecomment-267742824,Adding scaffolding to support Linux. Plugin support is only syscalls / cpuidmod / debugmon. KASLR not yet supported.,Also if you can please provide any information regarding the linux syscall trapping working mechanism..,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,226,2016-12-15T20:34:13Z,2016-12-15T21:33:40Z,2016-12-19T16:50:10Z,MERGED,True,1403,241,23,https://github.com/tklengyel,Linux support,2,[],https://github.com/tklengyel/drakvuf/pull/226,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/226#issuecomment-267778799,Adding scaffolding to support Linux. Plugin support is only syscalls / cpuidmod / debugmon. KASLR not yet supported.,It works exactly the same way as it works for Windows. You specify the rekall profile and the domain and it will start monitoring syscalls.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,226,2016-12-15T20:34:13Z,2016-12-15T21:33:40Z,2016-12-19T16:50:10Z,MERGED,True,1403,241,23,https://github.com/tklengyel,Linux support,2,[],https://github.com/tklengyel/drakvuf/pull/226,https://github.com/Preetixen,5,https://github.com/tklengyel/drakvuf/pull/226#issuecomment-267803949,Adding scaffolding to support Linux. Plugin support is only syscalls / cpuidmod / debugmon. KASLR not yet supported.,Okie Thanks for reply.. I think for ubuntu we have system.map file which provides the logical addresses for all kernel functions to be trapped...so can't we use it for addresses instead of rekall profile.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,226,2016-12-15T20:34:13Z,2016-12-15T21:33:40Z,2016-12-19T16:50:10Z,MERGED,True,1403,241,23,https://github.com/tklengyel,Linux support,2,[],https://github.com/tklengyel/drakvuf/pull/226,https://github.com/Preetixen,6,https://github.com/tklengyel/drakvuf/pull/226#issuecomment-267804135,Adding scaffolding to support Linux. Plugin support is only syscalls / cpuidmod / debugmon. KASLR not yet supported.,"ALso, In windows drakvuf provides the support of tracing of windows 7 syscalls....In linux which particular distro is supports..?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,226,2016-12-15T20:34:13Z,2016-12-15T21:33:40Z,2016-12-19T16:50:10Z,MERGED,True,1403,241,23,https://github.com/tklengyel,Linux support,2,[],https://github.com/tklengyel/drakvuf/pull/226,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/226#issuecomment-267805639,Adding scaffolding to support Linux. Plugin support is only syscalls / cpuidmod / debugmon. KASLR not yet supported.,"The rekall profile includes the values from the system.map as well.
…
On Dec 17, 2016 22:14, ""Preetixen"" ***@***.***> wrote:
 Okie Thanks for reply.. I think for ubuntu we have system.map file which
 provides the logical addresses for all kernel functions to be trapped...so
 can't we use it for addresses instead of rekall profile.

 —
 You are receiving this because you modified the open/close state.
 Reply to this email directly, view it on GitHub
 <#226 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/ADBp3a-0k7RVqR2uf0aFV8PgaBxIPIEoks5rJMEZgaJpZM4LOikY>
 .",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,226,2016-12-15T20:34:13Z,2016-12-15T21:33:40Z,2016-12-19T16:50:10Z,MERGED,True,1403,241,23,https://github.com/tklengyel,Linux support,2,[],https://github.com/tklengyel/drakvuf/pull/226,https://github.com/Preetixen,8,https://github.com/tklengyel/drakvuf/pull/226#issuecomment-267806310,Adding scaffolding to support Linux. Plugin support is only syscalls / cpuidmod / debugmon. KASLR not yet supported.,"FOr windows, FS and GS register are used which points to _KPCR structure...nd some RVA and vCPU registers are used...something like that given in your paper...
How does it actually happen in Linux. Can you please exaplain....that address calculation part..so that you would have been able to insert break points at those kernel addresses.
Secondly, does darkvuf applicable to all windows versions and all linux versions for syscall tracing?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,226,2016-12-15T20:34:13Z,2016-12-15T21:33:40Z,2016-12-19T16:50:10Z,MERGED,True,1403,241,23,https://github.com/tklengyel,Linux support,2,[],https://github.com/tklengyel/drakvuf/pull/226,https://github.com/Preetixen,9,https://github.com/tklengyel/drakvuf/pull/226#issuecomment-267809237,Adding scaffolding to support Linux. Plugin support is only syscalls / cpuidmod / debugmon. KASLR not yet supported.,"I have a few set of questions. Please take time to answer them. I will be very thankful to you:
For windows,

LibVMI win guid tool is used to create the PDB file with associated GUID information
Rekall uses plugin to create the rekall profile by supplying the step 1 information and creates JSON format.

Question 1 : What is the case in Linux?.  As we can not create PDB file..there will be a different file like DWARF file, which tool is used for this and how all commands will look like now??
Question 2: What is this JSON file. If it contains all kernel symbols and logical addresses? How DRAKVUF is retrieving the physical addresses for windows and linux?
Question 3: Can DRAKVUF be used for all versions of windows and Linux
Question 4: Please explain this part : FS and GS register are used which points to _KPCR structure...nd some RVA and vCPU registers are used...something like that given in your paper...
Does this address calculation is used by DRAKVUF by reading the JSON file for windows?
How to calculate addresses for linux using JSON file.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,226,2016-12-15T20:34:13Z,2016-12-15T21:33:40Z,2016-12-19T16:50:10Z,MERGED,True,1403,241,23,https://github.com/tklengyel,Linux support,2,[],https://github.com/tklengyel/drakvuf/pull/226,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/226#issuecomment-267838704,Adding scaffolding to support Linux. Plugin support is only syscalls / cpuidmod / debugmon. KASLR not yet supported.,"See instructions on drakvuf.com or ask about Rekall internals on Rekall mailinglist/github page.
The Rekall profile is a collection if data about the kernel, constant symbols, structures and their layouts. The rest of the questions don't really make sense.
While some plugins would work for any operating systems (cpuid/debugmon), currently only Windows 7 is supported. Linux system call tracing will work for all versions, although you need KASLR disabled for now.
Yes, the offsets to calculate where the KPCR is in comparison to the Windows kernel base address is gathered from the Rekall profile. What address do you want to calculate on Linux?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,226,2016-12-15T20:34:13Z,2016-12-15T21:33:40Z,2016-12-19T16:50:10Z,MERGED,True,1403,241,23,https://github.com/tklengyel,Linux support,2,[],https://github.com/tklengyel/drakvuf/pull/226,https://github.com/Preetixen,11,https://github.com/tklengyel/drakvuf/pull/226#issuecomment-267880537,Adding scaffolding to support Linux. Plugin support is only syscalls / cpuidmod / debugmon. KASLR not yet supported.,"Thanks for reply..Sorry If i asked something weird..I am just in learning phase..
Clarfying question 4:
Symbol table (rekall profiles) which tells about the symbol name and their virtual addresses...
DRAKVUF is using the rekall profiles for knowing the address locations of kernels in memory.

How it is retrieving the actual physical addresses of kernel symbols in memory.

I got the following information from stack flow for same question:
To find out where these symbols are loaded in the main memory, subtract PAGE_OFFSET from the symbol address to get the offset and add this offset to the starting physical address of the kernel in the physical memory as determined from the system memory map.
1.1  My question is for Windows you have mentioned:  how you are calculating the offsets using the rekall profile. Are you using a  fixed Windows kernel base address value which you will be adding with the offset calculated for each kernel symbol.
1.2  For linux, how to calculate the page offsets. How to do we know the value of PAGE_OFFSET and starting base address of kernel. Are these values fixed?
Thanks",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,226,2016-12-15T20:34:13Z,2016-12-15T21:33:40Z,2016-12-19T16:50:10Z,MERGED,True,1403,241,23,https://github.com/tklengyel,Linux support,2,[],https://github.com/tklengyel/drakvuf/pull/226,https://github.com/tklengyel,12,https://github.com/tklengyel/drakvuf/pull/226#issuecomment-268015254,Adding scaffolding to support Linux. Plugin support is only syscalls / cpuidmod / debugmon. KASLR not yet supported.,"You just translate the virtual address to the physical address. For WIndows you can't use a fixed start address as it has KASLR, that's why you use the KPCR's RVA to find the virtual address first.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,227,2016-12-15T21:34:04Z,2016-12-15T22:18:40Z,2016-12-15T22:18:42Z,MERGED,True,5,0,1,https://github.com/tklengyel,Only update LibVMI submodule during travis build,1,[],https://github.com/tklengyel/drakvuf/pull/227,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/227,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,228,2016-12-19T17:46:26Z,2016-12-20T21:26:32Z,2016-12-20T21:26:34Z,MERGED,True,208,72,9,https://github.com/tklengyel,Support KASLR enabled Linux,1,[],https://github.com/tklengyel/drakvuf/pull/228,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/228,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,228,2016-12-19T17:46:26Z,2016-12-20T21:26:32Z,2016-12-20T21:26:34Z,MERGED,True,208,72,9,https://github.com/tklengyel,Support KASLR enabled Linux,1,[],https://github.com/tklengyel/drakvuf/pull/228,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/228#issuecomment-268352881,,Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,229,2016-12-20T16:43:04Z,2016-12-20T21:43:23Z,2016-12-20T21:43:23Z,MERGED,True,1,0,1,https://github.com/nescio007,Include config.h from syscalls.cpp,1,[],https://github.com/tklengyel/drakvuf/pull/229,https://github.com/nescio007,1,https://github.com/tklengyel/drakvuf/pull/229,"This will ensure that macros such as PRIu32 etc. will be defined correctly, as config.h will define __STDC_FORMAT_MACROS if necessary","This will ensure that macros such as PRIu32 etc. will be defined correctly, as config.h will define __STDC_FORMAT_MACROS if necessary",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,229,2016-12-20T16:43:04Z,2016-12-20T21:43:23Z,2016-12-20T21:43:23Z,MERGED,True,1,0,1,https://github.com/nescio007,Include config.h from syscalls.cpp,1,[],https://github.com/tklengyel/drakvuf/pull/229,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/229#issuecomment-268304055,"This will ensure that macros such as PRIu32 etc. will be defined correctly, as config.h will define __STDC_FORMAT_MACROS if necessary",So syscalls.h already includes plugins.h which includes config.h so I don't think this is necessary. Have you encountered a situation where the macros were not working?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,229,2016-12-20T16:43:04Z,2016-12-20T21:43:23Z,2016-12-20T21:43:23Z,MERGED,True,1,0,1,https://github.com/nescio007,Include config.h from syscalls.cpp,1,[],https://github.com/tklengyel/drakvuf/pull/229,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/229#issuecomment-268304064,"This will ensure that macros such as PRIu32 etc. will be defined correctly, as config.h will define __STDC_FORMAT_MACROS if necessary",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,229,2016-12-20T16:43:04Z,2016-12-20T21:43:23Z,2016-12-20T21:43:23Z,MERGED,True,1,0,1,https://github.com/nescio007,Include config.h from syscalls.cpp,1,[],https://github.com/tklengyel/drakvuf/pull/229,https://github.com/nescio007,4,https://github.com/tklengyel/drakvuf/pull/229#issuecomment-268305897,"This will ensure that macros such as PRIu32 etc. will be defined correctly, as config.h will define __STDC_FORMAT_MACROS if necessary","Hi, thanks for the quick reply.
Yes, when compiling on CentOS 7 using clang version 3.4.2 I encountered this error.
syscalls.h includes plugins.h, however, syscalls.cpp includes <inttypes.h> itself before including syscalls.h, and at this point, __STDC_FORMAT_MACROS will not be defined.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,229,2016-12-20T16:43:04Z,2016-12-20T21:43:23Z,2016-12-20T21:43:23Z,MERGED,True,1,0,1,https://github.com/nescio007,Include config.h from syscalls.cpp,1,[],https://github.com/tklengyel/drakvuf/pull/229,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/229#issuecomment-268306442,"This will ensure that macros such as PRIu32 etc. will be defined correctly, as config.h will define __STDC_FORMAT_MACROS if necessary","Ah I see. In that case this is something that could potentially reoccur at other plugins too, so would you mind changing this PR and adding config.h and inttypes.h to plugins/private.h?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,229,2016-12-20T16:43:04Z,2016-12-20T21:43:23Z,2016-12-20T21:43:23Z,MERGED,True,1,0,1,https://github.com/nescio007,Include config.h from syscalls.cpp,1,[],https://github.com/tklengyel/drakvuf/pull/229,https://github.com/nescio007,6,https://github.com/tklengyel/drakvuf/pull/229#issuecomment-268309033,"This will ensure that macros such as PRIu32 etc. will be defined correctly, as config.h will define __STDC_FORMAT_MACROS if necessary","This would require all plugins to include their corresponding header first, right?
As of now, most plugins (cpuidmon, debugmon, filetracer, objmon, poolmon, ssdtmon)  use the following include-order:

#include <config.h>
system includes (#include <...>)
local includes (#include ""..."")

Which option do you prefer?

Enforce that <config.h> is the first include for all plugins
Make <config.h> the first include of plugins/private.h, and enforce that this is the first include of all plugin-headerfiles, and that these plugin-headerfiles are the first include for all plugin-source files?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,229,2016-12-20T16:43:04Z,2016-12-20T21:43:23Z,2016-12-20T21:43:23Z,MERGED,True,1,0,1,https://github.com/nescio007,Include config.h from syscalls.cpp,1,[],https://github.com/tklengyel/drakvuf/pull/229,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/229#issuecomment-268310889,"This will ensure that macros such as PRIu32 etc. will be defined correctly, as config.h will define __STDC_FORMAT_MACROS if necessary","Good question. The include ordering has been pretty ad-hoc thus far so there is no hard-set rule about it. Including config.h before other headers in the plugins themselves is something that is bound to be forgotten so where this type of ordering matters should be moved to a common header (ie. private.h). So I would say we should have all plugins include private.h before including any other headers, and move these includes there to avoid this issue reoccurring. It would be pretty clear for plugins too to start with private.h and less likely to be overlooked in the future.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,229,2016-12-20T16:43:04Z,2016-12-20T21:43:23Z,2016-12-20T21:43:23Z,MERGED,True,1,0,1,https://github.com/nescio007,Include config.h from syscalls.cpp,1,[],https://github.com/tklengyel/drakvuf/pull/229,https://github.com/nescio007,8,https://github.com/tklengyel/drakvuf/pull/229#issuecomment-268315763,"This will ensure that macros such as PRIu32 etc. will be defined correctly, as config.h will define __STDC_FORMAT_MACROS if necessary","Ordering within the plugin still matters. To work correctly, config.h has to be the first include, directly or indirectly.
Also, do you think plugins/private.h is the correct place for this to go? plugins/plugins.h already includes config.h and is already included by every plugin, though not as the first include. To make matters worse, theoretically, config.h should be included in all source-files. Using the indirect include via plugins/plugins.h would require plugin-authors to include their header-file in all their source-files, as the first include.
Imho, I'd rather enforce setting <config.h> as the first include for all source-files, but at the end of the day, it's your code-base ;)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,229,2016-12-20T16:43:04Z,2016-12-20T21:43:23Z,2016-12-20T21:43:23Z,MERGED,True,1,0,1,https://github.com/nescio007,Include config.h from syscalls.cpp,1,[],https://github.com/tklengyel/drakvuf/pull/229,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/229#issuecomment-268331821,"This will ensure that macros such as PRIu32 etc. will be defined correctly, as config.h will define __STDC_FORMAT_MACROS if necessary","Yea, I guess we can do that too, I don't have a strong preference either way. ;)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,230,2016-12-20T16:49:55Z,2016-12-20T17:27:36Z,2016-12-20T17:27:43Z,MERGED,True,1,1,1,https://github.com/nescio007,Initialize gotlock in dirwatch.c,1,[],https://github.com/tklengyel/drakvuf/pull/230,https://github.com/nescio007,1,https://github.com/tklengyel/drakvuf/pull/230,gotlock might be undefined when reaching line 215 otherwise,gotlock might be undefined when reaching line 215 otherwise,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,230,2016-12-20T16:49:55Z,2016-12-20T17:27:36Z,2016-12-20T17:27:43Z,MERGED,True,1,1,1,https://github.com/nescio007,Initialize gotlock in dirwatch.c,1,[],https://github.com/tklengyel/drakvuf/pull/230,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/230#issuecomment-268304351,gotlock might be undefined when reaching line 215 otherwise,"This looks good, thanks!",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,235,2017-01-04T22:13:34Z,2017-01-04T22:29:36Z,2017-01-04T22:29:39Z,MERGED,True,3,3,1,https://github.com/tklengyel,Initialize variables in filedelete plugin,1,[],https://github.com/tklengyel/drakvuf/pull/235,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/235,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,236,2017-01-04T23:48:45Z,2017-01-05T00:22:45Z,2017-01-05T00:22:48Z,MERGED,True,1,1,1,https://github.com/tklengyel,Update LibVMI,1,[],https://github.com/tklengyel/drakvuf/pull/236,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/236,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,237,2017-01-08T05:55:51Z,2017-01-08T23:18:11Z,2017-01-08T23:18:13Z,MERGED,True,888,188,37,https://github.com/tklengyel,Print Linux process names and UIDs,1,[],https://github.com/tklengyel/drakvuf/pull/237,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/237,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,239,2017-01-16T18:15:32Z,2017-01-16T18:23:02Z,2017-01-16T18:23:04Z,MERGED,True,13,5,2,https://github.com/tklengyel,Check returns at more places,1,[],https://github.com/tklengyel/drakvuf/pull/239,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/239,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,242,2017-02-14T23:14:06Z,2017-02-15T04:15:18Z,2017-02-15T04:15:20Z,MERGED,True,1595,64,15,https://github.com/tklengyel,Socketmon plugin,1,[],https://github.com/tklengyel/drakvuf/pull/242,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/242,"Monitor TCP and UDP sockets on Windows using the pool allocations.
[SOCKETMON] VCPU:1 CR3:0x1f3ae000,svchost.exe SessionID:0 Owner:svchost.exe SessionID:0 UDPv4 192.168.2.173:68
[SOCKETMON] VCPU:0 CR3:0x46a01000,iexplore.exe SessionID:1 Owner:iexplore.exe SessionID:1 UDPv4 127.0.0.1:57464
[SOCKETMON] VCPU:1 CR3:0x48499000,iexplore.exe SessionID:1 Owner:iexplore.exe SessionID:1 UDPv4 127.0.0.1:57465
[SOCKETMON] VCPU:1 CR3:0x187000,Idle SessionID:-1 Owner:iexplore.exe SessionID:1 TCPv4 State:established Local:192.168.2.173:49158 Remote:13.107.21.200:80
[SOCKETMON] VCPU:0 CR3:0x187000,Idle SessionID:-1 Owner:iexplore.exe SessionID:1 TCPv4 State:established Local:192.168.2.173:49160 Remote:204.79.197.203:80
[SOCKETMON] VCPU:1 CR3:0x21f66000,csrss.exe SessionID:1 Owner:iexplore.exe SessionID:1 TCPv4 State:established Local:192.168.2.173:49161 Remote:23.61.194.184:80
[SOCKETMON] VCPU:1 CR3:0x46a01000,iexplore.exe SessionID:1 Owner:iexplore.exe SessionID:1 TCPv4 State:closed Local:192.168.2.173:49161 Remote:23.61.194.184:80
[SOCKETMON] VCPU:1 CR3:0x46a01000,iexplore.exe SessionID:1 Owner:iexplore.exe SessionID:1 TCPv4 State:established Local:192.168.2.173:49162 Remote:23.61.194.184:80
[SOCKETMON] VCPU:1 CR3:0x187000,Idle SessionID:-1 Owner:iexplore.exe SessionID:1 TCPv4 State:established Local:192.168.2.173:49163 Remote:23.61.194.218:80
[SOCKETMON] VCPU:0 CR3:0x187000,Idle SessionID:-1 Owner:iexplore.exe SessionID:1 TCPv4 State:established Local:192.168.2.173:49164 Remote:23.61.194.218:80
[SOCKETMON] VCPU:1 CR3:0x187000,Idle SessionID:-1 Owner:iexplore.exe SessionID:1 TCPv4 State:established Local:192.168.2.173:49165 Remote:23.61.194.218:80
[SOCKETMON] VCPU:1 CR3:0x187000,Idle SessionID:-1 Owner:iexplore.exe SessionID:1 TCPv4 State:established Local:192.168.2.173:49166 Remote:23.61.194.184:80
[SOCKETMON] VCPU:0 CR3:0x46a01000,iexplore.exe SessionID:1 Owner:iexplore.exe SessionID:1 TCPv4 State:closed Local:192.168.2.173:49163 Remote:23.61.194.218:80
[SOCKETMON] VCPU:0 CR3:0x46a01000,iexplore.exe SessionID:1 Owner:iexplore.exe SessionID:1 TCPv4 State:closed Local:192.168.2.173:49160 Remote:204.79.197.203:80
[SOCKETMON] VCPU:0 CR3:0x46a01000,iexplore.exe SessionID:1 Owner:iexplore.exe SessionID:1 TCPv4 State:closed Local:192.168.2.173:49162 Remote:23.61.194.184:80
[SOCKETMON] VCPU:0 CR3:0x46a01000,iexplore.exe SessionID:1 Owner:iexplore.exe SessionID:1 TCPv4 State:closed Local:192.168.2.173:49164 Remote:23.61.194.218:80
[SOCKETMON] VCPU:0 CR3:0x46a01000,iexplore.exe SessionID:1 Owner:iexplore.exe SessionID:1 TCPv4 State:closed Local:192.168.2.173:49165 Remote:23.61.194.218:80
[SOCKETMON] VCPU:1 CR3:0x48499000,iexplore.exe SessionID:1 Owner:iexplore.exe SessionID:1 TCPv4 State:closed Local:192.168.2.173:49158 Remote:13.107.21.200:80
[SOCKETMON] VCPU:1 CR3:0x48499000,iexplore.exe SessionID:1 Owner:iexplore.exe SessionID:1 TCPv4 State:closed Local:192.168.2.173:49166 Remote:23.61.194.184:80","Monitor TCP and UDP sockets on Windows using the pool allocations.
[SOCKETMON] VCPU:1 CR3:0x1f3ae000,svchost.exe SessionID:0 Owner:svchost.exe SessionID:0 UDPv4 192.168.2.173:68
[SOCKETMON] VCPU:0 CR3:0x46a01000,iexplore.exe SessionID:1 Owner:iexplore.exe SessionID:1 UDPv4 127.0.0.1:57464
[SOCKETMON] VCPU:1 CR3:0x48499000,iexplore.exe SessionID:1 Owner:iexplore.exe SessionID:1 UDPv4 127.0.0.1:57465
[SOCKETMON] VCPU:1 CR3:0x187000,Idle SessionID:-1 Owner:iexplore.exe SessionID:1 TCPv4 State:established Local:192.168.2.173:49158 Remote:13.107.21.200:80
[SOCKETMON] VCPU:0 CR3:0x187000,Idle SessionID:-1 Owner:iexplore.exe SessionID:1 TCPv4 State:established Local:192.168.2.173:49160 Remote:204.79.197.203:80
[SOCKETMON] VCPU:1 CR3:0x21f66000,csrss.exe SessionID:1 Owner:iexplore.exe SessionID:1 TCPv4 State:established Local:192.168.2.173:49161 Remote:23.61.194.184:80
[SOCKETMON] VCPU:1 CR3:0x46a01000,iexplore.exe SessionID:1 Owner:iexplore.exe SessionID:1 TCPv4 State:closed Local:192.168.2.173:49161 Remote:23.61.194.184:80
[SOCKETMON] VCPU:1 CR3:0x46a01000,iexplore.exe SessionID:1 Owner:iexplore.exe SessionID:1 TCPv4 State:established Local:192.168.2.173:49162 Remote:23.61.194.184:80
[SOCKETMON] VCPU:1 CR3:0x187000,Idle SessionID:-1 Owner:iexplore.exe SessionID:1 TCPv4 State:established Local:192.168.2.173:49163 Remote:23.61.194.218:80
[SOCKETMON] VCPU:0 CR3:0x187000,Idle SessionID:-1 Owner:iexplore.exe SessionID:1 TCPv4 State:established Local:192.168.2.173:49164 Remote:23.61.194.218:80
[SOCKETMON] VCPU:1 CR3:0x187000,Idle SessionID:-1 Owner:iexplore.exe SessionID:1 TCPv4 State:established Local:192.168.2.173:49165 Remote:23.61.194.218:80
[SOCKETMON] VCPU:1 CR3:0x187000,Idle SessionID:-1 Owner:iexplore.exe SessionID:1 TCPv4 State:established Local:192.168.2.173:49166 Remote:23.61.194.184:80
[SOCKETMON] VCPU:0 CR3:0x46a01000,iexplore.exe SessionID:1 Owner:iexplore.exe SessionID:1 TCPv4 State:closed Local:192.168.2.173:49163 Remote:23.61.194.218:80
[SOCKETMON] VCPU:0 CR3:0x46a01000,iexplore.exe SessionID:1 Owner:iexplore.exe SessionID:1 TCPv4 State:closed Local:192.168.2.173:49160 Remote:204.79.197.203:80
[SOCKETMON] VCPU:0 CR3:0x46a01000,iexplore.exe SessionID:1 Owner:iexplore.exe SessionID:1 TCPv4 State:closed Local:192.168.2.173:49162 Remote:23.61.194.184:80
[SOCKETMON] VCPU:0 CR3:0x46a01000,iexplore.exe SessionID:1 Owner:iexplore.exe SessionID:1 TCPv4 State:closed Local:192.168.2.173:49164 Remote:23.61.194.218:80
[SOCKETMON] VCPU:0 CR3:0x46a01000,iexplore.exe SessionID:1 Owner:iexplore.exe SessionID:1 TCPv4 State:closed Local:192.168.2.173:49165 Remote:23.61.194.218:80
[SOCKETMON] VCPU:1 CR3:0x48499000,iexplore.exe SessionID:1 Owner:iexplore.exe SessionID:1 TCPv4 State:closed Local:192.168.2.173:49158 Remote:13.107.21.200:80
[SOCKETMON] VCPU:1 CR3:0x48499000,iexplore.exe SessionID:1 Owner:iexplore.exe SessionID:1 TCPv4 State:closed Local:192.168.2.173:49166 Remote:23.61.194.184:80",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,243,2017-02-15T17:45:50Z,2017-02-15T21:15:10Z,2017-02-15T21:15:12Z,MERGED,True,50,88,2,https://github.com/tklengyel,Use response method to set vCPU regs in injector,1,[],https://github.com/tklengyel/drakvuf/pull/243,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/243,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,245,2017-02-20T04:00:08Z,2017-02-20T21:11:35Z,2017-02-20T21:11:37Z,MERGED,True,1,1,1,https://github.com/tklengyel,Adjust command line usage instruction,1,[],https://github.com/tklengyel/drakvuf/pull/245,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/245,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,246,2017-02-22T01:10:51Z,2017-02-22T02:12:59Z,2017-02-22T02:13:02Z,MERGED,True,19,5,1,https://github.com/tklengyel,Ensure threadid match on injection return path,1,[],https://github.com/tklengyel/drakvuf/pull/246,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/246,Should fix all remaining issues resulting crashes (#158),Should fix all remaining issues resulting crashes (#158),True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,247,2017-02-24T20:52:46Z,2017-02-24T21:28:11Z,2017-02-24T21:28:14Z,MERGED,True,95,9,3,https://github.com/tklengyel,Add option to wait for process name before starting plugins,1,[],https://github.com/tklengyel/drakvuf/pull/247,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/247,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,248,2017-02-24T23:13:02Z,2017-02-24T23:46:52Z,2017-02-24T23:46:54Z,MERGED,True,43,17,3,https://github.com/tklengyel,Coverity fixes,1,[],https://github.com/tklengyel/drakvuf/pull/248,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/248,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,249,2017-02-27T21:45:13Z,2017-02-28T00:08:38Z,2017-02-28T00:08:41Z,MERGED,True,70,418,16,https://github.com/tklengyel,libdrakvuf cleanup and sanitization,1,[],https://github.com/tklengyel/drakvuf/pull/249,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/249,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,250,2017-02-28T01:27:24Z,2017-02-28T01:57:25Z,2017-02-28T01:57:27Z,MERGED,True,29,19,10,https://github.com/tklengyel,libdrakvuf: wire up missing get_process_pid,1,[],https://github.com/tklengyel/drakvuf/pull/250,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/250,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,251,2017-03-02T19:44:36Z,2017-03-10T19:51:56Z,2017-03-10T19:51:56Z,MERGED,True,3592,523,4,https://github.com/davidjsiu,syscall argument extraction - win32,23,[],https://github.com/tklengyel/drakvuf/pull/251,https://github.com/davidjsiu,1,https://github.com/tklengyel/drakvuf/pull/251,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,251,2017-03-02T19:44:36Z,2017-03-10T19:51:56Z,2017-03-10T19:51:56Z,MERGED,True,3592,523,4,https://github.com/davidjsiu,syscall argument extraction - win32,23,[],https://github.com/tklengyel/drakvuf/pull/251,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/251#issuecomment-283762084,,"Thanks for contributing this work! Travis reports the following build error:
syscalls/syscalls.cpp:148:18: error: comparison of integers of different signs:
      'int' and 'unsigned int' [-Werror,-Wsign-compare]
        for(i=0;i<nargs;i++) {",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,251,2017-03-02T19:44:36Z,2017-03-10T19:51:56Z,2017-03-10T19:51:56Z,MERGED,True,3592,523,4,https://github.com/davidjsiu,syscall argument extraction - win32,23,[],https://github.com/tklengyel/drakvuf/pull/251,https://github.com/davidjsiu,3,https://github.com/tklengyel/drakvuf/pull/251#issuecomment-283835293,,"made requested changes, code for win 64 is untested.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,251,2017-03-02T19:44:36Z,2017-03-10T19:51:56Z,2017-03-10T19:51:56Z,MERGED,True,3592,523,4,https://github.com/davidjsiu,syscall argument extraction - win32,23,[],https://github.com/tklengyel/drakvuf/pull/251,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/251#issuecomment-285213384,,This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,251,2017-03-02T19:44:36Z,2017-03-10T19:51:56Z,2017-03-10T19:51:56Z,MERGED,True,3592,523,4,https://github.com/davidjsiu,syscall argument extraction - win32,23,[],https://github.com/tklengyel/drakvuf/pull/251,https://github.com/drakvuf-jenkins,5,https://github.com/tklengyel/drakvuf/pull/251#issuecomment-285214103,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,251,2017-03-02T19:44:36Z,2017-03-10T19:51:56Z,2017-03-10T19:51:56Z,MERGED,True,3592,523,4,https://github.com/davidjsiu,syscall argument extraction - win32,23,[],https://github.com/tklengyel/drakvuf/pull/251,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/251#issuecomment-285223673,,"Running on 64-bit Windows produces a segfault. Not quite sure why though..
[SYSCALL] vCPU:1 CR3:0x1cab1000,svchost.exe SessionID:0 ntoskrnl.exe!NtReleaseWorkerFactoryWorker,Arguments:1
	WorkerFactoryHandle:0x00007FFFF636F690
*** Error in `/var/lib/jenkins/jobs/DRAKVUF/workspace/src/drakvuf': free(): invalid next size (fast): 0x00005555558284e0 ***

Program received signal SIGABRT, Aborted.
0x00007ffff5fff067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56
56	../nptl/sysdeps/unix/sysv/linux/raise.c: No such file or directory.
(gdb) bt
#0  0x00007ffff5fff067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56
#1  0x00007ffff6000448 in __GI_abort () at abort.c:89
#2  0x00007ffff603d1b4 in __libc_message (do_abort=do_abort@entry=1, fmt=fmt@entry=0x7ffff6132210 ""*** Error in `%s': %s: 0x%s ***\n"")
    at ../sysdeps/posix/libc_fatal.c:175
#3  0x00007ffff604298e in malloc_printerr (action=1, str=0x7ffff61323d0 ""free(): invalid next size (fast)"", ptr=<optimized out>) at malloc.c:4996
#4  0x00007ffff6043696 in _int_free (av=<optimized out>, p=<optimized out>, have_lock=0) at malloc.c:3840
#5  0x00005555555a152e in win_cb (drakvuf=0x5555558120b0, info=<optimized out>) at syscalls/syscalls.cpp:220
#6  0x000055555559a9c2 in int3_cb (vmi=0x555555814c00, event=0x5555558121e8) at vmi.c:472
#7  0x00007ffff70cfff5 in process_interrupt_event (intr=<optimized out>, rsp=<optimized out>, req=<optimized out>, vmi=<optimized out>)
    at driver/xen/xen_events_48.c:313
#8  process_requests (vmi=0x46ba, vmi@entry=0x555555814c00, req=0x46ba, req@entry=0x7fffffffe140, rsp=0x6, rsp@entry=0x7fffffffe280)
    at driver/xen/xen_events_48.c:795
#9  0x00007ffff70d196e in xen_events_listen_48 (vmi=0x555555814c00, timeout=<optimized out>) at driver/xen/xen_events_48.c:1257
#10 0x000055555559c94a in drakvuf_loop (drakvuf=0x5555558120b0) at vmi.c:1070
#11 0x00005555555972af in drakvuf_c::loop (this=0x555555812040) at drakvuf.cpp:226
#12 0x0000555555596e27 in main (argc=<optimized out>, argv=<optimized out>) at main.cpp:279",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,251,2017-03-02T19:44:36Z,2017-03-10T19:51:56Z,2017-03-10T19:51:56Z,MERGED,True,3592,523,4,https://github.com/davidjsiu,syscall argument extraction - win32,23,[],https://github.com/tklengyel/drakvuf/pull/251,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/251#issuecomment-285224056,,"Also, before the segfault, the handle value seems to be incorrect too.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,251,2017-03-02T19:44:36Z,2017-03-10T19:51:56Z,2017-03-10T19:51:56Z,MERGED,True,3592,523,4,https://github.com/davidjsiu,syscall argument extraction - win32,23,[],https://github.com/tklengyel/drakvuf/pull/251,https://github.com/davidjsiu,8,https://github.com/tklengyel/drakvuf/pull/251#issuecomment-285227317,,"Yeah, I didn’t have a 64 bit system to test with.  If were to guess it is probably this code that causes the segfault:

            buf[0] = info->regs->rcx;
            buf[s->reg_size] = info->regs->rdx;
            buf[s->reg_size*2] = info->regs->r8;
            buf[s->reg_size*3] = info->regs->r9;

I can write a function that copies the uint64 to the character buffer.

From: Tamas K Lengyel [mailto:notifications@github.com]
Sent: Wednesday, March 8, 2017 3:16 PM
To: tklengyel/drakvuf <drakvuf@noreply.github.com>
Cc: David Siu <dsiu@OCEANIT.COM>; State change <state_change@noreply.github.com>
Subject: Re: [tklengyel/drakvuf] syscall argument extraction - win32 (#251)


Running on 64-bit Windows produces a segfault. Not quite sure why though..

[SYSCALL] vCPU:1 CR3:0x1cab1000,svchost.exe SessionID:0 ntoskrnl.exe!NtReleaseWorkerFactoryWorker,Arguments:1

        WorkerFactoryHandle:0x00007FFFF636F690

*** Error in `/var/lib/jenkins/jobs/DRAKVUF/workspace/src/drakvuf': free(): invalid next size (fast): 0x00005555558284e0 ***



Program received signal SIGABRT, Aborted.

0x00007ffff5fff067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56

56      ../nptl/sysdeps/unix/sysv/linux/raise.c: No such file or directory.

(gdb) bt

#0  0x00007ffff5fff067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56

#1  0x00007ffff6000448 in __GI_abort () at abort.c:89

#2  0x00007ffff603d1b4 in __libc_message (do_abort=do_abort@entry=1, fmt=fmt@entry=0x7ffff6132210 ""*** Error in `%s': %s: 0x%s ***\n"")

    at ../sysdeps/posix/libc_fatal.c:175

#3  0x00007ffff604298e in malloc_printerr (action=1, str=0x7ffff61323d0 ""free(): invalid next size (fast)"", ptr=<optimized out>) at malloc.c:4996

#4  0x00007ffff6043696 in _int_free (av=<optimized out>, p=<optimized out>, have_lock=0) at malloc.c:3840

#5  0x00005555555a152e in win_cb (drakvuf=0x5555558120b0, info=<optimized out>) at syscalls/syscalls.cpp:220

#6  0x000055555559a9c2 in int3_cb (vmi=0x555555814c00, event=0x5555558121e8) at vmi.c:472

#7  0x00007ffff70cfff5 in process_interrupt_event (intr=<optimized out>, rsp=<optimized out>, req=<optimized out>, vmi=<optimized out>)

    at driver/xen/xen_events_48.c:313

#8  process_requests (vmi=0x46ba, vmi@entry=0x555555814c00, req=0x46ba, req@entry=0x7fffffffe140, rsp=0x6, rsp@entry=0x7fffffffe280)

    at driver/xen/xen_events_48.c:795

#9  0x00007ffff70d196e in xen_events_listen_48 (vmi=0x555555814c00, timeout=<optimized out>) at driver/xen/xen_events_48.c:1257

#10 0x000055555559c94a in drakvuf_loop (drakvuf=0x5555558120b0) at vmi.c:1070

#11 0x00005555555972af in drakvuf_c::loop (this=0x555555812040) at drakvuf.cpp:226

#12 0x0000555555596e27 in main (argc=<optimized out>, argv=<optimized out>) at main.cpp:279

—
You are receiving this because you modified the open/close state.
Reply to this email directly, view it on GitHub<#251 (comment)>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AF7eUo2mHBTTaklwr5s0vJMX_riW6GBeks5rj1LegaJpZM4MRcEg>.
{""api_version"":""1.0"",""publisher"":{""api_key"":""05dde50f1d1a384dd78767c55493e4bb"",""name"":""GitHub""},""entity"":{""external_key"":""github/tklengyel/drakvuf"",""title"":""tklengyel/drakvuf"",""subtitle"":""GitHub repository"",""main_image_url"":""https://cloud.githubusercontent.com/assets/143418/17495839/a5054eac-5d88-11e6-95fc-7290892c7bb5.png"",""avatar_image_url"":""https://cloud.githubusercontent.com/assets/143418/15842166/7c72db34-2c0b-11e6-9aed-b52498112777.png"",""action"":{""name"":""Open in GitHub"",""url"":""https://github.com/tklengyel/drakvuf""}},""updates"":{""snippets"":[{""icon"":""PERSON"",""message"":""@tklengyel in #251: Running on 64-bit Windows produces a segfault. Not quite sure why though..\r\n```\r\n[SYSCALL] vCPU:1 CR3:0x1cab1000,svchost.exe SessionID:0 ntoskrnl.exe!NtReleaseWorkerFactoryWorker,Arguments:1\r\n\tWorkerFactoryHandle:0x00007FFFF636F690\r\n*** Error in `/var/lib/jenkins/jobs/DRAKVUF/workspace/src/drakvuf': free(): invalid next size (fast): 0x00005555558284e0 ***\r\n\r\nProgram received signal SIGABRT, Aborted.\r\n0x00007ffff5fff067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56\r\n56\t../nptl/sysdeps/unix/sysv/linux/raise.c: No such file or directory.\r\n(gdb) bt\r\n#0 0x00007ffff5fff067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56\r\n#1 0x00007ffff6000448 in __GI_abort () at abort.c:89\r\n#2 0x00007ffff603d1b4 in __libc_message (do_abort=do_abort@entry=1, fmt=fmt@entry=0x7ffff6132210 \""*** Error in `%s': %s: 0x%s ***\\n\"")\r\n at ../sysdeps/posix/libc_fatal.c:175\r\n#3 0x00007ffff604298e in malloc_printerr (action=1, str=0x7ffff61323d0 \""free(): invalid next size (fast)\"", ptr=\u003coptimized out\u003e) at malloc.c:4996\r\n#4 0x00007ffff6043696 in _int_free (av=\u003coptimized out\u003e, p=\u003coptimized out\u003e, have_lock=0) at malloc.c:3840\r\n#5 0x00005555555a152e in win_cb (drakvuf=0x5555558120b0, info=\u003coptimized out\u003e) at syscalls/syscalls.cpp:220\r\n#6 0x000055555559a9c2 in int3_cb (vmi=0x555555814c00, event=0x5555558121e8) at vmi.c:472\r\n#7 0x00007ffff70cfff5 in process_interrupt_event (intr=\u003coptimized out\u003e, rsp=\u003coptimized out\u003e, req=\u003coptimized out\u003e, vmi=\u003coptimized out\u003e)\r\n at driver/xen/xen_events_48.c:313\r\n#8 process_requests (vmi=0x46ba, vmi@entry=0x555555814c00, req=0x46ba, req@entry=0x7fffffffe140, rsp=0x6, rsp@entry=0x7fffffffe280)\r\n at driver/xen/xen_events_48.c:795\r\n#9 0x00007ffff70d196e in xen_events_listen_48 (vmi=0x555555814c00, timeout=\u003coptimized out\u003e) at driver/xen/xen_events_48.c:1257\r\n#10 0x000055555559c94a in drakvuf_loop (drakvuf=0x5555558120b0) at vmi.c:1070\r\n#11 0x00005555555972af in drakvuf_c::loop (this=0x555555812040) at drakvuf.cpp:226\r\n#12 0x0000555555596e27 in main (argc=\u003coptimized out\u003e, argv=\u003coptimized out\u003e) at main.cpp:279""}],""action"":{""name"":""View Pull Request"",""url"":""#251 (comment)""}}}",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,251,2017-03-02T19:44:36Z,2017-03-10T19:51:56Z,2017-03-10T19:51:56Z,MERGED,True,3592,523,4,https://github.com/davidjsiu,syscall argument extraction - win32,23,[],https://github.com/tklengyel/drakvuf/pull/251,https://github.com/davidjsiu,9,https://github.com/tklengyel/drakvuf/pull/251#issuecomment-285229768,,"Yep.  Also need to add checks to make sure we aren’t writing over the buffer (this is probably what caused the segfault): i.e. if num args = 2, we should read and write r8 and r9…

From: Tamas K Lengyel [mailto:notifications@github.com]
Sent: Wednesday, March 8, 2017 3:31 PM
To: tklengyel/drakvuf <drakvuf@noreply.github.com>
Cc: David Siu <dsiu@OCEANIT.COM>; State change <state_change@noreply.github.com>
Subject: Re: [tklengyel/drakvuf] syscall argument extraction - win32 (#251)


@tklengyel commented on this pull request.
________________________________

In src/plugins/syscalls/syscalls.cpp<#251 (comment)>:
 +        unsigned long size = s->reg_size * nargs;
+        buf = (unsigned char *)g_malloc(sizeof(char)*size);

+

+        if(s->reg_size==4){ // 32 bit os

+

+            ctx.addr = info->regs->rsp + s->reg_size;  // jump over base pointer

+

+            // multiply num args by 4 for 32 bit systems to get the number of bytes we need

+            // to read from the stack.  assumes standard calling convention (cdecl) for the

+            // visual studio compile.

+            if((size_t)size != vmi_read(vmi, &ctx, buf, size)){

+                goto exit;

+            }

+        }

+        else { // 64 bit os - ************** UNTESTED *******************!

+            buf[0] = info->regs->rcx;

...but it might be better to simplify this whole part buy allocating nargs*sizeof(addr_t) to begin with and then we wouldn't have to do so much casting and weird loops and whatnot.

—
You are receiving this because you modified the open/close state.
Reply to this email directly, view it on GitHub<#251 (comment)>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AF7eUhQJxFNrhOkELTWzl6L9X81h_teuks5rj1ZXgaJpZM4MRcEg>.
{""api_version"":""1.0"",""publisher"":{""api_key"":""05dde50f1d1a384dd78767c55493e4bb"",""name"":""GitHub""},""entity"":{""external_key"":""github/tklengyel/drakvuf"",""title"":""tklengyel/drakvuf"",""subtitle"":""GitHub repository"",""main_image_url"":""https://cloud.githubusercontent.com/assets/143418/17495839/a5054eac-5d88-11e6-95fc-7290892c7bb5.png"",""avatar_image_url"":""https://cloud.githubusercontent.com/assets/143418/15842166/7c72db34-2c0b-11e6-9aed-b52498112777.png"",""action"":{""name"":""Open in GitHub"",""url"":""https://github.com/tklengyel/drakvuf""}},""updates"":{""snippets"":[{""icon"":""PERSON"",""message"":""@tklengyel commented on #251""}],""action"":{""name"":""View Pull Request"",""url"":""#251 (comment)""}}}",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,251,2017-03-02T19:44:36Z,2017-03-10T19:51:56Z,2017-03-10T19:51:56Z,MERGED,True,3592,523,4,https://github.com/davidjsiu,syscall argument extraction - win32,23,[],https://github.com/tklengyel/drakvuf/pull/251,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/251#issuecomment-285522821,,Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,251,2017-03-02T19:44:36Z,2017-03-10T19:51:56Z,2017-03-10T19:51:56Z,MERGED,True,3592,523,4,https://github.com/davidjsiu,syscall argument extraction - win32,23,[],https://github.com/tklengyel/drakvuf/pull/251,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/251#issuecomment-285529183,,Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,251,2017-03-02T19:44:36Z,2017-03-10T19:51:56Z,2017-03-10T19:51:56Z,MERGED,True,3592,523,4,https://github.com/davidjsiu,syscall argument extraction - win32,23,[],https://github.com/tklengyel/drakvuf/pull/251,https://github.com/tklengyel,12,https://github.com/tklengyel/drakvuf/pull/251#issuecomment-285538145,,This now passes the PR gate so it is getting close. Let me know if you want to keep tweaking the PR or if you rather just have it merged. Thanks!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,251,2017-03-02T19:44:36Z,2017-03-10T19:51:56Z,2017-03-10T19:51:56Z,MERGED,True,3592,523,4,https://github.com/davidjsiu,syscall argument extraction - win32,23,[],https://github.com/tklengyel/drakvuf/pull/251,https://github.com/tklengyel,13,https://github.com/tklengyel/drakvuf/pull/251#issuecomment-285579636,,Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,251,2017-03-02T19:44:36Z,2017-03-10T19:51:56Z,2017-03-10T19:51:56Z,MERGED,True,3592,523,4,https://github.com/davidjsiu,syscall argument extraction - win32,23,[],https://github.com/tklengyel/drakvuf/pull/251,https://github.com/tklengyel,14,https://github.com/tklengyel/drakvuf/pull/251#issuecomment-285767801,,This looks good now. Thanks again for working on it!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,252,2017-03-10T20:31:03Z,2017-03-10T22:42:31Z,2017-03-10T22:42:33Z,MERGED,True,2257,2244,2,https://github.com/tklengyel,Cosmetic cleanup of syscalls plugin,1,[],https://github.com/tklengyel/drakvuf/pull/252,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/252,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,252,2017-03-10T20:31:03Z,2017-03-10T22:42:31Z,2017-03-10T22:42:33Z,MERGED,True,2257,2244,2,https://github.com/tklengyel,Cosmetic cleanup of syscalls plugin,1,[],https://github.com/tklengyel/drakvuf/pull/252,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/252#issuecomment-285798951,,Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,255,2017-03-30T18:51:47Z,2017-04-24T23:26:03Z,2017-04-24T23:26:03Z,CLOSED,False,0,0,0,https://github.com/davidjsiu,print return value in syscall plugin,0,[],https://github.com/tklengyel/drakvuf/pull/255,https://github.com/davidjsiu,1,https://github.com/tklengyel/drakvuf/pull/255,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,255,2017-03-30T18:51:47Z,2017-04-24T23:26:03Z,2017-04-24T23:26:03Z,CLOSED,False,0,0,0,https://github.com/davidjsiu,print return value in syscall plugin,0,[],https://github.com/tklengyel/drakvuf/pull/255,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/255#issuecomment-296291579,,What's the status on this PR?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,255,2017-03-30T18:51:47Z,2017-04-24T23:26:03Z,2017-04-24T23:26:03Z,CLOSED,False,0,0,0,https://github.com/davidjsiu,print return value in syscall plugin,0,[],https://github.com/tklengyel/drakvuf/pull/255,https://github.com/davidjsiu,3,https://github.com/tklengyel/drakvuf/pull/255#issuecomment-296326900,,"This is tested and it works.  I used this code to obtain the return values of user space calls (which I can also upload if you think it is useful)…

From: Tamas K Lengyel [mailto:notifications@github.com]
Sent: Friday, April 21, 2017 9:56 AM
To: tklengyel/drakvuf <drakvuf@noreply.github.com>
Cc: David Siu <dsiu@OCEANIT.COM>; Author <author@noreply.github.com>
Subject: Re: [tklengyel/drakvuf] print return value in syscall plugin (#255)


What's the status on this PR?

—
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub<#255 (comment)>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AF7eUlSn1oIlhBldPlDV-jdPLvmpAi79ks5ryQntgaJpZM4Muxfc>.
{""api_version"":""1.0"",""publisher"":{""api_key"":""05dde50f1d1a384dd78767c55493e4bb"",""name"":""GitHub""},""entity"":{""external_key"":""github/tklengyel/drakvuf"",""title"":""tklengyel/drakvuf"",""subtitle"":""GitHub repository"",""main_image_url"":""https://cloud.githubusercontent.com/assets/143418/17495839/a5054eac-5d88-11e6-95fc-7290892c7bb5.png"",""avatar_image_url"":""https://cloud.githubusercontent.com/assets/143418/15842166/7c72db34-2c0b-11e6-9aed-b52498112777.png"",""action"":{""name"":""Open in GitHub"",""url"":""https://github.com/tklengyel/drakvuf""}},""updates"":{""snippets"":[{""icon"":""PERSON"",""message"":""@tklengyel in #255: What's the status on this PR?""}],""action"":{""name"":""View Pull Request"",""url"":""#255 (comment)""}}}",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,255,2017-03-30T18:51:47Z,2017-04-24T23:26:03Z,2017-04-24T23:26:03Z,CLOSED,False,0,0,0,https://github.com/davidjsiu,print return value in syscall plugin,0,[],https://github.com/tklengyel/drakvuf/pull/255,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/255#issuecomment-296414740,,"Cool, it needs to be rebased though on the latest master as there are conflicts:
Conflicting files
src/plugins/syscalls/syscalls.cpp
src/plugins/syscalls/syscalls.h
src/plugins/syscalls/winscproto.h",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,257,2017-04-04T19:01:19Z,2017-04-05T23:29:07Z,2017-04-05T23:29:09Z,MERGED,True,37,37,11,https://github.com/tklengyel,Update LibVMI,2,[],https://github.com/tklengyel/drakvuf/pull/257,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/257,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,258,2017-04-06T01:22:11Z,2017-04-06T01:40:59Z,2017-04-06T01:41:05Z,MERGED,True,167,53,4,https://github.com/tklengyel,Implement file-extraction in C,1,[],https://github.com/tklengyel/drakvuf/pull/258,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/258,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,259,2017-04-11T18:10:21Z,2017-04-11T19:07:35Z,2017-04-11T19:07:37Z,MERGED,True,2,2,2,https://github.com/tklengyel,Update Xen and LibVMI,1,[],https://github.com/tklengyel/drakvuf/pull/259,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/259,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,259,2017-04-11T18:10:21Z,2017-04-11T19:07:35Z,2017-04-11T19:07:37Z,MERGED,True,2,2,2,https://github.com/tklengyel,Update Xen and LibVMI,1,[],https://github.com/tklengyel/drakvuf/pull/259,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/259#issuecomment-293361648,,Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,260,2017-04-12T00:06:52Z,2017-04-12T00:56:27Z,2017-04-12T00:56:29Z,MERGED,True,1,11,1,https://github.com/tklengyel,Libinjector: PIDs above 5000 are fine,1,[],https://github.com/tklengyel/drakvuf/pull/260,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/260,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,260,2017-04-12T00:06:52Z,2017-04-12T00:56:27Z,2017-04-12T00:56:29Z,MERGED,True,1,11,1,https://github.com/tklengyel,Libinjector: PIDs above 5000 are fine,1,[],https://github.com/tklengyel/drakvuf/pull/260,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/260#issuecomment-293441199,,Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,261,2017-04-24T23:29:35Z,2018-08-01T16:57:55Z,2018-08-01T16:57:55Z,CLOSED,False,66,5,3,https://github.com/davidjsiu,rebase for return value,3,[],https://github.com/tklengyel/drakvuf/pull/261,https://github.com/davidjsiu,1,https://github.com/tklengyel/drakvuf/pull/261,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,261,2017-04-24T23:29:35Z,2018-08-01T16:57:55Z,2018-08-01T16:57:55Z,CLOSED,False,66,5,3,https://github.com/davidjsiu,rebase for return value,3,[],https://github.com/tklengyel/drakvuf/pull/261,https://github.com/davidjsiu,2,https://github.com/tklengyel/drakvuf/pull/261#issuecomment-296859862,,"So are you saying that the return address breakpoint should be set every time the syscall is entered?

From: Tamas K Lengyel [mailto:notifications@github.com]
Sent: Monday, April 24, 2017 2:23 PM
To: tklengyel/drakvuf <drakvuf@noreply.github.com>
Cc: David Siu <dsiu@OCEANIT.COM>; Author <author@noreply.github.com>
Subject: Re: [tklengyel/drakvuf] rebase for return value (#261)


@tklengyel commented on this pull request.
________________________________

In src/plugins/syscalls/syscalls.cpp<#261 (comment)>:
 @@ -194,6 +199,38 @@ static event_response_t win_cb(drakvuf_t drakvuf, drakvuf_trap_info_t *info) {
}

     }



+    if(!wrapper->ret_trap_set && wsc->ret != VOID){

You assume the return address for the syscall will always be the same as when it was first called. I don't think that's an assumption that will hold in all cases.

—
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub<#261 (review)>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AF7eUlJHiEfn7zZXRjV4QEzFMEldLHAKks5rzTz3gaJpZM4NG1NI>.
{""api_version"":""1.0"",""publisher"":{""api_key"":""05dde50f1d1a384dd78767c55493e4bb"",""name"":""GitHub""},""entity"":{""external_key"":""github/tklengyel/drakvuf"",""title"":""tklengyel/drakvuf"",""subtitle"":""GitHub repository"",""main_image_url"":""https://cloud.githubusercontent.com/assets/143418/17495839/a5054eac-5d88-11e6-95fc-7290892c7bb5.png"",""avatar_image_url"":""https://cloud.githubusercontent.com/assets/143418/15842166/7c72db34-2c0b-11e6-9aed-b52498112777.png"",""action"":{""name"":""Open in GitHub"",""url"":""https://github.com/tklengyel/drakvuf""}},""updates"":{""snippets"":[{""icon"":""PERSON"",""message"":""@tklengyel commented on #261""}],""action"":{""name"":""View Pull Request"",""url"":""#261 (review)""}}}",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,261,2017-04-24T23:29:35Z,2018-08-01T16:57:55Z,2018-08-01T16:57:55Z,CLOSED,False,66,5,3,https://github.com/davidjsiu,rebase for return value,3,[],https://github.com/tklengyel/drakvuf/pull/261,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/261#issuecomment-297015928,,Ideally you would check whether the return address is already trapped by a syscall ret trap and only add a new one when it is not.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,261,2017-04-24T23:29:35Z,2018-08-01T16:57:55Z,2018-08-01T16:57:55Z,CLOSED,False,66,5,3,https://github.com/davidjsiu,rebase for return value,3,[],https://github.com/tklengyel/drakvuf/pull/261,https://github.com/davidjsiu,4,https://github.com/tklengyel/drakvuf/pull/261#issuecomment-297110245,,"That is already handled by the ret_trap_set flag in the wrapper:


if(!wrapper->ret_trap_set && wsc->ret != VOID){


From: Tamas K Lengyel [mailto:notifications@github.com]
Sent: Tuesday, April 25, 2017 2:35 AM
To: tklengyel/drakvuf <drakvuf@noreply.github.com>
Cc: David Siu <dsiu@OCEANIT.COM>; Author <author@noreply.github.com>
Subject: Re: [tklengyel/drakvuf] rebase for return value (#261)


Ideally you would check whether the return address is already trapped by a syscall ret trap and only add a new one when it is not.

—
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub<#261 (comment)>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AF7eUnTCJqWCCJ6C5IKfHBvhG716mfwzks5rzeiHgaJpZM4NG1NI>.
{""api_version"":""1.0"",""publisher"":{""api_key"":""05dde50f1d1a384dd78767c55493e4bb"",""name"":""GitHub""},""entity"":{""external_key"":""github/tklengyel/drakvuf"",""title"":""tklengyel/drakvuf"",""subtitle"":""GitHub repository"",""main_image_url"":""https://cloud.githubusercontent.com/assets/143418/17495839/a5054eac-5d88-11e6-95fc-7290892c7bb5.png"",""avatar_image_url"":""https://cloud.githubusercontent.com/assets/143418/15842166/7c72db34-2c0b-11e6-9aed-b52498112777.png"",""action"":{""name"":""Open in GitHub"",""url"":""https://github.com/tklengyel/drakvuf""}},""updates"":{""snippets"":[{""icon"":""PERSON"",""message"":""@tklengyel in #261: Ideally you would check whether the return address is already trapped by a syscall ret trap and only add a new one when it is not.""}],""action"":{""name"":""View Pull Request"",""url"":""#261 (comment)""}}}",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,261,2017-04-24T23:29:35Z,2018-08-01T16:57:55Z,2018-08-01T16:57:55Z,CLOSED,False,66,5,3,https://github.com/davidjsiu,rebase for return value,3,[],https://github.com/tklengyel/drakvuf/pull/261,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/261#issuecomment-298274889,,This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,261,2017-04-24T23:29:35Z,2018-08-01T16:57:55Z,2018-08-01T16:57:55Z,CLOSED,False,66,5,3,https://github.com/davidjsiu,rebase for return value,3,[],https://github.com/tklengyel/drakvuf/pull/261,https://github.com/davidjsiu,6,https://github.com/tklengyel/drakvuf/pull/261#issuecomment-298294586,,"That assumes that a system call is never interrupted and always allowed to finish.  Will this always be true?
________________________________
From: Tamas K Lengyel <notifications@github.com>
Sent: Sunday, April 30, 2017 4:25 PM
To: tklengyel/drakvuf
Cc: David Siu; Author
Subject: Re: [tklengyel/drakvuf] rebase for return value (#261)


@tklengyel commented on this pull request.
________________________________

In src/plugins/syscalls/syscalls.cpp<#261 (comment)>:
 @@ -130,9 +130,36 @@ static event_response_t linux_cb(drakvuf_t drakvuf, drakvuf_trap_info_t *info) {
return 0;
 }

+static event_response_t win_ret_cb(drakvuf_t drakvuf, drakvuf_trap_info_t *info) {


I think it would make sense to only print output in this callback so that everything would get printed in one block.

—
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub<#261 (review)>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AF7eUl40mqSdp-wy3iSgmatd0pSvq2pKks5r1UKagaJpZM4NG1NI>.

{""api_version"":""1.0"",""publisher"":{""api_key"":""05dde50f1d1a384dd78767c55493e4bb"",""name"":""GitHub""},""entity"":{""external_key"":""github/tklengyel/drakvuf"",""title"":""tklengyel/drakvuf"",""subtitle"":""GitHub repository"",""main_image_url"":""https://cloud.githubusercontent.com/assets/143418/17495839/a5054eac-5d88-11e6-95fc-7290892c7bb5.png"",""avatar_image_url"":""https://cloud.githubusercontent.com/assets/143418/15842166/7c72db34-2c0b-11e6-9aed-b52498112777.png"",""action"":{""name"":""Open in GitHub"",""url"":""https://github.com/tklengyel/drakvuf""}},""updates"":{""snippets"":[{""icon"":""PERSON"",""message"":""@tklengyel commented on #261""}],""action"":{""name"":""View Pull Request"",""url"":""#261 (review)""}}}",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,261,2017-04-24T23:29:35Z,2018-08-01T16:57:55Z,2018-08-01T16:57:55Z,CLOSED,False,66,5,3,https://github.com/davidjsiu,rebase for return value,3,[],https://github.com/tklengyel/drakvuf/pull/261,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/261#issuecomment-298353013,,"Yes, I think assuming a syscall will eventually finish is safe to assume.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,261,2017-04-24T23:29:35Z,2018-08-01T16:57:55Z,2018-08-01T16:57:55Z,CLOSED,False,66,5,3,https://github.com/davidjsiu,rebase for return value,3,[],https://github.com/tklengyel/drakvuf/pull/261,https://github.com/davidjsiu,8,https://github.com/tklengyel/drakvuf/pull/261#issuecomment-298391130,,"Yes, I know the function will finish.  My question is whether or not another function will be called before the current executing function will finish.  Is the execution of system calls atomic?  Non-interruptable?

From: Tamas K Lengyel [mailto:notifications@github.com]
Sent: Monday, May 1, 2017 5:20 AM
To: tklengyel/drakvuf <drakvuf@noreply.github.com>
Cc: David Siu <dsiu@OCEANIT.COM>; Author <author@noreply.github.com>
Subject: Re: [tklengyel/drakvuf] rebase for return value (#261)


Yes, I think assuming a syscall will eventually finish is safe to assume.

—
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub<#261 (comment)>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AF7eUgFq3PbU7nUXUSncLQbq5Mrc8rOUks5r1fg0gaJpZM4NG1NI>.
{""api_version"":""1.0"",""publisher"":{""api_key"":""05dde50f1d1a384dd78767c55493e4bb"",""name"":""GitHub""},""entity"":{""external_key"":""github/tklengyel/drakvuf"",""title"":""tklengyel/drakvuf"",""subtitle"":""GitHub repository"",""main_image_url"":""https://cloud.githubusercontent.com/assets/143418/17495839/a5054eac-5d88-11e6-95fc-7290892c7bb5.png"",""avatar_image_url"":""https://cloud.githubusercontent.com/assets/143418/15842166/7c72db34-2c0b-11e6-9aed-b52498112777.png"",""action"":{""name"":""Open in GitHub"",""url"":""https://github.com/tklengyel/drakvuf""}},""updates"":{""snippets"":[{""icon"":""PERSON"",""message"":""@tklengyel in #261: Yes, I think assuming a syscall will eventually finish is safe to assume.""}],""action"":{""name"":""View Pull Request"",""url"":""#261 (comment)""}}}",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,261,2017-04-24T23:29:35Z,2018-08-01T16:57:55Z,2018-08-01T16:57:55Z,CLOSED,False,66,5,3,https://github.com/davidjsiu,rebase for return value,3,[],https://github.com/tklengyel/drakvuf/pull/261,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/261#issuecomment-298392966,,I'm fairly sure it is interruptable. But that's not a problem.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,261,2017-04-24T23:29:35Z,2018-08-01T16:57:55Z,2018-08-01T16:57:55Z,CLOSED,False,66,5,3,https://github.com/davidjsiu,rebase for return value,3,[],https://github.com/tklengyel/drakvuf/pull/261,https://github.com/davidjsiu,10,https://github.com/tklengyel/drakvuf/pull/261#issuecomment-298394763,,"If it is interruptable, then you will at least need to print out the name of the system call with the return value – just in case…

From: Tamas K Lengyel [mailto:notifications@github.com]
Sent: Monday, May 1, 2017 8:19 AM
To: tklengyel/drakvuf <drakvuf@noreply.github.com>
Cc: David Siu <dsiu@OCEANIT.COM>; Author <author@noreply.github.com>
Subject: Re: [tklengyel/drakvuf] rebase for return value (#261)


I'm fairly sure it is interruptable. But that's not a problem.

—
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub<#261 (comment)>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AF7eUi6pPweebOXSadnlJiuXcDMg5nz2ks5r1iIpgaJpZM4NG1NI>.
{""api_version"":""1.0"",""publisher"":{""api_key"":""05dde50f1d1a384dd78767c55493e4bb"",""name"":""GitHub""},""entity"":{""external_key"":""github/tklengyel/drakvuf"",""title"":""tklengyel/drakvuf"",""subtitle"":""GitHub repository"",""main_image_url"":""https://cloud.githubusercontent.com/assets/143418/17495839/a5054eac-5d88-11e6-95fc-7290892c7bb5.png"",""avatar_image_url"":""https://cloud.githubusercontent.com/assets/143418/15842166/7c72db34-2c0b-11e6-9aed-b52498112777.png"",""action"":{""name"":""Open in GitHub"",""url"":""https://github.com/tklengyel/drakvuf""}},""updates"":{""snippets"":[{""icon"":""PERSON"",""message"":""@tklengyel in #261: I'm fairly sure it is interruptable. But that's not a problem.""}],""action"":{""name"":""View Pull Request"",""url"":""#261 (comment)""}}}",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,261,2017-04-24T23:29:35Z,2018-08-01T16:57:55Z,2018-08-01T16:57:55Z,CLOSED,False,66,5,3,https://github.com/davidjsiu,rebase for return value,3,[],https://github.com/tklengyel/drakvuf/pull/261,https://github.com/davidjsiu,11,https://github.com/tklengyel/drakvuf/pull/261#issuecomment-298415682,,"This makes sense.  However, the way the code is set up now, if the ret_trap_set flag is not set, a new trap will be created.  This will result in a memory leak.  What is the best way to handle this?

Create all return traps for every syscall during initialization but leave the breakpoint.addr null? The return breakpoint.addr could then be set during the regular syscall callback and cleared in the return callback.

From: Tamas K Lengyel [mailto:notifications@github.com]
Sent: Sunday, April 30, 2017 4:17 PM
To: tklengyel/drakvuf <drakvuf@noreply.github.com>
Cc: David Siu <dsiu@OCEANIT.COM>; Author <author@noreply.github.com>
Subject: Re: [tklengyel/drakvuf] rebase for return value (#261)


@tklengyel commented on this pull request.
________________________________

In src/plugins/syscalls/syscalls.cpp<#261 (comment)>:
 @@ -194,6 +199,38 @@ static event_response_t win_cb(drakvuf_t drakvuf, drakvuf_trap_info_t *info) {
}

     }



+    if(!wrapper->ret_trap_set && wsc->ret != VOID){

This is still problematic. Ideally we would create a new trap for each return which then would get released in their callback. That would ensure that the correct return address is trapped for each syscall.

—
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub<#261 (comment)>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AF7eUrgHZMdUX7HqSpTbkkrNSFCbCK1Uks5r1UCHgaJpZM4NG1NI>.
{""api_version"":""1.0"",""publisher"":{""api_key"":""05dde50f1d1a384dd78767c55493e4bb"",""name"":""GitHub""},""entity"":{""external_key"":""github/tklengyel/drakvuf"",""title"":""tklengyel/drakvuf"",""subtitle"":""GitHub repository"",""main_image_url"":""https://cloud.githubusercontent.com/assets/143418/17495839/a5054eac-5d88-11e6-95fc-7290892c7bb5.png"",""avatar_image_url"":""https://cloud.githubusercontent.com/assets/143418/15842166/7c72db34-2c0b-11e6-9aed-b52498112777.png"",""action"":{""name"":""Open in GitHub"",""url"":""https://github.com/tklengyel/drakvuf""}},""updates"":{""snippets"":[{""icon"":""PERSON"",""message"":""@tklengyel commented on #261""}],""action"":{""name"":""View Pull Request"",""url"":""#261 (comment)""}}}",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,261,2017-04-24T23:29:35Z,2018-08-01T16:57:55Z,2018-08-01T16:57:55Z,CLOSED,False,66,5,3,https://github.com/davidjsiu,rebase for return value,3,[],https://github.com/tklengyel/drakvuf/pull/261,https://github.com/tklengyel,12,https://github.com/tklengyel/drakvuf/pull/261#issuecomment-311485237,,Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,261,2017-04-24T23:29:35Z,2018-08-01T16:57:55Z,2018-08-01T16:57:55Z,CLOSED,False,66,5,3,https://github.com/davidjsiu,rebase for return value,3,[],https://github.com/tklengyel/drakvuf/pull/261,https://github.com/tklengyel,13,https://github.com/tklengyel/drakvuf/pull/261#issuecomment-409646023,,I'm closing this PR for now but opened an issue to track the enhancement idea #442,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,263,2017-05-10T21:53:19Z,2017-05-10T22:20:59Z,2017-05-10T22:21:01Z,MERGED,True,1,1,1,https://github.com/tklengyel,Object monitor fix,1,[],https://github.com/tklengyel/drakvuf/pull/263,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/263,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,264,2017-05-12T21:09:09Z,2017-05-13T05:32:25Z,2017-05-13T05:32:27Z,MERGED,True,29,179,3,https://github.com/tklengyel,Use OBJECT_TYPE.Key in objmon instead of hard-coded type list,1,[],https://github.com/tklengyel/drakvuf/pull/264,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/264,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,270,2017-06-16T21:06:59Z,2017-06-17T14:01:52Z,2017-07-20T20:11:33Z,MERGED,True,119,187,2,https://github.com/tklengyel,Use syscalls for filetracing,1,[],https://github.com/tklengyel/drakvuf/pull/270,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/270,Fixes #265,Fixes #265,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,271,2017-06-17T19:16:21Z,2017-06-18T01:49:01Z,2017-06-18T01:49:03Z,MERGED,True,89,103,8,https://github.com/tklengyel,Implement handle lookup for Win8-Win10,1,[],https://github.com/tklengyel/drakvuf/pull/271,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/271,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,272,2017-06-17T19:37:37Z,2017-06-17T20:14:12Z,2017-06-17T20:14:14Z,MERGED,True,13,1,2,https://github.com/tklengyel,Fix objmon type print on 32-bit Windows,1,[],https://github.com/tklengyel/drakvuf/pull/272,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/272,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,272,2017-06-17T19:37:37Z,2017-06-17T20:14:12Z,2017-06-17T20:14:14Z,MERGED,True,13,1,2,https://github.com/tklengyel,Fix objmon type print on 32-bit Windows,1,[],https://github.com/tklengyel/drakvuf/pull/272,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/272#issuecomment-309236877,,Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,272,2017-06-17T19:37:37Z,2017-06-17T20:14:12Z,2017-06-17T20:14:14Z,MERGED,True,13,1,2,https://github.com/tklengyel,Fix objmon type print on 32-bit Windows,1,[],https://github.com/tklengyel/drakvuf/pull/272,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/272#issuecomment-309237196,,Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,273,2017-06-18T12:21:03Z,2017-06-18T12:45:09Z,2017-07-20T20:11:31Z,MERGED,True,1,1,1,https://github.com/tklengyel,Return correct value when LibVMI init fails,1,[],https://github.com/tklengyel/drakvuf/pull/273,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/273,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,274,2017-06-18T12:45:20Z,2017-06-19T17:58:49Z,2017-06-19T17:58:52Z,MERGED,True,42,39,4,https://github.com/tklengyel,Properly get and set maxmem and gpfns,2,[],https://github.com/tklengyel/drakvuf/pull/274,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/274,Fixes #268,Fixes #268,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,274,2017-06-18T12:45:20Z,2017-06-19T17:58:49Z,2017-06-19T17:58:52Z,MERGED,True,42,39,4,https://github.com/tklengyel,Properly get and set maxmem and gpfns,2,[],https://github.com/tklengyel/drakvuf/pull/274,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/274#issuecomment-309278133,Fixes #268,Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,274,2017-06-18T12:45:20Z,2017-06-19T17:58:49Z,2017-06-19T17:58:52Z,MERGED,True,42,39,4,https://github.com/tklengyel,Properly get and set maxmem and gpfns,2,[],https://github.com/tklengyel/drakvuf/pull/274,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/274#issuecomment-309516399,Fixes #268,Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,275,2017-06-18T13:19:15Z,2017-06-18T13:26:09Z,2017-06-18T13:26:11Z,MERGED,True,1,1,1,https://github.com/tklengyel,Fix bogus debug error messages when getting struct member rva,1,[],https://github.com/tklengyel/drakvuf/pull/275,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/275,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,276,2017-06-27T20:34:10Z,2017-06-27T20:50:35Z,2017-06-27T20:50:38Z,MERGED,True,677,404,9,https://github.com/tklengyel,Rework socketmon plugin,2,[],https://github.com/tklengyel/drakvuf/pull/276,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/276,Use rekall profile for tcpip.sys and support up to Windows 10,Use rekall profile for tcpip.sys and support up to Windows 10,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,277,2017-06-28T15:50:59Z,2017-06-28T16:09:11Z,2017-06-28T16:09:17Z,MERGED,True,1,1,1,https://github.com/tklengyel,Move to Xen 4.9,1,[],https://github.com/tklengyel/drakvuf/pull/277,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/277,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,278,2017-06-28T19:25:06Z,2017-06-28T19:54:25Z,2017-06-28T19:54:28Z,MERGED,True,268,17,4,https://github.com/tklengyel,Print details of certain syscall arguments,1,[],https://github.com/tklengyel/drakvuf/pull/278,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/278,Automatically read out UNICODE_STRINGs and the filename for FileHandle inputs.,Automatically read out UNICODE_STRINGs and the filename for FileHandle inputs.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,279,2017-06-28T20:07:24Z,2017-06-28T20:34:27Z,2017-06-28T20:34:29Z,MERGED,True,30,138,6,https://github.com/tklengyel,Use LibVMI for unicode_string reading,1,[],https://github.com/tklengyel/drakvuf/pull/279,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/279,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,279,2017-06-28T20:07:24Z,2017-06-28T20:34:27Z,2017-06-28T20:34:29Z,MERGED,True,30,138,6,https://github.com/tklengyel,Use LibVMI for unicode_string reading,1,[],https://github.com/tklengyel/drakvuf/pull/279,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/279#issuecomment-311774780,,Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,280,2017-06-28T20:38:56Z,2017-06-28T20:39:34Z,2017-06-28T20:39:36Z,MERGED,True,16,7,1,https://github.com/tklengyel,Update README,1,[],https://github.com/tklengyel/drakvuf/pull/280,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/280,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,281,2017-06-28T20:51:55Z,2017-06-28T21:03:10Z,2017-06-28T21:03:12Z,MERGED,True,8,1,2,https://github.com/tklengyel,Update travis script,1,[],https://github.com/tklengyel/drakvuf/pull/281,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/281,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,282,2017-06-28T23:26:31Z,2017-06-28T23:38:18Z,2017-06-28T23:38:20Z,MERGED,True,24,13,6,https://github.com/tklengyel,Coverity fixes,1,[],https://github.com/tklengyel/drakvuf/pull/282,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/282,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,284,2017-07-18T02:56:27Z,2017-07-19T02:30:53Z,2017-07-19T02:30:55Z,MERGED,True,257,0,2,https://github.com/tklengyel,Add RPC server and test client code,1,[],https://github.com/tklengyel/drakvuf/pull/284,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/284,Simple XMLRPC server to receive files to be used with dirwatch and send results after processed.,Simple XMLRPC server to receive files to be used with dirwatch and send results after processed.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,285,2017-07-20T20:45:01Z,2017-07-20T20:51:35Z,2017-07-20T20:51:37Z,MERGED,True,387,77,3,https://github.com/tklengyel,Dirwatch tweaks,2,[],https://github.com/tklengyel/drakvuf/pull/285,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/285,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,297,2017-09-07T04:36:14Z,2017-09-08T17:54:08Z,2017-09-08T17:54:33Z,CLOSED,False,733,0,6,https://github.com/Preetixen,Netmon,2,[],https://github.com/tklengyel/drakvuf/pull/297,https://github.com/Preetixen,1,https://github.com/tklengyel/drakvuf/pull/297,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,297,2017-09-07T04:36:14Z,2017-09-08T17:54:08Z,2017-09-08T17:54:33Z,CLOSED,False,733,0,6,https://github.com/Preetixen,Netmon,2,[],https://github.com/tklengyel/drakvuf/pull/297,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/297#issuecomment-328171813,,This is an old branch that is superseded by the socketmon plugin.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,298,2017-09-07T07:13:00Z,2017-09-07T10:33:39Z,2017-09-07T10:33:39Z,MERGED,True,2,2,1,https://github.com/shlomopongartz,Change NtContinue args form DIR_OUT to DIR_IN,1,[],https://github.com/tklengyel/drakvuf/pull/298,https://github.com/shlomopongartz,1,https://github.com/tklengyel/drakvuf/pull/298,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,298,2017-09-07T07:13:00Z,2017-09-07T10:33:39Z,2017-09-07T10:33:39Z,MERGED,True,2,2,1,https://github.com/shlomopongartz,Change NtContinue args form DIR_OUT to DIR_IN,1,[],https://github.com/tklengyel/drakvuf/pull/298,https://github.com/shlomopongartz,2,https://github.com/tklengyel/drakvuf/pull/298#issuecomment-327709393,,Change NtContinue arguments form DIR_OUT to DIR_IN,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,303,2017-09-15T21:57:14Z,2017-09-15T22:07:24Z,2017-09-15T22:07:27Z,MERGED,True,5,5,1,https://github.com/tklengyel,socketmon: exit nicely if no Rekall profile present,1,[],https://github.com/tklengyel/drakvuf/pull/303,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/303,Fixes #300 #302,Fixes #300 #302,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,306,2017-09-26T16:42:32Z,2017-09-26T17:25:50Z,2017-09-27T06:09:16Z,MERGED,True,3,2,1,https://github.com/aoshiken,(Windows platform): Use case insensitive comparison for processes names...,2,[],https://github.com/tklengyel/drakvuf/pull/306,https://github.com/aoshiken,1,https://github.com/tklengyel/drakvuf/pull/306,"When looking for a process name we don't have guaranteed its name case so use strcasecmp instead of strcmp.


Currently the  code checks for null before freeing the memory for the process name (allocated by the vmi_read_str_va() call) only when the user is looking for process name and not when looking for pid.
I agree is high unlikely but IMHO could happen so I'd prefere to check before diving into that swimming pool.  :)","When looking for a process name we don't have guaranteed its name case so use strcasecmp instead of strcmp.


Currently the  code checks for null before freeing the memory for the process name (allocated by the vmi_read_str_va() call) only when the user is looking for process name and not when looking for pid.
I agree is high unlikely but IMHO could happen so I'd prefere to check before diving into that swimming pool.  :)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,310,2017-10-04T10:06:02Z,2017-10-05T17:38:29Z,2017-10-05T19:56:13Z,MERGED,True,653,1,11,https://github.com/aoshiken,Add new functions to the drakvuf API for resolving full path of windows registry keys,2,[],https://github.com/tklengyel/drakvuf/pull/310,https://github.com/aoshiken,1,https://github.com/tklengyel/drakvuf/pull/310,"The new functions are:

drakvuf_reg_keybody_path(): Returns path from CM_KEY_CONTROL_BLOCK pointer
drakvuf_reg_keycontrolblock_path(): Returns allocated registry key full path from key object
drakvuf_reg_keyhandle_path(): Returns an allocated registry key full path from key handle

Those functions are included in the new file src/libdrakvuf/win-registry.c
WARNING
I tested this code only on a Windows 7 SP1 x64 platform although the code probably works on x86 too.
USAGE
I'm assuming that the mainly used function will be drakvuf_reg_keyhandle_path() (although I myself currently use the other two from some hooks deep down in the kernel).
The following example shows its use from a trap callback for the syscall NtDeleteValueKey, you can also use the same callback body for the syscalls NtSetValueKey and NtDeleteKey because all of them have a KEY HANDLE as the 1st parameter (we don't care about the value name):
static event_response_t hook_deletevaluekey_cb( drakvuf_t drakvuf, drakvuf_trap_info_t *info )
{
    if ( info->regs->rcx )
    {
        vmi_instance_t vmi = drakvuf_lock_and_get_vmi( drakvuf );

        char *key_path = drakvuf_reg_keyhandle_path( drakvuf, info, info->regs->rcx, 0 );

        if ( key_path )
        {
            printf(""DELETEVALUEKEY: %s\n"", key_path );
            free( key_path );
        }

        drakvuf_release_vmi( drakvuf );
    }
    return 0 ;
}

And below you can see the DRAKVUF output (sorted and snipped) with that plugin enabled and starting an Internet Explorer and trigger some manual actions from regedit.exe:
DELETEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\ALFREDO1
DELETEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\5.0\LOWCACHE\EXTENSIBLE CACHE\MSHIST012017100420171005
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONEMAP
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\NEW KEY #4
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONEMAP
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONES
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\NEW KEY #4

Hope this helps,
Regards","The new functions are:

drakvuf_reg_keybody_path(): Returns path from CM_KEY_CONTROL_BLOCK pointer
drakvuf_reg_keycontrolblock_path(): Returns allocated registry key full path from key object
drakvuf_reg_keyhandle_path(): Returns an allocated registry key full path from key handle

Those functions are included in the new file src/libdrakvuf/win-registry.c
WARNING
I tested this code only on a Windows 7 SP1 x64 platform although the code probably works on x86 too.
USAGE
I'm assuming that the mainly used function will be drakvuf_reg_keyhandle_path() (although I myself currently use the other two from some hooks deep down in the kernel).
The following example shows its use from a trap callback for the syscall NtDeleteValueKey, you can also use the same callback body for the syscalls NtSetValueKey and NtDeleteKey because all of them have a KEY HANDLE as the 1st parameter (we don't care about the value name):
static event_response_t hook_deletevaluekey_cb( drakvuf_t drakvuf, drakvuf_trap_info_t *info )
{
    if ( info->regs->rcx )
    {
        vmi_instance_t vmi = drakvuf_lock_and_get_vmi( drakvuf );

        char *key_path = drakvuf_reg_keyhandle_path( drakvuf, info, info->regs->rcx, 0 );

        if ( key_path )
        {
            printf(""DELETEVALUEKEY: %s\n"", key_path );
            free( key_path );
        }

        drakvuf_release_vmi( drakvuf );
    }
    return 0 ;
}

And below you can see the DRAKVUF output (sorted and snipped) with that plugin enabled and starting an Internet Explorer and trigger some manual actions from regedit.exe:
DELETEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\ALFREDO1
DELETEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\5.0\LOWCACHE\EXTENSIBLE CACHE\MSHIST012017100420171005
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONEMAP
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\NEW KEY #4
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONEMAP
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONES
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\NEW KEY #4

Hope this helps,
Regards",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,310,2017-10-04T10:06:02Z,2017-10-05T17:38:29Z,2017-10-05T19:56:13Z,MERGED,True,653,1,11,https://github.com/aoshiken,Add new functions to the drakvuf API for resolving full path of windows registry keys,2,[],https://github.com/tklengyel/drakvuf/pull/310,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/310#issuecomment-334195232,"The new functions are:

drakvuf_reg_keybody_path(): Returns path from CM_KEY_CONTROL_BLOCK pointer
drakvuf_reg_keycontrolblock_path(): Returns allocated registry key full path from key object
drakvuf_reg_keyhandle_path(): Returns an allocated registry key full path from key handle

Those functions are included in the new file src/libdrakvuf/win-registry.c
WARNING
I tested this code only on a Windows 7 SP1 x64 platform although the code probably works on x86 too.
USAGE
I'm assuming that the mainly used function will be drakvuf_reg_keyhandle_path() (although I myself currently use the other two from some hooks deep down in the kernel).
The following example shows its use from a trap callback for the syscall NtDeleteValueKey, you can also use the same callback body for the syscalls NtSetValueKey and NtDeleteKey because all of them have a KEY HANDLE as the 1st parameter (we don't care about the value name):
static event_response_t hook_deletevaluekey_cb( drakvuf_t drakvuf, drakvuf_trap_info_t *info )
{
    if ( info->regs->rcx )
    {
        vmi_instance_t vmi = drakvuf_lock_and_get_vmi( drakvuf );

        char *key_path = drakvuf_reg_keyhandle_path( drakvuf, info, info->regs->rcx, 0 );

        if ( key_path )
        {
            printf(""DELETEVALUEKEY: %s\n"", key_path );
            free( key_path );
        }

        drakvuf_release_vmi( drakvuf );
    }
    return 0 ;
}

And below you can see the DRAKVUF output (sorted and snipped) with that plugin enabled and starting an Internet Explorer and trigger some manual actions from regedit.exe:
DELETEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\ALFREDO1
DELETEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\5.0\LOWCACHE\EXTENSIBLE CACHE\MSHIST012017100420171005
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONEMAP
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\NEW KEY #4
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONEMAP
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONES
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\NEW KEY #4

Hope this helps,
Regards","This is great, much appreciated!  =)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,310,2017-10-04T10:06:02Z,2017-10-05T17:38:29Z,2017-10-05T19:56:13Z,MERGED,True,653,1,11,https://github.com/aoshiken,Add new functions to the drakvuf API for resolving full path of windows registry keys,2,[],https://github.com/tklengyel/drakvuf/pull/310,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/310#issuecomment-334195240,"The new functions are:

drakvuf_reg_keybody_path(): Returns path from CM_KEY_CONTROL_BLOCK pointer
drakvuf_reg_keycontrolblock_path(): Returns allocated registry key full path from key object
drakvuf_reg_keyhandle_path(): Returns an allocated registry key full path from key handle

Those functions are included in the new file src/libdrakvuf/win-registry.c
WARNING
I tested this code only on a Windows 7 SP1 x64 platform although the code probably works on x86 too.
USAGE
I'm assuming that the mainly used function will be drakvuf_reg_keyhandle_path() (although I myself currently use the other two from some hooks deep down in the kernel).
The following example shows its use from a trap callback for the syscall NtDeleteValueKey, you can also use the same callback body for the syscalls NtSetValueKey and NtDeleteKey because all of them have a KEY HANDLE as the 1st parameter (we don't care about the value name):
static event_response_t hook_deletevaluekey_cb( drakvuf_t drakvuf, drakvuf_trap_info_t *info )
{
    if ( info->regs->rcx )
    {
        vmi_instance_t vmi = drakvuf_lock_and_get_vmi( drakvuf );

        char *key_path = drakvuf_reg_keyhandle_path( drakvuf, info, info->regs->rcx, 0 );

        if ( key_path )
        {
            printf(""DELETEVALUEKEY: %s\n"", key_path );
            free( key_path );
        }

        drakvuf_release_vmi( drakvuf );
    }
    return 0 ;
}

And below you can see the DRAKVUF output (sorted and snipped) with that plugin enabled and starting an Internet Explorer and trigger some manual actions from regedit.exe:
DELETEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\ALFREDO1
DELETEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\5.0\LOWCACHE\EXTENSIBLE CACHE\MSHIST012017100420171005
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONEMAP
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\NEW KEY #4
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONEMAP
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONES
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\NEW KEY #4

Hope this helps,
Regards",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,310,2017-10-04T10:06:02Z,2017-10-05T17:38:29Z,2017-10-05T19:56:13Z,MERGED,True,653,1,11,https://github.com/aoshiken,Add new functions to the drakvuf API for resolving full path of windows registry keys,2,[],https://github.com/tklengyel/drakvuf/pull/310,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/310#issuecomment-334197183,"The new functions are:

drakvuf_reg_keybody_path(): Returns path from CM_KEY_CONTROL_BLOCK pointer
drakvuf_reg_keycontrolblock_path(): Returns allocated registry key full path from key object
drakvuf_reg_keyhandle_path(): Returns an allocated registry key full path from key handle

Those functions are included in the new file src/libdrakvuf/win-registry.c
WARNING
I tested this code only on a Windows 7 SP1 x64 platform although the code probably works on x86 too.
USAGE
I'm assuming that the mainly used function will be drakvuf_reg_keyhandle_path() (although I myself currently use the other two from some hooks deep down in the kernel).
The following example shows its use from a trap callback for the syscall NtDeleteValueKey, you can also use the same callback body for the syscalls NtSetValueKey and NtDeleteKey because all of them have a KEY HANDLE as the 1st parameter (we don't care about the value name):
static event_response_t hook_deletevaluekey_cb( drakvuf_t drakvuf, drakvuf_trap_info_t *info )
{
    if ( info->regs->rcx )
    {
        vmi_instance_t vmi = drakvuf_lock_and_get_vmi( drakvuf );

        char *key_path = drakvuf_reg_keyhandle_path( drakvuf, info, info->regs->rcx, 0 );

        if ( key_path )
        {
            printf(""DELETEVALUEKEY: %s\n"", key_path );
            free( key_path );
        }

        drakvuf_release_vmi( drakvuf );
    }
    return 0 ;
}

And below you can see the DRAKVUF output (sorted and snipped) with that plugin enabled and starting an Internet Explorer and trigger some manual actions from regedit.exe:
DELETEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\ALFREDO1
DELETEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\5.0\LOWCACHE\EXTENSIBLE CACHE\MSHIST012017100420171005
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONEMAP
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\NEW KEY #4
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONEMAP
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONES
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\NEW KEY #4

Hope this helps,
Regards",This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,310,2017-10-04T10:06:02Z,2017-10-05T17:38:29Z,2017-10-05T19:56:13Z,MERGED,True,653,1,11,https://github.com/aoshiken,Add new functions to the drakvuf API for resolving full path of windows registry keys,2,[],https://github.com/tklengyel/drakvuf/pull/310,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/310#issuecomment-334207172,"The new functions are:

drakvuf_reg_keybody_path(): Returns path from CM_KEY_CONTROL_BLOCK pointer
drakvuf_reg_keycontrolblock_path(): Returns allocated registry key full path from key object
drakvuf_reg_keyhandle_path(): Returns an allocated registry key full path from key handle

Those functions are included in the new file src/libdrakvuf/win-registry.c
WARNING
I tested this code only on a Windows 7 SP1 x64 platform although the code probably works on x86 too.
USAGE
I'm assuming that the mainly used function will be drakvuf_reg_keyhandle_path() (although I myself currently use the other two from some hooks deep down in the kernel).
The following example shows its use from a trap callback for the syscall NtDeleteValueKey, you can also use the same callback body for the syscalls NtSetValueKey and NtDeleteKey because all of them have a KEY HANDLE as the 1st parameter (we don't care about the value name):
static event_response_t hook_deletevaluekey_cb( drakvuf_t drakvuf, drakvuf_trap_info_t *info )
{
    if ( info->regs->rcx )
    {
        vmi_instance_t vmi = drakvuf_lock_and_get_vmi( drakvuf );

        char *key_path = drakvuf_reg_keyhandle_path( drakvuf, info, info->regs->rcx, 0 );

        if ( key_path )
        {
            printf(""DELETEVALUEKEY: %s\n"", key_path );
            free( key_path );
        }

        drakvuf_release_vmi( drakvuf );
    }
    return 0 ;
}

And below you can see the DRAKVUF output (sorted and snipped) with that plugin enabled and starting an Internet Explorer and trigger some manual actions from regedit.exe:
DELETEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\ALFREDO1
DELETEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\5.0\LOWCACHE\EXTENSIBLE CACHE\MSHIST012017100420171005
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONEMAP
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\NEW KEY #4
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONEMAP
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONES
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\NEW KEY #4

Hope this helps,
Regards","Also, would you mind adding a plugin that exercises this new API (ie. one that traps NtDeleteValueKey, NtSetValueKey and NtDeleteKey)?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,310,2017-10-04T10:06:02Z,2017-10-05T17:38:29Z,2017-10-05T19:56:13Z,MERGED,True,653,1,11,https://github.com/aoshiken,Add new functions to the drakvuf API for resolving full path of windows registry keys,2,[],https://github.com/tklengyel/drakvuf/pull/310,https://github.com/aoshiken,6,https://github.com/tklengyel/drakvuf/pull/310#issuecomment-334216505,"The new functions are:

drakvuf_reg_keybody_path(): Returns path from CM_KEY_CONTROL_BLOCK pointer
drakvuf_reg_keycontrolblock_path(): Returns allocated registry key full path from key object
drakvuf_reg_keyhandle_path(): Returns an allocated registry key full path from key handle

Those functions are included in the new file src/libdrakvuf/win-registry.c
WARNING
I tested this code only on a Windows 7 SP1 x64 platform although the code probably works on x86 too.
USAGE
I'm assuming that the mainly used function will be drakvuf_reg_keyhandle_path() (although I myself currently use the other two from some hooks deep down in the kernel).
The following example shows its use from a trap callback for the syscall NtDeleteValueKey, you can also use the same callback body for the syscalls NtSetValueKey and NtDeleteKey because all of them have a KEY HANDLE as the 1st parameter (we don't care about the value name):
static event_response_t hook_deletevaluekey_cb( drakvuf_t drakvuf, drakvuf_trap_info_t *info )
{
    if ( info->regs->rcx )
    {
        vmi_instance_t vmi = drakvuf_lock_and_get_vmi( drakvuf );

        char *key_path = drakvuf_reg_keyhandle_path( drakvuf, info, info->regs->rcx, 0 );

        if ( key_path )
        {
            printf(""DELETEVALUEKEY: %s\n"", key_path );
            free( key_path );
        }

        drakvuf_release_vmi( drakvuf );
    }
    return 0 ;
}

And below you can see the DRAKVUF output (sorted and snipped) with that plugin enabled and starting an Internet Explorer and trigger some manual actions from regedit.exe:
DELETEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\ALFREDO1
DELETEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\5.0\LOWCACHE\EXTENSIBLE CACHE\MSHIST012017100420171005
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONEMAP
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\NEW KEY #4
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONEMAP
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONES
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\NEW KEY #4

Hope this helps,
Regards",Of course!! What name do you prefer?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,310,2017-10-04T10:06:02Z,2017-10-05T17:38:29Z,2017-10-05T19:56:13Z,MERGED,True,653,1,11,https://github.com/aoshiken,Add new functions to the drakvuf API for resolving full path of windows registry keys,2,[],https://github.com/tklengyel/drakvuf/pull/310,https://github.com/aoshiken,7,https://github.com/tklengyel/drakvuf/pull/310#issuecomment-334217288,"The new functions are:

drakvuf_reg_keybody_path(): Returns path from CM_KEY_CONTROL_BLOCK pointer
drakvuf_reg_keycontrolblock_path(): Returns allocated registry key full path from key object
drakvuf_reg_keyhandle_path(): Returns an allocated registry key full path from key handle

Those functions are included in the new file src/libdrakvuf/win-registry.c
WARNING
I tested this code only on a Windows 7 SP1 x64 platform although the code probably works on x86 too.
USAGE
I'm assuming that the mainly used function will be drakvuf_reg_keyhandle_path() (although I myself currently use the other two from some hooks deep down in the kernel).
The following example shows its use from a trap callback for the syscall NtDeleteValueKey, you can also use the same callback body for the syscalls NtSetValueKey and NtDeleteKey because all of them have a KEY HANDLE as the 1st parameter (we don't care about the value name):
static event_response_t hook_deletevaluekey_cb( drakvuf_t drakvuf, drakvuf_trap_info_t *info )
{
    if ( info->regs->rcx )
    {
        vmi_instance_t vmi = drakvuf_lock_and_get_vmi( drakvuf );

        char *key_path = drakvuf_reg_keyhandle_path( drakvuf, info, info->regs->rcx, 0 );

        if ( key_path )
        {
            printf(""DELETEVALUEKEY: %s\n"", key_path );
            free( key_path );
        }

        drakvuf_release_vmi( drakvuf );
    }
    return 0 ;
}

And below you can see the DRAKVUF output (sorted and snipped) with that plugin enabled and starting an Internet Explorer and trigger some manual actions from regedit.exe:
DELETEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\ALFREDO1
DELETEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\5.0\LOWCACHE\EXTENSIBLE CACHE\MSHIST012017100420171005
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONEMAP
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\NEW KEY #4
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONEMAP
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONES
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\NEW KEY #4

Hope this helps,
Regards",regmon? I'm afraid it's too much predictable... xD,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,310,2017-10-04T10:06:02Z,2017-10-05T17:38:29Z,2017-10-05T19:56:13Z,MERGED,True,653,1,11,https://github.com/aoshiken,Add new functions to the drakvuf API for resolving full path of windows registry keys,2,[],https://github.com/tklengyel/drakvuf/pull/310,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/310#issuecomment-334218460,"The new functions are:

drakvuf_reg_keybody_path(): Returns path from CM_KEY_CONTROL_BLOCK pointer
drakvuf_reg_keycontrolblock_path(): Returns allocated registry key full path from key object
drakvuf_reg_keyhandle_path(): Returns an allocated registry key full path from key handle

Those functions are included in the new file src/libdrakvuf/win-registry.c
WARNING
I tested this code only on a Windows 7 SP1 x64 platform although the code probably works on x86 too.
USAGE
I'm assuming that the mainly used function will be drakvuf_reg_keyhandle_path() (although I myself currently use the other two from some hooks deep down in the kernel).
The following example shows its use from a trap callback for the syscall NtDeleteValueKey, you can also use the same callback body for the syscalls NtSetValueKey and NtDeleteKey because all of them have a KEY HANDLE as the 1st parameter (we don't care about the value name):
static event_response_t hook_deletevaluekey_cb( drakvuf_t drakvuf, drakvuf_trap_info_t *info )
{
    if ( info->regs->rcx )
    {
        vmi_instance_t vmi = drakvuf_lock_and_get_vmi( drakvuf );

        char *key_path = drakvuf_reg_keyhandle_path( drakvuf, info, info->regs->rcx, 0 );

        if ( key_path )
        {
            printf(""DELETEVALUEKEY: %s\n"", key_path );
            free( key_path );
        }

        drakvuf_release_vmi( drakvuf );
    }
    return 0 ;
}

And below you can see the DRAKVUF output (sorted and snipped) with that plugin enabled and starting an Internet Explorer and trigger some manual actions from regedit.exe:
DELETEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\ALFREDO1
DELETEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\5.0\LOWCACHE\EXTENSIBLE CACHE\MSHIST012017100420171005
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONEMAP
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\NEW KEY #4
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONEMAP
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONES
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\NEW KEY #4

Hope this helps,
Regards","Sure, regmon or registrymon would both be fine :)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,310,2017-10-04T10:06:02Z,2017-10-05T17:38:29Z,2017-10-05T19:56:13Z,MERGED,True,653,1,11,https://github.com/aoshiken,Add new functions to the drakvuf API for resolving full path of windows registry keys,2,[],https://github.com/tklengyel/drakvuf/pull/310,https://github.com/aoshiken,9,https://github.com/tklengyel/drakvuf/pull/310#issuecomment-334262466,"The new functions are:

drakvuf_reg_keybody_path(): Returns path from CM_KEY_CONTROL_BLOCK pointer
drakvuf_reg_keycontrolblock_path(): Returns allocated registry key full path from key object
drakvuf_reg_keyhandle_path(): Returns an allocated registry key full path from key handle

Those functions are included in the new file src/libdrakvuf/win-registry.c
WARNING
I tested this code only on a Windows 7 SP1 x64 platform although the code probably works on x86 too.
USAGE
I'm assuming that the mainly used function will be drakvuf_reg_keyhandle_path() (although I myself currently use the other two from some hooks deep down in the kernel).
The following example shows its use from a trap callback for the syscall NtDeleteValueKey, you can also use the same callback body for the syscalls NtSetValueKey and NtDeleteKey because all of them have a KEY HANDLE as the 1st parameter (we don't care about the value name):
static event_response_t hook_deletevaluekey_cb( drakvuf_t drakvuf, drakvuf_trap_info_t *info )
{
    if ( info->regs->rcx )
    {
        vmi_instance_t vmi = drakvuf_lock_and_get_vmi( drakvuf );

        char *key_path = drakvuf_reg_keyhandle_path( drakvuf, info, info->regs->rcx, 0 );

        if ( key_path )
        {
            printf(""DELETEVALUEKEY: %s\n"", key_path );
            free( key_path );
        }

        drakvuf_release_vmi( drakvuf );
    }
    return 0 ;
}

And below you can see the DRAKVUF output (sorted and snipped) with that plugin enabled and starting an Internet Explorer and trigger some manual actions from regedit.exe:
DELETEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\ALFREDO1
DELETEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\5.0\LOWCACHE\EXTENSIBLE CACHE\MSHIST012017100420171005
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONEMAP
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\NEW KEY #4
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONEMAP
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONES
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\NEW KEY #4

Hope this helps,
Regards","Ok, I see, the error comes from not using the variable 'vmi' on the following code:
     vmi_instance_t vmi = drakvuf_lock_and_get_vmi( drakvuf );

     key_path = drakvuf_reg_keyhandle_path( drakvuf, info, info->regs->rcx, 0 );

     drakvuf_release_vmi( drakvuf );

Surprisingly my Debian Jessie doesn't exhibit that behaviour (probably the CI test was build on another platform)...
@tklengyel , I don't feel confident not locking vmi because deep down the drakvuf_reg_keyhandle_path the LibVMI calls are used intensively so I was supposing the lock should be acquired by the the caller and  released by him after that kind of tasks being done.
Are my assumptions right?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,310,2017-10-04T10:06:02Z,2017-10-05T17:38:29Z,2017-10-05T19:56:13Z,MERGED,True,653,1,11,https://github.com/aoshiken,Add new functions to the drakvuf API for resolving full path of windows registry keys,2,[],https://github.com/tklengyel/drakvuf/pull/310,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/310#issuecomment-334305989,"The new functions are:

drakvuf_reg_keybody_path(): Returns path from CM_KEY_CONTROL_BLOCK pointer
drakvuf_reg_keycontrolblock_path(): Returns allocated registry key full path from key object
drakvuf_reg_keyhandle_path(): Returns an allocated registry key full path from key handle

Those functions are included in the new file src/libdrakvuf/win-registry.c
WARNING
I tested this code only on a Windows 7 SP1 x64 platform although the code probably works on x86 too.
USAGE
I'm assuming that the mainly used function will be drakvuf_reg_keyhandle_path() (although I myself currently use the other two from some hooks deep down in the kernel).
The following example shows its use from a trap callback for the syscall NtDeleteValueKey, you can also use the same callback body for the syscalls NtSetValueKey and NtDeleteKey because all of them have a KEY HANDLE as the 1st parameter (we don't care about the value name):
static event_response_t hook_deletevaluekey_cb( drakvuf_t drakvuf, drakvuf_trap_info_t *info )
{
    if ( info->regs->rcx )
    {
        vmi_instance_t vmi = drakvuf_lock_and_get_vmi( drakvuf );

        char *key_path = drakvuf_reg_keyhandle_path( drakvuf, info, info->regs->rcx, 0 );

        if ( key_path )
        {
            printf(""DELETEVALUEKEY: %s\n"", key_path );
            free( key_path );
        }

        drakvuf_release_vmi( drakvuf );
    }
    return 0 ;
}

And below you can see the DRAKVUF output (sorted and snipped) with that plugin enabled and starting an Internet Explorer and trigger some manual actions from regedit.exe:
DELETEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\ALFREDO1
DELETEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\5.0\LOWCACHE\EXTENSIBLE CACHE\MSHIST012017100420171005
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONEMAP
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\NEW KEY #4
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONEMAP
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONES
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\NEW KEY #4

Hope this helps,
Regards","Yes, the compile error comes from not actually using vmi. Locking vmi doesn't have any effect on the libdrakvuf use of the vmi instance, so you really only need to do that if you need access to it to do reading/writing. The reason why the error might not appear on other machines is because only the debug build of DRAKVUF enables -Werror -Wall.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,310,2017-10-04T10:06:02Z,2017-10-05T17:38:29Z,2017-10-05T19:56:13Z,MERGED,True,653,1,11,https://github.com/aoshiken,Add new functions to the drakvuf API for resolving full path of windows registry keys,2,[],https://github.com/tklengyel/drakvuf/pull/310,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/310#issuecomment-334506887,"The new functions are:

drakvuf_reg_keybody_path(): Returns path from CM_KEY_CONTROL_BLOCK pointer
drakvuf_reg_keycontrolblock_path(): Returns allocated registry key full path from key object
drakvuf_reg_keyhandle_path(): Returns an allocated registry key full path from key handle

Those functions are included in the new file src/libdrakvuf/win-registry.c
WARNING
I tested this code only on a Windows 7 SP1 x64 platform although the code probably works on x86 too.
USAGE
I'm assuming that the mainly used function will be drakvuf_reg_keyhandle_path() (although I myself currently use the other two from some hooks deep down in the kernel).
The following example shows its use from a trap callback for the syscall NtDeleteValueKey, you can also use the same callback body for the syscalls NtSetValueKey and NtDeleteKey because all of them have a KEY HANDLE as the 1st parameter (we don't care about the value name):
static event_response_t hook_deletevaluekey_cb( drakvuf_t drakvuf, drakvuf_trap_info_t *info )
{
    if ( info->regs->rcx )
    {
        vmi_instance_t vmi = drakvuf_lock_and_get_vmi( drakvuf );

        char *key_path = drakvuf_reg_keyhandle_path( drakvuf, info, info->regs->rcx, 0 );

        if ( key_path )
        {
            printf(""DELETEVALUEKEY: %s\n"", key_path );
            free( key_path );
        }

        drakvuf_release_vmi( drakvuf );
    }
    return 0 ;
}

And below you can see the DRAKVUF output (sorted and snipped) with that plugin enabled and starting an Internet Explorer and trigger some manual actions from regedit.exe:
DELETEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\ALFREDO1
DELETEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\5.0\LOWCACHE\EXTENSIBLE CACHE\MSHIST012017100420171005
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONEMAP
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\NEW KEY #4
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONEMAP
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONES
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\NEW KEY #4

Hope this helps,
Regards",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,310,2017-10-04T10:06:02Z,2017-10-05T17:38:29Z,2017-10-05T19:56:13Z,MERGED,True,653,1,11,https://github.com/aoshiken,Add new functions to the drakvuf API for resolving full path of windows registry keys,2,[],https://github.com/tklengyel/drakvuf/pull/310,https://github.com/tklengyel,12,https://github.com/tklengyel/drakvuf/pull/310#issuecomment-334512703,"The new functions are:

drakvuf_reg_keybody_path(): Returns path from CM_KEY_CONTROL_BLOCK pointer
drakvuf_reg_keycontrolblock_path(): Returns allocated registry key full path from key object
drakvuf_reg_keyhandle_path(): Returns an allocated registry key full path from key handle

Those functions are included in the new file src/libdrakvuf/win-registry.c
WARNING
I tested this code only on a Windows 7 SP1 x64 platform although the code probably works on x86 too.
USAGE
I'm assuming that the mainly used function will be drakvuf_reg_keyhandle_path() (although I myself currently use the other two from some hooks deep down in the kernel).
The following example shows its use from a trap callback for the syscall NtDeleteValueKey, you can also use the same callback body for the syscalls NtSetValueKey and NtDeleteKey because all of them have a KEY HANDLE as the 1st parameter (we don't care about the value name):
static event_response_t hook_deletevaluekey_cb( drakvuf_t drakvuf, drakvuf_trap_info_t *info )
{
    if ( info->regs->rcx )
    {
        vmi_instance_t vmi = drakvuf_lock_and_get_vmi( drakvuf );

        char *key_path = drakvuf_reg_keyhandle_path( drakvuf, info, info->regs->rcx, 0 );

        if ( key_path )
        {
            printf(""DELETEVALUEKEY: %s\n"", key_path );
            free( key_path );
        }

        drakvuf_release_vmi( drakvuf );
    }
    return 0 ;
}

And below you can see the DRAKVUF output (sorted and snipped) with that plugin enabled and starting an Internet Explorer and trigger some manual actions from regedit.exe:
DELETEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\ALFREDO1
DELETEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\5.0\LOWCACHE\EXTENSIBLE CACHE\MSHIST012017100420171005
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONEMAP
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\NEW KEY #4
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONEMAP
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONES
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\NEW KEY #4

Hope this helps,
Regards","Everything looks good, thanks again! ;)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,310,2017-10-04T10:06:02Z,2017-10-05T17:38:29Z,2017-10-05T19:56:13Z,MERGED,True,653,1,11,https://github.com/aoshiken,Add new functions to the drakvuf API for resolving full path of windows registry keys,2,[],https://github.com/tklengyel/drakvuf/pull/310,https://github.com/aoshiken,13,https://github.com/tklengyel/drakvuf/pull/310#issuecomment-334522229,"The new functions are:

drakvuf_reg_keybody_path(): Returns path from CM_KEY_CONTROL_BLOCK pointer
drakvuf_reg_keycontrolblock_path(): Returns allocated registry key full path from key object
drakvuf_reg_keyhandle_path(): Returns an allocated registry key full path from key handle

Those functions are included in the new file src/libdrakvuf/win-registry.c
WARNING
I tested this code only on a Windows 7 SP1 x64 platform although the code probably works on x86 too.
USAGE
I'm assuming that the mainly used function will be drakvuf_reg_keyhandle_path() (although I myself currently use the other two from some hooks deep down in the kernel).
The following example shows its use from a trap callback for the syscall NtDeleteValueKey, you can also use the same callback body for the syscalls NtSetValueKey and NtDeleteKey because all of them have a KEY HANDLE as the 1st parameter (we don't care about the value name):
static event_response_t hook_deletevaluekey_cb( drakvuf_t drakvuf, drakvuf_trap_info_t *info )
{
    if ( info->regs->rcx )
    {
        vmi_instance_t vmi = drakvuf_lock_and_get_vmi( drakvuf );

        char *key_path = drakvuf_reg_keyhandle_path( drakvuf, info, info->regs->rcx, 0 );

        if ( key_path )
        {
            printf(""DELETEVALUEKEY: %s\n"", key_path );
            free( key_path );
        }

        drakvuf_release_vmi( drakvuf );
    }
    return 0 ;
}

And below you can see the DRAKVUF output (sorted and snipped) with that plugin enabled and starting an Internet Explorer and trigger some manual actions from regedit.exe:
DELETEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\ALFREDO1
DELETEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\5.0\LOWCACHE\EXTENSIBLE CACHE\MSHIST012017100420171005
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONEMAP
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\NEW KEY #4
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONEMAP
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONES
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\NEW KEY #4

Hope this helps,
Regards","Humm, I'm afraid I'm lost with that ""Closed with unmerged commits"".
All of my commits have been against the same branch and merged perfectly while this PR was open so I don't understand that message. :?
Do you want me to open a new PR?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,310,2017-10-04T10:06:02Z,2017-10-05T17:38:29Z,2017-10-05T19:56:13Z,MERGED,True,653,1,11,https://github.com/aoshiken,Add new functions to the drakvuf API for resolving full path of windows registry keys,2,[],https://github.com/tklengyel/drakvuf/pull/310,https://github.com/drakvuf-jenkins,14,https://github.com/tklengyel/drakvuf/pull/310#issuecomment-334526015,"The new functions are:

drakvuf_reg_keybody_path(): Returns path from CM_KEY_CONTROL_BLOCK pointer
drakvuf_reg_keycontrolblock_path(): Returns allocated registry key full path from key object
drakvuf_reg_keyhandle_path(): Returns an allocated registry key full path from key handle

Those functions are included in the new file src/libdrakvuf/win-registry.c
WARNING
I tested this code only on a Windows 7 SP1 x64 platform although the code probably works on x86 too.
USAGE
I'm assuming that the mainly used function will be drakvuf_reg_keyhandle_path() (although I myself currently use the other two from some hooks deep down in the kernel).
The following example shows its use from a trap callback for the syscall NtDeleteValueKey, you can also use the same callback body for the syscalls NtSetValueKey and NtDeleteKey because all of them have a KEY HANDLE as the 1st parameter (we don't care about the value name):
static event_response_t hook_deletevaluekey_cb( drakvuf_t drakvuf, drakvuf_trap_info_t *info )
{
    if ( info->regs->rcx )
    {
        vmi_instance_t vmi = drakvuf_lock_and_get_vmi( drakvuf );

        char *key_path = drakvuf_reg_keyhandle_path( drakvuf, info, info->regs->rcx, 0 );

        if ( key_path )
        {
            printf(""DELETEVALUEKEY: %s\n"", key_path );
            free( key_path );
        }

        drakvuf_release_vmi( drakvuf );
    }
    return 0 ;
}

And below you can see the DRAKVUF output (sorted and snipped) with that plugin enabled and starting an Internet Explorer and trigger some manual actions from regedit.exe:
DELETEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\ALFREDO1
DELETEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\5.0\LOWCACHE\EXTENSIBLE CACHE\MSHIST012017100420171005
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONEMAP
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\NEW KEY #4
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONEMAP
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONES
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\NEW KEY #4

Hope this helps,
Regards",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,310,2017-10-04T10:06:02Z,2017-10-05T17:38:29Z,2017-10-05T19:56:13Z,MERGED,True,653,1,11,https://github.com/aoshiken,Add new functions to the drakvuf API for resolving full path of windows registry keys,2,[],https://github.com/tklengyel/drakvuf/pull/310,https://github.com/tklengyel,15,https://github.com/tklengyel/drakvuf/pull/310#issuecomment-334526529,"The new functions are:

drakvuf_reg_keybody_path(): Returns path from CM_KEY_CONTROL_BLOCK pointer
drakvuf_reg_keycontrolblock_path(): Returns allocated registry key full path from key object
drakvuf_reg_keyhandle_path(): Returns an allocated registry key full path from key handle

Those functions are included in the new file src/libdrakvuf/win-registry.c
WARNING
I tested this code only on a Windows 7 SP1 x64 platform although the code probably works on x86 too.
USAGE
I'm assuming that the mainly used function will be drakvuf_reg_keyhandle_path() (although I myself currently use the other two from some hooks deep down in the kernel).
The following example shows its use from a trap callback for the syscall NtDeleteValueKey, you can also use the same callback body for the syscalls NtSetValueKey and NtDeleteKey because all of them have a KEY HANDLE as the 1st parameter (we don't care about the value name):
static event_response_t hook_deletevaluekey_cb( drakvuf_t drakvuf, drakvuf_trap_info_t *info )
{
    if ( info->regs->rcx )
    {
        vmi_instance_t vmi = drakvuf_lock_and_get_vmi( drakvuf );

        char *key_path = drakvuf_reg_keyhandle_path( drakvuf, info, info->regs->rcx, 0 );

        if ( key_path )
        {
            printf(""DELETEVALUEKEY: %s\n"", key_path );
            free( key_path );
        }

        drakvuf_release_vmi( drakvuf );
    }
    return 0 ;
}

And below you can see the DRAKVUF output (sorted and snipped) with that plugin enabled and starting an Internet Explorer and trigger some manual actions from regedit.exe:
DELETEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\ALFREDO1
DELETEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\5.0\LOWCACHE\EXTENSIBLE CACHE\MSHIST012017100420171005
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONEMAP
DELETEVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\NEW KEY #4
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONEMAP
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\INTERNET SETTINGS\ZONES
SETVALUEKEY: \REGISTRY\USER\S-1-5-21-2200285794-3943342076-1391323334-1000\SOFTWARE\NEW KEY #4

Hope this helps,
Regards","Not necessary, I just clicked on close instead of merge :) Once the CI gives the green light I can merge ;)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,315,2017-10-09T12:55:58Z,2017-10-11T15:07:42Z,2017-10-11T15:11:42Z,MERGED,True,279,115,27,https://github.com/aoshiken,Join all the data from the current execution process and make it accessible from drakvuf_trapinfo_t,5,[],https://github.com/tklengyel/drakvuf/pull/315,https://github.com/aoshiken,1,https://github.com/tklengyel/drakvuf/pull/315,"This is an initial start for taking care of the issue #313
Initially we added a new API function drakvuf_get_process_ppid() for getting the parent pid.
A new field for the drakvuf_trapinfo_t  structure has been added: the structure proc_data_t which  currently have the following fields:

const char *name. Current process name
vmi_pid_t pid. Current process pid
vmi_pid_t ppid. Current process parent pid
addr_t base_addr. Current process base address
int64_t userid . Current process SessionID/UID

WARNING
I've tested these changes ONLY in a Win7 N SP1 x64 platform although code for the linux platform has been initially included it should be deeply tested.
The plugins have been modified just for using the proc_data_t fields instead of the drakvuf_trapinfo_t ones","This is an initial start for taking care of the issue #313
Initially we added a new API function drakvuf_get_process_ppid() for getting the parent pid.
A new field for the drakvuf_trapinfo_t  structure has been added: the structure proc_data_t which  currently have the following fields:

const char *name. Current process name
vmi_pid_t pid. Current process pid
vmi_pid_t ppid. Current process parent pid
addr_t base_addr. Current process base address
int64_t userid . Current process SessionID/UID

WARNING
I've tested these changes ONLY in a Win7 N SP1 x64 platform although code for the linux platform has been initially included it should be deeply tested.
The plugins have been modified just for using the proc_data_t fields instead of the drakvuf_trapinfo_t ones",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,315,2017-10-09T12:55:58Z,2017-10-11T15:07:42Z,2017-10-11T15:11:42Z,MERGED,True,279,115,27,https://github.com/aoshiken,Join all the data from the current execution process and make it accessible from drakvuf_trapinfo_t,5,[],https://github.com/tklengyel/drakvuf/pull/315,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/315#issuecomment-335199997,"This is an initial start for taking care of the issue #313
Initially we added a new API function drakvuf_get_process_ppid() for getting the parent pid.
A new field for the drakvuf_trapinfo_t  structure has been added: the structure proc_data_t which  currently have the following fields:

const char *name. Current process name
vmi_pid_t pid. Current process pid
vmi_pid_t ppid. Current process parent pid
addr_t base_addr. Current process base address
int64_t userid . Current process SessionID/UID

WARNING
I've tested these changes ONLY in a Win7 N SP1 x64 platform although code for the linux platform has been initially included it should be deeply tested.
The plugins have been modified just for using the proc_data_t fields instead of the drakvuf_trapinfo_t ones",Looks good! I have only a couple minor things.,True,{'THUMBS_UP': ['https://github.com/aoshiken']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,315,2017-10-09T12:55:58Z,2017-10-11T15:07:42Z,2017-10-11T15:11:42Z,MERGED,True,279,115,27,https://github.com/aoshiken,Join all the data from the current execution process and make it accessible from drakvuf_trapinfo_t,5,[],https://github.com/tklengyel/drakvuf/pull/315,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/315#issuecomment-335668305,"This is an initial start for taking care of the issue #313
Initially we added a new API function drakvuf_get_process_ppid() for getting the parent pid.
A new field for the drakvuf_trapinfo_t  structure has been added: the structure proc_data_t which  currently have the following fields:

const char *name. Current process name
vmi_pid_t pid. Current process pid
vmi_pid_t ppid. Current process parent pid
addr_t base_addr. Current process base address
int64_t userid . Current process SessionID/UID

WARNING
I've tested these changes ONLY in a Win7 N SP1 x64 platform although code for the linux platform has been initially included it should be deeply tested.
The plugins have been modified just for using the proc_data_t fields instead of the drakvuf_trapinfo_t ones",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,315,2017-10-09T12:55:58Z,2017-10-11T15:07:42Z,2017-10-11T15:11:42Z,MERGED,True,279,115,27,https://github.com/aoshiken,Join all the data from the current execution process and make it accessible from drakvuf_trapinfo_t,5,[],https://github.com/tklengyel/drakvuf/pull/315,https://github.com/drakvuf-jenkins,4,https://github.com/tklengyel/drakvuf/pull/315#issuecomment-335668309,"This is an initial start for taking care of the issue #313
Initially we added a new API function drakvuf_get_process_ppid() for getting the parent pid.
A new field for the drakvuf_trapinfo_t  structure has been added: the structure proc_data_t which  currently have the following fields:

const char *name. Current process name
vmi_pid_t pid. Current process pid
vmi_pid_t ppid. Current process parent pid
addr_t base_addr. Current process base address
int64_t userid . Current process SessionID/UID

WARNING
I've tested these changes ONLY in a Win7 N SP1 x64 platform although code for the linux platform has been initially included it should be deeply tested.
The plugins have been modified just for using the proc_data_t fields instead of the drakvuf_trapinfo_t ones",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,315,2017-10-09T12:55:58Z,2017-10-11T15:07:42Z,2017-10-11T15:11:42Z,MERGED,True,279,115,27,https://github.com/aoshiken,Join all the data from the current execution process and make it accessible from drakvuf_trapinfo_t,5,[],https://github.com/tklengyel/drakvuf/pull/315,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/315#issuecomment-335668794,"This is an initial start for taking care of the issue #313
Initially we added a new API function drakvuf_get_process_ppid() for getting the parent pid.
A new field for the drakvuf_trapinfo_t  structure has been added: the structure proc_data_t which  currently have the following fields:

const char *name. Current process name
vmi_pid_t pid. Current process pid
vmi_pid_t ppid. Current process parent pid
addr_t base_addr. Current process base address
int64_t userid . Current process SessionID/UID

WARNING
I've tested these changes ONLY in a Win7 N SP1 x64 platform although code for the linux platform has been initially included it should be deeply tested.
The plugins have been modified just for using the proc_data_t fields instead of the drakvuf_trapinfo_t ones",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,315,2017-10-09T12:55:58Z,2017-10-11T15:07:42Z,2017-10-11T15:11:42Z,MERGED,True,279,115,27,https://github.com/aoshiken,Join all the data from the current execution process and make it accessible from drakvuf_trapinfo_t,5,[],https://github.com/tklengyel/drakvuf/pull/315,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/315#issuecomment-335670104,"This is an initial start for taking care of the issue #313
Initially we added a new API function drakvuf_get_process_ppid() for getting the parent pid.
A new field for the drakvuf_trapinfo_t  structure has been added: the structure proc_data_t which  currently have the following fields:

const char *name. Current process name
vmi_pid_t pid. Current process pid
vmi_pid_t ppid. Current process parent pid
addr_t base_addr. Current process base address
int64_t userid . Current process SessionID/UID

WARNING
I've tested these changes ONLY in a Win7 N SP1 x64 platform although code for the linux platform has been initially included it should be deeply tested.
The plugins have been modified just for using the proc_data_t fields instead of the drakvuf_trapinfo_t ones",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,315,2017-10-09T12:55:58Z,2017-10-11T15:07:42Z,2017-10-11T15:11:42Z,MERGED,True,279,115,27,https://github.com/aoshiken,Join all the data from the current execution process and make it accessible from drakvuf_trapinfo_t,5,[],https://github.com/tklengyel/drakvuf/pull/315,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/315#issuecomment-335673566,"This is an initial start for taking care of the issue #313
Initially we added a new API function drakvuf_get_process_ppid() for getting the parent pid.
A new field for the drakvuf_trapinfo_t  structure has been added: the structure proc_data_t which  currently have the following fields:

const char *name. Current process name
vmi_pid_t pid. Current process pid
vmi_pid_t ppid. Current process parent pid
addr_t base_addr. Current process base address
int64_t userid . Current process SessionID/UID

WARNING
I've tested these changes ONLY in a Win7 N SP1 x64 platform although code for the linux platform has been initially included it should be deeply tested.
The plugins have been modified just for using the proc_data_t fields instead of the drakvuf_trapinfo_t ones","Something is not right, on 32-bit Windows this seems to be breaking things at the moment.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,315,2017-10-09T12:55:58Z,2017-10-11T15:07:42Z,2017-10-11T15:11:42Z,MERGED,True,279,115,27,https://github.com/aoshiken,Join all the data from the current execution process and make it accessible from drakvuf_trapinfo_t,5,[],https://github.com/tklengyel/drakvuf/pull/315,https://github.com/aoshiken,8,https://github.com/tklengyel/drakvuf/pull/315#issuecomment-335692021,"This is an initial start for taking care of the issue #313
Initially we added a new API function drakvuf_get_process_ppid() for getting the parent pid.
A new field for the drakvuf_trapinfo_t  structure has been added: the structure proc_data_t which  currently have the following fields:

const char *name. Current process name
vmi_pid_t pid. Current process pid
vmi_pid_t ppid. Current process parent pid
addr_t base_addr. Current process base address
int64_t userid . Current process SessionID/UID

WARNING
I've tested these changes ONLY in a Win7 N SP1 x64 platform although code for the linux platform has been initially included it should be deeply tested.
The plugins have been modified just for using the proc_data_t fields instead of the drakvuf_trapinfo_t ones","Regarding the crash on 32-bit Windows, do we have more details about? I can't see the failing check
I don't have a 32-bit Windows handy :( I'll try to get one meanwhile Would you mind to tell me the steps  for replicating the crash?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,315,2017-10-09T12:55:58Z,2017-10-11T15:07:42Z,2017-10-11T15:11:42Z,MERGED,True,279,115,27,https://github.com/aoshiken,Join all the data from the current execution process and make it accessible from drakvuf_trapinfo_t,5,[],https://github.com/tklengyel/drakvuf/pull/315,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/315#issuecomment-335840388,"This is an initial start for taking care of the issue #313
Initially we added a new API function drakvuf_get_process_ppid() for getting the parent pid.
A new field for the drakvuf_trapinfo_t  structure has been added: the structure proc_data_t which  currently have the following fields:

const char *name. Current process name
vmi_pid_t pid. Current process pid
vmi_pid_t ppid. Current process parent pid
addr_t base_addr. Current process base address
int64_t userid . Current process SessionID/UID

WARNING
I've tested these changes ONLY in a Win7 N SP1 x64 platform although code for the linux platform has been initially included it should be deeply tested.
The plugins have been modified just for using the proc_data_t fields instead of the drakvuf_trapinfo_t ones","Alright, now it looks like it passed the run test =)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,315,2017-10-09T12:55:58Z,2017-10-11T15:07:42Z,2017-10-11T15:11:42Z,MERGED,True,279,115,27,https://github.com/aoshiken,Join all the data from the current execution process and make it accessible from drakvuf_trapinfo_t,5,[],https://github.com/tklengyel/drakvuf/pull/315,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/315#issuecomment-335840558,"This is an initial start for taking care of the issue #313
Initially we added a new API function drakvuf_get_process_ppid() for getting the parent pid.
A new field for the drakvuf_trapinfo_t  structure has been added: the structure proc_data_t which  currently have the following fields:

const char *name. Current process name
vmi_pid_t pid. Current process pid
vmi_pid_t ppid. Current process parent pid
addr_t base_addr. Current process base address
int64_t userid . Current process SessionID/UID

WARNING
I've tested these changes ONLY in a Win7 N SP1 x64 platform although code for the linux platform has been initially included it should be deeply tested.
The plugins have been modified just for using the proc_data_t fields instead of the drakvuf_trapinfo_t ones",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,315,2017-10-09T12:55:58Z,2017-10-11T15:07:42Z,2017-10-11T15:11:42Z,MERGED,True,279,115,27,https://github.com/aoshiken,Join all the data from the current execution process and make it accessible from drakvuf_trapinfo_t,5,[],https://github.com/tklengyel/drakvuf/pull/315,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/315#issuecomment-335842617,"This is an initial start for taking care of the issue #313
Initially we added a new API function drakvuf_get_process_ppid() for getting the parent pid.
A new field for the drakvuf_trapinfo_t  structure has been added: the structure proc_data_t which  currently have the following fields:

const char *name. Current process name
vmi_pid_t pid. Current process pid
vmi_pid_t ppid. Current process parent pid
addr_t base_addr. Current process base address
int64_t userid . Current process SessionID/UID

WARNING
I've tested these changes ONLY in a Win7 N SP1 x64 platform although code for the linux platform has been initially included it should be deeply tested.
The plugins have been modified just for using the proc_data_t fields instead of the drakvuf_trapinfo_t ones",Looks good! Thanks ;),True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,315,2017-10-09T12:55:58Z,2017-10-11T15:07:42Z,2017-10-11T15:11:42Z,MERGED,True,279,115,27,https://github.com/aoshiken,Join all the data from the current execution process and make it accessible from drakvuf_trapinfo_t,5,[],https://github.com/tklengyel/drakvuf/pull/315,https://github.com/tklengyel,12,https://github.com/tklengyel/drakvuf/pull/315#issuecomment-335843065,"This is an initial start for taking care of the issue #313
Initially we added a new API function drakvuf_get_process_ppid() for getting the parent pid.
A new field for the drakvuf_trapinfo_t  structure has been added: the structure proc_data_t which  currently have the following fields:

const char *name. Current process name
vmi_pid_t pid. Current process pid
vmi_pid_t ppid. Current process parent pid
addr_t base_addr. Current process base address
int64_t userid . Current process SessionID/UID

WARNING
I've tested these changes ONLY in a Win7 N SP1 x64 platform although code for the linux platform has been initially included it should be deeply tested.
The plugins have been modified just for using the proc_data_t fields instead of the drakvuf_trapinfo_t ones","Actually, I'll revert this just to squash the commits in this PR into one commit. Never mind, it's not worth the hassle for a cosmetic fix.",True,{'THUMBS_UP': ['https://github.com/aoshiken']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,315,2017-10-09T12:55:58Z,2017-10-11T15:07:42Z,2017-10-11T15:11:42Z,MERGED,True,279,115,27,https://github.com/aoshiken,Join all the data from the current execution process and make it accessible from drakvuf_trapinfo_t,5,[],https://github.com/tklengyel/drakvuf/pull/315,https://github.com/aoshiken,13,https://github.com/tklengyel/drakvuf/pull/315#issuecomment-335843368,"This is an initial start for taking care of the issue #313
Initially we added a new API function drakvuf_get_process_ppid() for getting the parent pid.
A new field for the drakvuf_trapinfo_t  structure has been added: the structure proc_data_t which  currently have the following fields:

const char *name. Current process name
vmi_pid_t pid. Current process pid
vmi_pid_t ppid. Current process parent pid
addr_t base_addr. Current process base address
int64_t userid . Current process SessionID/UID

WARNING
I've tested these changes ONLY in a Win7 N SP1 x64 platform although code for the linux platform has been initially included it should be deeply tested.
The plugins have been modified just for using the proc_data_t fields instead of the drakvuf_trapinfo_t ones","Good news, thank you so much for your patience",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,316,2017-10-11T15:44:15Z,2017-10-11T15:47:06Z,2017-10-12T02:33:43Z,CLOSED,False,101,93,13,https://github.com/tklengyel,Update LibVMI,1,[],https://github.com/tklengyel/drakvuf/pull/316,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/316,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,317,2017-10-11T15:47:32Z,2017-10-12T02:33:40Z,2017-10-12T02:33:42Z,MERGED,True,101,93,13,https://github.com/tklengyel,Update LibVMI,1,[],https://github.com/tklengyel/drakvuf/pull/317,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/317,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,319,2017-10-17T08:34:55Z,2017-10-17T15:36:42Z,2017-10-18T06:06:13Z,MERGED,True,1,1,1,https://github.com/aoshiken,Fix vmi_write_pa return value,1,[],https://github.com/tklengyel/drakvuf/pull/319,https://github.com/aoshiken,1,https://github.com/tklengyel/drakvuf/pull/319,If writing with the vmi_write_pa call has succeded return value will be VMI_SUCCESS,If writing with the vmi_write_pa call has succeded return value will be VMI_SUCCESS,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,319,2017-10-17T08:34:55Z,2017-10-17T15:36:42Z,2017-10-18T06:06:13Z,MERGED,True,1,1,1,https://github.com/aoshiken,Fix vmi_write_pa return value,1,[],https://github.com/tklengyel/drakvuf/pull/319,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/319#issuecomment-337272855,If writing with the vmi_write_pa call has succeded return value will be VMI_SUCCESS,Thanks!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,321,2017-10-17T17:04:28Z,2017-10-18T02:21:41Z,2017-10-18T06:01:39Z,MERGED,True,5,5,2,https://github.com/tklengyel,Refresh LibVMI memsize caches,2,[],https://github.com/tklengyel/drakvuf/pull/321,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/321,"@aoshiken can you give this branch a try?
Fixes #320","@aoshiken can you give this branch a try?
Fixes #320",True,{'THUMBS_UP': ['https://github.com/aoshiken']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,321,2017-10-17T17:04:28Z,2017-10-18T02:21:41Z,2017-10-18T06:01:39Z,MERGED,True,5,5,2,https://github.com/tklengyel,Refresh LibVMI memsize caches,2,[],https://github.com/tklengyel/drakvuf/pull/321,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/321#issuecomment-337407596,"@aoshiken can you give this branch a try?
Fixes #320",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,321,2017-10-17T17:04:28Z,2017-10-18T02:21:41Z,2017-10-18T06:01:39Z,MERGED,True,5,5,2,https://github.com/tklengyel,Refresh LibVMI memsize caches,2,[],https://github.com/tklengyel/drakvuf/pull/321,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/321#issuecomment-337439326,"@aoshiken can you give this branch a try?
Fixes #320",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,321,2017-10-17T17:04:28Z,2017-10-18T02:21:41Z,2017-10-18T06:01:39Z,MERGED,True,5,5,2,https://github.com/tklengyel,Refresh LibVMI memsize caches,2,[],https://github.com/tklengyel/drakvuf/pull/321,https://github.com/aoshiken,4,https://github.com/tklengyel/drakvuf/pull/321#issuecomment-337468896,"@aoshiken can you give this branch a try?
Fixes #320",Like a charm... 👍,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,323,2017-10-18T06:37:55Z,2017-10-18T20:42:51Z,2017-10-18T21:12:40Z,MERGED,True,52,64,2,https://github.com/aoshiken,Pass current process base address to trap info,3,[],https://github.com/tklengyel/drakvuf/pull/323,https://github.com/aoshiken,1,https://github.com/tklengyel/drakvuf/pull/323,Fixes issue #322,Fixes issue #322,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,323,2017-10-18T06:37:55Z,2017-10-18T20:42:51Z,2017-10-18T21:12:40Z,MERGED,True,52,64,2,https://github.com/aoshiken,Pass current process base address to trap info,3,[],https://github.com/tklengyel/drakvuf/pull/323,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/323#issuecomment-337474715,Fixes issue #322,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,323,2017-10-18T06:37:55Z,2017-10-18T20:42:51Z,2017-10-18T21:12:40Z,MERGED,True,52,64,2,https://github.com/aoshiken,Pass current process base address to trap info,3,[],https://github.com/tklengyel/drakvuf/pull/323,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/323#issuecomment-337636476,Fixes issue #322,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,323,2017-10-18T06:37:55Z,2017-10-18T20:42:51Z,2017-10-18T21:12:40Z,MERGED,True,52,64,2,https://github.com/aoshiken,Pass current process base address to trap info,3,[],https://github.com/tklengyel/drakvuf/pull/323,https://github.com/aoshiken,4,https://github.com/tklengyel/drakvuf/pull/323#issuecomment-337643001,Fixes issue #322,"Looks better now, isn't? :)",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,324,2017-10-19T16:47:40Z,2017-10-19T22:11:09Z,2017-10-19T22:11:12Z,MERGED,True,5,3,2,https://github.com/tklengyel,Add whitespace check to travis,1,[],https://github.com/tklengyel/drakvuf/pull/324,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/324,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,325,2017-10-19T22:12:36Z,2017-10-19T23:19:43Z,2017-10-19T23:19:45Z,MERGED,True,8930,7851,68,https://github.com/tklengyel,Astyle,3,[],https://github.com/tklengyel/drakvuf/pull/325,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/325,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,326,2017-10-27T02:22:44Z,2017-10-27T02:28:22Z,2017-10-27T02:28:24Z,MERGED,True,12,7,1,https://github.com/tklengyel,Update Travis script,1,[],https://github.com/tklengyel/drakvuf/pull/326,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/326,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,327,2017-10-30T00:06:46Z,2017-10-30T00:46:46Z,2017-10-30T00:46:49Z,MERGED,True,194,57,5,https://github.com/tklengyel,Update Travis and fix clang --analyze errors,1,[],https://github.com/tklengyel/drakvuf/pull/327,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/327,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,331,2017-12-05T08:13:55Z,2017-12-05T20:32:58Z,2017-12-05T20:32:58Z,MERGED,True,4,3,1,https://github.com/disaykin,Fix exit code of injector utility,1,[],https://github.com/tklengyel/drakvuf/pull/331,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/331,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,331,2017-12-05T08:13:55Z,2017-12-05T20:32:58Z,2017-12-05T20:32:58Z,MERGED,True,4,3,1,https://github.com/disaykin,Fix exit code of injector utility,1,[],https://github.com/tklengyel/drakvuf/pull/331,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/331#issuecomment-349432107,,Thanks!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,335,2018-01-22T23:21:54Z,2018-01-23T00:25:19Z,2018-01-23T00:25:21Z,MERGED,True,1,1,1,https://github.com/tklengyel,Update Rekall submodule to v1.7.1,1,[],https://github.com/tklengyel/drakvuf/pull/335,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/335,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,336,2018-01-22T23:28:06Z,2018-01-23T00:10:56Z,2018-01-23T00:10:58Z,MERGED,True,3,4,1,https://github.com/tklengyel,Don't pack internal structures,1,[],https://github.com/tklengyel/drakvuf/pull/336,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/336,"clang complains:
 vmi.c:768:39: error: taking address of packed member 'guard' of class or structure 'breakpoint' may result in an unaligned pointer value [-Werror,-Waddress-of-packed-member] remove_trap(drakvuf, &container->breakpoint.guard); ^~~~~~~~~~~~~~~~~~~~~~~~~~~","clang complains:
 vmi.c:768:39: error: taking address of packed member 'guard' of class or structure 'breakpoint' may result in an unaligned pointer value [-Werror,-Waddress-of-packed-member] remove_trap(drakvuf, &container->breakpoint.guard); ^~~~~~~~~~~~~~~~~~~~~~~~~~~",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,337,2018-01-22T23:31:56Z,2018-01-22T23:47:44Z,2018-01-22T23:47:46Z,MERGED,True,9,5,1,https://github.com/tklengyel,Update travis script,1,[],https://github.com/tklengyel/drakvuf/pull/337,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/337,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,339,2018-01-30T10:50:20Z,2018-02-16T17:05:47Z,2018-06-04T17:39:14Z,MERGED,True,470,242,6,https://github.com/skvl,"Add option to run files via ""shell32.dll!ShellExecuteA""",6,[],https://github.com/tklengyel/drakvuf/pull/339,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/339,This allows to pass a path for any file (for example docx) and automatically open it if certain application is installed.,This allows to pass a path for any file (for example docx) and automatically open it if certain application is installed.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,339,2018-01-30T10:50:20Z,2018-02-16T17:05:47Z,2018-06-04T17:39:14Z,MERGED,True,470,242,6,https://github.com/skvl,"Add option to run files via ""shell32.dll!ShellExecuteA""",6,[],https://github.com/tklengyel/drakvuf/pull/339,https://github.com/skvl,2,https://github.com/tklengyel/drakvuf/pull/339#issuecomment-361556075,This allows to pass a path for any file (for example docx) and automatically open it if certain application is installed.,It have been tested with Xen-4.9 from Ubuntu 17.10 packages.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,339,2018-01-30T10:50:20Z,2018-02-16T17:05:47Z,2018-06-04T17:39:14Z,MERGED,True,470,242,6,https://github.com/skvl,"Add option to run files via ""shell32.dll!ShellExecuteA""",6,[],https://github.com/tklengyel/drakvuf/pull/339,https://github.com/skvl,3,https://github.com/tklengyel/drakvuf/pull/339#issuecomment-361567620,This allows to pass a path for any file (for example docx) and automatically open it if certain application is installed.,I have done bad renaming. Already fixed it and force pushed.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,339,2018-01-30T10:50:20Z,2018-02-16T17:05:47Z,2018-06-04T17:39:14Z,MERGED,True,470,242,6,https://github.com/skvl,"Add option to run files via ""shell32.dll!ShellExecuteA""",6,[],https://github.com/tklengyel/drakvuf/pull/339,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/339#issuecomment-361669004,This allows to pass a path for any file (for example docx) and automatically open it if certain application is installed.,"Thank you for this addition! Aside from the minor style-issues (https://travis-ci.org/tklengyel/drakvuf/jobs/335115878) this looks good to me.
On a related note, I'm wondering if perhaps it would be better to make the injector into a universal function-call injector. So instead of choosing between CreateProcessA and ShellExecuteA, the user could specify any dll/functionname directly, passing in the required arguments for the injector to put on the stack. Any thoughts on that?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,339,2018-01-30T10:50:20Z,2018-02-16T17:05:47Z,2018-06-04T17:39:14Z,MERGED,True,470,242,6,https://github.com/skvl,"Add option to run files via ""shell32.dll!ShellExecuteA""",6,[],https://github.com/tklengyel/drakvuf/pull/339,https://github.com/skvl,5,https://github.com/tklengyel/drakvuf/pull/339#issuecomment-361838832,This allows to pass a path for any file (for example docx) and automatically open it if certain application is installed.,I think this would be great. I will add this.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,339,2018-01-30T10:50:20Z,2018-02-16T17:05:47Z,2018-06-04T17:39:14Z,MERGED,True,470,242,6,https://github.com/skvl,"Add option to run files via ""shell32.dll!ShellExecuteA""",6,[],https://github.com/tklengyel/drakvuf/pull/339,https://github.com/skvl,6,https://github.com/tklengyel/drakvuf/pull/339#issuecomment-361840083,This allows to pass a path for any file (for example docx) and automatically open it if certain application is installed.,"@tklengyel, I think there is one difficulty in passing any dll/function as arguments. What to do with function arguments?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,339,2018-01-30T10:50:20Z,2018-02-16T17:05:47Z,2018-06-04T17:39:14Z,MERGED,True,470,242,6,https://github.com/skvl,"Add option to run files via ""shell32.dll!ShellExecuteA""",6,[],https://github.com/tklengyel/drakvuf/pull/339,https://github.com/skvl,7,https://github.com/tklengyel/drakvuf/pull/339#issuecomment-361856619,This allows to pass a path for any file (for example docx) and automatically open it if certain application is installed.,"@tklengyel, I have one more trouble. I have noticed that every run with ShellExecute reports fail. Only report because it succeeds.  If I understand correctly this is because vmi_read(injector->vmi, &ctx, sizeof(struct process_information_64), &pip, NULL) fails. But I don't understand this part yet.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,339,2018-01-30T10:50:20Z,2018-02-16T17:05:47Z,2018-06-04T17:39:14Z,MERGED,True,470,242,6,https://github.com/skvl,"Add option to run files via ""shell32.dll!ShellExecuteA""",6,[],https://github.com/tklengyel/drakvuf/pull/339,https://github.com/skvl,8,https://github.com/tklengyel/drakvuf/pull/339#issuecomment-361861297,This allows to pass a path for any file (for example docx) and automatically open it if certain application is installed.,"I think I understand the error reason. CreateProcess returns LPPROCESS_INFORMATION lpProcessInformation (MSDN) which contains PID and TID. But ShellExecute (MSDN) doesn't return this. From ShellExecuteEx one could get Process HANDLE (MSDN). But this would require calls to GetProcessId and GetThreadId.
I don't know what to do.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,339,2018-01-30T10:50:20Z,2018-02-16T17:05:47Z,2018-06-04T17:39:14Z,MERGED,True,470,242,6,https://github.com/skvl,"Add option to run files via ""shell32.dll!ShellExecuteA""",6,[],https://github.com/tklengyel/drakvuf/pull/339,https://github.com/skvl,9,https://github.com/tklengyel/drakvuf/pull/339#issuecomment-361872844,This allows to pass a path for any file (for example docx) and automatically open it if certain application is installed.,I have added checking for return code of ShellExecute. Also I leave a TODO to indicate that getting PID and TID should be done.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,339,2018-01-30T10:50:20Z,2018-02-16T17:05:47Z,2018-06-04T17:39:14Z,MERGED,True,470,242,6,https://github.com/skvl,"Add option to run files via ""shell32.dll!ShellExecuteA""",6,[],https://github.com/tklengyel/drakvuf/pull/339,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/339#issuecomment-361970166,This allows to pass a path for any file (for example docx) and automatically open it if certain application is installed.,"What to do with function arguments?

I would imagine it would be a linked list of structures such as
struct function_input {
    size_t size;
    bool output; // specify whether this acts as a function output
    void *data;
};

That way the user can pass arbitrary arguments on the stack of arbitrary sizes without the API having to know about types and stuff. We might need to iterate a couple times on the API to get it right.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,339,2018-01-30T10:50:20Z,2018-02-16T17:05:47Z,2018-06-04T17:39:14Z,MERGED,True,470,242,6,https://github.com/skvl,"Add option to run files via ""shell32.dll!ShellExecuteA""",6,[],https://github.com/tklengyel/drakvuf/pull/339,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/339#issuecomment-363916381,This allows to pass a path for any file (for example docx) and automatically open it if certain application is installed.,@drakvuf-jenkins: retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,339,2018-01-30T10:50:20Z,2018-02-16T17:05:47Z,2018-06-04T17:39:14Z,MERGED,True,470,242,6,https://github.com/skvl,"Add option to run files via ""shell32.dll!ShellExecuteA""",6,[],https://github.com/tklengyel/drakvuf/pull/339,https://github.com/skvl,12,https://github.com/tklengyel/drakvuf/pull/339#issuecomment-364925836,This allows to pass a path for any file (for example docx) and automatically open it if certain application is installed.,"@tklengyel I faced with issue that sometimes host process crashes during injection. I can't attach with WinDbg (from inside VM) but I start to think that I corrupt stack (ShellExecute uses less arguments). Where do You restore stack after return from CreateProcess?
UPDATE
I think I have figured out where You restore stack: memcpy(&injector->saved_regs, info->regs, sizeof(x86_registers_t));. This restores info->regs->rsp.
But I don't know the reason of the issue yet.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,339,2018-01-30T10:50:20Z,2018-02-16T17:05:47Z,2018-06-04T17:39:14Z,MERGED,True,470,242,6,https://github.com/skvl,"Add option to run files via ""shell32.dll!ShellExecuteA""",6,[],https://github.com/tklengyel/drakvuf/pull/339,https://github.com/tklengyel,13,https://github.com/tklengyel/drakvuf/pull/339#issuecomment-364957463,This allows to pass a path for any file (for example docx) and automatically open it if certain application is installed.,"The stack doesn't have to be restored as it isn't getting overwritten, it is getting extended by making RSP point to the new position. So effectively we just push a new frame on the stack that gets popped when the injected function returns. Everything that was on the stack is still there after the injection as it wasn't touched.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,339,2018-01-30T10:50:20Z,2018-02-16T17:05:47Z,2018-06-04T17:39:14Z,MERGED,True,470,242,6,https://github.com/skvl,"Add option to run files via ""shell32.dll!ShellExecuteA""",6,[],https://github.com/tklengyel/drakvuf/pull/339,https://github.com/skvl,14,https://github.com/tklengyel/drakvuf/pull/339#issuecomment-365557219,This allows to pass a path for any file (for example docx) and automatically open it if certain application is installed.,@tklengyel finally I have fixed crashes. Would You accept this pull request?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,339,2018-01-30T10:50:20Z,2018-02-16T17:05:47Z,2018-06-04T17:39:14Z,MERGED,True,470,242,6,https://github.com/skvl,"Add option to run files via ""shell32.dll!ShellExecuteA""",6,[],https://github.com/tklengyel/drakvuf/pull/339,https://github.com/tklengyel,15,https://github.com/tklengyel/drakvuf/pull/339#issuecomment-365648172,This allows to pass a path for any file (for example docx) and automatically open it if certain application is installed.,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,339,2018-01-30T10:50:20Z,2018-02-16T17:05:47Z,2018-06-04T17:39:14Z,MERGED,True,470,242,6,https://github.com/skvl,"Add option to run files via ""shell32.dll!ShellExecuteA""",6,[],https://github.com/tklengyel/drakvuf/pull/339,https://github.com/skvl,16,https://github.com/tklengyel/drakvuf/pull/339#issuecomment-365889040,This allows to pass a path for any file (for example docx) and automatically open it if certain application is installed.,@tklengyel a friend of mine noticed that I have changed order of arguments of injector and this could break some scripts. So I have maked the method argument optional and placed it after tid argument. I also have added check for tid that argument contains integer.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,339,2018-01-30T10:50:20Z,2018-02-16T17:05:47Z,2018-06-04T17:39:14Z,MERGED,True,470,242,6,https://github.com/skvl,"Add option to run files via ""shell32.dll!ShellExecuteA""",6,[],https://github.com/tklengyel/drakvuf/pull/339,https://github.com/tklengyel,17,https://github.com/tklengyel/drakvuf/pull/339#issuecomment-365978455,This allows to pass a path for any file (for example docx) and automatically open it if certain application is installed.,While preserving the argument locations is OK the better solution would be to actually start using getopt in the injector tool as well so the arguments could be specified independent of their position.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,339,2018-01-30T10:50:20Z,2018-02-16T17:05:47Z,2018-06-04T17:39:14Z,MERGED,True,470,242,6,https://github.com/skvl,"Add option to run files via ""shell32.dll!ShellExecuteA""",6,[],https://github.com/tklengyel/drakvuf/pull/339,https://github.com/tklengyel,18,https://github.com/tklengyel/drakvuf/pull/339#issuecomment-366098094,This allows to pass a path for any file (for example docx) and automatically open it if certain application is installed.,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,339,2018-01-30T10:50:20Z,2018-02-16T17:05:47Z,2018-06-04T17:39:14Z,MERGED,True,470,242,6,https://github.com/skvl,"Add option to run files via ""shell32.dll!ShellExecuteA""",6,[],https://github.com/tklengyel/drakvuf/pull/339,https://github.com/tklengyel,19,https://github.com/tklengyel/drakvuf/pull/339#issuecomment-366099749,This allows to pass a path for any file (for example docx) and automatically open it if certain application is installed.,So unfortunately it seems like something in this PR breaks the injection from working on 32-bit Win7 now. The guest actually crashes with a bluescreen. With the master branch it still works so the regression is from this PR.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,339,2018-01-30T10:50:20Z,2018-02-16T17:05:47Z,2018-06-04T17:39:14Z,MERGED,True,470,242,6,https://github.com/skvl,"Add option to run files via ""shell32.dll!ShellExecuteA""",6,[],https://github.com/tklengyel/drakvuf/pull/339,https://github.com/skvl,20,https://github.com/tklengyel/drakvuf/pull/339#issuecomment-366150677,This allows to pass a path for any file (for example docx) and automatically open it if certain application is installed.,@tklengyel does this appear with last commit? Because before it @drakvuf-jenkins marked it successful.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,339,2018-01-30T10:50:20Z,2018-02-16T17:05:47Z,2018-06-04T17:39:14Z,MERGED,True,470,242,6,https://github.com/skvl,"Add option to run files via ""shell32.dll!ShellExecuteA""",6,[],https://github.com/tklengyel/drakvuf/pull/339,https://github.com/skvl,21,https://github.com/tklengyel/drakvuf/pull/339#issuecomment-366151061,This allows to pass a path for any file (for example docx) and automatically open it if certain application is installed.,"the better solution would be to actually start using getopt

I have thought about this solution but decided not to use it because in that case I would have to make arguments look like -x ... -y ... which could break existing scripts too.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,339,2018-01-30T10:50:20Z,2018-02-16T17:05:47Z,2018-06-04T17:39:14Z,MERGED,True,470,242,6,https://github.com/skvl,"Add option to run files via ""shell32.dll!ShellExecuteA""",6,[],https://github.com/tklengyel/drakvuf/pull/339,https://github.com/tklengyel,22,https://github.com/tklengyel/drakvuf/pull/339#issuecomment-366152379,This allows to pass a path for any file (for example docx) and automatically open it if certain application is installed.,"No, the problem has been ongoing with x86 and this PR. I disabled the x86 test at one point which is what you saw as the rest of the tests passed. I now confirmed the master branch still works with x86.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,339,2018-01-30T10:50:20Z,2018-02-16T17:05:47Z,2018-06-04T17:39:14Z,MERGED,True,470,242,6,https://github.com/skvl,"Add option to run files via ""shell32.dll!ShellExecuteA""",6,[],https://github.com/tklengyel/drakvuf/pull/339,https://github.com/tklengyel,23,https://github.com/tklengyel/drakvuf/pull/339#issuecomment-366290742,This allows to pass a path for any file (for example docx) and automatically open it if certain application is installed.,"Actually, it seems like the x86 test is failing intermittently with the master branch as well, so the issue  there seems to be something else.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,339,2018-01-30T10:50:20Z,2018-02-16T17:05:47Z,2018-06-04T17:39:14Z,MERGED,True,470,242,6,https://github.com/skvl,"Add option to run files via ""shell32.dll!ShellExecuteA""",6,[],https://github.com/tklengyel/drakvuf/pull/339,https://github.com/tklengyel,24,https://github.com/tklengyel/drakvuf/pull/339#issuecomment-366294191,This allows to pass a path for any file (for example docx) and automatically open it if certain application is installed.,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,339,2018-01-30T10:50:20Z,2018-02-16T17:05:47Z,2018-06-04T17:39:14Z,MERGED,True,470,242,6,https://github.com/skvl,"Add option to run files via ""shell32.dll!ShellExecuteA""",6,[],https://github.com/tklengyel/drakvuf/pull/339,https://github.com/tklengyel,25,https://github.com/tklengyel/drakvuf/pull/339#issuecomment-366296164,This allows to pass a path for any file (for example docx) and automatically open it if certain application is installed.,"@skvl Alright, it's now passing, I'll merge. Thanks again for adding this! ;)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,339,2018-01-30T10:50:20Z,2018-02-16T17:05:47Z,2018-06-04T17:39:14Z,MERGED,True,470,242,6,https://github.com/skvl,"Add option to run files via ""shell32.dll!ShellExecuteA""",6,[],https://github.com/tklengyel/drakvuf/pull/339,https://github.com/skvl,26,https://github.com/tklengyel/drakvuf/pull/339#issuecomment-366615495,This allows to pass a path for any file (for example docx) and automatically open it if certain application is installed.,@tklengyel thank you for yours pacience.,True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,343,2018-02-16T10:42:24Z,2018-02-19T15:30:59Z,2018-02-20T09:26:43Z,MERGED,True,114,42,2,https://github.com/disaykin,REGMON plugin functionality extended. Added support for Open and Create Registry functions.,4,[],https://github.com/tklengyel/drakvuf/pull/343,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/343,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,343,2018-02-16T10:42:24Z,2018-02-19T15:30:59Z,2018-02-20T09:26:43Z,MERGED,True,114,42,2,https://github.com/disaykin,REGMON plugin functionality extended. Added support for Open and Create Registry functions.,4,[],https://github.com/tklengyel/drakvuf/pull/343,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/343#issuecomment-366299327,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,343,2018-02-16T10:42:24Z,2018-02-19T15:30:59Z,2018-02-20T09:26:43Z,MERGED,True,114,42,2,https://github.com/disaykin,REGMON plugin functionality extended. Added support for Open and Create Registry functions.,4,[],https://github.com/tklengyel/drakvuf/pull/343,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/343#issuecomment-366726627,,"Thanks, this looks good to me!",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,343,2018-02-16T10:42:24Z,2018-02-19T15:30:59Z,2018-02-20T09:26:43Z,MERGED,True,114,42,2,https://github.com/disaykin,REGMON plugin functionality extended. Added support for Open and Create Registry functions.,4,[],https://github.com/tklengyel/drakvuf/pull/343,https://github.com/disaykin,4,https://github.com/tklengyel/drakvuf/pull/343#issuecomment-366736552,,"@tklengyel, thanks!",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,343,2018-02-16T10:42:24Z,2018-02-19T15:30:59Z,2018-02-20T09:26:43Z,MERGED,True,114,42,2,https://github.com/disaykin,REGMON plugin functionality extended. Added support for Open and Create Registry functions.,4,[],https://github.com/tklengyel/drakvuf/pull/343,https://github.com/aoshiken,5,https://github.com/tklengyel/drakvuf/pull/343#issuecomment-366918054,,@disaykin nice job,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,345,2018-02-20T09:58:15Z,2018-02-22T15:34:50Z,2018-02-22T17:35:52Z,MERGED,True,1,0,1,https://github.com/aoshiken,REGMON: Free allocated memory from drakvuf_reg_keyhandle_path(),1,[],https://github.com/tklengyel/drakvuf/pull/345,https://github.com/aoshiken,1,https://github.com/tklengyel/drakvuf/pull/345,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,345,2018-02-20T09:58:15Z,2018-02-22T15:34:50Z,2018-02-22T17:35:52Z,MERGED,True,1,0,1,https://github.com/aoshiken,REGMON: Free allocated memory from drakvuf_reg_keyhandle_path(),1,[],https://github.com/tklengyel/drakvuf/pull/345,https://github.com/aoshiken,2,https://github.com/tklengyel/drakvuf/pull/345#issuecomment-366926539,,I know it's a minimal change but arrived too late to the PR #343 :),True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,345,2018-02-20T09:58:15Z,2018-02-22T15:34:50Z,2018-02-22T17:35:52Z,MERGED,True,1,0,1,https://github.com/aoshiken,REGMON: Free allocated memory from drakvuf_reg_keyhandle_path(),1,[],https://github.com/tklengyel/drakvuf/pull/345,https://github.com/aoshiken,3,https://github.com/tklengyel/drakvuf/pull/345#issuecomment-366929854,,There was some issue with the apt-get update command in the continuous integration runs (obviously not related to this PR),True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,345,2018-02-20T09:58:15Z,2018-02-22T15:34:50Z,2018-02-22T17:35:52Z,MERGED,True,1,0,1,https://github.com/aoshiken,REGMON: Free allocated memory from drakvuf_reg_keyhandle_path(),1,[],https://github.com/tklengyel/drakvuf/pull/345,https://github.com/disaykin,4,https://github.com/tklengyel/drakvuf/pull/345#issuecomment-367640160,,Thanks! I missed this leak),True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,347,2018-02-22T09:45:47Z,2018-02-26T21:47:20Z,2018-02-27T08:39:08Z,MERGED,True,307,45,2,https://github.com/disaykin,Add handling of file renames in FILETRACER plugin.,1,[],https://github.com/tklengyel/drakvuf/pull/347,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/347,"Also

Refactor traps initialization in FILETRACER plugin.
Take into account the RootDirectory value in a file path in the FILETRACER plugin.
Print syscall name in FILETRACER plugin.","Also

Refactor traps initialization in FILETRACER plugin.
Take into account the RootDirectory value in a file path in the FILETRACER plugin.
Print syscall name in FILETRACER plugin.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,347,2018-02-22T09:45:47Z,2018-02-26T21:47:20Z,2018-02-27T08:39:08Z,MERGED,True,307,45,2,https://github.com/disaykin,Add handling of file renames in FILETRACER plugin.,1,[],https://github.com/tklengyel/drakvuf/pull/347,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/347#issuecomment-368660382,"Also

Refactor traps initialization in FILETRACER plugin.
Take into account the RootDirectory value in a file path in the FILETRACER plugin.
Print syscall name in FILETRACER plugin.",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,347,2018-02-22T09:45:47Z,2018-02-26T21:47:20Z,2018-02-27T08:39:08Z,MERGED,True,307,45,2,https://github.com/disaykin,Add handling of file renames in FILETRACER plugin.,1,[],https://github.com/tklengyel/drakvuf/pull/347,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/347#issuecomment-368660388,"Also

Refactor traps initialization in FILETRACER plugin.
Take into account the RootDirectory value in a file path in the FILETRACER plugin.
Print syscall name in FILETRACER plugin.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,347,2018-02-22T09:45:47Z,2018-02-26T21:47:20Z,2018-02-27T08:39:08Z,MERGED,True,307,45,2,https://github.com/disaykin,Add handling of file renames in FILETRACER plugin.,1,[],https://github.com/tklengyel/drakvuf/pull/347,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/347#issuecomment-368662305,"Also

Refactor traps initialization in FILETRACER plugin.
Take into account the RootDirectory value in a file path in the FILETRACER plugin.
Print syscall name in FILETRACER plugin.",Thanks!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,349,2018-02-26T11:53:55Z,2018-02-26T14:49:07Z,2018-02-26T15:13:05Z,MERGED,True,2,2,1,https://github.com/disaykin,Fix invalid allocation of symbol array in symbols structure,1,[],https://github.com/tklengyel/drakvuf/pull/349,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/349,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,350,2018-02-26T15:50:09Z,2018-02-26T21:40:24Z,2018-02-27T08:39:41Z,MERGED,True,120,15,5,https://github.com/disaykin,Add possibility for trap only certain syscalls.,1,[],https://github.com/tklengyel/drakvuf/pull/350,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/350,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,350,2018-02-26T15:50:09Z,2018-02-26T21:40:24Z,2018-02-27T08:39:41Z,MERGED,True,120,15,5,https://github.com/disaykin,Add possibility for trap only certain syscalls.,1,[],https://github.com/tklengyel/drakvuf/pull/350,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/350#issuecomment-368637549,,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,350,2018-02-26T15:50:09Z,2018-02-26T21:40:24Z,2018-02-27T08:39:41Z,MERGED,True,120,15,5,https://github.com/disaykin,Add possibility for trap only certain syscalls.,1,[],https://github.com/tklengyel/drakvuf/pull/350,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/350#issuecomment-368637559,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,350,2018-02-26T15:50:09Z,2018-02-26T21:40:24Z,2018-02-27T08:39:41Z,MERGED,True,120,15,5,https://github.com/disaykin,Add possibility for trap only certain syscalls.,1,[],https://github.com/tklengyel/drakvuf/pull/350,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/350#issuecomment-368658236,,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,350,2018-02-26T15:50:09Z,2018-02-26T21:40:24Z,2018-02-27T08:39:41Z,MERGED,True,120,15,5,https://github.com/disaykin,Add possibility for trap only certain syscalls.,1,[],https://github.com/tklengyel/drakvuf/pull/350,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/350#issuecomment-368660261,,Thanks!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,351,2018-02-27T16:12:02Z,2018-02-28T20:26:14Z,2018-03-02T11:04:34Z,MERGED,True,79,80,6,https://github.com/disaykin, Trap NtQueryValueKey() in REGMON plugin,3,[],https://github.com/tklengyel/drakvuf/pull/351,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/351,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,351,2018-02-27T16:12:02Z,2018-02-28T20:26:14Z,2018-03-02T11:04:34Z,MERGED,True,79,80,6,https://github.com/disaykin, Trap NtQueryValueKey() in REGMON plugin,3,[],https://github.com/tklengyel/drakvuf/pull/351,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/351#issuecomment-369369364,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,351,2018-02-27T16:12:02Z,2018-02-28T20:26:14Z,2018-03-02T11:04:34Z,MERGED,True,79,80,6,https://github.com/disaykin, Trap NtQueryValueKey() in REGMON plugin,3,[],https://github.com/tklengyel/drakvuf/pull/351,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/351#issuecomment-369369383,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,351,2018-02-27T16:12:02Z,2018-02-28T20:26:14Z,2018-03-02T11:04:34Z,MERGED,True,79,80,6,https://github.com/disaykin, Trap NtQueryValueKey() in REGMON plugin,3,[],https://github.com/tklengyel/drakvuf/pull/351,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/351#issuecomment-369371395,,Thanks!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,353,2018-02-28T20:36:07Z,2018-02-28T20:36:48Z,2018-02-28T20:36:53Z,MERGED,True,1,1,1,https://github.com/tklengyel,Move Xen submodule to 4.9.1,1,[],https://github.com/tklengyel/drakvuf/pull/353,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/353,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,354,2018-03-06T10:54:05Z,2018-03-12T17:13:48Z,2018-03-13T08:25:59Z,MERGED,True,158,43,6,https://github.com/disaykin,Extract new or modified files from sandbox in FILEDELETE plugin.,3,[],https://github.com/tklengyel/drakvuf/pull/354,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/354,Save some metadata (only filename for now) for each extracted file.,Save some metadata (only filename for now) for each extracted file.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,354,2018-03-06T10:54:05Z,2018-03-12T17:13:48Z,2018-03-13T08:25:59Z,MERGED,True,158,43,6,https://github.com/disaykin,Extract new or modified files from sandbox in FILEDELETE plugin.,3,[],https://github.com/tklengyel/drakvuf/pull/354,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/354#issuecomment-370878655,Save some metadata (only filename for now) for each extracted file.,"Are any more metadata information is expected to be recorded? If not, I would be OK with just having the extracted file be named according to its in-guest naming.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,354,2018-03-06T10:54:05Z,2018-03-12T17:13:48Z,2018-03-13T08:25:59Z,MERGED,True,158,43,6,https://github.com/disaykin,Extract new or modified files from sandbox in FILEDELETE plugin.,3,[],https://github.com/tklengyel/drakvuf/pull/354,https://github.com/disaykin,3,https://github.com/tklengyel/drakvuf/pull/354#issuecomment-370881896,Save some metadata (only filename for now) for each extracted file.,File pathes is not unique unfortunately. The same file may be multiple times rewrited in one session.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,354,2018-03-06T10:54:05Z,2018-03-12T17:13:48Z,2018-03-13T08:25:59Z,MERGED,True,158,43,6,https://github.com/disaykin,Extract new or modified files from sandbox in FILEDELETE plugin.,3,[],https://github.com/tklengyel/drakvuf/pull/354,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/354#issuecomment-370882712,Save some metadata (only filename for now) for each extracted file.,True! Isn't the current naming convention then somewhat at risk of being overwritten? Maybe the extraction timestamp should be added to the current naming.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,354,2018-03-06T10:54:05Z,2018-03-12T17:13:48Z,2018-03-13T08:25:59Z,MERGED,True,158,43,6,https://github.com/disaykin,Extract new or modified files from sandbox in FILEDELETE plugin.,3,[],https://github.com/tklengyel/drakvuf/pull/354,https://github.com/disaykin,5,https://github.com/tklengyel/drakvuf/pull/354#issuecomment-370885296,Save some metadata (only filename for now) for each extracted file.,I think about sequense number. Time may be non unique also.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,354,2018-03-06T10:54:05Z,2018-03-12T17:13:48Z,2018-03-13T08:25:59Z,MERGED,True,158,43,6,https://github.com/disaykin,Extract new or modified files from sandbox in FILEDELETE plugin.,3,[],https://github.com/tklengyel/drakvuf/pull/354,https://github.com/disaykin,6,https://github.com/tklengyel/drakvuf/pull/354#issuecomment-370885493,Save some metadata (only filename for now) for each extracted file.,I can make PR with this addition.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,354,2018-03-06T10:54:05Z,2018-03-12T17:13:48Z,2018-03-13T08:25:59Z,MERGED,True,158,43,6,https://github.com/disaykin,Extract new or modified files from sandbox in FILEDELETE plugin.,3,[],https://github.com/tklengyel/drakvuf/pull/354,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/354#issuecomment-370894507,Save some metadata (only filename for now) for each extracted file.,"Yes, if you could add it to this PR I think that would be great!",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,354,2018-03-06T10:54:05Z,2018-03-12T17:13:48Z,2018-03-13T08:25:59Z,MERGED,True,158,43,6,https://github.com/disaykin,Extract new or modified files from sandbox in FILEDELETE plugin.,3,[],https://github.com/tklengyel/drakvuf/pull/354,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/354#issuecomment-371218746,Save some metadata (only filename for now) for each extracted file.,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,354,2018-03-06T10:54:05Z,2018-03-12T17:13:48Z,2018-03-13T08:25:59Z,MERGED,True,158,43,6,https://github.com/disaykin,Extract new or modified files from sandbox in FILEDELETE plugin.,3,[],https://github.com/tklengyel/drakvuf/pull/354,https://github.com/drakvuf-jenkins,9,https://github.com/tklengyel/drakvuf/pull/354#issuecomment-371218757,Save some metadata (only filename for now) for each extracted file.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,354,2018-03-06T10:54:05Z,2018-03-12T17:13:48Z,2018-03-13T08:25:59Z,MERGED,True,158,43,6,https://github.com/disaykin,Extract new or modified files from sandbox in FILEDELETE plugin.,3,[],https://github.com/tklengyel/drakvuf/pull/354,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/354#issuecomment-372386972,Save some metadata (only filename for now) for each extracted file.,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,354,2018-03-06T10:54:05Z,2018-03-12T17:13:48Z,2018-03-13T08:25:59Z,MERGED,True,158,43,6,https://github.com/disaykin,Extract new or modified files from sandbox in FILEDELETE plugin.,3,[],https://github.com/tklengyel/drakvuf/pull/354,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/354#issuecomment-372389445,Save some metadata (only filename for now) for each extracted file.,Thanks!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,356,2018-03-29T12:26:54Z,2018-03-30T19:15:30Z,2018-03-30T19:15:30Z,MERGED,True,118,55,16,https://github.com/nystilaps,Added full process name for Windows,2,[],https://github.com/tklengyel/drakvuf/pull/356,https://github.com/nystilaps,1,https://github.com/tklengyel/drakvuf/pull/356,"Under Windows process was identified by a fixed 8 letter name.
Changed drakvuf to use 'SeAuditProcessCreationInfo.ImageFileName.Name' with fallback to previous way.","Under Windows process was identified by a fixed 8 letter name.
Changed drakvuf to use 'SeAuditProcessCreationInfo.ImageFileName.Name' with fallback to previous way.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,356,2018-03-29T12:26:54Z,2018-03-30T19:15:30Z,2018-03-30T19:15:30Z,MERGED,True,118,55,16,https://github.com/nystilaps,Added full process name for Windows,2,[],https://github.com/tklengyel/drakvuf/pull/356,https://github.com/nystilaps,2,https://github.com/tklengyel/drakvuf/pull/356#issuecomment-377289381,"Under Windows process was identified by a fixed 8 letter name.
Changed drakvuf to use 'SeAuditProcessCreationInfo.ImageFileName.Name' with fallback to previous way.",Fixed code duplication and style.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,356,2018-03-29T12:26:54Z,2018-03-30T19:15:30Z,2018-03-30T19:15:30Z,MERGED,True,118,55,16,https://github.com/nystilaps,Added full process name for Windows,2,[],https://github.com/tklengyel/drakvuf/pull/356,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/356#issuecomment-377331241,"Under Windows process was identified by a fixed 8 letter name.
Changed drakvuf to use 'SeAuditProcessCreationInfo.ImageFileName.Name' with fallback to previous way.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,356,2018-03-29T12:26:54Z,2018-03-30T19:15:30Z,2018-03-30T19:15:30Z,MERGED,True,118,55,16,https://github.com/nystilaps,Added full process name for Windows,2,[],https://github.com/tklengyel/drakvuf/pull/356,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/356#issuecomment-377335022,"Under Windows process was identified by a fixed 8 letter name.
Changed drakvuf to use 'SeAuditProcessCreationInfo.ImageFileName.Name' with fallback to previous way.",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,356,2018-03-29T12:26:54Z,2018-03-30T19:15:30Z,2018-03-30T19:15:30Z,MERGED,True,118,55,16,https://github.com/nystilaps,Added full process name for Windows,2,[],https://github.com/tklengyel/drakvuf/pull/356,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/356#issuecomment-377374514,"Under Windows process was identified by a fixed 8 letter name.
Changed drakvuf to use 'SeAuditProcessCreationInfo.ImageFileName.Name' with fallback to previous way.","Looks like this PR is causing a regression with the injection when the user uses the -w option. The best solution would probably be to make wait_for_process_cb check only the last part of the string against the target process name, ie. after the last \ in the string.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,356,2018-03-29T12:26:54Z,2018-03-30T19:15:30Z,2018-03-30T19:15:30Z,MERGED,True,118,55,16,https://github.com/nystilaps,Added full process name for Windows,2,[],https://github.com/tklengyel/drakvuf/pull/356,https://github.com/nystilaps,6,https://github.com/tklengyel/drakvuf/pull/356#issuecomment-377492137,"Under Windows process was identified by a fixed 8 letter name.
Changed drakvuf to use 'SeAuditProcessCreationInfo.ImageFileName.Name' with fallback to previous way.",Proposed fix is implemented.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,356,2018-03-29T12:26:54Z,2018-03-30T19:15:30Z,2018-03-30T19:15:30Z,MERGED,True,118,55,16,https://github.com/nystilaps,Added full process name for Windows,2,[],https://github.com/tklengyel/drakvuf/pull/356,https://github.com/disaykin,7,https://github.com/tklengyel/drakvuf/pull/356#issuecomment-377502457,"Under Windows process was identified by a fixed 8 letter name.
Changed drakvuf to use 'SeAuditProcessCreationInfo.ImageFileName.Name' with fallback to previous way.",@nystilaps Use strrchr() function instead.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,356,2018-03-29T12:26:54Z,2018-03-30T19:15:30Z,2018-03-30T19:15:30Z,MERGED,True,118,55,16,https://github.com/nystilaps,Added full process name for Windows,2,[],https://github.com/tklengyel/drakvuf/pull/356,https://github.com/nystilaps,8,https://github.com/tklengyel/drakvuf/pull/356#issuecomment-377503037,"Under Windows process was identified by a fixed 8 letter name.
Changed drakvuf to use 'SeAuditProcessCreationInfo.ImageFileName.Name' with fallback to previous way.","@disaykin Ok, done.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,356,2018-03-29T12:26:54Z,2018-03-30T19:15:30Z,2018-03-30T19:15:30Z,MERGED,True,118,55,16,https://github.com/nystilaps,Added full process name for Windows,2,[],https://github.com/tklengyel/drakvuf/pull/356,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/356#issuecomment-377546315,"Under Windows process was identified by a fixed 8 letter name.
Changed drakvuf to use 'SeAuditProcessCreationInfo.ImageFileName.Name' with fallback to previous way.",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,356,2018-03-29T12:26:54Z,2018-03-30T19:15:30Z,2018-03-30T19:15:30Z,MERGED,True,118,55,16,https://github.com/nystilaps,Added full process name for Windows,2,[],https://github.com/tklengyel/drakvuf/pull/356,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/356#issuecomment-377550545,"Under Windows process was identified by a fixed 8 letter name.
Changed drakvuf to use 'SeAuditProcessCreationInfo.ImageFileName.Name' with fallback to previous way.","Almost there, but the string it is comparing against right now still starts with \, Testing 'calc.exe' against '\calc.exe'",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,356,2018-03-29T12:26:54Z,2018-03-30T19:15:30Z,2018-03-30T19:15:30Z,MERGED,True,118,55,16,https://github.com/nystilaps,Added full process name for Windows,2,[],https://github.com/tklengyel/drakvuf/pull/356,https://github.com/nystilaps,11,https://github.com/tklengyel/drakvuf/pull/356#issuecomment-377573417,"Under Windows process was identified by a fixed 8 letter name.
Changed drakvuf to use 'SeAuditProcessCreationInfo.ImageFileName.Name' with fallback to previous way.",Quick fix.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,356,2018-03-29T12:26:54Z,2018-03-30T19:15:30Z,2018-03-30T19:15:30Z,MERGED,True,118,55,16,https://github.com/nystilaps,Added full process name for Windows,2,[],https://github.com/tklengyel/drakvuf/pull/356,https://github.com/tklengyel,12,https://github.com/tklengyel/drakvuf/pull/356#issuecomment-377600477,"Under Windows process was identified by a fixed 8 letter name.
Changed drakvuf to use 'SeAuditProcessCreationInfo.ImageFileName.Name' with fallback to previous way.",Thanks!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,357,2018-03-30T18:20:08Z,2018-04-03T18:08:29Z,2018-04-03T19:04:48Z,MERGED,True,412,1,6,https://github.com/disaykin,Added PROCMON plugin for watching life cycle of the processes.,2,[],https://github.com/tklengyel/drakvuf/pull/357,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/357,"Currently supports only process creation via NtCreateUserProcess
and only on x64 arch.","Currently supports only process creation via NtCreateUserProcess
and only on x64 arch.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,357,2018-03-30T18:20:08Z,2018-04-03T18:08:29Z,2018-04-03T19:04:48Z,MERGED,True,412,1,6,https://github.com/disaykin,Added PROCMON plugin for watching life cycle of the processes.,2,[],https://github.com/tklengyel/drakvuf/pull/357,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/357#issuecomment-377588428,"Currently supports only process creation via NtCreateUserProcess
and only on x64 arch.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,357,2018-03-30T18:20:08Z,2018-04-03T18:08:29Z,2018-04-03T19:04:48Z,MERGED,True,412,1,6,https://github.com/disaykin,Added PROCMON plugin for watching life cycle of the processes.,2,[],https://github.com/tklengyel/drakvuf/pull/357,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/357#issuecomment-377601301,"Currently supports only process creation via NtCreateUserProcess
and only on x64 arch.",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,357,2018-03-30T18:20:08Z,2018-04-03T18:08:29Z,2018-04-03T19:04:48Z,MERGED,True,412,1,6,https://github.com/disaykin,Added PROCMON plugin for watching life cycle of the processes.,2,[],https://github.com/tklengyel/drakvuf/pull/357,https://github.com/disaykin,4,https://github.com/tklengyel/drakvuf/pull/357#issuecomment-378284529,"Currently supports only process creation via NtCreateUserProcess
and only on x64 arch.",Rebase + add support of Time field from last commit from @arkfps,True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,357,2018-03-30T18:20:08Z,2018-04-03T18:08:29Z,2018-04-03T19:04:48Z,MERGED,True,412,1,6,https://github.com/disaykin,Added PROCMON plugin for watching life cycle of the processes.,2,[],https://github.com/tklengyel/drakvuf/pull/357,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/357#issuecomment-378330090,"Currently supports only process creation via NtCreateUserProcess
and only on x64 arch.",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,357,2018-03-30T18:20:08Z,2018-04-03T18:08:29Z,2018-04-03T19:04:48Z,MERGED,True,412,1,6,https://github.com/disaykin,Added PROCMON plugin for watching life cycle of the processes.,2,[],https://github.com/tklengyel/drakvuf/pull/357,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/357#issuecomment-378344009,"Currently supports only process creation via NtCreateUserProcess
and only on x64 arch.",Looks good!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,358,2018-03-30T19:38:30Z,2018-03-30T20:14:46Z,2018-03-30T20:14:48Z,MERGED,True,1,1,1,https://github.com/tklengyel,Fix Coverity CID 188773,1,[],https://github.com/tklengyel/drakvuf/pull/358,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/358,Variable file_name_us has already been NULL-checked.,Variable file_name_us has already been NULL-checked.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,359,2018-03-30T19:42:12Z,2018-03-30T21:32:01Z,2018-03-30T21:32:04Z,MERGED,True,1,1,1,https://github.com/tklengyel,Bump version to 0.6,1,[],https://github.com/tklengyel/drakvuf/pull/359,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/359,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,359,2018-03-30T19:42:12Z,2018-03-30T21:32:01Z,2018-03-30T21:32:04Z,MERGED,True,1,1,1,https://github.com/tklengyel,Bump version to 0.6,1,[],https://github.com/tklengyel/drakvuf/pull/359,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/359#issuecomment-377618172,,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,361,2018-04-02T15:24:58Z,2018-04-03T14:26:36Z,2018-04-05T13:43:17Z,MERGED,True,147,93,13,https://github.com/psfrolov,Log current time in seconds and microseconds.,4,[],https://github.com/tklengyel/drakvuf/pull/361,https://github.com/psfrolov,1,https://github.com/tklengyel/drakvuf/pull/361,"Adds timestamps to logging statements so me can relate DRAKVUF-generated events with external ones (e.g., output from other tools).","Adds timestamps to logging statements so me can relate DRAKVUF-generated events with external ones (e.g., output from other tools).",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,361,2018-04-02T15:24:58Z,2018-04-03T14:26:36Z,2018-04-05T13:43:17Z,MERGED,True,147,93,13,https://github.com/psfrolov,Log current time in seconds and microseconds.,4,[],https://github.com/tklengyel/drakvuf/pull/361,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/361#issuecomment-377991280,"Adds timestamps to logging statements so me can relate DRAKVUF-generated events with external ones (e.g., output from other tools).",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,361,2018-04-02T15:24:58Z,2018-04-03T14:26:36Z,2018-04-05T13:43:17Z,MERGED,True,147,93,13,https://github.com/psfrolov,Log current time in seconds and microseconds.,4,[],https://github.com/tklengyel/drakvuf/pull/361,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/361#issuecomment-377991301,"Adds timestamps to logging statements so me can relate DRAKVUF-generated events with external ones (e.g., output from other tools).",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,361,2018-04-02T15:24:58Z,2018-04-03T14:26:36Z,2018-04-05T13:43:17Z,MERGED,True,147,93,13,https://github.com/psfrolov,Log current time in seconds and microseconds.,4,[],https://github.com/tklengyel/drakvuf/pull/361,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/361#issuecomment-377999682,"Adds timestamps to logging statements so me can relate DRAKVUF-generated events with external ones (e.g., output from other tools).",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,361,2018-04-02T15:24:58Z,2018-04-03T14:26:36Z,2018-04-05T13:43:17Z,MERGED,True,147,93,13,https://github.com/psfrolov,Log current time in seconds and microseconds.,4,[],https://github.com/tklengyel/drakvuf/pull/361,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/361#issuecomment-378018270,"Adds timestamps to logging statements so me can relate DRAKVUF-generated events with external ones (e.g., output from other tools).","It looks good, two small changes that I would like to request is that in OUTPUT_CSV don't include brackets around the timestamp, ie. no []. The other is to keep the plugin name as the first item printed for both output types.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,361,2018-04-02T15:24:58Z,2018-04-03T14:26:36Z,2018-04-05T13:43:17Z,MERGED,True,147,93,13,https://github.com/psfrolov,Log current time in seconds and microseconds.,4,[],https://github.com/tklengyel/drakvuf/pull/361,https://github.com/psfrolov,6,https://github.com/tklengyel/drakvuf/pull/361#issuecomment-378173563,"Adds timestamps to logging statements so me can relate DRAKVUF-generated events with external ones (e.g., output from other tools).","Yep, the brackets are excessive in CSV, in addition the separating commas are missing.
Regarding field order, my thought were that timestamp-first output is easier to scan by eyes, because timestamps are of fixed length contrary to plugin names. Is there practical reason to keep plugin name first?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,361,2018-04-02T15:24:58Z,2018-04-03T14:26:36Z,2018-04-05T13:43:17Z,MERGED,True,147,93,13,https://github.com/psfrolov,Log current time in seconds and microseconds.,4,[],https://github.com/tklengyel/drakvuf/pull/361,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/361#issuecomment-378269025,"Adds timestamps to logging statements so me can relate DRAKVUF-generated events with external ones (e.g., output from other tools).","Looks good, thanks!",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,362,2018-04-04T12:10:05Z,2018-04-04T15:54:03Z,2018-04-04T16:52:55Z,MERGED,True,140,121,1,https://github.com/disaykin,Deduplicate SYSCALL plugin win_cb functionality.,1,[],https://github.com/tklengyel/drakvuf/pull/362,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/362,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,362,2018-04-04T12:10:05Z,2018-04-04T15:54:03Z,2018-04-04T16:52:55Z,MERGED,True,140,121,1,https://github.com/disaykin,Deduplicate SYSCALL plugin win_cb functionality.,1,[],https://github.com/tklengyel/drakvuf/pull/362,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/362#issuecomment-378646423,,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,362,2018-04-04T12:10:05Z,2018-04-04T15:54:03Z,2018-04-04T16:52:55Z,MERGED,True,140,121,1,https://github.com/disaykin,Deduplicate SYSCALL plugin win_cb functionality.,1,[],https://github.com/tklengyel/drakvuf/pull/362,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/362#issuecomment-378646438,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,362,2018-04-04T12:10:05Z,2018-04-04T15:54:03Z,2018-04-04T16:52:55Z,MERGED,True,140,121,1,https://github.com/disaykin,Deduplicate SYSCALL plugin win_cb functionality.,1,[],https://github.com/tklengyel/drakvuf/pull/362,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/362#issuecomment-378648491,,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,363,2018-04-04T16:25:38Z,2018-04-04T17:49:22Z,2018-04-04T17:54:46Z,MERGED,True,3,1,1,https://github.com/tklengyel,Fix CID 189192,1,[],https://github.com/tklengyel/drakvuf/pull/363,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/363,Potential NULL-pointer dereference on wsc,Potential NULL-pointer dereference on wsc,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,363,2018-04-04T16:25:38Z,2018-04-04T17:49:22Z,2018-04-04T17:54:46Z,MERGED,True,3,1,1,https://github.com/tklengyel,Fix CID 189192,1,[],https://github.com/tklengyel/drakvuf/pull/363,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/363#issuecomment-378673713,Potential NULL-pointer dereference on wsc,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,363,2018-04-04T16:25:38Z,2018-04-04T17:49:22Z,2018-04-04T17:54:46Z,MERGED,True,3,1,1,https://github.com/tklengyel,Fix CID 189192,1,[],https://github.com/tklengyel/drakvuf/pull/363,https://github.com/disaykin,3,https://github.com/tklengyel/drakvuf/pull/363#issuecomment-378680323,Potential NULL-pointer dereference on wsc,"@tklengyel Hi, can you tell me, how I can check patches by coverity before PR.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,363,2018-04-04T16:25:38Z,2018-04-04T17:49:22Z,2018-04-04T17:54:46Z,MERGED,True,3,1,1,https://github.com/tklengyel,Fix CID 189192,1,[],https://github.com/tklengyel/drakvuf/pull/363,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/363#issuecomment-378687274,Potential NULL-pointer dereference on wsc,"@disaykin You can register for free at https://scan.coverity.com/ and then you create a staging branch in your repo and modify the Travis script to trigger Coverity on that branch. Once you have another branch you want to test, you just merge into your staging branch and push it into your repo and it will run automatically.",True,{'THUMBS_UP': ['https://github.com/disaykin']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,363,2018-04-04T16:25:38Z,2018-04-04T17:49:22Z,2018-04-04T17:54:46Z,MERGED,True,3,1,1,https://github.com/tklengyel,Fix CID 189192,1,[],https://github.com/tklengyel/drakvuf/pull/363,https://github.com/disaykin,5,https://github.com/tklengyel/drakvuf/pull/363#issuecomment-378688991,Potential NULL-pointer dereference on wsc,@tklengyel Thanks!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,364,2018-04-04T17:38:17Z,2018-04-04T17:49:56Z,2018-04-05T13:42:24Z,MERGED,True,1,1,1,https://github.com/psfrolov,Fix typo: TIMNE -> TIME.,1,[],https://github.com/tklengyel/drakvuf/pull/364,https://github.com/psfrolov,1,https://github.com/tklengyel/drakvuf/pull/364,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,366,2018-04-06T19:45:56Z,2018-04-06T23:04:09Z,2018-04-12T16:24:33Z,MERGED,True,2,23,1,https://github.com/disaykin,PROCMON: Fix CommandLine and ImagePathName extracting,1,[],https://github.com/tklengyel/drakvuf/pull/366,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/366,"CommandLine and ImagePathName is UNICODE_STRING, not PUNICODE_STRING.","CommandLine and ImagePathName is UNICODE_STRING, not PUNICODE_STRING.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,366,2018-04-06T19:45:56Z,2018-04-06T23:04:09Z,2018-04-12T16:24:33Z,MERGED,True,2,23,1,https://github.com/disaykin,PROCMON: Fix CommandLine and ImagePathName extracting,1,[],https://github.com/tklengyel/drakvuf/pull/366,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/366#issuecomment-379405001,"CommandLine and ImagePathName is UNICODE_STRING, not PUNICODE_STRING.",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,366,2018-04-06T19:45:56Z,2018-04-06T23:04:09Z,2018-04-12T16:24:33Z,MERGED,True,2,23,1,https://github.com/disaykin,PROCMON: Fix CommandLine and ImagePathName extracting,1,[],https://github.com/tklengyel/drakvuf/pull/366,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/366#issuecomment-379405006,"CommandLine and ImagePathName is UNICODE_STRING, not PUNICODE_STRING.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,367,2018-04-09T09:08:36Z,2018-04-12T18:13:22Z,2018-04-12T18:13:22Z,MERGED,True,77,31,11,https://github.com/nystilaps,Added printing injection info,1,[],https://github.com/tklengyel/drakvuf/pull/367,https://github.com/nystilaps,1,https://github.com/tklengyel/drakvuf/pull/367,Added printing injection info on injection,Added printing injection info on injection,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,367,2018-04-09T09:08:36Z,2018-04-12T18:13:22Z,2018-04-12T18:13:22Z,MERGED,True,77,31,11,https://github.com/nystilaps,Added printing injection info,1,[],https://github.com/tklengyel/drakvuf/pull/367,https://github.com/nystilaps,2,https://github.com/tklengyel/drakvuf/pull/367#issuecomment-380103807,Added printing injection info on injection,Seems to be working.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,367,2018-04-09T09:08:36Z,2018-04-12T18:13:22Z,2018-04-12T18:13:22Z,MERGED,True,77,31,11,https://github.com/nystilaps,Added printing injection info,1,[],https://github.com/tklengyel/drakvuf/pull/367,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/367#issuecomment-380130659,Added printing injection info on injection,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,367,2018-04-09T09:08:36Z,2018-04-12T18:13:22Z,2018-04-12T18:13:22Z,MERGED,True,77,31,11,https://github.com/nystilaps,Added printing injection info,1,[],https://github.com/tklengyel/drakvuf/pull/367,https://github.com/drakvuf-jenkins,4,https://github.com/tklengyel/drakvuf/pull/367#issuecomment-380130674,Added printing injection info on injection,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,367,2018-04-09T09:08:36Z,2018-04-12T18:13:22Z,2018-04-12T18:13:22Z,MERGED,True,77,31,11,https://github.com/nystilaps,Added printing injection info,1,[],https://github.com/tklengyel/drakvuf/pull/367,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/367#issuecomment-380136445,Added printing injection info on injection,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,367,2018-04-09T09:08:36Z,2018-04-12T18:13:22Z,2018-04-12T18:13:22Z,MERGED,True,77,31,11,https://github.com/nystilaps,Added printing injection info,1,[],https://github.com/tklengyel/drakvuf/pull/367,https://github.com/nystilaps,6,https://github.com/tklengyel/drakvuf/pull/367#issuecomment-380163213,Added printing injection info on injection,"I do not have access to ""ci.drakvuf.com:8080""
Could you tell me what is the problem with the build?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,367,2018-04-09T09:08:36Z,2018-04-12T18:13:22Z,2018-04-12T18:13:22Z,MERGED,True,77,31,11,https://github.com/nystilaps,Added printing injection info,1,[],https://github.com/tklengyel/drakvuf/pull/367,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/367#issuecomment-380268398,Added printing injection info on injection,"Making all in plugins
make[3]: Entering directory '/var/lib/jenkins/workspace/DRAKVUF/src/plugins'
make[3]: *** No rule to make target '../print_util.c', needed by '../print_util.lo'.  Stop.
make[3]: Leaving directory '/var/lib/jenkins/workspace/DRAKVUF/src/plugins'
Makefile:671: recipe for target 'all-recursive' failed
make[2]: *** [all-recursive] Error 1
make[2]: Leaving directory '/var/lib/jenkins/workspace/DRAKVUF/src'
Makefile:507: recipe for target 'all-recursive' failed
make[1]: *** [all-recursive] Error 1
make[1]: Leaving directory '/var/lib/jenkins/workspace/DRAKVUF'
Makefile:438: recipe for target 'all' failed
make: *** [all] Error 2",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,367,2018-04-09T09:08:36Z,2018-04-12T18:13:22Z,2018-04-12T18:13:22Z,MERGED,True,77,31,11,https://github.com/nystilaps,Added printing injection info,1,[],https://github.com/tklengyel/drakvuf/pull/367,https://github.com/nystilaps,8,https://github.com/tklengyel/drakvuf/pull/367#issuecomment-380445972,Added printing injection info on injection,"Seems fixed.
Added printing of injected process pid and tid.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,367,2018-04-09T09:08:36Z,2018-04-12T18:13:22Z,2018-04-12T18:13:22Z,MERGED,True,77,31,11,https://github.com/nystilaps,Added printing injection info,1,[],https://github.com/tklengyel/drakvuf/pull/367,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/367#issuecomment-380467681,Added printing injection info on injection,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,367,2018-04-09T09:08:36Z,2018-04-12T18:13:22Z,2018-04-12T18:13:22Z,MERGED,True,77,31,11,https://github.com/nystilaps,Added printing injection info,1,[],https://github.com/tklengyel/drakvuf/pull/367,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/367#issuecomment-380470361,Added printing injection info on injection,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,367,2018-04-09T09:08:36Z,2018-04-12T18:13:22Z,2018-04-12T18:13:22Z,MERGED,True,77,31,11,https://github.com/nystilaps,Added printing injection info,1,[],https://github.com/tklengyel/drakvuf/pull/367,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/367#issuecomment-380476232,Added printing injection info on injection,"@nystilaps This looks good now, although I will probably just merge print_util.c into libdrakvuf at some point in the future. If you feel like you could do that in this PR but I'm OK with merging as-is for now.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,367,2018-04-09T09:08:36Z,2018-04-12T18:13:22Z,2018-04-12T18:13:22Z,MERGED,True,77,31,11,https://github.com/nystilaps,Added printing injection info,1,[],https://github.com/tklengyel/drakvuf/pull/367,https://github.com/nystilaps,12,https://github.com/tklengyel/drakvuf/pull/367#issuecomment-380717303,Added printing injection info on injection,"Please, merge it as-is.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,370,2018-04-12T17:48:04Z,2018-04-17T16:00:42Z,2018-04-17T16:07:12Z,MERGED,True,187,11,4,https://github.com/disaykin,PROCMON: Print newly created process pid,5,[],https://github.com/tklengyel/drakvuf/pull/370,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/370,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,370,2018-04-12T17:48:04Z,2018-04-17T16:00:42Z,2018-04-17T16:07:12Z,MERGED,True,187,11,4,https://github.com/disaykin,PROCMON: Print newly created process pid,5,[],https://github.com/tklengyel/drakvuf/pull/370,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/370#issuecomment-380927299,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,370,2018-04-12T17:48:04Z,2018-04-17T16:00:42Z,2018-04-17T16:07:12Z,MERGED,True,187,11,4,https://github.com/disaykin,PROCMON: Print newly created process pid,5,[],https://github.com/tklengyel/drakvuf/pull/370,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/370#issuecomment-380935858,,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,370,2018-04-12T17:48:04Z,2018-04-17T16:00:42Z,2018-04-17T16:07:12Z,MERGED,True,187,11,4,https://github.com/disaykin,PROCMON: Print newly created process pid,5,[],https://github.com/tklengyel/drakvuf/pull/370,https://github.com/disaykin,4,https://github.com/tklengyel/drakvuf/pull/370#issuecomment-381897204,,@tklengyel Should I make any further improvements?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,370,2018-04-12T17:48:04Z,2018-04-17T16:00:42Z,2018-04-17T16:07:12Z,MERGED,True,187,11,4,https://github.com/disaykin,PROCMON: Print newly created process pid,5,[],https://github.com/tklengyel/drakvuf/pull/370,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/370#issuecomment-382047231,,Looks good to me!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,371,2018-04-12T18:45:13Z,2018-04-12T20:15:08Z,2018-04-12T20:15:11Z,MERGED,True,85,127,22,https://github.com/tklengyel,Add timestamp to drakvuf_trap_info,1,[],https://github.com/tklengyel/drakvuf/pull/371,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/371,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,371,2018-04-12T18:45:13Z,2018-04-12T20:15:08Z,2018-04-12T20:15:11Z,MERGED,True,85,127,22,https://github.com/tklengyel,Add timestamp to drakvuf_trap_info,1,[],https://github.com/tklengyel/drakvuf/pull/371,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/371#issuecomment-380908492,,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,372,2018-04-12T20:16:50Z,2018-04-12T20:33:26Z,2018-04-12T20:33:30Z,MERGED,True,0,1,1,https://github.com/tklengyel,Remove unused output format,1,[],https://github.com/tklengyel/drakvuf/pull/372,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/372,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,372,2018-04-12T20:16:50Z,2018-04-12T20:33:26Z,2018-04-12T20:33:30Z,MERGED,True,0,1,1,https://github.com/tklengyel,Remove unused output format,1,[],https://github.com/tklengyel/drakvuf/pull/372,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/372#issuecomment-380933671,,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,382,2018-04-17T09:30:02Z,2018-04-18T04:05:50Z,2018-04-18T08:18:25Z,MERGED,True,42,3,2,https://github.com/disaykin,Procmon traces process termination,1,[],https://github.com/tklengyel/drakvuf/pull/382,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/382,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,382,2018-04-17T09:30:02Z,2018-04-18T04:05:50Z,2018-04-18T08:18:25Z,MERGED,True,42,3,2,https://github.com/disaykin,Procmon traces process termination,1,[],https://github.com/tklengyel/drakvuf/pull/382,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/382#issuecomment-382047486,,Looks like this will need to be rebased. Might as well squash the commits too.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,382,2018-04-17T09:30:02Z,2018-04-18T04:05:50Z,2018-04-18T08:18:25Z,MERGED,True,42,3,2,https://github.com/disaykin,Procmon traces process termination,1,[],https://github.com/tklengyel/drakvuf/pull/382,https://github.com/disaykin,3,https://github.com/tklengyel/drakvuf/pull/382#issuecomment-382050663,,I rebased the branch to the master.,True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,382,2018-04-17T09:30:02Z,2018-04-18T04:05:50Z,2018-04-18T08:18:25Z,MERGED,True,42,3,2,https://github.com/disaykin,Procmon traces process termination,1,[],https://github.com/tklengyel/drakvuf/pull/382,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/382#issuecomment-382245719,,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,382,2018-04-17T09:30:02Z,2018-04-18T04:05:50Z,2018-04-18T08:18:25Z,MERGED,True,42,3,2,https://github.com/disaykin,Procmon traces process termination,1,[],https://github.com/tklengyel/drakvuf/pull/382,https://github.com/drakvuf-jenkins,5,https://github.com/tklengyel/drakvuf/pull/382#issuecomment-382245726,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,382,2018-04-17T09:30:02Z,2018-04-18T04:05:50Z,2018-04-18T08:18:25Z,MERGED,True,42,3,2,https://github.com/disaykin,Procmon traces process termination,1,[],https://github.com/tklengyel/drakvuf/pull/382,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/382#issuecomment-382249875,,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,383,2018-04-17T12:01:29Z,2018-04-18T13:25:38Z,2018-04-18T15:52:15Z,MERGED,True,21,56,1,https://github.com/disaykin,Exmon plugin refactored: Use trap's process data info.,1,[],https://github.com/tklengyel/drakvuf/pull/383,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/383,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,383,2018-04-17T12:01:29Z,2018-04-18T13:25:38Z,2018-04-18T15:52:15Z,MERGED,True,21,56,1,https://github.com/disaykin,Exmon plugin refactored: Use trap's process data info.,1,[],https://github.com/tklengyel/drakvuf/pull/383,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/383#issuecomment-382252032,,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,383,2018-04-17T12:01:29Z,2018-04-18T13:25:38Z,2018-04-18T15:52:15Z,MERGED,True,21,56,1,https://github.com/disaykin,Exmon plugin refactored: Use trap's process data info.,1,[],https://github.com/tklengyel/drakvuf/pull/383,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/383#issuecomment-382252035,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,384,2018-04-18T15:58:43Z,2018-04-23T13:57:36Z,2018-04-24T08:47:47Z,MERGED,True,269,32,16,https://github.com/disaykin,Added KeyValue output format,13,[],https://github.com/tklengyel/drakvuf/pull/384,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/384,"Existing output formats does not automatic parser friendly.
Default format is multi-line. The CSV format is inconvenient for writing parsing rules.","Existing output formats does not automatic parser friendly.
Default format is multi-line. The CSV format is inconvenient for writing parsing rules.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,384,2018-04-18T15:58:43Z,2018-04-23T13:57:36Z,2018-04-24T08:47:47Z,MERGED,True,269,32,16,https://github.com/disaykin,Added KeyValue output format,13,[],https://github.com/tklengyel/drakvuf/pull/384,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/384#issuecomment-382438244,"Existing output formats does not automatic parser friendly.
Default format is multi-line. The CSV format is inconvenient for writing parsing rules.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,384,2018-04-18T15:58:43Z,2018-04-23T13:57:36Z,2018-04-24T08:47:47Z,MERGED,True,269,32,16,https://github.com/disaykin,Added KeyValue output format,13,[],https://github.com/tklengyel/drakvuf/pull/384,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/384#issuecomment-382441443,"Existing output formats does not automatic parser friendly.
Default format is multi-line. The CSV format is inconvenient for writing parsing rules.",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,384,2018-04-18T15:58:43Z,2018-04-23T13:57:36Z,2018-04-24T08:47:47Z,MERGED,True,269,32,16,https://github.com/disaykin,Added KeyValue output format,13,[],https://github.com/tklengyel/drakvuf/pull/384,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/384#issuecomment-382447289,"Existing output formats does not automatic parser friendly.
Default format is multi-line. The CSV format is inconvenient for writing parsing rules.",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,385,2018-04-19T16:56:54Z,2018-04-19T17:19:04Z,2018-04-19T17:19:07Z,MERGED,True,1,1,1,https://github.com/tklengyel,Update LibVMI,1,[],https://github.com/tklengyel/drakvuf/pull/385,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/385,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,385,2018-04-19T16:56:54Z,2018-04-19T17:19:04Z,2018-04-19T17:19:07Z,MERGED,True,1,1,1,https://github.com/tklengyel,Update LibVMI,1,[],https://github.com/tklengyel/drakvuf/pull/385,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/385#issuecomment-382809868,,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,386,2018-04-20T14:25:32Z,2018-05-04T16:37:33Z,2018-06-09T08:22:06Z,CLOSED,False,102,56,9,https://github.com/disaykin,Normalize file pathes,1,[],https://github.com/tklengyel/drakvuf/pull/386,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/386,"There are several ways to represent file paths in Windows.
I try to reduce them to one intermediate format.","There are several ways to represent file paths in Windows.
I try to reduce them to one intermediate format.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,386,2018-04-20T14:25:32Z,2018-05-04T16:37:33Z,2018-06-09T08:22:06Z,CLOSED,False,102,56,9,https://github.com/disaykin,Normalize file pathes,1,[],https://github.com/tklengyel/drakvuf/pull/386,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/386#issuecomment-383113147,"There are several ways to represent file paths in Windows.
I try to reduce them to one intermediate format.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,386,2018-04-20T14:25:32Z,2018-05-04T16:37:33Z,2018-06-09T08:22:06Z,CLOSED,False,102,56,9,https://github.com/disaykin,Normalize file pathes,1,[],https://github.com/tklengyel/drakvuf/pull/386,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/386#issuecomment-383153533,"There are several ways to represent file paths in Windows.
I try to reduce them to one intermediate format.",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,389,2018-04-27T16:26:18Z,2018-04-27T19:16:29Z,2018-04-28T17:25:55Z,MERGED,True,2,1,1,https://github.com/disaykin,Escape special characters in cmdline parameter in PROCMON plugin,1,[],https://github.com/tklengyel/drakvuf/pull/389,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/389,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,389,2018-04-27T16:26:18Z,2018-04-27T19:16:29Z,2018-04-28T17:25:55Z,MERGED,True,2,1,1,https://github.com/disaykin,Escape special characters in cmdline parameter in PROCMON plugin,1,[],https://github.com/tklengyel/drakvuf/pull/389,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/389#issuecomment-385066216,,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,389,2018-04-27T16:26:18Z,2018-04-27T19:16:29Z,2018-04-28T17:25:55Z,MERGED,True,2,1,1,https://github.com/disaykin,Escape special characters in cmdline parameter in PROCMON plugin,1,[],https://github.com/tklengyel/drakvuf/pull/389,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/389#issuecomment-385066221,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,390,2018-04-28T17:26:49Z,2018-05-04T17:51:59Z,2018-05-04T17:55:10Z,MERGED,True,252,106,15,https://github.com/disaykin,Print CurrentDirectory and DllPath for created processes in PROCMON plugin,4,[],https://github.com/tklengyel/drakvuf/pull/390,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/390,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,390,2018-04-28T17:26:49Z,2018-05-04T17:51:59Z,2018-05-04T17:55:10Z,MERGED,True,252,106,15,https://github.com/disaykin,Print CurrentDirectory and DllPath for created processes in PROCMON plugin,4,[],https://github.com/tklengyel/drakvuf/pull/390,https://github.com/disaykin,2,https://github.com/tklengyel/drakvuf/pull/390#issuecomment-386300406,,Win-files is abstracted into the OS wrapper.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,390,2018-04-28T17:26:49Z,2018-05-04T17:51:59Z,2018-05-04T17:55:10Z,MERGED,True,252,106,15,https://github.com/disaykin,Print CurrentDirectory and DllPath for created processes in PROCMON plugin,4,[],https://github.com/tklengyel/drakvuf/pull/390,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/390#issuecomment-386369038,,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,390,2018-04-28T17:26:49Z,2018-05-04T17:51:59Z,2018-05-04T17:55:10Z,MERGED,True,252,106,15,https://github.com/disaykin,Print CurrentDirectory and DllPath for created processes in PROCMON plugin,4,[],https://github.com/tklengyel/drakvuf/pull/390,https://github.com/drakvuf-jenkins,4,https://github.com/tklengyel/drakvuf/pull/390#issuecomment-386369051,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,390,2018-04-28T17:26:49Z,2018-05-04T17:51:59Z,2018-05-04T17:55:10Z,MERGED,True,252,106,15,https://github.com/disaykin,Print CurrentDirectory and DllPath for created processes in PROCMON plugin,4,[],https://github.com/tklengyel/drakvuf/pull/390,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/390#issuecomment-386497348,,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,390,2018-04-28T17:26:49Z,2018-05-04T17:51:59Z,2018-05-04T17:55:10Z,MERGED,True,252,106,15,https://github.com/disaykin,Print CurrentDirectory and DllPath for created processes in PROCMON plugin,4,[],https://github.com/tklengyel/drakvuf/pull/390,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/390#issuecomment-386627764,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,390,2018-04-28T17:26:49Z,2018-05-04T17:51:59Z,2018-05-04T17:55:10Z,MERGED,True,252,106,15,https://github.com/disaykin,Print CurrentDirectory and DllPath for created processes in PROCMON plugin,4,[],https://github.com/tklengyel/drakvuf/pull/390,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/390#issuecomment-386673670,,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,391,2018-04-28T17:27:20Z,2018-05-04T17:52:14Z,2018-05-04T17:53:55Z,MERGED,True,65,67,6,https://github.com/disaykin,Add possibility of setting CurrentDirectory for injected process,1,[],https://github.com/tklengyel/drakvuf/pull/391,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/391,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,391,2018-04-28T17:27:20Z,2018-05-04T17:52:14Z,2018-05-04T17:53:55Z,MERGED,True,65,67,6,https://github.com/disaykin,Add possibility of setting CurrentDirectory for injected process,1,[],https://github.com/tklengyel/drakvuf/pull/391,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/391#issuecomment-385222990,,Does this work for both types of injection?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,391,2018-04-28T17:27:20Z,2018-05-04T17:52:14Z,2018-05-04T17:53:55Z,MERGED,True,65,67,6,https://github.com/disaykin,Add possibility of setting CurrentDirectory for injected process,1,[],https://github.com/tklengyel/drakvuf/pull/391,https://github.com/disaykin,3,https://github.com/tklengyel/drakvuf/pull/391#issuecomment-385237710,,"No, currently only on createprocess only. And only on amd64. I plan add x86 support on june. ShellExecuteEx has possibility for setting CWD too, but i currently does not have enough time for adding it.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,391,2018-04-28T17:27:20Z,2018-05-04T17:52:14Z,2018-05-04T17:53:55Z,MERGED,True,65,67,6,https://github.com/disaykin,Add possibility of setting CurrentDirectory for injected process,1,[],https://github.com/tklengyel/drakvuf/pull/391,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/391#issuecomment-385272617,,"In that case injection should not be performed if the settings are not correct and cwd is set, ie. an error should be printed for the user instead of just silently continuing.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,391,2018-04-28T17:27:20Z,2018-05-04T17:52:14Z,2018-05-04T17:53:55Z,MERGED,True,65,67,6,https://github.com/disaykin,Add possibility of setting CurrentDirectory for injected process,1,[],https://github.com/tklengyel/drakvuf/pull/391,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/391#issuecomment-385274246,,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,391,2018-04-28T17:27:20Z,2018-05-04T17:52:14Z,2018-05-04T17:53:55Z,MERGED,True,65,67,6,https://github.com/disaykin,Add possibility of setting CurrentDirectory for injected process,1,[],https://github.com/tklengyel/drakvuf/pull/391,https://github.com/drakvuf-jenkins,6,https://github.com/tklengyel/drakvuf/pull/391#issuecomment-385274250,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,391,2018-04-28T17:27:20Z,2018-05-04T17:52:14Z,2018-05-04T17:53:55Z,MERGED,True,65,67,6,https://github.com/disaykin,Add possibility of setting CurrentDirectory for injected process,1,[],https://github.com/tklengyel/drakvuf/pull/391,https://github.com/disaykin,7,https://github.com/tklengyel/drakvuf/pull/391#issuecomment-385275712,,"Yes, it will be more correct behavior.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,391,2018-04-28T17:27:20Z,2018-05-04T17:52:14Z,2018-05-04T17:53:55Z,MERGED,True,65,67,6,https://github.com/disaykin,Add possibility of setting CurrentDirectory for injected process,1,[],https://github.com/tklengyel/drakvuf/pull/391,https://github.com/disaykin,8,https://github.com/tklengyel/drakvuf/pull/391#issuecomment-385280818,,I implement this feature for x86 case and for shellexecute injection method. But these changes are very poorly tested.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,391,2018-04-28T17:27:20Z,2018-05-04T17:52:14Z,2018-05-04T17:53:55Z,MERGED,True,65,67,6,https://github.com/disaykin,Add possibility of setting CurrentDirectory for injected process,1,[],https://github.com/tklengyel/drakvuf/pull/391,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/391#issuecomment-385510274,,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,391,2018-04-28T17:27:20Z,2018-05-04T17:52:14Z,2018-05-04T17:53:55Z,MERGED,True,65,67,6,https://github.com/disaykin,Add possibility of setting CurrentDirectory for injected process,1,[],https://github.com/tklengyel/drakvuf/pull/391,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/391#issuecomment-385514792,,"@disaykin Yea, this breaks injection for x86 Windows.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,391,2018-04-28T17:27:20Z,2018-05-04T17:52:14Z,2018-05-04T17:53:55Z,MERGED,True,65,67,6,https://github.com/disaykin,Add possibility of setting CurrentDirectory for injected process,1,[],https://github.com/tklengyel/drakvuf/pull/391,https://github.com/disaykin,11,https://github.com/tklengyel/drakvuf/pull/391#issuecomment-386657749,,"@tklengyel I could not test this patch on 32bit. I have installed win7-sp1-x86 but I could not get the drakvuf program to work with this vm. ""Failed to find a known version of Windows, the Rekall Profile may be incorrect for this VM or the version of Windows is not supported!"". Possibly I incorrectly install the system, because vmi-win-guid prints nothing, rekall fetch fetches profile unsupported by drakvuf (absent $STRUCTS key), so I get rekall profile from rekall-profiles repository. But it contains unsupported by drakvuf value in ProfileClass (simply ""Nt"", I replace it by ""Ntkrnlmp"").",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,391,2018-04-28T17:27:20Z,2018-05-04T17:52:14Z,2018-05-04T17:53:55Z,MERGED,True,65,67,6,https://github.com/disaykin,Add possibility of setting CurrentDirectory for injected process,1,[],https://github.com/tklengyel/drakvuf/pull/391,https://github.com/tklengyel,12,https://github.com/tklengyel/drakvuf/pull/391#issuecomment-386660206,,Unfortunately I can't merge this while it causes regressions. I'm not sure what is the issue with your x86 installation either. Some of the Rekall profile issues have been because it now needs python3 to work properly to parse the pdb.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,391,2018-04-28T17:27:20Z,2018-05-04T17:52:14Z,2018-05-04T17:53:55Z,MERGED,True,65,67,6,https://github.com/disaykin,Add possibility of setting CurrentDirectory for injected process,1,[],https://github.com/tklengyel/drakvuf/pull/391,https://github.com/disaykin,13,https://github.com/tklengyel/drakvuf/pull/391#issuecomment-386673478,,I throw error in x86 case for now.,True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,392,2018-04-29T05:09:30Z,2018-04-29T18:50:54Z,2018-04-29T18:50:58Z,MERGED,True,37,0,1,https://github.com/tklengyel,Add script to fix-up Linux Rekall profiles,1,[],https://github.com/tklengyel/drakvuf/pull/392,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/392,"Rekall generates profiles for kernels 4.13+ with task_struct missing elements. Running this script on the profile will fix-it up.
Script originally from @mbushou in https://github.com/google/rekall/issues/337","Rekall generates profiles for kernels 4.13+ with task_struct missing elements. Running this script on the profile will fix-it up.
Script originally from @mbushou in https://github.com/google/rekall/issues/337",True,{'THUMBS_UP': ['https://github.com/mbushou']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,393,2018-05-01T15:21:25Z,2018-05-01T18:09:21Z,2018-05-01T18:09:24Z,MERGED,True,25,19,6,https://github.com/tklengyel,libdrakvuf: Windows registry functions belong in OS interface,1,[],https://github.com/tklengyel/drakvuf/pull/393,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/393,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,396,2018-05-04T17:06:05Z,2018-05-28T18:00:12Z,2018-05-28T18:00:12Z,MERGED,True,43,7,2,https://github.com/nystilaps,Inject prints program and arguments separately,2,[],https://github.com/tklengyel/drakvuf/pull/396,https://github.com/nystilaps,1,https://github.com/tklengyel/drakvuf/pull/396,Inject prints program and arguments separately,Inject prints program and arguments separately,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,396,2018-05-04T17:06:05Z,2018-05-28T18:00:12Z,2018-05-28T18:00:12Z,MERGED,True,43,7,2,https://github.com/nystilaps,Inject prints program and arguments separately,2,[],https://github.com/tklengyel/drakvuf/pull/396,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/396#issuecomment-386665471,Inject prints program and arguments separately,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,396,2018-05-04T17:06:05Z,2018-05-28T18:00:12Z,2018-05-28T18:00:12Z,MERGED,True,43,7,2,https://github.com/nystilaps,Inject prints program and arguments separately,2,[],https://github.com/tklengyel/drakvuf/pull/396,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/396#issuecomment-386673756,Inject prints program and arguments separately,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,396,2018-05-04T17:06:05Z,2018-05-28T18:00:12Z,2018-05-28T18:00:12Z,MERGED,True,43,7,2,https://github.com/nystilaps,Inject prints program and arguments separately,2,[],https://github.com/tklengyel/drakvuf/pull/396,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/396#issuecomment-386685987,Inject prints program and arguments separately,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,396,2018-05-04T17:06:05Z,2018-05-28T18:00:12Z,2018-05-28T18:00:12Z,MERGED,True,43,7,2,https://github.com/nystilaps,Inject prints program and arguments separately,2,[],https://github.com/tklengyel/drakvuf/pull/396,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/396#issuecomment-386688047,Inject prints program and arguments separately,Care to provide an example where this would trigger?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,396,2018-05-04T17:06:05Z,2018-05-28T18:00:12Z,2018-05-28T18:00:12Z,MERGED,True,43,7,2,https://github.com/nystilaps,Inject prints program and arguments separately,2,[],https://github.com/tklengyel/drakvuf/pull/396,https://github.com/nystilaps,6,https://github.com/tklengyel/drakvuf/pull/396#issuecomment-386987860,Inject prints program and arguments separately,"When we run a program with parameters in VM.
For example opening a .PDF / .DOCX document or running a program with several arguments.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,396,2018-05-04T17:06:05Z,2018-05-28T18:00:12Z,2018-05-28T18:00:12Z,MERGED,True,43,7,2,https://github.com/nystilaps,Inject prints program and arguments separately,2,[],https://github.com/tklengyel/drakvuf/pull/396,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/396#issuecomment-387100643,Inject prints program and arguments separately,"@nystilaps I understand the concept but please provide an actual example. Looking at the string parsing code is hard to understand without knowing what you are trying to parse, so I can't tell whether the parsing code is robust or will only work for your specific input.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,396,2018-05-04T17:06:05Z,2018-05-28T18:00:12Z,2018-05-28T18:00:12Z,MERGED,True,43,7,2,https://github.com/nystilaps,Inject prints program and arguments separately,2,[],https://github.com/tklengyel/drakvuf/pull/396,https://github.com/nystilaps,8,https://github.com/tklengyel/drakvuf/pull/396#issuecomment-387436374,Inject prints program and arguments separately,"Something like this:
""C:\Program Files (x86)\Microsoft Office\Office12\WINWORD.EXE"" ""C:\Program Files (x86)\Microsoft Office\Office12\Document.doc""
FILE:""C:\Program Files (x86)\Microsoft Office\Office12\WINWORD.EXE"" 
ARGUMENTS:""\""C:\\Program Files (x86)\\Microsoft Office\\Office12\\Document.doc\""""",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,396,2018-05-04T17:06:05Z,2018-05-28T18:00:12Z,2018-05-28T18:00:12Z,MERGED,True,43,7,2,https://github.com/nystilaps,Inject prints program and arguments separately,2,[],https://github.com/tklengyel/drakvuf/pull/396,https://github.com/nystilaps,9,https://github.com/tklengyel/drakvuf/pull/396#issuecomment-388780770,Inject prints program and arguments separately,How is it going?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,396,2018-05-04T17:06:05Z,2018-05-28T18:00:12Z,2018-05-28T18:00:12Z,MERGED,True,43,7,2,https://github.com/nystilaps,Inject prints program and arguments separately,2,[],https://github.com/tklengyel/drakvuf/pull/396,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/396#issuecomment-389934116,Inject prints program and arguments separately,I would like it a lot better if you used g_strsplit (https://developer.gnome.org/glib/stable/glib-String-Utility-Functions.html#g-strsplit) instead of a custom implementation.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,396,2018-05-04T17:06:05Z,2018-05-28T18:00:12Z,2018-05-28T18:00:12Z,MERGED,True,43,7,2,https://github.com/nystilaps,Inject prints program and arguments separately,2,[],https://github.com/tklengyel/drakvuf/pull/396,https://github.com/nystilaps,11,https://github.com/tklengyel/drakvuf/pull/396#issuecomment-392003211,Inject prints program and arguments separately,"Ok, I will try to use it instead.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,396,2018-05-04T17:06:05Z,2018-05-28T18:00:12Z,2018-05-28T18:00:12Z,MERGED,True,43,7,2,https://github.com/nystilaps,Inject prints program and arguments separately,2,[],https://github.com/tklengyel/drakvuf/pull/396,https://github.com/nystilaps,12,https://github.com/tklengyel/drakvuf/pull/396#issuecomment-392477325,Inject prints program and arguments separately,Done,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,396,2018-05-04T17:06:05Z,2018-05-28T18:00:12Z,2018-05-28T18:00:12Z,MERGED,True,43,7,2,https://github.com/nystilaps,Inject prints program and arguments separately,2,[],https://github.com/tklengyel/drakvuf/pull/396,https://github.com/tklengyel,13,https://github.com/tklengyel/drakvuf/pull/396#issuecomment-392577544,Inject prints program and arguments separately,"Thanks, it looks good now!",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,396,2018-05-04T17:06:05Z,2018-05-28T18:00:12Z,2018-05-28T18:00:12Z,MERGED,True,43,7,2,https://github.com/nystilaps,Inject prints program and arguments separately,2,[],https://github.com/tklengyel/drakvuf/pull/396,https://github.com/tklengyel,14,https://github.com/tklengyel/drakvuf/pull/396#issuecomment-392577823,Inject prints program and arguments separately,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,396,2018-05-04T17:06:05Z,2018-05-28T18:00:12Z,2018-05-28T18:00:12Z,MERGED,True,43,7,2,https://github.com/nystilaps,Inject prints program and arguments separately,2,[],https://github.com/tklengyel/drakvuf/pull/396,https://github.com/tklengyel,15,https://github.com/tklengyel/drakvuf/pull/396#issuecomment-392577913,Inject prints program and arguments separately,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,397,2018-05-08T14:10:47Z,2018-05-11T17:14:12Z,2018-10-30T11:41:28Z,CLOSED,False,19,2,6,https://github.com/aoshiken, Expose win_reg_keybody_path...,3,[],https://github.com/tklengyel/drakvuf/pull/397,https://github.com/aoshiken,1,https://github.com/tklengyel/drakvuf/pull/397,...for using from the plugins so we can set hooks for registry functions  deep into the code,...for using from the plugins so we can set hooks for registry functions  deep into the code,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,397,2018-05-08T14:10:47Z,2018-05-11T17:14:12Z,2018-10-30T11:41:28Z,CLOSED,False,19,2,6,https://github.com/aoshiken, Expose win_reg_keybody_path...,3,[],https://github.com/tklengyel/drakvuf/pull/397,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/397#issuecomment-387417055,...for using from the plugins so we can set hooks for registry functions  deep into the code,There don't seem to be any plugins using this function?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,397,2018-05-08T14:10:47Z,2018-05-11T17:14:12Z,2018-10-30T11:41:28Z,CLOSED,False,19,2,6,https://github.com/aoshiken, Expose win_reg_keybody_path...,3,[],https://github.com/tklengyel/drakvuf/pull/397,https://github.com/aoshiken,3,https://github.com/tklengyel/drakvuf/pull/397#issuecomment-387418831,...for using from the plugins so we can set hooks for registry functions  deep into the code,"Agreed, I was using it from a hook deep down into the SetValue flow so I'm afraid is totally ""ad hoc"" for my VM but thought it'd be useful for others.
In my opinion it'd be fair to refuse this PR, feel free to do whatever you think is appropriate. :)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,397,2018-05-08T14:10:47Z,2018-05-11T17:14:12Z,2018-10-30T11:41:28Z,CLOSED,False,19,2,6,https://github.com/aoshiken, Expose win_reg_keybody_path...,3,[],https://github.com/tklengyel/drakvuf/pull/397,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/397#issuecomment-388427184,...for using from the plugins so we can set hooks for registry functions  deep into the code,"Lets keep it as a private API for now, if there is a need to expose it we can always do that later.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,402,2018-05-21T17:12:58Z,2018-05-21T18:15:20Z,2018-05-21T18:15:23Z,MERGED,True,0,4,1,https://github.com/tklengyel,Remove Rekall submodule,1,[],https://github.com/tklengyel/drakvuf/pull/402,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/402,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,403,2018-05-21T18:16:51Z,2018-05-21T18:16:59Z,2018-05-21T18:17:02Z,MERGED,True,0,1,1,https://github.com/tklengyel,Remove Rekall submodule,1,[],https://github.com/tklengyel/drakvuf/pull/403,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/403,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,404,2018-05-29T17:48:31Z,2018-07-20T00:44:52Z,2018-07-20T11:57:19Z,MERGED,True,1088,67,15,https://github.com/skvl,Plugin Filedelete | Catch whole file contents on NtClose (Part 1),2,[],https://github.com/tklengyel/drakvuf/pull/404,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/404,"Hello.
This a work in progress to make filedelete plugin capable to catch the whole file contents of modified or deleted files.
Current status:

Content fetching is based on function injection on NtClose.
File modification catching is based on trapping NtWriteFile (ZwCreateSection in future).
 Only modified files are catched (deleted files will be catched in future).
 Only first 16KB of file is catched (full contents catch in future).
 All traps in Ring3 (Ring0 in future).
 Merge into original plugin/filedelete.

Known issues:
Sometimes files not catched.
Advanced research needed for STATUS_PENDING and STATUS_INVALID_DEVICE_REQUEST
Adwanced applications use NtCreateSection/NtMapViewOfSection for writing into files.
Advanced research needed to handle STATUS_PENDING. Seems like file handle could be closed after section handle obtaining.","Hello.
This a work in progress to make filedelete plugin capable to catch the whole file contents of modified or deleted files.
Current status:

Content fetching is based on function injection on NtClose.
File modification catching is based on trapping NtWriteFile (ZwCreateSection in future).
 Only modified files are catched (deleted files will be catched in future).
 Only first 16KB of file is catched (full contents catch in future).
 All traps in Ring3 (Ring0 in future).
 Merge into original plugin/filedelete.

Known issues:
Sometimes files not catched.
Advanced research needed for STATUS_PENDING and STATUS_INVALID_DEVICE_REQUEST
Adwanced applications use NtCreateSection/NtMapViewOfSection for writing into files.
Advanced research needed to handle STATUS_PENDING. Seems like file handle could be closed after section handle obtaining.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,404,2018-05-29T17:48:31Z,2018-07-20T00:44:52Z,2018-07-20T11:57:19Z,MERGED,True,1088,67,15,https://github.com/skvl,Plugin Filedelete | Catch whole file contents on NtClose (Part 1),2,[],https://github.com/tklengyel/drakvuf/pull/404,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/404#issuecomment-392875582,"Hello.
This a work in progress to make filedelete plugin capable to catch the whole file contents of modified or deleted files.
Current status:

Content fetching is based on function injection on NtClose.
File modification catching is based on trapping NtWriteFile (ZwCreateSection in future).
 Only modified files are catched (deleted files will be catched in future).
 Only first 16KB of file is catched (full contents catch in future).
 All traps in Ring3 (Ring0 in future).
 Merge into original plugin/filedelete.

Known issues:
Sometimes files not catched.
Advanced research needed for STATUS_PENDING and STATUS_INVALID_DEVICE_REQUEST
Adwanced applications use NtCreateSection/NtMapViewOfSection for writing into files.
Advanced research needed to handle STATUS_PENDING. Seems like file handle could be closed after section handle obtaining.","This looks like a cool way to get the file contents, but I think it would be time to redesign the libinjector interface to allow injecting arbitrary function calls instead of copying that code into a plugin. The injection mechanism is quite fragile so having multiple copies of that code laying around is not ideal.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,404,2018-05-29T17:48:31Z,2018-07-20T00:44:52Z,2018-07-20T11:57:19Z,MERGED,True,1088,67,15,https://github.com/skvl,Plugin Filedelete | Catch whole file contents on NtClose (Part 1),2,[],https://github.com/tklengyel/drakvuf/pull/404,https://github.com/skvl,3,https://github.com/tklengyel/drakvuf/pull/404#issuecomment-392879051,"Hello.
This a work in progress to make filedelete plugin capable to catch the whole file contents of modified or deleted files.
Current status:

Content fetching is based on function injection on NtClose.
File modification catching is based on trapping NtWriteFile (ZwCreateSection in future).
 Only modified files are catched (deleted files will be catched in future).
 Only first 16KB of file is catched (full contents catch in future).
 All traps in Ring3 (Ring0 in future).
 Merge into original plugin/filedelete.

Known issues:
Sometimes files not catched.
Advanced research needed for STATUS_PENDING and STATUS_INVALID_DEVICE_REQUEST
Adwanced applications use NtCreateSection/NtMapViewOfSection for writing into files.
Advanced research needed to handle STATUS_PENDING. Seems like file handle could be closed after section handle obtaining.","@tklengyel I think you are right. But I don't like the idea to switch context. So I'm going to finish this work.
More over I hope that after gathering a lot of examples of function injection I will be abble to make good general interface.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,404,2018-05-29T17:48:31Z,2018-07-20T00:44:52Z,2018-07-20T11:57:19Z,MERGED,True,1088,67,15,https://github.com/skvl,Plugin Filedelete | Catch whole file contents on NtClose (Part 1),2,[],https://github.com/tklengyel/drakvuf/pull/404,https://github.com/skvl,4,https://github.com/tklengyel/drakvuf/pull/404#issuecomment-394401153,"Hello.
This a work in progress to make filedelete plugin capable to catch the whole file contents of modified or deleted files.
Current status:

Content fetching is based on function injection on NtClose.
File modification catching is based on trapping NtWriteFile (ZwCreateSection in future).
 Only modified files are catched (deleted files will be catched in future).
 Only first 16KB of file is catched (full contents catch in future).
 All traps in Ring3 (Ring0 in future).
 Merge into original plugin/filedelete.

Known issues:
Sometimes files not catched.
Advanced research needed for STATUS_PENDING and STATUS_INVALID_DEVICE_REQUEST
Adwanced applications use NtCreateSection/NtMapViewOfSection for writing into files.
Advanced research needed to handle STATUS_PENDING. Seems like file handle could be closed after section handle obtaining.","@tklengyel I have restored original filedelete plugin by renamin my implementation into filedelete2. It's disabled by default.
Could you please accept the PR?
Thanks in advance.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,404,2018-05-29T17:48:31Z,2018-07-20T00:44:52Z,2018-07-20T11:57:19Z,MERGED,True,1088,67,15,https://github.com/skvl,Plugin Filedelete | Catch whole file contents on NtClose (Part 1),2,[],https://github.com/tklengyel/drakvuf/pull/404,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/404#issuecomment-394426225,"Hello.
This a work in progress to make filedelete plugin capable to catch the whole file contents of modified or deleted files.
Current status:

Content fetching is based on function injection on NtClose.
File modification catching is based on trapping NtWriteFile (ZwCreateSection in future).
 Only modified files are catched (deleted files will be catched in future).
 Only first 16KB of file is catched (full contents catch in future).
 All traps in Ring3 (Ring0 in future).
 Merge into original plugin/filedelete.

Known issues:
Sometimes files not catched.
Advanced research needed for STATUS_PENDING and STATUS_INVALID_DEVICE_REQUEST
Adwanced applications use NtCreateSection/NtMapViewOfSection for writing into files.
Advanced research needed to handle STATUS_PENDING. Seems like file handle could be closed after section handle obtaining.","@skvl Thanks for this PR, it is a creative way to extend the filedelete plugin. I'm affraid in its current form I can't accept the PR. As I stated before, copying the injector code into a plugin is not good, I don't want to have multiple copies of that code laying around as it is fragile and will lead to bitrot. There are also a large number of TODO items in the code and cornercases which have not been addressed, so I'm not sure this plugin as-is is ready for general use. Also, I would prefer if this functionality was added to the existing filedelete plugin, potentially enabled with a command-line flag, instead of adding a whole new one.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,404,2018-05-29T17:48:31Z,2018-07-20T00:44:52Z,2018-07-20T11:57:19Z,MERGED,True,1088,67,15,https://github.com/skvl,Plugin Filedelete | Catch whole file contents on NtClose (Part 1),2,[],https://github.com/tklengyel/drakvuf/pull/404,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/404#issuecomment-394426562,"Hello.
This a work in progress to make filedelete plugin capable to catch the whole file contents of modified or deleted files.
Current status:

Content fetching is based on function injection on NtClose.
File modification catching is based on trapping NtWriteFile (ZwCreateSection in future).
 Only modified files are catched (deleted files will be catched in future).
 Only first 16KB of file is catched (full contents catch in future).
 All traps in Ring3 (Ring0 in future).
 Merge into original plugin/filedelete.

Known issues:
Sometimes files not catched.
Advanced research needed for STATUS_PENDING and STATUS_INVALID_DEVICE_REQUEST
Adwanced applications use NtCreateSection/NtMapViewOfSection for writing into files.
Advanced research needed to handle STATUS_PENDING. Seems like file handle could be closed after section handle obtaining.","Also FYI, consider reworking the code to make use of #407",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,404,2018-05-29T17:48:31Z,2018-07-20T00:44:52Z,2018-07-20T11:57:19Z,MERGED,True,1088,67,15,https://github.com/skvl,Plugin Filedelete | Catch whole file contents on NtClose (Part 1),2,[],https://github.com/tklengyel/drakvuf/pull/404,https://github.com/drakvuf-jenkins,7,https://github.com/tklengyel/drakvuf/pull/404#issuecomment-405977996,"Hello.
This a work in progress to make filedelete plugin capable to catch the whole file contents of modified or deleted files.
Current status:

Content fetching is based on function injection on NtClose.
File modification catching is based on trapping NtWriteFile (ZwCreateSection in future).
 Only modified files are catched (deleted files will be catched in future).
 Only first 16KB of file is catched (full contents catch in future).
 All traps in Ring3 (Ring0 in future).
 Merge into original plugin/filedelete.

Known issues:
Sometimes files not catched.
Advanced research needed for STATUS_PENDING and STATUS_INVALID_DEVICE_REQUEST
Adwanced applications use NtCreateSection/NtMapViewOfSection for writing into files.
Advanced research needed to handle STATUS_PENDING. Seems like file handle could be closed after section handle obtaining.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,404,2018-05-29T17:48:31Z,2018-07-20T00:44:52Z,2018-07-20T11:57:19Z,MERGED,True,1088,67,15,https://github.com/skvl,Plugin Filedelete | Catch whole file contents on NtClose (Part 1),2,[],https://github.com/tklengyel/drakvuf/pull/404,https://github.com/skvl,8,https://github.com/tklengyel/drakvuf/pull/404#issuecomment-406001761,"Hello.
This a work in progress to make filedelete plugin capable to catch the whole file contents of modified or deleted files.
Current status:

Content fetching is based on function injection on NtClose.
File modification catching is based on trapping NtWriteFile (ZwCreateSection in future).
 Only modified files are catched (deleted files will be catched in future).
 Only first 16KB of file is catched (full contents catch in future).
 All traps in Ring3 (Ring0 in future).
 Merge into original plugin/filedelete.

Known issues:
Sometimes files not catched.
Advanced research needed for STATUS_PENDING and STATUS_INVALID_DEVICE_REQUEST
Adwanced applications use NtCreateSection/NtMapViewOfSection for writing into files.
Advanced research needed to handle STATUS_PENDING. Seems like file handle could be closed after section handle obtaining.","@tklengyel could you pay some attention to the PR. I believe it is ready for now.
Though I will continue to investigate how to improve this functionality and make it even more reliable.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,404,2018-05-29T17:48:31Z,2018-07-20T00:44:52Z,2018-07-20T11:57:19Z,MERGED,True,1088,67,15,https://github.com/skvl,Plugin Filedelete | Catch whole file contents on NtClose (Part 1),2,[],https://github.com/tklengyel/drakvuf/pull/404,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/404#issuecomment-406022353,"Hello.
This a work in progress to make filedelete plugin capable to catch the whole file contents of modified or deleted files.
Current status:

Content fetching is based on function injection on NtClose.
File modification catching is based on trapping NtWriteFile (ZwCreateSection in future).
 Only modified files are catched (deleted files will be catched in future).
 Only first 16KB of file is catched (full contents catch in future).
 All traps in Ring3 (Ring0 in future).
 Merge into original plugin/filedelete.

Known issues:
Sometimes files not catched.
Advanced research needed for STATUS_PENDING and STATUS_INVALID_DEVICE_REQUEST
Adwanced applications use NtCreateSection/NtMapViewOfSection for writing into files.
Advanced research needed to handle STATUS_PENDING. Seems like file handle could be closed after section handle obtaining.",Is it absolutely necessary to split the filedelete plugin into two (filedelete.cpp and filedelete2.cpp)? I don't mind having multiple cpp files per plugin but if the two don't share enough code in common then they might was well be separate plugins.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,404,2018-05-29T17:48:31Z,2018-07-20T00:44:52Z,2018-07-20T11:57:19Z,MERGED,True,1088,67,15,https://github.com/skvl,Plugin Filedelete | Catch whole file contents on NtClose (Part 1),2,[],https://github.com/tklengyel/drakvuf/pull/404,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/404#issuecomment-406023415,"Hello.
This a work in progress to make filedelete plugin capable to catch the whole file contents of modified or deleted files.
Current status:

Content fetching is based on function injection on NtClose.
File modification catching is based on trapping NtWriteFile (ZwCreateSection in future).
 Only modified files are catched (deleted files will be catched in future).
 Only first 16KB of file is catched (full contents catch in future).
 All traps in Ring3 (Ring0 in future).
 Merge into original plugin/filedelete.

Known issues:
Sometimes files not catched.
Advanced research needed for STATUS_PENDING and STATUS_INVALID_DEVICE_REQUEST
Adwanced applications use NtCreateSection/NtMapViewOfSection for writing into files.
Advanced research needed to handle STATUS_PENDING. Seems like file handle could be closed after section handle obtaining.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,404,2018-05-29T17:48:31Z,2018-07-20T00:44:52Z,2018-07-20T11:57:19Z,MERGED,True,1088,67,15,https://github.com/skvl,Plugin Filedelete | Catch whole file contents on NtClose (Part 1),2,[],https://github.com/tklengyel/drakvuf/pull/404,https://github.com/skvl,11,https://github.com/tklengyel/drakvuf/pull/404#issuecomment-406027443,"Hello.
This a work in progress to make filedelete plugin capable to catch the whole file contents of modified or deleted files.
Current status:

Content fetching is based on function injection on NtClose.
File modification catching is based on trapping NtWriteFile (ZwCreateSection in future).
 Only modified files are catched (deleted files will be catched in future).
 Only first 16KB of file is catched (full contents catch in future).
 All traps in Ring3 (Ring0 in future).
 Merge into original plugin/filedelete.

Known issues:
Sometimes files not catched.
Advanced research needed for STATUS_PENDING and STATUS_INVALID_DEVICE_REQUEST
Adwanced applications use NtCreateSection/NtMapViewOfSection for writing into files.
Advanced research needed to handle STATUS_PENDING. Seems like file handle could be closed after section handle obtaining.",@tklengyel I have tried to leave all common code inside filedelete.cpp and moved out some special handlers into filedelete2.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,404,2018-05-29T17:48:31Z,2018-07-20T00:44:52Z,2018-07-20T11:57:19Z,MERGED,True,1088,67,15,https://github.com/skvl,Plugin Filedelete | Catch whole file contents on NtClose (Part 1),2,[],https://github.com/tklengyel/drakvuf/pull/404,https://github.com/skvl,12,https://github.com/tklengyel/drakvuf/pull/404#issuecomment-406027667,"Hello.
This a work in progress to make filedelete plugin capable to catch the whole file contents of modified or deleted files.
Current status:

Content fetching is based on function injection on NtClose.
File modification catching is based on trapping NtWriteFile (ZwCreateSection in future).
 Only modified files are catched (deleted files will be catched in future).
 Only first 16KB of file is catched (full contents catch in future).
 All traps in Ring3 (Ring0 in future).
 Merge into original plugin/filedelete.

Known issues:
Sometimes files not catched.
Advanced research needed for STATUS_PENDING and STATUS_INVALID_DEVICE_REQUEST
Adwanced applications use NtCreateSection/NtMapViewOfSection for writing into files.
Advanced research needed to handle STATUS_PENDING. Seems like file handle could be closed after section handle obtaining.",@tklengyel I don't see details of build error from Jenkins. But I build this branch successfully.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,404,2018-05-29T17:48:31Z,2018-07-20T00:44:52Z,2018-07-20T11:57:19Z,MERGED,True,1088,67,15,https://github.com/skvl,Plugin Filedelete | Catch whole file contents on NtClose (Part 1),2,[],https://github.com/tklengyel/drakvuf/pull/404,https://github.com/tklengyel,13,https://github.com/tklengyel/drakvuf/pull/404#issuecomment-406036177,"Hello.
This a work in progress to make filedelete plugin capable to catch the whole file contents of modified or deleted files.
Current status:

Content fetching is based on function injection on NtClose.
File modification catching is based on trapping NtWriteFile (ZwCreateSection in future).
 Only modified files are catched (deleted files will be catched in future).
 Only first 16KB of file is catched (full contents catch in future).
 All traps in Ring3 (Ring0 in future).
 Merge into original plugin/filedelete.

Known issues:
Sometimes files not catched.
Advanced research needed for STATUS_PENDING and STATUS_INVALID_DEVICE_REQUEST
Adwanced applications use NtCreateSection/NtMapViewOfSection for writing into files.
Advanced research needed to handle STATUS_PENDING. Seems like file handle could be closed after section handle obtaining.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,404,2018-05-29T17:48:31Z,2018-07-20T00:44:52Z,2018-07-20T11:57:19Z,MERGED,True,1088,67,15,https://github.com/skvl,Plugin Filedelete | Catch whole file contents on NtClose (Part 1),2,[],https://github.com/tklengyel/drakvuf/pull/404,https://github.com/tklengyel,14,https://github.com/tklengyel/drakvuf/pull/404#issuecomment-406047128,"Hello.
This a work in progress to make filedelete plugin capable to catch the whole file contents of modified or deleted files.
Current status:

Content fetching is based on function injection on NtClose.
File modification catching is based on trapping NtWriteFile (ZwCreateSection in future).
 Only modified files are catched (deleted files will be catched in future).
 Only first 16KB of file is catched (full contents catch in future).
 All traps in Ring3 (Ring0 in future).
 Merge into original plugin/filedelete.

Known issues:
Sometimes files not catched.
Advanced research needed for STATUS_PENDING and STATUS_INVALID_DEVICE_REQUEST
Adwanced applications use NtCreateSection/NtMapViewOfSection for writing into files.
Advanced research needed to handle STATUS_PENDING. Seems like file handle could be closed after section handle obtaining.",With that minor adjustment of the command line print helper I'm happy to go ahead and merge this.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,404,2018-05-29T17:48:31Z,2018-07-20T00:44:52Z,2018-07-20T11:57:19Z,MERGED,True,1088,67,15,https://github.com/skvl,Plugin Filedelete | Catch whole file contents on NtClose (Part 1),2,[],https://github.com/tklengyel/drakvuf/pull/404,https://github.com/tklengyel,15,https://github.com/tklengyel/drakvuf/pull/404#issuecomment-406308875,"Hello.
This a work in progress to make filedelete plugin capable to catch the whole file contents of modified or deleted files.
Current status:

Content fetching is based on function injection on NtClose.
File modification catching is based on trapping NtWriteFile (ZwCreateSection in future).
 Only modified files are catched (deleted files will be catched in future).
 Only first 16KB of file is catched (full contents catch in future).
 All traps in Ring3 (Ring0 in future).
 Merge into original plugin/filedelete.

Known issues:
Sometimes files not catched.
Advanced research needed for STATUS_PENDING and STATUS_INVALID_DEVICE_REQUEST
Adwanced applications use NtCreateSection/NtMapViewOfSection for writing into files.
Advanced research needed to handle STATUS_PENDING. Seems like file handle could be closed after section handle obtaining.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,404,2018-05-29T17:48:31Z,2018-07-20T00:44:52Z,2018-07-20T11:57:19Z,MERGED,True,1088,67,15,https://github.com/skvl,Plugin Filedelete | Catch whole file contents on NtClose (Part 1),2,[],https://github.com/tklengyel/drakvuf/pull/404,https://github.com/tklengyel,16,https://github.com/tklengyel/drakvuf/pull/404#issuecomment-406311383,"Hello.
This a work in progress to make filedelete plugin capable to catch the whole file contents of modified or deleted files.
Current status:

Content fetching is based on function injection on NtClose.
File modification catching is based on trapping NtWriteFile (ZwCreateSection in future).
 Only modified files are catched (deleted files will be catched in future).
 Only first 16KB of file is catched (full contents catch in future).
 All traps in Ring3 (Ring0 in future).
 Merge into original plugin/filedelete.

Known issues:
Sometimes files not catched.
Advanced research needed for STATUS_PENDING and STATUS_INVALID_DEVICE_REQUEST
Adwanced applications use NtCreateSection/NtMapViewOfSection for writing into files.
Advanced research needed to handle STATUS_PENDING. Seems like file handle could be closed after section handle obtaining.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,404,2018-05-29T17:48:31Z,2018-07-20T00:44:52Z,2018-07-20T11:57:19Z,MERGED,True,1088,67,15,https://github.com/skvl,Plugin Filedelete | Catch whole file contents on NtClose (Part 1),2,[],https://github.com/tklengyel/drakvuf/pull/404,https://github.com/skvl,17,https://github.com/tklengyel/drakvuf/pull/404#issuecomment-406338624,"Hello.
This a work in progress to make filedelete plugin capable to catch the whole file contents of modified or deleted files.
Current status:

Content fetching is based on function injection on NtClose.
File modification catching is based on trapping NtWriteFile (ZwCreateSection in future).
 Only modified files are catched (deleted files will be catched in future).
 Only first 16KB of file is catched (full contents catch in future).
 All traps in Ring3 (Ring0 in future).
 Merge into original plugin/filedelete.

Known issues:
Sometimes files not catched.
Advanced research needed for STATUS_PENDING and STATUS_INVALID_DEVICE_REQUEST
Adwanced applications use NtCreateSection/NtMapViewOfSection for writing into files.
Advanced research needed to handle STATUS_PENDING. Seems like file handle could be closed after section handle obtaining.",@tklengyel what's the issue here? I have tested this branch successfully.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,404,2018-05-29T17:48:31Z,2018-07-20T00:44:52Z,2018-07-20T11:57:19Z,MERGED,True,1088,67,15,https://github.com/skvl,Plugin Filedelete | Catch whole file contents on NtClose (Part 1),2,[],https://github.com/tklengyel/drakvuf/pull/404,https://github.com/tklengyel,18,https://github.com/tklengyel/drakvuf/pull/404#issuecomment-406353460,"Hello.
This a work in progress to make filedelete plugin capable to catch the whole file contents of modified or deleted files.
Current status:

Content fetching is based on function injection on NtClose.
File modification catching is based on trapping NtWriteFile (ZwCreateSection in future).
 Only modified files are catched (deleted files will be catched in future).
 Only first 16KB of file is catched (full contents catch in future).
 All traps in Ring3 (Ring0 in future).
 Merge into original plugin/filedelete.

Known issues:
Sometimes files not catched.
Advanced research needed for STATUS_PENDING and STATUS_INVALID_DEVICE_REQUEST
Adwanced applications use NtCreateSection/NtMapViewOfSection for writing into files.
Advanced research needed to handle STATUS_PENDING. Seems like file handle could be closed after section handle obtaining.",Jenkins is being finicky.. Probably not related to the PR itself..,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,404,2018-05-29T17:48:31Z,2018-07-20T00:44:52Z,2018-07-20T11:57:19Z,MERGED,True,1088,67,15,https://github.com/skvl,Plugin Filedelete | Catch whole file contents on NtClose (Part 1),2,[],https://github.com/tklengyel/drakvuf/pull/404,https://github.com/tklengyel,19,https://github.com/tklengyel/drakvuf/pull/404#issuecomment-406431228,"Hello.
This a work in progress to make filedelete plugin capable to catch the whole file contents of modified or deleted files.
Current status:

Content fetching is based on function injection on NtClose.
File modification catching is based on trapping NtWriteFile (ZwCreateSection in future).
 Only modified files are catched (deleted files will be catched in future).
 Only first 16KB of file is catched (full contents catch in future).
 All traps in Ring3 (Ring0 in future).
 Merge into original plugin/filedelete.

Known issues:
Sometimes files not catched.
Advanced research needed for STATUS_PENDING and STATUS_INVALID_DEVICE_REQUEST
Adwanced applications use NtCreateSection/NtMapViewOfSection for writing into files.
Advanced research needed to handle STATUS_PENDING. Seems like file handle could be closed after section handle obtaining.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,404,2018-05-29T17:48:31Z,2018-07-20T00:44:52Z,2018-07-20T11:57:19Z,MERGED,True,1088,67,15,https://github.com/skvl,Plugin Filedelete | Catch whole file contents on NtClose (Part 1),2,[],https://github.com/tklengyel/drakvuf/pull/404,https://github.com/tklengyel,20,https://github.com/tklengyel/drakvuf/pull/404#issuecomment-406453629,"Hello.
This a work in progress to make filedelete plugin capable to catch the whole file contents of modified or deleted files.
Current status:

Content fetching is based on function injection on NtClose.
File modification catching is based on trapping NtWriteFile (ZwCreateSection in future).
 Only modified files are catched (deleted files will be catched in future).
 Only first 16KB of file is catched (full contents catch in future).
 All traps in Ring3 (Ring0 in future).
 Merge into original plugin/filedelete.

Known issues:
Sometimes files not catched.
Advanced research needed for STATUS_PENDING and STATUS_INVALID_DEVICE_REQUEST
Adwanced applications use NtCreateSection/NtMapViewOfSection for writing into files.
Advanced research needed to handle STATUS_PENDING. Seems like file handle could be closed after section handle obtaining.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,404,2018-05-29T17:48:31Z,2018-07-20T00:44:52Z,2018-07-20T11:57:19Z,MERGED,True,1088,67,15,https://github.com/skvl,Plugin Filedelete | Catch whole file contents on NtClose (Part 1),2,[],https://github.com/tklengyel/drakvuf/pull/404,https://github.com/tklengyel,21,https://github.com/tklengyel/drakvuf/pull/404#issuecomment-406454518,"Hello.
This a work in progress to make filedelete plugin capable to catch the whole file contents of modified or deleted files.
Current status:

Content fetching is based on function injection on NtClose.
File modification catching is based on trapping NtWriteFile (ZwCreateSection in future).
 Only modified files are catched (deleted files will be catched in future).
 Only first 16KB of file is catched (full contents catch in future).
 All traps in Ring3 (Ring0 in future).
 Merge into original plugin/filedelete.

Known issues:
Sometimes files not catched.
Advanced research needed for STATUS_PENDING and STATUS_INVALID_DEVICE_REQUEST
Adwanced applications use NtCreateSection/NtMapViewOfSection for writing into files.
Advanced research needed to handle STATUS_PENDING. Seems like file handle could be closed after section handle obtaining.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,404,2018-05-29T17:48:31Z,2018-07-20T00:44:52Z,2018-07-20T11:57:19Z,MERGED,True,1088,67,15,https://github.com/skvl,Plugin Filedelete | Catch whole file contents on NtClose (Part 1),2,[],https://github.com/tklengyel/drakvuf/pull/404,https://github.com/tklengyel,22,https://github.com/tklengyel/drakvuf/pull/404#issuecomment-406457036,"Hello.
This a work in progress to make filedelete plugin capable to catch the whole file contents of modified or deleted files.
Current status:

Content fetching is based on function injection on NtClose.
File modification catching is based on trapping NtWriteFile (ZwCreateSection in future).
 Only modified files are catched (deleted files will be catched in future).
 Only first 16KB of file is catched (full contents catch in future).
 All traps in Ring3 (Ring0 in future).
 Merge into original plugin/filedelete.

Known issues:
Sometimes files not catched.
Advanced research needed for STATUS_PENDING and STATUS_INVALID_DEVICE_REQUEST
Adwanced applications use NtCreateSection/NtMapViewOfSection for writing into files.
Advanced research needed to handle STATUS_PENDING. Seems like file handle could be closed after section handle obtaining.","CID 190892 (#1 of 1): Dereference before null check (REVERSE_INULL)check_after_deref: Null-checking injector suggests that it may be null, but it has already been dereferenced on all paths leading to the check.
560    if (injector)
561        delete injector;

CID 190891 (#2 of 2): Dereference null return value (NULL_RETURNS)13. dereference: Dereferencing a pointer that might be null fp when calling fclose.
262    fclose(fp);",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,405,2018-05-30T19:19:43Z,2018-06-06T02:10:52Z,2018-06-06T02:10:52Z,MERGED,True,182,6,7,https://github.com/mbushou,API for additional FD-based event sources,6,[],https://github.com/tklengyel/drakvuf/pull/405,https://github.com/mbushou,1,https://github.com/tklengyel/drakvuf/pull/405,"WIP for plugin-defined event sources:
DRAKVUF plugins allow users to build upon the core DRAKVUF framework.  Recently, I was experimenting with a use case that, in addition to consuming normal guest events, needed to also receive messages from an external event source via a ZMQ socket.  This could be used to programmatically send a DRAKVUF plugin a message to change its behavior at runtime and could allow DRAKVUF to be more easily integrated into larger security systems.  This work in progress solution might be useful to others and I wanted offer it for upstream consideration.
This WIP allows plugins to register their own external file-descriptor-based event sources into DRAKVUF's event loop.  A plugin registers one or more file descriptors (FDs) with DRAKVUF and DRAKVUF monitors these FDs along with a guest VM's events.  When a plugin FD is raised, DRAKVUF informs the plugin via a callback passed during registration.  While the demo included in this WIP uses ZMQ, I believe it is generic enough to support other socket-based event sources.
Summary of changes:

Two plugin-facing DRAKVUF functions are added. Plugins use them to register and unregister FDs to DRAKVUF's event loop.

int drakvuf_event_fd_add(drakvuf_t drakvuf, 
                         int fd, 
                         void (*plugin_cb) (int fd, void *data), 
                         void *data, 
                         int flags)

int drakvuf_event_fd_remove(drakvuf_t drakvuf, 
                            int fd)


drakvuf_loop is modified to account for these additional FDs during polling.

drakvuf_event_fd_* functions operate on a linked list of fd_info structs stored in the main drakvuf struct.  Each object contains the fd itself, the plugin callback to be called if the fd is raised, a void* generic data pointer to pass this callback for context, and flags which (initally) are used to tell the difference between a normal VMI event (EVENT_FD_VMI) and a plugin-provided FD (EVENT_FD_PLUGIN).  Each time a new FD is added, the set of fd_info objects is used to re-generate the pollfd struct passed into poll (drakvuf->event_fds) and an array that is used in vmi_loop to quickly look up the fd_info (drakvuf->event_fds).
WIP Demo:
In ./tools is a simple companion demo that shows how the syscall plugin might be modified to trace syscalls and monitor a ZMQ socket for external commands at the same time.
To try out the demo, overwrite the existing syscalls plugin with the demo code:
cp ./tools/event_fd_syscalls.cpp ./src/plugins/syscalls/syscalls.cpp
cp ./tools/event_fd_syscalls.h ./src/plugins/syscalls/syscalls.h
To compile, ensure ZMQ dev libraries are present in dom0, make clean, and append -lzmq to the line starting with ""LIBS ="" inside ./src/plugins/Makefile before recompiling.
In the syscall plugin's constructor, new code is added that creates and primes the syscall plugin's ZMQ socket (/tmp/testsocket).  This demo uses the dealer and router pattern http://zeromq.org/tutorials:dealer-and-router.
Also in syscall.cpp, two new functions, syscall_zmq_cb and zmq_dsend, are used to pass the plugin messages and for the plugin to send replies, respectively.  syscall_zmq_cb is the callback function the syscall plugin registers to drakvuf_event_fd_add.  Two other functions, syscalls::process_zmq and syscalls::process_message, actually process the message in the plugin's class namespace.  In this demo the plugin simply tests the message for a string and passes a string in reply.
Also included is a companion python script (event_fd_syscall_client.py) that connects to the syscall plugin's ZMQ socket and passes it test messages.  After starting DRAKVUF with the demo syscall plugin, wait a moment for it to initialize, then start event_fd_syscall_client.py.  The script must be run as root (alternatively, change the permissions on /tmp/testsocket). The following output should be observed:
ZMQ PYTHON CLIENT:
sudo ./event_fd_syscall_client.py
sending ""b'dealer_hello'""
replied ""b'router_hello'""
sending ""b'dealer_hello'""
replied ""b'router_hello'""
sending ""b'dealer_hello'""
replied ""b'router_hello'""
exiting...
DRAKVUF SYSCALL PLUGIN:
... lots of preceeding output tracing syscalls ...
[SYSCALL] TIME:1527706359.648966 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_getuid
[SYSCALL] TIME:1527706359.649050 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_kill
[SYSCALL] TIME:1527706359.649207 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_select
process_message got message from testdealer: ""dealer_hello"", sending back ""router_hello""
process_message got message from testdealer: ""dealer_hello"", sending back ""router_hello""
process_message got message from testdealer: ""dealer_hello"", sending back ""router_hello""
[SYSCALL] TIME:1527706360.922447 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_epoll_ctl
[SYSCALL] TIME:1527706360.922557 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_getsockopt
[SYSCALL] TIME:1527706360.922632 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_close
[SYSCALL] TIME:1527706360.922729 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_clock_gettime
... lots of proceeding output tracing syscalls ...","WIP for plugin-defined event sources:
DRAKVUF plugins allow users to build upon the core DRAKVUF framework.  Recently, I was experimenting with a use case that, in addition to consuming normal guest events, needed to also receive messages from an external event source via a ZMQ socket.  This could be used to programmatically send a DRAKVUF plugin a message to change its behavior at runtime and could allow DRAKVUF to be more easily integrated into larger security systems.  This work in progress solution might be useful to others and I wanted offer it for upstream consideration.
This WIP allows plugins to register their own external file-descriptor-based event sources into DRAKVUF's event loop.  A plugin registers one or more file descriptors (FDs) with DRAKVUF and DRAKVUF monitors these FDs along with a guest VM's events.  When a plugin FD is raised, DRAKVUF informs the plugin via a callback passed during registration.  While the demo included in this WIP uses ZMQ, I believe it is generic enough to support other socket-based event sources.
Summary of changes:

Two plugin-facing DRAKVUF functions are added. Plugins use them to register and unregister FDs to DRAKVUF's event loop.

int drakvuf_event_fd_add(drakvuf_t drakvuf, 
                         int fd, 
                         void (*plugin_cb) (int fd, void *data), 
                         void *data, 
                         int flags)

int drakvuf_event_fd_remove(drakvuf_t drakvuf, 
                            int fd)


drakvuf_loop is modified to account for these additional FDs during polling.

drakvuf_event_fd_* functions operate on a linked list of fd_info structs stored in the main drakvuf struct.  Each object contains the fd itself, the plugin callback to be called if the fd is raised, a void* generic data pointer to pass this callback for context, and flags which (initally) are used to tell the difference between a normal VMI event (EVENT_FD_VMI) and a plugin-provided FD (EVENT_FD_PLUGIN).  Each time a new FD is added, the set of fd_info objects is used to re-generate the pollfd struct passed into poll (drakvuf->event_fds) and an array that is used in vmi_loop to quickly look up the fd_info (drakvuf->event_fds).
WIP Demo:
In ./tools is a simple companion demo that shows how the syscall plugin might be modified to trace syscalls and monitor a ZMQ socket for external commands at the same time.
To try out the demo, overwrite the existing syscalls plugin with the demo code:
cp ./tools/event_fd_syscalls.cpp ./src/plugins/syscalls/syscalls.cpp
cp ./tools/event_fd_syscalls.h ./src/plugins/syscalls/syscalls.h
To compile, ensure ZMQ dev libraries are present in dom0, make clean, and append -lzmq to the line starting with ""LIBS ="" inside ./src/plugins/Makefile before recompiling.
In the syscall plugin's constructor, new code is added that creates and primes the syscall plugin's ZMQ socket (/tmp/testsocket).  This demo uses the dealer and router pattern http://zeromq.org/tutorials:dealer-and-router.
Also in syscall.cpp, two new functions, syscall_zmq_cb and zmq_dsend, are used to pass the plugin messages and for the plugin to send replies, respectively.  syscall_zmq_cb is the callback function the syscall plugin registers to drakvuf_event_fd_add.  Two other functions, syscalls::process_zmq and syscalls::process_message, actually process the message in the plugin's class namespace.  In this demo the plugin simply tests the message for a string and passes a string in reply.
Also included is a companion python script (event_fd_syscall_client.py) that connects to the syscall plugin's ZMQ socket and passes it test messages.  After starting DRAKVUF with the demo syscall plugin, wait a moment for it to initialize, then start event_fd_syscall_client.py.  The script must be run as root (alternatively, change the permissions on /tmp/testsocket). The following output should be observed:
ZMQ PYTHON CLIENT:
sudo ./event_fd_syscall_client.py
sending ""b'dealer_hello'""
replied ""b'router_hello'""
sending ""b'dealer_hello'""
replied ""b'router_hello'""
sending ""b'dealer_hello'""
replied ""b'router_hello'""
exiting...
DRAKVUF SYSCALL PLUGIN:
... lots of preceeding output tracing syscalls ...
[SYSCALL] TIME:1527706359.648966 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_getuid
[SYSCALL] TIME:1527706359.649050 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_kill
[SYSCALL] TIME:1527706359.649207 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_select
process_message got message from testdealer: ""dealer_hello"", sending back ""router_hello""
process_message got message from testdealer: ""dealer_hello"", sending back ""router_hello""
process_message got message from testdealer: ""dealer_hello"", sending back ""router_hello""
[SYSCALL] TIME:1527706360.922447 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_epoll_ctl
[SYSCALL] TIME:1527706360.922557 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_getsockopt
[SYSCALL] TIME:1527706360.922632 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_close
[SYSCALL] TIME:1527706360.922729 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_clock_gettime
... lots of proceeding output tracing syscalls ...",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,405,2018-05-30T19:19:43Z,2018-06-06T02:10:52Z,2018-06-06T02:10:52Z,MERGED,True,182,6,7,https://github.com/mbushou,API for additional FD-based event sources,6,[],https://github.com/tklengyel/drakvuf/pull/405,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/405#issuecomment-393329330,"WIP for plugin-defined event sources:
DRAKVUF plugins allow users to build upon the core DRAKVUF framework.  Recently, I was experimenting with a use case that, in addition to consuming normal guest events, needed to also receive messages from an external event source via a ZMQ socket.  This could be used to programmatically send a DRAKVUF plugin a message to change its behavior at runtime and could allow DRAKVUF to be more easily integrated into larger security systems.  This work in progress solution might be useful to others and I wanted offer it for upstream consideration.
This WIP allows plugins to register their own external file-descriptor-based event sources into DRAKVUF's event loop.  A plugin registers one or more file descriptors (FDs) with DRAKVUF and DRAKVUF monitors these FDs along with a guest VM's events.  When a plugin FD is raised, DRAKVUF informs the plugin via a callback passed during registration.  While the demo included in this WIP uses ZMQ, I believe it is generic enough to support other socket-based event sources.
Summary of changes:

Two plugin-facing DRAKVUF functions are added. Plugins use them to register and unregister FDs to DRAKVUF's event loop.

int drakvuf_event_fd_add(drakvuf_t drakvuf, 
                         int fd, 
                         void (*plugin_cb) (int fd, void *data), 
                         void *data, 
                         int flags)

int drakvuf_event_fd_remove(drakvuf_t drakvuf, 
                            int fd)


drakvuf_loop is modified to account for these additional FDs during polling.

drakvuf_event_fd_* functions operate on a linked list of fd_info structs stored in the main drakvuf struct.  Each object contains the fd itself, the plugin callback to be called if the fd is raised, a void* generic data pointer to pass this callback for context, and flags which (initally) are used to tell the difference between a normal VMI event (EVENT_FD_VMI) and a plugin-provided FD (EVENT_FD_PLUGIN).  Each time a new FD is added, the set of fd_info objects is used to re-generate the pollfd struct passed into poll (drakvuf->event_fds) and an array that is used in vmi_loop to quickly look up the fd_info (drakvuf->event_fds).
WIP Demo:
In ./tools is a simple companion demo that shows how the syscall plugin might be modified to trace syscalls and monitor a ZMQ socket for external commands at the same time.
To try out the demo, overwrite the existing syscalls plugin with the demo code:
cp ./tools/event_fd_syscalls.cpp ./src/plugins/syscalls/syscalls.cpp
cp ./tools/event_fd_syscalls.h ./src/plugins/syscalls/syscalls.h
To compile, ensure ZMQ dev libraries are present in dom0, make clean, and append -lzmq to the line starting with ""LIBS ="" inside ./src/plugins/Makefile before recompiling.
In the syscall plugin's constructor, new code is added that creates and primes the syscall plugin's ZMQ socket (/tmp/testsocket).  This demo uses the dealer and router pattern http://zeromq.org/tutorials:dealer-and-router.
Also in syscall.cpp, two new functions, syscall_zmq_cb and zmq_dsend, are used to pass the plugin messages and for the plugin to send replies, respectively.  syscall_zmq_cb is the callback function the syscall plugin registers to drakvuf_event_fd_add.  Two other functions, syscalls::process_zmq and syscalls::process_message, actually process the message in the plugin's class namespace.  In this demo the plugin simply tests the message for a string and passes a string in reply.
Also included is a companion python script (event_fd_syscall_client.py) that connects to the syscall plugin's ZMQ socket and passes it test messages.  After starting DRAKVUF with the demo syscall plugin, wait a moment for it to initialize, then start event_fd_syscall_client.py.  The script must be run as root (alternatively, change the permissions on /tmp/testsocket). The following output should be observed:
ZMQ PYTHON CLIENT:
sudo ./event_fd_syscall_client.py
sending ""b'dealer_hello'""
replied ""b'router_hello'""
sending ""b'dealer_hello'""
replied ""b'router_hello'""
sending ""b'dealer_hello'""
replied ""b'router_hello'""
exiting...
DRAKVUF SYSCALL PLUGIN:
... lots of preceeding output tracing syscalls ...
[SYSCALL] TIME:1527706359.648966 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_getuid
[SYSCALL] TIME:1527706359.649050 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_kill
[SYSCALL] TIME:1527706359.649207 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_select
process_message got message from testdealer: ""dealer_hello"", sending back ""router_hello""
process_message got message from testdealer: ""dealer_hello"", sending back ""router_hello""
process_message got message from testdealer: ""dealer_hello"", sending back ""router_hello""
[SYSCALL] TIME:1527706360.922447 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_epoll_ctl
[SYSCALL] TIME:1527706360.922557 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_getsockopt
[SYSCALL] TIME:1527706360.922632 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_close
[SYSCALL] TIME:1527706360.922729 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_clock_gettime
... lots of proceeding output tracing syscalls ...","Thanks, this looks like an awesome addition to DRAKVUF! I'm not sure though whether registering to additional event sources should be done from a plugin. I envisioned plugins to be purely consumers of events. For example, I could also see a situation where multiple plugins would like to receive ZMQ events alongside VMI. How would one be able to do that with the current setup? Perhaps moving the ZMQ event processing a layer above (drakvuf.cpp) or into libdrakvuf itself would be a better approach.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,405,2018-05-30T19:19:43Z,2018-06-06T02:10:52Z,2018-06-06T02:10:52Z,MERGED,True,182,6,7,https://github.com/mbushou,API for additional FD-based event sources,6,[],https://github.com/tklengyel/drakvuf/pull/405,https://github.com/mbushou,3,https://github.com/tklengyel/drakvuf/pull/405#issuecomment-393588982,"WIP for plugin-defined event sources:
DRAKVUF plugins allow users to build upon the core DRAKVUF framework.  Recently, I was experimenting with a use case that, in addition to consuming normal guest events, needed to also receive messages from an external event source via a ZMQ socket.  This could be used to programmatically send a DRAKVUF plugin a message to change its behavior at runtime and could allow DRAKVUF to be more easily integrated into larger security systems.  This work in progress solution might be useful to others and I wanted offer it for upstream consideration.
This WIP allows plugins to register their own external file-descriptor-based event sources into DRAKVUF's event loop.  A plugin registers one or more file descriptors (FDs) with DRAKVUF and DRAKVUF monitors these FDs along with a guest VM's events.  When a plugin FD is raised, DRAKVUF informs the plugin via a callback passed during registration.  While the demo included in this WIP uses ZMQ, I believe it is generic enough to support other socket-based event sources.
Summary of changes:

Two plugin-facing DRAKVUF functions are added. Plugins use them to register and unregister FDs to DRAKVUF's event loop.

int drakvuf_event_fd_add(drakvuf_t drakvuf, 
                         int fd, 
                         void (*plugin_cb) (int fd, void *data), 
                         void *data, 
                         int flags)

int drakvuf_event_fd_remove(drakvuf_t drakvuf, 
                            int fd)


drakvuf_loop is modified to account for these additional FDs during polling.

drakvuf_event_fd_* functions operate on a linked list of fd_info structs stored in the main drakvuf struct.  Each object contains the fd itself, the plugin callback to be called if the fd is raised, a void* generic data pointer to pass this callback for context, and flags which (initally) are used to tell the difference between a normal VMI event (EVENT_FD_VMI) and a plugin-provided FD (EVENT_FD_PLUGIN).  Each time a new FD is added, the set of fd_info objects is used to re-generate the pollfd struct passed into poll (drakvuf->event_fds) and an array that is used in vmi_loop to quickly look up the fd_info (drakvuf->event_fds).
WIP Demo:
In ./tools is a simple companion demo that shows how the syscall plugin might be modified to trace syscalls and monitor a ZMQ socket for external commands at the same time.
To try out the demo, overwrite the existing syscalls plugin with the demo code:
cp ./tools/event_fd_syscalls.cpp ./src/plugins/syscalls/syscalls.cpp
cp ./tools/event_fd_syscalls.h ./src/plugins/syscalls/syscalls.h
To compile, ensure ZMQ dev libraries are present in dom0, make clean, and append -lzmq to the line starting with ""LIBS ="" inside ./src/plugins/Makefile before recompiling.
In the syscall plugin's constructor, new code is added that creates and primes the syscall plugin's ZMQ socket (/tmp/testsocket).  This demo uses the dealer and router pattern http://zeromq.org/tutorials:dealer-and-router.
Also in syscall.cpp, two new functions, syscall_zmq_cb and zmq_dsend, are used to pass the plugin messages and for the plugin to send replies, respectively.  syscall_zmq_cb is the callback function the syscall plugin registers to drakvuf_event_fd_add.  Two other functions, syscalls::process_zmq and syscalls::process_message, actually process the message in the plugin's class namespace.  In this demo the plugin simply tests the message for a string and passes a string in reply.
Also included is a companion python script (event_fd_syscall_client.py) that connects to the syscall plugin's ZMQ socket and passes it test messages.  After starting DRAKVUF with the demo syscall plugin, wait a moment for it to initialize, then start event_fd_syscall_client.py.  The script must be run as root (alternatively, change the permissions on /tmp/testsocket). The following output should be observed:
ZMQ PYTHON CLIENT:
sudo ./event_fd_syscall_client.py
sending ""b'dealer_hello'""
replied ""b'router_hello'""
sending ""b'dealer_hello'""
replied ""b'router_hello'""
sending ""b'dealer_hello'""
replied ""b'router_hello'""
exiting...
DRAKVUF SYSCALL PLUGIN:
... lots of preceeding output tracing syscalls ...
[SYSCALL] TIME:1527706359.648966 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_getuid
[SYSCALL] TIME:1527706359.649050 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_kill
[SYSCALL] TIME:1527706359.649207 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_select
process_message got message from testdealer: ""dealer_hello"", sending back ""router_hello""
process_message got message from testdealer: ""dealer_hello"", sending back ""router_hello""
process_message got message from testdealer: ""dealer_hello"", sending back ""router_hello""
[SYSCALL] TIME:1527706360.922447 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_epoll_ctl
[SYSCALL] TIME:1527706360.922557 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_getsockopt
[SYSCALL] TIME:1527706360.922632 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_close
[SYSCALL] TIME:1527706360.922729 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_clock_gettime
... lots of proceeding output tracing syscalls ...","This is good feedback, thanks!  I should have written more background about where this PR is coming from.  I am respectful and sensitive to how plugins are intended to be event consumers, and there is no intention to disrupt that at all.
My perspective is that DRAKVUF is particularly useful for rapid prototyping because it comes built-in with higher level features beyond libvmi that lets prototyping start and finish more quickly.  For example, someone takes an existing plugin as a starting point and extends it with their particular use case.  In some cases the plugin might end up resembling and acting like a full VMI tool and less like a plugin, which although is not congruent with a plugin’s scope is at least understandable.  Do you think this is a legitimate developer use case for PRs as long as it does no harm to DRAKVUF’s present design and existing plugins?
In any case, you have a good point, the ZMQ-specific portion could benefit all existing plugins if it was moved out of the plugin layer and into a different layer.  Having the ZMQ event code built into drakvuf.cpp and libdrakvuf would make it possible for a DRAKVUF-wide ZMQ channel for multiple plugins to send and receive messages.  This is not possible as written because the WIP requires each plugin to implement its own ZMQ “stack.”
What are your thoughts on separating the WIP into two parts:
Part 1 begins with the ZMQ code presently in event_fd_syscalls.cpp/h.  I could look at building something like this in drakvuf.cpp or libdrakvuf so that it could be used DRAKVUF-wide.  This could lead us to something like a ZMQ output_format_t in the short term (where each plugin’s output could broadcast to a population of subscribers listening on a socket/network) and maybe later the ability to route external commands to an existing plugin, such as using a remote ZMQ client to send shellcode into DRAKVUF for injection or to allow a client to switch on and off which syscalls are instrumented by the syscalls plugin at runtime.  One straightforward approach here might be to set up a single incoming ZMQ socket that would look at the message and route the data to the intended plugin.
Part 2 are the lower level changes to drakvuf.c, libdrakvuf.h, vmi.c, and private.h that allow multiple FDs to be monitored in drakvuf_loop.  This would be used as a base layer for part A and would also empower the rapid prototyping I tried to make a case for earlier.  For rapid prototyping, the thought was to leave it up to the plugin programmer to process the event raised by the FD they registered.  ZMQ is one compatible higher level transport, but perhaps someone already uses some other socket transport or FD-based signaling compatible with DRAKVUF’s event loop that makes more sense for them.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,405,2018-05-30T19:19:43Z,2018-06-06T02:10:52Z,2018-06-06T02:10:52Z,MERGED,True,182,6,7,https://github.com/mbushou,API for additional FD-based event sources,6,[],https://github.com/tklengyel/drakvuf/pull/405,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/405#issuecomment-393608814,"WIP for plugin-defined event sources:
DRAKVUF plugins allow users to build upon the core DRAKVUF framework.  Recently, I was experimenting with a use case that, in addition to consuming normal guest events, needed to also receive messages from an external event source via a ZMQ socket.  This could be used to programmatically send a DRAKVUF plugin a message to change its behavior at runtime and could allow DRAKVUF to be more easily integrated into larger security systems.  This work in progress solution might be useful to others and I wanted offer it for upstream consideration.
This WIP allows plugins to register their own external file-descriptor-based event sources into DRAKVUF's event loop.  A plugin registers one or more file descriptors (FDs) with DRAKVUF and DRAKVUF monitors these FDs along with a guest VM's events.  When a plugin FD is raised, DRAKVUF informs the plugin via a callback passed during registration.  While the demo included in this WIP uses ZMQ, I believe it is generic enough to support other socket-based event sources.
Summary of changes:

Two plugin-facing DRAKVUF functions are added. Plugins use them to register and unregister FDs to DRAKVUF's event loop.

int drakvuf_event_fd_add(drakvuf_t drakvuf, 
                         int fd, 
                         void (*plugin_cb) (int fd, void *data), 
                         void *data, 
                         int flags)

int drakvuf_event_fd_remove(drakvuf_t drakvuf, 
                            int fd)


drakvuf_loop is modified to account for these additional FDs during polling.

drakvuf_event_fd_* functions operate on a linked list of fd_info structs stored in the main drakvuf struct.  Each object contains the fd itself, the plugin callback to be called if the fd is raised, a void* generic data pointer to pass this callback for context, and flags which (initally) are used to tell the difference between a normal VMI event (EVENT_FD_VMI) and a plugin-provided FD (EVENT_FD_PLUGIN).  Each time a new FD is added, the set of fd_info objects is used to re-generate the pollfd struct passed into poll (drakvuf->event_fds) and an array that is used in vmi_loop to quickly look up the fd_info (drakvuf->event_fds).
WIP Demo:
In ./tools is a simple companion demo that shows how the syscall plugin might be modified to trace syscalls and monitor a ZMQ socket for external commands at the same time.
To try out the demo, overwrite the existing syscalls plugin with the demo code:
cp ./tools/event_fd_syscalls.cpp ./src/plugins/syscalls/syscalls.cpp
cp ./tools/event_fd_syscalls.h ./src/plugins/syscalls/syscalls.h
To compile, ensure ZMQ dev libraries are present in dom0, make clean, and append -lzmq to the line starting with ""LIBS ="" inside ./src/plugins/Makefile before recompiling.
In the syscall plugin's constructor, new code is added that creates and primes the syscall plugin's ZMQ socket (/tmp/testsocket).  This demo uses the dealer and router pattern http://zeromq.org/tutorials:dealer-and-router.
Also in syscall.cpp, two new functions, syscall_zmq_cb and zmq_dsend, are used to pass the plugin messages and for the plugin to send replies, respectively.  syscall_zmq_cb is the callback function the syscall plugin registers to drakvuf_event_fd_add.  Two other functions, syscalls::process_zmq and syscalls::process_message, actually process the message in the plugin's class namespace.  In this demo the plugin simply tests the message for a string and passes a string in reply.
Also included is a companion python script (event_fd_syscall_client.py) that connects to the syscall plugin's ZMQ socket and passes it test messages.  After starting DRAKVUF with the demo syscall plugin, wait a moment for it to initialize, then start event_fd_syscall_client.py.  The script must be run as root (alternatively, change the permissions on /tmp/testsocket). The following output should be observed:
ZMQ PYTHON CLIENT:
sudo ./event_fd_syscall_client.py
sending ""b'dealer_hello'""
replied ""b'router_hello'""
sending ""b'dealer_hello'""
replied ""b'router_hello'""
sending ""b'dealer_hello'""
replied ""b'router_hello'""
exiting...
DRAKVUF SYSCALL PLUGIN:
... lots of preceeding output tracing syscalls ...
[SYSCALL] TIME:1527706359.648966 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_getuid
[SYSCALL] TIME:1527706359.649050 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_kill
[SYSCALL] TIME:1527706359.649207 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_select
process_message got message from testdealer: ""dealer_hello"", sending back ""router_hello""
process_message got message from testdealer: ""dealer_hello"", sending back ""router_hello""
process_message got message from testdealer: ""dealer_hello"", sending back ""router_hello""
[SYSCALL] TIME:1527706360.922447 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_epoll_ctl
[SYSCALL] TIME:1527706360.922557 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_getsockopt
[SYSCALL] TIME:1527706360.922632 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_close
[SYSCALL] TIME:1527706360.922729 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_clock_gettime
... lots of proceeding output tracing syscalls ...","For example, someone takes an existing plugin as a starting point and extends it with their particular use case. In some cases the plugin might end up resembling and acting like a full VMI tool and less like a plugin, which although is not congruent with a plugin’s scope is at least understandable. Do you think this is a legitimate developer use case for PRs as long as it does no harm to DRAKVUF’s present design and existing plugins?

Absolutely, take a look at injector for example. It is a standalone tool building on top of libdrakvuf and libinjector. I also try to keep each plugin as self-contained as possible for this exact reason, so that it would be possible to turn them into standalone tools.

What are your thoughts on separating the WIP into two parts

This sounds appropriate to me. Having libdrakvuf pass-in an event-channel to LibVMI, creating the API to add additional fd-s to the loop is very valuable in case for example one wants to plug in network-monitoring capability as well. So this could be a separate PR from the ZMQ bits.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,405,2018-05-30T19:19:43Z,2018-06-06T02:10:52Z,2018-06-06T02:10:52Z,MERGED,True,182,6,7,https://github.com/mbushou,API for additional FD-based event sources,6,[],https://github.com/tklengyel/drakvuf/pull/405,https://github.com/mbushou,5,https://github.com/tklengyel/drakvuf/pull/405#issuecomment-393865850,"WIP for plugin-defined event sources:
DRAKVUF plugins allow users to build upon the core DRAKVUF framework.  Recently, I was experimenting with a use case that, in addition to consuming normal guest events, needed to also receive messages from an external event source via a ZMQ socket.  This could be used to programmatically send a DRAKVUF plugin a message to change its behavior at runtime and could allow DRAKVUF to be more easily integrated into larger security systems.  This work in progress solution might be useful to others and I wanted offer it for upstream consideration.
This WIP allows plugins to register their own external file-descriptor-based event sources into DRAKVUF's event loop.  A plugin registers one or more file descriptors (FDs) with DRAKVUF and DRAKVUF monitors these FDs along with a guest VM's events.  When a plugin FD is raised, DRAKVUF informs the plugin via a callback passed during registration.  While the demo included in this WIP uses ZMQ, I believe it is generic enough to support other socket-based event sources.
Summary of changes:

Two plugin-facing DRAKVUF functions are added. Plugins use them to register and unregister FDs to DRAKVUF's event loop.

int drakvuf_event_fd_add(drakvuf_t drakvuf, 
                         int fd, 
                         void (*plugin_cb) (int fd, void *data), 
                         void *data, 
                         int flags)

int drakvuf_event_fd_remove(drakvuf_t drakvuf, 
                            int fd)


drakvuf_loop is modified to account for these additional FDs during polling.

drakvuf_event_fd_* functions operate on a linked list of fd_info structs stored in the main drakvuf struct.  Each object contains the fd itself, the plugin callback to be called if the fd is raised, a void* generic data pointer to pass this callback for context, and flags which (initally) are used to tell the difference between a normal VMI event (EVENT_FD_VMI) and a plugin-provided FD (EVENT_FD_PLUGIN).  Each time a new FD is added, the set of fd_info objects is used to re-generate the pollfd struct passed into poll (drakvuf->event_fds) and an array that is used in vmi_loop to quickly look up the fd_info (drakvuf->event_fds).
WIP Demo:
In ./tools is a simple companion demo that shows how the syscall plugin might be modified to trace syscalls and monitor a ZMQ socket for external commands at the same time.
To try out the demo, overwrite the existing syscalls plugin with the demo code:
cp ./tools/event_fd_syscalls.cpp ./src/plugins/syscalls/syscalls.cpp
cp ./tools/event_fd_syscalls.h ./src/plugins/syscalls/syscalls.h
To compile, ensure ZMQ dev libraries are present in dom0, make clean, and append -lzmq to the line starting with ""LIBS ="" inside ./src/plugins/Makefile before recompiling.
In the syscall plugin's constructor, new code is added that creates and primes the syscall plugin's ZMQ socket (/tmp/testsocket).  This demo uses the dealer and router pattern http://zeromq.org/tutorials:dealer-and-router.
Also in syscall.cpp, two new functions, syscall_zmq_cb and zmq_dsend, are used to pass the plugin messages and for the plugin to send replies, respectively.  syscall_zmq_cb is the callback function the syscall plugin registers to drakvuf_event_fd_add.  Two other functions, syscalls::process_zmq and syscalls::process_message, actually process the message in the plugin's class namespace.  In this demo the plugin simply tests the message for a string and passes a string in reply.
Also included is a companion python script (event_fd_syscall_client.py) that connects to the syscall plugin's ZMQ socket and passes it test messages.  After starting DRAKVUF with the demo syscall plugin, wait a moment for it to initialize, then start event_fd_syscall_client.py.  The script must be run as root (alternatively, change the permissions on /tmp/testsocket). The following output should be observed:
ZMQ PYTHON CLIENT:
sudo ./event_fd_syscall_client.py
sending ""b'dealer_hello'""
replied ""b'router_hello'""
sending ""b'dealer_hello'""
replied ""b'router_hello'""
sending ""b'dealer_hello'""
replied ""b'router_hello'""
exiting...
DRAKVUF SYSCALL PLUGIN:
... lots of preceeding output tracing syscalls ...
[SYSCALL] TIME:1527706359.648966 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_getuid
[SYSCALL] TIME:1527706359.649050 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_kill
[SYSCALL] TIME:1527706359.649207 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_select
process_message got message from testdealer: ""dealer_hello"", sending back ""router_hello""
process_message got message from testdealer: ""dealer_hello"", sending back ""router_hello""
process_message got message from testdealer: ""dealer_hello"", sending back ""router_hello""
[SYSCALL] TIME:1527706360.922447 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_epoll_ctl
[SYSCALL] TIME:1527706360.922557 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_getsockopt
[SYSCALL] TIME:1527706360.922632 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_close
[SYSCALL] TIME:1527706360.922729 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_clock_gettime
... lots of proceeding output tracing syscalls ...","Makes sense, thanks Tamas.  I will start moving in this direction.  I plan to rebrand this PR as the event FD API (after cutting out its ZMQ bits).  Expect a 2nd WIP PR for the optional DRAKVUF-wide ZMQ API at some point in the future.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,405,2018-05-30T19:19:43Z,2018-06-06T02:10:52Z,2018-06-06T02:10:52Z,MERGED,True,182,6,7,https://github.com/mbushou,API for additional FD-based event sources,6,[],https://github.com/tklengyel/drakvuf/pull/405,https://github.com/mbushou,6,https://github.com/tklengyel/drakvuf/pull/405#issuecomment-394446925,"WIP for plugin-defined event sources:
DRAKVUF plugins allow users to build upon the core DRAKVUF framework.  Recently, I was experimenting with a use case that, in addition to consuming normal guest events, needed to also receive messages from an external event source via a ZMQ socket.  This could be used to programmatically send a DRAKVUF plugin a message to change its behavior at runtime and could allow DRAKVUF to be more easily integrated into larger security systems.  This work in progress solution might be useful to others and I wanted offer it for upstream consideration.
This WIP allows plugins to register their own external file-descriptor-based event sources into DRAKVUF's event loop.  A plugin registers one or more file descriptors (FDs) with DRAKVUF and DRAKVUF monitors these FDs along with a guest VM's events.  When a plugin FD is raised, DRAKVUF informs the plugin via a callback passed during registration.  While the demo included in this WIP uses ZMQ, I believe it is generic enough to support other socket-based event sources.
Summary of changes:

Two plugin-facing DRAKVUF functions are added. Plugins use them to register and unregister FDs to DRAKVUF's event loop.

int drakvuf_event_fd_add(drakvuf_t drakvuf, 
                         int fd, 
                         void (*plugin_cb) (int fd, void *data), 
                         void *data, 
                         int flags)

int drakvuf_event_fd_remove(drakvuf_t drakvuf, 
                            int fd)


drakvuf_loop is modified to account for these additional FDs during polling.

drakvuf_event_fd_* functions operate on a linked list of fd_info structs stored in the main drakvuf struct.  Each object contains the fd itself, the plugin callback to be called if the fd is raised, a void* generic data pointer to pass this callback for context, and flags which (initally) are used to tell the difference between a normal VMI event (EVENT_FD_VMI) and a plugin-provided FD (EVENT_FD_PLUGIN).  Each time a new FD is added, the set of fd_info objects is used to re-generate the pollfd struct passed into poll (drakvuf->event_fds) and an array that is used in vmi_loop to quickly look up the fd_info (drakvuf->event_fds).
WIP Demo:
In ./tools is a simple companion demo that shows how the syscall plugin might be modified to trace syscalls and monitor a ZMQ socket for external commands at the same time.
To try out the demo, overwrite the existing syscalls plugin with the demo code:
cp ./tools/event_fd_syscalls.cpp ./src/plugins/syscalls/syscalls.cpp
cp ./tools/event_fd_syscalls.h ./src/plugins/syscalls/syscalls.h
To compile, ensure ZMQ dev libraries are present in dom0, make clean, and append -lzmq to the line starting with ""LIBS ="" inside ./src/plugins/Makefile before recompiling.
In the syscall plugin's constructor, new code is added that creates and primes the syscall plugin's ZMQ socket (/tmp/testsocket).  This demo uses the dealer and router pattern http://zeromq.org/tutorials:dealer-and-router.
Also in syscall.cpp, two new functions, syscall_zmq_cb and zmq_dsend, are used to pass the plugin messages and for the plugin to send replies, respectively.  syscall_zmq_cb is the callback function the syscall plugin registers to drakvuf_event_fd_add.  Two other functions, syscalls::process_zmq and syscalls::process_message, actually process the message in the plugin's class namespace.  In this demo the plugin simply tests the message for a string and passes a string in reply.
Also included is a companion python script (event_fd_syscall_client.py) that connects to the syscall plugin's ZMQ socket and passes it test messages.  After starting DRAKVUF with the demo syscall plugin, wait a moment for it to initialize, then start event_fd_syscall_client.py.  The script must be run as root (alternatively, change the permissions on /tmp/testsocket). The following output should be observed:
ZMQ PYTHON CLIENT:
sudo ./event_fd_syscall_client.py
sending ""b'dealer_hello'""
replied ""b'router_hello'""
sending ""b'dealer_hello'""
replied ""b'router_hello'""
sending ""b'dealer_hello'""
replied ""b'router_hello'""
exiting...
DRAKVUF SYSCALL PLUGIN:
... lots of preceeding output tracing syscalls ...
[SYSCALL] TIME:1527706359.648966 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_getuid
[SYSCALL] TIME:1527706359.649050 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_kill
[SYSCALL] TIME:1527706359.649207 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_select
process_message got message from testdealer: ""dealer_hello"", sending back ""router_hello""
process_message got message from testdealer: ""dealer_hello"", sending back ""router_hello""
process_message got message from testdealer: ""dealer_hello"", sending back ""router_hello""
[SYSCALL] TIME:1527706360.922447 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_epoll_ctl
[SYSCALL] TIME:1527706360.922557 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_getsockopt
[SYSCALL] TIME:1527706360.922632 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_close
[SYSCALL] TIME:1527706360.922729 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_clock_gettime
... lots of proceeding output tracing syscalls ...",Thanks!  Rebased.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,405,2018-05-30T19:19:43Z,2018-06-06T02:10:52Z,2018-06-06T02:10:52Z,MERGED,True,182,6,7,https://github.com/mbushou,API for additional FD-based event sources,6,[],https://github.com/tklengyel/drakvuf/pull/405,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/405#issuecomment-394836282,"WIP for plugin-defined event sources:
DRAKVUF plugins allow users to build upon the core DRAKVUF framework.  Recently, I was experimenting with a use case that, in addition to consuming normal guest events, needed to also receive messages from an external event source via a ZMQ socket.  This could be used to programmatically send a DRAKVUF plugin a message to change its behavior at runtime and could allow DRAKVUF to be more easily integrated into larger security systems.  This work in progress solution might be useful to others and I wanted offer it for upstream consideration.
This WIP allows plugins to register their own external file-descriptor-based event sources into DRAKVUF's event loop.  A plugin registers one or more file descriptors (FDs) with DRAKVUF and DRAKVUF monitors these FDs along with a guest VM's events.  When a plugin FD is raised, DRAKVUF informs the plugin via a callback passed during registration.  While the demo included in this WIP uses ZMQ, I believe it is generic enough to support other socket-based event sources.
Summary of changes:

Two plugin-facing DRAKVUF functions are added. Plugins use them to register and unregister FDs to DRAKVUF's event loop.

int drakvuf_event_fd_add(drakvuf_t drakvuf, 
                         int fd, 
                         void (*plugin_cb) (int fd, void *data), 
                         void *data, 
                         int flags)

int drakvuf_event_fd_remove(drakvuf_t drakvuf, 
                            int fd)


drakvuf_loop is modified to account for these additional FDs during polling.

drakvuf_event_fd_* functions operate on a linked list of fd_info structs stored in the main drakvuf struct.  Each object contains the fd itself, the plugin callback to be called if the fd is raised, a void* generic data pointer to pass this callback for context, and flags which (initally) are used to tell the difference between a normal VMI event (EVENT_FD_VMI) and a plugin-provided FD (EVENT_FD_PLUGIN).  Each time a new FD is added, the set of fd_info objects is used to re-generate the pollfd struct passed into poll (drakvuf->event_fds) and an array that is used in vmi_loop to quickly look up the fd_info (drakvuf->event_fds).
WIP Demo:
In ./tools is a simple companion demo that shows how the syscall plugin might be modified to trace syscalls and monitor a ZMQ socket for external commands at the same time.
To try out the demo, overwrite the existing syscalls plugin with the demo code:
cp ./tools/event_fd_syscalls.cpp ./src/plugins/syscalls/syscalls.cpp
cp ./tools/event_fd_syscalls.h ./src/plugins/syscalls/syscalls.h
To compile, ensure ZMQ dev libraries are present in dom0, make clean, and append -lzmq to the line starting with ""LIBS ="" inside ./src/plugins/Makefile before recompiling.
In the syscall plugin's constructor, new code is added that creates and primes the syscall plugin's ZMQ socket (/tmp/testsocket).  This demo uses the dealer and router pattern http://zeromq.org/tutorials:dealer-and-router.
Also in syscall.cpp, two new functions, syscall_zmq_cb and zmq_dsend, are used to pass the plugin messages and for the plugin to send replies, respectively.  syscall_zmq_cb is the callback function the syscall plugin registers to drakvuf_event_fd_add.  Two other functions, syscalls::process_zmq and syscalls::process_message, actually process the message in the plugin's class namespace.  In this demo the plugin simply tests the message for a string and passes a string in reply.
Also included is a companion python script (event_fd_syscall_client.py) that connects to the syscall plugin's ZMQ socket and passes it test messages.  After starting DRAKVUF with the demo syscall plugin, wait a moment for it to initialize, then start event_fd_syscall_client.py.  The script must be run as root (alternatively, change the permissions on /tmp/testsocket). The following output should be observed:
ZMQ PYTHON CLIENT:
sudo ./event_fd_syscall_client.py
sending ""b'dealer_hello'""
replied ""b'router_hello'""
sending ""b'dealer_hello'""
replied ""b'router_hello'""
sending ""b'dealer_hello'""
replied ""b'router_hello'""
exiting...
DRAKVUF SYSCALL PLUGIN:
... lots of preceeding output tracing syscalls ...
[SYSCALL] TIME:1527706359.648966 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_getuid
[SYSCALL] TIME:1527706359.649050 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_kill
[SYSCALL] TIME:1527706359.649207 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_select
process_message got message from testdealer: ""dealer_hello"", sending back ""router_hello""
process_message got message from testdealer: ""dealer_hello"", sending back ""router_hello""
process_message got message from testdealer: ""dealer_hello"", sending back ""router_hello""
[SYSCALL] TIME:1527706360.922447 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_epoll_ctl
[SYSCALL] TIME:1527706360.922557 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_getsockopt
[SYSCALL] TIME:1527706360.922632 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_close
[SYSCALL] TIME:1527706360.922729 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_clock_gettime
... lots of proceeding output tracing syscalls ...",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,405,2018-05-30T19:19:43Z,2018-06-06T02:10:52Z,2018-06-06T02:10:52Z,MERGED,True,182,6,7,https://github.com/mbushou,API for additional FD-based event sources,6,[],https://github.com/tklengyel/drakvuf/pull/405,https://github.com/drakvuf-jenkins,8,https://github.com/tklengyel/drakvuf/pull/405#issuecomment-394836292,"WIP for plugin-defined event sources:
DRAKVUF plugins allow users to build upon the core DRAKVUF framework.  Recently, I was experimenting with a use case that, in addition to consuming normal guest events, needed to also receive messages from an external event source via a ZMQ socket.  This could be used to programmatically send a DRAKVUF plugin a message to change its behavior at runtime and could allow DRAKVUF to be more easily integrated into larger security systems.  This work in progress solution might be useful to others and I wanted offer it for upstream consideration.
This WIP allows plugins to register their own external file-descriptor-based event sources into DRAKVUF's event loop.  A plugin registers one or more file descriptors (FDs) with DRAKVUF and DRAKVUF monitors these FDs along with a guest VM's events.  When a plugin FD is raised, DRAKVUF informs the plugin via a callback passed during registration.  While the demo included in this WIP uses ZMQ, I believe it is generic enough to support other socket-based event sources.
Summary of changes:

Two plugin-facing DRAKVUF functions are added. Plugins use them to register and unregister FDs to DRAKVUF's event loop.

int drakvuf_event_fd_add(drakvuf_t drakvuf, 
                         int fd, 
                         void (*plugin_cb) (int fd, void *data), 
                         void *data, 
                         int flags)

int drakvuf_event_fd_remove(drakvuf_t drakvuf, 
                            int fd)


drakvuf_loop is modified to account for these additional FDs during polling.

drakvuf_event_fd_* functions operate on a linked list of fd_info structs stored in the main drakvuf struct.  Each object contains the fd itself, the plugin callback to be called if the fd is raised, a void* generic data pointer to pass this callback for context, and flags which (initally) are used to tell the difference between a normal VMI event (EVENT_FD_VMI) and a plugin-provided FD (EVENT_FD_PLUGIN).  Each time a new FD is added, the set of fd_info objects is used to re-generate the pollfd struct passed into poll (drakvuf->event_fds) and an array that is used in vmi_loop to quickly look up the fd_info (drakvuf->event_fds).
WIP Demo:
In ./tools is a simple companion demo that shows how the syscall plugin might be modified to trace syscalls and monitor a ZMQ socket for external commands at the same time.
To try out the demo, overwrite the existing syscalls plugin with the demo code:
cp ./tools/event_fd_syscalls.cpp ./src/plugins/syscalls/syscalls.cpp
cp ./tools/event_fd_syscalls.h ./src/plugins/syscalls/syscalls.h
To compile, ensure ZMQ dev libraries are present in dom0, make clean, and append -lzmq to the line starting with ""LIBS ="" inside ./src/plugins/Makefile before recompiling.
In the syscall plugin's constructor, new code is added that creates and primes the syscall plugin's ZMQ socket (/tmp/testsocket).  This demo uses the dealer and router pattern http://zeromq.org/tutorials:dealer-and-router.
Also in syscall.cpp, two new functions, syscall_zmq_cb and zmq_dsend, are used to pass the plugin messages and for the plugin to send replies, respectively.  syscall_zmq_cb is the callback function the syscall plugin registers to drakvuf_event_fd_add.  Two other functions, syscalls::process_zmq and syscalls::process_message, actually process the message in the plugin's class namespace.  In this demo the plugin simply tests the message for a string and passes a string in reply.
Also included is a companion python script (event_fd_syscall_client.py) that connects to the syscall plugin's ZMQ socket and passes it test messages.  After starting DRAKVUF with the demo syscall plugin, wait a moment for it to initialize, then start event_fd_syscall_client.py.  The script must be run as root (alternatively, change the permissions on /tmp/testsocket). The following output should be observed:
ZMQ PYTHON CLIENT:
sudo ./event_fd_syscall_client.py
sending ""b'dealer_hello'""
replied ""b'router_hello'""
sending ""b'dealer_hello'""
replied ""b'router_hello'""
sending ""b'dealer_hello'""
replied ""b'router_hello'""
exiting...
DRAKVUF SYSCALL PLUGIN:
... lots of preceeding output tracing syscalls ...
[SYSCALL] TIME:1527706359.648966 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_getuid
[SYSCALL] TIME:1527706359.649050 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_kill
[SYSCALL] TIME:1527706359.649207 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_select
process_message got message from testdealer: ""dealer_hello"", sending back ""router_hello""
process_message got message from testdealer: ""dealer_hello"", sending back ""router_hello""
process_message got message from testdealer: ""dealer_hello"", sending back ""router_hello""
[SYSCALL] TIME:1527706360.922447 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_epoll_ctl
[SYSCALL] TIME:1527706360.922557 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_getsockopt
[SYSCALL] TIME:1527706360.922632 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_close
[SYSCALL] TIME:1527706360.922729 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_clock_gettime
... lots of proceeding output tracing syscalls ...",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,405,2018-05-30T19:19:43Z,2018-06-06T02:10:52Z,2018-06-06T02:10:52Z,MERGED,True,182,6,7,https://github.com/mbushou,API for additional FD-based event sources,6,[],https://github.com/tklengyel/drakvuf/pull/405,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/405#issuecomment-394879140,"WIP for plugin-defined event sources:
DRAKVUF plugins allow users to build upon the core DRAKVUF framework.  Recently, I was experimenting with a use case that, in addition to consuming normal guest events, needed to also receive messages from an external event source via a ZMQ socket.  This could be used to programmatically send a DRAKVUF plugin a message to change its behavior at runtime and could allow DRAKVUF to be more easily integrated into larger security systems.  This work in progress solution might be useful to others and I wanted offer it for upstream consideration.
This WIP allows plugins to register their own external file-descriptor-based event sources into DRAKVUF's event loop.  A plugin registers one or more file descriptors (FDs) with DRAKVUF and DRAKVUF monitors these FDs along with a guest VM's events.  When a plugin FD is raised, DRAKVUF informs the plugin via a callback passed during registration.  While the demo included in this WIP uses ZMQ, I believe it is generic enough to support other socket-based event sources.
Summary of changes:

Two plugin-facing DRAKVUF functions are added. Plugins use them to register and unregister FDs to DRAKVUF's event loop.

int drakvuf_event_fd_add(drakvuf_t drakvuf, 
                         int fd, 
                         void (*plugin_cb) (int fd, void *data), 
                         void *data, 
                         int flags)

int drakvuf_event_fd_remove(drakvuf_t drakvuf, 
                            int fd)


drakvuf_loop is modified to account for these additional FDs during polling.

drakvuf_event_fd_* functions operate on a linked list of fd_info structs stored in the main drakvuf struct.  Each object contains the fd itself, the plugin callback to be called if the fd is raised, a void* generic data pointer to pass this callback for context, and flags which (initally) are used to tell the difference between a normal VMI event (EVENT_FD_VMI) and a plugin-provided FD (EVENT_FD_PLUGIN).  Each time a new FD is added, the set of fd_info objects is used to re-generate the pollfd struct passed into poll (drakvuf->event_fds) and an array that is used in vmi_loop to quickly look up the fd_info (drakvuf->event_fds).
WIP Demo:
In ./tools is a simple companion demo that shows how the syscall plugin might be modified to trace syscalls and monitor a ZMQ socket for external commands at the same time.
To try out the demo, overwrite the existing syscalls plugin with the demo code:
cp ./tools/event_fd_syscalls.cpp ./src/plugins/syscalls/syscalls.cpp
cp ./tools/event_fd_syscalls.h ./src/plugins/syscalls/syscalls.h
To compile, ensure ZMQ dev libraries are present in dom0, make clean, and append -lzmq to the line starting with ""LIBS ="" inside ./src/plugins/Makefile before recompiling.
In the syscall plugin's constructor, new code is added that creates and primes the syscall plugin's ZMQ socket (/tmp/testsocket).  This demo uses the dealer and router pattern http://zeromq.org/tutorials:dealer-and-router.
Also in syscall.cpp, two new functions, syscall_zmq_cb and zmq_dsend, are used to pass the plugin messages and for the plugin to send replies, respectively.  syscall_zmq_cb is the callback function the syscall plugin registers to drakvuf_event_fd_add.  Two other functions, syscalls::process_zmq and syscalls::process_message, actually process the message in the plugin's class namespace.  In this demo the plugin simply tests the message for a string and passes a string in reply.
Also included is a companion python script (event_fd_syscall_client.py) that connects to the syscall plugin's ZMQ socket and passes it test messages.  After starting DRAKVUF with the demo syscall plugin, wait a moment for it to initialize, then start event_fd_syscall_client.py.  The script must be run as root (alternatively, change the permissions on /tmp/testsocket). The following output should be observed:
ZMQ PYTHON CLIENT:
sudo ./event_fd_syscall_client.py
sending ""b'dealer_hello'""
replied ""b'router_hello'""
sending ""b'dealer_hello'""
replied ""b'router_hello'""
sending ""b'dealer_hello'""
replied ""b'router_hello'""
exiting...
DRAKVUF SYSCALL PLUGIN:
... lots of preceeding output tracing syscalls ...
[SYSCALL] TIME:1527706359.648966 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_getuid
[SYSCALL] TIME:1527706359.649050 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_kill
[SYSCALL] TIME:1527706359.649207 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_select
process_message got message from testdealer: ""dealer_hello"", sending back ""router_hello""
process_message got message from testdealer: ""dealer_hello"", sending back ""router_hello""
process_message got message from testdealer: ""dealer_hello"", sending back ""router_hello""
[SYSCALL] TIME:1527706360.922447 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_epoll_ctl
[SYSCALL] TIME:1527706360.922557 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_getsockopt
[SYSCALL] TIME:1527706360.922632 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_close
[SYSCALL] TIME:1527706360.922729 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_clock_gettime
... lots of proceeding output tracing syscalls ...",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,405,2018-05-30T19:19:43Z,2018-06-06T02:10:52Z,2018-06-06T02:10:52Z,MERGED,True,182,6,7,https://github.com/mbushou,API for additional FD-based event sources,6,[],https://github.com/tklengyel/drakvuf/pull/405,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/405#issuecomment-394917154,"WIP for plugin-defined event sources:
DRAKVUF plugins allow users to build upon the core DRAKVUF framework.  Recently, I was experimenting with a use case that, in addition to consuming normal guest events, needed to also receive messages from an external event source via a ZMQ socket.  This could be used to programmatically send a DRAKVUF plugin a message to change its behavior at runtime and could allow DRAKVUF to be more easily integrated into larger security systems.  This work in progress solution might be useful to others and I wanted offer it for upstream consideration.
This WIP allows plugins to register their own external file-descriptor-based event sources into DRAKVUF's event loop.  A plugin registers one or more file descriptors (FDs) with DRAKVUF and DRAKVUF monitors these FDs along with a guest VM's events.  When a plugin FD is raised, DRAKVUF informs the plugin via a callback passed during registration.  While the demo included in this WIP uses ZMQ, I believe it is generic enough to support other socket-based event sources.
Summary of changes:

Two plugin-facing DRAKVUF functions are added. Plugins use them to register and unregister FDs to DRAKVUF's event loop.

int drakvuf_event_fd_add(drakvuf_t drakvuf, 
                         int fd, 
                         void (*plugin_cb) (int fd, void *data), 
                         void *data, 
                         int flags)

int drakvuf_event_fd_remove(drakvuf_t drakvuf, 
                            int fd)


drakvuf_loop is modified to account for these additional FDs during polling.

drakvuf_event_fd_* functions operate on a linked list of fd_info structs stored in the main drakvuf struct.  Each object contains the fd itself, the plugin callback to be called if the fd is raised, a void* generic data pointer to pass this callback for context, and flags which (initally) are used to tell the difference between a normal VMI event (EVENT_FD_VMI) and a plugin-provided FD (EVENT_FD_PLUGIN).  Each time a new FD is added, the set of fd_info objects is used to re-generate the pollfd struct passed into poll (drakvuf->event_fds) and an array that is used in vmi_loop to quickly look up the fd_info (drakvuf->event_fds).
WIP Demo:
In ./tools is a simple companion demo that shows how the syscall plugin might be modified to trace syscalls and monitor a ZMQ socket for external commands at the same time.
To try out the demo, overwrite the existing syscalls plugin with the demo code:
cp ./tools/event_fd_syscalls.cpp ./src/plugins/syscalls/syscalls.cpp
cp ./tools/event_fd_syscalls.h ./src/plugins/syscalls/syscalls.h
To compile, ensure ZMQ dev libraries are present in dom0, make clean, and append -lzmq to the line starting with ""LIBS ="" inside ./src/plugins/Makefile before recompiling.
In the syscall plugin's constructor, new code is added that creates and primes the syscall plugin's ZMQ socket (/tmp/testsocket).  This demo uses the dealer and router pattern http://zeromq.org/tutorials:dealer-and-router.
Also in syscall.cpp, two new functions, syscall_zmq_cb and zmq_dsend, are used to pass the plugin messages and for the plugin to send replies, respectively.  syscall_zmq_cb is the callback function the syscall plugin registers to drakvuf_event_fd_add.  Two other functions, syscalls::process_zmq and syscalls::process_message, actually process the message in the plugin's class namespace.  In this demo the plugin simply tests the message for a string and passes a string in reply.
Also included is a companion python script (event_fd_syscall_client.py) that connects to the syscall plugin's ZMQ socket and passes it test messages.  After starting DRAKVUF with the demo syscall plugin, wait a moment for it to initialize, then start event_fd_syscall_client.py.  The script must be run as root (alternatively, change the permissions on /tmp/testsocket). The following output should be observed:
ZMQ PYTHON CLIENT:
sudo ./event_fd_syscall_client.py
sending ""b'dealer_hello'""
replied ""b'router_hello'""
sending ""b'dealer_hello'""
replied ""b'router_hello'""
sending ""b'dealer_hello'""
replied ""b'router_hello'""
exiting...
DRAKVUF SYSCALL PLUGIN:
... lots of preceeding output tracing syscalls ...
[SYSCALL] TIME:1527706359.648966 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_getuid
[SYSCALL] TIME:1527706359.649050 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_kill
[SYSCALL] TIME:1527706359.649207 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_select
process_message got message from testdealer: ""dealer_hello"", sending back ""router_hello""
process_message got message from testdealer: ""dealer_hello"", sending back ""router_hello""
process_message got message from testdealer: ""dealer_hello"", sending back ""router_hello""
[SYSCALL] TIME:1527706360.922447 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_epoll_ctl
[SYSCALL] TIME:1527706360.922557 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_getsockopt
[SYSCALL] TIME:1527706360.922632 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_close
[SYSCALL] TIME:1527706360.922729 VCPU:0 CR3:0x3a61d000,""salt-minion"" UID:0 linux!sys_clock_gettime
... lots of proceeding output tracing syscalls ...",Looks good! Thanks!,True,{'THUMBS_UP': ['https://github.com/mbushou']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,407,2018-06-02T11:17:40Z,2018-06-27T19:09:22Z,2018-06-27T19:13:20Z,MERGED,True,226,286,2,https://github.com/mdolmen,Universal function to set the stack,16,[],https://github.com/tklengyel/drakvuf/pull/407,https://github.com/mdolmen,1,https://github.com/tklengyel/drakvuf/pull/407,Ease the process of adding a new Windows API function support.,Ease the process of adding a new Windows API function support.,True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,407,2018-06-02T11:17:40Z,2018-06-27T19:09:22Z,2018-06-27T19:13:20Z,MERGED,True,226,286,2,https://github.com/mdolmen,Universal function to set the stack,16,[],https://github.com/tklengyel/drakvuf/pull/407,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/407#issuecomment-395639262,Ease the process of adding a new Windows API function support.,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,407,2018-06-02T11:17:40Z,2018-06-27T19:09:22Z,2018-06-27T19:13:20Z,MERGED,True,226,286,2,https://github.com/mdolmen,Universal function to set the stack,16,[],https://github.com/tklengyel/drakvuf/pull/407,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/407#issuecomment-395639267,Ease the process of adding a new Windows API function support.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,407,2018-06-02T11:17:40Z,2018-06-27T19:09:22Z,2018-06-27T19:13:20Z,MERGED,True,226,286,2,https://github.com/mdolmen,Universal function to set the stack,16,[],https://github.com/tklengyel/drakvuf/pull/407,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/407#issuecomment-395648617,Ease the process of adding a new Windows API function support.,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,407,2018-06-02T11:17:40Z,2018-06-27T19:09:22Z,2018-06-27T19:13:20Z,MERGED,True,226,286,2,https://github.com/mdolmen,Universal function to set the stack,16,[],https://github.com/tklengyel/drakvuf/pull/407,https://github.com/mdolmen,5,https://github.com/tklengyel/drakvuf/pull/407#issuecomment-395667041,Ease the process of adding a new Windows API function support.,I can't access to Jenkins details..,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,407,2018-06-02T11:17:40Z,2018-06-27T19:09:22Z,2018-06-27T19:13:20Z,MERGED,True,226,286,2,https://github.com/mdolmen,Universal function to set the stack,16,[],https://github.com/tklengyel/drakvuf/pull/407,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/407#issuecomment-395689669,Ease the process of adding a new Windows API function support.,"@mdolmen that's ok, Jenkins has been finicky lately. Could you make sure your branch is up-to-date with the current master branch?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,407,2018-06-02T11:17:40Z,2018-06-27T19:09:22Z,2018-06-27T19:13:20Z,MERGED,True,226,286,2,https://github.com/mdolmen,Universal function to set the stack,16,[],https://github.com/tklengyel/drakvuf/pull/407,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/407#issuecomment-395833749,Ease the process of adding a new Windows API function support.,So the problem Jenkins is having with this PR is that doing multiple injections in the row fail. Could you check on your side whether you can reproduce that problem?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,407,2018-06-02T11:17:40Z,2018-06-27T19:09:22Z,2018-06-27T19:13:20Z,MERGED,True,226,286,2,https://github.com/mdolmen,Universal function to set the stack,16,[],https://github.com/tklengyel/drakvuf/pull/407,https://github.com/mdolmen,8,https://github.com/tklengyel/drakvuf/pull/407#issuecomment-395834473,Ease the process of adding a new Windows API function support.,Ok I'll try,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,407,2018-06-02T11:17:40Z,2018-06-27T19:09:22Z,2018-06-27T19:13:20Z,MERGED,True,226,286,2,https://github.com/mdolmen,Universal function to set the stack,16,[],https://github.com/tklengyel/drakvuf/pull/407,https://github.com/mdolmen,9,https://github.com/tklengyel/drakvuf/pull/407#issuecomment-395836522,Ease the process of adding a new Windows API function support.,"I must have done something wrong with my commits at some point, some of them which are in my experimenting branch was present to master too..",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,407,2018-06-02T11:17:40Z,2018-06-27T19:09:22Z,2018-06-27T19:13:20Z,MERGED,True,226,286,2,https://github.com/mdolmen,Universal function to set the stack,16,[],https://github.com/tklengyel/drakvuf/pull/407,https://github.com/mdolmen,10,https://github.com/tklengyel/drakvuf/pull/407#issuecomment-395837432,Ease the process of adding a new Windows API function support.,"Multiple injections in a row is working on my machine, for both shellexec and createproc.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,407,2018-06-02T11:17:40Z,2018-06-27T19:09:22Z,2018-06-27T19:13:20Z,MERGED,True,226,286,2,https://github.com/mdolmen,Universal function to set the stack,16,[],https://github.com/tklengyel/drakvuf/pull/407,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/407#issuecomment-395868245,Ease the process of adding a new Windows API function support.,"This looks good and does work when I tested manually. However, for merging we will also need 32-bit support.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,407,2018-06-02T11:17:40Z,2018-06-27T19:09:22Z,2018-06-27T19:13:20Z,MERGED,True,226,286,2,https://github.com/mdolmen,Universal function to set the stack,16,[],https://github.com/tklengyel/drakvuf/pull/407,https://github.com/mdolmen,12,https://github.com/tklengyel/drakvuf/pull/407#issuecomment-395875402,Ease the process of adding a new Windows API function support.,Ok I'll work on that then.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,407,2018-06-02T11:17:40Z,2018-06-27T19:09:22Z,2018-06-27T19:13:20Z,MERGED,True,226,286,2,https://github.com/mdolmen,Universal function to set the stack,16,[],https://github.com/tklengyel/drakvuf/pull/407,https://github.com/tklengyel,13,https://github.com/tklengyel/drakvuf/pull/407#issuecomment-396011212,Ease the process of adding a new Windows API function support.,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,407,2018-06-02T11:17:40Z,2018-06-27T19:09:22Z,2018-06-27T19:13:20Z,MERGED,True,226,286,2,https://github.com/mdolmen,Universal function to set the stack,16,[],https://github.com/tklengyel/drakvuf/pull/407,https://github.com/tklengyel,14,https://github.com/tklengyel/drakvuf/pull/407#issuecomment-400793991,Ease the process of adding a new Windows API function support.,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,407,2018-06-02T11:17:40Z,2018-06-27T19:09:22Z,2018-06-27T19:13:20Z,MERGED,True,226,286,2,https://github.com/mdolmen,Universal function to set the stack,16,[],https://github.com/tklengyel/drakvuf/pull/407,https://github.com/tklengyel,15,https://github.com/tklengyel/drakvuf/pull/407#issuecomment-400796043,Ease the process of adding a new Windows API function support.,"@mdolmen very nice! Looks good, passes the tests :) Good job!",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,407,2018-06-02T11:17:40Z,2018-06-27T19:09:22Z,2018-06-27T19:13:20Z,MERGED,True,226,286,2,https://github.com/mdolmen,Universal function to set the stack,16,[],https://github.com/tklengyel/drakvuf/pull/407,https://github.com/mdolmen,16,https://github.com/tklengyel/drakvuf/pull/407#issuecomment-400797354,Ease the process of adding a new Windows API function support.,Perfect! Thanks :),True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,408,2018-06-06T06:11:06Z,2018-06-08T04:29:55Z,2018-06-08T04:29:55Z,CLOSED,False,37,0,2,https://github.com/ssentanoe,fix issue #309,1,[],https://github.com/tklengyel/drakvuf/pull/408,https://github.com/ssentanoe,1,https://github.com/tklengyel/drakvuf/pull/408,"mask empty page to FF, add trap to it and emulate no write to both of shadow page and empty page (latest libvmi required)","mask empty page to FF, add trap to it and emulate no write to both of shadow page and empty page (latest libvmi required)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,408,2018-06-06T06:11:06Z,2018-06-08T04:29:55Z,2018-06-08T04:29:55Z,CLOSED,False,37,0,2,https://github.com/ssentanoe,fix issue #309,1,[],https://github.com/tklengyel/drakvuf/pull/408,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/408#issuecomment-394951679,"mask empty page to FF, add trap to it and emulate no write to both of shadow page and empty page (latest libvmi required)",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,408,2018-06-06T06:11:06Z,2018-06-08T04:29:55Z,2018-06-08T04:29:55Z,CLOSED,False,37,0,2,https://github.com/ssentanoe,fix issue #309,1,[],https://github.com/tklengyel/drakvuf/pull/408,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/408#issuecomment-395033723,"mask empty page to FF, add trap to it and emulate no write to both of shadow page and empty page (latest libvmi required)",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,408,2018-06-06T06:11:06Z,2018-06-08T04:29:55Z,2018-06-08T04:29:55Z,CLOSED,False,37,0,2,https://github.com/ssentanoe,fix issue #309,1,[],https://github.com/tklengyel/drakvuf/pull/408,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/408#issuecomment-395119101,"mask empty page to FF, add trap to it and emulate no write to both of shadow page and empty page (latest libvmi required)",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,408,2018-06-06T06:11:06Z,2018-06-08T04:29:55Z,2018-06-08T04:29:55Z,CLOSED,False,37,0,2,https://github.com/ssentanoe,fix issue #309,1,[],https://github.com/tklengyel/drakvuf/pull/408,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/408#issuecomment-395639079,"mask empty page to FF, add trap to it and emulate no write to both of shadow page and empty page (latest libvmi required)",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,409,2018-06-07T12:04:43Z,2018-07-14T16:55:28Z,2018-07-16T16:06:04Z,MERGED,True,342,1,4,https://github.com/nystilaps,Added DNS resolution call handling,1,[],https://github.com/tklengyel/drakvuf/pull/409,https://github.com/nystilaps,1,https://github.com/tklengyel/drakvuf/pull/409,"Added DNS resolution calls handling for:
dnsapi.dll!DnsQuery_[W,A,UTF8] - for all Windows versions
dnsapi.dll!DnaQueryEx[A,W] - for Windows 7
dnsapi.dll!DnaQueryEx - for Windows 10","Added DNS resolution calls handling for:
dnsapi.dll!DnsQuery_[W,A,UTF8] - for all Windows versions
dnsapi.dll!DnaQueryEx[A,W] - for Windows 7
dnsapi.dll!DnaQueryEx - for Windows 10",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,409,2018-06-07T12:04:43Z,2018-07-14T16:55:28Z,2018-07-16T16:06:04Z,MERGED,True,342,1,4,https://github.com/nystilaps,Added DNS resolution call handling,1,[],https://github.com/tklengyel/drakvuf/pull/409,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/409#issuecomment-395396387,"Added DNS resolution calls handling for:
dnsapi.dll!DnsQuery_[W,A,UTF8] - for all Windows versions
dnsapi.dll!DnaQueryEx[A,W] - for Windows 7
dnsapi.dll!DnaQueryEx - for Windows 10",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,409,2018-06-07T12:04:43Z,2018-07-14T16:55:28Z,2018-07-16T16:06:04Z,MERGED,True,342,1,4,https://github.com/nystilaps,Added DNS resolution call handling,1,[],https://github.com/tklengyel/drakvuf/pull/409,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/409#issuecomment-395436089,"Added DNS resolution calls handling for:
dnsapi.dll!DnsQuery_[W,A,UTF8] - for all Windows versions
dnsapi.dll!DnaQueryEx[A,W] - for Windows 7
dnsapi.dll!DnaQueryEx - for Windows 10",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,409,2018-06-07T12:04:43Z,2018-07-14T16:55:28Z,2018-07-16T16:06:04Z,MERGED,True,342,1,4,https://github.com/nystilaps,Added DNS resolution call handling,1,[],https://github.com/tklengyel/drakvuf/pull/409,https://github.com/nystilaps,4,https://github.com/tklengyel/drakvuf/pull/409#issuecomment-395465943,"Added DNS resolution calls handling for:
dnsapi.dll!DnsQuery_[W,A,UTF8] - for all Windows versions
dnsapi.dll!DnaQueryEx[A,W] - for Windows 7
dnsapi.dll!DnaQueryEx - for Windows 10","There seem to be some internal problems with checking code in Travis.
I had to recommit my code with one empty line to retest it.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,409,2018-06-07T12:04:43Z,2018-07-14T16:55:28Z,2018-07-16T16:06:04Z,MERGED,True,342,1,4,https://github.com/nystilaps,Added DNS resolution call handling,1,[],https://github.com/tklengyel/drakvuf/pull/409,https://github.com/nystilaps,5,https://github.com/tklengyel/drakvuf/pull/409#issuecomment-395466621,"Added DNS resolution calls handling for:
dnsapi.dll!DnsQuery_[W,A,UTF8] - for all Windows versions
dnsapi.dll!DnaQueryEx[A,W] - for Windows 7
dnsapi.dll!DnaQueryEx - for Windows 10","I can't open build log, could you please tell me what is the problem with compilation on CI?
Or maybe which tests fail?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,409,2018-06-07T12:04:43Z,2018-07-14T16:55:28Z,2018-07-16T16:06:04Z,MERGED,True,342,1,4,https://github.com/nystilaps,Added DNS resolution call handling,1,[],https://github.com/tklengyel/drakvuf/pull/409,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/409#issuecomment-395639163,"Added DNS resolution calls handling for:
dnsapi.dll!DnsQuery_[W,A,UTF8] - for all Windows versions
dnsapi.dll!DnaQueryEx[A,W] - for Windows 7
dnsapi.dll!DnaQueryEx - for Windows 10",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,409,2018-06-07T12:04:43Z,2018-07-14T16:55:28Z,2018-07-16T16:06:04Z,MERGED,True,342,1,4,https://github.com/nystilaps,Added DNS resolution call handling,1,[],https://github.com/tklengyel/drakvuf/pull/409,https://github.com/nystilaps,7,https://github.com/tklengyel/drakvuf/pull/409#issuecomment-399923019,"Added DNS resolution calls handling for:
dnsapi.dll!DnsQuery_[W,A,UTF8] - for all Windows versions
dnsapi.dll!DnaQueryEx[A,W] - for Windows 7
dnsapi.dll!DnaQueryEx - for Windows 10",Rebased to latest master.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,409,2018-06-07T12:04:43Z,2018-07-14T16:55:28Z,2018-07-16T16:06:04Z,MERGED,True,342,1,4,https://github.com/nystilaps,Added DNS resolution call handling,1,[],https://github.com/tklengyel/drakvuf/pull/409,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/409#issuecomment-399989282,"Added DNS resolution calls handling for:
dnsapi.dll!DnsQuery_[W,A,UTF8] - for all Windows versions
dnsapi.dll!DnaQueryEx[A,W] - for Windows 7
dnsapi.dll!DnaQueryEx - for Windows 10",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,409,2018-06-07T12:04:43Z,2018-07-14T16:55:28Z,2018-07-16T16:06:04Z,MERGED,True,342,1,4,https://github.com/nystilaps,Added DNS resolution call handling,1,[],https://github.com/tklengyel/drakvuf/pull/409,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/409#issuecomment-399995687,"Added DNS resolution calls handling for:
dnsapi.dll!DnsQuery_[W,A,UTF8] - for all Windows versions
dnsapi.dll!DnaQueryEx[A,W] - for Windows 7
dnsapi.dll!DnaQueryEx - for Windows 10",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,409,2018-06-07T12:04:43Z,2018-07-14T16:55:28Z,2018-07-16T16:06:04Z,MERGED,True,342,1,4,https://github.com/nystilaps,Added DNS resolution call handling,1,[],https://github.com/tklengyel/drakvuf/pull/409,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/409#issuecomment-400063678,"Added DNS resolution calls handling for:
dnsapi.dll!DnsQuery_[W,A,UTF8] - for all Windows versions
dnsapi.dll!DnaQueryEx[A,W] - for Windows 7
dnsapi.dll!DnaQueryEx - for Windows 10",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,409,2018-06-07T12:04:43Z,2018-07-14T16:55:28Z,2018-07-16T16:06:04Z,MERGED,True,342,1,4,https://github.com/nystilaps,Added DNS resolution call handling,1,[],https://github.com/tklengyel/drakvuf/pull/409,https://github.com/nystilaps,11,https://github.com/tklengyel/drakvuf/pull/409#issuecomment-403892396,"Added DNS resolution calls handling for:
dnsapi.dll!DnsQuery_[W,A,UTF8] - for all Windows versions
dnsapi.dll!DnaQueryEx[A,W] - for Windows 7
dnsapi.dll!DnaQueryEx - for Windows 10",Are there any other needed changes?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,409,2018-06-07T12:04:43Z,2018-07-14T16:55:28Z,2018-07-16T16:06:04Z,MERGED,True,342,1,4,https://github.com/nystilaps,Added DNS resolution call handling,1,[],https://github.com/tklengyel/drakvuf/pull/409,https://github.com/tklengyel,12,https://github.com/tklengyel/drakvuf/pull/409#issuecomment-403973117,"Added DNS resolution calls handling for:
dnsapi.dll!DnsQuery_[W,A,UTF8] - for all Windows versions
dnsapi.dll!DnaQueryEx[A,W] - for Windows 7
dnsapi.dll!DnaQueryEx - for Windows 10",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,409,2018-06-07T12:04:43Z,2018-07-14T16:55:28Z,2018-07-16T16:06:04Z,MERGED,True,342,1,4,https://github.com/nystilaps,Added DNS resolution call handling,1,[],https://github.com/tklengyel/drakvuf/pull/409,https://github.com/tklengyel,13,https://github.com/tklengyel/drakvuf/pull/409#issuecomment-404026382,"Added DNS resolution calls handling for:
dnsapi.dll!DnsQuery_[W,A,UTF8] - for all Windows versions
dnsapi.dll!DnaQueryEx[A,W] - for Windows 7
dnsapi.dll!DnaQueryEx - for Windows 10",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,409,2018-06-07T12:04:43Z,2018-07-14T16:55:28Z,2018-07-16T16:06:04Z,MERGED,True,342,1,4,https://github.com/nystilaps,Added DNS resolution call handling,1,[],https://github.com/tklengyel/drakvuf/pull/409,https://github.com/tklengyel,14,https://github.com/tklengyel/drakvuf/pull/409#issuecomment-404034698,"Added DNS resolution calls handling for:
dnsapi.dll!DnsQuery_[W,A,UTF8] - for all Windows versions
dnsapi.dll!DnaQueryEx[A,W] - for Windows 7
dnsapi.dll!DnaQueryEx - for Windows 10",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,409,2018-06-07T12:04:43Z,2018-07-14T16:55:28Z,2018-07-16T16:06:04Z,MERGED,True,342,1,4,https://github.com/nystilaps,Added DNS resolution call handling,1,[],https://github.com/tklengyel/drakvuf/pull/409,https://github.com/nystilaps,15,https://github.com/tklengyel/drakvuf/pull/409#issuecomment-404134125,"Added DNS resolution calls handling for:
dnsapi.dll!DnsQuery_[W,A,UTF8] - for all Windows versions
dnsapi.dll!DnaQueryEx[A,W] - for Windows 7
dnsapi.dll!DnaQueryEx - for Windows 10","I cannot see what causes error on ci.drakvuf.com, could you please tell what is the problem?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,409,2018-06-07T12:04:43Z,2018-07-14T16:55:28Z,2018-07-16T16:06:04Z,MERGED,True,342,1,4,https://github.com/nystilaps,Added DNS resolution call handling,1,[],https://github.com/tklengyel/drakvuf/pull/409,https://github.com/tklengyel,16,https://github.com/tklengyel/drakvuf/pull/409#issuecomment-404187789,"Added DNS resolution calls handling for:
dnsapi.dll!DnsQuery_[W,A,UTF8] - for all Windows versions
dnsapi.dll!DnaQueryEx[A,W] - for Windows 7
dnsapi.dll!DnaQueryEx - for Windows 10",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,409,2018-06-07T12:04:43Z,2018-07-14T16:55:28Z,2018-07-16T16:06:04Z,MERGED,True,342,1,4,https://github.com/nystilaps,Added DNS resolution call handling,1,[],https://github.com/tklengyel/drakvuf/pull/409,https://github.com/tklengyel,17,https://github.com/tklengyel/drakvuf/pull/409#issuecomment-404198437,"Added DNS resolution calls handling for:
dnsapi.dll!DnsQuery_[W,A,UTF8] - for all Windows versions
dnsapi.dll!DnaQueryEx[A,W] - for Windows 7
dnsapi.dll!DnaQueryEx - for Windows 10","It was failing for unrelated reasons, looks good now. I'll take another look later and then I think its good to go in! Thanks",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,410,2018-06-07T13:42:32Z,2018-06-08T19:11:02Z,2018-06-08T19:11:02Z,MERGED,True,36,24,1,https://github.com/nystilaps,Added stack alignment and function putting string on stack for 32 bit Windows,1,[],https://github.com/tklengyel/drakvuf/pull/410,https://github.com/nystilaps,1,https://github.com/tklengyel/drakvuf/pull/410,"For 32 bit Windows:
Added stack and parameters allocated on stack alignment to 64 bytes.
Added function for putting string on stack with alignment to 64 bytes.","For 32 bit Windows:
Added stack and parameters allocated on stack alignment to 64 bytes.
Added function for putting string on stack with alignment to 64 bytes.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,410,2018-06-07T13:42:32Z,2018-06-08T19:11:02Z,2018-06-08T19:11:02Z,MERGED,True,36,24,1,https://github.com/nystilaps,Added stack alignment and function putting string on stack for 32 bit Windows,1,[],https://github.com/tklengyel/drakvuf/pull/410,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/410#issuecomment-395424625,"For 32 bit Windows:
Added stack and parameters allocated on stack alignment to 64 bytes.
Added function for putting string on stack with alignment to 64 bytes.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,410,2018-06-07T13:42:32Z,2018-06-08T19:11:02Z,2018-06-08T19:11:02Z,MERGED,True,36,24,1,https://github.com/nystilaps,Added stack alignment and function putting string on stack for 32 bit Windows,1,[],https://github.com/tklengyel/drakvuf/pull/410,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/410#issuecomment-395648493,"For 32 bit Windows:
Added stack and parameters allocated on stack alignment to 64 bytes.
Added function for putting string on stack with alignment to 64 bytes.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,410,2018-06-07T13:42:32Z,2018-06-08T19:11:02Z,2018-06-08T19:11:02Z,MERGED,True,36,24,1,https://github.com/nystilaps,Added stack alignment and function putting string on stack for 32 bit Windows,1,[],https://github.com/tklengyel/drakvuf/pull/410,https://github.com/nystilaps,4,https://github.com/tklengyel/drakvuf/pull/410#issuecomment-395725199,"For 32 bit Windows:
Added stack and parameters allocated on stack alignment to 64 bytes.
Added function for putting string on stack with alignment to 64 bytes.","I can't access ci.drakvuf.com, could you please give a hint why it fails to build?
Or which tests fail?
On my machine locally everything build ok.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,410,2018-06-07T13:42:32Z,2018-06-08T19:11:02Z,2018-06-08T19:11:02Z,MERGED,True,36,24,1,https://github.com/nystilaps,Added stack alignment and function putting string on stack for 32 bit Windows,1,[],https://github.com/tklengyel/drakvuf/pull/410,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/410#issuecomment-395804209,"For 32 bit Windows:
Added stack and parameters allocated on stack alignment to 64 bytes.
Added function for putting string on stack with alignment to 64 bytes.","@nystilaps Jenkins just been finicky lately, I'm not sure why yet",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,410,2018-06-07T13:42:32Z,2018-06-08T19:11:02Z,2018-06-08T19:11:02Z,MERGED,True,36,24,1,https://github.com/nystilaps,Added stack alignment and function putting string on stack for 32 bit Windows,1,[],https://github.com/tklengyel/drakvuf/pull/410,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/410#issuecomment-395834016,"For 32 bit Windows:
Added stack and parameters allocated on stack alignment to 64 bytes.
Added function for putting string on stack with alignment to 64 bytes.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,410,2018-06-07T13:42:32Z,2018-06-08T19:11:02Z,2018-06-08T19:11:02Z,MERGED,True,36,24,1,https://github.com/nystilaps,Added stack alignment and function putting string on stack for 32 bit Windows,1,[],https://github.com/tklengyel/drakvuf/pull/410,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/410#issuecomment-395860445,"For 32 bit Windows:
Added stack and parameters allocated on stack alignment to 64 bytes.
Added function for putting string on stack with alignment to 64 bytes.","This looks good to me, thanks!",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,411,2018-06-07T15:13:45Z,2018-06-08T03:55:15Z,2018-06-08T03:55:22Z,MERGED,True,2,0,1,https://github.com/tklengyel,vmi_destroy closes the event channel automatically,1,[],https://github.com/tklengyel/drakvuf/pull/411,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/411,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,412,2018-06-08T04:39:00Z,2018-06-08T20:45:14Z,2018-06-08T20:45:14Z,MERGED,True,36,0,2,https://github.com/ssentanoe,enchance drakvuf stealthiness ,1,[],https://github.com/tklengyel/drakvuf/pull/412,https://github.com/ssentanoe,1,https://github.com/tklengyel/drakvuf/pull/412,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,412,2018-06-08T04:39:00Z,2018-06-08T20:45:14Z,2018-06-08T20:45:14Z,MERGED,True,36,0,2,https://github.com/ssentanoe,enchance drakvuf stealthiness ,1,[],https://github.com/tklengyel/drakvuf/pull/412,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/412#issuecomment-395644543,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,412,2018-06-08T04:39:00Z,2018-06-08T20:45:14Z,2018-06-08T20:45:14Z,MERGED,True,36,0,2,https://github.com/ssentanoe,enchance drakvuf stealthiness ,1,[],https://github.com/tklengyel/drakvuf/pull/412,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/412#issuecomment-395648254,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,412,2018-06-08T04:39:00Z,2018-06-08T20:45:14Z,2018-06-08T20:45:14Z,MERGED,True,36,0,2,https://github.com/ssentanoe,enchance drakvuf stealthiness ,1,[],https://github.com/tklengyel/drakvuf/pull/412,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/412#issuecomment-395648366,,"Not sure what to make of that travis error, looks pretty odd, I think it would be safe to just ignore it for now",True,{'THUMBS_UP': ['https://github.com/ssentanoe']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,412,2018-06-08T04:39:00Z,2018-06-08T20:45:14Z,2018-06-08T20:45:14Z,MERGED,True,36,0,2,https://github.com/ssentanoe,enchance drakvuf stealthiness ,1,[],https://github.com/tklengyel/drakvuf/pull/412,https://github.com/ssentanoe,5,https://github.com/tklengyel/drakvuf/pull/412#issuecomment-395650804,,"wow, jenkins also failed.. something weird is happening",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,412,2018-06-08T04:39:00Z,2018-06-08T20:45:14Z,2018-06-08T20:45:14Z,MERGED,True,36,0,2,https://github.com/ssentanoe,enchance drakvuf stealthiness ,1,[],https://github.com/tklengyel/drakvuf/pull/412,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/412#issuecomment-395654862,,"Eh, Jenkins has been finicky lately so idk..",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,413,2018-06-08T19:12:52Z,2018-06-08T19:42:44Z,2019-05-20T02:29:40Z,CLOSED,False,1,0,1,https://github.com/tklengyel,Test PR to check if master still builds on the CI system,1,[],https://github.com/tklengyel/drakvuf/pull/413,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/413,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,414,2018-06-09T09:43:29Z,2018-06-21T14:19:50Z,2018-06-21T14:19:51Z,MERGED,True,100,55,6,https://github.com/nystilaps,Added utility functions for unicode strings and vmi_lock_guard,1,[],https://github.com/tklengyel/drakvuf/pull/414,https://github.com/nystilaps,1,https://github.com/tklengyel/drakvuf/pull/414,"Added:
utility functions for unicode strings
vmi_lock_guard","Added:
utility functions for unicode strings
vmi_lock_guard",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,414,2018-06-09T09:43:29Z,2018-06-21T14:19:50Z,2018-06-21T14:19:51Z,MERGED,True,100,55,6,https://github.com/nystilaps,Added utility functions for unicode strings and vmi_lock_guard,1,[],https://github.com/tklengyel/drakvuf/pull/414,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/414#issuecomment-396000350,"Added:
utility functions for unicode strings
vmi_lock_guard","drakvuf.c:680:9: warning: Potential leak of memory pointed to by 'out'
        return NULL;
        ^~~~~~~~~~~
1 warning generated.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,414,2018-06-09T09:43:29Z,2018-06-21T14:19:50Z,2018-06-21T14:19:51Z,MERGED,True,100,55,6,https://github.com/nystilaps,Added utility functions for unicode strings and vmi_lock_guard,1,[],https://github.com/tklengyel/drakvuf/pull/414,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/414#issuecomment-396000353,"Added:
utility functions for unicode strings
vmi_lock_guard",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,414,2018-06-09T09:43:29Z,2018-06-21T14:19:50Z,2018-06-21T14:19:51Z,MERGED,True,100,55,6,https://github.com/nystilaps,Added utility functions for unicode strings and vmi_lock_guard,1,[],https://github.com/tklengyel/drakvuf/pull/414,https://github.com/nystilaps,4,https://github.com/tklengyel/drakvuf/pull/414#issuecomment-396068388,"Added:
utility functions for unicode strings
vmi_lock_guard","677: if (VMI_SUCCESS != rc)
678: {
679:     vmi_free_unicode_str(out); // seems like there is actually no leak
680:     return NULL;
681: }",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,414,2018-06-09T09:43:29Z,2018-06-21T14:19:50Z,2018-06-21T14:19:51Z,MERGED,True,100,55,6,https://github.com/nystilaps,Added utility functions for unicode strings and vmi_lock_guard,1,[],https://github.com/tklengyel/drakvuf/pull/414,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/414#issuecomment-396448313,"Added:
utility functions for unicode strings
vmi_lock_guard",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,414,2018-06-09T09:43:29Z,2018-06-21T14:19:50Z,2018-06-21T14:19:51Z,MERGED,True,100,55,6,https://github.com/nystilaps,Added utility functions for unicode strings and vmi_lock_guard,1,[],https://github.com/tklengyel/drakvuf/pull/414,https://github.com/nystilaps,6,https://github.com/tklengyel/drakvuf/pull/414#issuecomment-397613835,"Added:
utility functions for unicode strings
vmi_lock_guard",Are there any other changes needed?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,414,2018-06-09T09:43:29Z,2018-06-21T14:19:50Z,2018-06-21T14:19:51Z,MERGED,True,100,55,6,https://github.com/nystilaps,Added utility functions for unicode strings and vmi_lock_guard,1,[],https://github.com/tklengyel/drakvuf/pull/414,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/414#issuecomment-397663930,"Added:
utility functions for unicode strings
vmi_lock_guard","Well, the PR has to get through Travis. I'm also not sure whether read_wchar_string is really needed, how is it different from vmi_read_unicode_str?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,414,2018-06-09T09:43:29Z,2018-06-21T14:19:50Z,2018-06-21T14:19:51Z,MERGED,True,100,55,6,https://github.com/nystilaps,Added utility functions for unicode strings and vmi_lock_guard,1,[],https://github.com/tklengyel/drakvuf/pull/414,https://github.com/nystilaps,8,https://github.com/tklengyel/drakvuf/pull/414#issuecomment-397704709,"Added:
utility functions for unicode strings
vmi_lock_guard","Probably that it reads a wchar array instead of a unicode string struct.

пт, 15 июн. 2018 г., 18:51 Tamas K Lengyel <notifications@github.com>:
…
 Well, the PR has to get through Travis. I'm also not sure whether
 read_wchar_string is really needed, how is it different from
 vmi_read_unicode_str?

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#414 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AkHnV9xAaF7rDfsQFtGtej54ABbrZFzaks5t89fvgaJpZM4UhQsR>
 .",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,414,2018-06-09T09:43:29Z,2018-06-21T14:19:50Z,2018-06-21T14:19:51Z,MERGED,True,100,55,6,https://github.com/nystilaps,Added utility functions for unicode strings and vmi_lock_guard,1,[],https://github.com/tklengyel/drakvuf/pull/414,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/414#issuecomment-397732409,"Added:
utility functions for unicode strings
vmi_lock_guard","Probably that it reads a wchar array instead of a unicode string struct.

That does not convince me that this function is needed, at all.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,414,2018-06-09T09:43:29Z,2018-06-21T14:19:50Z,2018-06-21T14:19:51Z,MERGED,True,100,55,6,https://github.com/nystilaps,Added utility functions for unicode strings and vmi_lock_guard,1,[],https://github.com/tklengyel/drakvuf/pull/414,https://github.com/nystilaps,10,https://github.com/tklengyel/drakvuf/pull/414#issuecomment-397774076,"Added:
utility functions for unicode strings
vmi_lock_guard","Would you please possibly share your approach towards wchar arrays?

пт, 15 июн. 2018 г., 23:24 Tamas K Lengyel <notifications@github.com>:
…
 Probably that it reads a wchar array instead of a unicode string struct.

 That does not convince me that this function is needed, at all.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#414 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AkHnV2x8C-yFpZ8sq2ACISvAanbTv9Ajks5t9Bf1gaJpZM4UhQsR>
 .",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,414,2018-06-09T09:43:29Z,2018-06-21T14:19:50Z,2018-06-21T14:19:51Z,MERGED,True,100,55,6,https://github.com/nystilaps,Added utility functions for unicode strings and vmi_lock_guard,1,[],https://github.com/tklengyel/drakvuf/pull/414,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/414#issuecomment-397775670,"Added:
utility functions for unicode strings
vmi_lock_guard","Look at https://github.com/libvmi/libvmi/blob/master/libvmi/os/windows/unicode.c, it looks very much like this code. I would like you to explain how its difreren, ""i guess"" doesn't convince me.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,414,2018-06-09T09:43:29Z,2018-06-21T14:19:50Z,2018-06-21T14:19:51Z,MERGED,True,100,55,6,https://github.com/nystilaps,Added utility functions for unicode strings and vmi_lock_guard,1,[],https://github.com/tklengyel/drakvuf/pull/414,https://github.com/nystilaps,12,https://github.com/tklengyel/drakvuf/pull/414#issuecomment-397806971,"Added:
utility functions for unicode strings
vmi_lock_guard","Windows has at least two different representation of strings: a unicode
string struct and a null-terminated array of UTF_16 characters.
The function you linked operates on
Unicode string struct, that has several fields, including a pointer to
string bytes. These bytes may represent ASCII, UTF_8 or UTF_16 string,
depending on string type information in that struct.
My function operates on different string representation, an null terminated
array of UTF_16 characters (words).
These functions are not interchangeable because of different domain.

сб, 16 июн. 2018 г., 4:08 Tamas K Lengyel <notifications@github.com>:
…
 Look at
 https://github.com/libvmi/libvmi/blob/master/libvmi/os/windows/unicode.c,
 it looks very much like this code. I would you to explain how its difreren,
 ""i guess"" doesn't convince me.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#414 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AkHnV73QRy2c5h1_TtXPbS5bsI2fXd6cks5t9FqYgaJpZM4UhQsR>
 .",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,414,2018-06-09T09:43:29Z,2018-06-21T14:19:50Z,2018-06-21T14:19:51Z,MERGED,True,100,55,6,https://github.com/nystilaps,Added utility functions for unicode strings and vmi_lock_guard,1,[],https://github.com/tklengyel/drakvuf/pull/414,https://github.com/tklengyel,13,https://github.com/tklengyel/drakvuf/pull/414#issuecomment-397809415,"Added:
utility functions for unicode strings
vmi_lock_guard","Thanks, it makes more sense now. That description should be in the commit message. Once the PR passes Travis I'll merge.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,414,2018-06-09T09:43:29Z,2018-06-21T14:19:50Z,2018-06-21T14:19:51Z,MERGED,True,100,55,6,https://github.com/nystilaps,Added utility functions for unicode strings and vmi_lock_guard,1,[],https://github.com/tklengyel/drakvuf/pull/414,https://github.com/nystilaps,14,https://github.com/tklengyel/drakvuf/pull/414#issuecomment-398732257,"Added:
utility functions for unicode strings
vmi_lock_guard","Could you point out what is the problem, found by Travis?
I cannot reproduce compilation problem locally.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,414,2018-06-09T09:43:29Z,2018-06-21T14:19:50Z,2018-06-21T14:19:51Z,MERGED,True,100,55,6,https://github.com/nystilaps,Added utility functions for unicode strings and vmi_lock_guard,1,[],https://github.com/tklengyel/drakvuf/pull/414,https://github.com/tklengyel,15,https://github.com/tklengyel/drakvuf/pull/414#issuecomment-398733462,"Added:
utility functions for unicode strings
vmi_lock_guard",You can see yourself at https://travis-ci.org/tklengyel/drakvuf/jobs/394529754,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,414,2018-06-09T09:43:29Z,2018-06-21T14:19:50Z,2018-06-21T14:19:51Z,MERGED,True,100,55,6,https://github.com/nystilaps,Added utility functions for unicode strings and vmi_lock_guard,1,[],https://github.com/tklengyel/drakvuf/pull/414,https://github.com/tklengyel,16,https://github.com/tklengyel/drakvuf/pull/414#issuecomment-398733734,"Added:
utility functions for unicode strings
vmi_lock_guard","drakvuf.c:681:9: warning: Potential leak of memory pointed to by 'out'
        return NULL;
        ^~~~~~~~~~~
1 warning generated.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,414,2018-06-09T09:43:29Z,2018-06-21T14:19:50Z,2018-06-21T14:19:51Z,MERGED,True,100,55,6,https://github.com/nystilaps,Added utility functions for unicode strings and vmi_lock_guard,1,[],https://github.com/tklengyel/drakvuf/pull/414,https://github.com/nystilaps,17,https://github.com/tklengyel/drakvuf/pull/414#issuecomment-398796680,"Added:
utility functions for unicode strings
vmi_lock_guard","Thank you, I totally missed it.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,414,2018-06-09T09:43:29Z,2018-06-21T14:19:50Z,2018-06-21T14:19:51Z,MERGED,True,100,55,6,https://github.com/nystilaps,Added utility functions for unicode strings and vmi_lock_guard,1,[],https://github.com/tklengyel/drakvuf/pull/414,https://github.com/nystilaps,18,https://github.com/tklengyel/drakvuf/pull/414#issuecomment-398798545,"Added:
utility functions for unicode strings
vmi_lock_guard",Fixed.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,414,2018-06-09T09:43:29Z,2018-06-21T14:19:50Z,2018-06-21T14:19:51Z,MERGED,True,100,55,6,https://github.com/nystilaps,Added utility functions for unicode strings and vmi_lock_guard,1,[],https://github.com/tklengyel/drakvuf/pull/414,https://github.com/nystilaps,19,https://github.com/tklengyel/drakvuf/pull/414#issuecomment-399055545,"Added:
utility functions for unicode strings
vmi_lock_guard",Added prefix and comments.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,415,2018-06-09T16:03:35Z,2018-06-10T01:05:43Z,2018-06-18T09:51:17Z,MERGED,True,18,21,2,https://github.com/disaykin,Support x86 OSes in PROCMON plugin,2,[],https://github.com/tklengyel/drakvuf/pull/415,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/415,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,415,2018-06-09T16:03:35Z,2018-06-10T01:05:43Z,2018-06-18T09:51:17Z,MERGED,True,18,21,2,https://github.com/disaykin,Support x86 OSes in PROCMON plugin,2,[],https://github.com/tklengyel/drakvuf/pull/415,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/415#issuecomment-396001178,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,415,2018-06-09T16:03:35Z,2018-06-10T01:05:43Z,2018-06-18T09:51:17Z,MERGED,True,18,21,2,https://github.com/disaykin,Support x86 OSes in PROCMON plugin,2,[],https://github.com/tklengyel/drakvuf/pull/415,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/415#issuecomment-396001180,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,415,2018-06-09T16:03:35Z,2018-06-10T01:05:43Z,2018-06-18T09:51:17Z,MERGED,True,18,21,2,https://github.com/disaykin,Support x86 OSes in PROCMON plugin,2,[],https://github.com/tklengyel/drakvuf/pull/415,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/415#issuecomment-396007734,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,415,2018-06-09T16:03:35Z,2018-06-10T01:05:43Z,2018-06-18T09:51:17Z,MERGED,True,18,21,2,https://github.com/disaykin,Support x86 OSes in PROCMON plugin,2,[],https://github.com/tklengyel/drakvuf/pull/415,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/415#issuecomment-396009780,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,415,2018-06-09T16:03:35Z,2018-06-10T01:05:43Z,2018-06-18T09:51:17Z,MERGED,True,18,21,2,https://github.com/disaykin,Support x86 OSes in PROCMON plugin,2,[],https://github.com/tklengyel/drakvuf/pull/415,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/415#issuecomment-396010514,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,416,2018-06-11T23:08:04Z,2018-06-12T02:45:51Z,2018-06-12T02:45:54Z,MERGED,True,1,1,1,https://github.com/tklengyel,Update LibVMI,1,[],https://github.com/tklengyel/drakvuf/pull/416,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/416,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,418,2018-06-21T17:28:13Z,2018-06-23T02:47:13Z,2018-06-23T08:50:51Z,MERGED,True,76,57,12,https://github.com/disaykin,Support x86 OSes in REGMON plugin.,2,[],https://github.com/tklengyel/drakvuf/pull/418,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/418,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,418,2018-06-21T17:28:13Z,2018-06-23T02:47:13Z,2018-06-23T08:50:51Z,MERGED,True,76,57,12,https://github.com/disaykin,Support x86 OSes in REGMON plugin.,2,[],https://github.com/tklengyel/drakvuf/pull/418,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/418#issuecomment-399622560,,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,418,2018-06-21T17:28:13Z,2018-06-23T02:47:13Z,2018-06-23T08:50:51Z,MERGED,True,76,57,12,https://github.com/disaykin,Support x86 OSes in REGMON plugin.,2,[],https://github.com/tklengyel/drakvuf/pull/418,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/418#issuecomment-399622561,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,418,2018-06-21T17:28:13Z,2018-06-23T02:47:13Z,2018-06-23T08:50:51Z,MERGED,True,76,57,12,https://github.com/disaykin,Support x86 OSes in REGMON plugin.,2,[],https://github.com/tklengyel/drakvuf/pull/418,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/418#issuecomment-399623697,,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,418,2018-06-21T17:28:13Z,2018-06-23T02:47:13Z,2018-06-23T08:50:51Z,MERGED,True,76,57,12,https://github.com/disaykin,Support x86 OSes in REGMON plugin.,2,[],https://github.com/tklengyel/drakvuf/pull/418,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/418#issuecomment-399624950,,Looks good! Thanks,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,419,2018-06-25T01:07:59Z,2018-06-25T01:44:52Z,2018-07-09T22:16:03Z,MERGED,True,39,952,8,https://github.com/tklengyel,Fix aclocal bug,1,[],https://github.com/tklengyel/drakvuf/pull/419,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/419,Remove m4 scripts installed by autoconf-archive,Remove m4 scripts installed by autoconf-archive,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,419,2018-06-25T01:07:59Z,2018-06-25T01:44:52Z,2018-07-09T22:16:03Z,MERGED,True,39,952,8,https://github.com/tklengyel,Fix aclocal bug,1,[],https://github.com/tklengyel/drakvuf/pull/419,https://github.com/ufo95,2,https://github.com/tklengyel/drakvuf/pull/419#issuecomment-403634665,Remove m4 scripts installed by autoconf-archive,"Hi Tamas,
this commit seems to break autoreconf for me:
:~/drakvuf$ autoreconf -vif
autoreconf: Entering directory `.'
autoreconf: configure.ac: not using Gettext
autoreconf: running: aclocal --force --install -I m4
configure.ac:114: error: macro AX_CXX_COMPILE_STDCXX_11 is not defined; is a m4 file missing?
m4/ax_require_defined.m4:35: AX_REQUIRE_DEFINED is expanded from...
configure.ac:114: the top level
autom4te: /usr/bin/m4 failed with exit status: 1
aclocal: error: echo failed with exit status: 1
autoreconf: aclocal failed with exit status: 1

after I got ax_cxx_compile_stdcxx_11.m4 from https://github.com/google/autofdo/blob/master/m4/ax_cxx_compile_stdcxx_11.m4
I get following error:
:~/drakvuf$ autoreconf -vif
autoreconf: Entering directory `.'
autoreconf: configure.ac: not using Gettext
autoreconf: running: aclocal --force --install -I m4
aclocal: installing 'm4/ax_cxx_compile_stdcxx_11.m4' from '/usr/share/aclocal/ax_cxx_compile_stdcxx_11.m4'
aclocal: installing 'm4/libtool.m4' from '/usr/share/aclocal/libtool.m4'
aclocal: installing 'm4/ltoptions.m4' from '/usr/share/aclocal/ltoptions.m4'
aclocal: installing 'm4/ltsugar.m4' from '/usr/share/aclocal/ltsugar.m4'
aclocal: installing 'm4/ltversion.m4' from '/usr/share/aclocal/ltversion.m4'
aclocal: installing 'm4/lt~obsolete.m4' from '/usr/share/aclocal/lt~obsolete.m4'
aclocal: installing 'm4/pkg.m4' from '/usr/share/aclocal/pkg.m4'
autoreconf: configure.ac: tracing
autoreconf: running: libtoolize --copy --force
libtoolize: putting auxiliary files in '.'.
libtoolize: copying file './ltmain.sh'
libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.
libtoolize: copying file 'm4/libtool.m4'
libtoolize: copying file 'm4/ltoptions.m4'
libtoolize: copying file 'm4/ltsugar.m4'
libtoolize: copying file 'm4/ltversion.m4'
libtoolize: copying file 'm4/lt~obsolete.m4'
autoreconf: running: /usr/bin/autoconf --force
configure.ac:277: error: possibly undefined macro: AC_LANG_PUSH
      If this token and others are legitimate, please use m4_pattern_allow.
      See the Autoconf documentation.
configure.ac:281: error: possibly undefined macro: AC_LANG_POP
autoreconf: /usr/bin/autoconf failed with exit status: 1

I'm using autoreconf 2.69 and aclocal 1.15.1 from apt on
:~/drakvuf$ cat /etc/debian_version 
buster/sid
:~/drakvuf$ uname -a
Linux hostname 4.15.0-3-amd64 #1 SMP Debian 4.15.17-1 (2018-04-19) x86_64 GNU/Linux


Exactly the same happens on my arm board with the same error messages and the same version beside it runs:

Linux hostname 4.14.7 #16 SMP PREEMPT Fri Feb 16 13:16:38 CET 2018 aarch64 GNU/Linux

Do you have any idea why autoreconf is failing? When I try it without this commit it works perfectly fine.
Thanks Uli",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,419,2018-06-25T01:07:59Z,2018-06-25T01:44:52Z,2018-07-09T22:16:03Z,MERGED,True,39,952,8,https://github.com/tklengyel,Fix aclocal bug,1,[],https://github.com/tklengyel/drakvuf/pull/419,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/419#issuecomment-403634867,Remove m4 scripts installed by autoconf-archive,You need to install autoconf-archive,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,419,2018-06-25T01:07:59Z,2018-06-25T01:44:52Z,2018-07-09T22:16:03Z,MERGED,True,39,952,8,https://github.com/tklengyel,Fix aclocal bug,1,[],https://github.com/tklengyel/drakvuf/pull/419,https://github.com/ufo95,4,https://github.com/tklengyel/drakvuf/pull/419#issuecomment-403637724,Remove m4 scripts installed by autoconf-archive,Thank you very much! That solved the problems!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,420,2018-06-25T02:50:05Z,2018-06-25T03:11:47Z,2018-06-25T03:11:52Z,MERGED,True,6,0,1,https://github.com/tklengyel,Add option to specify C++ stdlib,1,[],https://github.com/tklengyel/drakvuf/pull/420,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/420,"On occasion compilation fails with fatal error: 'set' file not found or fatal error: 'cassert' file not found. This is due to clang++ not finding the stdc++ library, so manually specifying --with-stdlib=libc++ works around the problem.","On occasion compilation fails with fatal error: 'set' file not found or fatal error: 'cassert' file not found. This is due to clang++ not finding the stdc++ library, so manually specifying --with-stdlib=libc++ works around the problem.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,421,2018-06-25T12:11:21Z,2018-06-25T19:24:03Z,2018-06-26T08:20:32Z,MERGED,True,8,64,2,https://github.com/disaykin,Use drakvuf_get_function_argument() in FILETRACER plugin,1,[],https://github.com/tklengyel/drakvuf/pull/421,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/421,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,421,2018-06-25T12:11:21Z,2018-06-25T19:24:03Z,2018-06-26T08:20:32Z,MERGED,True,8,64,2,https://github.com/disaykin,Use drakvuf_get_function_argument() in FILETRACER plugin,1,[],https://github.com/tklengyel/drakvuf/pull/421,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/421#issuecomment-400009064,,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,421,2018-06-25T12:11:21Z,2018-06-25T19:24:03Z,2018-06-26T08:20:32Z,MERGED,True,8,64,2,https://github.com/disaykin,Use drakvuf_get_function_argument() in FILETRACER plugin,1,[],https://github.com/tklengyel/drakvuf/pull/421,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/421#issuecomment-400009104,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,421,2018-06-25T12:11:21Z,2018-06-25T19:24:03Z,2018-06-26T08:20:32Z,MERGED,True,8,64,2,https://github.com/disaykin,Use drakvuf_get_function_argument() in FILETRACER plugin,1,[],https://github.com/tklengyel/drakvuf/pull/421,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/421#issuecomment-400047503,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,421,2018-06-25T12:11:21Z,2018-06-25T19:24:03Z,2018-06-26T08:20:32Z,MERGED,True,8,64,2,https://github.com/disaykin,Use drakvuf_get_function_argument() in FILETRACER plugin,1,[],https://github.com/tklengyel/drakvuf/pull/421,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/421#issuecomment-400064982,,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,421,2018-06-25T12:11:21Z,2018-06-25T19:24:03Z,2018-06-26T08:20:32Z,MERGED,True,8,64,2,https://github.com/disaykin,Use drakvuf_get_function_argument() in FILETRACER plugin,1,[],https://github.com/tklengyel/drakvuf/pull/421,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/421#issuecomment-400066723,,Looks good! Thanks,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,422,2018-06-25T15:06:36Z,2018-06-25T21:01:16Z,2018-06-26T08:20:18Z,MERGED,True,6,6,1,https://github.com/disaykin,Fix incorrect wchar array length calculation in FILETRACER plugin,1,[],https://github.com/tklengyel/drakvuf/pull/422,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/422,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,422,2018-06-25T15:06:36Z,2018-06-25T21:01:16Z,2018-06-26T08:20:18Z,MERGED,True,6,6,1,https://github.com/disaykin,Fix incorrect wchar array length calculation in FILETRACER plugin,1,[],https://github.com/tklengyel/drakvuf/pull/422,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/422#issuecomment-400009170,,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,422,2018-06-25T15:06:36Z,2018-06-25T21:01:16Z,2018-06-26T08:20:18Z,MERGED,True,6,6,1,https://github.com/disaykin,Fix incorrect wchar array length calculation in FILETRACER plugin,1,[],https://github.com/tklengyel/drakvuf/pull/422,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/422#issuecomment-400009187,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,422,2018-06-25T15:06:36Z,2018-06-25T21:01:16Z,2018-06-26T08:20:18Z,MERGED,True,6,6,1,https://github.com/disaykin,Fix incorrect wchar array length calculation in FILETRACER plugin,1,[],https://github.com/tklengyel/drakvuf/pull/422,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/422#issuecomment-400047154,,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,422,2018-06-25T15:06:36Z,2018-06-25T21:01:16Z,2018-06-26T08:20:18Z,MERGED,True,6,6,1,https://github.com/disaykin,Fix incorrect wchar array length calculation in FILETRACER plugin,1,[],https://github.com/tklengyel/drakvuf/pull/422,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/422#issuecomment-400065930,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,423,2018-07-05T10:14:42Z,2018-07-18T17:58:06Z,2018-07-18T17:58:06Z,MERGED,True,248,69,5,https://github.com/mdolmen,Exec shellcode,28,[],https://github.com/tklengyel/drakvuf/pull/423,https://github.com/mdolmen,1,https://github.com/tklengyel/drakvuf/pull/423,"Add the possibility to execute a shellcode from a file, by allocating memory into the targeted process, writing the payload to it and then hijack RIP. The one provided (src/shellcode/payload.bin) does nothing useful, just an arithmetic operation. It serves as an example. The next step is to provide a shellcode to do process doppelganging injection.","Add the possibility to execute a shellcode from a file, by allocating memory into the targeted process, writing the payload to it and then hijack RIP. The one provided (src/shellcode/payload.bin) does nothing useful, just an arithmetic operation. It serves as an example. The next step is to provide a shellcode to do process doppelganging injection.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,423,2018-07-05T10:14:42Z,2018-07-18T17:58:06Z,2018-07-18T17:58:06Z,MERGED,True,248,69,5,https://github.com/mdolmen,Exec shellcode,28,[],https://github.com/tklengyel/drakvuf/pull/423,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/423#issuecomment-402900104,"Add the possibility to execute a shellcode from a file, by allocating memory into the targeted process, writing the payload to it and then hijack RIP. The one provided (src/shellcode/payload.bin) does nothing useful, just an arithmetic operation. It serves as an example. The next step is to provide a shellcode to do process doppelganging injection.",Code looks very clean and easy to follow! Good job. src/shellcode/payload.bin probably should not be included,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,423,2018-07-05T10:14:42Z,2018-07-18T17:58:06Z,2018-07-18T17:58:06Z,MERGED,True,248,69,5,https://github.com/mdolmen,Exec shellcode,28,[],https://github.com/tklengyel/drakvuf/pull/423,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/423#issuecomment-402900113,"Add the possibility to execute a shellcode from a file, by allocating memory into the targeted process, writing the payload to it and then hijack RIP. The one provided (src/shellcode/payload.bin) does nothing useful, just an arithmetic operation. It serves as an example. The next step is to provide a shellcode to do process doppelganging injection.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,423,2018-07-05T10:14:42Z,2018-07-18T17:58:06Z,2018-07-18T17:58:06Z,MERGED,True,248,69,5,https://github.com/mdolmen,Exec shellcode,28,[],https://github.com/tklengyel/drakvuf/pull/423,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/423#issuecomment-402900126,"Add the possibility to execute a shellcode from a file, by allocating memory into the targeted process, writing the payload to it and then hijack RIP. The one provided (src/shellcode/payload.bin) does nothing useful, just an arithmetic operation. It serves as an example. The next step is to provide a shellcode to do process doppelganging injection.",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,423,2018-07-05T10:14:42Z,2018-07-18T17:58:06Z,2018-07-18T17:58:06Z,MERGED,True,248,69,5,https://github.com/mdolmen,Exec shellcode,28,[],https://github.com/tklengyel/drakvuf/pull/423,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/423#issuecomment-402902013,"Add the possibility to execute a shellcode from a file, by allocating memory into the targeted process, writing the payload to it and then hijack RIP. The one provided (src/shellcode/payload.bin) does nothing useful, just an arithmetic operation. It serves as an example. The next step is to provide a shellcode to do process doppelganging injection.",Could you also include in the commit message an example command line for using this new option with injector? I tried ./src/injector /share/rekall-profiles/windows7-sp1-x64.json 3 1636 src/shellcode/payload.bin shellcode but that failed.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,423,2018-07-05T10:14:42Z,2018-07-18T17:58:06Z,2018-07-18T17:58:06Z,MERGED,True,248,69,5,https://github.com/mdolmen,Exec shellcode,28,[],https://github.com/tklengyel/drakvuf/pull/423,https://github.com/mdolmen,6,https://github.com/tklengyel/drakvuf/pull/423#issuecomment-402935431,"Add the possibility to execute a shellcode from a file, by allocating memory into the targeted process, writing the payload to it and then hijack RIP. The one provided (src/shellcode/payload.bin) does nothing useful, just an arithmetic operation. It serves as an example. The next step is to provide a shellcode to do process doppelganging injection.","That's weird, that the correct way to use it. I'll check that, I think I messed up with src/injector.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,423,2018-07-05T10:14:42Z,2018-07-18T17:58:06Z,2018-07-18T17:58:06Z,MERGED,True,248,69,5,https://github.com/mdolmen,Exec shellcode,28,[],https://github.com/tklengyel/drakvuf/pull/423,https://github.com/mdolmen,7,https://github.com/tklengyel/drakvuf/pull/423#issuecomment-402938147,"Add the possibility to execute a shellcode from a file, by allocating memory into the targeted process, writing the payload to it and then hijack RIP. The one provided (src/shellcode/payload.bin) does nothing useful, just an arithmetic operation. It serves as an example. The next step is to provide a shellcode to do process doppelganging injection.",At which part does the injection fails?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,423,2018-07-05T10:14:42Z,2018-07-18T17:58:06Z,2018-07-18T17:58:06Z,MERGED,True,248,69,5,https://github.com/mdolmen,Exec shellcode,28,[],https://github.com/tklengyel/drakvuf/pull/423,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/423#issuecomment-403098511,"Add the possibility to execute a shellcode from a file, by allocating memory into the targeted process, writing the payload to it and then hijack RIP. The one provided (src/shellcode/payload.bin) does nothing useful, just an arithmetic operation. It serves as an example. The next step is to provide a shellcode to do process doppelganging injection.","RAX: 0x7 Shellcode executed
Looks like its working, though for the first try it crashed taskmanager. Running the injection shortly after again fails with:
Failed to get address of kernel32.dll!WriteProcessMemory",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,423,2018-07-05T10:14:42Z,2018-07-18T17:58:06Z,2018-07-18T17:58:06Z,MERGED,True,248,69,5,https://github.com/mdolmen,Exec shellcode,28,[],https://github.com/tklengyel/drakvuf/pull/423,https://github.com/mdolmen,9,https://github.com/tklengyel/drakvuf/pull/423#issuecomment-403724552,"Add the possibility to execute a shellcode from a file, by allocating memory into the targeted process, writing the payload to it and then hijack RIP. The one provided (src/shellcode/payload.bin) does nothing useful, just an arithmetic operation. It serves as an example. The next step is to provide a shellcode to do process doppelganging injection.","Since I encoded the shellcode to suppress null bytes, I think it has added some side effects which causes the error. I change the payload and know I treat it as a structure (instead of a string) to write it in memory. I was able to execute it multiple times in a row.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,423,2018-07-05T10:14:42Z,2018-07-18T17:58:06Z,2018-07-18T17:58:06Z,MERGED,True,248,69,5,https://github.com/mdolmen,Exec shellcode,28,[],https://github.com/tklengyel/drakvuf/pull/423,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/423#issuecomment-404671196,"Add the possibility to execute a shellcode from a file, by allocating memory into the targeted process, writing the payload to it and then hijack RIP. The one provided (src/shellcode/payload.bin) does nothing useful, just an arithmetic operation. It serves as an example. The next step is to provide a shellcode to do process doppelganging injection.",Can you rebase this PR on the latest master please?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,423,2018-07-05T10:14:42Z,2018-07-18T17:58:06Z,2018-07-18T17:58:06Z,MERGED,True,248,69,5,https://github.com/mdolmen,Exec shellcode,28,[],https://github.com/tklengyel/drakvuf/pull/423,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/423#issuecomment-405776550,"Add the possibility to execute a shellcode from a file, by allocating memory into the targeted process, writing the payload to it and then hijack RIP. The one provided (src/shellcode/payload.bin) does nothing useful, just an arithmetic operation. It serves as an example. The next step is to provide a shellcode to do process doppelganging injection.",@mdolmen There still seem to be some conflicts (perhaps they are new),True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,423,2018-07-05T10:14:42Z,2018-07-18T17:58:06Z,2018-07-18T17:58:06Z,MERGED,True,248,69,5,https://github.com/mdolmen,Exec shellcode,28,[],https://github.com/tklengyel/drakvuf/pull/423,https://github.com/tklengyel,12,https://github.com/tklengyel/drakvuf/pull/423#issuecomment-405777932,"Add the possibility to execute a shellcode from a file, by allocating memory into the targeted process, writing the payload to it and then hijack RIP. The one provided (src/shellcode/payload.bin) does nothing useful, just an arithmetic operation. It serves as an example. The next step is to provide a shellcode to do process doppelganging injection.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,423,2018-07-05T10:14:42Z,2018-07-18T17:58:06Z,2018-07-18T17:58:06Z,MERGED,True,248,69,5,https://github.com/mdolmen,Exec shellcode,28,[],https://github.com/tklengyel/drakvuf/pull/423,https://github.com/tklengyel,13,https://github.com/tklengyel/drakvuf/pull/423#issuecomment-405778018,"Add the possibility to execute a shellcode from a file, by allocating memory into the targeted process, writing the payload to it and then hijack RIP. The one provided (src/shellcode/payload.bin) does nothing useful, just an arithmetic operation. It serves as an example. The next step is to provide a shellcode to do process doppelganging injection.","ERROR: Branch not suitable for integration as it does not merge cleanly: Command ""git merge --ff def3bb8248c62ea44b6e0a76c73870b8710a7ff4"" returned status code 1:
stdout: Auto-merging src/libinjector/libinjector.h
CONFLICT (content): Merge conflict in src/libinjector/libinjector.h
Auto-merging src/libinjector/injector.c
CONFLICT (content): Merge conflict in src/libinjector/injector.c
Automatic merge failed; fix conflicts and then commit the result.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,423,2018-07-05T10:14:42Z,2018-07-18T17:58:06Z,2018-07-18T17:58:06Z,MERGED,True,248,69,5,https://github.com/mdolmen,Exec shellcode,28,[],https://github.com/tklengyel/drakvuf/pull/423,https://github.com/tklengyel,14,https://github.com/tklengyel/drakvuf/pull/423#issuecomment-405945532,"Add the possibility to execute a shellcode from a file, by allocating memory into the targeted process, writing the payload to it and then hijack RIP. The one provided (src/shellcode/payload.bin) does nothing useful, just an arithmetic operation. It serves as an example. The next step is to provide a shellcode to do process doppelganging injection.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,423,2018-07-05T10:14:42Z,2018-07-18T17:58:06Z,2018-07-18T17:58:06Z,MERGED,True,248,69,5,https://github.com/mdolmen,Exec shellcode,28,[],https://github.com/tklengyel/drakvuf/pull/423,https://github.com/tklengyel,15,https://github.com/tklengyel/drakvuf/pull/423#issuecomment-405972118,"Add the possibility to execute a shellcode from a file, by allocating memory into the targeted process, writing the payload to it and then hijack RIP. The one provided (src/shellcode/payload.bin) does nothing useful, just an arithmetic operation. It serves as an example. The next step is to provide a shellcode to do process doppelganging injection.",@mdolmen please move src/shellcode/payload.bin into test-packages,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,423,2018-07-05T10:14:42Z,2018-07-18T17:58:06Z,2018-07-18T17:58:06Z,MERGED,True,248,69,5,https://github.com/mdolmen,Exec shellcode,28,[],https://github.com/tklengyel/drakvuf/pull/423,https://github.com/tklengyel,16,https://github.com/tklengyel/drakvuf/pull/423#issuecomment-405986692,"Add the possibility to execute a shellcode from a file, by allocating memory into the targeted process, writing the payload to it and then hijack RIP. The one provided (src/shellcode/payload.bin) does nothing useful, just an arithmetic operation. It serves as an example. The next step is to provide a shellcode to do process doppelganging injection.","Have you tried injecting other binaries with this method? I tried injecting a copy of calc.exe from the outside:
Got return address 0x770518ca from trapframe and it's now trapped!
INT3 Callback @ 0x770518ca. CR3 0x64110000.
Switching altp2m and to singlestep on vcpu 0
reset trap on vCPU 0, switching altp2m 0->1
INT3 Callback @ 0x770518ca. CR3 0x64110000.
Writing payload in memory..
Payload is at: 0x4140000
Failed to setup stack for passing inputs!
Switching altp2m and to singlestep on vcpu 0
reset trap on vCPU 0, switching altp2m 0->1
INT3 Callback @ 0x770518ca. CR3 0x12e15000.
INT3 received but CR3 (0x12e15000) doesn't match target process (0x64110000)
Switching altp2m and to singlestep on vcpu 0
reset trap on vCPU 0, switching altp2m 0->1
INT3 Callback @ 0x770518ca. CR3 0x64110000.
Writing payload in memory..
Payload is at: 0x0
Failed to setup stack for passing inputs!
Switching altp2m and to singlestep on vcpu 0
reset trap on vCPU 0, switching altp2m 0->1
INT3 Callback @ 0x770518ca. CR3 0x16895000.
INT3 received but CR3 (0x16895000) doesn't match target process (0x64110000)
Switching altp2m and to singlestep on vcpu 1
...",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,423,2018-07-05T10:14:42Z,2018-07-18T17:58:06Z,2018-07-18T17:58:06Z,MERGED,True,248,69,5,https://github.com/mdolmen,Exec shellcode,28,[],https://github.com/tklengyel/drakvuf/pull/423,https://github.com/mdolmen,17,https://github.com/tklengyel/drakvuf/pull/423#issuecomment-405998935,"Add the possibility to execute a shellcode from a file, by allocating memory into the targeted process, writing the payload to it and then hijack RIP. The one provided (src/shellcode/payload.bin) does nothing useful, just an arithmetic operation. It serves as an example. The next step is to provide a shellcode to do process doppelganging injection.","No I haven't tried but it's normal that it doesn't work, because calc.exe (or other windows binaries) is not position independent so functions exported by DLLs and other symbols point at wrong addresses.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,423,2018-07-05T10:14:42Z,2018-07-18T17:58:06Z,2018-07-18T17:58:06Z,MERGED,True,248,69,5,https://github.com/mdolmen,Exec shellcode,28,[],https://github.com/tklengyel/drakvuf/pull/423,https://github.com/tklengyel,18,https://github.com/tklengyel/drakvuf/pull/423#issuecomment-406013925,"Add the possibility to execute a shellcode from a file, by allocating memory into the targeted process, writing the payload to it and then hijack RIP. The one provided (src/shellcode/payload.bin) does nothing useful, just an arithmetic operation. It serves as an example. The next step is to provide a shellcode to do process doppelganging injection.","@mdolmen Those could be all fixed up though automatically as part of injection, right?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,423,2018-07-05T10:14:42Z,2018-07-18T17:58:06Z,2018-07-18T17:58:06Z,MERGED,True,248,69,5,https://github.com/mdolmen,Exec shellcode,28,[],https://github.com/tklengyel/drakvuf/pull/423,https://github.com/mdolmen,19,https://github.com/tklengyel/drakvuf/pull/423#issuecomment-406017817,"Add the possibility to execute a shellcode from a file, by allocating memory into the targeted process, writing the payload to it and then hijack RIP. The one provided (src/shellcode/payload.bin) does nothing useful, just an arithmetic operation. It serves as an example. The next step is to provide a shellcode to do process doppelganging injection.","Yeah, I'm creating a shellcode that will take a binary as parameter and
that will load it by doing a process doppelganging injection

Le mer. 18 juil. 2018 à 19:36, Tamas K Lengyel <notifications@github.com> a
écrit :
…
 @mdolmen <https://github.com/mdolmen> Those could be all fixed up though
 automatically as part of injection, right?

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#423 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AL519pVVr1O_0HSd3ol6K_wzBBFFZNwHks5uH3I2gaJpZM4VDnbS>
 .",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,423,2018-07-05T10:14:42Z,2018-07-18T17:58:06Z,2018-07-18T17:58:06Z,MERGED,True,248,69,5,https://github.com/mdolmen,Exec shellcode,28,[],https://github.com/tklengyel/drakvuf/pull/423,https://github.com/tklengyel,20,https://github.com/tklengyel/drakvuf/pull/423#issuecomment-406020075,"Add the possibility to execute a shellcode from a file, by allocating memory into the targeted process, writing the payload to it and then hijack RIP. The one provided (src/shellcode/payload.bin) does nothing useful, just an arithmetic operation. It serves as an example. The next step is to provide a shellcode to do process doppelganging injection.",@mdolmen Gotcha :) I'll merge this as-is and then you can add that shellcode in a separate PR once you got it working,True,{'THUMBS_UP': ['https://github.com/mdolmen']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,424,2018-07-06T02:18:13Z,2018-07-06T03:13:01Z,2018-07-06T03:13:04Z,MERGED,True,75,53,1,https://github.com/tklengyel,Add getopt parser to injector standalone application,1,[],https://github.com/tklengyel/drakvuf/pull/424,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/424,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,424,2018-07-06T02:18:13Z,2018-07-06T03:13:01Z,2018-07-06T03:13:04Z,MERGED,True,75,53,1,https://github.com/tklengyel,Add getopt parser to injector standalone application,1,[],https://github.com/tklengyel/drakvuf/pull/424,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/424#issuecomment-402911959,,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,424,2018-07-06T02:18:13Z,2018-07-06T03:13:01Z,2018-07-06T03:13:04Z,MERGED,True,75,53,1,https://github.com/tklengyel,Add getopt parser to injector standalone application,1,[],https://github.com/tklengyel/drakvuf/pull/424,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/424#issuecomment-402913106,,"http://mirrors.ubuntu.com is down, that's why travis is failing",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,425,2018-07-10T17:19:33Z,2018-07-10T18:04:41Z,2018-07-10T18:04:44Z,MERGED,True,1,1,1,https://github.com/tklengyel,Update Xen to 4.11,1,[],https://github.com/tklengyel/drakvuf/pull/425,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/425,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,426,2018-07-10T18:08:31Z,2018-07-10T21:13:01Z,2018-07-10T21:13:04Z,MERGED,True,1,1,1,https://github.com/tklengyel,Fix astyle,1,[],https://github.com/tklengyel/drakvuf/pull/426,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/426,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,428,2018-07-13T14:35:34Z,2018-07-18T01:01:20Z,2018-07-18T09:49:23Z,MERGED,True,88,58,2,https://github.com/skvl,Make universal functions to setup stack accessable globally,2,[],https://github.com/tklengyel/drakvuf/pull/428,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/428,"This allows to call those functions from other places such as plugins.
More over fix stack alignment bug.","This allows to call those functions from other places such as plugins.
More over fix stack alignment bug.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,428,2018-07-13T14:35:34Z,2018-07-18T01:01:20Z,2018-07-18T09:49:23Z,MERGED,True,88,58,2,https://github.com/skvl,Make universal functions to setup stack accessable globally,2,[],https://github.com/tklengyel/drakvuf/pull/428,https://github.com/skvl,2,https://github.com/tklengyel/drakvuf/pull/428#issuecomment-404858895,"This allows to call those functions from other places such as plugins.
More over fix stack alignment bug.",@tklengyel I'm very sorry but I don't understand the error from Travis-CI. I could build this successfully.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,428,2018-07-13T14:35:34Z,2018-07-18T01:01:20Z,2018-07-18T09:49:23Z,MERGED,True,88,58,2,https://github.com/skvl,Make universal functions to setup stack accessable globally,2,[],https://github.com/tklengyel/drakvuf/pull/428,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/428#issuecomment-404989320,"This allows to call those functions from other places such as plugins.
More over fix stack alignment bug.","It's unrelated to this PR, just rebase on the latest master and it will go away.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,428,2018-07-13T14:35:34Z,2018-07-18T01:01:20Z,2018-07-18T09:49:23Z,MERGED,True,88,58,2,https://github.com/skvl,Make universal functions to setup stack accessable globally,2,[],https://github.com/tklengyel/drakvuf/pull/428,https://github.com/skvl,4,https://github.com/tklengyel/drakvuf/pull/428#issuecomment-405606885,"This allows to call those functions from other places such as plugins.
More over fix stack alignment bug.",@tklengyel could you pleas merge this branch if everything is OK.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,428,2018-07-13T14:35:34Z,2018-07-18T01:01:20Z,2018-07-18T09:49:23Z,MERGED,True,88,58,2,https://github.com/skvl,Make universal functions to setup stack accessable globally,2,[],https://github.com/tklengyel/drakvuf/pull/428,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/428#issuecomment-405708433,"This allows to call those functions from other places such as plugins.
More over fix stack alignment bug.","Will do, want to push it through Jenkins first.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,428,2018-07-13T14:35:34Z,2018-07-18T01:01:20Z,2018-07-18T09:49:23Z,MERGED,True,88,58,2,https://github.com/skvl,Make universal functions to setup stack accessable globally,2,[],https://github.com/tklengyel/drakvuf/pull/428,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/428#issuecomment-405771027,"This allows to call those functions from other places such as plugins.
More over fix stack alignment bug.",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,428,2018-07-13T14:35:34Z,2018-07-18T01:01:20Z,2018-07-18T09:49:23Z,MERGED,True,88,58,2,https://github.com/skvl,Make universal functions to setup stack accessable globally,2,[],https://github.com/tklengyel/drakvuf/pull/428,https://github.com/drakvuf-jenkins,7,https://github.com/tklengyel/drakvuf/pull/428#issuecomment-405771031,"This allows to call those functions from other places such as plugins.
More over fix stack alignment bug.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,428,2018-07-13T14:35:34Z,2018-07-18T01:01:20Z,2018-07-18T09:49:23Z,MERGED,True,88,58,2,https://github.com/skvl,Make universal functions to setup stack accessable globally,2,[],https://github.com/tklengyel/drakvuf/pull/428,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/428#issuecomment-405775326,"This allows to call those functions from other places such as plugins.
More over fix stack alignment bug.","Thanks, this is good stuff and improves the reliability of the injector a lot :)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,429,2018-07-14T01:21:50Z,2018-07-14T01:30:39Z,2018-07-14T01:30:42Z,MERGED,True,1,0,1,https://github.com/tklengyel,Fix Coverity travis script,1,[],https://github.com/tklengyel/drakvuf/pull/429,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/429,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,430,2018-07-20T17:25:18Z,2018-07-25T00:46:10Z,2018-10-23T13:42:08Z,MERGED,True,56,2,2,https://github.com/skvl,Plugins | Filedelete | Add hook to `ZwCreateSection()',3,[],https://github.com/tklengyel/drakvuf/pull/430,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/430,"Some applications use sections and views to read/write files.
Add handles of files for which section with SECTION_MAP_WRITE flag have been
created into registry of changed files.
Filter out system handles. Those having mask 0xffffffff80000000.","Some applications use sections and views to read/write files.
Add handles of files for which section with SECTION_MAP_WRITE flag have been
created into registry of changed files.
Filter out system handles. Those having mask 0xffffffff80000000.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,430,2018-07-20T17:25:18Z,2018-07-25T00:46:10Z,2018-10-23T13:42:08Z,MERGED,True,56,2,2,https://github.com/skvl,Plugins | Filedelete | Add hook to `ZwCreateSection()',3,[],https://github.com/tklengyel/drakvuf/pull/430,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/430#issuecomment-406670186,"Some applications use sections and views to read/write files.
Add handles of files for which section with SECTION_MAP_WRITE flag have been
created into registry of changed files.
Filter out system handles. Those having mask 0xffffffff80000000.",@skvl could you also please fix the Coverity errors introduced in your last filedelete PR in here?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,430,2018-07-20T17:25:18Z,2018-07-25T00:46:10Z,2018-10-23T13:42:08Z,MERGED,True,56,2,2,https://github.com/skvl,Plugins | Filedelete | Add hook to `ZwCreateSection()',3,[],https://github.com/tklengyel/drakvuf/pull/430,https://github.com/skvl,3,https://github.com/tklengyel/drakvuf/pull/430#issuecomment-406671298,"Some applications use sections and views to read/write files.
Add handles of files for which section with SECTION_MAP_WRITE flag have been
created into registry of changed files.
Filter out system handles. Those having mask 0xffffffff80000000.",@tklengyel unfortunately I don't see results yet. Though I have found astyle bug and fixed it already.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,430,2018-07-20T17:25:18Z,2018-07-25T00:46:10Z,2018-10-23T13:42:08Z,MERGED,True,56,2,2,https://github.com/skvl,Plugins | Filedelete | Add hook to `ZwCreateSection()',3,[],https://github.com/tklengyel/drakvuf/pull/430,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/430#issuecomment-406676388,"Some applications use sections and views to read/write files.
Add handles of files for which section with SECTION_MAP_WRITE flag have been
created into registry of changed files.
Filter out system handles. Those having mask 0xffffffff80000000.","*** CID 190892:  Null pointer dereferences  (REVERSE_INULL)
/src/plugins/filedelete/filedelete2.cpp: 560 in start_readfile(drakvuf *, drakvuf_trap_info *, vmi_instance *, unsigned long)()
554         return response;
555     
556     err:
557         if (restore_regs)
558             memcpy(info->regs, &injector->saved_regs, sizeof(x86_registers_t));
559     
>>>     CID 190892:  Null pointer dereferences  (REVERSE_INULL)
>>>     Null-checking ""injector"" suggests that it may be null, but it has already been dereferenced on all paths leading to the check.
560         if (injector)
561             delete injector;
562     
563         return response;
564     }
565     

*** CID 190891:    (NULL_RETURNS)
/src/plugins/filedelete/filedelete.cpp: 252 in extract_ca_file(filedelete *, drakvuf *, const drakvuf_trap_info *, vmi_instance *, unsigned long, access_context_t *, const _ustring *)()
246                 {
247                     uint8_t page[4096];
248     
249                     if ( VMI_FAILURE == vmi_read_pa(vmi, VMI_BIT_MASK(12,48) & pte, 4096, &page, NULL) )
250                         continue;
251     
>>>     CID 190891:    (NULL_RETURNS)
>>>     Dereferencing a pointer that might be null ""fp"" when calling ""fseek"".
252                     if ( !fseek ( fp, fileoffset, SEEK_SET ) )
253                         fwrite(page, 4096, 1, fp);
254                 }
255             }
256     
257             ctx->addr = subsection + f->offsets[SUBSECTION_NEXTSUBSECTION];
/src/plugins/filedelete/filedelete.cpp: 262 in extract_ca_file(filedelete *, drakvuf *, const drakvuf_trap_info *, vmi_instance *, unsigned long, access_context_t *, const _ustring *)()
256     
257             ctx->addr = subsection + f->offsets[SUBSECTION_NEXTSUBSECTION];
258             if ( !vmi_read_addr(vmi, ctx, &subsection) )
259                 break;
260         }
261     
>>>     CID 190891:    (NULL_RETURNS)
>>>     Dereferencing a pointer that might be null ""fp"" when calling ""fclose"".
262         fclose(fp);
263         free(file);
264     
265         save_file_metadata(f, info, curr_sequence_number, control_area, filename);
266     }
267",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,430,2018-07-20T17:25:18Z,2018-07-25T00:46:10Z,2018-10-23T13:42:08Z,MERGED,True,56,2,2,https://github.com/skvl,Plugins | Filedelete | Add hook to `ZwCreateSection()',3,[],https://github.com/tklengyel/drakvuf/pull/430,https://github.com/skvl,5,https://github.com/tklengyel/drakvuf/pull/430#issuecomment-406682546,"Some applications use sections and views to read/write files.
Add handles of files for which section with SECTION_MAP_WRITE flag have been
created into registry of changed files.
Filter out system handles. Those having mask 0xffffffff80000000.","@tklengyel I have fixed first warning. But the second is not in my code. I didn't even touch it.
NB It's funny but first warning was introduced in #404 but there were no warnings. Even now I don't see any warnings from Travic-CI. The whole thisg is ""green"".",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,430,2018-07-20T17:25:18Z,2018-07-25T00:46:10Z,2018-10-23T13:42:08Z,MERGED,True,56,2,2,https://github.com/skvl,Plugins | Filedelete | Add hook to `ZwCreateSection()',3,[],https://github.com/tklengyel/drakvuf/pull/430,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/430#issuecomment-406685850,"Some applications use sections and views to read/write files.
Add handles of files for which section with SECTION_MAP_WRITE flag have been
created into registry of changed files.
Filter out system handles. Those having mask 0xffffffff80000000.","Coverity only runs on merged PRs, not when it is opened. When it detects errors it doesn't block the PR through Travis.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,430,2018-07-20T17:25:18Z,2018-07-25T00:46:10Z,2018-10-23T13:42:08Z,MERGED,True,56,2,2,https://github.com/skvl,Plugins | Filedelete | Add hook to `ZwCreateSection()',3,[],https://github.com/tklengyel/drakvuf/pull/430,https://github.com/skvl,7,https://github.com/tklengyel/drakvuf/pull/430#issuecomment-406685954,"Some applications use sections and views to read/write files.
Add handles of files for which section with SECTION_MAP_WRITE flag have been
created into registry of changed files.
Filter out system handles. Those having mask 0xffffffff80000000.",Is this OK now?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,430,2018-07-20T17:25:18Z,2018-07-25T00:46:10Z,2018-10-23T13:42:08Z,MERGED,True,56,2,2,https://github.com/skvl,Plugins | Filedelete | Add hook to `ZwCreateSection()',3,[],https://github.com/tklengyel/drakvuf/pull/430,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/430#issuecomment-406685995,"Some applications use sections and views to read/write files.
Add handles of files for which section with SECTION_MAP_WRITE flag have been
created into registry of changed files.
Filter out system handles. Those having mask 0xffffffff80000000.","Not sure why Coverity detected that error only after your PR was merged, but if you are at it, might as well fix it now :)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,430,2018-07-20T17:25:18Z,2018-07-25T00:46:10Z,2018-10-23T13:42:08Z,MERGED,True,56,2,2,https://github.com/skvl,Plugins | Filedelete | Add hook to `ZwCreateSection()',3,[],https://github.com/tklengyel/drakvuf/pull/430,https://github.com/skvl,9,https://github.com/tklengyel/drakvuf/pull/430#issuecomment-406688256,"Some applications use sections and views to read/write files.
Add handles of files for which section with SECTION_MAP_WRITE flag have been
created into registry of changed files.
Filter out system handles. Those having mask 0xffffffff80000000.",I hope I caught a point with this code. I decided just to return on error.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,430,2018-07-20T17:25:18Z,2018-07-25T00:46:10Z,2018-10-23T13:42:08Z,MERGED,True,56,2,2,https://github.com/skvl,Plugins | Filedelete | Add hook to `ZwCreateSection()',3,[],https://github.com/tklengyel/drakvuf/pull/430,https://github.com/skvl,10,https://github.com/tklengyel/drakvuf/pull/430#issuecomment-407373096,"Some applications use sections and views to read/write files.
Add handles of files for which section with SECTION_MAP_WRITE flag have been
created into registry of changed files.
Filter out system handles. Those having mask 0xffffffff80000000.",@tklengyel is this OK?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,430,2018-07-20T17:25:18Z,2018-07-25T00:46:10Z,2018-10-23T13:42:08Z,MERGED,True,56,2,2,https://github.com/skvl,Plugins | Filedelete | Add hook to `ZwCreateSection()',3,[],https://github.com/tklengyel/drakvuf/pull/430,https://github.com/drakvuf-jenkins,11,https://github.com/tklengyel/drakvuf/pull/430#issuecomment-407373105,"Some applications use sections and views to read/write files.
Add handles of files for which section with SECTION_MAP_WRITE flag have been
created into registry of changed files.
Filter out system handles. Those having mask 0xffffffff80000000.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,430,2018-07-20T17:25:18Z,2018-07-25T00:46:10Z,2018-10-23T13:42:08Z,MERGED,True,56,2,2,https://github.com/skvl,Plugins | Filedelete | Add hook to `ZwCreateSection()',3,[],https://github.com/tklengyel/drakvuf/pull/430,https://github.com/tklengyel,12,https://github.com/tklengyel/drakvuf/pull/430#issuecomment-407412893,"Some applications use sections and views to read/write files.
Add handles of files for which section with SECTION_MAP_WRITE flag have been
created into registry of changed files.
Filter out system handles. Those having mask 0xffffffff80000000.",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,430,2018-07-20T17:25:18Z,2018-07-25T00:46:10Z,2018-10-23T13:42:08Z,MERGED,True,56,2,2,https://github.com/skvl,Plugins | Filedelete | Add hook to `ZwCreateSection()',3,[],https://github.com/tklengyel/drakvuf/pull/430,https://github.com/tklengyel,13,https://github.com/tklengyel/drakvuf/pull/430#issuecomment-407601359,"Some applications use sections and views to read/write files.
Add handles of files for which section with SECTION_MAP_WRITE flag have been
created into registry of changed files.
Filter out system handles. Those having mask 0xffffffff80000000.",It worked:         Defects eliminated: 2,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,431,2018-07-27T15:15:11Z,2018-07-27T15:57:14Z,2018-07-27T16:11:05Z,MERGED,True,0,1,1,https://github.com/disaykin,SOCKETMON: Fix bug with interrupting drakvuf loop after plugin initia…,1,[],https://github.com/tklengyel/drakvuf/pull/431,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/431,…lization,…lization,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,432,2018-07-27T16:23:34Z,2018-07-27T16:29:48Z,2018-07-27T16:29:51Z,MERGED,True,17,17,1,https://github.com/tklengyel,Use PRINT_DEBUG in socketmon,1,[],https://github.com/tklengyel/drakvuf/pull/432,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/432,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,433,2018-07-27T16:49:32Z,2018-07-27T17:17:14Z,2018-10-23T13:42:10Z,MERGED,True,62,4,2,https://github.com/skvl,Add `ZwWaitForSingleObject()' injection for asynchronous files,1,[],https://github.com/tklengyel/drakvuf/pull/433,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/433,Reading such files result in `STATUS_PENDING'.,Reading such files result in `STATUS_PENDING'.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,433,2018-07-27T16:49:32Z,2018-07-27T17:17:14Z,2018-10-23T13:42:10Z,MERGED,True,62,4,2,https://github.com/skvl,Add `ZwWaitForSingleObject()' injection for asynchronous files,1,[],https://github.com/tklengyel/drakvuf/pull/433,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/433#issuecomment-408476274,Reading such files result in `STATUS_PENDING'.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,433,2018-07-27T16:49:32Z,2018-07-27T17:17:14Z,2018-10-23T13:42:10Z,MERGED,True,62,4,2,https://github.com/skvl,Add `ZwWaitForSingleObject()' injection for asynchronous files,1,[],https://github.com/tklengyel/drakvuf/pull/433,https://github.com/skvl,3,https://github.com/tklengyel/drakvuf/pull/433#issuecomment-408477985,Reading such files result in `STATUS_PENDING'.,@tklengyel I didn't touch socketmon.cpp! Though Travis CI banned me on it!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,433,2018-07-27T16:49:32Z,2018-07-27T17:17:14Z,2018-10-23T13:42:10Z,MERGED,True,62,4,2,https://github.com/skvl,Add `ZwWaitForSingleObject()' injection for asynchronous files,1,[],https://github.com/tklengyel/drakvuf/pull/433,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/433#issuecomment-408478572,Reading such files result in `STATUS_PENDING'.,"@skvl No worries, the astyle check has been bugging out on Travis lately, safe to ignore.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,433,2018-07-27T16:49:32Z,2018-07-27T17:17:14Z,2018-10-23T13:42:10Z,MERGED,True,62,4,2,https://github.com/skvl,Add `ZwWaitForSingleObject()' injection for asynchronous files,1,[],https://github.com/tklengyel/drakvuf/pull/433,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/433#issuecomment-408480829,Reading such files result in `STATUS_PENDING'.,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,433,2018-07-27T16:49:32Z,2018-07-27T17:17:14Z,2018-10-23T13:42:10Z,MERGED,True,62,4,2,https://github.com/skvl,Add `ZwWaitForSingleObject()' injection for asynchronous files,1,[],https://github.com/tklengyel/drakvuf/pull/433,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/433#issuecomment-408483333,Reading such files result in `STATUS_PENDING'.,"Looks good, thanks!",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,433,2018-07-27T16:49:32Z,2018-07-27T17:17:14Z,2018-10-23T13:42:10Z,MERGED,True,62,4,2,https://github.com/skvl,Add `ZwWaitForSingleObject()' injection for asynchronous files,1,[],https://github.com/tklengyel/drakvuf/pull/433,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/433#issuecomment-408488539,Reading such files result in `STATUS_PENDING'.,"Coverity found this error but I'm not actually seeing why it thinks the array is being overrun. @skvl thoughts?
*** CID 191116:  Memory - corruptions  (OVERRUN)
/src/plugins/filedelete/filedelete2.cpp: 322 in readfile_cb(drakvuf *, drakvuf_trap_info *)()
316             uint64_t null64 = 0;
317     
318             init_argument(0, &args[0], ARGUMENT_INT, sizeof(uint64_t), (void*)injector->handle);
319             init_argument(0, &args[1], ARGUMENT_INT, sizeof(uint64_t), (void*)null64);
320             init_argument(0, &args[2], ARGUMENT_INT, sizeof(uint64_t), (void*)null64);
321     
>>>     CID 191116:  Memory - corruptions  (OVERRUN)
>>>     Overrunning array ""args"" of 72 bytes by passing it to a function which accesses it at byte offset 72.
322             if ( !setup_stack_64(vmi, info, &ctx, args, 3) )
323                 goto err;
324     
325             info->regs->rip = f->waitobject_va;
326     
327             injector->bp->name = ""WaitForSingleObject ret"";",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,433,2018-07-27T16:49:32Z,2018-07-27T17:17:14Z,2018-10-23T13:42:10Z,MERGED,True,62,4,2,https://github.com/skvl,Add `ZwWaitForSingleObject()' injection for asynchronous files,1,[],https://github.com/tklengyel/drakvuf/pull/433,https://github.com/skvl,8,https://github.com/tklengyel/drakvuf/pull/433#issuecomment-408816869,Reading such files result in `STATUS_PENDING'.,"@tklengyel sorry for late response. I have found this snippet in setup_stack_64():
        // p1
        info->regs->rcx = args[0].data_on_stack;
        // p2
        info->regs->rdx = args[1].data_on_stack;
        // p3
        info->regs->r8 = args[2].data_on_stack;
        // p4
        info->regs->r9 = args[3].data_on_stack;

So it assumes that there is always 4 arguments. But in my case there is only 3.
Long live the Coverity!
Hooray Coverity!",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,434,2018-07-27T17:02:34Z,2018-07-27T17:15:55Z,2018-07-27T17:15:57Z,MERGED,True,1,1,1,https://github.com/tklengyel,Fix astyle for socketmon,1,[],https://github.com/tklengyel/drakvuf/pull/434,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/434,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,435,2018-07-27T17:05:19Z,2018-07-27T18:32:57Z,2018-07-27T18:33:00Z,MERGED,True,6,184,7,https://github.com/tklengyel,"Reverse #405, CPU overhead issue",1,[],https://github.com/tklengyel/drakvuf/pull/435,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/435,"PR #405 introduced severe CPU overhead due to the changes of how polling for events is performed. Reverting it for now until the reason for the overhead is better understood.
/cc @mbushou","PR #405 introduced severe CPU overhead due to the changes of how polling for events is performed. Reverting it for now until the reason for the overhead is better understood.
/cc @mbushou",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,436,2018-07-30T11:13:44Z,2018-07-30T13:57:09Z,2018-07-30T14:42:37Z,MERGED,True,21,8,1,https://github.com/disaykin,LIBINJECTOR: Fix out of bounds exception in setup_stack_64 function,1,[],https://github.com/tklengyel/drakvuf/pull/436,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/436,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,436,2018-07-30T11:13:44Z,2018-07-30T13:57:09Z,2018-07-30T14:42:37Z,MERGED,True,21,8,1,https://github.com/disaykin,LIBINJECTOR: Fix out of bounds exception in setup_stack_64 function,1,[],https://github.com/tklengyel/drakvuf/pull/436,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/436#issuecomment-408872326,,Thanks!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,437,2018-07-30T20:27:06Z,2018-07-31T02:48:43Z,2018-07-31T02:48:45Z,MERGED,True,225,13,10,https://github.com/tklengyel,Re-add event fd API with performance fixes,5,[],https://github.com/tklengyel/drakvuf/pull/437,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/437,Also fix assorted performance issues with socketmon.,Also fix assorted performance issues with socketmon.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,437,2018-07-30T20:27:06Z,2018-07-31T02:48:43Z,2018-07-31T02:48:45Z,MERGED,True,225,13,10,https://github.com/tklengyel,Re-add event fd API with performance fixes,5,[],https://github.com/tklengyel/drakvuf/pull/437,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/437#issuecomment-409001641,Also fix assorted performance issues with socketmon.,"@mbushou PR #405 never unmasked the Xen event channel after processing so it just kept firing at every check
@nystilaps PR #409 had some serious issues with the cr3 event",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,437,2018-07-30T20:27:06Z,2018-07-31T02:48:43Z,2018-07-31T02:48:45Z,MERGED,True,225,13,10,https://github.com/tklengyel,Re-add event fd API with performance fixes,5,[],https://github.com/tklengyel/drakvuf/pull/437,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/437#issuecomment-409075749,Also fix assorted performance issues with socketmon.,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,438,2018-07-31T02:32:17Z,2018-07-31T02:40:56Z,2018-07-31T02:40:59Z,MERGED,True,4,0,1,https://github.com/tklengyel,Don't trap sys_tz on Linux,1,[],https://github.com/tklengyel/drakvuf/pull/438,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/438,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,438,2018-07-31T02:32:17Z,2018-07-31T02:40:56Z,2018-07-31T02:40:59Z,MERGED,True,4,0,1,https://github.com/tklengyel,Don't trap sys_tz on Linux,1,[],https://github.com/tklengyel/drakvuf/pull/438,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/438#issuecomment-409074449,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,439,2018-07-31T02:55:50Z,2018-07-31T03:25:18Z,2018-07-31T03:25:21Z,MERGED,True,4,0,1,https://github.com/tklengyel,Skip sys_dmi variables in syscalls plugins for Linux,1,[],https://github.com/tklengyel/drakvuf/pull/439,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/439,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,439,2018-07-31T02:55:50Z,2018-07-31T03:25:18Z,2018-07-31T03:25:21Z,MERGED,True,4,0,1,https://github.com/tklengyel,Skip sys_dmi variables in syscalls plugins for Linux,1,[],https://github.com/tklengyel/drakvuf/pull/439,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/439#issuecomment-409079598,,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,440,2018-07-31T03:31:32Z,2018-07-31T04:14:19Z,2018-08-01T22:32:34Z,MERGED,True,9,3,1,https://github.com/tklengyel,Skip some more variables in Linux syscalls plugin,1,[],https://github.com/tklengyel/drakvuf/pull/440,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/440,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,441,2018-07-31T14:35:27Z,2018-07-31T17:27:02Z,2019-03-13T12:41:58Z,MERGED,True,682,1033,5,https://github.com/disaykin,Filedelete plugin refactored and fixed.,2,[],https://github.com/tklengyel/drakvuf/pull/441,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/441,"Print information about detected deleted or changed files in filedelete_use_injector mode.
Some code duplication removed.
Memory leaks fixed.
Static counter usage eliminated.
Don't mix C++ and C style memory management.","Print information about detected deleted or changed files in filedelete_use_injector mode.
Some code duplication removed.
Memory leaks fixed.
Static counter usage eliminated.
Don't mix C++ and C style memory management.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,441,2018-07-31T14:35:27Z,2018-07-31T17:27:02Z,2019-03-13T12:41:58Z,MERGED,True,682,1033,5,https://github.com/disaykin,Filedelete plugin refactored and fixed.,2,[],https://github.com/tklengyel/drakvuf/pull/441,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/441#issuecomment-409243623,"Print information about detected deleted or changed files in filedelete_use_injector mode.
Some code duplication removed.
Memory leaks fixed.
Static counter usage eliminated.
Don't mix C++ and C style memory management.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,441,2018-07-31T14:35:27Z,2018-07-31T17:27:02Z,2019-03-13T12:41:58Z,MERGED,True,682,1033,5,https://github.com/disaykin,Filedelete plugin refactored and fixed.,2,[],https://github.com/tklengyel/drakvuf/pull/441,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/441#issuecomment-409254813,"Print information about detected deleted or changed files in filedelete_use_injector mode.
Some code duplication removed.
Memory leaks fixed.
Static counter usage eliminated.
Don't mix C++ and C style memory management.",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,441,2018-07-31T14:35:27Z,2018-07-31T17:27:02Z,2019-03-13T12:41:58Z,MERGED,True,682,1033,5,https://github.com/disaykin,Filedelete plugin refactored and fixed.,2,[],https://github.com/tklengyel/drakvuf/pull/441,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/441#issuecomment-409302053,"Print information about detected deleted or changed files in filedelete_use_injector mode.
Some code duplication removed.
Memory leaks fixed.
Static counter usage eliminated.
Don't mix C++ and C style memory management.",Thanks for cleaning it up :) This is in much better shape now.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,443,2018-08-03T20:41:51Z,2018-08-03T22:22:52Z,2018-08-03T22:22:52Z,CLOSED,False,1997,1095,23,https://github.com/mdolmen,Process doppelganging injection,32,[],https://github.com/tklengyel/drakvuf/pull/443,https://github.com/mdolmen,1,https://github.com/tklengyel/drakvuf/pull/443,"Add process doppelganging injection support via a shellcode. Solve #332 .

Provides the shellcode and the source code use to generate it.
Allows to inject a binary into the guest's filesystem and execute it. It has some limitations due to the technique itself as well as the current implementation. For example certain programs fail to locate some DLLs.
Also, you need to have write permission on the guest process used as a cover otherwise the call to CreateFileTransacted will fail.
Here is a working test case (Windows 10 x64 - Build 17134):
./src/injector -r /root/windows10-1803.rekall.json -d 1 -i <PID_Taskmgr> -e shellcode/doppelganging.bin -m doppelganging -B ""test-packages/mimikatz.exe"" -P ""C:\users\<username>\desktop\notepad.exe"" -v

More details:


https://www.youtube.com/watch?v=Cch8dvp836w&feature=youtu.be&t=2382","Add process doppelganging injection support via a shellcode. Solve #332 .

Provides the shellcode and the source code use to generate it.
Allows to inject a binary into the guest's filesystem and execute it. It has some limitations due to the technique itself as well as the current implementation. For example certain programs fail to locate some DLLs.
Also, you need to have write permission on the guest process used as a cover otherwise the call to CreateFileTransacted will fail.
Here is a working test case (Windows 10 x64 - Build 17134):
./src/injector -r /root/windows10-1803.rekall.json -d 1 -i <PID_Taskmgr> -e shellcode/doppelganging.bin -m doppelganging -B ""test-packages/mimikatz.exe"" -P ""C:\users\<username>\desktop\notepad.exe"" -v

More details:


https://www.youtube.com/watch?v=Cch8dvp836w&feature=youtu.be&t=2382",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,444,2018-08-03T22:22:40Z,2018-09-04T15:19:59Z,2018-09-04T15:19:59Z,MERGED,True,1385,47,11,https://github.com/mdolmen,Process doppelganging injection support,32,[],https://github.com/tklengyel/drakvuf/pull/444,https://github.com/mdolmen,1,https://github.com/tklengyel/drakvuf/pull/444,"Add process doppelganging injection support via a shellcode. Solve #332 .


Provides the shellcode and the source code used to generate it (works only for Windows 10 x64, version 1803).


Allows to inject a binary into the guest's filesystem and execute it. It has some limitations due to the technique itself as well as the current implementation. For example certain programs fail to locate some DLLs.


Also, you need to have write permission on the guest process used as a cover otherwise the call to CreateFileTransacted will fail.


Here is a working test case (Windows 10 x64 - Build 17134):
./src/injector -r /root/windows10-1803.rekall.json -d 1 -i <PID_Taskmgr> -e shellcode/doppelganging.bin -m doppelganging -B ""test-packages/mimikatz.exe"" -P ""C:\users\<username>\desktop\notepad.exe"" -v


To make it works for other versions of Windows, the shellcode generated must be different. The data structures and function definitions present in shellcode/doppelganging.h would have to be checked and modified accordingly to match the target kernel. Also in the injector I add a breakpoint to a specific kernel function, PspCallProcessNotifyRoutines(), called by NtCreateThreadEx() that need to be bypass to make the injection successful. This step is probably unnecessary for OS prior to Windows 10.


More details:



https://www.youtube.com/watch?v=Cch8dvp836w&feature=youtu.be&t=2382","Add process doppelganging injection support via a shellcode. Solve #332 .


Provides the shellcode and the source code used to generate it (works only for Windows 10 x64, version 1803).


Allows to inject a binary into the guest's filesystem and execute it. It has some limitations due to the technique itself as well as the current implementation. For example certain programs fail to locate some DLLs.


Also, you need to have write permission on the guest process used as a cover otherwise the call to CreateFileTransacted will fail.


Here is a working test case (Windows 10 x64 - Build 17134):
./src/injector -r /root/windows10-1803.rekall.json -d 1 -i <PID_Taskmgr> -e shellcode/doppelganging.bin -m doppelganging -B ""test-packages/mimikatz.exe"" -P ""C:\users\<username>\desktop\notepad.exe"" -v


To make it works for other versions of Windows, the shellcode generated must be different. The data structures and function definitions present in shellcode/doppelganging.h would have to be checked and modified accordingly to match the target kernel. Also in the injector I add a breakpoint to a specific kernel function, PspCallProcessNotifyRoutines(), called by NtCreateThreadEx() that need to be bypass to make the injection successful. This step is probably unnecessary for OS prior to Windows 10.


More details:



https://www.youtube.com/watch?v=Cch8dvp836w&feature=youtu.be&t=2382",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,444,2018-08-03T22:22:40Z,2018-09-04T15:19:59Z,2018-09-04T15:19:59Z,MERGED,True,1385,47,11,https://github.com/mdolmen,Process doppelganging injection support,32,[],https://github.com/tklengyel/drakvuf/pull/444,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/444#issuecomment-410393804,"Add process doppelganging injection support via a shellcode. Solve #332 .


Provides the shellcode and the source code used to generate it (works only for Windows 10 x64, version 1803).


Allows to inject a binary into the guest's filesystem and execute it. It has some limitations due to the technique itself as well as the current implementation. For example certain programs fail to locate some DLLs.


Also, you need to have write permission on the guest process used as a cover otherwise the call to CreateFileTransacted will fail.


Here is a working test case (Windows 10 x64 - Build 17134):
./src/injector -r /root/windows10-1803.rekall.json -d 1 -i <PID_Taskmgr> -e shellcode/doppelganging.bin -m doppelganging -B ""test-packages/mimikatz.exe"" -P ""C:\users\<username>\desktop\notepad.exe"" -v


To make it works for other versions of Windows, the shellcode generated must be different. The data structures and function definitions present in shellcode/doppelganging.h would have to be checked and modified accordingly to match the target kernel. Also in the injector I add a breakpoint to a specific kernel function, PspCallProcessNotifyRoutines(), called by NtCreateThreadEx() that need to be bypass to make the injection successful. This step is probably unnecessary for OS prior to Windows 10.


More details:



https://www.youtube.com/watch?v=Cch8dvp836w&feature=youtu.be&t=2382",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,444,2018-08-03T22:22:40Z,2018-09-04T15:19:59Z,2018-09-04T15:19:59Z,MERGED,True,1385,47,11,https://github.com/mdolmen,Process doppelganging injection support,32,[],https://github.com/tklengyel/drakvuf/pull/444,https://github.com/mdolmen,3,https://github.com/tklengyel/drakvuf/pull/444#issuecomment-410428097,"Add process doppelganging injection support via a shellcode. Solve #332 .


Provides the shellcode and the source code used to generate it (works only for Windows 10 x64, version 1803).


Allows to inject a binary into the guest's filesystem and execute it. It has some limitations due to the technique itself as well as the current implementation. For example certain programs fail to locate some DLLs.


Also, you need to have write permission on the guest process used as a cover otherwise the call to CreateFileTransacted will fail.


Here is a working test case (Windows 10 x64 - Build 17134):
./src/injector -r /root/windows10-1803.rekall.json -d 1 -i <PID_Taskmgr> -e shellcode/doppelganging.bin -m doppelganging -B ""test-packages/mimikatz.exe"" -P ""C:\users\<username>\desktop\notepad.exe"" -v


To make it works for other versions of Windows, the shellcode generated must be different. The data structures and function definitions present in shellcode/doppelganging.h would have to be checked and modified accordingly to match the target kernel. Also in the injector I add a breakpoint to a specific kernel function, PspCallProcessNotifyRoutines(), called by NtCreateThreadEx() that need to be bypass to make the injection successful. This step is probably unnecessary for OS prior to Windows 10.


More details:



https://www.youtube.com/watch?v=Cch8dvp836w&feature=youtu.be&t=2382",It works only for Windows 10 because of differences between some data structure that are used across different OS versions,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,444,2018-08-03T22:22:40Z,2018-09-04T15:19:59Z,2018-09-04T15:19:59Z,MERGED,True,1385,47,11,https://github.com/mdolmen,Process doppelganging injection support,32,[],https://github.com/tklengyel/drakvuf/pull/444,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/444#issuecomment-410454272,"Add process doppelganging injection support via a shellcode. Solve #332 .


Provides the shellcode and the source code used to generate it (works only for Windows 10 x64, version 1803).


Allows to inject a binary into the guest's filesystem and execute it. It has some limitations due to the technique itself as well as the current implementation. For example certain programs fail to locate some DLLs.


Also, you need to have write permission on the guest process used as a cover otherwise the call to CreateFileTransacted will fail.


Here is a working test case (Windows 10 x64 - Build 17134):
./src/injector -r /root/windows10-1803.rekall.json -d 1 -i <PID_Taskmgr> -e shellcode/doppelganging.bin -m doppelganging -B ""test-packages/mimikatz.exe"" -P ""C:\users\<username>\desktop\notepad.exe"" -v


To make it works for other versions of Windows, the shellcode generated must be different. The data structures and function definitions present in shellcode/doppelganging.h would have to be checked and modified accordingly to match the target kernel. Also in the injector I add a breakpoint to a specific kernel function, PspCallProcessNotifyRoutines(), called by NtCreateThreadEx() that need to be bypass to make the injection successful. This step is probably unnecessary for OS prior to Windows 10.


More details:



https://www.youtube.com/watch?v=Cch8dvp836w&feature=youtu.be&t=2382","That's OK but in that case it should bail if the target system is not Windows 10. Also, any chance to make it work with Win7 and Win8? If yes, please put it in the PR description what would be needed for that.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,444,2018-08-03T22:22:40Z,2018-09-04T15:19:59Z,2018-09-04T15:19:59Z,MERGED,True,1385,47,11,https://github.com/mdolmen,Process doppelganging injection support,32,[],https://github.com/tklengyel/drakvuf/pull/444,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/444#issuecomment-410466072,"Add process doppelganging injection support via a shellcode. Solve #332 .


Provides the shellcode and the source code used to generate it (works only for Windows 10 x64, version 1803).


Allows to inject a binary into the guest's filesystem and execute it. It has some limitations due to the technique itself as well as the current implementation. For example certain programs fail to locate some DLLs.


Also, you need to have write permission on the guest process used as a cover otherwise the call to CreateFileTransacted will fail.


Here is a working test case (Windows 10 x64 - Build 17134):
./src/injector -r /root/windows10-1803.rekall.json -d 1 -i <PID_Taskmgr> -e shellcode/doppelganging.bin -m doppelganging -B ""test-packages/mimikatz.exe"" -P ""C:\users\<username>\desktop\notepad.exe"" -v


To make it works for other versions of Windows, the shellcode generated must be different. The data structures and function definitions present in shellcode/doppelganging.h would have to be checked and modified accordingly to match the target kernel. Also in the injector I add a breakpoint to a specific kernel function, PspCallProcessNotifyRoutines(), called by NtCreateThreadEx() that need to be bypass to make the injection successful. This step is probably unnecessary for OS prior to Windows 10.


More details:



https://www.youtube.com/watch?v=Cch8dvp836w&feature=youtu.be&t=2382","With Windows 10 14393.1066 I can't get it working. The debug log is not particularly helpful in determining why it failed.
# ./src/injector -r /share/rekall-profiles/windows10.json -d windows10 -i 5988 -e shellcode/doppelganging.bin -B test-packages/calc.exe -P ""C:\Windows\System32\calc.exe"" -v
drakvuf_event_fd_add fd=12
size of list=1
regenerating event_fds and fd_info_lookup...
new event_fd i=0 for fd=12
new fd_info_lookup i=0 for fd=12
drakvuf_init: adding event_fd done
Init VMI on domID 3 -> windows10
init_vmi: initializing vmi done
Max GPFN: 0x10d04f
Max mem set? 0
Physmap populated? 0
Altp2m enabled? 0
Altp2m view X created? 0 with ID 1
Altp2m view R created? 0 with ID 2
Switched Altp2m view to X? 0
Windows kernel base address is 0xfffff8026ca94000
Rekall profile: '_KPCR' has no 'PrcbData' member
libdrakvuf initialized
Injector starting shellcode/doppelganging.bin through PID 5988 TID: 0
Target PID 5988 with DTB 0x58c58000 to start 'shellcode/doppelganging.bin'
Found PEB @ 0xa06e814000. LDR @ 0x7ffef02f23a0. INLOADORDER @ 0x20ee66623a0.
Found module taskmgr.exe
Found module ntdll.dll
Found module KERNEL32.DLL
	CreateProcessA @ 0x7ffef010b970
Starting injection loop
Started DRAKVUF loop
CR3 cb on vCPU 1: 0x1d689000
CR3 changed to 0x1d689000
CR3 cb on vCPU 2: 0x1d689000
CR3 changed to 0x1d689000
CR3 cb on vCPU 3: 0x35a1e000
CR3 changed to 0x35a1e000
CR3 cb on vCPU 1: 0x21e2f000
CR3 changed to 0x21e2f000
CR3 cb on vCPU 3: 0x129e9000
CR3 changed to 0x129e9000
CR3 cb on vCPU 2: 0x129e9000
CR3 changed to 0x129e9000
CR3 cb on vCPU 0: 0x35a1e000
CR3 changed to 0x35a1e000
CR3 cb on vCPU 1: 0x1d689000
CR3 changed to 0x1d689000
CR3 cb on vCPU 2: 0x1d689000
CR3 changed to 0x1d689000
CR3 cb on vCPU 3: 0x224c2000
CR3 changed to 0x224c2000
CR3 cb on vCPU 2: 0x4a4af000
CR3 changed to 0x4a4af000
CR3 cb on vCPU 1: 0x1ec7d000
CR3 changed to 0x1ec7d000
CR3 cb on vCPU 0: 0x58c58000
CR3 changed to 0x58c58000
Thread @ 0xffffa70d8ec49080. ThreadID: 5992
Breakpoint VA 0x7ffef0246c24 -> PA 0xba8c24
Physmap populated? 0
Copied trapped page to new location
Activating remapped gfns in the altp2m views!
		Trap added @ PA 0xba8c24 RPA 0x10d051c24 Page 2984 for entry. 
Got return address 0x7ffef0246c24 from trapframe and it's now trapped!
INT3 Callback @ 0x7ffef0246c24. CR3 0x58c58000.
Switching altp2m and to singlestep on vcpu 0
reset trap on vCPU 0, switching altp2m 0->1
INT3 Callback @ 0x7ffef0246c24. CR3 0x4a4af000.
INT3 received but CR3 (0x4a4af000) doesn't match target process (0x58c58000)
INT3 received from PID: 2348 [\Device\HarddiskVolume2\Windows\SystemApps\ShellExperienceHost_cw5n1h2txyewy\ShellExperienceHost.exe]
Switching altp2m and to singlestep on vcpu 2
INT3 Callback @ 0x7ffef0246c24. CR3 0x1ec7d000.
INT3 received but CR3 (0x1ec7d000) doesn't match target process (0x58c58000)
INT3 received from PID: 1044 [\Device\HarddiskVolume2\Windows\System32\svchost.exe]
Switching altp2m and to singlestep on vcpu 1
reset trap on vCPU 1, switching altp2m 0->1
reset trap on vCPU 2, switching altp2m 0->1
INT3 Callback @ 0x7ffef0246c24. CR3 0x58c58000.
RAX: 0x0
Removing breakpoint trap from 0xba8c24.
Removed memtrap for GFN 0xba8 in altp2m view 1
Removed memtrap for GFN 0x10d051 in altp2m view 1
DRAKVUF loop finished
[INJECT] TIME:1533404309.494865 PID:5988 DTB:0x58c58000 FILE:""shellcode/doppelganging.bin"" ARGUMENTS:"""" INJECTED_PID:0 INJECTED_TID:0
Finished with injection. Ret: 0
Process startup failed
starting close_vmi_drakvuf
Removed memtrap for GFN 0x10d050 in altp2m view 1
close_vmi_drakvuf finished",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,444,2018-08-03T22:22:40Z,2018-09-04T15:19:59Z,2018-09-04T15:19:59Z,MERGED,True,1385,47,11,https://github.com/mdolmen,Process doppelganging injection support,32,[],https://github.com/tklengyel/drakvuf/pull/444,https://github.com/mdolmen,6,https://github.com/tklengyel/drakvuf/pull/444#issuecomment-410469054,"Add process doppelganging injection support via a shellcode. Solve #332 .


Provides the shellcode and the source code used to generate it (works only for Windows 10 x64, version 1803).


Allows to inject a binary into the guest's filesystem and execute it. It has some limitations due to the technique itself as well as the current implementation. For example certain programs fail to locate some DLLs.


Also, you need to have write permission on the guest process used as a cover otherwise the call to CreateFileTransacted will fail.


Here is a working test case (Windows 10 x64 - Build 17134):
./src/injector -r /root/windows10-1803.rekall.json -d 1 -i <PID_Taskmgr> -e shellcode/doppelganging.bin -m doppelganging -B ""test-packages/mimikatz.exe"" -P ""C:\users\<username>\desktop\notepad.exe"" -v


To make it works for other versions of Windows, the shellcode generated must be different. The data structures and function definitions present in shellcode/doppelganging.h would have to be checked and modified accordingly to match the target kernel. Also in the injector I add a breakpoint to a specific kernel function, PspCallProcessNotifyRoutines(), called by NtCreateThreadEx() that need to be bypass to make the injection successful. This step is probably unnecessary for OS prior to Windows 10.


More details:



https://www.youtube.com/watch?v=Cch8dvp836w&feature=youtu.be&t=2382","I see, it's because of the guest process used as a cover. It needs to be
writable to successfully create a transaction. At the end of the operation
the binary will not be modified (because we rollback the transaction before
it happens) but it has to be modified, in memory, for the context of the
transaction. You can still use notepad but you must copy it to another
folder than system32

Le sam. 4 août 2018 à 19:44, Tamas K Lengyel <notifications@github.com> a
écrit :
…
 With Windows 10 1439.1066 I can't get it working. The debug log is not
 particularly helpful in determining why it failed.

 # ./src/injector -r /share/rekall-profiles/windows10.json -d windows10 -i 5988 -e shellcode/doppelganging.bin -B test-packages/calc.exe -P ""C:\Windows\System32\calc.exe"" -v
 drakvuf_event_fd_add fd=12
 size of list=1
 regenerating event_fds and fd_info_lookup...
 new event_fd i=0 for fd=12
 new fd_info_lookup i=0 for fd=12
 drakvuf_init: adding event_fd done
 Init VMI on domID 3 -> windows10
 init_vmi: initializing vmi done
 Max GPFN: 0x10d04f
 Max mem set? 0
 Physmap populated? 0
 Altp2m enabled? 0
 Altp2m view X created? 0 with ID 1
 Altp2m view R created? 0 with ID 2
 Switched Altp2m view to X? 0
 Windows kernel base address is 0xfffff8026ca94000
 Rekall profile: '_KPCR' has no 'PrcbData' member
 libdrakvuf initialized
 Injector starting shellcode/doppelganging.bin through PID 5988 TID: 0
 Target PID 5988 with DTB 0x58c58000 to start 'shellcode/doppelganging.bin'
 Found PEB @ 0xa06e814000. LDR @ 0x7ffef02f23a0. INLOADORDER @ 0x20ee66623a0.
 Found module taskmgr.exe
 Found module ntdll.dll
 Found module KERNEL32.DLL
 	CreateProcessA @ 0x7ffef010b970
 Starting injection loop
 Started DRAKVUF loop
 CR3 cb on vCPU 1: 0x1d689000
 CR3 changed to 0x1d689000
 CR3 cb on vCPU 2: 0x1d689000
 CR3 changed to 0x1d689000
 CR3 cb on vCPU 3: 0x35a1e000
 CR3 changed to 0x35a1e000
 CR3 cb on vCPU 1: 0x21e2f000
 CR3 changed to 0x21e2f000
 CR3 cb on vCPU 3: 0x129e9000
 CR3 changed to 0x129e9000
 CR3 cb on vCPU 2: 0x129e9000
 CR3 changed to 0x129e9000
 CR3 cb on vCPU 0: 0x35a1e000
 CR3 changed to 0x35a1e000
 CR3 cb on vCPU 1: 0x1d689000
 CR3 changed to 0x1d689000
 CR3 cb on vCPU 2: 0x1d689000
 CR3 changed to 0x1d689000
 CR3 cb on vCPU 3: 0x224c2000
 CR3 changed to 0x224c2000
 CR3 cb on vCPU 2: 0x4a4af000
 CR3 changed to 0x4a4af000
 CR3 cb on vCPU 1: 0x1ec7d000
 CR3 changed to 0x1ec7d000
 CR3 cb on vCPU 0: 0x58c58000
 CR3 changed to 0x58c58000
 Thread @ 0xffffa70d8ec49080. ThreadID: 5992
 Breakpoint VA 0x7ffef0246c24 -> PA 0xba8c24
 Physmap populated? 0
 Copied trapped page to new location
 Activating remapped gfns in the altp2m views!
 		Trap added @ PA 0xba8c24 RPA 0x10d051c24 Page 2984 for entry.
 Got return address 0x7ffef0246c24 from trapframe and it's now trapped!
 INT3 Callback @ 0x7ffef0246c24. CR3 0x58c58000.
 Switching altp2m and to singlestep on vcpu 0
 reset trap on vCPU 0, switching altp2m 0->1
 INT3 Callback @ 0x7ffef0246c24. CR3 0x4a4af000.
 INT3 received but CR3 (0x4a4af000) doesn't match target process (0x58c58000)
 INT3 received from PID: 2348 [\Device\HarddiskVolume2\Windows\SystemApps\ShellExperienceHost_cw5n1h2txyewy\ShellExperienceHost.exe]
 Switching altp2m and to singlestep on vcpu 2
 INT3 Callback @ 0x7ffef0246c24. CR3 0x1ec7d000.
 INT3 received but CR3 (0x1ec7d000) doesn't match target process (0x58c58000)
 INT3 received from PID: 1044 [\Device\HarddiskVolume2\Windows\System32\svchost.exe]
 Switching altp2m and to singlestep on vcpu 1
 reset trap on vCPU 1, switching altp2m 0->1
 reset trap on vCPU 2, switching altp2m 0->1
 INT3 Callback @ 0x7ffef0246c24. CR3 0x58c58000.
 RAX: 0x0
 Removing breakpoint trap from 0xba8c24.
 Removed memtrap for GFN 0xba8 in altp2m view 1
 Removed memtrap for GFN 0x10d051 in altp2m view 1
 DRAKVUF loop finished
 [INJECT] TIME:1533404309.494865 PID:5988 DTB:0x58c58000 FILE:""shellcode/doppelganging.bin"" ARGUMENTS:"""" INJECTED_PID:0 INJECTED_TID:0
 Finished with injection. Ret: 0
 Process startup failed
 starting close_vmi_drakvuf
 Removed memtrap for GFN 0x10d050 in altp2m view 1
 close_vmi_drakvuf finished

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#444 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AL519tcwCegmhGRhhOMIUGIW40oyyNQlks5uNd2XgaJpZM4Vur-X>
 .",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,444,2018-08-03T22:22:40Z,2018-09-04T15:19:59Z,2018-09-04T15:19:59Z,MERGED,True,1385,47,11,https://github.com/mdolmen,Process doppelganging injection support,32,[],https://github.com/tklengyel/drakvuf/pull/444,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/444#issuecomment-410469124,"Add process doppelganging injection support via a shellcode. Solve #332 .


Provides the shellcode and the source code used to generate it (works only for Windows 10 x64, version 1803).


Allows to inject a binary into the guest's filesystem and execute it. It has some limitations due to the technique itself as well as the current implementation. For example certain programs fail to locate some DLLs.


Also, you need to have write permission on the guest process used as a cover otherwise the call to CreateFileTransacted will fail.


Here is a working test case (Windows 10 x64 - Build 17134):
./src/injector -r /root/windows10-1803.rekall.json -d 1 -i <PID_Taskmgr> -e shellcode/doppelganging.bin -m doppelganging -B ""test-packages/mimikatz.exe"" -P ""C:\users\<username>\desktop\notepad.exe"" -v


To make it works for other versions of Windows, the shellcode generated must be different. The data structures and function definitions present in shellcode/doppelganging.h would have to be checked and modified accordingly to match the target kernel. Also in the injector I add a breakpoint to a specific kernel function, PspCallProcessNotifyRoutines(), called by NtCreateThreadEx() that need to be bypass to make the injection successful. This step is probably unnecessary for OS prior to Windows 10.


More details:



https://www.youtube.com/watch?v=Cch8dvp836w&feature=youtu.be&t=2382",Gotcha. Any chance we can determine if the cover process is suitable automatically and bail early if it is not?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,444,2018-08-03T22:22:40Z,2018-09-04T15:19:59Z,2018-09-04T15:19:59Z,MERGED,True,1385,47,11,https://github.com/mdolmen,Process doppelganging injection support,32,[],https://github.com/tklengyel/drakvuf/pull/444,https://github.com/mdolmen,8,https://github.com/tklengyel/drakvuf/pull/444#issuecomment-410469562,"Add process doppelganging injection support via a shellcode. Solve #332 .


Provides the shellcode and the source code used to generate it (works only for Windows 10 x64, version 1803).


Allows to inject a binary into the guest's filesystem and execute it. It has some limitations due to the technique itself as well as the current implementation. For example certain programs fail to locate some DLLs.


Also, you need to have write permission on the guest process used as a cover otherwise the call to CreateFileTransacted will fail.


Here is a working test case (Windows 10 x64 - Build 17134):
./src/injector -r /root/windows10-1803.rekall.json -d 1 -i <PID_Taskmgr> -e shellcode/doppelganging.bin -m doppelganging -B ""test-packages/mimikatz.exe"" -P ""C:\users\<username>\desktop\notepad.exe"" -v


To make it works for other versions of Windows, the shellcode generated must be different. The data structures and function definitions present in shellcode/doppelganging.h would have to be checked and modified accordingly to match the target kernel. Also in the injector I add a breakpoint to a specific kernel function, PspCallProcessNotifyRoutines(), called by NtCreateThreadEx() that need to be bypass to make the injection successful. This step is probably unnecessary for OS prior to Windows 10.


More details:



https://www.youtube.com/watch?v=Cch8dvp836w&feature=youtu.be&t=2382","I think we could, by changing the shellcode source code to add permission
checking and return a specific code if it's not writable

Le sam. 4 août 2018 à 20:36, Tamas K Lengyel <notifications@github.com> a
écrit :
…
 Gotcha. Any chanche we can determine if the cover process is suitable
 automatically and bail early if it is not?

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#444 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AL519jgDnA7Ld9nCFHcgwfVnXE7vriIeks5uNem-gaJpZM4Vur-X>
 .",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,444,2018-08-03T22:22:40Z,2018-09-04T15:19:59Z,2018-09-04T15:19:59Z,MERGED,True,1385,47,11,https://github.com/mdolmen,Process doppelganging injection support,32,[],https://github.com/tklengyel/drakvuf/pull/444,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/444#issuecomment-410469793,"Add process doppelganging injection support via a shellcode. Solve #332 .


Provides the shellcode and the source code used to generate it (works only for Windows 10 x64, version 1803).


Allows to inject a binary into the guest's filesystem and execute it. It has some limitations due to the technique itself as well as the current implementation. For example certain programs fail to locate some DLLs.


Also, you need to have write permission on the guest process used as a cover otherwise the call to CreateFileTransacted will fail.


Here is a working test case (Windows 10 x64 - Build 17134):
./src/injector -r /root/windows10-1803.rekall.json -d 1 -i <PID_Taskmgr> -e shellcode/doppelganging.bin -m doppelganging -B ""test-packages/mimikatz.exe"" -P ""C:\users\<username>\desktop\notepad.exe"" -v


To make it works for other versions of Windows, the shellcode generated must be different. The data structures and function definitions present in shellcode/doppelganging.h would have to be checked and modified accordingly to match the target kernel. Also in the injector I add a breakpoint to a specific kernel function, PspCallProcessNotifyRoutines(), called by NtCreateThreadEx() that need to be bypass to make the injection successful. This step is probably unnecessary for OS prior to Windows 10.


More details:



https://www.youtube.com/watch?v=Cch8dvp836w&feature=youtu.be&t=2382",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,444,2018-08-03T22:22:40Z,2018-09-04T15:19:59Z,2018-09-04T15:19:59Z,MERGED,True,1385,47,11,https://github.com/mdolmen,Process doppelganging injection support,32,[],https://github.com/tklengyel/drakvuf/pull/444,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/444#issuecomment-410470227,"Add process doppelganging injection support via a shellcode. Solve #332 .


Provides the shellcode and the source code used to generate it (works only for Windows 10 x64, version 1803).


Allows to inject a binary into the guest's filesystem and execute it. It has some limitations due to the technique itself as well as the current implementation. For example certain programs fail to locate some DLLs.


Also, you need to have write permission on the guest process used as a cover otherwise the call to CreateFileTransacted will fail.


Here is a working test case (Windows 10 x64 - Build 17134):
./src/injector -r /root/windows10-1803.rekall.json -d 1 -i <PID_Taskmgr> -e shellcode/doppelganging.bin -m doppelganging -B ""test-packages/mimikatz.exe"" -P ""C:\users\<username>\desktop\notepad.exe"" -v


To make it works for other versions of Windows, the shellcode generated must be different. The data structures and function definitions present in shellcode/doppelganging.h would have to be checked and modified accordingly to match the target kernel. Also in the injector I add a breakpoint to a specific kernel function, PspCallProcessNotifyRoutines(), called by NtCreateThreadEx() that need to be bypass to make the injection successful. This step is probably unnecessary for OS prior to Windows 10.


More details:



https://www.youtube.com/watch?v=Cch8dvp836w&feature=youtu.be&t=2382",@mdolmen I think that would be very valuable as I foresee people running into this problem a lot.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,444,2018-08-03T22:22:40Z,2018-09-04T15:19:59Z,2018-09-04T15:19:59Z,MERGED,True,1385,47,11,https://github.com/mdolmen,Process doppelganging injection support,32,[],https://github.com/tklengyel/drakvuf/pull/444,https://github.com/mdolmen,11,https://github.com/tklengyel/drakvuf/pull/444#issuecomment-410489472,"Add process doppelganging injection support via a shellcode. Solve #332 .


Provides the shellcode and the source code used to generate it (works only for Windows 10 x64, version 1803).


Allows to inject a binary into the guest's filesystem and execute it. It has some limitations due to the technique itself as well as the current implementation. For example certain programs fail to locate some DLLs.


Also, you need to have write permission on the guest process used as a cover otherwise the call to CreateFileTransacted will fail.


Here is a working test case (Windows 10 x64 - Build 17134):
./src/injector -r /root/windows10-1803.rekall.json -d 1 -i <PID_Taskmgr> -e shellcode/doppelganging.bin -m doppelganging -B ""test-packages/mimikatz.exe"" -P ""C:\users\<username>\desktop\notepad.exe"" -v


To make it works for other versions of Windows, the shellcode generated must be different. The data structures and function definitions present in shellcode/doppelganging.h would have to be checked and modified accordingly to match the target kernel. Also in the injector I add a breakpoint to a specific kernel function, PspCallProcessNotifyRoutines(), called by NtCreateThreadEx() that need to be bypass to make the injection successful. This step is probably unnecessary for OS prior to Windows 10.


More details:



https://www.youtube.com/watch?v=Cch8dvp836w&feature=youtu.be&t=2382",Actually it's much more harder than I thought.. If something goes wrong and an error code is returned it means that the shellcode never call NtCreateThreadEx() so the breakpoint we add on PspCallProcessNotifyRoutines() is never hit which will make drakvuf to loop indefinitely.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,444,2018-08-03T22:22:40Z,2018-09-04T15:19:59Z,2018-09-04T15:19:59Z,MERGED,True,1385,47,11,https://github.com/mdolmen,Process doppelganging injection support,32,[],https://github.com/tklengyel/drakvuf/pull/444,https://github.com/tklengyel,12,https://github.com/tklengyel/drakvuf/pull/444#issuecomment-410493394,"Add process doppelganging injection support via a shellcode. Solve #332 .


Provides the shellcode and the source code used to generate it (works only for Windows 10 x64, version 1803).


Allows to inject a binary into the guest's filesystem and execute it. It has some limitations due to the technique itself as well as the current implementation. For example certain programs fail to locate some DLLs.


Also, you need to have write permission on the guest process used as a cover otherwise the call to CreateFileTransacted will fail.


Here is a working test case (Windows 10 x64 - Build 17134):
./src/injector -r /root/windows10-1803.rekall.json -d 1 -i <PID_Taskmgr> -e shellcode/doppelganging.bin -m doppelganging -B ""test-packages/mimikatz.exe"" -P ""C:\users\<username>\desktop\notepad.exe"" -v


To make it works for other versions of Windows, the shellcode generated must be different. The data structures and function definitions present in shellcode/doppelganging.h would have to be checked and modified accordingly to match the target kernel. Also in the injector I add a breakpoint to a specific kernel function, PspCallProcessNotifyRoutines(), called by NtCreateThreadEx() that need to be bypass to make the injection successful. This step is probably unnecessary for OS prior to Windows 10.


More details:



https://www.youtube.com/watch?v=Cch8dvp836w&feature=youtu.be&t=2382",There must be a way to check if the permission is good using VMI and not the shellcode itself.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,444,2018-08-03T22:22:40Z,2018-09-04T15:19:59Z,2018-09-04T15:19:59Z,MERGED,True,1385,47,11,https://github.com/mdolmen,Process doppelganging injection support,32,[],https://github.com/tklengyel/drakvuf/pull/444,https://github.com/tklengyel,13,https://github.com/tklengyel/drakvuf/pull/444#issuecomment-411802279,"Add process doppelganging injection support via a shellcode. Solve #332 .


Provides the shellcode and the source code used to generate it (works only for Windows 10 x64, version 1803).


Allows to inject a binary into the guest's filesystem and execute it. It has some limitations due to the technique itself as well as the current implementation. For example certain programs fail to locate some DLLs.


Also, you need to have write permission on the guest process used as a cover otherwise the call to CreateFileTransacted will fail.


Here is a working test case (Windows 10 x64 - Build 17134):
./src/injector -r /root/windows10-1803.rekall.json -d 1 -i <PID_Taskmgr> -e shellcode/doppelganging.bin -m doppelganging -B ""test-packages/mimikatz.exe"" -P ""C:\users\<username>\desktop\notepad.exe"" -v


To make it works for other versions of Windows, the shellcode generated must be different. The data structures and function definitions present in shellcode/doppelganging.h would have to be checked and modified accordingly to match the target kernel. Also in the injector I add a breakpoint to a specific kernel function, PspCallProcessNotifyRoutines(), called by NtCreateThreadEx() that need to be bypass to make the injection successful. This step is probably unnecessary for OS prior to Windows 10.


More details:



https://www.youtube.com/watch?v=Cch8dvp836w&feature=youtu.be&t=2382","Looks like it's going through the CI no problem, so that's good news. I'll try to upgrade my Win10 VM so that I can try getting a working injection :)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,444,2018-08-03T22:22:40Z,2018-09-04T15:19:59Z,2018-09-04T15:19:59Z,MERGED,True,1385,47,11,https://github.com/mdolmen,Process doppelganging injection support,32,[],https://github.com/tklengyel/drakvuf/pull/444,https://github.com/mdolmen,14,https://github.com/tklengyel/drakvuf/pull/444#issuecomment-411803288,"Add process doppelganging injection support via a shellcode. Solve #332 .


Provides the shellcode and the source code used to generate it (works only for Windows 10 x64, version 1803).


Allows to inject a binary into the guest's filesystem and execute it. It has some limitations due to the technique itself as well as the current implementation. For example certain programs fail to locate some DLLs.


Also, you need to have write permission on the guest process used as a cover otherwise the call to CreateFileTransacted will fail.


Here is a working test case (Windows 10 x64 - Build 17134):
./src/injector -r /root/windows10-1803.rekall.json -d 1 -i <PID_Taskmgr> -e shellcode/doppelganging.bin -m doppelganging -B ""test-packages/mimikatz.exe"" -P ""C:\users\<username>\desktop\notepad.exe"" -v


To make it works for other versions of Windows, the shellcode generated must be different. The data structures and function definitions present in shellcode/doppelganging.h would have to be checked and modified accordingly to match the target kernel. Also in the injector I add a breakpoint to a specific kernel function, PspCallProcessNotifyRoutines(), called by NtCreateThreadEx() that need to be bypass to make the injection successful. This step is probably unnecessary for OS prior to Windows 10.


More details:



https://www.youtube.com/watch?v=Cch8dvp836w&feature=youtu.be&t=2382","It should work with your current version too

Le jeu. 9 août 2018 à 17:40, Tamas K Lengyel <notifications@github.com> a
écrit :
…
 Looks like it's going through the CI no problem, so that's good news. I'll
 try to upgrade my Win10 VM so that I can try getting a working injection :)

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#444 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AL519m-s1aQWClMupMdq5O1PyprtDt90ks5uPFfygaJpZM4Vur-X>
 .",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,444,2018-08-03T22:22:40Z,2018-09-04T15:19:59Z,2018-09-04T15:19:59Z,MERGED,True,1385,47,11,https://github.com/mdolmen,Process doppelganging injection support,32,[],https://github.com/tklengyel/drakvuf/pull/444,https://github.com/tklengyel,15,https://github.com/tklengyel/drakvuf/pull/444#issuecomment-412359120,"Add process doppelganging injection support via a shellcode. Solve #332 .


Provides the shellcode and the source code used to generate it (works only for Windows 10 x64, version 1803).


Allows to inject a binary into the guest's filesystem and execute it. It has some limitations due to the technique itself as well as the current implementation. For example certain programs fail to locate some DLLs.


Also, you need to have write permission on the guest process used as a cover otherwise the call to CreateFileTransacted will fail.


Here is a working test case (Windows 10 x64 - Build 17134):
./src/injector -r /root/windows10-1803.rekall.json -d 1 -i <PID_Taskmgr> -e shellcode/doppelganging.bin -m doppelganging -B ""test-packages/mimikatz.exe"" -P ""C:\users\<username>\desktop\notepad.exe"" -v


To make it works for other versions of Windows, the shellcode generated must be different. The data structures and function definitions present in shellcode/doppelganging.h would have to be checked and modified accordingly to match the target kernel. Also in the injector I add a breakpoint to a specific kernel function, PspCallProcessNotifyRoutines(), called by NtCreateThreadEx() that need to be bypass to make the injection successful. This step is probably unnecessary for OS prior to Windows 10.


More details:



https://www.youtube.com/watch?v=Cch8dvp836w&feature=youtu.be&t=2382","@mdolmen I'm still not getting a successful injection and it keeps looping forever saying CR3 doesn't match the target, so breaking the infinite loop didn't work. Taskmgr is frozen in VM but when I ctrl+c it resumes so at least it didn't crash.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,444,2018-08-03T22:22:40Z,2018-09-04T15:19:59Z,2018-09-04T15:19:59Z,MERGED,True,1385,47,11,https://github.com/mdolmen,Process doppelganging injection support,32,[],https://github.com/tklengyel/drakvuf/pull/444,https://github.com/mdolmen,16,https://github.com/tklengyel/drakvuf/pull/444#issuecomment-412363976,"Add process doppelganging injection support via a shellcode. Solve #332 .


Provides the shellcode and the source code used to generate it (works only for Windows 10 x64, version 1803).


Allows to inject a binary into the guest's filesystem and execute it. It has some limitations due to the technique itself as well as the current implementation. For example certain programs fail to locate some DLLs.


Also, you need to have write permission on the guest process used as a cover otherwise the call to CreateFileTransacted will fail.


Here is a working test case (Windows 10 x64 - Build 17134):
./src/injector -r /root/windows10-1803.rekall.json -d 1 -i <PID_Taskmgr> -e shellcode/doppelganging.bin -m doppelganging -B ""test-packages/mimikatz.exe"" -P ""C:\users\<username>\desktop\notepad.exe"" -v


To make it works for other versions of Windows, the shellcode generated must be different. The data structures and function definitions present in shellcode/doppelganging.h would have to be checked and modified accordingly to match the target kernel. Also in the injector I add a breakpoint to a specific kernel function, PspCallProcessNotifyRoutines(), called by NtCreateThreadEx() that need to be bypass to make the injection successful. This step is probably unnecessary for OS prior to Windows 10.


More details:



https://www.youtube.com/watch?v=Cch8dvp836w&feature=youtu.be&t=2382",Can you post the output and the command you used please?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,444,2018-08-03T22:22:40Z,2018-09-04T15:19:59Z,2018-09-04T15:19:59Z,MERGED,True,1385,47,11,https://github.com/mdolmen,Process doppelganging injection support,32,[],https://github.com/tklengyel/drakvuf/pull/444,https://github.com/tklengyel,17,https://github.com/tklengyel/drakvuf/pull/444#issuecomment-412366374,"Add process doppelganging injection support via a shellcode. Solve #332 .


Provides the shellcode and the source code used to generate it (works only for Windows 10 x64, version 1803).


Allows to inject a binary into the guest's filesystem and execute it. It has some limitations due to the technique itself as well as the current implementation. For example certain programs fail to locate some DLLs.


Also, you need to have write permission on the guest process used as a cover otherwise the call to CreateFileTransacted will fail.


Here is a working test case (Windows 10 x64 - Build 17134):
./src/injector -r /root/windows10-1803.rekall.json -d 1 -i <PID_Taskmgr> -e shellcode/doppelganging.bin -m doppelganging -B ""test-packages/mimikatz.exe"" -P ""C:\users\<username>\desktop\notepad.exe"" -v


To make it works for other versions of Windows, the shellcode generated must be different. The data structures and function definitions present in shellcode/doppelganging.h would have to be checked and modified accordingly to match the target kernel. Also in the injector I add a breakpoint to a specific kernel function, PspCallProcessNotifyRoutines(), called by NtCreateThreadEx() that need to be bypass to make the injection successful. This step is probably unnecessary for OS prior to Windows 10.


More details:



https://www.youtube.com/watch?v=Cch8dvp836w&feature=youtu.be&t=2382","# ./src/injector -v -r /share/rekall-profiles/windows10.json -d windows10-jenkins -i 4900 -e shellcode/doppelganging.bin -m doppelganging -B test-packages/cmd.exe -P ""C:\Users\MrT\Desktop\putty.exe""
drakvuf_event_fd_add fd=12
size of list=1
regenerating event_fds and fd_info_lookup...
new event_fd i=0 for fd=12
new fd_info_lookup i=0 for fd=12
drakvuf_init: adding event_fd done
Init VMI on domID 2 -> windows10-jenkins
init_vmi: initializing vmi done
Max GPFN: 0x10d050
Max mem set? 0
Physmap populated? 0
Altp2m enabled? 0
Altp2m view X created? 0 with ID 1
Altp2m view R created? 0 with ID 2
Switched Altp2m view to X? 0
Windows kernel base address is 0xfffff8022a81a000
Rekall profile: '_KPCR' has no 'PrcbData' member
libdrakvuf initialized
Injector starting shellcode/doppelganging.bin through PID 4900 TID: 0
Target PID 4900 with DTB 0x3a497000 to start 'shellcode/doppelganging.bin'
Size of file read: 9744
Size of file read: 232960
Found PEB @ 0xe6e451d000. LDR @ 0x7ffa7ad223a0. INLOADORDER @ 0x27c091a23a0.
Found module taskmgr.exe
Found module ntdll.dll
	memset @ 0x7ffa7ac7c980
Found PEB @ 0xe6e451d000. LDR @ 0x7ffa7ad223a0. INLOADORDER @ 0x27c091a23a0.
Found module taskmgr.exe
Found module ntdll.dll
Found module KERNEL32.DLL
	VirtualAlloc @ 0x7ffa7a15b210
Starting injection loop
Started DRAKVUF loop
CR3 cb on vCPU 1: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 1: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 3: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 0: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 2: 0x18be6000
CR3 changed to 0x18be6000
CR3 cb on vCPU 1: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 3: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 3: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 2: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 1: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 3: 0x21906000
CR3 changed to 0x21906000
CR3 cb on vCPU 2: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 3: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 2: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 3: 0x21906000
CR3 changed to 0x21906000
CR3 cb on vCPU 2: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 2: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 2: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 3: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 3: 0x21906000
CR3 changed to 0x21906000
CR3 cb on vCPU 0: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 2: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 3: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 0: 0x21906000
CR3 changed to 0x21906000
CR3 cb on vCPU 1: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 3: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 0: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 3: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 1: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 2: 0x21906000
CR3 changed to 0x21906000
CR3 cb on vCPU 2: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 3: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 3: 0x21906000
CR3 changed to 0x21906000
CR3 cb on vCPU 2: 0x77fb3000
CR3 changed to 0x77fb3000
CR3 cb on vCPU 1: 0x18be6000
CR3 changed to 0x18be6000
CR3 cb on vCPU 2: 0x216bc000
CR3 changed to 0x216bc000
CR3 cb on vCPU 1: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 3: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 2: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 0: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 1: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 0: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 1: 0x216bc000
CR3 changed to 0x216bc000
CR3 cb on vCPU 2: 0x21906000
CR3 changed to 0x21906000
CR3 cb on vCPU 1: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 2: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 0: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 0: 0x216bc000
CR3 changed to 0x216bc000
CR3 cb on vCPU 2: 0x21906000
CR3 changed to 0x21906000
CR3 cb on vCPU 0: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 2: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 2: 0x216bc000
CR3 changed to 0x216bc000
CR3 cb on vCPU 2: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 0: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 0: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 0: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 1: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 3: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 3: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 0: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 1: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 0: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 1: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 1: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 0: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 0: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 3: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 3: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 1: 0x18be6000
CR3 changed to 0x18be6000
CR3 cb on vCPU 2: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 3: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 1: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 3: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 0: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 0: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 1: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 2: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 1: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 0: 0x216bc000
CR3 changed to 0x216bc000
CR3 cb on vCPU 1: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 0: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 0: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 1: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 3: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 2: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 1: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 2: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 0: 0x18be6000
CR3 changed to 0x18be6000
CR3 cb on vCPU 2: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 0: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 1: 0x18be6000
CR3 changed to 0x18be6000
CR3 cb on vCPU 0: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 1: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 3: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 3: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 2: 0x18be6000
CR3 changed to 0x18be6000
CR3 cb on vCPU 1: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 2: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 3: 0x18be6000
CR3 changed to 0x18be6000
CR3 cb on vCPU 2: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 3: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 1: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 2: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 1: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 2: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 3: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 0: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 1: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 2: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 3: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 2: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 3: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 0: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 1: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 0: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 1: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 3: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 2: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 1: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 1: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 0: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 2: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 1: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 1: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 3: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 1: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 2: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 3: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 1: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 0: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 0: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 1: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 1: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 0: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 3: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 1: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 2: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 0: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 3: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 2: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 1: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 0: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 2: 0x21906000
CR3 changed to 0x21906000
CR3 cb on vCPU 1: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 0: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 2: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 1: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 2: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 0: 0x21906000
CR3 changed to 0x21906000
CR3 cb on vCPU 2: 0x77fb3000
CR3 changed to 0x77fb3000
CR3 cb on vCPU 0: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 2: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 0: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 0: 0x77fb3000
CR3 changed to 0x77fb3000
CR3 cb on vCPU 1: 0x21906000
CR3 changed to 0x21906000
CR3 cb on vCPU 0: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 1: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 0: 0x21906000
CR3 changed to 0x21906000
CR3 cb on vCPU 3: 0x77fb3000
CR3 changed to 0x77fb3000
CR3 cb on vCPU 2: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 0: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 3: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 3: 0x21906000
CR3 changed to 0x21906000
CR3 cb on vCPU 2: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 3: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 2: 0x21906000
CR3 changed to 0x21906000
CR3 cb on vCPU 3: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 2: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 0: 0x21906000
CR3 changed to 0x21906000
CR3 cb on vCPU 1: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 2: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 3: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 0: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 1: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 3: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 2: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 0: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 2: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 1: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 3: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 0: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 3: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 2: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 0: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 1: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 1: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 0: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 2: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 3: 0x1b123000
CR3 changed to 0x1b123000
CR3 cb on vCPU 1: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 2: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 0: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 3: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 1: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 1: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 3: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 2: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 0: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 1: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 3: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 1: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 2: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 0: 0x1b123000
CR3 changed to 0x1b123000
CR3 cb on vCPU 0: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 1: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 1: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 0: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 0: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 2: 0x1b123000
CR3 changed to 0x1b123000
CR3 cb on vCPU 0: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 1: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 3: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 2: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 0: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 3: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 1: 0x1b123000
CR3 changed to 0x1b123000
CR3 cb on vCPU 2: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 0: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 2: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 0: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 3: 0x1b123000
CR3 changed to 0x1b123000
CR3 cb on vCPU 1: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 0: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 1: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 2: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 3: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 1: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 3: 0x1b123000
CR3 changed to 0x1b123000
CR3 cb on vCPU 2: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 3: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 1: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 0: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 1: 0x1b123000
CR3 changed to 0x1b123000
CR3 cb on vCPU 3: 0x1b123000
CR3 changed to 0x1b123000
CR3 cb on vCPU 2: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 0: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 1: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 3: 0x1aa000
CR3 changed to 0x1aa000
CR3 cb on vCPU 0: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 3: 0x18a4e000
CR3 changed to 0x18a4e000
CR3 cb on vCPU 1: 0x1b123000
CR3 changed to 0x1b123000
CR3 cb on vCPU 2: 0x1b123000
CR3 changed to 0x1b123000
CR3 cb on vCPU 2: 0x3a497000
CR3 changed to 0x3a497000
Thread @ 0xffffdb0f4efe2040. ThreadID: 4956
Breakpoint VA 0x7ffa7ac798a4 -> PA 0x332b8a4
Physmap populated? 0
Copied trapped page to new location
Activating remapped gfns in the altp2m views!
		Trap added @ PA 0x332b8a4 RPA 0x10d0528a4 Page 13099 for entry. 
Got return address 0x7ffa7ac798a4 from trapframe and it's now trapped!
INT3 Callback @ 0x7ffa7ac798a4. CR3 0x3a497000.
Switching altp2m and to singlestep on vcpu 2
reset trap on vCPU 2, switching altp2m 0->1
INT3 Callback @ 0x7ffa7ac798a4. CR3 0x3a497000.
Writing to allocated virtual memory to allocate physical memory..
Payload is at: 0x27c0d3e0000
Switching altp2m and to singlestep on vcpu 2
reset trap on vCPU 2, switching altp2m 0->1
INT3 Callback @ 0x7ffa7ac798a4. CR3 0x1b123000.
INT3 received but CR3 (0x1b123000) doesn't match target process (0x3a497000)
INT3 received from PID: 1160 [\Device\HarddiskVolume2\Windows\System32\svchost.exe]
Switching altp2m and to singlestep on vcpu 3
INT3 Callback @ 0x7ffa7ac798a4. CR3 0x3a497000.
Patching the shellcode with user inputs..
Executing the payload..
Switching altp2m and to singlestep on vcpu 2
reset trap on vCPU 2, switching altp2m 0->1
reset trap on vCPU 3, switching altp2m 0->1
INT3 Callback @ 0x7ffa7ac798a4. CR3 0x18a8c000.
INT3 received but CR3 (0x18a8c000) doesn't match target process (0x3a497000)
INT3 received from PID: 928 [\Device\HarddiskVolume2\Windows\System32\svchost.exe]
Switching altp2m and to singlestep on vcpu 2
reset trap on vCPU 2, switching altp2m 0->1
INT3 Callback @ 0x7ffa7ac798a4. CR3 0x18a4e000.
INT3 received but CR3 (0x18a4e000) doesn't match target process (0x3a497000)
INT3 received from PID: 920 [\Device\HarddiskVolume2\Windows\System32\svchost.exe]
Switching altp2m and to singlestep on vcpu 3
reset trap on vCPU 3, switching altp2m 0->1
INT3 Callback @ 0x7ffa7ac798a4. CR3 0x4c5d8000.
INT3 received but CR3 (0x4c5d8000) doesn't match target process (0x3a497000)
INT3 received from PID: 4696 [\Device\HarddiskVolume2\Windows\System32\smartscreen.exe]
Switching altp2m and to singlestep on vcpu 0
reset trap on vCPU 0, switching altp2m 0->1
INT3 Callback @ 0x7ffa7ac798a4. CR3 0xefd54000.
INT3 received but CR3 (0xefd54000) doesn't match target process (0x3a497000)
INT3 received from PID: 556 [\Device\HarddiskVolume2\Windows\System32\services.exe]
Switching altp2m and to singlestep on vcpu 3
reset trap on vCPU 3, switching altp2m 0->1
INT3 Callback @ 0x7ffa7ac798a4. CR3 0x18a4e000.
INT3 received but CR3 (0x18a4e000) doesn't match target process (0x3a497000)
INT3 received from PID: 920 [\Device\HarddiskVolume2\Windows\System32\svchost.exe]
Switching altp2m and to singlestep on vcpu 3
reset trap on vCPU 3, switching altp2m 0->1
INT3 Callback @ 0x7ffa7ac798a4. CR3 0x216bc000.
INT3 received but CR3 (0x216bc000) doesn't match target process (0x3a497000)
INT3 received from PID: 2040 [\Device\HarddiskVolume2\Program Files\Windows Defender\MsMpEng.exe]
Switching altp2m and to singlestep on vcpu 0
reset trap on vCPU 0, switching altp2m 0->1
INT3 Callback @ 0x7ffa7ac798a4. CR3 0xc105c000.
INT3 received but CR3 (0xc105c000) doesn't match target process (0x3a497000)
INT3 received from PID: 5692 [\Device\HarddiskVolume2\Windows\System32\svchost.exe]
Switching altp2m and to singlestep on vcpu 0
reset trap on vCPU 0, switching altp2m 0->1
INT3 Callback @ 0x7ffa7ac798a4. CR3 0x18a4e000.
INT3 received but CR3 (0x18a4e000) doesn't match target process (0x3a497000)
INT3 received from PID: 920 [\Device\HarddiskVolume2\Windows\System32\svchost.exe]
Switching altp2m and to singlestep on vcpu 1
reset trap on vCPU 1, switching altp2m 0->1
INT3 Callback @ 0x7ffa7ac798a4. CR3 0x216bc000.
INT3 received but CR3 (0x216bc000) doesn't match target process (0x3a497000)
INT3 received from PID: 2040 [\Device\HarddiskVolume2\Program Files\Windows Defender\MsMpEng.exe]
Switching altp2m and to singlestep on vcpu 1
reset trap on vCPU 1, switching altp2m 0->1
INT3 Callback @ 0x7ffa7ac798a4. CR3 0xe0f6000.
INT3 received but CR3 (0xe0f6000) doesn't match target process (0x3a497000)
INT3 received from PID: 656 [\Device\HarddiskVolume2\Windows\System32\svchost.exe]
Switching altp2m and to singlestep on vcpu 2
reset trap on vCPU 2, switching altp2m 0->1
INT3 Callback @ 0x7ffa7ac798a4. CR3 0xefd54000.
INT3 received but CR3 (0xefd54000) doesn't match target process (0x3a497000)
INT3 received from PID: 556 [\Device\HarddiskVolume2\Windows\System32\services.exe]
Switching altp2m and to singlestep on vcpu 0
reset trap on vCPU 0, switching altp2m 0->1
INT3 Callback @ 0x7ffa7ac798a4. CR3 0x18a4e000.
INT3 received but CR3 (0x18a4e000) doesn't match target process (0x3a497000)
INT3 received from PID: 920 [\Device\HarddiskVolume2\Windows\System32\svchost.exe]
Switching altp2m and to singlestep on vcpu 3
reset trap on vCPU 3, switching altp2m 0->1
INT3 Callback @ 0x7ffa7ac798a4. CR3 0xefd54000.
INT3 received but CR3 (0xefd54000) doesn't match target process (0x3a497000)
INT3 received from PID: 556 [\Device\HarddiskVolume2\Windows\System32\services.exe]
Switching altp2m and to singlestep on vcpu 0
reset trap on vCPU 0, switching altp2m 0->1
INT3 Callback @ 0x7ffa7ac798a4. CR3 0xefd54000.
INT3 received but CR3 (0xefd54000) doesn't match target process (0x3a497000)
INT3 received from PID: 556 [\Device\HarddiskVolume2\Windows\System32\services.exe]
Switching altp2m and to singlestep on vcpu 0
reset trap on vCPU 0, switching altp2m 0->1
INT3 Callback @ 0x7ffa7ac798a4. CR3 0xefd54000.
INT3 received but CR3 (0xefd54000) doesn't match target process (0x3a497000)
INT3 received from PID: 556 [\Device\HarddiskVolume2\Windows\System32\services.exe]
Switching altp2m and to singlestep on vcpu 0
reset trap on vCPU 0, switching altp2m 0->1
INT3 Callback @ 0x7ffa7ac798a4. CR3 0xefd54000.
INT3 received but CR3 (0xefd54000) doesn't match target process (0x3a497000)
INT3 received from PID: 556 [\Device\HarddiskVolume2\Windows\System32\services.exe]
Switching altp2m and to singlestep on vcpu 0
reset trap on vCPU 0, switching altp2m 0->1
INT3 Callback @ 0x7ffa7ac798a4. CR3 0xe0f6000.
INT3 received but CR3 (0xe0f6000) doesn't match target process (0x3a497000)
INT3 received from PID: 656 [\Device\HarddiskVolume2\Windows\System32\svchost.exe]
Switching altp2m and to singlestep on vcpu 3
reset trap on vCPU 3, switching altp2m 0->1
INT3 Callback @ 0x7ffa7ac798a4. CR3 0xefd54000.
INT3 received but CR3 (0xefd54000) doesn't match target process (0x3a497000)
INT3 received from PID: 556 [\Device\HarddiskVolume2\Windows\System32\services.exe]
Switching altp2m and to singlestep on vcpu 1
reset trap on vCPU 1, switching altp2m 0->1
INT3 Callback @ 0x7ffa7ac798a4. CR3 0x216bc000.
INT3 received but CR3 (0x216bc000) doesn't match target process (0x3a497000)
INT3 received from PID: 2040 [\Device\HarddiskVolume2\Program Files\Windows Defender\MsMpEng.exe]
Switching altp2m and to singlestep on vcpu 3
reset trap on vCPU 3, switching altp2m 0->1
INT3 Callback @ 0x7ffa7ac798a4. CR3 0xefd54000.
INT3 received but CR3 (0xefd54000) doesn't match target process (0x3a497000)
INT3 received from PID: 556 [\Device\HarddiskVolume2\Windows\System32\services.exe]
Switching altp2m and to singlestep on vcpu 2
reset trap on vCPU 2, switching altp2m 0->1
INT3 Callback @ 0x7ffa7ac798a4. CR3 0xefd54000.
INT3 received but CR3 (0xefd54000) doesn't match target process (0x3a497000)
INT3 received from PID: 556 [\Device\HarddiskVolume2\Windows\System32\services.exe]
Switching altp2m and to singlestep on vcpu 2
reset trap on vCPU 2, switching altp2m 0->1
INT3 Callback @ 0x7ffa7ac798a4. CR3 0x216bc000.
INT3 received but CR3 (0x216bc000) doesn't match target process (0x3a497000)
INT3 received from PID: 2040 [\Device\HarddiskVolume2\Program Files\Windows Defender\MsMpEng.exe]
Switching altp2m and to singlestep on vcpu 0
reset trap on vCPU 0, switching altp2m 0->1
INT3 Callback @ 0x7ffa7ac798a4. CR3 0x18a4e000.
INT3 received but CR3 (0x18a4e000) doesn't match target process (0x3a497000)
INT3 received from PID: 920 [\Device\HarddiskVolume2\Windows\System32\svchost.exe]
Switching altp2m and to singlestep on vcpu 0
reset trap on vCPU 0, switching altp2m 0->1
INT3 Callback @ 0x7ffa7ac798a4. CR3 0x18a4e000.
INT3 received but CR3 (0x18a4e000) doesn't match target process (0x3a497000)
INT3 received from PID: 920 [\Device\HarddiskVolume2\Windows\System32\svchost.exe]
Switching altp2m and to singlestep on vcpu 0
INT3 Callback @ 0x7ffa7ac798a4. CR3 0x18a8c000.
INT3 received but CR3 (0x18a8c000) doesn't match target process (0x3a497000)
INT3 received from PID: 928 [\Device\HarddiskVolume2\Windows\System32\svchost.exe]
Switching altp2m and to singlestep on vcpu 2
reset trap on vCPU 0, switching altp2m 0->1
reset trap on vCPU 2, switching altp2m 0->1
INT3 Callback @ 0x7ffa7ac798a4. CR3 0x216bc000.
INT3 received but CR3 (0x216bc000) doesn't match target process (0x3a497000)
INT3 received from PID: 2040 [\Device\HarddiskVolume2\Program Files\Windows Defender\MsMpEng.exe]
Switching altp2m and to singlestep on vcpu 2
reset trap on vCPU 2, switching altp2m 0->1
INT3 Callback @ 0x7ffa7ac798a4. CR3 0x3dee0000.
INT3 received but CR3 (0x3dee0000) doesn't match target process (0x3a497000)
INT3 received from PID: 2968 [\Device\HarddiskVolume2\Program Files\Windows Defender\NisSrv.exe]
Switching altp2m and to singlestep on vcpu 3
reset trap on vCPU 3, switching altp2m 0->1
INT3 Callback @ 0x7ffa7ac798a4. CR3 0x216bc000.
INT3 received but CR3 (0x216bc000) doesn't match target process (0x3a497000)
INT3 received from PID: 2040 [\Device\HarddiskVolume2\Program Files\Windows Defender\MsMpEng.exe]
Switching altp2m and to singlestep on vcpu 1
INT3 Callback @ 0x7ffa7ac798a4. CR3 0x18a4e000.
INT3 received but CR3 (0x18a4e000) doesn't match target process (0x3a497000)
INT3 received from PID: 920 [\Device\HarddiskVolume2\Windows\System32\svchost.exe]
Switching altp2m and to singlestep on vcpu 0
reset trap on vCPU 0, switching altp2m 0->1
reset trap on vCPU 1, switching altp2m 0->1
INT3 Callback @ 0x7ffa7ac798a4. CR3 0x216bc000.
INT3 received but CR3 (0x216bc000) doesn't match target process (0x3a497000)
INT3 received from PID: 2040 [\Device\HarddiskVolume2\Program Files\Windows Defender\MsMpEng.exe]
Switching altp2m and to singlestep on vcpu 3
reset trap on vCPU 3, switching altp2m 0->1
INT3 Callback @ 0x7ffa7ac798a4. CR3 0x216bc000.
INT3 received but CR3 (0x216bc000) doesn't match target process (0x3a497000)
INT3 received from PID: 2040 [\Device\HarddiskVolume2\Program Files\Windows Defender\MsMpEng.exe]
Switching altp2m and to singlestep on vcpu 0
reset trap on vCPU 0, switching altp2m 0->1
INT3 Callback @ 0x7ffa7ac798a4. CR3 0x216bc000.
INT3 received but CR3 (0x216bc000) doesn't match target process (0x3a497000)
INT3 received from PID: 2040 [\Device\HarddiskVolume2\Program Files\Windows Defender\MsMpEng.exe]
Switching altp2m and to singlestep on vcpu 1
reset trap on vCPU 1, switching altp2m 0->1
INT3 Callback @ 0x7ffa7ac798a4. CR3 0x216bc000.
INT3 received but CR3 (0x216bc000) doesn't match target process (0x3a497000)
INT3 received from PID: 2040 [\Device\HarddiskVolume2\Program Files\Windows Defender\MsMpEng.exe]
Switching altp2m and to singlestep on vcpu 0
reset trap on vCPU 0, switching altp2m 0->1",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,444,2018-08-03T22:22:40Z,2018-09-04T15:19:59Z,2018-09-04T15:19:59Z,MERGED,True,1385,47,11,https://github.com/mdolmen,Process doppelganging injection support,32,[],https://github.com/tklengyel/drakvuf/pull/444,https://github.com/tklengyel,18,https://github.com/tklengyel/drakvuf/pull/444#issuecomment-412366616,"Add process doppelganging injection support via a shellcode. Solve #332 .


Provides the shellcode and the source code used to generate it (works only for Windows 10 x64, version 1803).


Allows to inject a binary into the guest's filesystem and execute it. It has some limitations due to the technique itself as well as the current implementation. For example certain programs fail to locate some DLLs.


Also, you need to have write permission on the guest process used as a cover otherwise the call to CreateFileTransacted will fail.


Here is a working test case (Windows 10 x64 - Build 17134):
./src/injector -r /root/windows10-1803.rekall.json -d 1 -i <PID_Taskmgr> -e shellcode/doppelganging.bin -m doppelganging -B ""test-packages/mimikatz.exe"" -P ""C:\users\<username>\desktop\notepad.exe"" -v


To make it works for other versions of Windows, the shellcode generated must be different. The data structures and function definitions present in shellcode/doppelganging.h would have to be checked and modified accordingly to match the target kernel. Also in the injector I add a breakpoint to a specific kernel function, PspCallProcessNotifyRoutines(), called by NtCreateThreadEx() that need to be bypass to make the injection successful. This step is probably unnecessary for OS prior to Windows 10.


More details:



https://www.youtube.com/watch?v=Cch8dvp836w&feature=youtu.be&t=2382","@mdolmen There is also a segfault when I ctrl+c:
INT3 Callback @ 0x7ffa7ac798a4. CR3 0x18a4e000.
INT3 received but CR3 (0x18a4e000) doesn't match target process (0x3a497000)
INT3 received from PID: 920 [\Device\HarddiskVolume2\Windows\System32\svchost.exe]
Switching altp2m and to singlestep on vcpu 3
reset trap on vCPU 3, switching altp2m 0->1
^CINT3 Callback @ 0x7ffa7ac798a4. CR3 0x18a4e000.
INT3 received but CR3 (0x18a4e000) doesn't match target process (0x3a497000)
INT3 received from PID: 920 [\Device\HarddiskVolume2\Windows\System32\svchost.exe]
Switching altp2m and to singlestep on vcpu 2
DRAKVUF loop finished
[INJECT] TIME:1534102344.377040 PID:4900 DTB:0x3a497000 FILE:""shellcode/doppelganging.bin"" ARGUMENTS:"""" INJECTED_PID:0 INJECTED_TID:0
Finished with injection. Ret: 0
Process startup failed
starting close_vmi_drakvuf
Removed memtrap for GFN 0x10d051 in altp2m view 1
Segmentation fault",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,444,2018-08-03T22:22:40Z,2018-09-04T15:19:59Z,2018-09-04T15:19:59Z,MERGED,True,1385,47,11,https://github.com/mdolmen,Process doppelganging injection support,32,[],https://github.com/tklengyel/drakvuf/pull/444,https://github.com/mdolmen,19,https://github.com/tklengyel/drakvuf/pull/444#issuecomment-412377219,"Add process doppelganging injection support via a shellcode. Solve #332 .


Provides the shellcode and the source code used to generate it (works only for Windows 10 x64, version 1803).


Allows to inject a binary into the guest's filesystem and execute it. It has some limitations due to the technique itself as well as the current implementation. For example certain programs fail to locate some DLLs.


Also, you need to have write permission on the guest process used as a cover otherwise the call to CreateFileTransacted will fail.


Here is a working test case (Windows 10 x64 - Build 17134):
./src/injector -r /root/windows10-1803.rekall.json -d 1 -i <PID_Taskmgr> -e shellcode/doppelganging.bin -m doppelganging -B ""test-packages/mimikatz.exe"" -P ""C:\users\<username>\desktop\notepad.exe"" -v


To make it works for other versions of Windows, the shellcode generated must be different. The data structures and function definitions present in shellcode/doppelganging.h would have to be checked and modified accordingly to match the target kernel. Also in the injector I add a breakpoint to a specific kernel function, PspCallProcessNotifyRoutines(), called by NtCreateThreadEx() that need to be bypass to make the injection successful. This step is probably unnecessary for OS prior to Windows 10.


More details:



https://www.youtube.com/watch?v=Cch8dvp836w&feature=youtu.be&t=2382","The only think I can think of is your windows version, I was a bit too optimistic saying it will work on all of them. In fact the researchers behind the process doppelganging technique clearly said that it works only after an update that came in preview in december 2017. So I will change the place of the build date check in the code and test it against the first official release date of the version 1803 (april 04, 2018).",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,444,2018-08-03T22:22:40Z,2018-09-04T15:19:59Z,2018-09-04T15:19:59Z,MERGED,True,1385,47,11,https://github.com/mdolmen,Process doppelganging injection support,32,[],https://github.com/tklengyel/drakvuf/pull/444,https://github.com/tklengyel,20,https://github.com/tklengyel/drakvuf/pull/444#issuecomment-417689108,"Add process doppelganging injection support via a shellcode. Solve #332 .


Provides the shellcode and the source code used to generate it (works only for Windows 10 x64, version 1803).


Allows to inject a binary into the guest's filesystem and execute it. It has some limitations due to the technique itself as well as the current implementation. For example certain programs fail to locate some DLLs.


Also, you need to have write permission on the guest process used as a cover otherwise the call to CreateFileTransacted will fail.


Here is a working test case (Windows 10 x64 - Build 17134):
./src/injector -r /root/windows10-1803.rekall.json -d 1 -i <PID_Taskmgr> -e shellcode/doppelganging.bin -m doppelganging -B ""test-packages/mimikatz.exe"" -P ""C:\users\<username>\desktop\notepad.exe"" -v


To make it works for other versions of Windows, the shellcode generated must be different. The data structures and function definitions present in shellcode/doppelganging.h would have to be checked and modified accordingly to match the target kernel. Also in the injector I add a breakpoint to a specific kernel function, PspCallProcessNotifyRoutines(), called by NtCreateThreadEx() that need to be bypass to make the injection successful. This step is probably unnecessary for OS prior to Windows 10.


More details:



https://www.youtube.com/watch?v=Cch8dvp836w&feature=youtu.be&t=2382","@mdolmen With a new version of Win10 I had a successful injection! :) Could you rebase the PR on the latest master, add the license to all new files created and then I'm ready to merge it.",True,{'HOORAY': ['https://github.com/v-p-b']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,444,2018-08-03T22:22:40Z,2018-09-04T15:19:59Z,2018-09-04T15:19:59Z,MERGED,True,1385,47,11,https://github.com/mdolmen,Process doppelganging injection support,32,[],https://github.com/tklengyel/drakvuf/pull/444,https://github.com/tklengyel,21,https://github.com/tklengyel/drakvuf/pull/444#issuecomment-418368661,"Add process doppelganging injection support via a shellcode. Solve #332 .


Provides the shellcode and the source code used to generate it (works only for Windows 10 x64, version 1803).


Allows to inject a binary into the guest's filesystem and execute it. It has some limitations due to the technique itself as well as the current implementation. For example certain programs fail to locate some DLLs.


Also, you need to have write permission on the guest process used as a cover otherwise the call to CreateFileTransacted will fail.


Here is a working test case (Windows 10 x64 - Build 17134):
./src/injector -r /root/windows10-1803.rekall.json -d 1 -i <PID_Taskmgr> -e shellcode/doppelganging.bin -m doppelganging -B ""test-packages/mimikatz.exe"" -P ""C:\users\<username>\desktop\notepad.exe"" -v


To make it works for other versions of Windows, the shellcode generated must be different. The data structures and function definitions present in shellcode/doppelganging.h would have to be checked and modified accordingly to match the target kernel. Also in the injector I add a breakpoint to a specific kernel function, PspCallProcessNotifyRoutines(), called by NtCreateThreadEx() that need to be bypass to make the injection successful. This step is probably unnecessary for OS prior to Windows 10.


More details:



https://www.youtube.com/watch?v=Cch8dvp836w&feature=youtu.be&t=2382",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,444,2018-08-03T22:22:40Z,2018-09-04T15:19:59Z,2018-09-04T15:19:59Z,MERGED,True,1385,47,11,https://github.com/mdolmen,Process doppelganging injection support,32,[],https://github.com/tklengyel/drakvuf/pull/444,https://github.com/tklengyel,22,https://github.com/tklengyel/drakvuf/pull/444#issuecomment-418395577,"Add process doppelganging injection support via a shellcode. Solve #332 .


Provides the shellcode and the source code used to generate it (works only for Windows 10 x64, version 1803).


Allows to inject a binary into the guest's filesystem and execute it. It has some limitations due to the technique itself as well as the current implementation. For example certain programs fail to locate some DLLs.


Also, you need to have write permission on the guest process used as a cover otherwise the call to CreateFileTransacted will fail.


Here is a working test case (Windows 10 x64 - Build 17134):
./src/injector -r /root/windows10-1803.rekall.json -d 1 -i <PID_Taskmgr> -e shellcode/doppelganging.bin -m doppelganging -B ""test-packages/mimikatz.exe"" -P ""C:\users\<username>\desktop\notepad.exe"" -v


To make it works for other versions of Windows, the shellcode generated must be different. The data structures and function definitions present in shellcode/doppelganging.h would have to be checked and modified accordingly to match the target kernel. Also in the injector I add a breakpoint to a specific kernel function, PspCallProcessNotifyRoutines(), called by NtCreateThreadEx() that need to be bypass to make the injection successful. This step is probably unnecessary for OS prior to Windows 10.


More details:



https://www.youtube.com/watch?v=Cch8dvp836w&feature=youtu.be&t=2382",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,444,2018-08-03T22:22:40Z,2018-09-04T15:19:59Z,2018-09-04T15:19:59Z,MERGED,True,1385,47,11,https://github.com/mdolmen,Process doppelganging injection support,32,[],https://github.com/tklengyel/drakvuf/pull/444,https://github.com/tklengyel,23,https://github.com/tklengyel/drakvuf/pull/444#issuecomment-418402322,"Add process doppelganging injection support via a shellcode. Solve #332 .


Provides the shellcode and the source code used to generate it (works only for Windows 10 x64, version 1803).


Allows to inject a binary into the guest's filesystem and execute it. It has some limitations due to the technique itself as well as the current implementation. For example certain programs fail to locate some DLLs.


Also, you need to have write permission on the guest process used as a cover otherwise the call to CreateFileTransacted will fail.


Here is a working test case (Windows 10 x64 - Build 17134):
./src/injector -r /root/windows10-1803.rekall.json -d 1 -i <PID_Taskmgr> -e shellcode/doppelganging.bin -m doppelganging -B ""test-packages/mimikatz.exe"" -P ""C:\users\<username>\desktop\notepad.exe"" -v


To make it works for other versions of Windows, the shellcode generated must be different. The data structures and function definitions present in shellcode/doppelganging.h would have to be checked and modified accordingly to match the target kernel. Also in the injector I add a breakpoint to a specific kernel function, PspCallProcessNotifyRoutines(), called by NtCreateThreadEx() that need to be bypass to make the injection successful. This step is probably unnecessary for OS prior to Windows 10.


More details:



https://www.youtube.com/watch?v=Cch8dvp836w&feature=youtu.be&t=2382",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,445,2018-08-06T23:32:35Z,2019-04-04T13:53:00Z,2019-09-19T14:47:06Z,CLOSED,False,305,24,7,https://github.com/ufo95,Added SMC traps for ARM64 platforms,3,[],https://github.com/tklengyel/drakvuf/pull/445,https://github.com/ufo95,1,https://github.com/tklengyel/drakvuf/pull/445,"Renamed TRAP to SW_TRAP:
This patch introduces sw_trap as a name for both software traps: INT3 and SMC.
This patch prepares drakvuf for the ARM support added by the following commits.
Added SMC traps for ARM64 platforms:
This patch adds an preprocessor to differentiate x86 and ARM64.
This patch further adds the function smc_cb which is similar to the int3_cb.
smc_cb also helps us to emulate single-stepping:
As Xen does not support single-stepping on ARM, yet, we emulate the
single-stepping behavior by using two logically adjacent SMC instructions
placed in two different views; the first SMC instruction is placed instead
of the original instruction in the execute-view. The second SMC instruction
follows the original instruction in the step-view. By switching to the
step-view right after the first SMC invocation, the system will trap
immediately after executing the original instruction. In this way, this allows
the monitor to switch back to the exec-view and continue execution.
Because this patch uses inject_trap_breakpoint in the code path,
we renamed the function to inject_trap_sw.
This patch need the libvmi commit: 69b3198 to build.
Adds ARM64 support for the syscall plugin:
We make the trap type architecture dependent.
The function sys_reg_genericv8_init is ignored as it is no syscall.","Renamed TRAP to SW_TRAP:
This patch introduces sw_trap as a name for both software traps: INT3 and SMC.
This patch prepares drakvuf for the ARM support added by the following commits.
Added SMC traps for ARM64 platforms:
This patch adds an preprocessor to differentiate x86 and ARM64.
This patch further adds the function smc_cb which is similar to the int3_cb.
smc_cb also helps us to emulate single-stepping:
As Xen does not support single-stepping on ARM, yet, we emulate the
single-stepping behavior by using two logically adjacent SMC instructions
placed in two different views; the first SMC instruction is placed instead
of the original instruction in the execute-view. The second SMC instruction
follows the original instruction in the step-view. By switching to the
step-view right after the first SMC invocation, the system will trap
immediately after executing the original instruction. In this way, this allows
the monitor to switch back to the exec-view and continue execution.
Because this patch uses inject_trap_breakpoint in the code path,
we renamed the function to inject_trap_sw.
This patch need the libvmi commit: 69b3198 to build.
Adds ARM64 support for the syscall plugin:
We make the trap type architecture dependent.
The function sys_reg_genericv8_init is ignored as it is no syscall.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,445,2018-08-06T23:32:35Z,2019-04-04T13:53:00Z,2019-09-19T14:47:06Z,CLOSED,False,305,24,7,https://github.com/ufo95,Added SMC traps for ARM64 platforms,3,[],https://github.com/tklengyel/drakvuf/pull/445,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/445#issuecomment-410898637,"Renamed TRAP to SW_TRAP:
This patch introduces sw_trap as a name for both software traps: INT3 and SMC.
This patch prepares drakvuf for the ARM support added by the following commits.
Added SMC traps for ARM64 platforms:
This patch adds an preprocessor to differentiate x86 and ARM64.
This patch further adds the function smc_cb which is similar to the int3_cb.
smc_cb also helps us to emulate single-stepping:
As Xen does not support single-stepping on ARM, yet, we emulate the
single-stepping behavior by using two logically adjacent SMC instructions
placed in two different views; the first SMC instruction is placed instead
of the original instruction in the execute-view. The second SMC instruction
follows the original instruction in the step-view. By switching to the
step-view right after the first SMC invocation, the system will trap
immediately after executing the original instruction. In this way, this allows
the monitor to switch back to the exec-view and continue execution.
Because this patch uses inject_trap_breakpoint in the code path,
we renamed the function to inject_trap_sw.
This patch need the libvmi commit: 69b3198 to build.
Adds ARM64 support for the syscall plugin:
We make the trap type architecture dependent.
The function sys_reg_genericv8_init is ignored as it is no syscall.","The code looks good and I'm happy to see this finally made it into a functional system 👍  Since altp2m is still not part of upstream Xen, could you include a xen_arm submodule that points to a version of Xen with the required patches? Also, please update the Travis CI script to include a cross-compile test of DRAKVUF to make sure we don't have a regression later for ARM.",True,{'THUMBS_UP': ['https://github.com/sergej-proskurin']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,445,2018-08-06T23:32:35Z,2019-04-04T13:53:00Z,2019-09-19T14:47:06Z,CLOSED,False,305,24,7,https://github.com/ufo95,Added SMC traps for ARM64 platforms,3,[],https://github.com/tklengyel/drakvuf/pull/445,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/445#issuecomment-410898721,"Renamed TRAP to SW_TRAP:
This patch introduces sw_trap as a name for both software traps: INT3 and SMC.
This patch prepares drakvuf for the ARM support added by the following commits.
Added SMC traps for ARM64 platforms:
This patch adds an preprocessor to differentiate x86 and ARM64.
This patch further adds the function smc_cb which is similar to the int3_cb.
smc_cb also helps us to emulate single-stepping:
As Xen does not support single-stepping on ARM, yet, we emulate the
single-stepping behavior by using two logically adjacent SMC instructions
placed in two different views; the first SMC instruction is placed instead
of the original instruction in the execute-view. The second SMC instruction
follows the original instruction in the step-view. By switching to the
step-view right after the first SMC invocation, the system will trap
immediately after executing the original instruction. In this way, this allows
the monitor to switch back to the exec-view and continue execution.
Because this patch uses inject_trap_breakpoint in the code path,
we renamed the function to inject_trap_sw.
This patch need the libvmi commit: 69b3198 to build.
Adds ARM64 support for the syscall plugin:
We make the trap type architecture dependent.
The function sys_reg_genericv8_init is ignored as it is no syscall.","This patch need the libvmi commit: 69b3198 to build.

Please update the LibVMI submodule as well as part of this PR.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,445,2018-08-06T23:32:35Z,2019-04-04T13:53:00Z,2019-09-19T14:47:06Z,CLOSED,False,305,24,7,https://github.com/ufo95,Added SMC traps for ARM64 platforms,3,[],https://github.com/tklengyel/drakvuf/pull/445,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/445#issuecomment-417122976,"Renamed TRAP to SW_TRAP:
This patch introduces sw_trap as a name for both software traps: INT3 and SMC.
This patch prepares drakvuf for the ARM support added by the following commits.
Added SMC traps for ARM64 platforms:
This patch adds an preprocessor to differentiate x86 and ARM64.
This patch further adds the function smc_cb which is similar to the int3_cb.
smc_cb also helps us to emulate single-stepping:
As Xen does not support single-stepping on ARM, yet, we emulate the
single-stepping behavior by using two logically adjacent SMC instructions
placed in two different views; the first SMC instruction is placed instead
of the original instruction in the execute-view. The second SMC instruction
follows the original instruction in the step-view. By switching to the
step-view right after the first SMC invocation, the system will trap
immediately after executing the original instruction. In this way, this allows
the monitor to switch back to the exec-view and continue execution.
Because this patch uses inject_trap_breakpoint in the code path,
we renamed the function to inject_trap_sw.
This patch need the libvmi commit: 69b3198 to build.
Adds ARM64 support for the syscall plugin:
We make the trap type architecture dependent.
The function sys_reg_genericv8_init is ignored as it is no syscall.","clang scan-build found one issue:
vmi.c:936:17: warning: Potential memory leak
                g_hash_table_remove(drakvuf->breakpoint_lookup_pa, &container->breakpoint.pa);
                ^~~~~~~~~~~~~~~~~~~
1 warning generated.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,445,2018-08-06T23:32:35Z,2019-04-04T13:53:00Z,2019-09-19T14:47:06Z,CLOSED,False,305,24,7,https://github.com/ufo95,Added SMC traps for ARM64 platforms,3,[],https://github.com/tklengyel/drakvuf/pull/445,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/445#issuecomment-479906149,"Renamed TRAP to SW_TRAP:
This patch introduces sw_trap as a name for both software traps: INT3 and SMC.
This patch prepares drakvuf for the ARM support added by the following commits.
Added SMC traps for ARM64 platforms:
This patch adds an preprocessor to differentiate x86 and ARM64.
This patch further adds the function smc_cb which is similar to the int3_cb.
smc_cb also helps us to emulate single-stepping:
As Xen does not support single-stepping on ARM, yet, we emulate the
single-stepping behavior by using two logically adjacent SMC instructions
placed in two different views; the first SMC instruction is placed instead
of the original instruction in the execute-view. The second SMC instruction
follows the original instruction in the step-view. By switching to the
step-view right after the first SMC invocation, the system will trap
immediately after executing the original instruction. In this way, this allows
the monitor to switch back to the exec-view and continue execution.
Because this patch uses inject_trap_breakpoint in the code path,
we renamed the function to inject_trap_sw.
This patch need the libvmi commit: 69b3198 to build.
Adds ARM64 support for the syscall plugin:
We make the trap type architecture dependent.
The function sys_reg_genericv8_init is ignored as it is no syscall.",I'm closing this for now until we figure out a way to have it added to the CI system.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,445,2018-08-06T23:32:35Z,2019-04-04T13:53:00Z,2019-09-19T14:47:06Z,CLOSED,False,305,24,7,https://github.com/ufo95,Added SMC traps for ARM64 platforms,3,[],https://github.com/tklengyel/drakvuf/pull/445,https://github.com/aoshiken,6,https://github.com/tklengyel/drakvuf/pull/445#issuecomment-533145282,"Renamed TRAP to SW_TRAP:
This patch introduces sw_trap as a name for both software traps: INT3 and SMC.
This patch prepares drakvuf for the ARM support added by the following commits.
Added SMC traps for ARM64 platforms:
This patch adds an preprocessor to differentiate x86 and ARM64.
This patch further adds the function smc_cb which is similar to the int3_cb.
smc_cb also helps us to emulate single-stepping:
As Xen does not support single-stepping on ARM, yet, we emulate the
single-stepping behavior by using two logically adjacent SMC instructions
placed in two different views; the first SMC instruction is placed instead
of the original instruction in the execute-view. The second SMC instruction
follows the original instruction in the step-view. By switching to the
step-view right after the first SMC invocation, the system will trap
immediately after executing the original instruction. In this way, this allows
the monitor to switch back to the exec-view and continue execution.
Because this patch uses inject_trap_breakpoint in the code path,
we renamed the function to inject_trap_sw.
This patch need the libvmi commit: 69b3198 to build.
Adds ARM64 support for the syscall plugin:
We make the trap type architecture dependent.
The function sys_reg_genericv8_init is ignored as it is no syscall.",Just curious... what's the status of this?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,445,2018-08-06T23:32:35Z,2019-04-04T13:53:00Z,2019-09-19T14:47:06Z,CLOSED,False,305,24,7,https://github.com/ufo95,Added SMC traps for ARM64 platforms,3,[],https://github.com/tklengyel/drakvuf/pull/445,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/445#issuecomment-533165611,"Renamed TRAP to SW_TRAP:
This patch introduces sw_trap as a name for both software traps: INT3 and SMC.
This patch prepares drakvuf for the ARM support added by the following commits.
Added SMC traps for ARM64 platforms:
This patch adds an preprocessor to differentiate x86 and ARM64.
This patch further adds the function smc_cb which is similar to the int3_cb.
smc_cb also helps us to emulate single-stepping:
As Xen does not support single-stepping on ARM, yet, we emulate the
single-stepping behavior by using two logically adjacent SMC instructions
placed in two different views; the first SMC instruction is placed instead
of the original instruction in the execute-view. The second SMC instruction
follows the original instruction in the step-view. By switching to the
step-view right after the first SMC invocation, the system will trap
immediately after executing the original instruction. In this way, this allows
the monitor to switch back to the exec-view and continue execution.
Because this patch uses inject_trap_breakpoint in the code path,
we renamed the function to inject_trap_sw.
This patch need the libvmi commit: 69b3198 to build.
Adds ARM64 support for the syscall plugin:
We make the trap type architecture dependent.
The function sys_reg_genericv8_init is ignored as it is no syscall.",It's shelved until we find a way to have it integrated into the CI system at least on Travis.,True,{'THUMBS_UP': ['https://github.com/aoshiken']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,447,2018-08-13T15:28:24Z,2018-08-14T18:58:14Z,2018-10-23T13:42:11Z,MERGED,True,146,153,3,https://github.com/skvl,Plugin | Filedelete | Add support for Windows x86 with function injection method,3,[],https://github.com/tklengyel/drakvuf/pull/447,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/447,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,447,2018-08-13T15:28:24Z,2018-08-14T18:58:14Z,2018-10-23T13:42:11Z,MERGED,True,146,153,3,https://github.com/skvl,Plugin | Filedelete | Add support for Windows x86 with function injection method,3,[],https://github.com/tklengyel/drakvuf/pull/447,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/447#issuecomment-412558816,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,447,2018-08-13T15:28:24Z,2018-08-14T18:58:14Z,2018-10-23T13:42:11Z,MERGED,True,146,153,3,https://github.com/skvl,Plugin | Filedelete | Add support for Windows x86 with function injection method,3,[],https://github.com/tklengyel/drakvuf/pull/447,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/447#issuecomment-412644553,,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,447,2018-08-13T15:28:24Z,2018-08-14T18:58:14Z,2018-10-23T13:42:11Z,MERGED,True,146,153,3,https://github.com/skvl,Plugin | Filedelete | Add support for Windows x86 with function injection method,3,[],https://github.com/tklengyel/drakvuf/pull/447,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/447#issuecomment-412897909,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,447,2018-08-13T15:28:24Z,2018-08-14T18:58:14Z,2018-10-23T13:42:11Z,MERGED,True,146,153,3,https://github.com/skvl,Plugin | Filedelete | Add support for Windows x86 with function injection method,3,[],https://github.com/tklengyel/drakvuf/pull/447,https://github.com/skvl,5,https://github.com/tklengyel/drakvuf/pull/447#issuecomment-412939952,,@tklengyel what's the problem? What should I fix?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,447,2018-08-13T15:28:24Z,2018-08-14T18:58:14Z,2018-10-23T13:42:11Z,MERGED,True,146,153,3,https://github.com/skvl,Plugin | Filedelete | Add support for Windows x86 with function injection method,3,[],https://github.com/tklengyel/drakvuf/pull/447,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/447#issuecomment-412940422,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,447,2018-08-13T15:28:24Z,2018-08-14T18:58:14Z,2018-10-23T13:42:11Z,MERGED,True,146,153,3,https://github.com/skvl,Plugin | Filedelete | Add support for Windows x86 with function injection method,3,[],https://github.com/tklengyel/drakvuf/pull/447,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/447#issuecomment-412944919,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,447,2018-08-13T15:28:24Z,2018-08-14T18:58:14Z,2018-10-23T13:42:11Z,MERGED,True,146,153,3,https://github.com/skvl,Plugin | Filedelete | Add support for Windows x86 with function injection method,3,[],https://github.com/tklengyel/drakvuf/pull/447,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/447#issuecomment-412952307,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,447,2018-08-13T15:28:24Z,2018-08-14T18:58:14Z,2018-10-23T13:42:11Z,MERGED,True,146,153,3,https://github.com/skvl,Plugin | Filedelete | Add support for Windows x86 with function injection method,3,[],https://github.com/tklengyel/drakvuf/pull/447,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/447#issuecomment-412979850,,Thanks!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,448,2018-08-13T16:22:43Z,2018-08-14T16:07:31Z,2018-08-15T10:03:16Z,MERGED,True,101,111,2,https://github.com/nystilaps,Added support of 32bit windows to socketmon,1,[],https://github.com/tklengyel/drakvuf/pull/448,https://github.com/nystilaps,1,https://github.com/tklengyel/drakvuf/pull/448,Added support of 32bit windows to socketmon,Added support of 32bit windows to socketmon,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,448,2018-08-13T16:22:43Z,2018-08-14T16:07:31Z,2018-08-15T10:03:16Z,MERGED,True,101,111,2,https://github.com/nystilaps,Added support of 32bit windows to socketmon,1,[],https://github.com/tklengyel/drakvuf/pull/448,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/448#issuecomment-412577513,Added support of 32bit windows to socketmon,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,448,2018-08-13T16:22:43Z,2018-08-14T16:07:31Z,2018-08-15T10:03:16Z,MERGED,True,101,111,2,https://github.com/nystilaps,Added support of 32bit windows to socketmon,1,[],https://github.com/tklengyel/drakvuf/pull/448,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/448#issuecomment-412647128,Added support of 32bit windows to socketmon,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,448,2018-08-13T16:22:43Z,2018-08-14T16:07:31Z,2018-08-15T10:03:16Z,MERGED,True,101,111,2,https://github.com/nystilaps,Added support of 32bit windows to socketmon,1,[],https://github.com/tklengyel/drakvuf/pull/448,https://github.com/nystilaps,4,https://github.com/tklengyel/drakvuf/pull/448#issuecomment-412812657,Added support of 32bit windows to socketmon,Made requested changes,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,448,2018-08-13T16:22:43Z,2018-08-14T16:07:31Z,2018-08-15T10:03:16Z,MERGED,True,101,111,2,https://github.com/nystilaps,Added support of 32bit windows to socketmon,1,[],https://github.com/tklengyel/drakvuf/pull/448,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/448#issuecomment-412897636,Added support of 32bit windows to socketmon,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,448,2018-08-13T16:22:43Z,2018-08-14T16:07:31Z,2018-08-15T10:03:16Z,MERGED,True,101,111,2,https://github.com/nystilaps,Added support of 32bit windows to socketmon,1,[],https://github.com/tklengyel/drakvuf/pull/448,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/448#issuecomment-412926317,Added support of 32bit windows to socketmon,Thanks!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,448,2018-08-13T16:22:43Z,2018-08-14T16:07:31Z,2018-08-15T10:03:16Z,MERGED,True,101,111,2,https://github.com/nystilaps,Added support of 32bit windows to socketmon,1,[],https://github.com/tklengyel/drakvuf/pull/448,https://github.com/nystilaps,7,https://github.com/tklengyel/drakvuf/pull/448#issuecomment-413151875,Added support of 32bit windows to socketmon,Made requested changes.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,450,2018-08-15T10:32:33Z,2018-08-15T15:10:35Z,2018-08-15T16:03:19Z,MERGED,True,4,4,1,https://github.com/skvl,Replace hardcoded Coverity token with Travis CI variable,1,[],https://github.com/tklengyel/drakvuf/pull/450,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/450,"This allows all users to enable checking of their branches before
creating Pull Requests.
To enable Coverity Scan one should create COVERITY_SCAN_TOKEN
and other variables in Travis CI project's settings.

@tklengyel I have changed .travis.yml so it could not pass Coverity test. You should define all variables in your Travis CI project's settings.","This allows all users to enable checking of their branches before
creating Pull Requests.
To enable Coverity Scan one should create COVERITY_SCAN_TOKEN
and other variables in Travis CI project's settings.

@tklengyel I have changed .travis.yml so it could not pass Coverity test. You should define all variables in your Travis CI project's settings.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,451,2018-08-15T10:51:49Z,2018-08-15T16:26:13Z,2018-08-15T17:02:44Z,MERGED,True,59,4,2,https://github.com/skvl,Add Travis CI addon for SonarQube,3,[],https://github.com/tklengyel/drakvuf/pull/451,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/451,"One should define SONAR_TOKEN variable in Travis CI project's settings.

@tklengyel this patch defines new test in .travis.yml which requires a project named drakvuf on SonarCloud. You could see my example project.","One should define SONAR_TOKEN variable in Travis CI project's settings.

@tklengyel this patch defines new test in .travis.yml which requires a project named drakvuf on SonarCloud. You could see my example project.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,451,2018-08-15T10:51:49Z,2018-08-15T16:26:13Z,2018-08-15T17:02:44Z,MERGED,True,59,4,2,https://github.com/skvl,Add Travis CI addon for SonarQube,3,[],https://github.com/tklengyel/drakvuf/pull/451,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/451#issuecomment-413220453,"One should define SONAR_TOKEN variable in Travis CI project's settings.

@tklengyel this patch defines new test in .travis.yml which requires a project named drakvuf on SonarCloud. You could see my example project.","So if you turn the coverity scan token into a variable, where does it get set? Never mind, I see your other PR explains.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,451,2018-08-15T10:51:49Z,2018-08-15T16:26:13Z,2018-08-15T17:02:44Z,MERGED,True,59,4,2,https://github.com/skvl,Add Travis CI addon for SonarQube,3,[],https://github.com/tklengyel/drakvuf/pull/451,https://github.com/skvl,3,https://github.com/tklengyel/drakvuf/pull/451#issuecomment-413222630,"One should define SONAR_TOKEN variable in Travis CI project's settings.

@tklengyel this patch defines new test in .travis.yml which requires a project named drakvuf on SonarCloud. You could see my example project.",@tklengyel I don't understand the question. Do You mean the $COVERITY_SCAN_TOKEN from #450 ? You could set all tokens on project's settings page (i think this should be Yours) in Environment Variables section.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,451,2018-08-15T10:51:49Z,2018-08-15T16:26:13Z,2018-08-15T17:02:44Z,MERGED,True,59,4,2,https://github.com/skvl,Add Travis CI addon for SonarQube,3,[],https://github.com/tklengyel/drakvuf/pull/451,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/451#issuecomment-413224120,"One should define SONAR_TOKEN variable in Travis CI project's settings.

@tklengyel this patch defines new test in .travis.yml which requires a project named drakvuf on SonarCloud. You could see my example project.","According to https://docs.travis-ci.com/user/sonarcloud these need to be added t the travis.yml:
addons:
  sonarcloud:
    organization: ""sonarcloud_organization_key"" # the key of the org you chose at step #3
    token:
      secure: ********* # encrypted value of your token
script:
  # other script steps might be done before running the actual analysis
  - sonar-scanner",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,451,2018-08-15T10:51:49Z,2018-08-15T16:26:13Z,2018-08-15T17:02:44Z,MERGED,True,59,4,2,https://github.com/skvl,Add Travis CI addon for SonarQube,3,[],https://github.com/tklengyel/drakvuf/pull/451,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/451#issuecomment-413225161,"One should define SONAR_TOKEN variable in Travis CI project's settings.

@tklengyel this patch defines new test in .travis.yml which requires a project named drakvuf on SonarCloud. You could see my example project.","Ah never mind, I see it's there :) Let's see if it goes through now.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,451,2018-08-15T10:51:49Z,2018-08-15T16:26:13Z,2018-08-15T17:02:44Z,MERGED,True,59,4,2,https://github.com/skvl,Add Travis CI addon for SonarQube,3,[],https://github.com/tklengyel/drakvuf/pull/451,https://github.com/skvl,6,https://github.com/tklengyel/drakvuf/pull/451#issuecomment-413230857,"One should define SONAR_TOKEN variable in Travis CI project's settings.

@tklengyel this patch defines new test in .travis.yml which requires a project named drakvuf on SonarCloud. You could see my example project.",Have You created a SonarQube project?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,451,2018-08-15T10:51:49Z,2018-08-15T16:26:13Z,2018-08-15T17:02:44Z,MERGED,True,59,4,2,https://github.com/skvl,Add Travis CI addon for SonarQube,3,[],https://github.com/tklengyel/drakvuf/pull/451,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/451#issuecomment-413233200,"One should define SONAR_TOKEN variable in Travis CI project's settings.

@tklengyel this patch defines new test in .travis.yml which requires a project named drakvuf on SonarCloud. You could see my example project.","Yes, it's drakvuf. Not sure what the issue is right now",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,451,2018-08-15T10:51:49Z,2018-08-15T16:26:13Z,2018-08-15T17:02:44Z,MERGED,True,59,4,2,https://github.com/skvl,Add Travis CI addon for SonarQube,3,[],https://github.com/tklengyel/drakvuf/pull/451,https://github.com/skvl,8,https://github.com/tklengyel/drakvuf/pull/451#issuecomment-413233891,"One should define SONAR_TOKEN variable in Travis CI project's settings.

@tklengyel this patch defines new test in .travis.yml which requires a project named drakvuf on SonarCloud. You could see my example project.",It looks like the sonar addon have not been applied. I have seen this when I first missaligned .travis.yml. But currently it aligned properly.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,451,2018-08-15T10:51:49Z,2018-08-15T16:26:13Z,2018-08-15T17:02:44Z,MERGED,True,59,4,2,https://github.com/skvl,Add Travis CI addon for SonarQube,3,[],https://github.com/tklengyel/drakvuf/pull/451,https://github.com/skvl,9,https://github.com/tklengyel/drakvuf/pull/451#issuecomment-413234827,"One should define SONAR_TOKEN variable in Travis CI project's settings.

@tklengyel this patch defines new test in .travis.yml which requires a project named drakvuf on SonarCloud. You could see my example project.",I think You have not set SONAR_TOKEN.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,451,2018-08-15T10:51:49Z,2018-08-15T16:26:13Z,2018-08-15T17:02:44Z,MERGED,True,59,4,2,https://github.com/skvl,Add Travis CI addon for SonarQube,3,[],https://github.com/tklengyel/drakvuf/pull/451,https://github.com/skvl,10,https://github.com/tklengyel/drakvuf/pull/451#issuecomment-413235200,"One should define SONAR_TOKEN variable in Travis CI project's settings.

@tklengyel this patch defines new test in .travis.yml which requires a project named drakvuf on SonarCloud. You could see my example project.","Compare Yours log:
�[33;1mSetting environment variables from .travis.yml�[0m
$ export TEST=""SonarCloud""

$ export CC=clang

... and mine:
�[33;1mSetting environment variables from repository settings�[0m
$ export SONAR_TOKEN=[secure]

�[33;1mSetting environment variables from .travis.yml�[0m
$ export COVERITY_SCAN_TOKEN=[secure]
$ export TEST=""SonarCloud""

$ export CC=clang",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,451,2018-08-15T10:51:49Z,2018-08-15T16:26:13Z,2018-08-15T17:02:44Z,MERGED,True,59,4,2,https://github.com/skvl,Add Travis CI addon for SonarQube,3,[],https://github.com/tklengyel/drakvuf/pull/451,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/451#issuecomment-413236063,"One should define SONAR_TOKEN variable in Travis CI project's settings.

@tklengyel this patch defines new test in .travis.yml which requires a project named drakvuf on SonarCloud. You could see my example project.","Encrypted environment variables have been removed for security reasons.
See https://docs.travis-ci.com/user/pull-requests/#Pull-Requests-and-Security-Restrictions",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,451,2018-08-15T10:51:49Z,2018-08-15T16:26:13Z,2018-08-15T17:02:44Z,MERGED,True,59,4,2,https://github.com/skvl,Add Travis CI addon for SonarQube,3,[],https://github.com/tklengyel/drakvuf/pull/451,https://github.com/skvl,12,https://github.com/tklengyel/drakvuf/pull/451#issuecomment-413238154,"One should define SONAR_TOKEN variable in Travis CI project's settings.

@tklengyel this patch defines new test in .travis.yml which requires a project named drakvuf on SonarCloud. You could see my example project.",Can You create a local branch on top of mine for test?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,451,2018-08-15T10:51:49Z,2018-08-15T16:26:13Z,2018-08-15T17:02:44Z,MERGED,True,59,4,2,https://github.com/skvl,Add Travis CI addon for SonarQube,3,[],https://github.com/tklengyel/drakvuf/pull/451,https://github.com/tklengyel,13,https://github.com/tklengyel/drakvuf/pull/451#issuecomment-413238479,"One should define SONAR_TOKEN variable in Travis CI project's settings.

@tklengyel this patch defines new test in .travis.yml which requires a project named drakvuf on SonarCloud. You could see my example project.","I have, read the link I posted. The problem is that for PRs coming from forks those secure tokens are not available. That's why it can't run. I have to manually encrypt the token so that it can be safely visible for PRs.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,451,2018-08-15T10:51:49Z,2018-08-15T16:26:13Z,2018-08-15T17:02:44Z,MERGED,True,59,4,2,https://github.com/skvl,Add Travis CI addon for SonarQube,3,[],https://github.com/tklengyel/drakvuf/pull/451,https://github.com/skvl,14,https://github.com/tklengyel/drakvuf/pull/451#issuecomment-413239687,"One should define SONAR_TOKEN variable in Travis CI project's settings.

@tklengyel this patch defines new test in .travis.yml which requires a project named drakvuf on SonarCloud. You could see my example project.",But it works with COVERITY_SCAN_TOKEN,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,451,2018-08-15T10:51:49Z,2018-08-15T16:26:13Z,2018-08-15T17:02:44Z,MERGED,True,59,4,2,https://github.com/skvl,Add Travis CI addon for SonarQube,3,[],https://github.com/tklengyel/drakvuf/pull/451,https://github.com/tklengyel,15,https://github.com/tklengyel/drakvuf/pull/451#issuecomment-413240213,"One should define SONAR_TOKEN variable in Travis CI project's settings.

@tklengyel this patch defines new test in .travis.yml which requires a project named drakvuf on SonarCloud. You could see my example project.","No, it doesn't work with COVERITY_SCAN_TOKEN either, if you check the logs, the coverity token is only available for builds that are from within the repository. But the error there doesn't fail like the Sonar test does. Plus we only run coverity scans for the master branch anyway, so there it's fine. Here it's a blocker.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,451,2018-08-15T10:51:49Z,2018-08-15T16:26:13Z,2018-08-15T17:02:44Z,MERGED,True,59,4,2,https://github.com/skvl,Add Travis CI addon for SonarQube,3,[],https://github.com/tklengyel/drakvuf/pull/451,https://github.com/tklengyel,16,https://github.com/tklengyel/drakvuf/pull/451#issuecomment-413240556,"One should define SONAR_TOKEN variable in Travis CI project's settings.

@tklengyel this patch defines new test in .travis.yml which requires a project named drakvuf on SonarCloud. You could see my example project.","Manually encrypting the token and setting it as an environmental variable doesn't work either, it has to be in the file itself as
secure: ""Pdb1+p0R/KKvZydJdlqMv/9zQEGMPOwelmMdi9yrKppwJRHanCTDrZ6A2Be54o9ZOBxe4d1JFnyLh8YU52bAEaCy2mhzA8/1yWVHYSH54Tu+X/xlvPmyIiN1qOaNJbHHQYXqUTNOaKdmolk3UAKO4Kj+La9oke3ZTN5qVaNlEcs=""",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,451,2018-08-15T10:51:49Z,2018-08-15T16:26:13Z,2018-08-15T17:02:44Z,MERGED,True,59,4,2,https://github.com/skvl,Add Travis CI addon for SonarQube,3,[],https://github.com/tklengyel/drakvuf/pull/451,https://github.com/skvl,17,https://github.com/tklengyel/drakvuf/pull/451#issuecomment-413240812,"One should define SONAR_TOKEN variable in Travis CI project's settings.

@tklengyel this patch defines new test in .travis.yml which requires a project named drakvuf on SonarCloud. You could see my example project.",You should not manually encrypt token! You should past original token into variable and Travis CI would secure it.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,451,2018-08-15T10:51:49Z,2018-08-15T16:26:13Z,2018-08-15T17:02:44Z,MERGED,True,59,4,2,https://github.com/skvl,Add Travis CI addon for SonarQube,3,[],https://github.com/tklengyel/drakvuf/pull/451,https://github.com/skvl,18,https://github.com/tklengyel/drakvuf/pull/451#issuecomment-413241210,"One should define SONAR_TOKEN variable in Travis CI project's settings.

@tklengyel this patch defines new test in .travis.yml which requires a project named drakvuf on SonarCloud. You could see my example project.",Read the documentation.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,451,2018-08-15T10:51:49Z,2018-08-15T16:26:13Z,2018-08-15T17:02:44Z,MERGED,True,59,4,2,https://github.com/skvl,Add Travis CI addon for SonarQube,3,[],https://github.com/tklengyel/drakvuf/pull/451,https://github.com/tklengyel,19,https://github.com/tklengyel/drakvuf/pull/451#issuecomment-413241642,"One should define SONAR_TOKEN variable in Travis CI project's settings.

@tklengyel this patch defines new test in .travis.yml which requires a project named drakvuf on SonarCloud. You could see my example project.",That's what I did. It doesn't work for PRs.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,451,2018-08-15T10:51:49Z,2018-08-15T16:26:13Z,2018-08-15T17:02:44Z,MERGED,True,59,4,2,https://github.com/skvl,Add Travis CI addon for SonarQube,3,[],https://github.com/tklengyel/drakvuf/pull/451,https://github.com/tklengyel,20,https://github.com/tklengyel/drakvuf/pull/451#issuecomment-413242438,"One should define SONAR_TOKEN variable in Travis CI project's settings.

@tklengyel this patch defines new test in .travis.yml which requires a project named drakvuf on SonarCloud. You could see my example project.",Setting the manually encrypted token as a non-secure environmental variable doesn't work either.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,451,2018-08-15T10:51:49Z,2018-08-15T16:26:13Z,2018-08-15T17:02:44Z,MERGED,True,59,4,2,https://github.com/skvl,Add Travis CI addon for SonarQube,3,[],https://github.com/tklengyel/drakvuf/pull/451,https://github.com/skvl,21,https://github.com/tklengyel/drakvuf/pull/451#issuecomment-413245455,"One should define SONAR_TOKEN variable in Travis CI project's settings.

@tklengyel this patch defines new test in .travis.yml which requires a project named drakvuf on SonarCloud. You could see my example project.","But why I don't see something like this:
Setting environment variables from repository settings
$ export SONAR_TOKEN=[secure]

Setting environment variables from .travis.yml
$ export COVERITY_SCAN_TOKEN=[secure]
$ export TEST=""SonarCloud""

in current logs?
Fill free to reject this PR. Sorry for inconvenience.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,451,2018-08-15T10:51:49Z,2018-08-15T16:26:13Z,2018-08-15T17:02:44Z,MERGED,True,59,4,2,https://github.com/skvl,Add Travis CI addon for SonarQube,3,[],https://github.com/tklengyel/drakvuf/pull/451,https://github.com/tklengyel,22,https://github.com/tklengyel/drakvuf/pull/451#issuecomment-413246200,"One should define SONAR_TOKEN variable in Travis CI project's settings.

@tklengyel this patch defines new test in .travis.yml which requires a project named drakvuf on SonarCloud. You could see my example project.",Because you are not reading the link I copied above: See https://docs.travis-ci.com/user/pull-requests/#Pull-Requests-and-Security-Restrictions,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,451,2018-08-15T10:51:49Z,2018-08-15T16:26:13Z,2018-08-15T17:02:44Z,MERGED,True,59,4,2,https://github.com/skvl,Add Travis CI addon for SonarQube,3,[],https://github.com/tklengyel/drakvuf/pull/451,https://github.com/skvl,23,https://github.com/tklengyel/drakvuf/pull/451#issuecomment-413246414,"One should define SONAR_TOKEN variable in Travis CI project's settings.

@tklengyel this patch defines new test in .travis.yml which requires a project named drakvuf on SonarCloud. You could see my example project.","From here I see that variables have been set:
Setting environment variables from repository settings
$ export SONAR_TOKEN=[secure]
$ export [secure]=[secure]
$ export COVERITY_PROJECT_NAME=tklengyel/drakvuf
$ export COVERITY_BRANCH_PATTERN=master
$ export COVERITY_SCAN_TOKEN=[secure]
Setting environment variables from .travis.yml
$ export TEST=""Coverity""

... very strange ...",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,451,2018-08-15T10:51:49Z,2018-08-15T16:26:13Z,2018-08-15T17:02:44Z,MERGED,True,59,4,2,https://github.com/skvl,Add Travis CI addon for SonarQube,3,[],https://github.com/tklengyel/drakvuf/pull/451,https://github.com/tklengyel,24,https://github.com/tklengyel/drakvuf/pull/451#issuecomment-413246523,"One should define SONAR_TOKEN variable in Travis CI project's settings.

@tklengyel this patch defines new test in .travis.yml which requires a project named drakvuf on SonarCloud. You could see my example project.",I do like the idea of hooking SonarCloud into the CI system but it needs to be done according to the Travis documentation so that it doesn't block PRs.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,451,2018-08-15T10:51:49Z,2018-08-15T16:26:13Z,2018-08-15T17:02:44Z,MERGED,True,59,4,2,https://github.com/skvl,Add Travis CI addon for SonarQube,3,[],https://github.com/tklengyel/drakvuf/pull/451,https://github.com/tklengyel,25,https://github.com/tklengyel/drakvuf/pull/451#issuecomment-413246748,"One should define SONAR_TOKEN variable in Travis CI project's settings.

@tklengyel this patch defines new test in .travis.yml which requires a project named drakvuf on SonarCloud. You could see my example project.",Because that build is after the PR has been merged.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,451,2018-08-15T10:51:49Z,2018-08-15T16:26:13Z,2018-08-15T17:02:44Z,MERGED,True,59,4,2,https://github.com/skvl,Add Travis CI addon for SonarQube,3,[],https://github.com/tklengyel/drakvuf/pull/451,https://github.com/tklengyel,26,https://github.com/tklengyel/drakvuf/pull/451#issuecomment-413248022,"One should define SONAR_TOKEN variable in Travis CI project's settings.

@tklengyel this patch defines new test in .travis.yml which requires a project named drakvuf on SonarCloud. You could see my example project.","This is what the travis script needs to disable this test for PRs:
script:
   - 'if [ ""$TRAVIS_PULL_REQUEST"" != ""false"" ]; then exit 0; fi'",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,451,2018-08-15T10:51:49Z,2018-08-15T16:26:13Z,2018-08-15T17:02:44Z,MERGED,True,59,4,2,https://github.com/skvl,Add Travis CI addon for SonarQube,3,[],https://github.com/tklengyel/drakvuf/pull/451,https://github.com/skvl,27,https://github.com/tklengyel/drakvuf/pull/451#issuecomment-413250177,"One should define SONAR_TOKEN variable in Travis CI project's settings.

@tklengyel this patch defines new test in .travis.yml which requires a project named drakvuf on SonarCloud. You could see my example project.","So I have fixed this according to Your suggestion.
Though I have re-read the documentation:
Travis CI makes encrypted variables and data available only to pull requests coming from the same repository. These are considered trustworthy, as only members with write access to the repository can send them.

As I understand this means: Travis CI sets encrypted variables in per organization manner. Thus in my repository I have to define this variables with my tokens because I could not access Your tokens.
So I think that something is with settings.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,451,2018-08-15T10:51:49Z,2018-08-15T16:26:13Z,2018-08-15T17:02:44Z,MERGED,True,59,4,2,https://github.com/skvl,Add Travis CI addon for SonarQube,3,[],https://github.com/tklengyel/drakvuf/pull/451,https://github.com/drakvuf-jenkins,28,https://github.com/tklengyel/drakvuf/pull/451#issuecomment-413250192,"One should define SONAR_TOKEN variable in Travis CI project's settings.

@tklengyel this patch defines new test in .travis.yml which requires a project named drakvuf on SonarCloud. You could see my example project.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,451,2018-08-15T10:51:49Z,2018-08-15T16:26:13Z,2018-08-15T17:02:44Z,MERGED,True,59,4,2,https://github.com/skvl,Add Travis CI addon for SonarQube,3,[],https://github.com/tklengyel/drakvuf/pull/451,https://github.com/tklengyel,29,https://github.com/tklengyel/drakvuf/pull/451#issuecomment-413252426,"One should define SONAR_TOKEN variable in Travis CI project's settings.

@tklengyel this patch defines new test in .travis.yml which requires a project named drakvuf on SonarCloud. You could see my example project.","What that means is that if I push a branch to drakvuf and open a PR for it, secure environmental variables will be available for it. But if you open a PR from a fork, they won't. It's not about the settings I have, it's the default Travis behavior.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,451,2018-08-15T10:51:49Z,2018-08-15T16:26:13Z,2018-08-15T17:02:44Z,MERGED,True,59,4,2,https://github.com/skvl,Add Travis CI addon for SonarQube,3,[],https://github.com/tklengyel/drakvuf/pull/451,https://github.com/tklengyel,30,https://github.com/tklengyel/drakvuf/pull/451#issuecomment-413252875,"One should define SONAR_TOKEN variable in Travis CI project's settings.

@tklengyel this patch defines new test in .travis.yml which requires a project named drakvuf on SonarCloud. You could see my example project.",Now that it is merged a build will be triggered on Travis which will have access to the SONAR_TOKEN. Let's see if it builds :),True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,451,2018-08-15T10:51:49Z,2018-08-15T16:26:13Z,2018-08-15T17:02:44Z,MERGED,True,59,4,2,https://github.com/skvl,Add Travis CI addon for SonarQube,3,[],https://github.com/tklengyel/drakvuf/pull/451,https://github.com/tklengyel,31,https://github.com/tklengyel/drakvuf/pull/451#issuecomment-413253106,"One should define SONAR_TOKEN variable in Travis CI project's settings.

@tklengyel this patch defines new test in .travis.yml which requires a project named drakvuf on SonarCloud. You could see my example project.",Build running @ https://travis-ci.org/tklengyel/drakvuf/jobs/416435297,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,452,2018-08-15T17:25:45Z,2018-08-15T18:13:01Z,2018-08-15T18:13:05Z,MERGED,True,15,27,5,https://github.com/tklengyel,Use g_strconcat instead of strcat,1,[],https://github.com/tklengyel/drakvuf/pull/452,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/452,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,452,2018-08-15T17:25:45Z,2018-08-15T18:13:01Z,2018-08-15T18:13:05Z,MERGED,True,15,27,5,https://github.com/tklengyel,Use g_strconcat instead of strcat,1,[],https://github.com/tklengyel/drakvuf/pull/452,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/452#issuecomment-413277082,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,452,2018-08-15T17:25:45Z,2018-08-15T18:13:01Z,2018-08-15T18:13:05Z,MERGED,True,15,27,5,https://github.com/tklengyel,Use g_strconcat instead of strcat,1,[],https://github.com/tklengyel/drakvuf/pull/452,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/452#issuecomment-413278642,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,453,2018-08-23T08:25:34Z,2018-08-30T17:10:53Z,2018-08-30T17:10:53Z,MERGED,True,149,2,1,https://github.com/nystilaps,"Added printing of regmon values, written to register",1,[],https://github.com/tklengyel/drakvuf/pull/453,https://github.com/nystilaps,1,https://github.com/tklengyel/drakvuf/pull/453,"Added printing of regmon values, written to register","Added printing of regmon values, written to register",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,453,2018-08-23T08:25:34Z,2018-08-30T17:10:53Z,2018-08-30T17:10:53Z,MERGED,True,149,2,1,https://github.com/nystilaps,"Added printing of regmon values, written to register",1,[],https://github.com/tklengyel/drakvuf/pull/453,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/453#issuecomment-417003044,"Added printing of regmon values, written to register",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,453,2018-08-23T08:25:34Z,2018-08-30T17:10:53Z,2018-08-30T17:10:53Z,MERGED,True,149,2,1,https://github.com/nystilaps,"Added printing of regmon values, written to register",1,[],https://github.com/tklengyel/drakvuf/pull/453,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/453#issuecomment-417003071,"Added printing of regmon values, written to register",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,453,2018-08-23T08:25:34Z,2018-08-30T17:10:53Z,2018-08-30T17:10:53Z,MERGED,True,149,2,1,https://github.com/nystilaps,"Added printing of regmon values, written to register",1,[],https://github.com/tklengyel/drakvuf/pull/453,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/453#issuecomment-417377903,"Added printing of regmon values, written to register",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,453,2018-08-23T08:25:34Z,2018-08-30T17:10:53Z,2018-08-30T17:10:53Z,MERGED,True,149,2,1,https://github.com/nystilaps,"Added printing of regmon values, written to register",1,[],https://github.com/tklengyel/drakvuf/pull/453,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/453#issuecomment-417389968,"Added printing of regmon values, written to register",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,453,2018-08-23T08:25:34Z,2018-08-30T17:10:53Z,2018-08-30T17:10:53Z,MERGED,True,149,2,1,https://github.com/nystilaps,"Added printing of regmon values, written to register",1,[],https://github.com/tklengyel/drakvuf/pull/453,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/453#issuecomment-417391624,"Added printing of regmon values, written to register",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,454,2018-08-23T08:44:40Z,2018-08-30T16:53:52Z,2018-08-30T16:53:56Z,MERGED,True,133,0,6,https://github.com/nystilaps,Added delaymon for printing values of NtDelayExecution(...),1,[],https://github.com/tklengyel/drakvuf/pull/454,https://github.com/nystilaps,1,https://github.com/tklengyel/drakvuf/pull/454,Added delaymon for printing values of NtDelayExecution(...) function calls,Added delaymon for printing values of NtDelayExecution(...) function calls,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,454,2018-08-23T08:44:40Z,2018-08-30T16:53:52Z,2018-08-30T16:53:56Z,MERGED,True,133,0,6,https://github.com/nystilaps,Added delaymon for printing values of NtDelayExecution(...),1,[],https://github.com/tklengyel/drakvuf/pull/454,https://github.com/rstocktox,2,https://github.com/tklengyel/drakvuf/pull/454#issuecomment-415350719,Added delaymon for printing values of NtDelayExecution(...) function calls,"I wonder what's the point of setting the hook in ntdll!NtDelayExecution instead of using the kernel equivalent...
You'd get rid of the cr3 trap and the set_trap_universal function...",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,454,2018-08-23T08:44:40Z,2018-08-30T16:53:52Z,2018-08-30T16:53:56Z,MERGED,True,133,0,6,https://github.com/nystilaps,Added delaymon for printing values of NtDelayExecution(...),1,[],https://github.com/tklengyel/drakvuf/pull/454,https://github.com/nystilaps,3,https://github.com/tklengyel/drakvuf/pull/454#issuecomment-415358659,Added delaymon for printing values of NtDelayExecution(...) function calls,"Good point! Thank you.
It didn't occur to me until plugin was finished.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,454,2018-08-23T08:44:40Z,2018-08-30T16:53:52Z,2018-08-30T16:53:56Z,MERGED,True,133,0,6,https://github.com/nystilaps,Added delaymon for printing values of NtDelayExecution(...),1,[],https://github.com/tklengyel/drakvuf/pull/454,https://github.com/nystilaps,4,https://github.com/tklengyel/drakvuf/pull/454#issuecomment-415401513,Added delaymon for printing values of NtDelayExecution(...) function calls,Changed to kernel version.,True,{'THUMBS_UP': ['https://github.com/aoshiken']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,454,2018-08-23T08:44:40Z,2018-08-30T16:53:52Z,2018-08-30T16:53:56Z,MERGED,True,133,0,6,https://github.com/nystilaps,Added delaymon for printing values of NtDelayExecution(...),1,[],https://github.com/tklengyel/drakvuf/pull/454,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/454#issuecomment-417002714,Added delaymon for printing values of NtDelayExecution(...) function calls,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,454,2018-08-23T08:44:40Z,2018-08-30T16:53:52Z,2018-08-30T16:53:56Z,MERGED,True,133,0,6,https://github.com/nystilaps,Added delaymon for printing values of NtDelayExecution(...),1,[],https://github.com/tklengyel/drakvuf/pull/454,https://github.com/drakvuf-jenkins,6,https://github.com/tklengyel/drakvuf/pull/454#issuecomment-417002765,Added delaymon for printing values of NtDelayExecution(...) function calls,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,454,2018-08-23T08:44:40Z,2018-08-30T16:53:52Z,2018-08-30T16:53:56Z,MERGED,True,133,0,6,https://github.com/nystilaps,Added delaymon for printing values of NtDelayExecution(...),1,[],https://github.com/tklengyel/drakvuf/pull/454,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/454#issuecomment-417013906,Added delaymon for printing values of NtDelayExecution(...) function calls,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,454,2018-08-23T08:44:40Z,2018-08-30T16:53:52Z,2018-08-30T16:53:56Z,MERGED,True,133,0,6,https://github.com/nystilaps,Added delaymon for printing values of NtDelayExecution(...),1,[],https://github.com/tklengyel/drakvuf/pull/454,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/454#issuecomment-417378015,Added delaymon for printing values of NtDelayExecution(...) function calls,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,454,2018-08-23T08:44:40Z,2018-08-30T16:53:52Z,2018-08-30T16:53:56Z,MERGED,True,133,0,6,https://github.com/nystilaps,Added delaymon for printing values of NtDelayExecution(...),1,[],https://github.com/tklengyel/drakvuf/pull/454,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/454#issuecomment-417390188,Added delaymon for printing values of NtDelayExecution(...) function calls,Thanks!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,455,2018-08-29T10:21:10Z,2018-08-29T15:59:55Z,2018-08-30T05:58:56Z,MERGED,True,7,11,3,https://github.com/aoshiken,Remove drakvuf_get_current_process() call from plugins,1,[],https://github.com/tklengyel/drakvuf/pull/455,https://github.com/aoshiken,1,https://github.com/tklengyel/drakvuf/pull/455,The EPROCESS address from the process that triggered the trap can be obtained just using the proc_data info instead of calling (again) the drakvuf_get_current_process() function from inside the plugin.,The EPROCESS address from the process that triggered the trap can be obtained just using the proc_data info instead of calling (again) the drakvuf_get_current_process() function from inside the plugin.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,455,2018-08-29T10:21:10Z,2018-08-29T15:59:55Z,2018-08-30T05:58:56Z,MERGED,True,7,11,3,https://github.com/aoshiken,Remove drakvuf_get_current_process() call from plugins,1,[],https://github.com/tklengyel/drakvuf/pull/455,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/455#issuecomment-417002538,The EPROCESS address from the process that triggered the trap can be obtained just using the proc_data info instead of calling (again) the drakvuf_get_current_process() function from inside the plugin.,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,455,2018-08-29T10:21:10Z,2018-08-29T15:59:55Z,2018-08-30T05:58:56Z,MERGED,True,7,11,3,https://github.com/aoshiken,Remove drakvuf_get_current_process() call from plugins,1,[],https://github.com/tklengyel/drakvuf/pull/455,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/455#issuecomment-417002561,The EPROCESS address from the process that triggered the trap can be obtained just using the proc_data info instead of calling (again) the drakvuf_get_current_process() function from inside the plugin.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,455,2018-08-29T10:21:10Z,2018-08-29T15:59:55Z,2018-08-30T05:58:56Z,MERGED,True,7,11,3,https://github.com/aoshiken,Remove drakvuf_get_current_process() call from plugins,1,[],https://github.com/tklengyel/drakvuf/pull/455,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/455#issuecomment-417006680,The EPROCESS address from the process that triggered the trap can be obtained just using the proc_data info instead of calling (again) the drakvuf_get_current_process() function from inside the plugin.,Thanks!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,457,2018-08-29T18:49:52Z,2018-08-29T20:41:58Z,2018-08-29T20:42:00Z,MERGED,True,1,1,1,https://github.com/tklengyel,Update LibVMI,1,[],https://github.com/tklengyel/drakvuf/pull/457,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/457,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,457,2018-08-29T18:49:52Z,2018-08-29T20:41:58Z,2018-08-29T20:42:00Z,MERGED,True,1,1,1,https://github.com/tklengyel,Update LibVMI,1,[],https://github.com/tklengyel/drakvuf/pull/457,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/457#issuecomment-417067263,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,457,2018-08-29T18:49:52Z,2018-08-29T20:41:58Z,2018-08-29T20:42:00Z,MERGED,True,1,1,1,https://github.com/tklengyel,Update LibVMI,1,[],https://github.com/tklengyel/drakvuf/pull/457,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/457#issuecomment-417074270,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,457,2018-08-29T18:49:52Z,2018-08-29T20:41:58Z,2018-08-29T20:42:00Z,MERGED,True,1,1,1,https://github.com/tklengyel,Update LibVMI,1,[],https://github.com/tklengyel/drakvuf/pull/457,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/457#issuecomment-417096686,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,460,2018-09-04T15:25:59Z,2018-09-04T17:36:51Z,2018-09-04T17:36:54Z,MERGED,True,5,1071,6,https://github.com/tklengyel,Relocate Doppelganging shellcode to its own repository,1,[],https://github.com/tklengyel/drakvuf/pull/460,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/460,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,460,2018-09-04T15:25:59Z,2018-09-04T17:36:51Z,2018-09-04T17:36:54Z,MERGED,True,5,1071,6,https://github.com/tklengyel,Relocate Doppelganging shellcode to its own repository,1,[],https://github.com/tklengyel/drakvuf/pull/460,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/460#issuecomment-418412423,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,461,2018-09-04T17:17:24Z,2018-09-05T15:00:20Z,2018-10-23T13:42:08Z,MERGED,True,382,0,7,https://github.com/skvl,BSOD monitor,3,[],https://github.com/tklengyel/drakvuf/pull/461,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/461,"Allows to get notification of bug check (aka BSOD).
NOTE For some reason on x86 there is no notification. Debug in progress.","Allows to get notification of bug check (aka BSOD).
NOTE For some reason on x86 there is no notification. Debug in progress.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,461,2018-09-04T17:17:24Z,2018-09-05T15:00:20Z,2018-10-23T13:42:08Z,MERGED,True,382,0,7,https://github.com/skvl,BSOD monitor,3,[],https://github.com/tklengyel/drakvuf/pull/461,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/461#issuecomment-418448453,"Allows to get notification of bug check (aka BSOD).
NOTE For some reason on x86 there is no notification. Debug in progress.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,461,2018-09-04T17:17:24Z,2018-09-05T15:00:20Z,2018-10-23T13:42:08Z,MERGED,True,382,0,7,https://github.com/skvl,BSOD monitor,3,[],https://github.com/tklengyel/drakvuf/pull/461,https://github.com/skvl,3,https://github.com/tklengyel/drakvuf/pull/461#issuecomment-418452233,"Allows to get notification of bug check (aka BSOD).
NOTE For some reason on x86 there is no notification. Debug in progress.",@tklengyel could You please check why KeBugCheck hook doesn't work on x86.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,461,2018-09-04T17:17:24Z,2018-09-05T15:00:20Z,2018-10-23T13:42:08Z,MERGED,True,382,0,7,https://github.com/skvl,BSOD monitor,3,[],https://github.com/tklengyel/drakvuf/pull/461,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/461#issuecomment-418454889,"Allows to get notification of bug check (aka BSOD).
NOTE For some reason on x86 there is no notification. Debug in progress.",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,461,2018-09-04T17:17:24Z,2018-09-05T15:00:20Z,2018-10-23T13:42:08Z,MERGED,True,382,0,7,https://github.com/skvl,BSOD monitor,3,[],https://github.com/tklengyel/drakvuf/pull/461,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/461#issuecomment-418458588,"Allows to get notification of bug check (aka BSOD).
NOTE For some reason on x86 there is no notification. Debug in progress.",@skvl what do you mean by the hook not working? If it doesn't get triggered it is likely because the entry point of KeBugCheck doesn't get called. Perhaps another function is used?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,461,2018-09-04T17:17:24Z,2018-09-05T15:00:20Z,2018-10-23T13:42:08Z,MERGED,True,382,0,7,https://github.com/skvl,BSOD monitor,3,[],https://github.com/tklengyel/drakvuf/pull/461,https://github.com/skvl,6,https://github.com/tklengyel/drakvuf/pull/461#issuecomment-418463994,"Allows to get notification of bug check (aka BSOD).
NOTE For some reason on x86 there is no notification. Debug in progress.",I have tested both x64 and x86 with this simple driver. So I really think that KeBugCheck is called. But on x86 it doesn't get triggered...,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,461,2018-09-04T17:17:24Z,2018-09-05T15:00:20Z,2018-10-23T13:42:08Z,MERGED,True,382,0,7,https://github.com/skvl,BSOD monitor,3,[],https://github.com/tklengyel/drakvuf/pull/461,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/461#issuecomment-418470821,"Allows to get notification of bug check (aka BSOD).
NOTE For some reason on x86 there is no notification. Debug in progress.",@skvl I would double check that you are hooking the right address. Print the address of KeBugCheck in that driver and compare with the address that got hooked by DRAKVUF.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,461,2018-09-04T17:17:24Z,2018-09-05T15:00:20Z,2018-10-23T13:42:08Z,MERGED,True,382,0,7,https://github.com/skvl,BSOD monitor,3,[],https://github.com/tklengyel/drakvuf/pull/461,https://github.com/skvl,8,https://github.com/tklengyel/drakvuf/pull/461#issuecomment-418477264,"Allows to get notification of bug check (aka BSOD).
NOTE For some reason on x86 there is no notification. Debug in progress.","@tklengyel You are brilliantly right!
But I don't understand what`s the deal.
From debug output:
[BSODMON] [KeBugCheckEx] RVA 0xdef02
        ntoskrnl.exe @ 0x82610000
Physmap populated? 0
Copied trapped page to new location
Activating remapped gfns in the altp2m views!
                Trap added @ PA 0x26eef02 RPA 0xff005f02 Page 9966 for KeBugCheckEx. 
[BSODMON] [KeBugCheck] RVA 0xdeee3
        ntoskrnl.exe @ 0x82610000
                Trap added @ PA 0x26eeee3 RPA 0xff005ee3 Page 9966 for KeBugCheck. 

From WinDbg:
nt!KeBugCheck:
826eeee3 8bff mov edi,edi
...
nt!KeBugCheckEx:
826eef02 8bff mov edi,edi",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,461,2018-09-04T17:17:24Z,2018-09-05T15:00:20Z,2018-10-23T13:42:08Z,MERGED,True,382,0,7,https://github.com/skvl,BSOD monitor,3,[],https://github.com/tklengyel/drakvuf/pull/461,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/461#issuecomment-418479753,"Allows to get notification of bug check (aka BSOD).
NOTE For some reason on x86 there is no notification. Debug in progress.","@skvl So WinDbg should not see the hooks (that's the whole point of DRAKVUF) ;) It does look like DRAKVUF trapped the correct addresses though:

[BSODMON] [KeBugCheck] RVA 0xdeee3
ntoskrnl.exe @ 0x82610000
Trap added @ PA 0x26eeee3 RPA 0xff005ee3 Page 9966 for KeBugCheck.

0x82610000 +  0xdeee3 = 0x826eeee3.
So the hook should be triggered when it gets called. It does look like both hooks you install are on the same page. Can you try adding just the hook for KeBugCheck and see if that makes a difference?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,461,2018-09-04T17:17:24Z,2018-09-05T15:00:20Z,2018-10-23T13:42:08Z,MERGED,True,382,0,7,https://github.com/skvl,BSOD monitor,3,[],https://github.com/tklengyel/drakvuf/pull/461,https://github.com/skvl,10,https://github.com/tklengyel/drakvuf/pull/461#issuecomment-418484712,"Allows to get notification of bug check (aka BSOD).
NOTE For some reason on x86 there is no notification. Debug in progress.",Yes. You are right. I have hooked KeBugCheck2() only on x86 and this works! But now I have some problems with x64. It freezes!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,461,2018-09-04T17:17:24Z,2018-09-05T15:00:20Z,2018-10-23T13:42:08Z,MERGED,True,382,0,7,https://github.com/skvl,BSOD monitor,3,[],https://github.com/tklengyel/drakvuf/pull/461,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/461#issuecomment-418485532,"Allows to get notification of bug check (aka BSOD).
NOTE For some reason on x86 there is no notification. Debug in progress.","I don't know why that would be, your changes should make no difference for x64.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,461,2018-09-04T17:17:24Z,2018-09-05T15:00:20Z,2018-10-23T13:42:08Z,MERGED,True,382,0,7,https://github.com/skvl,BSOD monitor,3,[],https://github.com/tklengyel/drakvuf/pull/461,https://github.com/tklengyel,12,https://github.com/tklengyel/drakvuf/pull/461#issuecomment-418486509,"Allows to get notification of bug check (aka BSOD).
NOTE For some reason on x86 there is no notification. Debug in progress.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,461,2018-09-04T17:17:24Z,2018-09-05T15:00:20Z,2018-10-23T13:42:08Z,MERGED,True,382,0,7,https://github.com/skvl,BSOD monitor,3,[],https://github.com/tklengyel/drakvuf/pull/461,https://github.com/skvl,13,https://github.com/tklengyel/drakvuf/pull/461#issuecomment-418695961,"Allows to get notification of bug check (aka BSOD).
NOTE For some reason on x86 there is no notification. Debug in progress.","It does look like both hooks you install are on the same page.

@tklengyel is this a problem to have multiple hooks on the same page? Should I make drakvuf_add_trap() to return false in such a case?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,461,2018-09-04T17:17:24Z,2018-09-05T15:00:20Z,2018-10-23T13:42:08Z,MERGED,True,382,0,7,https://github.com/skvl,BSOD monitor,3,[],https://github.com/tklengyel/drakvuf/pull/461,https://github.com/skvl,14,https://github.com/tklengyel/drakvuf/pull/461#issuecomment-418703319,"Allows to get notification of bug check (aka BSOD).
NOTE For some reason on x86 there is no notification. Debug in progress.",@tklengyel this is not a freeze! This is just a Windows kernel with debug switched on! So it sits there and waits for WinDbg.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,461,2018-09-04T17:17:24Z,2018-09-05T15:00:20Z,2018-10-23T13:42:08Z,MERGED,True,382,0,7,https://github.com/skvl,BSOD monitor,3,[],https://github.com/tklengyel/drakvuf/pull/461,https://github.com/tklengyel,15,https://github.com/tklengyel/drakvuf/pull/461#issuecomment-418749943,"Allows to get notification of bug check (aka BSOD).
NOTE For some reason on x86 there is no notification. Debug in progress.",@skvl having multiple traps on the same page should be no problem. It was just something I noticed so perhaps worth checking.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,461,2018-09-04T17:17:24Z,2018-09-05T15:00:20Z,2018-10-23T13:42:08Z,MERGED,True,382,0,7,https://github.com/skvl,BSOD monitor,3,[],https://github.com/tklengyel/drakvuf/pull/461,https://github.com/tklengyel,16,https://github.com/tklengyel/drakvuf/pull/461#issuecomment-418749997,"Allows to get notification of bug check (aka BSOD).
NOTE For some reason on x86 there is no notification. Debug in progress.",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,461,2018-09-04T17:17:24Z,2018-09-05T15:00:20Z,2018-10-23T13:42:08Z,MERGED,True,382,0,7,https://github.com/skvl,BSOD monitor,3,[],https://github.com/tklengyel/drakvuf/pull/461,https://github.com/tklengyel,17,https://github.com/tklengyel/drakvuf/pull/461#issuecomment-418759285,"Allows to get notification of bug check (aka BSOD).
NOTE For some reason on x86 there is no notification. Debug in progress.","@skvl this looks good to me as is, does KeBugCheck2 trigger on x86 as expected?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,461,2018-09-04T17:17:24Z,2018-09-05T15:00:20Z,2018-10-23T13:42:08Z,MERGED,True,382,0,7,https://github.com/skvl,BSOD monitor,3,[],https://github.com/tklengyel/drakvuf/pull/461,https://github.com/skvl,18,https://github.com/tklengyel/drakvuf/pull/461#issuecomment-418763105,"Allows to get notification of bug check (aka BSOD).
NOTE For some reason on x86 there is no notification. Debug in progress.","@tklengyel I think yes:
nt!KeBugCheck:
826eeee3 8bff            mov     edi,edi
826eeee5 55              push    ebp
826eeee6 8bec            mov     ebp,esp
826eeee8 33c0            xor     eax,eax
826eeeea 50              push    eax
826eeeeb 50              push    eax
826eeeec 50              push    eax
826eeeed 50              push    eax
826eeeee 50              push    eax
826eeeef ff7508          push    dword ptr [ebp+8]
826eeef2 e8f0050000      call    nt!KeBugCheck2 (826ef4e7)
...
nt!KeBugCheckEx:
826eef02 8bff            mov     edi,edi
826eef04 55              push    ebp
826eef05 8bec            mov     ebp,esp
826eef07 83e4f8          and     esp,0FFFFFFF8h
826eef0a 6a00            push    0
826eef0c ff7518          push    dword ptr [ebp+18h]
826eef0f ff7514          push    dword ptr [ebp+14h]
826eef12 ff7510          push    dword ptr [ebp+10h]
826eef15 ff750c          push    dword ptr [ebp+0Ch]
826eef18 ff7508          push    dword ptr [ebp+8]
826eef1b e8c7050000 call nt!KeBugCheck2 (826ef4e7)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,461,2018-09-04T17:17:24Z,2018-09-05T15:00:20Z,2018-10-23T13:42:08Z,MERGED,True,382,0,7,https://github.com/skvl,BSOD monitor,3,[],https://github.com/tklengyel/drakvuf/pull/461,https://github.com/aoshiken,19,https://github.com/tklengyel/drakvuf/pull/461#issuecomment-419865866,"Allows to get notification of bug check (aka BSOD).
NOTE For some reason on x86 there is no notification. Debug in progress.","My apologies for being late...
@skvl: as you can see below on Windows 7 SP1 x64 platform KeBugCheck calls KeBugCheckEx which  ends up with two branches both of them calling KeBugCheck2 so I'm confident you can set the hook on KeBugCheck2 for both platforms:
kd> u nt!KeBugCheck
nt!KeBugCheck:
fffff800`0289a610 4883ec28           sub     rsp,28h
fffff800`0289a614 e827000000         call    nt!KeBugCheckEx (fffff800`0289a640)

kd> u nt!KeBugCheckEx+0xf5 nt!KeBugCheckEx+0x11c
nt!KeBugCheckEx+0xf5:
fffff800`0289a735 4c8b442450         mov     r8,qword ptr [rsp+50h]
fffff800`0289a73a 488b542448         mov     rdx,qword ptr [rsp+48h]
fffff800`0289a73f e81c7d0e00         call    nt!KeBugCheck2 (fffff800`02982460)
fffff800`0289a744 90                 nop
fffff800`0289a745 48c744242000000000 mov   qword ptr [rsp+20h],0
fffff800`0289a74e 4533c9             xor     r9d,r9d
fffff800`0289a751 4533c0             xor     r8d,r8d
fffff800`0289a754 33d2               xor     edx,edx
fffff800`0289a756 e8057d0e00         call    nt!KeBugCheck2 (fffff800`02982460)
fffff800`0289a75b 90                 nop",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,461,2018-09-04T17:17:24Z,2018-09-05T15:00:20Z,2018-10-23T13:42:08Z,MERGED,True,382,0,7,https://github.com/skvl,BSOD monitor,3,[],https://github.com/tklengyel/drakvuf/pull/461,https://github.com/tklengyel,20,https://github.com/tklengyel/drakvuf/pull/461#issuecomment-419930534,"Allows to get notification of bug check (aka BSOD).
NOTE For some reason on x86 there is no notification. Debug in progress.",@aoshiken would you mind opening a PR adjusting the plugin to just trap KeBugCheck2? Or at least an issue to keep track of it? Thanks!,True,{'THUMBS_UP': ['https://github.com/aoshiken']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,461,2018-09-04T17:17:24Z,2018-09-05T15:00:20Z,2018-10-23T13:42:08Z,MERGED,True,382,0,7,https://github.com/skvl,BSOD monitor,3,[],https://github.com/tklengyel/drakvuf/pull/461,https://github.com/aoshiken,21,https://github.com/tklengyel/drakvuf/pull/461#issuecomment-419937416,"Allows to get notification of bug check (aka BSOD).
NOTE For some reason on x86 there is no notification. Debug in progress.",@tklengyel: ASAP,True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,461,2018-09-04T17:17:24Z,2018-09-05T15:00:20Z,2018-10-23T13:42:08Z,MERGED,True,382,0,7,https://github.com/skvl,BSOD monitor,3,[],https://github.com/tklengyel/drakvuf/pull/461,https://github.com/skvl,22,https://github.com/tklengyel/drakvuf/pull/461#issuecomment-420509736,"Allows to get notification of bug check (aka BSOD).
NOTE For some reason on x86 there is no notification. Debug in progress.",@aoshiken thank You very much!,True,{'THUMBS_UP': ['https://github.com/aoshiken']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,462,2018-09-04T20:54:41Z,2018-09-04T21:06:22Z,2018-09-04T21:06:24Z,MERGED,True,1,1,1,https://github.com/tklengyel,Fix sonar bug,1,[],https://github.com/tklengyel/drakvuf/pull/462,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/462,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,463,2018-09-05T10:20:03Z,2018-09-05T17:02:22Z,2018-09-05T17:02:22Z,MERGED,True,365,261,26,https://github.com/nystilaps,Loading every rekall jsons once per launch,1,[],https://github.com/tklengyel/drakvuf/pull/463,https://github.com/nystilaps,1,https://github.com/tklengyel/drakvuf/pull/463,Loading every rekall jsons once per drakvuf launch,Loading every rekall jsons once per drakvuf launch,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,463,2018-09-05T10:20:03Z,2018-09-05T17:02:22Z,2018-09-05T17:02:22Z,MERGED,True,365,261,26,https://github.com/nystilaps,Loading every rekall jsons once per launch,1,[],https://github.com/tklengyel/drakvuf/pull/463,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/463#issuecomment-418679012,Loading every rekall jsons once per drakvuf launch,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,463,2018-09-05T10:20:03Z,2018-09-05T17:02:22Z,2018-09-05T17:02:22Z,MERGED,True,365,261,26,https://github.com/nystilaps,Loading every rekall jsons once per launch,1,[],https://github.com/tklengyel/drakvuf/pull/463,https://github.com/nystilaps,3,https://github.com/tklengyel/drakvuf/pull/463#issuecomment-418724446,Loading every rekall jsons once per drakvuf launch,This change decreases time for drakvuf initialization by 4-5 seconds out of 6-7 seconds.,True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,463,2018-09-05T10:20:03Z,2018-09-05T17:02:22Z,2018-09-05T17:02:22Z,MERGED,True,365,261,26,https://github.com/nystilaps,Loading every rekall jsons once per launch,1,[],https://github.com/tklengyel/drakvuf/pull/463,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/463#issuecomment-418749532,Loading every rekall jsons once per drakvuf launch,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,463,2018-09-05T10:20:03Z,2018-09-05T17:02:22Z,2018-09-05T17:02:22Z,MERGED,True,365,261,26,https://github.com/nystilaps,Loading every rekall jsons once per launch,1,[],https://github.com/tklengyel/drakvuf/pull/463,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/463#issuecomment-418759400,Loading every rekall jsons once per drakvuf launch,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,463,2018-09-05T10:20:03Z,2018-09-05T17:02:22Z,2018-09-05T17:02:22Z,MERGED,True,365,261,26,https://github.com/nystilaps,Loading every rekall jsons once per launch,1,[],https://github.com/tklengyel/drakvuf/pull/463,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/463#issuecomment-418762599,Loading every rekall jsons once per drakvuf launch,"There is one problem with this restructuring: currently the functions work with any Rekall profile but after this restructure the Rekall profile is hard-coded to be that of the kernel during startup. You introduce just one function that can take arbitrary json, rekall_get_function_rva. If storing the json object and accessing it is that faster I would say just convert all function to take that as input. But I would like to keep the possibility of using any Rekall profile with all these functions.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,463,2018-09-05T10:20:03Z,2018-09-05T17:02:22Z,2018-09-05T17:02:22Z,MERGED,True,365,261,26,https://github.com/nystilaps,Loading every rekall jsons once per launch,1,[],https://github.com/tklengyel/drakvuf/pull/463,https://github.com/nystilaps,7,https://github.com/tklengyel/drakvuf/pull/463#issuecomment-418774521,Loading every rekall jsons once per drakvuf launch,"Ok.
I introduced only one function because there was it was the only one, that was used with custom rekall profile.
I will add rekall_* analogs to other functions too.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,463,2018-09-05T10:20:03Z,2018-09-05T17:02:22Z,2018-09-05T17:02:22Z,MERGED,True,365,261,26,https://github.com/nystilaps,Loading every rekall jsons once per launch,1,[],https://github.com/tklengyel/drakvuf/pull/463,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/463#issuecomment-418783261,Loading every rekall jsons once per drakvuf launch,"I will add rekall_* analogs to other functions too.

I don't like the idea of having two versions of these. Could we just get the current drakvuf_ prefixed functions to take the json object?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,463,2018-09-05T10:20:03Z,2018-09-05T17:02:22Z,2018-09-05T17:02:22Z,MERGED,True,365,261,26,https://github.com/nystilaps,Loading every rekall jsons once per launch,1,[],https://github.com/tklengyel/drakvuf/pull/463,https://github.com/disaykin,9,https://github.com/tklengyel/drakvuf/pull/463#issuecomment-418787530,Loading every rekall jsons once per drakvuf launch,"IMHO, this is not good idea to have current drakvuf_ prefixed functions to take the json object.

API mismatch: most of the drakvuf_ prefixed functions take drakvuf_t object as an argument.
API misusing: some of the drakvuf_ prefixed functions use offsets from its inner rekall profile.
Error prune: plugins can get rekall profile from drakvuf_t or from config structure.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,463,2018-09-05T10:20:03Z,2018-09-05T17:02:22Z,2018-09-05T17:02:22Z,MERGED,True,365,261,26,https://github.com/nystilaps,Loading every rekall jsons once per launch,1,[],https://github.com/tklengyel/drakvuf/pull/463,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/463#issuecomment-418789292,Loading every rekall jsons once per drakvuf launch,"@disaykin I'm ok with having the functions being prefixed with rekall_. But I don't see the point of having two versions of the functions, where one is just a wrapper around the other passing the json object from the drakvuf instance to the other version.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,463,2018-09-05T10:20:03Z,2018-09-05T17:02:22Z,2018-09-05T17:02:22Z,MERGED,True,365,261,26,https://github.com/nystilaps,Loading every rekall jsons once per launch,1,[],https://github.com/tklengyel/drakvuf/pull/463,https://github.com/disaykin,11,https://github.com/tklengyel/drakvuf/pull/463#issuecomment-418791254,Loading every rekall jsons once per drakvuf launch,"The drakvuf_ version have simple API for most use cases. Simplifies code refactoring and changes in implementation. We can simply replace rekall profile by something else without rewriting all the code.
Plus, the client code must not know about where to get rekall profile.
The rekall_ version have lower-level API for more complicated cases (socketmon for now).",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,463,2018-09-05T10:20:03Z,2018-09-05T17:02:22Z,2018-09-05T17:02:22Z,MERGED,True,365,261,26,https://github.com/nystilaps,Loading every rekall jsons once per launch,1,[],https://github.com/tklengyel/drakvuf/pull/463,https://github.com/tklengyel,12,https://github.com/tklengyel/drakvuf/pull/463#issuecomment-418798256,Loading every rekall jsons once per drakvuf launch,"bsodmon/bsodmon.cpp:193:44: error: member access into incomplete type 'struct drakvuf'
    if ( !drakvuf_get_function_rva( drakvuf->rekall_profile_json, syscall_name, &trap->breakpoint.rva) ) throw -1;
                                           ^
../../src/libdrakvuf/libdrakvuf.h:166:16: note: forward declaration of 'drakvuf'
typedef struct drakvuf* drakvuf_t;
               ^
bsodmon/bsodmon.cpp:200:37: error: unused variable 'c' [-Werror,-Wunused-variable]
    const struct filedelete_config* c = static_cast<const struct filedelete_config*>(config);
                                    ^
2 errors generated.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,463,2018-09-05T10:20:03Z,2018-09-05T17:02:22Z,2018-09-05T17:02:22Z,MERGED,True,365,261,26,https://github.com/nystilaps,Loading every rekall jsons once per launch,1,[],https://github.com/tklengyel/drakvuf/pull/463,https://github.com/nystilaps,13,https://github.com/tklengyel/drakvuf/pull/463#issuecomment-418802784,Loading every rekall jsons once per drakvuf launch,"bsodmon.cpp : filedelete_config
Fixed.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,463,2018-09-05T10:20:03Z,2018-09-05T17:02:22Z,2018-09-05T17:02:22Z,MERGED,True,365,261,26,https://github.com/nystilaps,Loading every rekall jsons once per launch,1,[],https://github.com/tklengyel/drakvuf/pull/463,https://github.com/tklengyel,14,https://github.com/tklengyel/drakvuf/pull/463#issuecomment-418804481,Loading every rekall jsons once per drakvuf launch,"@disaykin fine, if you guys see value in having the simple version of the functions (prefixed with drakvuf_) we can do that.
@nystilaps could you add the rekall_ version of the remaining functions too? Then we are good to merge.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,463,2018-09-05T10:20:03Z,2018-09-05T17:02:22Z,2018-09-05T17:02:22Z,MERGED,True,365,261,26,https://github.com/nystilaps,Loading every rekall jsons once per launch,1,[],https://github.com/tklengyel/drakvuf/pull/463,https://github.com/nystilaps,15,https://github.com/tklengyel/drakvuf/pull/463#issuecomment-418804942,Loading every rekall jsons once per drakvuf launch,@tklengyel Variants with rekall_ prefix are already there.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,463,2018-09-05T10:20:03Z,2018-09-05T17:02:22Z,2018-09-05T17:02:22Z,MERGED,True,365,261,26,https://github.com/nystilaps,Loading every rekall jsons once per launch,1,[],https://github.com/tklengyel/drakvuf/pull/463,https://github.com/tklengyel,16,https://github.com/tklengyel/drakvuf/pull/463#issuecomment-418805667,Loading every rekall jsons once per drakvuf launch,"@nystilaps whoops, indeed, just had to refresh :)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,464,2018-09-10T16:21:37Z,2018-09-12T14:07:10Z,2018-09-20T10:38:12Z,MERGED,True,542,15,8,https://github.com/aoshiken,[BSODMON] Leave the 'BugCheck2' as the only hook for x86 and x64 plat…,3,[],https://github.com/tklengyel/drakvuf/pull/464,https://github.com/aoshiken,1,https://github.com/tklengyel/drakvuf/pull/464,"…forms

[BSODMON] Add the official name for the bugcheck code in the log entries","…forms

[BSODMON] Add the official name for the bugcheck code in the log entries",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,464,2018-09-10T16:21:37Z,2018-09-12T14:07:10Z,2018-09-20T10:38:12Z,MERGED,True,542,15,8,https://github.com/aoshiken,[BSODMON] Leave the 'BugCheck2' as the only hook for x86 and x64 plat…,3,[],https://github.com/tklengyel/drakvuf/pull/464,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/464#issuecomment-419973169,"…forms

[BSODMON] Add the official name for the bugcheck code in the log entries",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,464,2018-09-10T16:21:37Z,2018-09-12T14:07:10Z,2018-09-20T10:38:12Z,MERGED,True,542,15,8,https://github.com/aoshiken,[BSODMON] Leave the 'BugCheck2' as the only hook for x86 and x64 plat…,3,[],https://github.com/tklengyel/drakvuf/pull/464,https://github.com/aoshiken,3,https://github.com/tklengyel/drakvuf/pull/464#issuecomment-419973782,"…forms

[BSODMON] Add the official name for the bugcheck code in the log entries","Just FYI, manually tested crashing csrss.exe on Win7 SP1 x64:
1536595913.451151 Started DRAKVUF loop
[BSODMON] TIME:1536595918.485004 VCPU:0 CR3:0x85f9b000,""\Device\HarddiskVolume2\Users\Hong Lee\Desktop\procexp64.exe"" SessionID:1 BugCheckCode:f4 BugCheckName:CRITICAL_OBJECT_TERMINATION BugCheckParameter1:3 BugCheckParameter2:fffffa80035ae720 BugCheckParameter3:fffffa80035aea00 BugCheckParameter4:1",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,464,2018-09-10T16:21:37Z,2018-09-12T14:07:10Z,2018-09-20T10:38:12Z,MERGED,True,542,15,8,https://github.com/aoshiken,[BSODMON] Leave the 'BugCheck2' as the only hook for x86 and x64 plat…,3,[],https://github.com/tklengyel/drakvuf/pull/464,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/464#issuecomment-419986026,"…forms

[BSODMON] Add the official name for the bugcheck code in the log entries",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,464,2018-09-10T16:21:37Z,2018-09-12T14:07:10Z,2018-09-20T10:38:12Z,MERGED,True,542,15,8,https://github.com/aoshiken,[BSODMON] Leave the 'BugCheck2' as the only hook for x86 and x64 plat…,3,[],https://github.com/tklengyel/drakvuf/pull/464,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/464#issuecomment-420055709,"…forms

[BSODMON] Add the official name for the bugcheck code in the log entries",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,464,2018-09-10T16:21:37Z,2018-09-12T14:07:10Z,2018-09-20T10:38:12Z,MERGED,True,542,15,8,https://github.com/aoshiken,[BSODMON] Leave the 'BugCheck2' as the only hook for x86 and x64 plat…,3,[],https://github.com/tklengyel/drakvuf/pull/464,https://github.com/aoshiken,6,https://github.com/tklengyel/drakvuf/pull/464#issuecomment-420172983,"…forms

[BSODMON] Add the official name for the bugcheck code in the log entries",I'll fix the style and blank spaces that Travis complains about...,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,464,2018-09-10T16:21:37Z,2018-09-12T14:07:10Z,2018-09-20T10:38:12Z,MERGED,True,542,15,8,https://github.com/aoshiken,[BSODMON] Leave the 'BugCheck2' as the only hook for x86 and x64 plat…,3,[],https://github.com/tklengyel/drakvuf/pull/464,https://github.com/aoshiken,7,https://github.com/tklengyel/drakvuf/pull/464#issuecomment-420180693,"…forms

[BSODMON] Add the official name for the bugcheck code in the log entries","@tklengyel , I think it'd be useful exiting from drakvuf as soon as a BSOD has been logged, specially if you're using drakvuf with the timeout option.
Would it be safe enough to use drakvuf->interrupt(-1) from inside the plugin?
That makes sense for you?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,464,2018-09-10T16:21:37Z,2018-09-12T14:07:10Z,2018-09-20T10:38:12Z,MERGED,True,542,15,8,https://github.com/aoshiken,[BSODMON] Leave the 'BugCheck2' as the only hook for x86 and x64 plat…,3,[],https://github.com/tklengyel/drakvuf/pull/464,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/464#issuecomment-420270987,"…forms

[BSODMON] Add the official name for the bugcheck code in the log entries","It does, but I would like to make it optional by adding a commandline flag to enable it.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,464,2018-09-10T16:21:37Z,2018-09-12T14:07:10Z,2018-09-20T10:38:12Z,MERGED,True,542,15,8,https://github.com/aoshiken,[BSODMON] Leave the 'BugCheck2' as the only hook for x86 and x64 plat…,3,[],https://github.com/tklengyel/drakvuf/pull/464,https://github.com/aoshiken,9,https://github.com/tklengyel/drakvuf/pull/464#issuecomment-420276477,"…forms

[BSODMON] Add the official name for the bugcheck code in the log entries","Ok, -X (uppercase) would suffice?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,464,2018-09-10T16:21:37Z,2018-09-12T14:07:10Z,2018-09-20T10:38:12Z,MERGED,True,542,15,8,https://github.com/aoshiken,[BSODMON] Leave the 'BugCheck2' as the only hook for x86 and x64 plat…,3,[],https://github.com/tklengyel/drakvuf/pull/464,https://github.com/aoshiken,10,https://github.com/tklengyel/drakvuf/pull/464#issuecomment-420294755,"…forms

[BSODMON] Add the official name for the bugcheck code in the log entries","Successfully compiled and tested in debug mode on my Win7 SP1 x64, I don't know what the problem is with the Jenkins tests.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,464,2018-09-10T16:21:37Z,2018-09-12T14:07:10Z,2018-09-20T10:38:12Z,MERGED,True,542,15,8,https://github.com/aoshiken,[BSODMON] Leave the 'BugCheck2' as the only hook for x86 and x64 plat…,3,[],https://github.com/tklengyel/drakvuf/pull/464,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/464#issuecomment-420426138,"…forms

[BSODMON] Add the official name for the bugcheck code in the log entries",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,464,2018-09-10T16:21:37Z,2018-09-12T14:07:10Z,2018-09-20T10:38:12Z,MERGED,True,542,15,8,https://github.com/aoshiken,[BSODMON] Leave the 'BugCheck2' as the only hook for x86 and x64 plat…,3,[],https://github.com/tklengyel/drakvuf/pull/464,https://github.com/tklengyel,12,https://github.com/tklengyel/drakvuf/pull/464#issuecomment-420447918,"…forms

[BSODMON] Add the official name for the bugcheck code in the log entries",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,464,2018-09-10T16:21:37Z,2018-09-12T14:07:10Z,2018-09-20T10:38:12Z,MERGED,True,542,15,8,https://github.com/aoshiken,[BSODMON] Leave the 'BugCheck2' as the only hook for x86 and x64 plat…,3,[],https://github.com/tklengyel/drakvuf/pull/464,https://github.com/tklengyel,13,https://github.com/tklengyel/drakvuf/pull/464#issuecomment-420454012,"…forms

[BSODMON] Add the official name for the bugcheck code in the log entries",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,464,2018-09-10T16:21:37Z,2018-09-12T14:07:10Z,2018-09-20T10:38:12Z,MERGED,True,542,15,8,https://github.com/aoshiken,[BSODMON] Leave the 'BugCheck2' as the only hook for x86 and x64 plat…,3,[],https://github.com/tklengyel/drakvuf/pull/464,https://github.com/tklengyel,14,https://github.com/tklengyel/drakvuf/pull/464#issuecomment-420657250,"…forms

[BSODMON] Add the official name for the bugcheck code in the log entries",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,468,2018-10-02T11:35:59Z,2018-10-02T23:57:52Z,2018-10-23T13:42:09Z,MERGED,True,510,282,5,https://github.com/skvl,Don't ReadFile on asynchronous files in filedelete plugin,9,[],https://github.com/tklengyel/drakvuf/pull/468,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/468,"In filedelete plugin (ReadFile injection method) it have been noticed that system sometimes crushes. Especially Windows 8 and Windows 10 on WoW64 processes.
After some research it appear that the problem was in WoW64 process while dealing with files opened for asynchronous operations (CreateFile with FILE_FLAG_OVERLAPPED). Thus there is no clear reason why that's happen filtering out such files makes everything to work.
Also allocating buffer in non-paged pool have been added instead a stack allocated one. The buffer allocation occurs on demand. Allocated buffers are used till the end of the system decreasing the number of ExAllocatePoolWithTag injections. That is for several reasons:

The kernel stack is very limited (16 KB for x86 and 24 KB for x64) thus it is possible to cause stack overflow and crash the system.
In non-paged pool it is possible to allocate much more memory (64 KB) for read buffer thus decreasing the number of injections and increasing performance.

Also some code refactoring took a place.","In filedelete plugin (ReadFile injection method) it have been noticed that system sometimes crushes. Especially Windows 8 and Windows 10 on WoW64 processes.
After some research it appear that the problem was in WoW64 process while dealing with files opened for asynchronous operations (CreateFile with FILE_FLAG_OVERLAPPED). Thus there is no clear reason why that's happen filtering out such files makes everything to work.
Also allocating buffer in non-paged pool have been added instead a stack allocated one. The buffer allocation occurs on demand. Allocated buffers are used till the end of the system decreasing the number of ExAllocatePoolWithTag injections. That is for several reasons:

The kernel stack is very limited (16 KB for x86 and 24 KB for x64) thus it is possible to cause stack overflow and crash the system.
In non-paged pool it is possible to allocate much more memory (64 KB) for read buffer thus decreasing the number of injections and increasing performance.

Also some code refactoring took a place.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,468,2018-10-02T11:35:59Z,2018-10-02T23:57:52Z,2018-10-23T13:42:09Z,MERGED,True,510,282,5,https://github.com/skvl,Don't ReadFile on asynchronous files in filedelete plugin,9,[],https://github.com/tklengyel/drakvuf/pull/468,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/468#issuecomment-426241103,"In filedelete plugin (ReadFile injection method) it have been noticed that system sometimes crushes. Especially Windows 8 and Windows 10 on WoW64 processes.
After some research it appear that the problem was in WoW64 process while dealing with files opened for asynchronous operations (CreateFile with FILE_FLAG_OVERLAPPED). Thus there is no clear reason why that's happen filtering out such files makes everything to work.
Also allocating buffer in non-paged pool have been added instead a stack allocated one. The buffer allocation occurs on demand. Allocated buffers are used till the end of the system decreasing the number of ExAllocatePoolWithTag injections. That is for several reasons:

The kernel stack is very limited (16 KB for x86 and 24 KB for x64) thus it is possible to cause stack overflow and crash the system.
In non-paged pool it is possible to allocate much more memory (64 KB) for read buffer thus decreasing the number of injections and increasing performance.

Also some code refactoring took a place.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,468,2018-10-02T11:35:59Z,2018-10-02T23:57:52Z,2018-10-23T13:42:09Z,MERGED,True,510,282,5,https://github.com/skvl,Don't ReadFile on asynchronous files in filedelete plugin,9,[],https://github.com/tklengyel/drakvuf/pull/468,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/468#issuecomment-426372835,"In filedelete plugin (ReadFile injection method) it have been noticed that system sometimes crushes. Especially Windows 8 and Windows 10 on WoW64 processes.
After some research it appear that the problem was in WoW64 process while dealing with files opened for asynchronous operations (CreateFile with FILE_FLAG_OVERLAPPED). Thus there is no clear reason why that's happen filtering out such files makes everything to work.
Also allocating buffer in non-paged pool have been added instead a stack allocated one. The buffer allocation occurs on demand. Allocated buffers are used till the end of the system decreasing the number of ExAllocatePoolWithTag injections. That is for several reasons:

The kernel stack is very limited (16 KB for x86 and 24 KB for x64) thus it is possible to cause stack overflow and crash the system.
In non-paged pool it is possible to allocate much more memory (64 KB) for read buffer thus decreasing the number of injections and increasing performance.

Also some code refactoring took a place.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,468,2018-10-02T11:35:59Z,2018-10-02T23:57:52Z,2018-10-23T13:42:09Z,MERGED,True,510,282,5,https://github.com/skvl,Don't ReadFile on asynchronous files in filedelete plugin,9,[],https://github.com/tklengyel/drakvuf/pull/468,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/468#issuecomment-426417128,"In filedelete plugin (ReadFile injection method) it have been noticed that system sometimes crushes. Especially Windows 8 and Windows 10 on WoW64 processes.
After some research it appear that the problem was in WoW64 process while dealing with files opened for asynchronous operations (CreateFile with FILE_FLAG_OVERLAPPED). Thus there is no clear reason why that's happen filtering out such files makes everything to work.
Also allocating buffer in non-paged pool have been added instead a stack allocated one. The buffer allocation occurs on demand. Allocated buffers are used till the end of the system decreasing the number of ExAllocatePoolWithTag injections. That is for several reasons:

The kernel stack is very limited (16 KB for x86 and 24 KB for x64) thus it is possible to cause stack overflow and crash the system.
In non-paged pool it is possible to allocate much more memory (64 KB) for read buffer thus decreasing the number of injections and increasing performance.

Also some code refactoring took a place.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,468,2018-10-02T11:35:59Z,2018-10-02T23:57:52Z,2018-10-23T13:42:09Z,MERGED,True,510,282,5,https://github.com/skvl,Don't ReadFile on asynchronous files in filedelete plugin,9,[],https://github.com/tklengyel/drakvuf/pull/468,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/468#issuecomment-426469046,"In filedelete plugin (ReadFile injection method) it have been noticed that system sometimes crushes. Especially Windows 8 and Windows 10 on WoW64 processes.
After some research it appear that the problem was in WoW64 process while dealing with files opened for asynchronous operations (CreateFile with FILE_FLAG_OVERLAPPED). Thus there is no clear reason why that's happen filtering out such files makes everything to work.
Also allocating buffer in non-paged pool have been added instead a stack allocated one. The buffer allocation occurs on demand. Allocated buffers are used till the end of the system decreasing the number of ExAllocatePoolWithTag injections. That is for several reasons:

The kernel stack is very limited (16 KB for x86 and 24 KB for x64) thus it is possible to cause stack overflow and crash the system.
In non-paged pool it is possible to allocate much more memory (64 KB) for read buffer thus decreasing the number of injections and increasing performance.

Also some code refactoring took a place.",Thanks!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,469,2018-10-03T13:09:20Z,2018-10-03T18:59:46Z,2018-10-23T13:42:09Z,MERGED,True,15,2,1,https://github.com/skvl,plugins/filedelete: Read file via '_SECTION_OBJECT_POINTERS' if ReadFile injection failed,1,[],https://github.com/tklengyel/drakvuf/pull/469,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/469,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,469,2018-10-03T13:09:20Z,2018-10-03T18:59:46Z,2018-10-23T13:42:09Z,MERGED,True,15,2,1,https://github.com/skvl,plugins/filedelete: Read file via '_SECTION_OBJECT_POINTERS' if ReadFile injection failed,1,[],https://github.com/tklengyel/drakvuf/pull/469,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/469#issuecomment-426703077,,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,469,2018-10-03T13:09:20Z,2018-10-03T18:59:46Z,2018-10-23T13:42:09Z,MERGED,True,15,2,1,https://github.com/skvl,plugins/filedelete: Read file via '_SECTION_OBJECT_POINTERS' if ReadFile injection failed,1,[],https://github.com/tklengyel/drakvuf/pull/469,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/469#issuecomment-426703087,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,469,2018-10-03T13:09:20Z,2018-10-03T18:59:46Z,2018-10-23T13:42:09Z,MERGED,True,15,2,1,https://github.com/skvl,plugins/filedelete: Read file via '_SECTION_OBJECT_POINTERS' if ReadFile injection failed,1,[],https://github.com/tklengyel/drakvuf/pull/469,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/469#issuecomment-426756262,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,470,2018-10-03T19:00:02Z,2018-10-03T19:20:03Z,2018-10-03T19:20:06Z,MERGED,True,2,2,2,https://github.com/tklengyel,Update LibVMI,1,[],https://github.com/tklengyel/drakvuf/pull/470,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/470,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,471,2018-10-17T12:04:57Z,2018-10-18T16:06:22Z,2018-10-18T16:06:33Z,CLOSED,False,27,4,1,https://github.com/disaykin,Add option '-J' for start-plugins-before-injection mode.,1,[],https://github.com/tklengyel/drakvuf/pull/471,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/471,"Plugins initialization takes some time. As a result,
Drakvuf may misses some of the events that occur at the
beginning of the launch of the program being injected.","Plugins initialization takes some time. As a result,
Drakvuf may misses some of the events that occur at the
beginning of the launch of the program being injected.",True,{'THUMBS_UP': ['https://github.com/masthoon']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,471,2018-10-17T12:04:57Z,2018-10-18T16:06:22Z,2018-10-18T16:06:33Z,CLOSED,False,27,4,1,https://github.com/disaykin,Add option '-J' for start-plugins-before-injection mode.,1,[],https://github.com/tklengyel/drakvuf/pull/471,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/471#issuecomment-430622906,"Plugins initialization takes some time. As a result,
Drakvuf may misses some of the events that occur at the
beginning of the launch of the program being injected.","After a successful injection the VM is paused while the plugins are starting. I'm not sure how can events be missed then. In fact, -w was added to not record events until the injected process actually starts running.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,471,2018-10-17T12:04:57Z,2018-10-18T16:06:22Z,2018-10-18T16:06:33Z,CLOSED,False,27,4,1,https://github.com/disaykin,Add option '-J' for start-plugins-before-injection mode.,1,[],https://github.com/tklengyel/drakvuf/pull/471,https://github.com/disaykin,3,https://github.com/tklengyel/drakvuf/pull/471#issuecomment-430658138,"Plugins initialization takes some time. As a result,
Drakvuf may misses some of the events that occur at the
beginning of the launch of the program being injected.","I think this situation has at least two races:

while we wait for return from CreateProcessA for creation status and PID of created process, this newly created process can already be executing on the second vCPU.
while drakvuf process executes from drakvuf_interrupt() to drakvuf_pause() the observable VM can continue executing on another physical CPU.

Second race may be possible eliminated by call drakvuf_pause from injector_int3_cb, but first race can not.
Or I misunderstood?
In any case I have a sample application which calls CPUID instruction on first line in main(). And this call does not detected by drakvuf. If I add sleep(1) instruction before CPUID call, drakvuf successfully detects it.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,471,2018-10-17T12:04:57Z,2018-10-18T16:06:22Z,2018-10-18T16:06:33Z,CLOSED,False,27,4,1,https://github.com/disaykin,Add option '-J' for start-plugins-before-injection mode.,1,[],https://github.com/tklengyel/drakvuf/pull/471,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/471#issuecomment-430661922,"Plugins initialization takes some time. As a result,
Drakvuf may misses some of the events that occur at the
beginning of the launch of the program being injected.","while we wait for return from CreateProcessA for creation status and PID of created process, this newly created process can already be executing on the second vCPU.

Interesting, I didn't consider this to be possible. I think the proper solution in this case would be to add an additional trap inside the kernel to catch when the process structure finished being initialized and read the PID/TID info from there. That way the injector can return at a point where we know the injection worked but definitely before the process had a chance to be scheduled. We still need to trap on the userspace return to clear up the stack though, but that could be done in a injector_cleanup function. Thoughts?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,471,2018-10-17T12:04:57Z,2018-10-18T16:06:22Z,2018-10-18T16:06:33Z,CLOSED,False,27,4,1,https://github.com/disaykin,Add option '-J' for start-plugins-before-injection mode.,1,[],https://github.com/tklengyel/drakvuf/pull/471,https://github.com/disaykin,5,https://github.com/tklengyel/drakvuf/pull/471#issuecomment-430721808,"Plugins initialization takes some time. As a result,
Drakvuf may misses some of the events that occur at the
beginning of the launch of the program being injected.",I think this is more complex and fragile way to do a simple thing. And I don't know how to do it.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,471,2018-10-17T12:04:57Z,2018-10-18T16:06:22Z,2018-10-18T16:06:33Z,CLOSED,False,27,4,1,https://github.com/disaykin,Add option '-J' for start-plugins-before-injection mode.,1,[],https://github.com/tklengyel/drakvuf/pull/471,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/471#issuecomment-430739239,"Plugins initialization takes some time. As a result,
Drakvuf may misses some of the events that occur at the
beginning of the launch of the program being injected.","I guess it's a bit complex. Let me think a bit about it.. my only concern with starting the plugins before injection is that we get a lot of noise this way - for example, even if the injection fails the output still has a bunch of things recorded, which doesn't look right.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,471,2018-10-17T12:04:57Z,2018-10-18T16:06:22Z,2018-10-18T16:06:33Z,CLOSED,False,27,4,1,https://github.com/disaykin,Add option '-J' for start-plugins-before-injection mode.,1,[],https://github.com/tklengyel/drakvuf/pull/471,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/471#issuecomment-430871633,"Plugins initialization takes some time. As a result,
Drakvuf may misses some of the events that occur at the
beginning of the launch of the program being injected.",@disaykin thoughts on #472 ?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,471,2018-10-17T12:04:57Z,2018-10-18T16:06:22Z,2018-10-18T16:06:33Z,CLOSED,False,27,4,1,https://github.com/disaykin,Add option '-J' for start-plugins-before-injection mode.,1,[],https://github.com/tklengyel/drakvuf/pull/471,https://github.com/drakvuf-jenkins,8,https://github.com/tklengyel/drakvuf/pull/471#issuecomment-430871636,"Plugins initialization takes some time. As a result,
Drakvuf may misses some of the events that occur at the
beginning of the launch of the program being injected.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,471,2018-10-17T12:04:57Z,2018-10-18T16:06:22Z,2018-10-18T16:06:33Z,CLOSED,False,27,4,1,https://github.com/disaykin,Add option '-J' for start-plugins-before-injection mode.,1,[],https://github.com/tklengyel/drakvuf/pull/471,https://github.com/disaykin,9,https://github.com/tklengyel/drakvuf/pull/471#issuecomment-430897564,"Plugins initialization takes some time. As a result,
Drakvuf may misses some of the events that occur at the
beginning of the launch of the program being injected.",@tklengyel Great job. I leave some notes on it.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,471,2018-10-17T12:04:57Z,2018-10-18T16:06:22Z,2018-10-18T16:06:33Z,CLOSED,False,27,4,1,https://github.com/disaykin,Add option '-J' for start-plugins-before-injection mode.,1,[],https://github.com/tklengyel/drakvuf/pull/471,https://github.com/disaykin,10,https://github.com/tklengyel/drakvuf/pull/471#issuecomment-431067835,"Plugins initialization takes some time. As a result,
Drakvuf may misses some of the events that occur at the
beginning of the launch of the program being injected.","I found some problems with this PR, so I close it.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,472,2018-10-18T04:28:36Z,2018-10-19T14:28:58Z,2018-10-19T15:38:18Z,MERGED,True,199,173,15,https://github.com/tklengyel,Listen on CR3 event during injection to catch new process,1,[],https://github.com/tklengyel/drakvuf/pull/472,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/472,"PR #471 identified a race-condition in which a multi-vCPU guest can start executing the injected process before returning to the trapped userspace address. This is problematic because events of interest can be missed while the process executes as the plugins haven't yet started. In this PR we continue listening to CR3 events in injector and if the injected process is detected to be running, the loop is broken and start_app returns. To allow the trapped userspace stack to be fixed-up a final cleanup needs to be called.","PR #471 identified a race-condition in which a multi-vCPU guest can start executing the injected process before returning to the trapped userspace address. This is problematic because events of interest can be missed while the process executes as the plugins haven't yet started. In this PR we continue listening to CR3 events in injector and if the injected process is detected to be running, the loop is broken and start_app returns. To allow the trapped userspace stack to be fixed-up a final cleanup needs to be called.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,473,2018-10-19T15:41:48Z,2018-10-19T22:18:54Z,2018-10-19T22:18:56Z,MERGED,True,8,11,2,https://github.com/tklengyel,Minor fixes in injector,1,[],https://github.com/tklengyel/drakvuf/pull/473,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/473,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,473,2018-10-19T15:41:48Z,2018-10-19T22:18:54Z,2018-10-19T22:18:56Z,MERGED,True,8,11,2,https://github.com/tklengyel,Minor fixes in injector,1,[],https://github.com/tklengyel/drakvuf/pull/473,https://github.com/disaykin,2,https://github.com/tklengyel/drakvuf/pull/473#issuecomment-431408220,,wait_for_process = optarg; => wait_for_process = 1;,True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,473,2018-10-19T15:41:48Z,2018-10-19T22:18:54Z,2018-10-19T22:18:56Z,MERGED,True,8,11,2,https://github.com/tklengyel,Minor fixes in injector,1,[],https://github.com/tklengyel/drakvuf/pull/473,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/473#issuecomment-431409736,,"@disaykin please open an issue for the other problem you noted when there are processes with the same name/ppid running already, just so we can keep track of it and it's possible solutions",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,473,2018-10-19T15:41:48Z,2018-10-19T22:18:54Z,2018-10-19T22:18:56Z,MERGED,True,8,11,2,https://github.com/tklengyel,Minor fixes in injector,1,[],https://github.com/tklengyel/drakvuf/pull/473,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/473#issuecomment-431412545,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,473,2018-10-19T15:41:48Z,2018-10-19T22:18:54Z,2018-10-19T22:18:56Z,MERGED,True,8,11,2,https://github.com/tklengyel,Minor fixes in injector,1,[],https://github.com/tklengyel/drakvuf/pull/473,https://github.com/disaykin,5,https://github.com/tklengyel/drakvuf/pull/473#issuecomment-431423528,,#474,True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,473,2018-10-19T15:41:48Z,2018-10-19T22:18:54Z,2018-10-19T22:18:56Z,MERGED,True,8,11,2,https://github.com/tklengyel,Minor fixes in injector,1,[],https://github.com/tklengyel/drakvuf/pull/473,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/473#issuecomment-431514768,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,475,2018-10-19T23:15:26Z,2018-10-20T14:28:55Z,2018-10-20T18:02:42Z,MERGED,True,21,12,1,https://github.com/disaykin,Get current time once per event,1,[],https://github.com/tklengyel/drakvuf/pull/475,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/475,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,475,2018-10-19T23:15:26Z,2018-10-20T14:28:55Z,2018-10-20T18:02:42Z,MERGED,True,21,12,1,https://github.com/disaykin,Get current time once per event,1,[],https://github.com/tklengyel/drakvuf/pull/475,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/475#issuecomment-431586203,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,475,2018-10-19T23:15:26Z,2018-10-20T14:28:55Z,2018-10-20T18:02:42Z,MERGED,True,21,12,1,https://github.com/disaykin,Get current time once per event,1,[],https://github.com/tklengyel/drakvuf/pull/475,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/475#issuecomment-431586206,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,476,2018-10-19T23:26:11Z,2018-10-20T15:08:24Z,2018-10-20T18:03:03Z,MERGED,True,59,31,1,https://github.com/disaykin,Do not lock drakvuf for the whole injection process.,1,[],https://github.com/tklengyel/drakvuf/pull/476,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/476,Lock in injection callbacks only.,Lock in injection callbacks only.,True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,476,2018-10-19T23:26:11Z,2018-10-20T15:08:24Z,2018-10-20T18:03:03Z,MERGED,True,59,31,1,https://github.com/disaykin,Do not lock drakvuf for the whole injection process.,1,[],https://github.com/tklengyel/drakvuf/pull/476,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/476#issuecomment-431586439,Lock in injection callbacks only.,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,476,2018-10-19T23:26:11Z,2018-10-20T15:08:24Z,2018-10-20T18:03:03Z,MERGED,True,59,31,1,https://github.com/disaykin,Do not lock drakvuf for the whole injection process.,1,[],https://github.com/tklengyel/drakvuf/pull/476,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/476#issuecomment-431586440,Lock in injection callbacks only.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,476,2018-10-19T23:26:11Z,2018-10-20T15:08:24Z,2018-10-20T18:03:03Z,MERGED,True,59,31,1,https://github.com/disaykin,Do not lock drakvuf for the whole injection process.,1,[],https://github.com/tklengyel/drakvuf/pull/476,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/476#issuecomment-431588420,Lock in injection callbacks only.,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,476,2018-10-19T23:26:11Z,2018-10-20T15:08:24Z,2018-10-20T18:03:03Z,MERGED,True,59,31,1,https://github.com/disaykin,Do not lock drakvuf for the whole injection process.,1,[],https://github.com/tklengyel/drakvuf/pull/476,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/476#issuecomment-431589304,Lock in injection callbacks only.,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,477,2018-10-19T23:31:36Z,2018-10-20T14:33:11Z,2018-10-20T18:03:13Z,MERGED,True,18,25,9,https://github.com/disaykin,Use drakvuf_get_page_mode instead of vmi_get_page_mode in plugins,1,[],https://github.com/tklengyel/drakvuf/pull/477,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/477,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,477,2018-10-19T23:31:36Z,2018-10-20T14:33:11Z,2018-10-20T18:03:13Z,MERGED,True,18,25,9,https://github.com/disaykin,Use drakvuf_get_page_mode instead of vmi_get_page_mode in plugins,1,[],https://github.com/tklengyel/drakvuf/pull/477,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/477#issuecomment-431586311,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,477,2018-10-19T23:31:36Z,2018-10-20T14:33:11Z,2018-10-20T18:03:13Z,MERGED,True,18,25,9,https://github.com/disaykin,Use drakvuf_get_page_mode instead of vmi_get_page_mode in plugins,1,[],https://github.com/tklengyel/drakvuf/pull/477,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/477#issuecomment-431586314,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,478,2018-10-23T13:40:20Z,2018-10-23T13:56:26Z,2018-12-07T08:53:01Z,MERGED,True,0,3,1,https://github.com/skvl,filedelete: fix bogus alignment check on _SUBSECTION's _MMPTEs,1,[],https://github.com/tklengyel/drakvuf/pull/478,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/478,"The array is heap allocated and not guaranteed to be page aligned.
This addresses Issue #467.","The array is heap allocated and not guaranteed to be page aligned.
This addresses Issue #467.",True,{'THUMBS_UP': ['https://github.com/aoshiken']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,479,2018-10-24T19:09:47Z,2018-10-25T15:55:36Z,2018-10-25T15:55:39Z,MERGED,True,31,3,3,https://github.com/tklengyel,Compile doppelganging injection optionally,1,[],https://github.com/tklengyel/drakvuf/pull/479,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/479,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,480,2018-10-25T23:28:00Z,2018-10-29T15:40:52Z,2018-10-29T15:54:40Z,MERGED,True,101,103,7,https://github.com/razvan-cojocaru,Painless Xen 4.12 builds + minor C++ improvements,15,[],https://github.com/tklengyel/drakvuf/pull/480,https://github.com/razvan-cojocaru,1,https://github.com/tklengyel/drakvuf/pull/480,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,480,2018-10-25T23:28:00Z,2018-10-29T15:40:52Z,2018-10-29T15:54:40Z,MERGED,True,101,103,7,https://github.com/razvan-cojocaru,Painless Xen 4.12 builds + minor C++ improvements,15,[],https://github.com/tklengyel/drakvuf/pull/480,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/480#issuecomment-433240973,,"Thanks for the patches :) There are some compilation issues it seems like:
drakvuf.cpp:211:13: error: explicitly assigning value of variable of type 'int' to itself [-Werror,-Wself-assign]
timeout = timeout;
~~~~~~~ ^ ~~~~~~~
drakvuf.cpp:213:18: error: explicitly assigning value of variable of type 'bool' to itself [-Werror,-Wself-assign]
leave_paused = leave_paused;
~~~~~~~~~~~~ ^ ~~~~~~~~~~~~
2 errors generated.
I think there is a C++ specific syntax that should be used for initializing these variables in the function declaration instead of the function body.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,480,2018-10-25T23:28:00Z,2018-10-29T15:40:52Z,2018-10-29T15:54:40Z,MERGED,True,101,103,7,https://github.com/razvan-cojocaru,Painless Xen 4.12 builds + minor C++ improvements,15,[],https://github.com/tklengyel/drakvuf/pull/480,https://github.com/razvan-cojocaru,3,https://github.com/tklengyel/drakvuf/pull/480#issuecomment-433287901,,"Oh, right. Sorry about that.
Yes, you're thinking about initializer lists for the constructors:
X::X(type param) : member { param }
{
}
or with the older C++ standard (pre C++11) that didn't know about curly brace initialization:
X::X(type param) : member( param )
{
}",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,480,2018-10-25T23:28:00Z,2018-10-29T15:40:52Z,2018-10-29T15:54:40Z,MERGED,True,101,103,7,https://github.com/razvan-cojocaru,Painless Xen 4.12 builds + minor C++ improvements,15,[],https://github.com/tklengyel/drakvuf/pull/480,https://github.com/razvan-cojocaru,4,https://github.com/tklengyel/drakvuf/pull/480#issuecomment-433439575,,I believe that the last failed check is due to external circumstances (looking at what logs are accesible to me it appears that some package that the test needs could not be installed). Could you re-run it?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,480,2018-10-25T23:28:00Z,2018-10-29T15:40:52Z,2018-10-29T15:54:40Z,MERGED,True,101,103,7,https://github.com/razvan-cojocaru,Painless Xen 4.12 builds + minor C++ improvements,15,[],https://github.com/tklengyel/drakvuf/pull/480,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/480#issuecomment-433442638,,"Indeed, that was just a fluke. My Jenkins test machine is busy right now with some other tasks but I'll aim to get this PR tested & merged by end of the weekend. Thanks again :)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,480,2018-10-25T23:28:00Z,2018-10-29T15:40:52Z,2018-10-29T15:54:40Z,MERGED,True,101,103,7,https://github.com/razvan-cojocaru,Painless Xen 4.12 builds + minor C++ improvements,15,[],https://github.com/tklengyel/drakvuf/pull/480,https://github.com/razvan-cojocaru,6,https://github.com/tklengyel/drakvuf/pull/480#issuecomment-433443016,,"No problem, thanks for the help with debugging. :)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,480,2018-10-25T23:28:00Z,2018-10-29T15:40:52Z,2018-10-29T15:54:40Z,MERGED,True,101,103,7,https://github.com/razvan-cojocaru,Painless Xen 4.12 builds + minor C++ improvements,15,[],https://github.com/tklengyel/drakvuf/pull/480,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/480#issuecomment-433930624,,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,480,2018-10-25T23:28:00Z,2018-10-29T15:40:52Z,2018-10-29T15:54:40Z,MERGED,True,101,103,7,https://github.com/razvan-cojocaru,Painless Xen 4.12 builds + minor C++ improvements,15,[],https://github.com/tklengyel/drakvuf/pull/480,https://github.com/drakvuf-jenkins,8,https://github.com/tklengyel/drakvuf/pull/480#issuecomment-433931367,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,480,2018-10-25T23:28:00Z,2018-10-29T15:40:52Z,2018-10-29T15:54:40Z,MERGED,True,101,103,7,https://github.com/razvan-cojocaru,Painless Xen 4.12 builds + minor C++ improvements,15,[],https://github.com/tklengyel/drakvuf/pull/480,https://github.com/razvan-cojocaru,9,https://github.com/tklengyel/drakvuf/pull/480#issuecomment-433956482,,"I see some tests failed again, is this a temporary thing again or should I correct something?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,480,2018-10-25T23:28:00Z,2018-10-29T15:40:52Z,2018-10-29T15:54:40Z,MERGED,True,101,103,7,https://github.com/razvan-cojocaru,Painless Xen 4.12 builds + minor C++ improvements,15,[],https://github.com/tklengyel/drakvuf/pull/480,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/480#issuecomment-433957889,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,480,2018-10-25T23:28:00Z,2018-10-29T15:40:52Z,2018-10-29T15:54:40Z,MERGED,True,101,103,7,https://github.com/razvan-cojocaru,Painless Xen 4.12 builds + minor C++ improvements,15,[],https://github.com/tklengyel/drakvuf/pull/480,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/480#issuecomment-433958713,,@razvan-cojocaru The jenkins tests requires a couple runs usually so unless it repeatedly (ie. reproducibly) fails it's not a major concern.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,480,2018-10-25T23:28:00Z,2018-10-29T15:40:52Z,2018-10-29T15:54:40Z,MERGED,True,101,103,7,https://github.com/razvan-cojocaru,Painless Xen 4.12 builds + minor C++ improvements,15,[],https://github.com/tklengyel/drakvuf/pull/480,https://github.com/tklengyel,12,https://github.com/tklengyel/drakvuf/pull/480#issuecomment-433959932,,And we are good to go :) Thanks!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,480,2018-10-25T23:28:00Z,2018-10-29T15:40:52Z,2018-10-29T15:54:40Z,MERGED,True,101,103,7,https://github.com/razvan-cojocaru,Painless Xen 4.12 builds + minor C++ improvements,15,[],https://github.com/tklengyel/drakvuf/pull/480,https://github.com/razvan-cojocaru,13,https://github.com/tklengyel/drakvuf/pull/480#issuecomment-433965552,,No problem! :),True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,481,2018-10-26T19:42:55Z,2018-10-29T15:47:21Z,2018-10-29T15:47:21Z,MERGED,True,0,198,2,https://github.com/disaykin,Remove unused code from libdrakvuf,1,[],https://github.com/tklengyel/drakvuf/pull/481,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/481,,,True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,481,2018-10-26T19:42:55Z,2018-10-29T15:47:21Z,2018-10-29T15:47:21Z,MERGED,True,0,198,2,https://github.com/disaykin,Remove unused code from libdrakvuf,1,[],https://github.com/tklengyel/drakvuf/pull/481,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/481#issuecomment-433960166,,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,481,2018-10-26T19:42:55Z,2018-10-29T15:47:21Z,2018-10-29T15:47:21Z,MERGED,True,0,198,2,https://github.com/disaykin,Remove unused code from libdrakvuf,1,[],https://github.com/tklengyel/drakvuf/pull/481,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/481#issuecomment-433960185,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,481,2018-10-26T19:42:55Z,2018-10-29T15:47:21Z,2018-10-29T15:47:21Z,MERGED,True,0,198,2,https://github.com/disaykin,Remove unused code from libdrakvuf,1,[],https://github.com/tklengyel/drakvuf/pull/481,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/481#issuecomment-433962522,,Thanks!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,482,2018-10-30T12:42:56Z,2018-10-30T14:32:47Z,2018-11-02T09:19:49Z,MERGED,True,37,28,1,https://github.com/aoshiken,Remove memory leaks in win-exports,2,[],https://github.com/tklengyel/drakvuf/pull/482,https://github.com/aoshiken,1,https://github.com/tklengyel/drakvuf/pull/482,"Fix some memory leaks when using unicode strings in win-exports.c, these leaks are located inside a loop so IMHO are of enough importance.","Fix some memory leaks when using unicode strings in win-exports.c, these leaks are located inside a loop so IMHO are of enough importance.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,482,2018-10-30T12:42:56Z,2018-10-30T14:32:47Z,2018-11-02T09:19:49Z,MERGED,True,37,28,1,https://github.com/aoshiken,Remove memory leaks in win-exports,2,[],https://github.com/tklengyel/drakvuf/pull/482,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/482#issuecomment-434304549,"Fix some memory leaks when using unicode strings in win-exports.c, these leaks are located inside a loop so IMHO are of enough importance.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,482,2018-10-30T12:42:56Z,2018-10-30T14:32:47Z,2018-11-02T09:19:49Z,MERGED,True,37,28,1,https://github.com/aoshiken,Remove memory leaks in win-exports,2,[],https://github.com/tklengyel/drakvuf/pull/482,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/482#issuecomment-434304571,"Fix some memory leaks when using unicode strings in win-exports.c, these leaks are located inside a loop so IMHO are of enough importance.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,484,2018-11-08T14:22:45Z,2018-11-12T03:38:13Z,2018-11-12T19:38:55Z,MERGED,True,250,207,12,https://github.com/disaykin,SOCKETMON plugin initialization refactored.,1,[],https://github.com/tklengyel/drakvuf/pull/484,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/484,"Make full initialization in constructor (while VM is paused).
Remove number of tries and other instabilities.","Make full initialization in constructor (while VM is paused).
Remove number of tries and other instabilities.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,484,2018-11-08T14:22:45Z,2018-11-12T03:38:13Z,2018-11-12T19:38:55Z,MERGED,True,250,207,12,https://github.com/disaykin,SOCKETMON plugin initialization refactored.,1,[],https://github.com/tklengyel/drakvuf/pull/484,https://github.com/aoshiken,2,https://github.com/tklengyel/drakvuf/pull/484#issuecomment-437297845,"Make full initialization in constructor (while VM is paused).
Remove number of tries and other instabilities.","Dmitry,
I'm taking a look from my mobile so probably I'm missing something but it seems that you're setting the traps only on plugin instantiation loosing all newly created processes or the old ones which will load the DLL later (that was the point of the previous CR3 trap).
Am I right?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,484,2018-11-08T14:22:45Z,2018-11-12T03:38:13Z,2018-11-12T19:38:55Z,MERGED,True,250,207,12,https://github.com/disaykin,SOCKETMON plugin initialization refactored.,1,[],https://github.com/tklengyel/drakvuf/pull/484,https://github.com/disaykin,3,https://github.com/tklengyel/drakvuf/pull/484#issuecomment-437389514,"Make full initialization in constructor (while VM is paused).
Remove number of tries and other instabilities.","Previous CR3 trap looks for the first suitable process only. This approach assumes that all processes use dnsapi.dll loaded at the same physical address.
The new approach takes the same assumptions + the fact that this library already loaded by windows services.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,484,2018-11-08T14:22:45Z,2018-11-12T03:38:13Z,2018-11-12T19:38:55Z,MERGED,True,250,207,12,https://github.com/disaykin,SOCKETMON plugin initialization refactored.,1,[],https://github.com/tklengyel/drakvuf/pull/484,https://github.com/disaykin,4,https://github.com/tklengyel/drakvuf/pull/484#issuecomment-437416771,"Make full initialization in constructor (while VM is paused).
Remove number of tries and other instabilities.","Alfredo,
So, my patch rewrites possibly incorrect solution. What do you think?",True,{'THUMBS_UP': ['https://github.com/aoshiken']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,484,2018-11-08T14:22:45Z,2018-11-12T03:38:13Z,2018-11-12T19:38:55Z,MERGED,True,250,207,12,https://github.com/disaykin,SOCKETMON plugin initialization refactored.,1,[],https://github.com/tklengyel/drakvuf/pull/484,https://github.com/aoshiken,5,https://github.com/tklengyel/drakvuf/pull/484#issuecomment-437502020,"Make full initialization in constructor (while VM is paused).
Remove number of tries and other instabilities.","but your traps are set on virtual addresses not the physical ones, right?
I haven't noticed any usage of vmi_translate_uv2p so I don't see how the trap will be called when the same DLL is loaded into another virtual address into another process.
I guess I'm missing something",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,484,2018-11-08T14:22:45Z,2018-11-12T03:38:13Z,2018-11-12T19:38:55Z,MERGED,True,250,207,12,https://github.com/disaykin,SOCKETMON plugin initialization refactored.,1,[],https://github.com/tklengyel/drakvuf/pull/484,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/484#issuecomment-437504959,"Make full initialization in constructor (while VM is paused).
Remove number of tries and other instabilities.","@aoshiken all traps are set on physical addresses underneath. The only question is, does Windows load this dll into each process by sharing the underlying memory or it loads separate copies into each process. My bet is on that the memory is all shared, so you trap it in one process' VA and it will trap for all processes even if it was mapped to a different VA because they all share the memory  underneath. But that's just my guess.",True,{'THUMBS_UP': ['https://github.com/aoshiken']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,484,2018-11-08T14:22:45Z,2018-11-12T03:38:13Z,2018-11-12T19:38:55Z,MERGED,True,250,207,12,https://github.com/disaykin,SOCKETMON plugin initialization refactored.,1,[],https://github.com/tklengyel/drakvuf/pull/484,https://github.com/aoshiken,7,https://github.com/tklengyel/drakvuf/pull/484#issuecomment-437530612,"Make full initialization in constructor (while VM is paused).
Remove number of tries and other instabilities.","@tklengyel ahaaa! That's the point, good to know, better late than never, thank you both :)
Regarding how Windows uses the DLLs, if I recall correctly the DLLs are located into a physical page mapped to multiple virtual addresses for each running process in the system using copy-on-write so the answer would be ""yes but as long as the loaded data remains unmodified""",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,484,2018-11-08T14:22:45Z,2018-11-12T03:38:13Z,2018-11-12T19:38:55Z,MERGED,True,250,207,12,https://github.com/disaykin,SOCKETMON plugin initialization refactored.,1,[],https://github.com/tklengyel/drakvuf/pull/484,https://github.com/drakvuf-jenkins,8,https://github.com/tklengyel/drakvuf/pull/484#issuecomment-437530615,"Make full initialization in constructor (while VM is paused).
Remove number of tries and other instabilities.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,484,2018-11-08T14:22:45Z,2018-11-12T03:38:13Z,2018-11-12T19:38:55Z,MERGED,True,250,207,12,https://github.com/disaykin,SOCKETMON plugin initialization refactored.,1,[],https://github.com/tklengyel/drakvuf/pull/484,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/484#issuecomment-437585697,"Make full initialization in constructor (while VM is paused).
Remove number of tries and other instabilities.",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,484,2018-11-08T14:22:45Z,2018-11-12T03:38:13Z,2018-11-12T19:38:55Z,MERGED,True,250,207,12,https://github.com/disaykin,SOCKETMON plugin initialization refactored.,1,[],https://github.com/tklengyel/drakvuf/pull/484,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/484#issuecomment-437591196,"Make full initialization in constructor (while VM is paused).
Remove number of tries and other instabilities.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,485,2018-11-14T14:01:07Z,2018-11-17T14:42:55Z,2018-12-07T08:53:01Z,MERGED,True,18,6,2,https://github.com/skvl,plugins/filetracer: print Attributes field of _OBJECT_ATTRIBUTES,1,[],https://github.com/tklengyel/drakvuf/pull/485,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/485,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,485,2018-11-14T14:01:07Z,2018-11-17T14:42:55Z,2018-12-07T08:53:01Z,MERGED,True,18,6,2,https://github.com/skvl,plugins/filetracer: print Attributes field of _OBJECT_ATTRIBUTES,1,[],https://github.com/tklengyel/drakvuf/pull/485,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/485#issuecomment-439616469,,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,485,2018-11-14T14:01:07Z,2018-11-17T14:42:55Z,2018-12-07T08:53:01Z,MERGED,True,18,6,2,https://github.com/skvl,plugins/filetracer: print Attributes field of _OBJECT_ATTRIBUTES,1,[],https://github.com/tklengyel/drakvuf/pull/485,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/485#issuecomment-439616475,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,485,2018-11-14T14:01:07Z,2018-11-17T14:42:55Z,2018-12-07T08:53:01Z,MERGED,True,18,6,2,https://github.com/skvl,plugins/filetracer: print Attributes field of _OBJECT_ATTRIBUTES,1,[],https://github.com/tklengyel/drakvuf/pull/485,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/485#issuecomment-439617501,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,485,2018-11-14T14:01:07Z,2018-11-17T14:42:55Z,2018-12-07T08:53:01Z,MERGED,True,18,6,2,https://github.com/skvl,plugins/filetracer: print Attributes field of _OBJECT_ATTRIBUTES,1,[],https://github.com/tklengyel/drakvuf/pull/485,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/485#issuecomment-439619971,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,486,2018-12-04T14:38:05Z,2018-12-04T16:09:19Z,2018-12-04T16:09:20Z,MERGED,True,59,87,4,https://github.com/disaykin,Remove unused code from libinjector,1,[],https://github.com/tklengyel/drakvuf/pull/486,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/486,"Remove unused code from libinjector
Untie setup_stack functions from access context","Remove unused code from libinjector
Untie setup_stack functions from access context",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,486,2018-12-04T14:38:05Z,2018-12-04T16:09:19Z,2018-12-04T16:09:20Z,MERGED,True,59,87,4,https://github.com/disaykin,Remove unused code from libinjector,1,[],https://github.com/tklengyel/drakvuf/pull/486,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/486#issuecomment-444126872,"Remove unused code from libinjector
Untie setup_stack functions from access context",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,486,2018-12-04T14:38:05Z,2018-12-04T16:09:19Z,2018-12-04T16:09:20Z,MERGED,True,59,87,4,https://github.com/disaykin,Remove unused code from libinjector,1,[],https://github.com/tklengyel/drakvuf/pull/486,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/486#issuecomment-444126882,"Remove unused code from libinjector
Untie setup_stack functions from access context",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,487,2018-12-04T17:11:30Z,2018-12-04T18:13:38Z,2018-12-04T18:13:38Z,MERGED,True,15,5,1,https://github.com/disaykin,Restore setting CWD for injected process functionality removed in MR …,1,[],https://github.com/tklengyel/drakvuf/pull/487,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/487,…#407,…#407,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,487,2018-12-04T17:11:30Z,2018-12-04T18:13:38Z,2018-12-04T18:13:38Z,MERGED,True,15,5,1,https://github.com/disaykin,Restore setting CWD for injected process functionality removed in MR …,1,[],https://github.com/tklengyel/drakvuf/pull/487,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/487#issuecomment-444179399,…#407,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,487,2018-12-04T17:11:30Z,2018-12-04T18:13:38Z,2018-12-04T18:13:38Z,MERGED,True,15,5,1,https://github.com/disaykin,Restore setting CWD for injected process functionality removed in MR …,1,[],https://github.com/tklengyel/drakvuf/pull/487,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/487#issuecomment-444180497,…#407,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,487,2018-12-04T17:11:30Z,2018-12-04T18:13:38Z,2018-12-04T18:13:38Z,MERGED,True,15,5,1,https://github.com/disaykin,Restore setting CWD for injected process functionality removed in MR …,1,[],https://github.com/tklengyel/drakvuf/pull/487,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/487#issuecomment-444199394,…#407,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,488,2018-12-05T16:12:46Z,2018-12-06T22:53:12Z,2018-12-06T22:53:12Z,MERGED,True,67,29,1,https://github.com/disaykin,Internatiolization: Use unicode versions of winapi for injection,1,[],https://github.com/tklengyel/drakvuf/pull/488,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/488,,,True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,488,2018-12-05T16:12:46Z,2018-12-06T22:53:12Z,2018-12-06T22:53:12Z,MERGED,True,67,29,1,https://github.com/disaykin,Internatiolization: Use unicode versions of winapi for injection,1,[],https://github.com/tklengyel/drakvuf/pull/488,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/488#issuecomment-444542931,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,488,2018-12-05T16:12:46Z,2018-12-06T22:53:12Z,2018-12-06T22:53:12Z,MERGED,True,67,29,1,https://github.com/disaykin,Internatiolization: Use unicode versions of winapi for injection,1,[],https://github.com/tklengyel/drakvuf/pull/488,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/488#issuecomment-444649018,,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,489,2018-12-07T14:44:29Z,2018-12-07T17:39:34Z,2018-12-07T17:39:35Z,MERGED,True,0,1,1,https://github.com/disaykin,libinjector: Remove double insertion of new_trap into injector->memtraps,1,[],https://github.com/tklengyel/drakvuf/pull/489,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/489,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,489,2018-12-07T14:44:29Z,2018-12-07T17:39:34Z,2018-12-07T17:39:35Z,MERGED,True,0,1,1,https://github.com/disaykin,libinjector: Remove double insertion of new_trap into injector->memtraps,1,[],https://github.com/tklengyel/drakvuf/pull/489,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/489#issuecomment-445253484,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,489,2018-12-07T14:44:29Z,2018-12-07T17:39:34Z,2018-12-07T17:39:35Z,MERGED,True,0,1,1,https://github.com/disaykin,libinjector: Remove double insertion of new_trap into injector->memtraps,1,[],https://github.com/tklengyel/drakvuf/pull/489,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/489#issuecomment-445253850,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,490,2018-12-07T18:10:57Z,2018-12-07T20:55:15Z,2018-12-10T11:59:21Z,MERGED,True,200,45,3,https://github.com/skvl,Filedelete: print file size and _FILE_OBJECT.Flags,6,[],https://github.com/tklengyel/drakvuf/pull/490,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/490,"It looks like this (for kv output):

filedelete Time=1544205779.986203,PID=2980,PPID=1612,ProcessName=""\Device\HarddiskVolume2\Program Files (x86)\Mozilla Firefox\firefox.exe"",Method=ReadFile ret,FileName="""",Size=8759,FO_FLAGS=0x40042(FO_SYNCHRONOUS_IO | FO_CACHE_SUPPORTED | FO_HANDLE_CREATED)

Note new Size and FO_FLAGS fields.","It looks like this (for kv output):

filedelete Time=1544205779.986203,PID=2980,PPID=1612,ProcessName=""\Device\HarddiskVolume2\Program Files (x86)\Mozilla Firefox\firefox.exe"",Method=ReadFile ret,FileName="""",Size=8759,FO_FLAGS=0x40042(FO_SYNCHRONOUS_IO | FO_CACHE_SUPPORTED | FO_HANDLE_CREATED)

Note new Size and FO_FLAGS fields.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,490,2018-12-07T18:10:57Z,2018-12-07T20:55:15Z,2018-12-10T11:59:21Z,MERGED,True,200,45,3,https://github.com/skvl,Filedelete: print file size and _FILE_OBJECT.Flags,6,[],https://github.com/tklengyel/drakvuf/pull/490,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/490#issuecomment-445317389,"It looks like this (for kv output):

filedelete Time=1544205779.986203,PID=2980,PPID=1612,ProcessName=""\Device\HarddiskVolume2\Program Files (x86)\Mozilla Firefox\firefox.exe"",Method=ReadFile ret,FileName="""",Size=8759,FO_FLAGS=0x40042(FO_SYNCHRONOUS_IO | FO_CACHE_SUPPORTED | FO_HANDLE_CREATED)

Note new Size and FO_FLAGS fields.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,490,2018-12-07T18:10:57Z,2018-12-07T20:55:15Z,2018-12-10T11:59:21Z,MERGED,True,200,45,3,https://github.com/skvl,Filedelete: print file size and _FILE_OBJECT.Flags,6,[],https://github.com/tklengyel/drakvuf/pull/490,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/490#issuecomment-445318155,"It looks like this (for kv output):

filedelete Time=1544205779.986203,PID=2980,PPID=1612,ProcessName=""\Device\HarddiskVolume2\Program Files (x86)\Mozilla Firefox\firefox.exe"",Method=ReadFile ret,FileName="""",Size=8759,FO_FLAGS=0x40042(FO_SYNCHRONOUS_IO | FO_CACHE_SUPPORTED | FO_HANDLE_CREATED)

Note new Size and FO_FLAGS fields.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,490,2018-12-07T18:10:57Z,2018-12-07T20:55:15Z,2018-12-10T11:59:21Z,MERGED,True,200,45,3,https://github.com/skvl,Filedelete: print file size and _FILE_OBJECT.Flags,6,[],https://github.com/tklengyel/drakvuf/pull/490,https://github.com/skvl,4,https://github.com/tklengyel/drakvuf/pull/490#issuecomment-445324342,"It looks like this (for kv output):

filedelete Time=1544205779.986203,PID=2980,PPID=1612,ProcessName=""\Device\HarddiskVolume2\Program Files (x86)\Mozilla Firefox\firefox.exe"",Method=ReadFile ret,FileName="""",Size=8759,FO_FLAGS=0x40042(FO_SYNCHRONOUS_IO | FO_CACHE_SUPPORTED | FO_HANDLE_CREATED)

Note new Size and FO_FLAGS fields.",Sorry. I have forgotten to print file object flags in old method.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,490,2018-12-07T18:10:57Z,2018-12-07T20:55:15Z,2018-12-10T11:59:21Z,MERGED,True,200,45,3,https://github.com/skvl,Filedelete: print file size and _FILE_OBJECT.Flags,6,[],https://github.com/tklengyel/drakvuf/pull/490,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/490#issuecomment-445362561,"It looks like this (for kv output):

filedelete Time=1544205779.986203,PID=2980,PPID=1612,ProcessName=""\Device\HarddiskVolume2\Program Files (x86)\Mozilla Firefox\firefox.exe"",Method=ReadFile ret,FileName="""",Size=8759,FO_FLAGS=0x40042(FO_SYNCHRONOUS_IO | FO_CACHE_SUPPORTED | FO_HANDLE_CREATED)

Note new Size and FO_FLAGS fields.","LGTM, thanks!",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,491,2018-12-10T13:54:12Z,2018-12-10T14:15:22Z,2018-12-13T17:20:58Z,MERGED,True,5,7,1,https://github.com/skvl,FILEDELETE: fix segfault,1,[],https://github.com/tklengyel/drakvuf/pull/491,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/491,I have missed type conversion while moving up function is_synchronous.,I have missed type conversion while moving up function is_synchronous.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,491,2018-12-10T13:54:12Z,2018-12-10T14:15:22Z,2018-12-13T17:20:58Z,MERGED,True,5,7,1,https://github.com/skvl,FILEDELETE: fix segfault,1,[],https://github.com/tklengyel/drakvuf/pull/491,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/491#issuecomment-445827842,I have missed type conversion while moving up function is_synchronous.,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,491,2018-12-10T13:54:12Z,2018-12-10T14:15:22Z,2018-12-13T17:20:58Z,MERGED,True,5,7,1,https://github.com/skvl,FILEDELETE: fix segfault,1,[],https://github.com/tklengyel/drakvuf/pull/491,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/491#issuecomment-445827854,I have missed type conversion while moving up function is_synchronous.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,492,2018-12-10T14:07:48Z,2018-12-10T14:17:25Z,2018-12-13T17:20:58Z,MERGED,True,64,44,1,https://github.com/skvl,Filedelete: update printing file object flags in KV format,2,[],https://github.com/tklengyel/drakvuf/pull/492,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/492,This to simplify parsing.,This to simplify parsing.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,492,2018-12-10T14:07:48Z,2018-12-10T14:17:25Z,2018-12-13T17:20:58Z,MERGED,True,64,44,1,https://github.com/skvl,Filedelete: update printing file object flags in KV format,2,[],https://github.com/tklengyel/drakvuf/pull/492,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/492#issuecomment-445827155,This to simplify parsing.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,492,2018-12-10T14:07:48Z,2018-12-10T14:17:25Z,2018-12-13T17:20:58Z,MERGED,True,64,44,1,https://github.com/skvl,Filedelete: update printing file object flags in KV format,2,[],https://github.com/tklengyel/drakvuf/pull/492,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/492#issuecomment-445827466,This to simplify parsing.,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,493,2018-12-12T16:02:00Z,2018-12-12T19:52:56Z,2018-12-13T17:20:57Z,MERGED,True,1,3,2,https://github.com/skvl,Filedelete: save original breakpoint name while injecting,1,[],https://github.com/tklengyel/drakvuf/pull/493,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/493,Without this in log one could see ReadFile ret instead of NtSetInformationFile.,Without this in log one could see ReadFile ret instead of NtSetInformationFile.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,493,2018-12-12T16:02:00Z,2018-12-12T19:52:56Z,2018-12-13T17:20:57Z,MERGED,True,1,3,2,https://github.com/skvl,Filedelete: save original breakpoint name while injecting,1,[],https://github.com/tklengyel/drakvuf/pull/493,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/493#issuecomment-446640620,Without this in log one could see ReadFile ret instead of NtSetInformationFile.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,493,2018-12-12T16:02:00Z,2018-12-12T19:52:56Z,2018-12-13T17:20:57Z,MERGED,True,1,3,2,https://github.com/skvl,Filedelete: save original breakpoint name while injecting,1,[],https://github.com/tklengyel/drakvuf/pull/493,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/493#issuecomment-446685973,Without this in log one could see ReadFile ret instead of NtSetInformationFile.,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,493,2018-12-12T16:02:00Z,2018-12-12T19:52:56Z,2018-12-13T17:20:57Z,MERGED,True,1,3,2,https://github.com/skvl,Filedelete: save original breakpoint name while injecting,1,[],https://github.com/tklengyel/drakvuf/pull/493,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/493#issuecomment-446719650,Without this in log one could see ReadFile ret instead of NtSetInformationFile.,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,494,2018-12-13T14:27:03Z,2018-12-13T18:39:38Z,2018-12-13T20:12:48Z,MERGED,True,1093,911,9,https://github.com/disaykin,* Inject program via creation of suspended process and resuming it,1,[],https://github.com/tklengyel/drakvuf/pull/494,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/494,"Move setup_stack functionality into separate file
Add support for injection via ShellExecute on x86 arch
Remove -w command line argument (always wait for first execution of injected process before initializing plugins)
Remove unused structure definitions and unused structure fields from
injector code.

This PR implements injection algorithm from #474:

Call CreateProcess with CREATE_SUSPENDED flag;
Store PID of created suspended process;
Install cr3_callback for waiting of first occurence of PID;
Call ResumeThread to wake up process;
Freeze VM on first occurence of PID;
Initialize plugins;
Do looping.","Move setup_stack functionality into separate file
Add support for injection via ShellExecute on x86 arch
Remove -w command line argument (always wait for first execution of injected process before initializing plugins)
Remove unused structure definitions and unused structure fields from
injector code.

This PR implements injection algorithm from #474:

Call CreateProcess with CREATE_SUSPENDED flag;
Store PID of created suspended process;
Install cr3_callback for waiting of first occurence of PID;
Call ResumeThread to wake up process;
Freeze VM on first occurence of PID;
Initialize plugins;
Do looping.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,494,2018-12-13T14:27:03Z,2018-12-13T18:39:38Z,2018-12-13T20:12:48Z,MERGED,True,1093,911,9,https://github.com/disaykin,* Inject program via creation of suspended process and resuming it,1,[],https://github.com/tklengyel/drakvuf/pull/494,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/494#issuecomment-447018750,"Move setup_stack functionality into separate file
Add support for injection via ShellExecute on x86 arch
Remove -w command line argument (always wait for first execution of injected process before initializing plugins)
Remove unused structure definitions and unused structure fields from
injector code.

This PR implements injection algorithm from #474:

Call CreateProcess with CREATE_SUSPENDED flag;
Store PID of created suspended process;
Install cr3_callback for waiting of first occurence of PID;
Call ResumeThread to wake up process;
Freeze VM on first occurence of PID;
Initialize plugins;
Do looping.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,494,2018-12-13T14:27:03Z,2018-12-13T18:39:38Z,2018-12-13T20:12:48Z,MERGED,True,1093,911,9,https://github.com/disaykin,* Inject program via creation of suspended process and resuming it,1,[],https://github.com/tklengyel/drakvuf/pull/494,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/494#issuecomment-447019041,"Move setup_stack functionality into separate file
Add support for injection via ShellExecute on x86 arch
Remove -w command line argument (always wait for first execution of injected process before initializing plugins)
Remove unused structure definitions and unused structure fields from
injector code.

This PR implements injection algorithm from #474:

Call CreateProcess with CREATE_SUSPENDED flag;
Store PID of created suspended process;
Install cr3_callback for waiting of first occurence of PID;
Call ResumeThread to wake up process;
Freeze VM on first occurence of PID;
Initialize plugins;
Do looping.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,494,2018-12-13T14:27:03Z,2018-12-13T18:39:38Z,2018-12-13T20:12:48Z,MERGED,True,1093,911,9,https://github.com/disaykin,* Inject program via creation of suspended process and resuming it,1,[],https://github.com/tklengyel/drakvuf/pull/494,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/494#issuecomment-447029924,"Move setup_stack functionality into separate file
Add support for injection via ShellExecute on x86 arch
Remove -w command line argument (always wait for first execution of injected process before initializing plugins)
Remove unused structure definitions and unused structure fields from
injector code.

This PR implements injection algorithm from #474:

Call CreateProcess with CREATE_SUSPENDED flag;
Store PID of created suspended process;
Install cr3_callback for waiting of first occurence of PID;
Call ResumeThread to wake up process;
Freeze VM on first occurence of PID;
Initialize plugins;
Do looping.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,494,2018-12-13T14:27:03Z,2018-12-13T18:39:38Z,2018-12-13T20:12:48Z,MERGED,True,1093,911,9,https://github.com/disaykin,* Inject program via creation of suspended process and resuming it,1,[],https://github.com/tklengyel/drakvuf/pull/494,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/494#issuecomment-447071405,"Move setup_stack functionality into separate file
Add support for injection via ShellExecute on x86 arch
Remove -w command line argument (always wait for first execution of injected process before initializing plugins)
Remove unused structure definitions and unused structure fields from
injector code.

This PR implements injection algorithm from #474:

Call CreateProcess with CREATE_SUSPENDED flag;
Store PID of created suspended process;
Install cr3_callback for waiting of first occurence of PID;
Call ResumeThread to wake up process;
Freeze VM on first occurence of PID;
Initialize plugins;
Do looping.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,494,2018-12-13T14:27:03Z,2018-12-13T18:39:38Z,2018-12-13T20:12:48Z,MERGED,True,1093,911,9,https://github.com/disaykin,* Inject program via creation of suspended process and resuming it,1,[],https://github.com/tklengyel/drakvuf/pull/494,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/494#issuecomment-447072590,"Move setup_stack functionality into separate file
Add support for injection via ShellExecute on x86 arch
Remove -w command line argument (always wait for first execution of injected process before initializing plugins)
Remove unused structure definitions and unused structure fields from
injector code.

This PR implements injection algorithm from #474:

Call CreateProcess with CREATE_SUSPENDED flag;
Store PID of created suspended process;
Install cr3_callback for waiting of first occurence of PID;
Call ResumeThread to wake up process;
Freeze VM on first occurence of PID;
Initialize plugins;
Do looping.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,494,2018-12-13T14:27:03Z,2018-12-13T18:39:38Z,2018-12-13T20:12:48Z,MERGED,True,1093,911,9,https://github.com/disaykin,* Inject program via creation of suspended process and resuming it,1,[],https://github.com/tklengyel/drakvuf/pull/494,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/494#issuecomment-447074816,"Move setup_stack functionality into separate file
Add support for injection via ShellExecute on x86 arch
Remove -w command line argument (always wait for first execution of injected process before initializing plugins)
Remove unused structure definitions and unused structure fields from
injector code.

This PR implements injection algorithm from #474:

Call CreateProcess with CREATE_SUSPENDED flag;
Store PID of created suspended process;
Install cr3_callback for waiting of first occurence of PID;
Call ResumeThread to wake up process;
Freeze VM on first occurence of PID;
Initialize plugins;
Do looping.",Thank you for taking the time to implement this! It improves the injector a lot :) 👍,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,495,2018-12-13T17:18:07Z,2018-12-13T18:59:17Z,2018-12-26T09:00:15Z,MERGED,True,2,1,1,https://github.com/skvl,FILEDELETE: fix empty file names in logs,1,[],https://github.com/tklengyel/drakvuf/pull/495,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/495,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,495,2018-12-13T17:18:07Z,2018-12-13T18:59:17Z,2018-12-26T09:00:15Z,MERGED,True,2,1,1,https://github.com/skvl,FILEDELETE: fix empty file names in logs,1,[],https://github.com/tklengyel/drakvuf/pull/495,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/495#issuecomment-447049571,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,495,2018-12-13T17:18:07Z,2018-12-13T18:59:17Z,2018-12-26T09:00:15Z,MERGED,True,2,1,1,https://github.com/skvl,FILEDELETE: fix empty file names in logs,1,[],https://github.com/tklengyel/drakvuf/pull/495,https://github.com/skvl,3,https://github.com/tklengyel/drakvuf/pull/495#issuecomment-447053146,,Sorry. I have removed the branch occasionally.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,495,2018-12-13T17:18:07Z,2018-12-13T18:59:17Z,2018-12-26T09:00:15Z,MERGED,True,2,1,1,https://github.com/skvl,FILEDELETE: fix empty file names in logs,1,[],https://github.com/tklengyel/drakvuf/pull/495,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/495#issuecomment-447075001,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,496,2018-12-13T18:05:10Z,2018-12-13T18:59:37Z,2018-12-26T09:00:16Z,MERGED,True,8,4,1,https://github.com/skvl, FILEDELETE: fix absent file sizes in metadata,3,[],https://github.com/tklengyel/drakvuf/pull/496,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/496,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,496,2018-12-13T18:05:10Z,2018-12-13T18:59:37Z,2018-12-26T09:00:16Z,MERGED,True,8,4,1,https://github.com/skvl, FILEDELETE: fix absent file sizes in metadata,3,[],https://github.com/tklengyel/drakvuf/pull/496,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/496#issuecomment-447066600,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,496,2018-12-13T18:05:10Z,2018-12-13T18:59:37Z,2018-12-26T09:00:16Z,MERGED,True,8,4,1,https://github.com/skvl, FILEDELETE: fix absent file sizes in metadata,3,[],https://github.com/tklengyel/drakvuf/pull/496,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/496#issuecomment-447075130,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,497,2018-12-14T12:35:34Z,2018-12-14T17:15:02Z,2018-12-14T17:15:02Z,MERGED,True,157,149,6,https://github.com/disaykin,FILEDELETE: Use setup_stack functions,1,[],https://github.com/tklengyel/drakvuf/pull/497,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/497,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,497,2018-12-14T12:35:34Z,2018-12-14T17:15:02Z,2018-12-14T17:15:02Z,MERGED,True,157,149,6,https://github.com/disaykin,FILEDELETE: Use setup_stack functions,1,[],https://github.com/tklengyel/drakvuf/pull/497,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/497#issuecomment-447356718,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,497,2018-12-14T12:35:34Z,2018-12-14T17:15:02Z,2018-12-14T17:15:02Z,MERGED,True,157,149,6,https://github.com/disaykin,FILEDELETE: Use setup_stack functions,1,[],https://github.com/tklengyel/drakvuf/pull/497,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/497#issuecomment-447356726,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,497,2018-12-14T12:35:34Z,2018-12-14T17:15:02Z,2018-12-14T17:15:02Z,MERGED,True,157,149,6,https://github.com/disaykin,FILEDELETE: Use setup_stack functions,1,[],https://github.com/tklengyel/drakvuf/pull/497,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/497#issuecomment-447388791,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,498,2018-12-14T14:30:15Z,2018-12-15T22:34:20Z,2018-12-16T05:24:30Z,MERGED,True,98,135,2,https://github.com/disaykin,FILEDELETE: Print sequence numbers,2,[],https://github.com/tklengyel/drakvuf/pull/498,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/498,This allows correlate file artifacts and filedelete logs.,This allows correlate file artifacts and filedelete logs.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,498,2018-12-14T14:30:15Z,2018-12-15T22:34:20Z,2018-12-16T05:24:30Z,MERGED,True,98,135,2,https://github.com/disaykin,FILEDELETE: Print sequence numbers,2,[],https://github.com/tklengyel/drakvuf/pull/498,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/498#issuecomment-447356941,This allows correlate file artifacts and filedelete logs.,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,498,2018-12-14T14:30:15Z,2018-12-15T22:34:20Z,2018-12-16T05:24:30Z,MERGED,True,98,135,2,https://github.com/disaykin,FILEDELETE: Print sequence numbers,2,[],https://github.com/tklengyel/drakvuf/pull/498,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/498#issuecomment-447356953,This allows correlate file artifacts and filedelete logs.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,498,2018-12-14T14:30:15Z,2018-12-15T22:34:20Z,2018-12-16T05:24:30Z,MERGED,True,98,135,2,https://github.com/disaykin,FILEDELETE: Print sequence numbers,2,[],https://github.com/tklengyel/drakvuf/pull/498,https://github.com/disaykin,4,https://github.com/tklengyel/drakvuf/pull/498#issuecomment-447373172,This allows correlate file artifacts and filedelete logs.,This MR based on #497,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,498,2018-12-14T14:30:15Z,2018-12-15T22:34:20Z,2018-12-16T05:24:30Z,MERGED,True,98,135,2,https://github.com/disaykin,FILEDELETE: Print sequence numbers,2,[],https://github.com/tklengyel/drakvuf/pull/498,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/498#issuecomment-447392594,This allows correlate file artifacts and filedelete logs.,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,498,2018-12-14T14:30:15Z,2018-12-15T22:34:20Z,2018-12-16T05:24:30Z,MERGED,True,98,135,2,https://github.com/disaykin,FILEDELETE: Print sequence numbers,2,[],https://github.com/tklengyel/drakvuf/pull/498,https://github.com/disaykin,6,https://github.com/tklengyel/drakvuf/pull/498#issuecomment-447482883,This allows correlate file artifacts and filedelete logs.,Rebased to master,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,498,2018-12-14T14:30:15Z,2018-12-15T22:34:20Z,2018-12-16T05:24:30Z,MERGED,True,98,135,2,https://github.com/disaykin,FILEDELETE: Print sequence numbers,2,[],https://github.com/tklengyel/drakvuf/pull/498,https://github.com/disaykin,7,https://github.com/tklengyel/drakvuf/pull/498#issuecomment-447487376,This allows correlate file artifacts and filedelete logs.,@tklengyel is astyle configuration broken? Or I need fix the code accoding its recommendations?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,498,2018-12-14T14:30:15Z,2018-12-15T22:34:20Z,2018-12-16T05:24:30Z,MERGED,True,98,135,2,https://github.com/disaykin,FILEDELETE: Print sequence numbers,2,[],https://github.com/tklengyel/drakvuf/pull/498,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/498#issuecomment-447504498,This allows correlate file artifacts and filedelete logs.,Try to run astyle locally and see if you get the same changes as on Travis. The git diff definitely has some parts that look odd on Travis.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,498,2018-12-14T14:30:15Z,2018-12-15T22:34:20Z,2018-12-16T05:24:30Z,MERGED,True,98,135,2,https://github.com/disaykin,FILEDELETE: Print sequence numbers,2,[],https://github.com/tklengyel/drakvuf/pull/498,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/498#issuecomment-447504542,This allows correlate file artifacts and filedelete logs.,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,498,2018-12-14T14:30:15Z,2018-12-15T22:34:20Z,2018-12-16T05:24:30Z,MERGED,True,98,135,2,https://github.com/disaykin,FILEDELETE: Print sequence numbers,2,[],https://github.com/tklengyel/drakvuf/pull/498,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/498#issuecomment-447595325,This allows correlate file artifacts and filedelete logs.,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,499,2018-12-14T14:41:27Z,2018-12-18T14:16:24Z,2018-12-26T09:00:16Z,MERGED,True,10,4,2,https://github.com/skvl,FILEDELETE: save metadata for partially read files,1,[],https://github.com/tklengyel/drakvuf/pull/499,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/499,"Sometimes NtReadFile returns STATUS_INVALID_DEVICE_REQUEST for some reason. In that case the .mm file is only saved without .metadata.
Also I have found that I've forgotten (or somehow removed) to check for STATUS_END_OF_FILE.","Sometimes NtReadFile returns STATUS_INVALID_DEVICE_REQUEST for some reason. In that case the .mm file is only saved without .metadata.
Also I have found that I've forgotten (or somehow removed) to check for STATUS_END_OF_FILE.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,499,2018-12-14T14:41:27Z,2018-12-18T14:16:24Z,2018-12-26T09:00:16Z,MERGED,True,10,4,2,https://github.com/skvl,FILEDELETE: save metadata for partially read files,1,[],https://github.com/tklengyel/drakvuf/pull/499,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/499#issuecomment-447357047,"Sometimes NtReadFile returns STATUS_INVALID_DEVICE_REQUEST for some reason. In that case the .mm file is only saved without .metadata.
Also I have found that I've forgotten (or somehow removed) to check for STATUS_END_OF_FILE.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,499,2018-12-14T14:41:27Z,2018-12-18T14:16:24Z,2018-12-26T09:00:16Z,MERGED,True,10,4,2,https://github.com/skvl,FILEDELETE: save metadata for partially read files,1,[],https://github.com/tklengyel/drakvuf/pull/499,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/499#issuecomment-447357057,"Sometimes NtReadFile returns STATUS_INVALID_DEVICE_REQUEST for some reason. In that case the .mm file is only saved without .metadata.
Also I have found that I've forgotten (or somehow removed) to check for STATUS_END_OF_FILE.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,499,2018-12-14T14:41:27Z,2018-12-18T14:16:24Z,2018-12-26T09:00:16Z,MERGED,True,10,4,2,https://github.com/skvl,FILEDELETE: save metadata for partially read files,1,[],https://github.com/tklengyel/drakvuf/pull/499,https://github.com/disaykin,4,https://github.com/tklengyel/drakvuf/pull/499#issuecomment-447373429,"Sometimes NtReadFile returns STATUS_INVALID_DEVICE_REQUEST for some reason. In that case the .mm file is only saved without .metadata.
Also I have found that I've forgotten (or somehow removed) to check for STATUS_END_OF_FILE.",This MR based on #497,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,499,2018-12-14T14:41:27Z,2018-12-18T14:16:24Z,2018-12-26T09:00:16Z,MERGED,True,10,4,2,https://github.com/skvl,FILEDELETE: save metadata for partially read files,1,[],https://github.com/tklengyel/drakvuf/pull/499,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/499#issuecomment-447391375,"Sometimes NtReadFile returns STATUS_INVALID_DEVICE_REQUEST for some reason. In that case the .mm file is only saved without .metadata.
Also I have found that I've forgotten (or somehow removed) to check for STATUS_END_OF_FILE.",@skvl Please rebase on master,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,499,2018-12-14T14:41:27Z,2018-12-18T14:16:24Z,2018-12-26T09:00:16Z,MERGED,True,10,4,2,https://github.com/skvl,FILEDELETE: save metadata for partially read files,1,[],https://github.com/tklengyel/drakvuf/pull/499,https://github.com/skvl,6,https://github.com/tklengyel/drakvuf/pull/499#issuecomment-448228974,"Sometimes NtReadFile returns STATUS_INVALID_DEVICE_REQUEST for some reason. In that case the .mm file is only saved without .metadata.
Also I have found that I've forgotten (or somehow removed) to check for STATUS_END_OF_FILE.",@tklengyel I have rebased it a day ago.,True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,499,2018-12-14T14:41:27Z,2018-12-18T14:16:24Z,2018-12-26T09:00:16Z,MERGED,True,10,4,2,https://github.com/skvl,FILEDELETE: save metadata for partially read files,1,[],https://github.com/tklengyel/drakvuf/pull/499,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/499#issuecomment-448233521,"Sometimes NtReadFile returns STATUS_INVALID_DEVICE_REQUEST for some reason. In that case the .mm file is only saved without .metadata.
Also I have found that I've forgotten (or somehow removed) to check for STATUS_END_OF_FILE.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,500,2018-12-14T14:47:16Z,2018-12-15T22:38:52Z,2018-12-16T05:25:17Z,MERGED,True,2,2,1,https://github.com/disaykin,FILEDELETE: Fix type of _FILE_OBJECT.Flags: it is always 32 bit,1,[],https://github.com/tklengyel/drakvuf/pull/500,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/500,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,500,2018-12-14T14:47:16Z,2018-12-15T22:38:52Z,2018-12-16T05:25:17Z,MERGED,True,2,2,1,https://github.com/disaykin,FILEDELETE: Fix type of _FILE_OBJECT.Flags: it is always 32 bit,1,[],https://github.com/tklengyel/drakvuf/pull/500,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/500#issuecomment-447356823,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,500,2018-12-14T14:47:16Z,2018-12-15T22:38:52Z,2018-12-16T05:25:17Z,MERGED,True,2,2,1,https://github.com/disaykin,FILEDELETE: Fix type of _FILE_OBJECT.Flags: it is always 32 bit,1,[],https://github.com/tklengyel/drakvuf/pull/500,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/500#issuecomment-447356831,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,500,2018-12-14T14:47:16Z,2018-12-15T22:38:52Z,2018-12-16T05:25:17Z,MERGED,True,2,2,1,https://github.com/disaykin,FILEDELETE: Fix type of _FILE_OBJECT.Flags: it is always 32 bit,1,[],https://github.com/tklengyel/drakvuf/pull/500,https://github.com/disaykin,4,https://github.com/tklengyel/drakvuf/pull/500#issuecomment-447373594,,This MR based on #497,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,500,2018-12-14T14:47:16Z,2018-12-15T22:38:52Z,2018-12-16T05:25:17Z,MERGED,True,2,2,1,https://github.com/disaykin,FILEDELETE: Fix type of _FILE_OBJECT.Flags: it is always 32 bit,1,[],https://github.com/tklengyel/drakvuf/pull/500,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/500#issuecomment-447391455,,@disaykin Please rebase on master,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,500,2018-12-14T14:47:16Z,2018-12-15T22:38:52Z,2018-12-16T05:25:17Z,MERGED,True,2,2,1,https://github.com/disaykin,FILEDELETE: Fix type of _FILE_OBJECT.Flags: it is always 32 bit,1,[],https://github.com/tklengyel/drakvuf/pull/500,https://github.com/disaykin,6,https://github.com/tklengyel/drakvuf/pull/500#issuecomment-447483353,,Done,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,500,2018-12-14T14:47:16Z,2018-12-15T22:38:52Z,2018-12-16T05:25:17Z,MERGED,True,2,2,1,https://github.com/disaykin,FILEDELETE: Fix type of _FILE_OBJECT.Flags: it is always 32 bit,1,[],https://github.com/tklengyel/drakvuf/pull/500,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/500#issuecomment-447602692,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,501,2018-12-14T19:35:33Z,2019-02-09T22:57:10Z,2019-02-09T22:57:10Z,CLOSED,False,0,0,0,https://github.com/mdolmen,SYSCALLS: gather syscall return value,0,[],https://github.com/tklengyel/drakvuf/pull/501,https://github.com/mdolmen,1,https://github.com/tklengyel/drakvuf/pull/501,"Add a trap to the return address of a syscall
Add a new callback for that trap
Print args and return value in the new callback","Add a trap to the return address of a syscall
Add a new callback for that trap
Print args and return value in the new callback",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,501,2018-12-14T19:35:33Z,2019-02-09T22:57:10Z,2019-02-09T22:57:10Z,CLOSED,False,0,0,0,https://github.com/mdolmen,SYSCALLS: gather syscall return value,0,[],https://github.com/tklengyel/drakvuf/pull/501,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/501#issuecomment-447431645,"Add a trap to the return address of a syscall
Add a new callback for that trap
Print args and return value in the new callback",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,501,2018-12-14T19:35:33Z,2019-02-09T22:57:10Z,2019-02-09T22:57:10Z,CLOSED,False,0,0,0,https://github.com/mdolmen,SYSCALLS: gather syscall return value,0,[],https://github.com/tklengyel/drakvuf/pull/501,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/501#issuecomment-447438348,"Add a trap to the return address of a syscall
Add a new callback for that trap
Print args and return value in the new callback",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,501,2018-12-14T19:35:33Z,2019-02-09T22:57:10Z,2019-02-09T22:57:10Z,CLOSED,False,0,0,0,https://github.com/mdolmen,SYSCALLS: gather syscall return value,0,[],https://github.com/tklengyel/drakvuf/pull/501,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/501#issuecomment-447602926,"Add a trap to the return address of a syscall
Add a new callback for that trap
Print args and return value in the new callback",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,501,2018-12-14T19:35:33Z,2019-02-09T22:57:10Z,2019-02-09T22:57:10Z,CLOSED,False,0,0,0,https://github.com/mdolmen,SYSCALLS: gather syscall return value,0,[],https://github.com/tklengyel/drakvuf/pull/501,https://github.com/mdolmen,5,https://github.com/tklengyel/drakvuf/pull/501#issuecomment-448348569,"Add a trap to the return address of a syscall
Add a new callback for that trap
Print args and return value in the new callback",I can't access Jenkins' logs. Do you know what's the issue?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,501,2018-12-14T19:35:33Z,2019-02-09T22:57:10Z,2019-02-09T22:57:10Z,CLOSED,False,0,0,0,https://github.com/mdolmen,SYSCALLS: gather syscall return value,0,[],https://github.com/tklengyel/drakvuf/pull/501,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/501#issuecomment-448356549,"Add a trap to the return address of a syscall
Add a new callback for that trap
Print args and return value in the new callback",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,501,2018-12-14T19:35:33Z,2019-02-09T22:57:10Z,2019-02-09T22:57:10Z,CLOSED,False,0,0,0,https://github.com/mdolmen,SYSCALLS: gather syscall return value,0,[],https://github.com/tklengyel/drakvuf/pull/501,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/501#issuecomment-448369740,"Add a trap to the return address of a syscall
Add a new callback for that trap
Print args and return value in the new callback","The reason Jenkins is failing this PR is due to CPU utilization jumping to near 100%, even in tests where it normally is less then 40%. That is unfortunately not acceptable. Please look into what is causing this overhead, likely some traps are being triggered more then they should.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,501,2018-12-14T19:35:33Z,2019-02-09T22:57:10Z,2019-02-09T22:57:10Z,CLOSED,False,0,0,0,https://github.com/mdolmen,SYSCALLS: gather syscall return value,0,[],https://github.com/tklengyel/drakvuf/pull/501,https://github.com/mdolmen,8,https://github.com/tklengyel/drakvuf/pull/501#issuecomment-462069148,"Add a trap to the return address of a syscall
Add a new callback for that trap
Print args and return value in the new callback",I messed up my git history... I will find a way to clean this or create another PR. Sorry about that.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,501,2018-12-14T19:35:33Z,2019-02-09T22:57:10Z,2019-02-09T22:57:10Z,CLOSED,False,0,0,0,https://github.com/mdolmen,SYSCALLS: gather syscall return value,0,[],https://github.com/tklengyel/drakvuf/pull/501,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/501#issuecomment-462075458,"Add a trap to the return address of a syscall
Add a new callback for that trap
Print args and return value in the new callback",@mdolmen I usually recommend squashing commits and rebasing.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,503,2018-12-18T09:28:01Z,2018-12-18T15:56:09Z,2018-12-18T15:57:09Z,MERGED,True,35,38,6,https://github.com/disaykin,Purify drakvuf_reg_keyhandle_path interface,1,[],https://github.com/tklengyel/drakvuf/pull/503,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/503,"* Remove process_arg argument. This info is contained in info argument already.
* Change type of key_handle argument. This is not an address.","* Remove process_arg argument. This info is contained in info argument already.
* Change type of key_handle argument. This is not an address.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,503,2018-12-18T09:28:01Z,2018-12-18T15:56:09Z,2018-12-18T15:57:09Z,MERGED,True,35,38,6,https://github.com/disaykin,Purify drakvuf_reg_keyhandle_path interface,1,[],https://github.com/tklengyel/drakvuf/pull/503,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/503#issuecomment-448235043,"* Remove process_arg argument. This info is contained in info argument already.
* Change type of key_handle argument. This is not an address.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,503,2018-12-18T09:28:01Z,2018-12-18T15:56:09Z,2018-12-18T15:57:09Z,MERGED,True,35,38,6,https://github.com/disaykin,Purify drakvuf_reg_keyhandle_path interface,1,[],https://github.com/tklengyel/drakvuf/pull/503,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/503#issuecomment-448235051,"* Remove process_arg argument. This info is contained in info argument already.
* Change type of key_handle argument. This is not an address.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,503,2018-12-18T09:28:01Z,2018-12-18T15:56:09Z,2018-12-18T15:57:09Z,MERGED,True,35,38,6,https://github.com/disaykin,Purify drakvuf_reg_keyhandle_path interface,1,[],https://github.com/tklengyel/drakvuf/pull/503,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/503#issuecomment-448245207,"* Remove process_arg argument. This info is contained in info argument already.
* Change type of key_handle argument. This is not an address.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,503,2018-12-18T09:28:01Z,2018-12-18T15:56:09Z,2018-12-18T15:57:09Z,MERGED,True,35,38,6,https://github.com/disaykin,Purify drakvuf_reg_keyhandle_path interface,1,[],https://github.com/tklengyel/drakvuf/pull/503,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/503#issuecomment-448252304,"* Remove process_arg argument. This info is contained in info argument already.
* Change type of key_handle argument. This is not an address.",@disaykin Please rebase this on current master,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,503,2018-12-18T09:28:01Z,2018-12-18T15:56:09Z,2018-12-18T15:57:09Z,MERGED,True,35,38,6,https://github.com/disaykin,Purify drakvuf_reg_keyhandle_path interface,1,[],https://github.com/tklengyel/drakvuf/pull/503,https://github.com/disaykin,6,https://github.com/tklengyel/drakvuf/pull/503#issuecomment-448258355,"* Remove process_arg argument. This info is contained in info argument already.
* Change type of key_handle argument. This is not an address.",@tklengyel  Done.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,503,2018-12-18T09:28:01Z,2018-12-18T15:56:09Z,2018-12-18T15:57:09Z,MERGED,True,35,38,6,https://github.com/disaykin,Purify drakvuf_reg_keyhandle_path interface,1,[],https://github.com/tklengyel/drakvuf/pull/503,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/503#issuecomment-448263404,"* Remove process_arg argument. This info is contained in info argument already.
* Change type of key_handle argument. This is not an address.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,504,2018-12-18T12:45:36Z,2018-12-18T14:48:24Z,2018-12-18T15:25:04Z,MERGED,True,50,67,1,https://github.com/disaykin,REGMON: deduplicate print logic,1,[],https://github.com/tklengyel/drakvuf/pull/504,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/504,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,504,2018-12-18T12:45:36Z,2018-12-18T14:48:24Z,2018-12-18T15:25:04Z,MERGED,True,50,67,1,https://github.com/disaykin,REGMON: deduplicate print logic,1,[],https://github.com/tklengyel/drakvuf/pull/504,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/504#issuecomment-448235419,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,504,2018-12-18T12:45:36Z,2018-12-18T14:48:24Z,2018-12-18T15:25:04Z,MERGED,True,50,67,1,https://github.com/disaykin,REGMON: deduplicate print logic,1,[],https://github.com/tklengyel/drakvuf/pull/504,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/504#issuecomment-448235427,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,505,2018-12-19T12:54:24Z,2018-12-19T13:05:49Z,2019-03-13T13:22:50Z,MERGED,True,17,5,1,https://github.com/disaykin,LIBDRAKVUF: Support for Kernel Mode Handles added,1,[],https://github.com/tklengyel/drakvuf/pull/505,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/505,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,505,2018-12-19T12:54:24Z,2018-12-19T13:05:49Z,2019-03-13T13:22:50Z,MERGED,True,17,5,1,https://github.com/disaykin,LIBDRAKVUF: Support for Kernel Mode Handles added,1,[],https://github.com/tklengyel/drakvuf/pull/505,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/505#issuecomment-448586619,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,506,2018-12-19T13:57:13Z,2018-12-25T21:36:03Z,2018-12-26T09:00:15Z,MERGED,True,52,33,8,https://github.com/skvl,Try to read libvmi.conf on startup,3,[],https://github.com/tklengyel/drakvuf/pull/506,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/506,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,506,2018-12-19T13:57:13Z,2018-12-25T21:36:03Z,2018-12-26T09:00:15Z,MERGED,True,52,33,8,https://github.com/skvl,Try to read libvmi.conf on startup,3,[],https://github.com/tklengyel/drakvuf/pull/506,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/506#issuecomment-448604967,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,506,2018-12-19T13:57:13Z,2018-12-25T21:36:03Z,2018-12-26T09:00:15Z,MERGED,True,52,33,8,https://github.com/skvl,Try to read libvmi.conf on startup,3,[],https://github.com/tklengyel/drakvuf/pull/506,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/506#issuecomment-448615344,,I'm sorry but I don't see what's the point in doing this. Care to elaborate why you find this useful?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,506,2018-12-19T13:57:13Z,2018-12-25T21:36:03Z,2018-12-26T09:00:15Z,MERGED,True,52,33,8,https://github.com/skvl,Try to read libvmi.conf on startup,3,[],https://github.com/tklengyel/drakvuf/pull/506,https://github.com/skvl,4,https://github.com/tklengyel/drakvuf/pull/506#issuecomment-448689482,,@tklengyel I have reworked the commit. It tries to call vmi_init_os() with VMI_CONFIG_GLOBAL_FILE_ENTRY first. If libvmi.conf present this will skip some initialization steps. Otherwise it will call vmi_init_os() as always.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,506,2018-12-19T13:57:13Z,2018-12-25T21:36:03Z,2018-12-26T09:00:15Z,MERGED,True,52,33,8,https://github.com/skvl,Try to read libvmi.conf on startup,3,[],https://github.com/tklengyel/drakvuf/pull/506,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/506#issuecomment-448769219,,"So what I still don't understand is why do you want to read the libvmi config file during DRAKVUF initialization? DRAKVUF already takes the Rekall profile as an input, so there is no need to look it up from the config file.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,506,2018-12-19T13:57:13Z,2018-12-25T21:36:03Z,2018-12-26T09:00:15Z,MERGED,True,52,33,8,https://github.com/skvl,Try to read libvmi.conf on startup,3,[],https://github.com/tklengyel/drakvuf/pull/506,https://github.com/skvl,6,https://github.com/tklengyel/drakvuf/pull/506#issuecomment-448901955,,"DRAKVUF already takes the Rekall profile as an input, so there is no need to look it up from the config file.

Using libvmi.conf allows to skip next parts from init_from_rekall_profile_real():
if (kpcr_register_to_use)                                                                                     
...                                                                                                           
if (!windows->ntoskrnl)

This is just a tiny optimization which allows to avoid several reads of VM's memory.
This is also convenient while working with VMs snapshots because libvmi.conf could be created on VM snapshot creation and used several times.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,506,2018-12-19T13:57:13Z,2018-12-25T21:36:03Z,2018-12-26T09:00:15Z,MERGED,True,52,33,8,https://github.com/skvl,Try to read libvmi.conf on startup,3,[],https://github.com/tklengyel/drakvuf/pull/506,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/506#issuecomment-449035636,,"Using libvmi.conf allows to skip next parts from init_from_rekall_profile_real():

OK, I think I now see what you are trying to do: to skip the parts where LibVMI determines where the Windows kernel is on its own by setting windows->ntoskrnl and windows->ntoskrnl_va? I do see value in that, but I would suggest changing init_from_rekall_profile to check if the configuration contains those values and if so set windows->ntoskrnl and windows->ntoskrnl_va and skip the automatic search.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,506,2018-12-19T13:57:13Z,2018-12-25T21:36:03Z,2018-12-26T09:00:15Z,MERGED,True,52,33,8,https://github.com/skvl,Try to read libvmi.conf on startup,3,[],https://github.com/tklengyel/drakvuf/pull/506,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/506#issuecomment-449037068,,I would also be open to adding input flags to DRAKVUF where you can specify the kernbase values manually - with probably some sanity checking applied.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,506,2018-12-19T13:57:13Z,2018-12-25T21:36:03Z,2018-12-26T09:00:15Z,MERGED,True,52,33,8,https://github.com/skvl,Try to read libvmi.conf on startup,3,[],https://github.com/tklengyel/drakvuf/pull/506,https://github.com/skvl,9,https://github.com/tklengyel/drakvuf/pull/506#issuecomment-449085482,,"OK, I think I now see what you are trying to do: to skip the parts where LibVMI determines where the
Windows kernel is on its own by setting windows->ntoskrnl and windows->ntoskrnl_va?

Exactly!

I would suggest changing init_from_rekall_profile to check if the configuration contains those values and if so set windows->ntoskrnl and windows->ntoskrnl_va and skip the automatic search.

I think that I don't understand something... In init_from_rekall_profile we have next lines:
if ( vmi->mode != VMI_FILE && ! ( windows->ntoskrnl && windows->ntoskrnl_va ) ) {
...
} else {
...
ret = init_from_rekall_profile_real(vmi, unused);

And in init_from_rekall_profile_real:
if (kpcr_register_to_use) {
...
}

if (!windows->ntoskrnl) {
...
}

So we have skipped everything. Am I wright?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,506,2018-12-19T13:57:13Z,2018-12-25T21:36:03Z,2018-12-26T09:00:15Z,MERGED,True,52,33,8,https://github.com/skvl,Try to read libvmi.conf on startup,3,[],https://github.com/tklengyel/drakvuf/pull/506,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/506#issuecomment-449602591,,"That part will have to be restructured a bit like:
if ( vmi->mode != VMI_FILE ) {
     if ( ! ( windows->ntoskrnl && windows->ntoskrnl_va ) ) {
          ....
     }
} else {
...
}

Obviously you would want to read out ntoskrnl and ntoskrnl_va from the config file before that.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,506,2018-12-19T13:57:13Z,2018-12-25T21:36:03Z,2018-12-26T09:00:15Z,MERGED,True,52,33,8,https://github.com/skvl,Try to read libvmi.conf on startup,3,[],https://github.com/tklengyel/drakvuf/pull/506,https://github.com/skvl,11,https://github.com/tklengyel/drakvuf/pull/506#issuecomment-449713204,,"That part will have to be restructured a bit like

If we will reconstruct it like this then we will skip initialization of windows->version. This breaks vmi_get_winver() which breaks drakvuf_get_obj_by_handle_impl(). Am I wrong?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,506,2018-12-19T13:57:13Z,2018-12-25T21:36:03Z,2018-12-26T09:00:15Z,MERGED,True,52,33,8,https://github.com/skvl,Try to read libvmi.conf on startup,3,[],https://github.com/tklengyel/drakvuf/pull/506,https://github.com/tklengyel,12,https://github.com/tklengyel/drakvuf/pull/506#issuecomment-449731889,,If that's the case windows->version has to be separately initialized. Feel free to rework the code as needed.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,506,2018-12-19T13:57:13Z,2018-12-25T21:36:03Z,2018-12-26T09:00:15Z,MERGED,True,52,33,8,https://github.com/skvl,Try to read libvmi.conf on startup,3,[],https://github.com/tklengyel/drakvuf/pull/506,https://github.com/skvl,13,https://github.com/tklengyel/drakvuf/pull/506#issuecomment-449835188,,"If that's the case windows->version has to be separately initialized. Feel free to rework the code as needed.

@tklengyel I have created LibVMI PR.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,506,2018-12-19T13:57:13Z,2018-12-25T21:36:03Z,2018-12-26T09:00:15Z,MERGED,True,52,33,8,https://github.com/skvl,Try to read libvmi.conf on startup,3,[],https://github.com/tklengyel/drakvuf/pull/506,https://github.com/skvl,14,https://github.com/tklengyel/drakvuf/pull/506#issuecomment-449854606,,@tklengyel LibVMI PR have been merged. What is my next step?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,506,2018-12-19T13:57:13Z,2018-12-25T21:36:03Z,2018-12-26T09:00:15Z,MERGED,True,52,33,8,https://github.com/skvl,Try to read libvmi.conf on startup,3,[],https://github.com/tklengyel/drakvuf/pull/506,https://github.com/tklengyel,15,https://github.com/tklengyel/drakvuf/pull/506#issuecomment-449855491,,@skvl Test if you define ntoskrnl and ntoskrnl_va in the libvmi.conf alongside the Rekall profile and verify that it skips the kernel base search now.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,506,2018-12-19T13:57:13Z,2018-12-25T21:36:03Z,2018-12-26T09:00:15Z,MERGED,True,52,33,8,https://github.com/skvl,Try to read libvmi.conf on startup,3,[],https://github.com/tklengyel/drakvuf/pull/506,https://github.com/skvl,16,https://github.com/tklengyel/drakvuf/pull/506#issuecomment-449856180,,"Test if you define ntoskrnl and ntoskrnl_va in the libvmi.conf alongside the Rekall profile and verify that it skips the kernel base search now.

Done. I have checked with GDB that in init_from_rekall_profile() the if ( windows->ntoskrnl && windows->ntoskrnl_va ) check have succeed. After that it jumps to ret = find_windows_version_from_rekall_profile(vmi);.
Obviously I have upstream LibVMI.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,506,2018-12-19T13:57:13Z,2018-12-25T21:36:03Z,2018-12-26T09:00:15Z,MERGED,True,52,33,8,https://github.com/skvl,Try to read libvmi.conf on startup,3,[],https://github.com/tklengyel/drakvuf/pull/506,https://github.com/tklengyel,17,https://github.com/tklengyel/drakvuf/pull/506#issuecomment-449859702,,"@skvl With the update to LibVMI this looks OK to me, but I would also like the option of passing ntoskrnl and ntoskrnl_va as inputs to DRAKVUF instead of having to read them from the config file. Also, now every initialization will first look for the libvmi config file, which is not ideal. It would be preferable if that was optional and controlled by a flag during DRAKVUF startup.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,506,2018-12-19T13:57:13Z,2018-12-25T21:36:03Z,2018-12-26T09:00:15Z,MERGED,True,52,33,8,https://github.com/skvl,Try to read libvmi.conf on startup,3,[],https://github.com/tklengyel/drakvuf/pull/506,https://github.com/skvl,18,https://github.com/tklengyel/drakvuf/pull/506#issuecomment-449860708,,Good. I'll fix this.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,506,2018-12-19T13:57:13Z,2018-12-25T21:36:03Z,2018-12-26T09:00:15Z,MERGED,True,52,33,8,https://github.com/skvl,Try to read libvmi.conf on startup,3,[],https://github.com/tklengyel/drakvuf/pull/506,https://github.com/tklengyel,19,https://github.com/tklengyel/drakvuf/pull/506#issuecomment-449861402,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,506,2018-12-19T13:57:13Z,2018-12-25T21:36:03Z,2018-12-26T09:00:15Z,MERGED,True,52,33,8,https://github.com/skvl,Try to read libvmi.conf on startup,3,[],https://github.com/tklengyel/drakvuf/pull/506,https://github.com/skvl,20,https://github.com/tklengyel/drakvuf/pull/506#issuecomment-449864997,,"@tklengyel, I have added an option (-l) to read libvmi.conf.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,506,2018-12-19T13:57:13Z,2018-12-25T21:36:03Z,2018-12-26T09:00:15Z,MERGED,True,52,33,8,https://github.com/skvl,Try to read libvmi.conf on startup,3,[],https://github.com/tklengyel/drakvuf/pull/506,https://github.com/tklengyel,21,https://github.com/tklengyel/drakvuf/pull/506#issuecomment-449874672,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,507,2018-12-19T16:00:44Z,2018-12-19T17:00:09Z,2018-12-19T17:00:12Z,MERGED,True,1,24,4,https://github.com/tklengyel,Update LibVMI,1,[],https://github.com/tklengyel/drakvuf/pull/507,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/507,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,508,2018-12-20T16:27:25Z,2018-12-20T17:50:57Z,2018-12-20T18:10:41Z,MERGED,True,417,191,1,https://github.com/disaykin,REGMON: Prints value entries for NtQueryMultipleValueKey,1,[],https://github.com/tklengyel/drakvuf/pull/508,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/508,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,508,2018-12-20T16:27:25Z,2018-12-20T17:50:57Z,2018-12-20T18:10:41Z,MERGED,True,417,191,1,https://github.com/disaykin,REGMON: Prints value entries for NtQueryMultipleValueKey,1,[],https://github.com/tklengyel/drakvuf/pull/508,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/508#issuecomment-449055568,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,508,2018-12-20T16:27:25Z,2018-12-20T17:50:57Z,2018-12-20T18:10:41Z,MERGED,True,417,191,1,https://github.com/disaykin,REGMON: Prints value entries for NtQueryMultipleValueKey,1,[],https://github.com/tklengyel/drakvuf/pull/508,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/508#issuecomment-449061652,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,509,2018-12-24T09:09:16Z,2018-12-24T13:21:22Z,2018-12-24T15:50:27Z,MERGED,True,163,55,2,https://github.com/disaykin,FILETRACER: Trace NtReadFile and NtWriteFile calls.,1,[],https://github.com/tklengyel/drakvuf/pull/509,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/509,"Remove the usage of vmi instance after releasing of drakvuf lock for
reading the file attributes. (And double releasing of drakvuf lock
in case of failure of reading of file attributes.)","Remove the usage of vmi instance after releasing of drakvuf lock for
reading the file attributes. (And double releasing of drakvuf lock
in case of failure of reading of file attributes.)",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,509,2018-12-24T09:09:16Z,2018-12-24T13:21:22Z,2018-12-24T15:50:27Z,MERGED,True,163,55,2,https://github.com/disaykin,FILETRACER: Trace NtReadFile and NtWriteFile calls.,1,[],https://github.com/tklengyel/drakvuf/pull/509,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/509#issuecomment-449731699,"Remove the usage of vmi instance after releasing of drakvuf lock for
reading the file attributes. (And double releasing of drakvuf lock
in case of failure of reading of file attributes.)",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,509,2018-12-24T09:09:16Z,2018-12-24T13:21:22Z,2018-12-24T15:50:27Z,MERGED,True,163,55,2,https://github.com/disaykin,FILETRACER: Trace NtReadFile and NtWriteFile calls.,1,[],https://github.com/tklengyel/drakvuf/pull/509,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/509#issuecomment-449731703,"Remove the usage of vmi instance after releasing of drakvuf lock for
reading the file attributes. (And double releasing of drakvuf lock
in case of failure of reading of file attributes.)",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,510,2018-12-24T15:19:10Z,2018-12-24T15:41:37Z,2019-01-25T10:14:21Z,MERGED,True,58,24,2,https://github.com/skvl,FILEDELETE: fix file extraction on NtSetInformationFile,1,[],https://github.com/tklengyel/drakvuf/pull/510,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/510,"NtSetInformationFile marks file for deletion on NtClose.
Fall back to parsing cache manager if start_readfile() fails.
Print intention to delete file in filetracer plugin.","NtSetInformationFile marks file for deletion on NtClose.
Fall back to parsing cache manager if start_readfile() fails.
Print intention to delete file in filetracer plugin.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,510,2018-12-24T15:19:10Z,2018-12-24T15:41:37Z,2019-01-25T10:14:21Z,MERGED,True,58,24,2,https://github.com/skvl,FILEDELETE: fix file extraction on NtSetInformationFile,1,[],https://github.com/tklengyel/drakvuf/pull/510,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/510#issuecomment-449745638,"NtSetInformationFile marks file for deletion on NtClose.
Fall back to parsing cache manager if start_readfile() fails.
Print intention to delete file in filetracer plugin.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,510,2018-12-24T15:19:10Z,2018-12-24T15:41:37Z,2019-01-25T10:14:21Z,MERGED,True,58,24,2,https://github.com/skvl,FILEDELETE: fix file extraction on NtSetInformationFile,1,[],https://github.com/tklengyel/drakvuf/pull/510,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/510#issuecomment-449746358,"NtSetInformationFile marks file for deletion on NtClose.
Fall back to parsing cache manager if start_readfile() fails.
Print intention to delete file in filetracer plugin.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,511,2018-12-26T14:24:47Z,2019-01-10T23:29:57Z,2019-01-11T08:48:25Z,MERGED,True,26,7,1,https://github.com/disaykin,LIBINJECTOR: Filter exits from injected calls by target rsp,1,[],https://github.com/tklengyel/drakvuf/pull/511,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/511,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,511,2018-12-26T14:24:47Z,2019-01-10T23:29:57Z,2019-01-11T08:48:25Z,MERGED,True,26,7,1,https://github.com/disaykin,LIBINJECTOR: Filter exits from injected calls by target rsp,1,[],https://github.com/tklengyel/drakvuf/pull/511,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/511#issuecomment-449973584,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,511,2018-12-26T14:24:47Z,2019-01-10T23:29:57Z,2019-01-11T08:48:25Z,MERGED,True,26,7,1,https://github.com/disaykin,LIBINJECTOR: Filter exits from injected calls by target rsp,1,[],https://github.com/tklengyel/drakvuf/pull/511,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/511#issuecomment-449973696,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,511,2018-12-26T14:24:47Z,2019-01-10T23:29:57Z,2019-01-11T08:48:25Z,MERGED,True,26,7,1,https://github.com/disaykin,LIBINJECTOR: Filter exits from injected calls by target rsp,1,[],https://github.com/tklengyel/drakvuf/pull/511,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/511#issuecomment-449986241,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,511,2018-12-26T14:24:47Z,2019-01-10T23:29:57Z,2019-01-11T08:48:25Z,MERGED,True,26,7,1,https://github.com/disaykin,LIBINJECTOR: Filter exits from injected calls by target rsp,1,[],https://github.com/tklengyel/drakvuf/pull/511,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/511#issuecomment-450653063,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,511,2018-12-26T14:24:47Z,2019-01-10T23:29:57Z,2019-01-11T08:48:25Z,MERGED,True,26,7,1,https://github.com/disaykin,LIBINJECTOR: Filter exits from injected calls by target rsp,1,[],https://github.com/tklengyel/drakvuf/pull/511,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/511#issuecomment-450654955,,@disaykin some injection are now hanging for 5+ minutes before getting killed by the timeout although the injection itself was succesful,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,511,2018-12-26T14:24:47Z,2019-01-10T23:29:57Z,2019-01-11T08:48:25Z,MERGED,True,26,7,1,https://github.com/disaykin,LIBINJECTOR: Filter exits from injected calls by target rsp,1,[],https://github.com/tklengyel/drakvuf/pull/511,https://github.com/disaykin,7,https://github.com/tklengyel/drakvuf/pull/511#issuecomment-450656438,,@tklengyel thanks. I try catch and debug this behaivour.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,511,2018-12-26T14:24:47Z,2019-01-10T23:29:57Z,2019-01-11T08:48:25Z,MERGED,True,26,7,1,https://github.com/disaykin,LIBINJECTOR: Filter exits from injected calls by target rsp,1,[],https://github.com/tklengyel/drakvuf/pull/511,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/511#issuecomment-450656793,,"@disaykin AFAICT the injections that are hanging are the ones initiated through the drakvuf binary, not through injector.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,511,2018-12-26T14:24:47Z,2019-01-10T23:29:57Z,2019-01-11T08:48:25Z,MERGED,True,26,7,1,https://github.com/disaykin,LIBINJECTOR: Filter exits from injected calls by target rsp,1,[],https://github.com/tklengyel/drakvuf/pull/511,https://github.com/disaykin,9,https://github.com/tklengyel/drakvuf/pull/511#issuecomment-453065704,,"@tklengyel I can't reproduce the hang behaviour. Can you give me debug logs for the hung case, please?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,511,2018-12-26T14:24:47Z,2019-01-10T23:29:57Z,2019-01-11T08:48:25Z,MERGED,True,26,7,1,https://github.com/disaykin,LIBINJECTOR: Filter exits from injected calls by target rsp,1,[],https://github.com/tklengyel/drakvuf/pull/511,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/511#issuecomment-453298889,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,511,2018-12-26T14:24:47Z,2019-01-10T23:29:57Z,2019-01-11T08:48:25Z,MERGED,True,26,7,1,https://github.com/disaykin,LIBINJECTOR: Filter exits from injected calls by target rsp,1,[],https://github.com/tklengyel/drakvuf/pull/511,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/511#issuecomment-453300294,,@disaykin That behavior seems to have gone away ¯\_(ツ)_/¯,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,512,2018-12-28T20:18:27Z,2018-12-28T20:29:15Z,2018-12-28T20:29:15Z,MERGED,True,1,1,1,https://github.com/mleinhos,Fixed stack corruption in poolmon plugin.,1,[],https://github.com/tklengyel/drakvuf/pull/512,https://github.com/mleinhos,1,https://github.com/tklengyel/drakvuf/pull/512,Poolmon clobbers a stack variable; this request fixes it.,Poolmon clobbers a stack variable; this request fixes it.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,515,2019-01-03T14:28:42Z,2019-01-03T18:20:57Z,2019-01-03T18:21:00Z,MERGED,True,4,2,2,https://github.com/tklengyel,Update LibVMI,1,[],https://github.com/tklengyel/drakvuf/pull/515,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/515,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,519,2019-01-04T18:16:20Z,2019-01-04T18:58:07Z,2019-01-04T18:58:10Z,MERGED,True,20,7,4,https://github.com/tklengyel,Misc fixes for bugs spotted by Sonar,1,[],https://github.com/tklengyel/drakvuf/pull/519,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/519,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,520,2019-01-04T21:36:14Z,2019-01-04T22:51:56Z,2019-01-04T22:51:58Z,MERGED,True,22,14,1,https://github.com/tklengyel,Support Linux 4.18+ syscall tracing,1,[],https://github.com/tklengyel/drakvuf/pull/520,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/520,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,523,2019-01-10T23:35:30Z,2019-01-10T23:40:24Z,2019-01-10T23:40:27Z,MERGED,True,6,3,1,https://github.com/tklengyel,Add more debug messages,1,[],https://github.com/tklengyel/drakvuf/pull/523,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/523,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,524,2019-01-11T15:55:14Z,2019-01-11T16:23:13Z,2019-01-11T16:23:16Z,MERGED,True,8,16,1,https://github.com/tklengyel,Update Travis to Xenial,1,[],https://github.com/tklengyel/drakvuf/pull/524,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/524,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,525,2019-01-15T15:07:58Z,2019-01-17T17:00:41Z,2019-01-21T06:55:01Z,MERGED,True,140,26,9,https://github.com/aoshiken,Added module_info_t structure for optimizing setting traps on DLLs...,1,[],https://github.com/tklengyel/drakvuf/pull/525,https://github.com/aoshiken,1,https://github.com/tklengyel/drakvuf/pull/525,"...grouping the following data into the module_info_t structure:

Eprocess address to which the module is currently loaded
DTB of the process where the module is currently loaded
PID of the process where the module is currently loaded
Module base address
DLL base name
DLL full name

...and modified the function drakvuf_enumerate_processes_with_module() accordingly so now the DLL visitor callback can access the aforementioned data through its parameter module_info_t* module_info","...grouping the following data into the module_info_t structure:

Eprocess address to which the module is currently loaded
DTB of the process where the module is currently loaded
PID of the process where the module is currently loaded
Module base address
DLL base name
DLL full name

...and modified the function drakvuf_enumerate_processes_with_module() accordingly so now the DLL visitor callback can access the aforementioned data through its parameter module_info_t* module_info",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,525,2019-01-15T15:07:58Z,2019-01-17T17:00:41Z,2019-01-21T06:55:01Z,MERGED,True,140,26,9,https://github.com/aoshiken,Added module_info_t structure for optimizing setting traps on DLLs...,1,[],https://github.com/tklengyel/drakvuf/pull/525,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/525#issuecomment-454428477,"...grouping the following data into the module_info_t structure:

Eprocess address to which the module is currently loaded
DTB of the process where the module is currently loaded
PID of the process where the module is currently loaded
Module base address
DLL base name
DLL full name

...and modified the function drakvuf_enumerate_processes_with_module() accordingly so now the DLL visitor callback can access the aforementioned data through its parameter module_info_t* module_info",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,525,2019-01-15T15:07:58Z,2019-01-17T17:00:41Z,2019-01-21T06:55:01Z,MERGED,True,140,26,9,https://github.com/aoshiken,Added module_info_t structure for optimizing setting traps on DLLs...,1,[],https://github.com/tklengyel/drakvuf/pull/525,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/525#issuecomment-454428498,"...grouping the following data into the module_info_t structure:

Eprocess address to which the module is currently loaded
DTB of the process where the module is currently loaded
PID of the process where the module is currently loaded
Module base address
DLL base name
DLL full name

...and modified the function drakvuf_enumerate_processes_with_module() accordingly so now the DLL visitor callback can access the aforementioned data through its parameter module_info_t* module_info",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,525,2019-01-15T15:07:58Z,2019-01-17T17:00:41Z,2019-01-21T06:55:01Z,MERGED,True,140,26,9,https://github.com/aoshiken,Added module_info_t structure for optimizing setting traps on DLLs...,1,[],https://github.com/tklengyel/drakvuf/pull/525,https://github.com/aoshiken,4,https://github.com/tklengyel/drakvuf/pull/525#issuecomment-454540238,"...grouping the following data into the module_info_t structure:

Eprocess address to which the module is currently loaded
DTB of the process where the module is currently loaded
PID of the process where the module is currently loaded
Module base address
DLL base name
DLL full name

...and modified the function drakvuf_enumerate_processes_with_module() accordingly so now the DLL visitor callback can access the aforementioned data through its parameter module_info_t* module_info",I'm not right in front of my computer so I can't fix the style issues that prevents the PR to be built but planning on do it tomorrow morning,True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,525,2019-01-15T15:07:58Z,2019-01-17T17:00:41Z,2019-01-21T06:55:01Z,MERGED,True,140,26,9,https://github.com/aoshiken,Added module_info_t structure for optimizing setting traps on DLLs...,1,[],https://github.com/tklengyel/drakvuf/pull/525,https://github.com/aoshiken,5,https://github.com/tklengyel/drakvuf/pull/525#issuecomment-454676844,"...grouping the following data into the module_info_t structure:

Eprocess address to which the module is currently loaded
DTB of the process where the module is currently loaded
PID of the process where the module is currently loaded
Module base address
DLL base name
DLL full name

...and modified the function drakvuf_enumerate_processes_with_module() accordingly so now the DLL visitor callback can access the aforementioned data through its parameter module_info_t* module_info",I squashed the style modifications into the initial commit,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,525,2019-01-15T15:07:58Z,2019-01-17T17:00:41Z,2019-01-21T06:55:01Z,MERGED,True,140,26,9,https://github.com/aoshiken,Added module_info_t structure for optimizing setting traps on DLLs...,1,[],https://github.com/tklengyel/drakvuf/pull/525,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/525#issuecomment-454788330,"...grouping the following data into the module_info_t structure:

Eprocess address to which the module is currently loaded
DTB of the process where the module is currently loaded
PID of the process where the module is currently loaded
Module base address
DLL base name
DLL full name

...and modified the function drakvuf_enumerate_processes_with_module() accordingly so now the DLL visitor callback can access the aforementioned data through its parameter module_info_t* module_info",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,525,2019-01-15T15:07:58Z,2019-01-17T17:00:41Z,2019-01-21T06:55:01Z,MERGED,True,140,26,9,https://github.com/aoshiken,Added module_info_t structure for optimizing setting traps on DLLs...,1,[],https://github.com/tklengyel/drakvuf/pull/525,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/525#issuecomment-454814608,"...grouping the following data into the module_info_t structure:

Eprocess address to which the module is currently loaded
DTB of the process where the module is currently loaded
PID of the process where the module is currently loaded
Module base address
DLL base name
DLL full name

...and modified the function drakvuf_enumerate_processes_with_module() accordingly so now the DLL visitor callback can access the aforementioned data through its parameter module_info_t* module_info",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,525,2019-01-15T15:07:58Z,2019-01-17T17:00:41Z,2019-01-21T06:55:01Z,MERGED,True,140,26,9,https://github.com/aoshiken,Added module_info_t structure for optimizing setting traps on DLLs...,1,[],https://github.com/tklengyel/drakvuf/pull/525,https://github.com/aoshiken,8,https://github.com/tklengyel/drakvuf/pull/525#issuecomment-455089310,"...grouping the following data into the module_info_t structure:

Eprocess address to which the module is currently loaded
DTB of the process where the module is currently loaded
PID of the process where the module is currently loaded
Module base address
DLL base name
DLL full name

...and modified the function drakvuf_enumerate_processes_with_module() accordingly so now the DLL visitor callback can access the aforementioned data through its parameter module_info_t* module_info","@tklengyel, I've squashed your requested changes with the original commit",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,525,2019-01-15T15:07:58Z,2019-01-17T17:00:41Z,2019-01-21T06:55:01Z,MERGED,True,140,26,9,https://github.com/aoshiken,Added module_info_t structure for optimizing setting traps on DLLs...,1,[],https://github.com/tklengyel/drakvuf/pull/525,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/525#issuecomment-455194063,"...grouping the following data into the module_info_t structure:

Eprocess address to which the module is currently loaded
DTB of the process where the module is currently loaded
PID of the process where the module is currently loaded
Module base address
DLL base name
DLL full name

...and modified the function drakvuf_enumerate_processes_with_module() accordingly so now the DLL visitor callback can access the aforementioned data through its parameter module_info_t* module_info",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,526,2019-01-16T09:24:28Z,2019-01-16T18:55:25Z,2019-01-16T20:36:08Z,MERGED,True,19,46,3,https://github.com/disaykin,Refactor stop-loop-on-the-timeout functionality,1,[],https://github.com/tklengyel/drakvuf/pull/526,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/526,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,526,2019-01-16T09:24:28Z,2019-01-16T18:55:25Z,2019-01-16T20:36:08Z,MERGED,True,19,46,3,https://github.com/disaykin,Refactor stop-loop-on-the-timeout functionality,1,[],https://github.com/tklengyel/drakvuf/pull/526,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/526#issuecomment-454879541,,The thread is suspended until the lock becomes available. There is no sleeping until the loop starts.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,526,2019-01-16T09:24:28Z,2019-01-16T18:55:25Z,2019-01-16T20:36:08Z,MERGED,True,19,46,3,https://github.com/disaykin,Refactor stop-loop-on-the-timeout functionality,1,[],https://github.com/tklengyel/drakvuf/pull/526,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/526#issuecomment-454879557,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,526,2019-01-16T09:24:28Z,2019-01-16T18:55:25Z,2019-01-16T20:36:08Z,MERGED,True,19,46,3,https://github.com/disaykin,Refactor stop-loop-on-the-timeout functionality,1,[],https://github.com/tklengyel/drakvuf/pull/526,https://github.com/disaykin,4,https://github.com/tklengyel/drakvuf/pull/526#issuecomment-454883844,,I mean the difference between this two solutions is too small compared to overall loop duration.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,526,2019-01-16T09:24:28Z,2019-01-16T18:55:25Z,2019-01-16T20:36:08Z,MERGED,True,19,46,3,https://github.com/disaykin,Refactor stop-loop-on-the-timeout functionality,1,[],https://github.com/tklengyel/drakvuf/pull/526,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/526#issuecomment-454884098,,Then why change it?,True,{'THUMBS_UP': ['https://github.com/disaykin']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,526,2019-01-16T09:24:28Z,2019-01-16T18:55:25Z,2019-01-16T20:36:08Z,MERGED,True,19,46,3,https://github.com/disaykin,Refactor stop-loop-on-the-timeout functionality,1,[],https://github.com/tklengyel/drakvuf/pull/526,https://github.com/disaykin,6,https://github.com/tklengyel/drakvuf/pull/526#issuecomment-454885636,,I'm going to add a timeout on the app injection process.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,526,2019-01-16T09:24:28Z,2019-01-16T18:55:25Z,2019-01-16T20:36:08Z,MERGED,True,19,46,3,https://github.com/disaykin,Refactor stop-loop-on-the-timeout functionality,1,[],https://github.com/tklengyel/drakvuf/pull/526,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/526#issuecomment-454886227,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,526,2019-01-16T09:24:28Z,2019-01-16T18:55:25Z,2019-01-16T20:36:08Z,MERGED,True,19,46,3,https://github.com/disaykin,Refactor stop-loop-on-the-timeout functionality,1,[],https://github.com/tklengyel/drakvuf/pull/526,https://github.com/disaykin,8,https://github.com/tklengyel/drakvuf/pull/526#issuecomment-454886883,,"This functionality strongly interfere with each other, which complicates the correct solution.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,527,2019-01-16T10:51:57Z,2019-01-16T17:10:13Z,2019-01-16T17:10:13Z,MERGED,True,21,5,1,https://github.com/zodeak,add long options support,2,[],https://github.com/tklengyel/drakvuf/pull/527,https://github.com/zodeak,1,https://github.com/tklengyel/drakvuf/pull/527,,,True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,527,2019-01-16T10:51:57Z,2019-01-16T17:10:13Z,2019-01-16T17:10:13Z,MERGED,True,21,5,1,https://github.com/zodeak,add long options support,2,[],https://github.com/tklengyel/drakvuf/pull/527,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/527#issuecomment-454788430,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,527,2019-01-16T10:51:57Z,2019-01-16T17:10:13Z,2019-01-16T17:10:13Z,MERGED,True,21,5,1,https://github.com/zodeak,add long options support,2,[],https://github.com/tklengyel/drakvuf/pull/527,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/527#issuecomment-454788444,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,527,2019-01-16T10:51:57Z,2019-01-16T17:10:13Z,2019-01-16T17:10:13Z,MERGED,True,21,5,1,https://github.com/zodeak,add long options support,2,[],https://github.com/tklengyel/drakvuf/pull/527,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/527#issuecomment-454814509,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,527,2019-01-16T10:51:57Z,2019-01-16T17:10:13Z,2019-01-16T17:10:13Z,MERGED,True,21,5,1,https://github.com/zodeak,add long options support,2,[],https://github.com/tklengyel/drakvuf/pull/527,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/527#issuecomment-454860409,,"Thanks for adding this, it has been on my mind to add it too for a while. If you have the time, feel free to add the long options for the rest of the inputs ;)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,528,2019-01-16T23:08:08Z,2019-01-17T00:18:56Z,2019-01-17T00:18:58Z,MERGED,True,17,7,2,https://github.com/tklengyel,Update LibVMI,1,[],https://github.com/tklengyel/drakvuf/pull/528,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/528,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,529,2019-01-18T08:15:15Z,2019-01-18T15:51:38Z,2019-01-18T15:51:38Z,MERGED,True,8428,7,4,https://github.com/zodeak,[procmon] readable exit status,3,[],https://github.com/tklengyel/drakvuf/pull/529,https://github.com/zodeak,1,https://github.com/tklengyel/drakvuf/pull/529,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,529,2019-01-18T08:15:15Z,2019-01-18T15:51:38Z,2019-01-18T15:51:38Z,MERGED,True,8428,7,4,https://github.com/zodeak,[procmon] readable exit status,3,[],https://github.com/tklengyel/drakvuf/pull/529,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/529#issuecomment-455579099,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,529,2019-01-18T08:15:15Z,2019-01-18T15:51:38Z,2019-01-18T15:51:38Z,MERGED,True,8428,7,4,https://github.com/zodeak,[procmon] readable exit status,3,[],https://github.com/tklengyel/drakvuf/pull/529,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/529#issuecomment-455580745,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,529,2019-01-18T08:15:15Z,2019-01-18T15:51:38Z,2019-01-18T15:51:38Z,MERGED,True,8428,7,4,https://github.com/zodeak,[procmon] readable exit status,3,[],https://github.com/tklengyel/drakvuf/pull/529,https://github.com/drakvuf-jenkins,4,https://github.com/tklengyel/drakvuf/pull/529#issuecomment-455580758,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,529,2019-01-18T08:15:15Z,2019-01-18T15:51:38Z,2019-01-18T15:51:38Z,MERGED,True,8428,7,4,https://github.com/zodeak,[procmon] readable exit status,3,[],https://github.com/tklengyel/drakvuf/pull/529,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/529#issuecomment-455592594,,Thanks! Looks good.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,530,2019-01-18T10:08:34Z,2019-01-19T18:18:44Z,2019-01-19T19:16:57Z,MERGED,True,158,47,9,https://github.com/disaykin,Add optional timeout for app injection process,1,[],https://github.com/tklengyel/drakvuf/pull/530,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/530,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,530,2019-01-18T10:08:34Z,2019-01-19T18:18:44Z,2019-01-19T19:16:57Z,MERGED,True,158,47,9,https://github.com/disaykin,Add optional timeout for app injection process,1,[],https://github.com/tklengyel/drakvuf/pull/530,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/530#issuecomment-455582872,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,530,2019-01-18T10:08:34Z,2019-01-19T18:18:44Z,2019-01-19T19:16:57Z,MERGED,True,158,47,9,https://github.com/disaykin,Add optional timeout for app injection process,1,[],https://github.com/tklengyel/drakvuf/pull/530,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/530#issuecomment-455582882,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,530,2019-01-18T10:08:34Z,2019-01-19T18:18:44Z,2019-01-19T19:16:57Z,MERGED,True,158,47,9,https://github.com/disaykin,Add optional timeout for app injection process,1,[],https://github.com/tklengyel/drakvuf/pull/530,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/530#issuecomment-455741869,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,530,2019-01-18T10:08:34Z,2019-01-19T18:18:44Z,2019-01-19T19:16:57Z,MERGED,True,158,47,9,https://github.com/disaykin,Add optional timeout for app injection process,1,[],https://github.com/tklengyel/drakvuf/pull/530,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/530#issuecomment-455742022,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,530,2019-01-18T10:08:34Z,2019-01-19T18:18:44Z,2019-01-19T19:16:57Z,MERGED,True,158,47,9,https://github.com/disaykin,Add optional timeout for app injection process,1,[],https://github.com/tklengyel/drakvuf/pull/530,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/530#issuecomment-455742403,,"I'm getting some failures with this PR, like:
Injector freed
*** Error in `/var/lib/jenkins/workspace/DRAKVUF-windows7-sp1-x64/src/injector': free(): invalid pointer: 0x00007f869f3ffd78 ***
======= Backtrace: =========
/lib/x86_64-linux-gnu/libc.so.6(+0x70bfb)[0x7f869f0d6bfb]
/lib/x86_64-linux-gnu/libc.so.6(+0x76fc6)[0x7f869f0dcfc6]
/lib/x86_64-linux-gnu/libc.so.6(+0x7780e)[0x7f869f0dd80e]
/opt/libvmi/lib/libvmi.so.0(vmi_free_unicode_str+0x17)[0x7f869f94a5e7]
/var/lib/jenkins/workspace/DRAKVUF-windows7-sp1-x64/src/injector(+0x12618)[0x561cd1a4b618]",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,530,2019-01-18T10:08:34Z,2019-01-19T18:18:44Z,2019-01-19T19:16:57Z,MERGED,True,158,47,9,https://github.com/disaykin,Add optional timeout for app injection process,1,[],https://github.com/tklengyel/drakvuf/pull/530,https://github.com/disaykin,7,https://github.com/tklengyel/drakvuf/pull/530#issuecomment-455799736,,"It looks like this error is not related to current changes. But I found and fix the use case that I missed earlier. In case of injector_start_app detects injected process before ntresumethread returns, then injector application will may leave stack in incorrect state.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,530,2019-01-18T10:08:34Z,2019-01-19T18:18:44Z,2019-01-19T19:16:57Z,MERGED,True,158,47,9,https://github.com/disaykin,Add optional timeout for app injection process,1,[],https://github.com/tklengyel/drakvuf/pull/530,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/530#issuecomment-455801822,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,531,2019-01-20T14:48:03Z,2019-01-20T16:33:16Z,2019-01-20T16:33:19Z,MERGED,True,96,96,96,https://github.com/tklengyel,Update year in the license,1,[],https://github.com/tklengyel/drakvuf/pull/531,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/531,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,532,2019-01-20T15:12:00Z,2019-01-20T15:48:44Z,2019-01-21T02:55:14Z,MERGED,True,30,34,2,https://github.com/tklengyel,Fix hazardous injector free behavior,1,[],https://github.com/tklengyel/drakvuf/pull/532,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/532,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,534,2019-01-23T08:33:05Z,2019-01-23T15:04:00Z,2019-01-23T15:04:00Z,MERGED,True,2,0,1,https://github.com/zodeak,[procmon] correctly handle hprocess specific values,1,[],https://github.com/tklengyel/drakvuf/pull/534,https://github.com/zodeak,1,https://github.com/tklengyel/drakvuf/pull/534,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,534,2019-01-23T08:33:05Z,2019-01-23T15:04:00Z,2019-01-23T15:04:00Z,MERGED,True,2,0,1,https://github.com/zodeak,[procmon] correctly handle hprocess specific values,1,[],https://github.com/tklengyel/drakvuf/pull/534,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/534#issuecomment-456714190,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,534,2019-01-23T08:33:05Z,2019-01-23T15:04:00Z,2019-01-23T15:04:00Z,MERGED,True,2,0,1,https://github.com/zodeak,[procmon] correctly handle hprocess specific values,1,[],https://github.com/tklengyel/drakvuf/pull/534,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/534#issuecomment-456820900,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,535,2019-01-23T12:18:23Z,2019-01-23T15:40:11Z,2019-01-23T17:57:51Z,MERGED,True,6093,2,11,https://github.com/skvl,GetLastError,3,[],https://github.com/tklengyel/drakvuf/pull/535,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/535,"Add interface to get last error value
Check error code after process injection","Add interface to get last error value
Check error code after process injection",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,535,2019-01-23T12:18:23Z,2019-01-23T15:40:11Z,2019-01-23T17:57:51Z,MERGED,True,6093,2,11,https://github.com/skvl,GetLastError,3,[],https://github.com/tklengyel/drakvuf/pull/535,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/535#issuecomment-456781108,"Add interface to get last error value
Check error code after process injection",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,535,2019-01-23T12:18:23Z,2019-01-23T15:40:11Z,2019-01-23T17:57:51Z,MERGED,True,6093,2,11,https://github.com/skvl,GetLastError,3,[],https://github.com/tklengyel/drakvuf/pull/535,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/535#issuecomment-456821403,"Add interface to get last error value
Check error code after process injection",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,536,2019-01-23T18:04:02Z,2019-01-24T05:02:51Z,2019-01-25T10:14:21Z,MERGED,True,471,0,16,https://github.com/skvl,Add plugin crashmon,6,[],https://github.com/tklengyel/drakvuf/pull/536,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/536,"This plugin monitors Windows process ""WerFault.exe"" which is called on process crash.
From command line of the process one could get PID of crashed process.
Also check for crashing processes while injection.","This plugin monitors Windows process ""WerFault.exe"" which is called on process crash.
From command line of the process one could get PID of crashed process.
Also check for crashing processes while injection.",True,"{'THUMBS_UP': ['https://github.com/tklengyel'], 'HEART': ['https://github.com/tklengyel']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,536,2019-01-23T18:04:02Z,2019-01-24T05:02:51Z,2019-01-25T10:14:21Z,MERGED,True,471,0,16,https://github.com/skvl,Add plugin crashmon,6,[],https://github.com/tklengyel/drakvuf/pull/536,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/536#issuecomment-456905319,"This plugin monitors Windows process ""WerFault.exe"" which is called on process crash.
From command line of the process one could get PID of crashed process.
Also check for crashing processes while injection.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,536,2019-01-23T18:04:02Z,2019-01-24T05:02:51Z,2019-01-25T10:14:21Z,MERGED,True,471,0,16,https://github.com/skvl,Add plugin crashmon,6,[],https://github.com/tklengyel/drakvuf/pull/536,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/536#issuecomment-456911460,"This plugin monitors Windows process ""WerFault.exe"" which is called on process crash.
From command line of the process one could get PID of crashed process.
Also check for crashing processes while injection.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,537,2019-01-24T05:03:00Z,2019-01-24T14:14:50Z,2019-01-24T14:14:54Z,MERGED,True,64,49,5,https://github.com/tklengyel,Fix some sonarcloud warnings,1,[],https://github.com/tklengyel/drakvuf/pull/537,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/537,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,538,2019-01-24T09:06:22Z,2019-01-24T14:34:33Z,2019-01-25T10:14:21Z,MERGED,True,1,1,1,https://github.com/skvl,Plugin crashmon: Print full path of crached process,1,[],https://github.com/tklengyel/drakvuf/pull/538,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/538,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,538,2019-01-24T09:06:22Z,2019-01-24T14:34:33Z,2019-01-25T10:14:21Z,MERGED,True,1,1,1,https://github.com/skvl,Plugin crashmon: Print full path of crached process,1,[],https://github.com/tklengyel/drakvuf/pull/538,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/538#issuecomment-457211255,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,538,2019-01-24T09:06:22Z,2019-01-24T14:34:33Z,2019-01-25T10:14:21Z,MERGED,True,1,1,1,https://github.com/skvl,Plugin crashmon: Print full path of crached process,1,[],https://github.com/tklengyel/drakvuf/pull/538,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/538#issuecomment-457215681,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,539,2019-01-25T11:18:12Z,2019-01-29T15:44:15Z,2019-01-30T14:41:44Z,MERGED,True,100,17,10,https://github.com/skvl,Make injector to search functions in all processes until succeed,4,[],https://github.com/tklengyel/drakvuf/pull/539,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/539,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,539,2019-01-25T11:18:12Z,2019-01-29T15:44:15Z,2019-01-30T14:41:44Z,MERGED,True,100,17,10,https://github.com/skvl,Make injector to search functions in all processes until succeed,4,[],https://github.com/tklengyel/drakvuf/pull/539,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/539#issuecomment-457541469,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,539,2019-01-25T11:18:12Z,2019-01-29T15:44:15Z,2019-01-30T14:41:44Z,MERGED,True,100,17,10,https://github.com/skvl,Make injector to search functions in all processes until succeed,4,[],https://github.com/tklengyel/drakvuf/pull/539,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/539#issuecomment-457603152,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,539,2019-01-25T11:18:12Z,2019-01-29T15:44:15Z,2019-01-30T14:41:44Z,MERGED,True,100,17,10,https://github.com/skvl,Make injector to search functions in all processes until succeed,4,[],https://github.com/tklengyel/drakvuf/pull/539,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/539#issuecomment-457764361,,I'm not sure how this is supposed to work. If the target process doesn't have the requested library/function then what good does it do to find it in another process?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,539,2019-01-25T11:18:12Z,2019-01-29T15:44:15Z,2019-01-30T14:41:44Z,MERGED,True,100,17,10,https://github.com/skvl,Make injector to search functions in all processes until succeed,4,[],https://github.com/tklengyel/drakvuf/pull/539,https://github.com/skvl,5,https://github.com/tklengyel/drakvuf/pull/539#issuecomment-457893798,,"If for example somebody injects into explorer.exe it is possible that kernel32!CreateProcess is not loaded into the processes address space (deferred loading). So it is injection fail. But we could search into other processes where it should be loaded and use the address for injection. During call the OS catch a call to deferred function and loads it into address space.
Something like this have been used in socketmon plugin to find where to setup hooks.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,539,2019-01-25T11:18:12Z,2019-01-29T15:44:15Z,2019-01-30T14:41:44Z,MERGED,True,100,17,10,https://github.com/skvl,Make injector to search functions in all processes until succeed,4,[],https://github.com/tklengyel/drakvuf/pull/539,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/539#issuecomment-457923965,,You would have to ensure though that the library is mapped to the same virtual address across the processes. There is no guarantee that is always the case.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,539,2019-01-25T11:18:12Z,2019-01-29T15:44:15Z,2019-01-30T14:41:44Z,MERGED,True,100,17,10,https://github.com/skvl,Make injector to search functions in all processes until succeed,4,[],https://github.com/tklengyel/drakvuf/pull/539,https://github.com/skvl,7,https://github.com/tklengyel/drakvuf/pull/539#issuecomment-458146325,,"@tklengyel I have fixed this.
I have added a check of modules base address while iterating through processes.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,539,2019-01-25T11:18:12Z,2019-01-29T15:44:15Z,2019-01-30T14:41:44Z,MERGED,True,100,17,10,https://github.com/skvl,Make injector to search functions in all processes until succeed,4,[],https://github.com/tklengyel/drakvuf/pull/539,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/539#issuecomment-458252832,,"Thanks, could you also make this behavior conditional? It is only applicable to a subset of usecases so I would prefer it was only done when the user specifically says its OK.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,539,2019-01-25T11:18:12Z,2019-01-29T15:44:15Z,2019-01-30T14:41:44Z,MERGED,True,100,17,10,https://github.com/skvl,Make injector to search functions in all processes until succeed,4,[],https://github.com/tklengyel/drakvuf/pull/539,https://github.com/skvl,9,https://github.com/tklengyel/drakvuf/pull/539#issuecomment-458276038,,@tklengyel I have added option -g.,True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,540,2019-01-25T12:56:51Z,2019-01-28T23:57:12Z,2019-01-30T14:41:45Z,MERGED,True,59,0,1,https://github.com/skvl,Dereference pointers to HANDLE and PID for NtOpenProcess,2,[],https://github.com/tklengyel/drakvuf/pull/540,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/540,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,540,2019-01-25T12:56:51Z,2019-01-28T23:57:12Z,2019-01-30T14:41:45Z,MERGED,True,59,0,1,https://github.com/skvl,Dereference pointers to HANDLE and PID for NtOpenProcess,2,[],https://github.com/tklengyel/drakvuf/pull/540,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/540#issuecomment-457564715,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,540,2019-01-25T12:56:51Z,2019-01-28T23:57:12Z,2019-01-30T14:41:45Z,MERGED,True,59,0,1,https://github.com/skvl,Dereference pointers to HANDLE and PID for NtOpenProcess,2,[],https://github.com/tklengyel/drakvuf/pull/540,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/540#issuecomment-457603018,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,540,2019-01-25T12:56:51Z,2019-01-28T23:57:12Z,2019-01-30T14:41:45Z,MERGED,True,59,0,1,https://github.com/skvl,Dereference pointers to HANDLE and PID for NtOpenProcess,2,[],https://github.com/tklengyel/drakvuf/pull/540,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/540#issuecomment-457607280,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,541,2019-01-25T23:18:52Z,2019-01-25T23:41:55Z,2019-01-25T23:41:57Z,MERGED,True,34,13,4,https://github.com/tklengyel,Assorted fixes,1,[],https://github.com/tklengyel/drakvuf/pull/541,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/541,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,541,2019-01-25T23:18:52Z,2019-01-25T23:41:55Z,2019-01-25T23:41:57Z,MERGED,True,34,13,4,https://github.com/tklengyel,Assorted fixes,1,[],https://github.com/tklengyel/drakvuf/pull/541,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/541#issuecomment-457771091,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,542,2019-01-28T05:13:24Z,2019-01-28T05:51:32Z,2019-01-28T05:51:36Z,MERGED,True,156,118,5,https://github.com/tklengyel,Fix injector leak if detected before resume returns,1,[],https://github.com/tklengyel/drakvuf/pull/542,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/542,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,543,2019-01-28T20:46:44Z,2019-02-08T23:13:57Z,2019-02-08T23:18:05Z,MERGED,True,1625,320,21,https://github.com/mleinhos,JSON-formatted output,54,[],https://github.com/tklengyel/drakvuf/pull/543,https://github.com/mleinhos,1,https://github.com/tklengyel/drakvuf/pull/543,This PR features JSON output for DRAKVUF. It relies on the existing dependency json-c and requires no configuration/build alterations. It has been tested against several tens of millions of events.,This PR features JSON output for DRAKVUF. It relies on the existing dependency json-c and requires no configuration/build alterations. It has been tested against several tens of millions of events.,True,"{'THUMBS_UP': ['https://github.com/tklengyel'], 'HEART': ['https://github.com/tklengyel']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,543,2019-01-28T20:46:44Z,2019-02-08T23:13:57Z,2019-02-08T23:18:05Z,MERGED,True,1625,320,21,https://github.com/mleinhos,JSON-formatted output,54,[],https://github.com/tklengyel/drakvuf/pull/543,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/543#issuecomment-458294783,This PR features JSON output for DRAKVUF. It relies on the existing dependency json-c and requires no configuration/build alterations. It has been tested against several tens of millions of events.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,543,2019-01-28T20:46:44Z,2019-02-08T23:13:57Z,2019-02-08T23:18:05Z,MERGED,True,1625,320,21,https://github.com/mleinhos,JSON-formatted output,54,[],https://github.com/tklengyel/drakvuf/pull/543,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/543#issuecomment-458319310,This PR features JSON output for DRAKVUF. It relies on the existing dependency json-c and requires no configuration/build alterations. It has been tested against several tens of millions of events.,@mleinhos Thanks for adding this. Please add the new python files to the tools folder instead of src,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,543,2019-01-28T20:46:44Z,2019-02-08T23:13:57Z,2019-02-08T23:18:05Z,MERGED,True,1625,320,21,https://github.com/mleinhos,JSON-formatted output,54,[],https://github.com/tklengyel/drakvuf/pull/543,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/543#issuecomment-458319638,This PR features JSON output for DRAKVUF. It relies on the existing dependency json-c and requires no configuration/build alterations. It has been tested against several tens of millions of events.,"You also seem to be updating the Xen submodule, I don't think that belongs in this PR.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,543,2019-01-28T20:46:44Z,2019-02-08T23:13:57Z,2019-02-08T23:18:05Z,MERGED,True,1625,320,21,https://github.com/mleinhos,JSON-formatted output,54,[],https://github.com/tklengyel/drakvuf/pull/543,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/543#issuecomment-458320523,This PR features JSON output for DRAKVUF. It relies on the existing dependency json-c and requires no configuration/build alterations. It has been tested against several tens of millions of events.,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,543,2019-01-28T20:46:44Z,2019-02-08T23:13:57Z,2019-02-08T23:18:05Z,MERGED,True,1625,320,21,https://github.com/mleinhos,JSON-formatted output,54,[],https://github.com/tklengyel/drakvuf/pull/543,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/543#issuecomment-458684633,This PR features JSON output for DRAKVUF. It relies on the existing dependency json-c and requires no configuration/build alterations. It has been tested against several tens of millions of events.,The Xen submodule is still being updated in this PR,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,543,2019-01-28T20:46:44Z,2019-02-08T23:13:57Z,2019-02-08T23:18:05Z,MERGED,True,1625,320,21,https://github.com/mleinhos,JSON-formatted output,54,[],https://github.com/tklengyel/drakvuf/pull/543,https://github.com/mleinhos,7,https://github.com/tklengyel/drakvuf/pull/543#issuecomment-458686234,This PR features JSON output for DRAKVUF. It relies on the existing dependency json-c and requires no configuration/build alterations. It has been tested against several tens of millions of events.,"OK. I now show that my branch and your master are on the same rev of xen.
…
On Tue, Jan 29, 2019 at 1:57 PM Tamas K Lengyel ***@***.***> wrote:
 The Xen submodule is still being updated in this PR

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#543 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/ALHH_C00KXdZPveUiy42_eNKLn1GsoRpks5vIKeWgaJpZM4aWvsZ>
 .",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,543,2019-01-28T20:46:44Z,2019-02-08T23:13:57Z,2019-02-08T23:18:05Z,MERGED,True,1625,320,21,https://github.com/mleinhos,JSON-formatted output,54,[],https://github.com/tklengyel/drakvuf/pull/543,https://github.com/mleinhos,8,https://github.com/tklengyel/drakvuf/pull/543#issuecomment-458689818,This PR features JSON output for DRAKVUF. It relies on the existing dependency json-c and requires no configuration/build alterations. It has been tested against several tens of millions of events.,"You're welcome to pull this in, but I haven't tested it to my own satisfaction yet. Windows changed the kernel of my test VM and I'm having trouble getting the updated PDB. I'll do further testing once I've gotten this figured out, but it could be a couple days with my other obligations.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,543,2019-01-28T20:46:44Z,2019-02-08T23:13:57Z,2019-02-08T23:18:05Z,MERGED,True,1625,320,21,https://github.com/mleinhos,JSON-formatted output,54,[],https://github.com/tklengyel/drakvuf/pull/543,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/543#issuecomment-458691160,This PR features JSON output for DRAKVUF. It relies on the existing dependency json-c and requires no configuration/build alterations. It has been tested against several tens of millions of events.,Travis is still complaining about style so that would also have to be fixed. For test VMs its probably best to pull the network interface altogether to avoid it being updated :) Microsoft can take a couple days to push their pdbs for new kernels.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,543,2019-01-28T20:46:44Z,2019-02-08T23:13:57Z,2019-02-08T23:18:05Z,MERGED,True,1625,320,21,https://github.com/mleinhos,JSON-formatted output,54,[],https://github.com/tklengyel/drakvuf/pull/543,https://github.com/mleinhos,10,https://github.com/tklengyel/drakvuf/pull/543#issuecomment-458691598,This PR features JSON output for DRAKVUF. It relies on the existing dependency json-c and requires no configuration/build alterations. It has been tested against several tens of millions of events.,"Can you point me to the style docs so I can fix that? Good idea on the
networking.
…
On Tue, Jan 29, 2019 at 2:17 PM Tamas K Lengyel ***@***.***> wrote:
 Travis is still complaining about style so that would also have to be
 fixed. For test VMs its probably best to pull the network interface
 altogether to avoid it being updated :) Microsoft can take a couple days to
 push their pdbs for new kernels.

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#543 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/ALHH_NXtCCd-O5m1G92hZNbBzTAEfb0yks5vIKxGgaJpZM4aWvsZ>
 .",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,543,2019-01-28T20:46:44Z,2019-02-08T23:13:57Z,2019-02-08T23:18:05Z,MERGED,True,1625,320,21,https://github.com/mleinhos,JSON-formatted output,54,[],https://github.com/tklengyel/drakvuf/pull/543,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/543#issuecomment-459097375,This PR features JSON output for DRAKVUF. It relies on the existing dependency json-c and requires no configuration/build alterations. It has been tested against several tens of millions of events.,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,543,2019-01-28T20:46:44Z,2019-02-08T23:13:57Z,2019-02-08T23:18:05Z,MERGED,True,1625,320,21,https://github.com/mleinhos,JSON-formatted output,54,[],https://github.com/tklengyel/drakvuf/pull/543,https://github.com/mleinhos,12,https://github.com/tklengyel/drakvuf/pull/543#issuecomment-459097945,This PR features JSON output for DRAKVUF. It relies on the existing dependency json-c and requires no configuration/build alterations. It has been tested against several tens of millions of events.,"I'm working through the formatting now. It's a pain. A tool in the repo
that formats the code correctly would be helpful in this case....
…
On Wed, Jan 30, 2019 at 2:30 PM Tamas K Lengyel ***@***.***> wrote:
 @drakvuf-jenkins <https://github.com/drakvuf-jenkins> Retest this please

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#543 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/ALHH_LN4pOQivt39G0tK9PHRtym3PX13ks5vIgD9gaJpZM4aWvsZ>
 .",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,543,2019-01-28T20:46:44Z,2019-02-08T23:13:57Z,2019-02-08T23:18:05Z,MERGED,True,1625,320,21,https://github.com/mleinhos,JSON-formatted output,54,[],https://github.com/tklengyel/drakvuf/pull/543,https://github.com/tklengyel,13,https://github.com/tklengyel/drakvuf/pull/543#issuecomment-459098326,This PR features JSON output for DRAKVUF. It relies on the existing dependency json-c and requires no configuration/build alterations. It has been tested against several tens of millions of events.,"You just have to run
export ARTISTIC_STYLE_OPTIONS="".astylerc"" && astyle `find . | egrep ""\.c|\.h""`",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,543,2019-01-28T20:46:44Z,2019-02-08T23:13:57Z,2019-02-08T23:18:05Z,MERGED,True,1625,320,21,https://github.com/mleinhos,JSON-formatted output,54,[],https://github.com/tklengyel/drakvuf/pull/543,https://github.com/mleinhos,14,https://github.com/tklengyel/drakvuf/pull/543#issuecomment-459149433,This PR features JSON output for DRAKVUF. It relies on the existing dependency json-c and requires no configuration/build alterations. It has been tested against several tens of millions of events.,"That would help us only partially. We're going to need our own solution
because g_strescape() and JSON handle non-ASCII values differently. See
https://json.org/ for details. Our custom solution here still needs work to
make it fully JSON compliant, but it covers the bulk of the cases I've seen
on my test VM.
…
On Wed, Jan 30, 2019 at 5:08 PM Tamas K Lengyel ***@***.***> wrote:
 ***@***.**** commented on this pull request.
 ------------------------------

 In src/libdrakvuf/drakvuf.c
 <#543 (comment)>:

 > + * delimiter-separated chunks over to the right, one by one, and
 + * backfilling cavities with NULL characters. Finally, places escape
 + * character at each remaining NULL character. For instance, here's
 + * how backslashes are escaped in a string (- is a NULL character):
 + *
 + * \A\B\c    (input string with 3 escapeable chars)
 + * \A\B----c (c shifted right 3)
 + * \A---B--c (B shifted right 2)
 + * --A--B--c (A shifted right 1)
 + * \\A\\B\\c (output string: NULLs filled in with \ chars)
 + *
 + * TODO: Handle non-ASCII character sets
 + *
 + * See https://www.freeformatter.com/json-escape.html
 + */
 +char* drakvuf_escape_str(const char* input)

 Instead of cooking up our own thing here, why not use g_strescape?

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#543 (review)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/ALHH_ELJRrcK-KoJRSTKTmiOOLCG6Mw2ks5vIiX0gaJpZM4aWvsZ>
 .",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,543,2019-01-28T20:46:44Z,2019-02-08T23:13:57Z,2019-02-08T23:18:05Z,MERGED,True,1625,320,21,https://github.com/mleinhos,JSON-formatted output,54,[],https://github.com/tklengyel/drakvuf/pull/543,https://github.com/tklengyel,15,https://github.com/tklengyel/drakvuf/pull/543#issuecomment-459411812,This PR features JSON output for DRAKVUF. It relies on the existing dependency json-c and requires no configuration/build alterations. It has been tested against several tens of millions of events.,Have you considered using something like https://github.com/nlohmann/json?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,543,2019-01-28T20:46:44Z,2019-02-08T23:13:57Z,2019-02-08T23:18:05Z,MERGED,True,1625,320,21,https://github.com/mleinhos,JSON-formatted output,54,[],https://github.com/tklengyel/drakvuf/pull/543,https://github.com/mleinhos,16,https://github.com/tklengyel/drakvuf/pull/543#issuecomment-459418213,This PR features JSON output for DRAKVUF. It relies on the existing dependency json-c and requires no configuration/build alterations. It has been tested against several tens of millions of events.,"I have not. Are you willing to assume another external dependency for
DRAKVUF?  Another option might be https://github.com/zserge/jsmn, I need to
read up on it.

As things are now, I've already updated the plugins to support JSON and
would prefer not to rewrite all that to another API. However, it seems
reasonable, at a minimum, to rewrite drakvuf_escape_str() to use a real
JSON library.

How would you like to move forward?

Kind regards,
--Matt
…
On Thu, Jan 31, 2019 at 10:34 AM Tamas K Lengyel ***@***.***> wrote:
 Have you considered using something like https://github.com/nlohmann/json?

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#543 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/ALHH_FWU-gUf92dZ30GcreeqN_DYaFLEks5vIxr4gaJpZM4aWvsZ>
 .",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,543,2019-01-28T20:46:44Z,2019-02-08T23:13:57Z,2019-02-08T23:18:05Z,MERGED,True,1625,320,21,https://github.com/mleinhos,JSON-formatted output,54,[],https://github.com/tklengyel/drakvuf/pull/543,https://github.com/tklengyel,17,https://github.com/tklengyel/drakvuf/pull/543#issuecomment-459435125,This PR features JSON output for DRAKVUF. It relies on the existing dependency json-c and requires no configuration/build alterations. It has been tested against several tens of millions of events.,Adding an another (optional) dependency would be completely fine as long as the license is compatible (MIT is fine in this case). I would much rather have a standard and separately maintained dependency then having custom stuff internal that we have to maintain going forward.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,543,2019-01-28T20:46:44Z,2019-02-08T23:13:57Z,2019-02-08T23:18:05Z,MERGED,True,1625,320,21,https://github.com/mleinhos,JSON-formatted output,54,[],https://github.com/tklengyel/drakvuf/pull/543,https://github.com/tklengyel,18,https://github.com/tklengyel/drakvuf/pull/543#issuecomment-459436100,This PR features JSON output for DRAKVUF. It relies on the existing dependency json-c and requires no configuration/build alterations. It has been tested against several tens of millions of events.,"Check out https://github.com/nlohmann/json#serialization--deserialization, seems like would be a pretty simple change to what you have right now.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,543,2019-01-28T20:46:44Z,2019-02-08T23:13:57Z,2019-02-08T23:18:05Z,MERGED,True,1625,320,21,https://github.com/mleinhos,JSON-formatted output,54,[],https://github.com/tklengyel/drakvuf/pull/543,https://github.com/tklengyel,19,https://github.com/tklengyel/drakvuf/pull/543#issuecomment-459439506,This PR features JSON output for DRAKVUF. It relies on the existing dependency json-c and requires no configuration/build alterations. It has been tested against several tens of millions of events.,"This also looks like a good candidate: https://github.com/Tencent/rapidjson, also supports UTF-16 which might be handy.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,543,2019-01-28T20:46:44Z,2019-02-08T23:13:57Z,2019-02-08T23:18:05Z,MERGED,True,1625,320,21,https://github.com/mleinhos,JSON-formatted output,54,[],https://github.com/tklengyel/drakvuf/pull/543,https://github.com/mleinhos,20,https://github.com/tklengyel/drakvuf/pull/543#issuecomment-459455821,This PR features JSON output for DRAKVUF. It relies on the existing dependency json-c and requires no configuration/build alterations. It has been tested against several tens of millions of events.,"Your suggestions are in C++. I'm assuming you don't foresee the need to
emit a JSON-formatted string from C?
…
On Thu, Jan 31, 2019 at 11:48 AM Tamas K Lengyel ***@***.***> wrote:
 This also looks like a good candidate:
 https://github.com/Tencent/rapidjson, also supports UTF-16 which might be
 handy.

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#543 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/ALHH_OypHTx8MUk9YczK-fxxd7cYr-bZks5vIyyDgaJpZM4aWvsZ>
 .",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,543,2019-01-28T20:46:44Z,2019-02-08T23:13:57Z,2019-02-08T23:18:05Z,MERGED,True,1625,320,21,https://github.com/mleinhos,JSON-formatted output,54,[],https://github.com/tklengyel/drakvuf/pull/543,https://github.com/tklengyel,21,https://github.com/tklengyel/drakvuf/pull/543#issuecomment-459456142,This PR features JSON output for DRAKVUF. It relies on the existing dependency json-c and requires no configuration/build alterations. It has been tested against several tens of millions of events.,"Yes, all plugins are in C++ so that would be fine.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,543,2019-01-28T20:46:44Z,2019-02-08T23:13:57Z,2019-02-08T23:18:05Z,MERGED,True,1625,320,21,https://github.com/mleinhos,JSON-formatted output,54,[],https://github.com/tklengyel/drakvuf/pull/543,https://github.com/mleinhos,22,https://github.com/tklengyel/drakvuf/pull/543#issuecomment-459730854,This PR features JSON output for DRAKVUF. It relies on the existing dependency json-c and requires no configuration/build alterations. It has been tested against several tens of millions of events.,"Do you have in mind a specific file where the new C++ function would reside?
…
On Thu, Jan 31, 2019 at 12:37 PM Tamas K Lengyel ***@***.***> wrote:
 Yes, all plugins are in C++ so that would be fine.

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#543 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/ALHH_KrVnj8t7qTfKIPhyhMzw6Q1BdfZks5vIzfggaJpZM4aWvsZ>
 .",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,543,2019-01-28T20:46:44Z,2019-02-08T23:13:57Z,2019-02-08T23:18:05Z,MERGED,True,1625,320,21,https://github.com/mleinhos,JSON-formatted output,54,[],https://github.com/tklengyel/drakvuf/pull/543,https://github.com/tklengyel,23,https://github.com/tklengyel/drakvuf/pull/543#issuecomment-459749728,This PR features JSON output for DRAKVUF. It relies on the existing dependency json-c and requires no configuration/build alterations. It has been tested against several tens of millions of events.,"Not sure I follow, what new C++ function? I figure you can include the json header (when enabled via  configure) in plugins/private.h and then each plugin can use it as it sees fit (inside an #ifdef ENABLE_JSON_OUTPUT block). The headers wouldn't have to be included in drakvuf itself, both rapidjson and nlohmann json are available on debian/ubuntu as packages: nlohmann-json3-dev rapidjson-dev",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,543,2019-01-28T20:46:44Z,2019-02-08T23:13:57Z,2019-02-08T23:18:05Z,MERGED,True,1625,320,21,https://github.com/mleinhos,JSON-formatted output,54,[],https://github.com/tklengyel/drakvuf/pull/543,https://github.com/mleinhos,24,https://github.com/tklengyel/drakvuf/pull/543#issuecomment-459764750,This PR features JSON output for DRAKVUF. It relies on the existing dependency json-c and requires no configuration/build alterations. It has been tested against several tens of millions of events.,"Ah, ok. I had a different solution in mind that would minimize changing the plugins further. I'll have that solution completed soon for your review.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,543,2019-01-28T20:46:44Z,2019-02-08T23:13:57Z,2019-02-08T23:18:05Z,MERGED,True,1625,320,21,https://github.com/mleinhos,JSON-formatted output,54,[],https://github.com/tklengyel/drakvuf/pull/543,https://github.com/mleinhos,25,https://github.com/tklengyel/drakvuf/pull/543#issuecomment-459773302,This PR features JSON output for DRAKVUF. It relies on the existing dependency json-c and requires no configuration/build alterations. It has been tested against several tens of millions of events.,You've got the essence of my proposed change with the external JSON repo - I'll have another adjustment or two forthcoming. The build is failing because the new submodule isn't being fetched by the testing script.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,543,2019-01-28T20:46:44Z,2019-02-08T23:13:57Z,2019-02-08T23:18:05Z,MERGED,True,1625,320,21,https://github.com/mleinhos,JSON-formatted output,54,[],https://github.com/tklengyel/drakvuf/pull/543,https://github.com/tklengyel,26,https://github.com/tklengyel/drakvuf/pull/543#issuecomment-459773701,This PR features JSON output for DRAKVUF. It relies on the existing dependency json-c and requires no configuration/build alterations. It has been tested against several tens of millions of events.,"I don't think we need a submodule for these headers, I much prefer if the are installed from the distributions package manager.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,543,2019-01-28T20:46:44Z,2019-02-08T23:13:57Z,2019-02-08T23:18:05Z,MERGED,True,1625,320,21,https://github.com/mleinhos,JSON-formatted output,54,[],https://github.com/tklengyel/drakvuf/pull/543,https://github.com/mleinhos,27,https://github.com/tklengyel/drakvuf/pull/543#issuecomment-459780379,This PR features JSON output for DRAKVUF. It relies on the existing dependency json-c and requires no configuration/build alterations. It has been tested against several tens of millions of events.,"What else would you like me to do? If I remove the submodule, can you take it from there?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,543,2019-01-28T20:46:44Z,2019-02-08T23:13:57Z,2019-02-08T23:18:05Z,MERGED,True,1625,320,21,https://github.com/mleinhos,JSON-formatted output,54,[],https://github.com/tklengyel/drakvuf/pull/543,https://github.com/tklengyel,28,https://github.com/tklengyel/drakvuf/pull/543#issuecomment-459793463,This PR features JSON output for DRAKVUF. It relies on the existing dependency json-c and requires no configuration/build alterations. It has been tested against several tens of millions of events.,"No, this PR as-is is not mergable - all CI gates fail. You are mixing C++ code into libdrakvuf which is exclusively C. The json output is only used in plugins so it needs to be properly put in there. Since the headers required to build with nlohmann json are available as packages, there is no need to pull it in as a submodule. The package has to be installed for the Travis script as well to pass CI. Furthermore, I would like to see this as an optional feature, so you have to check if the json header is available in configure.ac and only enable it if it is.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,543,2019-01-28T20:46:44Z,2019-02-08T23:13:57Z,2019-02-08T23:18:05Z,MERGED,True,1625,320,21,https://github.com/mleinhos,JSON-formatted output,54,[],https://github.com/tklengyel/drakvuf/pull/543,https://github.com/tklengyel,29,https://github.com/tklengyel/drakvuf/pull/543#issuecomment-460021730,This PR features JSON output for DRAKVUF. It relies on the existing dependency json-c and requires no configuration/build alterations. It has been tested against several tens of millions of events.,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,543,2019-01-28T20:46:44Z,2019-02-08T23:13:57Z,2019-02-08T23:18:05Z,MERGED,True,1625,320,21,https://github.com/mleinhos,JSON-formatted output,54,[],https://github.com/tklengyel/drakvuf/pull/543,https://github.com/tklengyel,30,https://github.com/tklengyel/drakvuf/pull/543#issuecomment-461650811,This PR features JSON output for DRAKVUF. It relies on the existing dependency json-c and requires no configuration/build alterations. It has been tested against several tens of millions of events.,@mleinhos please rebase this PR on the latest master. Afterwards I'm OK with merging,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,543,2019-01-28T20:46:44Z,2019-02-08T23:13:57Z,2019-02-08T23:18:05Z,MERGED,True,1625,320,21,https://github.com/mleinhos,JSON-formatted output,54,[],https://github.com/tklengyel/drakvuf/pull/543,https://github.com/tklengyel,31,https://github.com/tklengyel/drakvuf/pull/543#issuecomment-461979464,This PR features JSON output for DRAKVUF. It relies on the existing dependency json-c and requires no configuration/build alterations. It has been tested against several tens of millions of events.,Thanks again for the contribution!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,543,2019-01-28T20:46:44Z,2019-02-08T23:13:57Z,2019-02-08T23:18:05Z,MERGED,True,1625,320,21,https://github.com/mleinhos,JSON-formatted output,54,[],https://github.com/tklengyel/drakvuf/pull/543,https://github.com/mleinhos,32,https://github.com/tklengyel/drakvuf/pull/543#issuecomment-461979954,This PR features JSON output for DRAKVUF. It relies on the existing dependency json-c and requires no configuration/build alterations. It has been tested against several tens of millions of events.,"You're welcome! I'm hopeful it will make DRAKVUF more usable within big
data applications, e.g. kafka.
…
On Fri, Feb 8, 2019 at 5:15 PM Tamas K Lengyel ***@***.***> wrote:
 Thanks again for the contribution!

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#543 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/ALHH_AXgWb4os77KfoeygqIN6b-fOx3jks5vLgUZgaJpZM4aWvsZ>
 .",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,544,2019-01-28T23:59:37Z,2019-01-29T01:25:06Z,2019-01-29T01:25:08Z,MERGED,True,8,1,2,https://github.com/tklengyel,Memory leak fixes,1,[],https://github.com/tklengyel/drakvuf/pull/544,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/544,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,544,2019-01-28T23:59:37Z,2019-01-29T01:25:06Z,2019-01-29T01:25:08Z,MERGED,True,8,1,2,https://github.com/tklengyel,Memory leak fixes,1,[],https://github.com/tklengyel/drakvuf/pull/544,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/544#issuecomment-458358349,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,545,2019-01-29T12:34:42Z,2019-01-29T15:58:16Z,2019-01-29T16:04:38Z,MERGED,True,4,4,2,https://github.com/disaykin,procmon: fixed new trap registration,1,[],https://github.com/tklengyel/drakvuf/pull/545,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/545,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,545,2019-01-29T12:34:42Z,2019-01-29T15:58:16Z,2019-01-29T16:04:38Z,MERGED,True,4,4,2,https://github.com/disaykin,procmon: fixed new trap registration,1,[],https://github.com/tklengyel/drakvuf/pull/545,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/545#issuecomment-458523823,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,545,2019-01-29T12:34:42Z,2019-01-29T15:58:16Z,2019-01-29T16:04:38Z,MERGED,True,4,4,2,https://github.com/disaykin,procmon: fixed new trap registration,1,[],https://github.com/tklengyel/drakvuf/pull/545,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/545#issuecomment-458588702,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,547,2019-01-30T18:21:30Z,2019-01-31T16:45:13Z,2019-03-25T15:32:25Z,MERGED,True,108,50,5,https://github.com/skvl,Print injection status in linbinjector,1,[],https://github.com/tklengyel/drakvuf/pull/547,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/547,"Enable parsing more easy with Status=%STATUS% strings
Move error handling from drakvuf.cpp into libinjector/injector.c","Enable parsing more easy with Status=%STATUS% strings
Move error handling from drakvuf.cpp into libinjector/injector.c",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,547,2019-01-30T18:21:30Z,2019-01-31T16:45:13Z,2019-03-25T15:32:25Z,MERGED,True,108,50,5,https://github.com/skvl,Print injection status in linbinjector,1,[],https://github.com/tklengyel/drakvuf/pull/547,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/547#issuecomment-459061832,"Enable parsing more easy with Status=%STATUS% strings
Move error handling from drakvuf.cpp into libinjector/injector.c",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,547,2019-01-30T18:21:30Z,2019-01-31T16:45:13Z,2019-03-25T15:32:25Z,MERGED,True,108,50,5,https://github.com/skvl,Print injection status in linbinjector,1,[],https://github.com/tklengyel/drakvuf/pull/547,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/547#issuecomment-459062465,"Enable parsing more easy with Status=%STATUS% strings
Move error handling from drakvuf.cpp into libinjector/injector.c",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,548,2019-01-31T10:15:42Z,2019-01-31T10:26:28Z,2019-01-31T10:26:34Z,MERGED,True,16,35,1,https://github.com/tklengyel,Retire target_cr3 in injector,1,[],https://github.com/tklengyel/drakvuf/pull/548,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/548,Fixes #546,Fixes #546,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,549,2019-02-03T04:13:49Z,2019-02-03T14:39:29Z,2019-02-03T14:39:31Z,MERGED,True,1,1,1,https://github.com/tklengyel,Update LibVMI,1,[],https://github.com/tklengyel/drakvuf/pull/549,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/549,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,550,2019-02-04T10:35:33Z,2019-02-05T14:21:55Z,2019-02-05T14:21:56Z,MERGED,True,109,28,1,https://github.com/zodeak,[procmon] print ProcessHandle of NtOpenProcess,1,[],https://github.com/tklengyel/drakvuf/pull/550,https://github.com/zodeak,1,https://github.com/tklengyel/drakvuf/pull/550,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,550,2019-02-04T10:35:33Z,2019-02-05T14:21:55Z,2019-02-05T14:21:56Z,MERGED,True,109,28,1,https://github.com/zodeak,[procmon] print ProcessHandle of NtOpenProcess,1,[],https://github.com/tklengyel/drakvuf/pull/550,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/550#issuecomment-460199925,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,550,2019-02-04T10:35:33Z,2019-02-05T14:21:55Z,2019-02-05T14:21:56Z,MERGED,True,109,28,1,https://github.com/zodeak,[procmon] print ProcessHandle of NtOpenProcess,1,[],https://github.com/tklengyel/drakvuf/pull/550,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/550#issuecomment-460399347,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,551,2019-02-04T18:47:05Z,2019-02-05T14:28:54Z,2019-03-13T12:41:58Z,MERGED,True,65,279,1,https://github.com/disaykin,socketmon: fixed swallowing last character in IP address string,1,[],https://github.com/tklengyel/drakvuf/pull/551,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/551,socketmon: decrease code duplication,socketmon: decrease code duplication,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,551,2019-02-04T18:47:05Z,2019-02-05T14:28:54Z,2019-03-13T12:41:58Z,MERGED,True,65,279,1,https://github.com/disaykin,socketmon: fixed swallowing last character in IP address string,1,[],https://github.com/tklengyel/drakvuf/pull/551,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/551#issuecomment-460364473,socketmon: decrease code duplication,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,551,2019-02-04T18:47:05Z,2019-02-05T14:28:54Z,2019-03-13T12:41:58Z,MERGED,True,65,279,1,https://github.com/disaykin,socketmon: fixed swallowing last character in IP address string,1,[],https://github.com/tklengyel/drakvuf/pull/551,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/551#issuecomment-460403254,socketmon: decrease code duplication,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,552,2019-02-04T19:28:20Z,2019-02-15T00:24:58Z,2019-02-19T17:00:59Z,MERGED,True,599,62,15,https://github.com/aoshiken,WoW64 dlls,1,[],https://github.com/tklengyel/drakvuf/pull/552,https://github.com/aoshiken,1,https://github.com/tklengyel/drakvuf/pull/552,"Add support for listing WoW modules from WoW processess.

Add new command line option -w/--rekall-wow for reading the WoW64 ntdll Rekall profile
Add new fields for the module_info_t structure so the visitor will know if the DLL and the process where it's loaded are Wow64
Change module_info unicode structures to unicode_t *
Added a few new functions for walking the WoW64 data
Expose unicode32 functions in libdrakvuf.h

This is the first try to take care of the issue #456.
Usage
You must specify the Rekall profile for the WoW64 NTDLL with the command line option -w/--rekall-wow and then use the drakvuf_enumerate_processes_with_module the usual way.
Find below an example with a test plugin running Drakvuf against a domain that have running a WoW64 process, that plugin does nothing just looks for the rpcrt4.dll module and prints the module_info data on stdout from its visitor callback:
$ sudo /home/aandres/github/drakvuf/src/drakvuf -r /opt-hdd/dist/ramdisk/rekall/profiles/win7-sp1-x64/ntkrnl.json -w /home/aandres/rekall-profiles/wntdll.json -d win7-sp1-x64-29 -t 1 -v
[...]
1549307916.582049 Found module wowsrv.exe at 0x13c0000
1549307916.582100 Found module ntdll.dll at 0x77010000
1549307916.582132 Found module wow64.dll at 0x73f80000
1549307916.582175 Found module wow64win.dll at 0x73f20000
1549307916.582275 Found module wow64cpu.dll at 0x73ff0000
1549307916.582309 Failed to find rpcrt4.dll in list starting at 0x2e2880
1549307916.582579 Found WoW64 module wowsrv.exe at 0x13c0000
1549307916.582678 Found WoW64 module ntdll.dll at 0x771f0000
1549307916.582726 Found WoW64 module kernel32.dll at 0x75df0000
1549307916.582787 Found WoW64 module KERNELBASE.dll at 0x75390000
1549307916.582917 Found WoW64 module ADVAPI32.dll at 0x75fb0000
1549307916.582966 Found WoW64 module msvcrt.dll at 0x75470000
1549307916.583016 Found WoW64 module sechost.dll at 0x76dc0000
1549307916.583058 Found WoW64 module RPCRT4.dll at 0x75520000
[TEST] visit: CR3[0x95FA8000] pid[0x508 1288] wow_proc[1] base_name[RPCRT4.dll] load_address[0x75520000] wow_module[1] full_name[C:\Windows\syswow64\RPCRT4.dll]
[...]

As you can see on the log above there are 2 new fields in the module_info_t structure:

bool is_wow_process. Set to true if the process where the module is loaded is a WoW64 one
bool is_wow. Set to true if the current module is a WoW64 one

The remaining module_info_t fields retains the same meaning as before.
Tested on Windows 7 SP1 x64 and Windows 10","Add support for listing WoW modules from WoW processess.

Add new command line option -w/--rekall-wow for reading the WoW64 ntdll Rekall profile
Add new fields for the module_info_t structure so the visitor will know if the DLL and the process where it's loaded are Wow64
Change module_info unicode structures to unicode_t *
Added a few new functions for walking the WoW64 data
Expose unicode32 functions in libdrakvuf.h

This is the first try to take care of the issue #456.
Usage
You must specify the Rekall profile for the WoW64 NTDLL with the command line option -w/--rekall-wow and then use the drakvuf_enumerate_processes_with_module the usual way.
Find below an example with a test plugin running Drakvuf against a domain that have running a WoW64 process, that plugin does nothing just looks for the rpcrt4.dll module and prints the module_info data on stdout from its visitor callback:
$ sudo /home/aandres/github/drakvuf/src/drakvuf -r /opt-hdd/dist/ramdisk/rekall/profiles/win7-sp1-x64/ntkrnl.json -w /home/aandres/rekall-profiles/wntdll.json -d win7-sp1-x64-29 -t 1 -v
[...]
1549307916.582049 Found module wowsrv.exe at 0x13c0000
1549307916.582100 Found module ntdll.dll at 0x77010000
1549307916.582132 Found module wow64.dll at 0x73f80000
1549307916.582175 Found module wow64win.dll at 0x73f20000
1549307916.582275 Found module wow64cpu.dll at 0x73ff0000
1549307916.582309 Failed to find rpcrt4.dll in list starting at 0x2e2880
1549307916.582579 Found WoW64 module wowsrv.exe at 0x13c0000
1549307916.582678 Found WoW64 module ntdll.dll at 0x771f0000
1549307916.582726 Found WoW64 module kernel32.dll at 0x75df0000
1549307916.582787 Found WoW64 module KERNELBASE.dll at 0x75390000
1549307916.582917 Found WoW64 module ADVAPI32.dll at 0x75fb0000
1549307916.582966 Found WoW64 module msvcrt.dll at 0x75470000
1549307916.583016 Found WoW64 module sechost.dll at 0x76dc0000
1549307916.583058 Found WoW64 module RPCRT4.dll at 0x75520000
[TEST] visit: CR3[0x95FA8000] pid[0x508 1288] wow_proc[1] base_name[RPCRT4.dll] load_address[0x75520000] wow_module[1] full_name[C:\Windows\syswow64\RPCRT4.dll]
[...]

As you can see on the log above there are 2 new fields in the module_info_t structure:

bool is_wow_process. Set to true if the process where the module is loaded is a WoW64 one
bool is_wow. Set to true if the current module is a WoW64 one

The remaining module_info_t fields retains the same meaning as before.
Tested on Windows 7 SP1 x64 and Windows 10",True,{'HOORAY': ['https://github.com/v-p-b']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,552,2019-02-04T19:28:20Z,2019-02-15T00:24:58Z,2019-02-19T17:00:59Z,MERGED,True,599,62,15,https://github.com/aoshiken,WoW64 dlls,1,[],https://github.com/tklengyel/drakvuf/pull/552,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/552#issuecomment-460379215,"Add support for listing WoW modules from WoW processess.

Add new command line option -w/--rekall-wow for reading the WoW64 ntdll Rekall profile
Add new fields for the module_info_t structure so the visitor will know if the DLL and the process where it's loaded are Wow64
Change module_info unicode structures to unicode_t *
Added a few new functions for walking the WoW64 data
Expose unicode32 functions in libdrakvuf.h

This is the first try to take care of the issue #456.
Usage
You must specify the Rekall profile for the WoW64 NTDLL with the command line option -w/--rekall-wow and then use the drakvuf_enumerate_processes_with_module the usual way.
Find below an example with a test plugin running Drakvuf against a domain that have running a WoW64 process, that plugin does nothing just looks for the rpcrt4.dll module and prints the module_info data on stdout from its visitor callback:
$ sudo /home/aandres/github/drakvuf/src/drakvuf -r /opt-hdd/dist/ramdisk/rekall/profiles/win7-sp1-x64/ntkrnl.json -w /home/aandres/rekall-profiles/wntdll.json -d win7-sp1-x64-29 -t 1 -v
[...]
1549307916.582049 Found module wowsrv.exe at 0x13c0000
1549307916.582100 Found module ntdll.dll at 0x77010000
1549307916.582132 Found module wow64.dll at 0x73f80000
1549307916.582175 Found module wow64win.dll at 0x73f20000
1549307916.582275 Found module wow64cpu.dll at 0x73ff0000
1549307916.582309 Failed to find rpcrt4.dll in list starting at 0x2e2880
1549307916.582579 Found WoW64 module wowsrv.exe at 0x13c0000
1549307916.582678 Found WoW64 module ntdll.dll at 0x771f0000
1549307916.582726 Found WoW64 module kernel32.dll at 0x75df0000
1549307916.582787 Found WoW64 module KERNELBASE.dll at 0x75390000
1549307916.582917 Found WoW64 module ADVAPI32.dll at 0x75fb0000
1549307916.582966 Found WoW64 module msvcrt.dll at 0x75470000
1549307916.583016 Found WoW64 module sechost.dll at 0x76dc0000
1549307916.583058 Found WoW64 module RPCRT4.dll at 0x75520000
[TEST] visit: CR3[0x95FA8000] pid[0x508 1288] wow_proc[1] base_name[RPCRT4.dll] load_address[0x75520000] wow_module[1] full_name[C:\Windows\syswow64\RPCRT4.dll]
[...]

As you can see on the log above there are 2 new fields in the module_info_t structure:

bool is_wow_process. Set to true if the process where the module is loaded is a WoW64 one
bool is_wow. Set to true if the current module is a WoW64 one

The remaining module_info_t fields retains the same meaning as before.
Tested on Windows 7 SP1 x64 and Windows 10",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,552,2019-02-04T19:28:20Z,2019-02-15T00:24:58Z,2019-02-19T17:00:59Z,MERGED,True,599,62,15,https://github.com/aoshiken,WoW64 dlls,1,[],https://github.com/tklengyel/drakvuf/pull/552,https://github.com/aoshiken,3,https://github.com/tklengyel/drakvuf/pull/552#issuecomment-460547569,"Add support for listing WoW modules from WoW processess.

Add new command line option -w/--rekall-wow for reading the WoW64 ntdll Rekall profile
Add new fields for the module_info_t structure so the visitor will know if the DLL and the process where it's loaded are Wow64
Change module_info unicode structures to unicode_t *
Added a few new functions for walking the WoW64 data
Expose unicode32 functions in libdrakvuf.h

This is the first try to take care of the issue #456.
Usage
You must specify the Rekall profile for the WoW64 NTDLL with the command line option -w/--rekall-wow and then use the drakvuf_enumerate_processes_with_module the usual way.
Find below an example with a test plugin running Drakvuf against a domain that have running a WoW64 process, that plugin does nothing just looks for the rpcrt4.dll module and prints the module_info data on stdout from its visitor callback:
$ sudo /home/aandres/github/drakvuf/src/drakvuf -r /opt-hdd/dist/ramdisk/rekall/profiles/win7-sp1-x64/ntkrnl.json -w /home/aandres/rekall-profiles/wntdll.json -d win7-sp1-x64-29 -t 1 -v
[...]
1549307916.582049 Found module wowsrv.exe at 0x13c0000
1549307916.582100 Found module ntdll.dll at 0x77010000
1549307916.582132 Found module wow64.dll at 0x73f80000
1549307916.582175 Found module wow64win.dll at 0x73f20000
1549307916.582275 Found module wow64cpu.dll at 0x73ff0000
1549307916.582309 Failed to find rpcrt4.dll in list starting at 0x2e2880
1549307916.582579 Found WoW64 module wowsrv.exe at 0x13c0000
1549307916.582678 Found WoW64 module ntdll.dll at 0x771f0000
1549307916.582726 Found WoW64 module kernel32.dll at 0x75df0000
1549307916.582787 Found WoW64 module KERNELBASE.dll at 0x75390000
1549307916.582917 Found WoW64 module ADVAPI32.dll at 0x75fb0000
1549307916.582966 Found WoW64 module msvcrt.dll at 0x75470000
1549307916.583016 Found WoW64 module sechost.dll at 0x76dc0000
1549307916.583058 Found WoW64 module RPCRT4.dll at 0x75520000
[TEST] visit: CR3[0x95FA8000] pid[0x508 1288] wow_proc[1] base_name[RPCRT4.dll] load_address[0x75520000] wow_module[1] full_name[C:\Windows\syswow64\RPCRT4.dll]
[...]

As you can see on the log above there are 2 new fields in the module_info_t structure:

bool is_wow_process. Set to true if the process where the module is loaded is a WoW64 one
bool is_wow. Set to true if the current module is a WoW64 one

The remaining module_info_t fields retains the same meaning as before.
Tested on Windows 7 SP1 x64 and Windows 10",I think I'll move the new unicode functions that are currently located in file win.c to the drakvuf.c file renaming them to mimic the current drakvuf_unicode functions and made them available through the libdrakvuf.h file as the old ones.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,552,2019-02-04T19:28:20Z,2019-02-15T00:24:58Z,2019-02-19T17:00:59Z,MERGED,True,599,62,15,https://github.com/aoshiken,WoW64 dlls,1,[],https://github.com/tklengyel/drakvuf/pull/552,https://github.com/aoshiken,4,https://github.com/tklengyel/drakvuf/pull/552#issuecomment-460646810,"Add support for listing WoW modules from WoW processess.

Add new command line option -w/--rekall-wow for reading the WoW64 ntdll Rekall profile
Add new fields for the module_info_t structure so the visitor will know if the DLL and the process where it's loaded are Wow64
Change module_info unicode structures to unicode_t *
Added a few new functions for walking the WoW64 data
Expose unicode32 functions in libdrakvuf.h

This is the first try to take care of the issue #456.
Usage
You must specify the Rekall profile for the WoW64 NTDLL with the command line option -w/--rekall-wow and then use the drakvuf_enumerate_processes_with_module the usual way.
Find below an example with a test plugin running Drakvuf against a domain that have running a WoW64 process, that plugin does nothing just looks for the rpcrt4.dll module and prints the module_info data on stdout from its visitor callback:
$ sudo /home/aandres/github/drakvuf/src/drakvuf -r /opt-hdd/dist/ramdisk/rekall/profiles/win7-sp1-x64/ntkrnl.json -w /home/aandres/rekall-profiles/wntdll.json -d win7-sp1-x64-29 -t 1 -v
[...]
1549307916.582049 Found module wowsrv.exe at 0x13c0000
1549307916.582100 Found module ntdll.dll at 0x77010000
1549307916.582132 Found module wow64.dll at 0x73f80000
1549307916.582175 Found module wow64win.dll at 0x73f20000
1549307916.582275 Found module wow64cpu.dll at 0x73ff0000
1549307916.582309 Failed to find rpcrt4.dll in list starting at 0x2e2880
1549307916.582579 Found WoW64 module wowsrv.exe at 0x13c0000
1549307916.582678 Found WoW64 module ntdll.dll at 0x771f0000
1549307916.582726 Found WoW64 module kernel32.dll at 0x75df0000
1549307916.582787 Found WoW64 module KERNELBASE.dll at 0x75390000
1549307916.582917 Found WoW64 module ADVAPI32.dll at 0x75fb0000
1549307916.582966 Found WoW64 module msvcrt.dll at 0x75470000
1549307916.583016 Found WoW64 module sechost.dll at 0x76dc0000
1549307916.583058 Found WoW64 module RPCRT4.dll at 0x75520000
[TEST] visit: CR3[0x95FA8000] pid[0x508 1288] wow_proc[1] base_name[RPCRT4.dll] load_address[0x75520000] wow_module[1] full_name[C:\Windows\syswow64\RPCRT4.dll]
[...]

As you can see on the log above there are 2 new fields in the module_info_t structure:

bool is_wow_process. Set to true if the process where the module is loaded is a WoW64 one
bool is_wow. Set to true if the current module is a WoW64 one

The remaining module_info_t fields retains the same meaning as before.
Tested on Windows 7 SP1 x64 and Windows 10","The build fails on the check ""scan build"" due to the warning of a ""Potential memory leak"" which is a false positive IMHO:
drakvuf.c:723:5: warning: Potential leak of memory pointed to by 'us'
    g_free(out);
    ^~~~~~
1 warning generated.

Is there something on my side that I can make to fix that? I guess no...",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,552,2019-02-04T19:28:20Z,2019-02-15T00:24:58Z,2019-02-19T17:00:59Z,MERGED,True,599,62,15,https://github.com/aoshiken,WoW64 dlls,1,[],https://github.com/tklengyel/drakvuf/pull/552,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/552#issuecomment-461927574,"Add support for listing WoW modules from WoW processess.

Add new command line option -w/--rekall-wow for reading the WoW64 ntdll Rekall profile
Add new fields for the module_info_t structure so the visitor will know if the DLL and the process where it's loaded are Wow64
Change module_info unicode structures to unicode_t *
Added a few new functions for walking the WoW64 data
Expose unicode32 functions in libdrakvuf.h

This is the first try to take care of the issue #456.
Usage
You must specify the Rekall profile for the WoW64 NTDLL with the command line option -w/--rekall-wow and then use the drakvuf_enumerate_processes_with_module the usual way.
Find below an example with a test plugin running Drakvuf against a domain that have running a WoW64 process, that plugin does nothing just looks for the rpcrt4.dll module and prints the module_info data on stdout from its visitor callback:
$ sudo /home/aandres/github/drakvuf/src/drakvuf -r /opt-hdd/dist/ramdisk/rekall/profiles/win7-sp1-x64/ntkrnl.json -w /home/aandres/rekall-profiles/wntdll.json -d win7-sp1-x64-29 -t 1 -v
[...]
1549307916.582049 Found module wowsrv.exe at 0x13c0000
1549307916.582100 Found module ntdll.dll at 0x77010000
1549307916.582132 Found module wow64.dll at 0x73f80000
1549307916.582175 Found module wow64win.dll at 0x73f20000
1549307916.582275 Found module wow64cpu.dll at 0x73ff0000
1549307916.582309 Failed to find rpcrt4.dll in list starting at 0x2e2880
1549307916.582579 Found WoW64 module wowsrv.exe at 0x13c0000
1549307916.582678 Found WoW64 module ntdll.dll at 0x771f0000
1549307916.582726 Found WoW64 module kernel32.dll at 0x75df0000
1549307916.582787 Found WoW64 module KERNELBASE.dll at 0x75390000
1549307916.582917 Found WoW64 module ADVAPI32.dll at 0x75fb0000
1549307916.582966 Found WoW64 module msvcrt.dll at 0x75470000
1549307916.583016 Found WoW64 module sechost.dll at 0x76dc0000
1549307916.583058 Found WoW64 module RPCRT4.dll at 0x75520000
[TEST] visit: CR3[0x95FA8000] pid[0x508 1288] wow_proc[1] base_name[RPCRT4.dll] load_address[0x75520000] wow_module[1] full_name[C:\Windows\syswow64\RPCRT4.dll]
[...]

As you can see on the log above there are 2 new fields in the module_info_t structure:

bool is_wow_process. Set to true if the process where the module is loaded is a WoW64 one
bool is_wow. Set to true if the current module is a WoW64 one

The remaining module_info_t fields retains the same meaning as before.
Tested on Windows 7 SP1 x64 and Windows 10",Clang has spotted some bugs in the PR: https://travis-ci.org/tklengyel/drakvuf/jobs/489124992,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,552,2019-02-04T19:28:20Z,2019-02-15T00:24:58Z,2019-02-19T17:00:59Z,MERGED,True,599,62,15,https://github.com/aoshiken,WoW64 dlls,1,[],https://github.com/tklengyel/drakvuf/pull/552,https://github.com/aoshiken,6,https://github.com/tklengyel/drakvuf/pull/552#issuecomment-461942666,"Add support for listing WoW modules from WoW processess.

Add new command line option -w/--rekall-wow for reading the WoW64 ntdll Rekall profile
Add new fields for the module_info_t structure so the visitor will know if the DLL and the process where it's loaded are Wow64
Change module_info unicode structures to unicode_t *
Added a few new functions for walking the WoW64 data
Expose unicode32 functions in libdrakvuf.h

This is the first try to take care of the issue #456.
Usage
You must specify the Rekall profile for the WoW64 NTDLL with the command line option -w/--rekall-wow and then use the drakvuf_enumerate_processes_with_module the usual way.
Find below an example with a test plugin running Drakvuf against a domain that have running a WoW64 process, that plugin does nothing just looks for the rpcrt4.dll module and prints the module_info data on stdout from its visitor callback:
$ sudo /home/aandres/github/drakvuf/src/drakvuf -r /opt-hdd/dist/ramdisk/rekall/profiles/win7-sp1-x64/ntkrnl.json -w /home/aandres/rekall-profiles/wntdll.json -d win7-sp1-x64-29 -t 1 -v
[...]
1549307916.582049 Found module wowsrv.exe at 0x13c0000
1549307916.582100 Found module ntdll.dll at 0x77010000
1549307916.582132 Found module wow64.dll at 0x73f80000
1549307916.582175 Found module wow64win.dll at 0x73f20000
1549307916.582275 Found module wow64cpu.dll at 0x73ff0000
1549307916.582309 Failed to find rpcrt4.dll in list starting at 0x2e2880
1549307916.582579 Found WoW64 module wowsrv.exe at 0x13c0000
1549307916.582678 Found WoW64 module ntdll.dll at 0x771f0000
1549307916.582726 Found WoW64 module kernel32.dll at 0x75df0000
1549307916.582787 Found WoW64 module KERNELBASE.dll at 0x75390000
1549307916.582917 Found WoW64 module ADVAPI32.dll at 0x75fb0000
1549307916.582966 Found WoW64 module msvcrt.dll at 0x75470000
1549307916.583016 Found WoW64 module sechost.dll at 0x76dc0000
1549307916.583058 Found WoW64 module RPCRT4.dll at 0x75520000
[TEST] visit: CR3[0x95FA8000] pid[0x508 1288] wow_proc[1] base_name[RPCRT4.dll] load_address[0x75520000] wow_module[1] full_name[C:\Windows\syswow64\RPCRT4.dll]
[...]

As you can see on the log above there are 2 new fields in the module_info_t structure:

bool is_wow_process. Set to true if the process where the module is loaded is a WoW64 one
bool is_wow. Set to true if the current module is a WoW64 one

The remaining module_info_t fields retains the same meaning as before.
Tested on Windows 7 SP1 x64 and Windows 10","Clang has spotted some bugs in the PR: https://travis-ci.org/tklengyel/drakvuf/jobs/489124992

I noticed that 3 days ago, the build failed on the check ""scan build"" due to the warning of a ""Potential memory leak"" which is a false positive IMHO:
drakvuf.c:723:5: warning: Potential leak of memory pointed to by 'us'
     g_free(out);
     ^~~~~~
1 warning generated.

I'll try to use Clang to make some tests but I'm afraid not before next Monday",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,552,2019-02-04T19:28:20Z,2019-02-15T00:24:58Z,2019-02-19T17:00:59Z,MERGED,True,599,62,15,https://github.com/aoshiken,WoW64 dlls,1,[],https://github.com/tklengyel/drakvuf/pull/552,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/552#issuecomment-462171405,"Add support for listing WoW modules from WoW processess.

Add new command line option -w/--rekall-wow for reading the WoW64 ntdll Rekall profile
Add new fields for the module_info_t structure so the visitor will know if the DLL and the process where it's loaded are Wow64
Change module_info unicode structures to unicode_t *
Added a few new functions for walking the WoW64 data
Expose unicode32 functions in libdrakvuf.h

This is the first try to take care of the issue #456.
Usage
You must specify the Rekall profile for the WoW64 NTDLL with the command line option -w/--rekall-wow and then use the drakvuf_enumerate_processes_with_module the usual way.
Find below an example with a test plugin running Drakvuf against a domain that have running a WoW64 process, that plugin does nothing just looks for the rpcrt4.dll module and prints the module_info data on stdout from its visitor callback:
$ sudo /home/aandres/github/drakvuf/src/drakvuf -r /opt-hdd/dist/ramdisk/rekall/profiles/win7-sp1-x64/ntkrnl.json -w /home/aandres/rekall-profiles/wntdll.json -d win7-sp1-x64-29 -t 1 -v
[...]
1549307916.582049 Found module wowsrv.exe at 0x13c0000
1549307916.582100 Found module ntdll.dll at 0x77010000
1549307916.582132 Found module wow64.dll at 0x73f80000
1549307916.582175 Found module wow64win.dll at 0x73f20000
1549307916.582275 Found module wow64cpu.dll at 0x73ff0000
1549307916.582309 Failed to find rpcrt4.dll in list starting at 0x2e2880
1549307916.582579 Found WoW64 module wowsrv.exe at 0x13c0000
1549307916.582678 Found WoW64 module ntdll.dll at 0x771f0000
1549307916.582726 Found WoW64 module kernel32.dll at 0x75df0000
1549307916.582787 Found WoW64 module KERNELBASE.dll at 0x75390000
1549307916.582917 Found WoW64 module ADVAPI32.dll at 0x75fb0000
1549307916.582966 Found WoW64 module msvcrt.dll at 0x75470000
1549307916.583016 Found WoW64 module sechost.dll at 0x76dc0000
1549307916.583058 Found WoW64 module RPCRT4.dll at 0x75520000
[TEST] visit: CR3[0x95FA8000] pid[0x508 1288] wow_proc[1] base_name[RPCRT4.dll] load_address[0x75520000] wow_module[1] full_name[C:\Windows\syswow64\RPCRT4.dll]
[...]

As you can see on the log above there are 2 new fields in the module_info_t structure:

bool is_wow_process. Set to true if the process where the module is loaded is a WoW64 one
bool is_wow. Set to true if the current module is a WoW64 one

The remaining module_info_t fields retains the same meaning as before.
Tested on Windows 7 SP1 x64 and Windows 10","Should be soon, I'm just running into some roadblock with travis using the new libvmi build system.",True,{'THUMBS_UP': ['https://github.com/aoshiken']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,552,2019-02-04T19:28:20Z,2019-02-15T00:24:58Z,2019-02-19T17:00:59Z,MERGED,True,599,62,15,https://github.com/aoshiken,WoW64 dlls,1,[],https://github.com/tklengyel/drakvuf/pull/552,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/552#issuecomment-462878396,"Add support for listing WoW modules from WoW processess.

Add new command line option -w/--rekall-wow for reading the WoW64 ntdll Rekall profile
Add new fields for the module_info_t structure so the visitor will know if the DLL and the process where it's loaded are Wow64
Change module_info unicode structures to unicode_t *
Added a few new functions for walking the WoW64 data
Expose unicode32 functions in libdrakvuf.h

This is the first try to take care of the issue #456.
Usage
You must specify the Rekall profile for the WoW64 NTDLL with the command line option -w/--rekall-wow and then use the drakvuf_enumerate_processes_with_module the usual way.
Find below an example with a test plugin running Drakvuf against a domain that have running a WoW64 process, that plugin does nothing just looks for the rpcrt4.dll module and prints the module_info data on stdout from its visitor callback:
$ sudo /home/aandres/github/drakvuf/src/drakvuf -r /opt-hdd/dist/ramdisk/rekall/profiles/win7-sp1-x64/ntkrnl.json -w /home/aandres/rekall-profiles/wntdll.json -d win7-sp1-x64-29 -t 1 -v
[...]
1549307916.582049 Found module wowsrv.exe at 0x13c0000
1549307916.582100 Found module ntdll.dll at 0x77010000
1549307916.582132 Found module wow64.dll at 0x73f80000
1549307916.582175 Found module wow64win.dll at 0x73f20000
1549307916.582275 Found module wow64cpu.dll at 0x73ff0000
1549307916.582309 Failed to find rpcrt4.dll in list starting at 0x2e2880
1549307916.582579 Found WoW64 module wowsrv.exe at 0x13c0000
1549307916.582678 Found WoW64 module ntdll.dll at 0x771f0000
1549307916.582726 Found WoW64 module kernel32.dll at 0x75df0000
1549307916.582787 Found WoW64 module KERNELBASE.dll at 0x75390000
1549307916.582917 Found WoW64 module ADVAPI32.dll at 0x75fb0000
1549307916.582966 Found WoW64 module msvcrt.dll at 0x75470000
1549307916.583016 Found WoW64 module sechost.dll at 0x76dc0000
1549307916.583058 Found WoW64 module RPCRT4.dll at 0x75520000
[TEST] visit: CR3[0x95FA8000] pid[0x508 1288] wow_proc[1] base_name[RPCRT4.dll] load_address[0x75520000] wow_module[1] full_name[C:\Windows\syswow64\RPCRT4.dll]
[...]

As you can see on the log above there are 2 new fields in the module_info_t structure:

bool is_wow_process. Set to true if the process where the module is loaded is a WoW64 one
bool is_wow. Set to true if the current module is a WoW64 one

The remaining module_info_t fields retains the same meaning as before.
Tested on Windows 7 SP1 x64 and Windows 10",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,552,2019-02-04T19:28:20Z,2019-02-15T00:24:58Z,2019-02-19T17:00:59Z,MERGED,True,599,62,15,https://github.com/aoshiken,WoW64 dlls,1,[],https://github.com/tklengyel/drakvuf/pull/552,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/552#issuecomment-462938002,"Add support for listing WoW modules from WoW processess.

Add new command line option -w/--rekall-wow for reading the WoW64 ntdll Rekall profile
Add new fields for the module_info_t structure so the visitor will know if the DLL and the process where it's loaded are Wow64
Change module_info unicode structures to unicode_t *
Added a few new functions for walking the WoW64 data
Expose unicode32 functions in libdrakvuf.h

This is the first try to take care of the issue #456.
Usage
You must specify the Rekall profile for the WoW64 NTDLL with the command line option -w/--rekall-wow and then use the drakvuf_enumerate_processes_with_module the usual way.
Find below an example with a test plugin running Drakvuf against a domain that have running a WoW64 process, that plugin does nothing just looks for the rpcrt4.dll module and prints the module_info data on stdout from its visitor callback:
$ sudo /home/aandres/github/drakvuf/src/drakvuf -r /opt-hdd/dist/ramdisk/rekall/profiles/win7-sp1-x64/ntkrnl.json -w /home/aandres/rekall-profiles/wntdll.json -d win7-sp1-x64-29 -t 1 -v
[...]
1549307916.582049 Found module wowsrv.exe at 0x13c0000
1549307916.582100 Found module ntdll.dll at 0x77010000
1549307916.582132 Found module wow64.dll at 0x73f80000
1549307916.582175 Found module wow64win.dll at 0x73f20000
1549307916.582275 Found module wow64cpu.dll at 0x73ff0000
1549307916.582309 Failed to find rpcrt4.dll in list starting at 0x2e2880
1549307916.582579 Found WoW64 module wowsrv.exe at 0x13c0000
1549307916.582678 Found WoW64 module ntdll.dll at 0x771f0000
1549307916.582726 Found WoW64 module kernel32.dll at 0x75df0000
1549307916.582787 Found WoW64 module KERNELBASE.dll at 0x75390000
1549307916.582917 Found WoW64 module ADVAPI32.dll at 0x75fb0000
1549307916.582966 Found WoW64 module msvcrt.dll at 0x75470000
1549307916.583016 Found WoW64 module sechost.dll at 0x76dc0000
1549307916.583058 Found WoW64 module RPCRT4.dll at 0x75520000
[TEST] visit: CR3[0x95FA8000] pid[0x508 1288] wow_proc[1] base_name[RPCRT4.dll] load_address[0x75520000] wow_module[1] full_name[C:\Windows\syswow64\RPCRT4.dll]
[...]

As you can see on the log above there are 2 new fields in the module_info_t structure:

bool is_wow_process. Set to true if the process where the module is loaded is a WoW64 one
bool is_wow. Set to true if the current module is a WoW64 one

The remaining module_info_t fields retains the same meaning as before.
Tested on Windows 7 SP1 x64 and Windows 10","LGTM, would be nice to check whether it works on Win10 too. It's fine if it isn't (left as TODO), but then there should be a check for version and a comment+debug printout saying its not yet supported.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,552,2019-02-04T19:28:20Z,2019-02-15T00:24:58Z,2019-02-19T17:00:59Z,MERGED,True,599,62,15,https://github.com/aoshiken,WoW64 dlls,1,[],https://github.com/tklengyel/drakvuf/pull/552,https://github.com/aoshiken,10,https://github.com/tklengyel/drakvuf/pull/552#issuecomment-463079777,"Add support for listing WoW modules from WoW processess.

Add new command line option -w/--rekall-wow for reading the WoW64 ntdll Rekall profile
Add new fields for the module_info_t structure so the visitor will know if the DLL and the process where it's loaded are Wow64
Change module_info unicode structures to unicode_t *
Added a few new functions for walking the WoW64 data
Expose unicode32 functions in libdrakvuf.h

This is the first try to take care of the issue #456.
Usage
You must specify the Rekall profile for the WoW64 NTDLL with the command line option -w/--rekall-wow and then use the drakvuf_enumerate_processes_with_module the usual way.
Find below an example with a test plugin running Drakvuf against a domain that have running a WoW64 process, that plugin does nothing just looks for the rpcrt4.dll module and prints the module_info data on stdout from its visitor callback:
$ sudo /home/aandres/github/drakvuf/src/drakvuf -r /opt-hdd/dist/ramdisk/rekall/profiles/win7-sp1-x64/ntkrnl.json -w /home/aandres/rekall-profiles/wntdll.json -d win7-sp1-x64-29 -t 1 -v
[...]
1549307916.582049 Found module wowsrv.exe at 0x13c0000
1549307916.582100 Found module ntdll.dll at 0x77010000
1549307916.582132 Found module wow64.dll at 0x73f80000
1549307916.582175 Found module wow64win.dll at 0x73f20000
1549307916.582275 Found module wow64cpu.dll at 0x73ff0000
1549307916.582309 Failed to find rpcrt4.dll in list starting at 0x2e2880
1549307916.582579 Found WoW64 module wowsrv.exe at 0x13c0000
1549307916.582678 Found WoW64 module ntdll.dll at 0x771f0000
1549307916.582726 Found WoW64 module kernel32.dll at 0x75df0000
1549307916.582787 Found WoW64 module KERNELBASE.dll at 0x75390000
1549307916.582917 Found WoW64 module ADVAPI32.dll at 0x75fb0000
1549307916.582966 Found WoW64 module msvcrt.dll at 0x75470000
1549307916.583016 Found WoW64 module sechost.dll at 0x76dc0000
1549307916.583058 Found WoW64 module RPCRT4.dll at 0x75520000
[TEST] visit: CR3[0x95FA8000] pid[0x508 1288] wow_proc[1] base_name[RPCRT4.dll] load_address[0x75520000] wow_module[1] full_name[C:\Windows\syswow64\RPCRT4.dll]
[...]

As you can see on the log above there are 2 new fields in the module_info_t structure:

bool is_wow_process. Set to true if the process where the module is loaded is a WoW64 one
bool is_wow. Set to true if the current module is a WoW64 one

The remaining module_info_t fields retains the same meaning as before.
Tested on Windows 7 SP1 x64 and Windows 10","Seems reasonable, although I don't have currently a Win10 available I'll try to get one (not guaranteed).
Anyway there's a concern about the Win10 kernel symbol _EWOW64PROCESS, the offsets from the kernel structures are common for all of the windows platforms (accesible in code from the field drakvuf->offsets) but unfortunately it's not the case with _EWOW64PROCESS because this symbol doesn't exist on Win7 so it's unclear to me where to place it.
I forgot to comment that we need the _EWOW64PROCESS symbol for accessing the Peb located at some offset inside the structure (currently at offset 0):
_EWOW64PROCESS"": 16
{
    ""Peb"":       [0,  [""Pointer"",        {""target"": ""Void""}]]
    ""Machine"":   [8,  [""unsigned short"", {}]],
    ""NtdllType"": [12, [""Enumeration"",    {""enum_name"": ""_SYSTEM_DLL_TYPE"", ""target"": ""long"" }]],
}

Any ideas about?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,552,2019-02-04T19:28:20Z,2019-02-15T00:24:58Z,2019-02-19T17:00:59Z,MERGED,True,599,62,15,https://github.com/aoshiken,WoW64 dlls,1,[],https://github.com/tklengyel/drakvuf/pull/552,https://github.com/aoshiken,11,https://github.com/tklengyel/drakvuf/pull/552#issuecomment-463250701,"Add support for listing WoW modules from WoW processess.

Add new command line option -w/--rekall-wow for reading the WoW64 ntdll Rekall profile
Add new fields for the module_info_t structure so the visitor will know if the DLL and the process where it's loaded are Wow64
Change module_info unicode structures to unicode_t *
Added a few new functions for walking the WoW64 data
Expose unicode32 functions in libdrakvuf.h

This is the first try to take care of the issue #456.
Usage
You must specify the Rekall profile for the WoW64 NTDLL with the command line option -w/--rekall-wow and then use the drakvuf_enumerate_processes_with_module the usual way.
Find below an example with a test plugin running Drakvuf against a domain that have running a WoW64 process, that plugin does nothing just looks for the rpcrt4.dll module and prints the module_info data on stdout from its visitor callback:
$ sudo /home/aandres/github/drakvuf/src/drakvuf -r /opt-hdd/dist/ramdisk/rekall/profiles/win7-sp1-x64/ntkrnl.json -w /home/aandres/rekall-profiles/wntdll.json -d win7-sp1-x64-29 -t 1 -v
[...]
1549307916.582049 Found module wowsrv.exe at 0x13c0000
1549307916.582100 Found module ntdll.dll at 0x77010000
1549307916.582132 Found module wow64.dll at 0x73f80000
1549307916.582175 Found module wow64win.dll at 0x73f20000
1549307916.582275 Found module wow64cpu.dll at 0x73ff0000
1549307916.582309 Failed to find rpcrt4.dll in list starting at 0x2e2880
1549307916.582579 Found WoW64 module wowsrv.exe at 0x13c0000
1549307916.582678 Found WoW64 module ntdll.dll at 0x771f0000
1549307916.582726 Found WoW64 module kernel32.dll at 0x75df0000
1549307916.582787 Found WoW64 module KERNELBASE.dll at 0x75390000
1549307916.582917 Found WoW64 module ADVAPI32.dll at 0x75fb0000
1549307916.582966 Found WoW64 module msvcrt.dll at 0x75470000
1549307916.583016 Found WoW64 module sechost.dll at 0x76dc0000
1549307916.583058 Found WoW64 module RPCRT4.dll at 0x75520000
[TEST] visit: CR3[0x95FA8000] pid[0x508 1288] wow_proc[1] base_name[RPCRT4.dll] load_address[0x75520000] wow_module[1] full_name[C:\Windows\syswow64\RPCRT4.dll]
[...]

As you can see on the log above there are 2 new fields in the module_info_t structure:

bool is_wow_process. Set to true if the process where the module is loaded is a WoW64 one
bool is_wow. Set to true if the current module is a WoW64 one

The remaining module_info_t fields retains the same meaning as before.
Tested on Windows 7 SP1 x64 and Windows 10","@tklengyel
I managed to get and build a Win10 VM but unfortunately after your latest commits I'm unable to compile Drakvuf
nctrl -lxenforeignmemory -lxencall -lpthread
../../libtool: line 7485: cd: @INSTALL_LIB_DIR@: No such file or directory
libtool:   error: cannot determine absolute directory name of '@INSTALL_LIB_DIR@'
Makefile:490: recipe for target 'libdrakvuf.la' failed
make[3]: *** [libdrakvuf.la] Error 1

Sounds familiar?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,552,2019-02-04T19:28:20Z,2019-02-15T00:24:58Z,2019-02-19T17:00:59Z,MERGED,True,599,62,15,https://github.com/aoshiken,WoW64 dlls,1,[],https://github.com/tklengyel/drakvuf/pull/552,https://github.com/tklengyel,12,https://github.com/tklengyel/drakvuf/pull/552#issuecomment-463254219,"Add support for listing WoW modules from WoW processess.

Add new command line option -w/--rekall-wow for reading the WoW64 ntdll Rekall profile
Add new fields for the module_info_t structure so the visitor will know if the DLL and the process where it's loaded are Wow64
Change module_info unicode structures to unicode_t *
Added a few new functions for walking the WoW64 data
Expose unicode32 functions in libdrakvuf.h

This is the first try to take care of the issue #456.
Usage
You must specify the Rekall profile for the WoW64 NTDLL with the command line option -w/--rekall-wow and then use the drakvuf_enumerate_processes_with_module the usual way.
Find below an example with a test plugin running Drakvuf against a domain that have running a WoW64 process, that plugin does nothing just looks for the rpcrt4.dll module and prints the module_info data on stdout from its visitor callback:
$ sudo /home/aandres/github/drakvuf/src/drakvuf -r /opt-hdd/dist/ramdisk/rekall/profiles/win7-sp1-x64/ntkrnl.json -w /home/aandres/rekall-profiles/wntdll.json -d win7-sp1-x64-29 -t 1 -v
[...]
1549307916.582049 Found module wowsrv.exe at 0x13c0000
1549307916.582100 Found module ntdll.dll at 0x77010000
1549307916.582132 Found module wow64.dll at 0x73f80000
1549307916.582175 Found module wow64win.dll at 0x73f20000
1549307916.582275 Found module wow64cpu.dll at 0x73ff0000
1549307916.582309 Failed to find rpcrt4.dll in list starting at 0x2e2880
1549307916.582579 Found WoW64 module wowsrv.exe at 0x13c0000
1549307916.582678 Found WoW64 module ntdll.dll at 0x771f0000
1549307916.582726 Found WoW64 module kernel32.dll at 0x75df0000
1549307916.582787 Found WoW64 module KERNELBASE.dll at 0x75390000
1549307916.582917 Found WoW64 module ADVAPI32.dll at 0x75fb0000
1549307916.582966 Found WoW64 module msvcrt.dll at 0x75470000
1549307916.583016 Found WoW64 module sechost.dll at 0x76dc0000
1549307916.583058 Found WoW64 module RPCRT4.dll at 0x75520000
[TEST] visit: CR3[0x95FA8000] pid[0x508 1288] wow_proc[1] base_name[RPCRT4.dll] load_address[0x75520000] wow_module[1] full_name[C:\Windows\syswow64\RPCRT4.dll]
[...]

As you can see on the log above there are 2 new fields in the module_info_t structure:

bool is_wow_process. Set to true if the process where the module is loaded is a WoW64 one
bool is_wow. Set to true if the current module is a WoW64 one

The remaining module_info_t fields retains the same meaning as before.
Tested on Windows 7 SP1 x64 and Windows 10","No, that's not something I've seen. It builds fine on both Travis and Jenkins so I would say the error is on your side. Try running git clean -xdf and rebuild from scratch.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,552,2019-02-04T19:28:20Z,2019-02-15T00:24:58Z,2019-02-19T17:00:59Z,MERGED,True,599,62,15,https://github.com/aoshiken,WoW64 dlls,1,[],https://github.com/tklengyel/drakvuf/pull/552,https://github.com/aoshiken,13,https://github.com/tklengyel/drakvuf/pull/552#issuecomment-463591685,"Add support for listing WoW modules from WoW processess.

Add new command line option -w/--rekall-wow for reading the WoW64 ntdll Rekall profile
Add new fields for the module_info_t structure so the visitor will know if the DLL and the process where it's loaded are Wow64
Change module_info unicode structures to unicode_t *
Added a few new functions for walking the WoW64 data
Expose unicode32 functions in libdrakvuf.h

This is the first try to take care of the issue #456.
Usage
You must specify the Rekall profile for the WoW64 NTDLL with the command line option -w/--rekall-wow and then use the drakvuf_enumerate_processes_with_module the usual way.
Find below an example with a test plugin running Drakvuf against a domain that have running a WoW64 process, that plugin does nothing just looks for the rpcrt4.dll module and prints the module_info data on stdout from its visitor callback:
$ sudo /home/aandres/github/drakvuf/src/drakvuf -r /opt-hdd/dist/ramdisk/rekall/profiles/win7-sp1-x64/ntkrnl.json -w /home/aandres/rekall-profiles/wntdll.json -d win7-sp1-x64-29 -t 1 -v
[...]
1549307916.582049 Found module wowsrv.exe at 0x13c0000
1549307916.582100 Found module ntdll.dll at 0x77010000
1549307916.582132 Found module wow64.dll at 0x73f80000
1549307916.582175 Found module wow64win.dll at 0x73f20000
1549307916.582275 Found module wow64cpu.dll at 0x73ff0000
1549307916.582309 Failed to find rpcrt4.dll in list starting at 0x2e2880
1549307916.582579 Found WoW64 module wowsrv.exe at 0x13c0000
1549307916.582678 Found WoW64 module ntdll.dll at 0x771f0000
1549307916.582726 Found WoW64 module kernel32.dll at 0x75df0000
1549307916.582787 Found WoW64 module KERNELBASE.dll at 0x75390000
1549307916.582917 Found WoW64 module ADVAPI32.dll at 0x75fb0000
1549307916.582966 Found WoW64 module msvcrt.dll at 0x75470000
1549307916.583016 Found WoW64 module sechost.dll at 0x76dc0000
1549307916.583058 Found WoW64 module RPCRT4.dll at 0x75520000
[TEST] visit: CR3[0x95FA8000] pid[0x508 1288] wow_proc[1] base_name[RPCRT4.dll] load_address[0x75520000] wow_module[1] full_name[C:\Windows\syswow64\RPCRT4.dll]
[...]

As you can see on the log above there are 2 new fields in the module_info_t structure:

bool is_wow_process. Set to true if the process where the module is loaded is a WoW64 one
bool is_wow. Set to true if the current module is a WoW64 one

The remaining module_info_t fields retains the same meaning as before.
Tested on Windows 7 SP1 x64 and Windows 10","Ok, tested on Win10 and initially found a problem: the symbol name EPROCESS.Wow64Process changed to EPROCESS.WoW64Process (notice the uppercase in the second 'W').
Changed that manually and the WoW64 modules were correctly walked and their data correctly acquired, my only concern is the full DLL path because it was showing the system32 path instead of the SysWOW64 path, the rest of the data (base name and load address) were correct, matched against the procmon output inside the same guest:
[...]
1550142564.030632 Found WoW64 module wowsrv.exe at 0xff0000
1550142564.030654 Found WoW64 module ntdll.dll at 0x77880000
1550142564.030663 Found WoW64 module KERNEL32.DLL at 0x74160000
1550142564.030680 Found WoW64 module KERNELBASE.dll at 0x74930000
1550142564.030691 Found WoW64 module ADVAPI32.dll at 0x76df0000
1550142564.030699 Found WoW64 module msvcrt.dll at 0x77110000
1550142564.030707 Found WoW64 module sechost.dll at 0x76560000
1550142564.030726 Found WoW64 module RPCRT4.dll at 0x74b70000
1550142564.030734 [TEST] trap_visitor: CR3[0x96300002] pid[0x148 328] is_wow_process[1]  is_wow_module[1] base_name[RPCRT4.dll] load_address[0x74B70000] full_name[C:\Windows\System32\RPCRT4.dll]
[...]

So regarding the initial problem I wonder if perhaps we could change the symbol search for windows systems to be case insensitive...
What do you think @tklengyel ?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,552,2019-02-04T19:28:20Z,2019-02-15T00:24:58Z,2019-02-19T17:00:59Z,MERGED,True,599,62,15,https://github.com/aoshiken,WoW64 dlls,1,[],https://github.com/tklengyel/drakvuf/pull/552,https://github.com/tklengyel,14,https://github.com/tklengyel/drakvuf/pull/552#issuecomment-463609830,"Add support for listing WoW modules from WoW processess.

Add new command line option -w/--rekall-wow for reading the WoW64 ntdll Rekall profile
Add new fields for the module_info_t structure so the visitor will know if the DLL and the process where it's loaded are Wow64
Change module_info unicode structures to unicode_t *
Added a few new functions for walking the WoW64 data
Expose unicode32 functions in libdrakvuf.h

This is the first try to take care of the issue #456.
Usage
You must specify the Rekall profile for the WoW64 NTDLL with the command line option -w/--rekall-wow and then use the drakvuf_enumerate_processes_with_module the usual way.
Find below an example with a test plugin running Drakvuf against a domain that have running a WoW64 process, that plugin does nothing just looks for the rpcrt4.dll module and prints the module_info data on stdout from its visitor callback:
$ sudo /home/aandres/github/drakvuf/src/drakvuf -r /opt-hdd/dist/ramdisk/rekall/profiles/win7-sp1-x64/ntkrnl.json -w /home/aandres/rekall-profiles/wntdll.json -d win7-sp1-x64-29 -t 1 -v
[...]
1549307916.582049 Found module wowsrv.exe at 0x13c0000
1549307916.582100 Found module ntdll.dll at 0x77010000
1549307916.582132 Found module wow64.dll at 0x73f80000
1549307916.582175 Found module wow64win.dll at 0x73f20000
1549307916.582275 Found module wow64cpu.dll at 0x73ff0000
1549307916.582309 Failed to find rpcrt4.dll in list starting at 0x2e2880
1549307916.582579 Found WoW64 module wowsrv.exe at 0x13c0000
1549307916.582678 Found WoW64 module ntdll.dll at 0x771f0000
1549307916.582726 Found WoW64 module kernel32.dll at 0x75df0000
1549307916.582787 Found WoW64 module KERNELBASE.dll at 0x75390000
1549307916.582917 Found WoW64 module ADVAPI32.dll at 0x75fb0000
1549307916.582966 Found WoW64 module msvcrt.dll at 0x75470000
1549307916.583016 Found WoW64 module sechost.dll at 0x76dc0000
1549307916.583058 Found WoW64 module RPCRT4.dll at 0x75520000
[TEST] visit: CR3[0x95FA8000] pid[0x508 1288] wow_proc[1] base_name[RPCRT4.dll] load_address[0x75520000] wow_module[1] full_name[C:\Windows\syswow64\RPCRT4.dll]
[...]

As you can see on the log above there are 2 new fields in the module_info_t structure:

bool is_wow_process. Set to true if the process where the module is loaded is a WoW64 one
bool is_wow. Set to true if the current module is a WoW64 one

The remaining module_info_t fields retains the same meaning as before.
Tested on Windows 7 SP1 x64 and Windows 10",I don't think making the search case insensitive is a good idea. Just put both in the list of symbols to be gathered and access them as needed based on the running Windows version. We do that for discrepancies between 32/64bit versions already.,True,{'THUMBS_UP': ['https://github.com/aoshiken']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,552,2019-02-04T19:28:20Z,2019-02-15T00:24:58Z,2019-02-19T17:00:59Z,MERGED,True,599,62,15,https://github.com/aoshiken,WoW64 dlls,1,[],https://github.com/tklengyel/drakvuf/pull/552,https://github.com/aoshiken,15,https://github.com/tklengyel/drakvuf/pull/552#issuecomment-463645439,"Add support for listing WoW modules from WoW processess.

Add new command line option -w/--rekall-wow for reading the WoW64 ntdll Rekall profile
Add new fields for the module_info_t structure so the visitor will know if the DLL and the process where it's loaded are Wow64
Change module_info unicode structures to unicode_t *
Added a few new functions for walking the WoW64 data
Expose unicode32 functions in libdrakvuf.h

This is the first try to take care of the issue #456.
Usage
You must specify the Rekall profile for the WoW64 NTDLL with the command line option -w/--rekall-wow and then use the drakvuf_enumerate_processes_with_module the usual way.
Find below an example with a test plugin running Drakvuf against a domain that have running a WoW64 process, that plugin does nothing just looks for the rpcrt4.dll module and prints the module_info data on stdout from its visitor callback:
$ sudo /home/aandres/github/drakvuf/src/drakvuf -r /opt-hdd/dist/ramdisk/rekall/profiles/win7-sp1-x64/ntkrnl.json -w /home/aandres/rekall-profiles/wntdll.json -d win7-sp1-x64-29 -t 1 -v
[...]
1549307916.582049 Found module wowsrv.exe at 0x13c0000
1549307916.582100 Found module ntdll.dll at 0x77010000
1549307916.582132 Found module wow64.dll at 0x73f80000
1549307916.582175 Found module wow64win.dll at 0x73f20000
1549307916.582275 Found module wow64cpu.dll at 0x73ff0000
1549307916.582309 Failed to find rpcrt4.dll in list starting at 0x2e2880
1549307916.582579 Found WoW64 module wowsrv.exe at 0x13c0000
1549307916.582678 Found WoW64 module ntdll.dll at 0x771f0000
1549307916.582726 Found WoW64 module kernel32.dll at 0x75df0000
1549307916.582787 Found WoW64 module KERNELBASE.dll at 0x75390000
1549307916.582917 Found WoW64 module ADVAPI32.dll at 0x75fb0000
1549307916.582966 Found WoW64 module msvcrt.dll at 0x75470000
1549307916.583016 Found WoW64 module sechost.dll at 0x76dc0000
1549307916.583058 Found WoW64 module RPCRT4.dll at 0x75520000
[TEST] visit: CR3[0x95FA8000] pid[0x508 1288] wow_proc[1] base_name[RPCRT4.dll] load_address[0x75520000] wow_module[1] full_name[C:\Windows\syswow64\RPCRT4.dll]
[...]

As you can see on the log above there are 2 new fields in the module_info_t structure:

bool is_wow_process. Set to true if the process where the module is loaded is a WoW64 one
bool is_wow. Set to true if the current module is a WoW64 one

The remaining module_info_t fields retains the same meaning as before.
Tested on Windows 7 SP1 x64 and Windows 10","Ok, seems good...
Windows7 SP1 x64 run
1550153943.082848 Found module wowsrv.exe at 0x13c0000
1550153943.082858 Found module ntdll.dll at 0x77010000
1550153943.082865 Found module wow64.dll at 0x73f80000
1550153943.082873 Found module wow64win.dll at 0x73f20000
1550153943.082889 Found module wow64cpu.dll at 0x73ff0000
1550153943.082896 Failed to find sspicli.dll in list starting at 0x2e2880
1550153943.082952 Found WoW64 module wowsrv.exe at 0x13c0000
1550153943.082974 Found WoW64 module ntdll.dll at 0x771f0000
1550153943.082984 Found WoW64 module kernel32.dll at 0x75df0000
1550153943.082991 Found WoW64 module KERNELBASE.dll at 0x75390000
1550153943.083009 Found WoW64 module ADVAPI32.dll at 0x75fb0000
1550153943.083018 Found WoW64 module msvcrt.dll at 0x75470000
1550153943.083023 Found WoW64 module sechost.dll at 0x76dc0000
1550153943.083029 Found WoW64 module RPCRT4.dll at 0x75520000
1550153943.083050 Found WoW64 module SspiCli.dll at 0x74d50000
1550153943.083062 [TEST] trap_visitor: CR3[0x95FA8000] pid[0x508 1288] is_wow_process[1]  is_wow_module[1] base_name[SspiCli.dll] load_address[0x74D50000] full_name[C:\Windows\syswow64\SspiCli.dll]

Windows10 run
1550153632.978271 Found module wowsrv.exe at 0xff0000
1550153632.978283 Found module ntdll.dll at 0x7fff15ba0000
1550153632.978295 Found module wow64.dll at 0x777a0000
1550153632.978306 Found module wow64win.dll at 0x77800000
1550153632.978330 Found module wow64cpu.dll at 0x77790000
1550153632.978339 Failed to find sspicli.dll in list starting at 0x7224e0
1550153632.978422 Found WoW64 module wowsrv.exe at 0xff0000
1550153632.978446 Found WoW64 module ntdll.dll at 0x77880000
1550153632.978460 Found WoW64 module KERNEL32.DLL at 0x74160000
1550153632.978484 Found WoW64 module KERNELBASE.dll at 0x74930000
1550153632.978498 Found WoW64 module ADVAPI32.dll at 0x76df0000
1550153632.978510 Found WoW64 module msvcrt.dll at 0x77110000
1550153632.978521 Found WoW64 module sechost.dll at 0x76560000
1550153632.978546 Found WoW64 module RPCRT4.dll at 0x74b70000
1550153632.978561 Found WoW64 module SspiCli.dll at 0x74140000
1550153632.978571 [TEST] trap_visitor: CR3[0x96300002] pid[0x148 328] is_wow_process[1]  is_wow_module[1] base_name[SspiCli.dll] load_address[0x74140000] full_name[C:\Windows\System32\SspiCli.dll]

...PR in a few minutes (I'll squash the commits)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,552,2019-02-04T19:28:20Z,2019-02-15T00:24:58Z,2019-02-19T17:00:59Z,MERGED,True,599,62,15,https://github.com/aoshiken,WoW64 dlls,1,[],https://github.com/tklengyel/drakvuf/pull/552,https://github.com/tklengyel,16,https://github.com/tklengyel/drakvuf/pull/552#issuecomment-463858023,"Add support for listing WoW modules from WoW processess.

Add new command line option -w/--rekall-wow for reading the WoW64 ntdll Rekall profile
Add new fields for the module_info_t structure so the visitor will know if the DLL and the process where it's loaded are Wow64
Change module_info unicode structures to unicode_t *
Added a few new functions for walking the WoW64 data
Expose unicode32 functions in libdrakvuf.h

This is the first try to take care of the issue #456.
Usage
You must specify the Rekall profile for the WoW64 NTDLL with the command line option -w/--rekall-wow and then use the drakvuf_enumerate_processes_with_module the usual way.
Find below an example with a test plugin running Drakvuf against a domain that have running a WoW64 process, that plugin does nothing just looks for the rpcrt4.dll module and prints the module_info data on stdout from its visitor callback:
$ sudo /home/aandres/github/drakvuf/src/drakvuf -r /opt-hdd/dist/ramdisk/rekall/profiles/win7-sp1-x64/ntkrnl.json -w /home/aandres/rekall-profiles/wntdll.json -d win7-sp1-x64-29 -t 1 -v
[...]
1549307916.582049 Found module wowsrv.exe at 0x13c0000
1549307916.582100 Found module ntdll.dll at 0x77010000
1549307916.582132 Found module wow64.dll at 0x73f80000
1549307916.582175 Found module wow64win.dll at 0x73f20000
1549307916.582275 Found module wow64cpu.dll at 0x73ff0000
1549307916.582309 Failed to find rpcrt4.dll in list starting at 0x2e2880
1549307916.582579 Found WoW64 module wowsrv.exe at 0x13c0000
1549307916.582678 Found WoW64 module ntdll.dll at 0x771f0000
1549307916.582726 Found WoW64 module kernel32.dll at 0x75df0000
1549307916.582787 Found WoW64 module KERNELBASE.dll at 0x75390000
1549307916.582917 Found WoW64 module ADVAPI32.dll at 0x75fb0000
1549307916.582966 Found WoW64 module msvcrt.dll at 0x75470000
1549307916.583016 Found WoW64 module sechost.dll at 0x76dc0000
1549307916.583058 Found WoW64 module RPCRT4.dll at 0x75520000
[TEST] visit: CR3[0x95FA8000] pid[0x508 1288] wow_proc[1] base_name[RPCRT4.dll] load_address[0x75520000] wow_module[1] full_name[C:\Windows\syswow64\RPCRT4.dll]
[...]

As you can see on the log above there are 2 new fields in the module_info_t structure:

bool is_wow_process. Set to true if the process where the module is loaded is a WoW64 one
bool is_wow. Set to true if the current module is a WoW64 one

The remaining module_info_t fields retains the same meaning as before.
Tested on Windows 7 SP1 x64 and Windows 10",Thanks!,True,{'THUMBS_UP': ['https://github.com/aoshiken']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,552,2019-02-04T19:28:20Z,2019-02-15T00:24:58Z,2019-02-19T17:00:59Z,MERGED,True,599,62,15,https://github.com/aoshiken,WoW64 dlls,1,[],https://github.com/tklengyel/drakvuf/pull/552,https://github.com/tklengyel,17,https://github.com/tklengyel/drakvuf/pull/552#issuecomment-465184167,"Add support for listing WoW modules from WoW processess.

Add new command line option -w/--rekall-wow for reading the WoW64 ntdll Rekall profile
Add new fields for the module_info_t structure so the visitor will know if the DLL and the process where it's loaded are Wow64
Change module_info unicode structures to unicode_t *
Added a few new functions for walking the WoW64 data
Expose unicode32 functions in libdrakvuf.h

This is the first try to take care of the issue #456.
Usage
You must specify the Rekall profile for the WoW64 NTDLL with the command line option -w/--rekall-wow and then use the drakvuf_enumerate_processes_with_module the usual way.
Find below an example with a test plugin running Drakvuf against a domain that have running a WoW64 process, that plugin does nothing just looks for the rpcrt4.dll module and prints the module_info data on stdout from its visitor callback:
$ sudo /home/aandres/github/drakvuf/src/drakvuf -r /opt-hdd/dist/ramdisk/rekall/profiles/win7-sp1-x64/ntkrnl.json -w /home/aandres/rekall-profiles/wntdll.json -d win7-sp1-x64-29 -t 1 -v
[...]
1549307916.582049 Found module wowsrv.exe at 0x13c0000
1549307916.582100 Found module ntdll.dll at 0x77010000
1549307916.582132 Found module wow64.dll at 0x73f80000
1549307916.582175 Found module wow64win.dll at 0x73f20000
1549307916.582275 Found module wow64cpu.dll at 0x73ff0000
1549307916.582309 Failed to find rpcrt4.dll in list starting at 0x2e2880
1549307916.582579 Found WoW64 module wowsrv.exe at 0x13c0000
1549307916.582678 Found WoW64 module ntdll.dll at 0x771f0000
1549307916.582726 Found WoW64 module kernel32.dll at 0x75df0000
1549307916.582787 Found WoW64 module KERNELBASE.dll at 0x75390000
1549307916.582917 Found WoW64 module ADVAPI32.dll at 0x75fb0000
1549307916.582966 Found WoW64 module msvcrt.dll at 0x75470000
1549307916.583016 Found WoW64 module sechost.dll at 0x76dc0000
1549307916.583058 Found WoW64 module RPCRT4.dll at 0x75520000
[TEST] visit: CR3[0x95FA8000] pid[0x508 1288] wow_proc[1] base_name[RPCRT4.dll] load_address[0x75520000] wow_module[1] full_name[C:\Windows\syswow64\RPCRT4.dll]
[...]

As you can see on the log above there are 2 new fields in the module_info_t structure:

bool is_wow_process. Set to true if the process where the module is loaded is a WoW64 one
bool is_wow. Set to true if the current module is a WoW64 one

The remaining module_info_t fields retains the same meaning as before.
Tested on Windows 7 SP1 x64 and Windows 10","@aoshiken Quick clarification, by WoW64 ntdll you mean System32\wow64.dll, correct?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,552,2019-02-04T19:28:20Z,2019-02-15T00:24:58Z,2019-02-19T17:00:59Z,MERGED,True,599,62,15,https://github.com/aoshiken,WoW64 dlls,1,[],https://github.com/tklengyel/drakvuf/pull/552,https://github.com/aoshiken,18,https://github.com/tklengyel/drakvuf/pull/552#issuecomment-465218771,"Add support for listing WoW modules from WoW processess.

Add new command line option -w/--rekall-wow for reading the WoW64 ntdll Rekall profile
Add new fields for the module_info_t structure so the visitor will know if the DLL and the process where it's loaded are Wow64
Change module_info unicode structures to unicode_t *
Added a few new functions for walking the WoW64 data
Expose unicode32 functions in libdrakvuf.h

This is the first try to take care of the issue #456.
Usage
You must specify the Rekall profile for the WoW64 NTDLL with the command line option -w/--rekall-wow and then use the drakvuf_enumerate_processes_with_module the usual way.
Find below an example with a test plugin running Drakvuf against a domain that have running a WoW64 process, that plugin does nothing just looks for the rpcrt4.dll module and prints the module_info data on stdout from its visitor callback:
$ sudo /home/aandres/github/drakvuf/src/drakvuf -r /opt-hdd/dist/ramdisk/rekall/profiles/win7-sp1-x64/ntkrnl.json -w /home/aandres/rekall-profiles/wntdll.json -d win7-sp1-x64-29 -t 1 -v
[...]
1549307916.582049 Found module wowsrv.exe at 0x13c0000
1549307916.582100 Found module ntdll.dll at 0x77010000
1549307916.582132 Found module wow64.dll at 0x73f80000
1549307916.582175 Found module wow64win.dll at 0x73f20000
1549307916.582275 Found module wow64cpu.dll at 0x73ff0000
1549307916.582309 Failed to find rpcrt4.dll in list starting at 0x2e2880
1549307916.582579 Found WoW64 module wowsrv.exe at 0x13c0000
1549307916.582678 Found WoW64 module ntdll.dll at 0x771f0000
1549307916.582726 Found WoW64 module kernel32.dll at 0x75df0000
1549307916.582787 Found WoW64 module KERNELBASE.dll at 0x75390000
1549307916.582917 Found WoW64 module ADVAPI32.dll at 0x75fb0000
1549307916.582966 Found WoW64 module msvcrt.dll at 0x75470000
1549307916.583016 Found WoW64 module sechost.dll at 0x76dc0000
1549307916.583058 Found WoW64 module RPCRT4.dll at 0x75520000
[TEST] visit: CR3[0x95FA8000] pid[0x508 1288] wow_proc[1] base_name[RPCRT4.dll] load_address[0x75520000] wow_module[1] full_name[C:\Windows\syswow64\RPCRT4.dll]
[...]

As you can see on the log above there are 2 new fields in the module_info_t structure:

bool is_wow_process. Set to true if the process where the module is loaded is a WoW64 one
bool is_wow. Set to true if the current module is a WoW64 one

The remaining module_info_t fields retains the same meaning as before.
Tested on Windows 7 SP1 x64 and Windows 10","@tklengyel No, I mean Windows\SysWOW64\ntdll.dll",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,553,2019-02-05T14:00:45Z,2019-02-05T16:34:44Z,2019-02-05T16:34:44Z,MERGED,True,15,8,1,https://github.com/zodeak,last_error fix,1,[],https://github.com/tklengyel/drakvuf/pull/553,https://github.com/zodeak,1,https://github.com/tklengyel/drakvuf/pull/553,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,553,2019-02-05T14:00:45Z,2019-02-05T16:34:44Z,2019-02-05T16:34:44Z,MERGED,True,15,8,1,https://github.com/zodeak,last_error fix,1,[],https://github.com/tklengyel/drakvuf/pull/553,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/553#issuecomment-460647583,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,553,2019-02-05T14:00:45Z,2019-02-05T16:34:44Z,2019-02-05T16:34:44Z,MERGED,True,15,8,1,https://github.com/zodeak,last_error fix,1,[],https://github.com/tklengyel/drakvuf/pull/553,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/553#issuecomment-460654524,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,556,2019-02-09T17:07:55Z,2019-02-19T15:16:46Z,2019-02-19T15:16:46Z,CLOSED,False,39240,0,13,https://github.com/Wenzel,add Vagrant dev environment,1,[],https://github.com/tklengyel/drakvuf/pull/556,https://github.com/Wenzel,1,https://github.com/tklengyel/drakvuf/pull/556,"This PR adds a Vagrant development environment.
It's not complete yet, but it already installs

Xen
libvmi
a Win7 VM with a rekall profile
a Xen VM config file

To be continued","This PR adds a Vagrant development environment.
It's not complete yet, but it already installs

Xen
libvmi
a Win7 VM with a rekall profile
a Xen VM config file

To be continued",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,556,2019-02-09T17:07:55Z,2019-02-19T15:16:46Z,2019-02-19T15:16:46Z,CLOSED,False,39240,0,13,https://github.com/Wenzel,add Vagrant dev environment,1,[],https://github.com/tklengyel/drakvuf/pull/556,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/556#issuecomment-462061411,"This PR adds a Vagrant development environment.
It's not complete yet, but it already installs

Xen
libvmi
a Win7 VM with a rekall profile
a Xen VM config file

To be continued",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,556,2019-02-09T17:07:55Z,2019-02-19T15:16:46Z,2019-02-19T15:16:46Z,CLOSED,False,39240,0,13,https://github.com/Wenzel,add Vagrant dev environment,1,[],https://github.com/tklengyel/drakvuf/pull/556,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/556#issuecomment-462075349,"This PR adds a Vagrant development environment.
It's not complete yet, but it already installs

Xen
libvmi
a Win7 VM with a rekall profile
a Xen VM config file

To be continued","Not sure about including the win7 rekall profile, that is not portable from on dev system to another unless the VM image itself matches exactly.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,556,2019-02-09T17:07:55Z,2019-02-19T15:16:46Z,2019-02-19T15:16:46Z,CLOSED,False,39240,0,13,https://github.com/Wenzel,add Vagrant dev environment,1,[],https://github.com/tklengyel/drakvuf/pull/556,https://github.com/Wenzel,4,https://github.com/tklengyel/drakvuf/pull/556#issuecomment-462766733,"This PR adds a Vagrant development environment.
It's not complete yet, but it already installs

Xen
libvmi
a Win7 VM with a rekall profile
a Xen VM config file

To be continued","I agree, but that's a start.
The VM image is downloaded from my dropbox, as we cannot build Packer templates on top of Xen.
In an improved version we could automatically generate the profile with the rekall_offset_finder.py:
https://github.com/KVM-VMI/kvm-vmi/blob/kvmi/vagrant/provision_full/test_vm.yml#L56",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,556,2019-02-09T17:07:55Z,2019-02-19T15:16:46Z,2019-02-19T15:16:46Z,CLOSED,False,39240,0,13,https://github.com/Wenzel,add Vagrant dev environment,1,[],https://github.com/tklengyel/drakvuf/pull/556,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/556#issuecomment-462778939,"This PR adds a Vagrant development environment.
It's not complete yet, but it already installs

Xen
libvmi
a Win7 VM with a rekall profile
a Xen VM config file

To be continued","The VM image is downloaded from my dropbox

I'm even less convinced this is a good idea. I don't think you have the license to distribute Windows. Also, I think this would make sense to live in its own repository. I wouldn't mind adding a submodule to drakvuf pointing to it.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,556,2019-02-09T17:07:55Z,2019-02-19T15:16:46Z,2019-02-19T15:16:46Z,CLOSED,False,39240,0,13,https://github.com/Wenzel,add Vagrant dev environment,1,[],https://github.com/tklengyel/drakvuf/pull/556,https://github.com/Wenzel,6,https://github.com/tklengyel/drakvuf/pull/556#issuecomment-462780874,"This PR adds a Vagrant development environment.
It's not complete yet, but it already installs

Xen
libvmi
a Win7 VM with a rekall profile
a Xen VM config file

To be continued","I'm even less convinced this is a good idea. I don't think you have the license to distribute Windows.

Yeah, i know it's borderline... Just trying to build temporary solutions in the meantime.

Also, I think this would make sense to live in its own repository.

That could be a good solution, but i would require more configuration from the users, like specifying where the drakvuf sources are.
In our case,  everything is hidden in drakvuf/vagrant, and i'm synchronizing the parent directory, exposing it as /vagrant:
config.vm.synced_folder "".."", ""/vagrant"",",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,556,2019-02-09T17:07:55Z,2019-02-19T15:16:46Z,2019-02-19T15:16:46Z,CLOSED,False,39240,0,13,https://github.com/Wenzel,add Vagrant dev environment,1,[],https://github.com/tklengyel/drakvuf/pull/556,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/556#issuecomment-462781987,"This PR adds a Vagrant development environment.
It's not complete yet, but it already installs

Xen
libvmi
a Win7 VM with a rekall profile
a Xen VM config file

To be continued","I don't know how many people would use vagrant to begin with, so adding it to the main repository is not something I would consider at this point, especially with the VM image included. I would add it as a submodule that people who need it can easily grab once the VM image is removed from it. Otherwise I will not merge this.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,556,2019-02-09T17:07:55Z,2019-02-19T15:16:46Z,2019-02-19T15:16:46Z,CLOSED,False,39240,0,13,https://github.com/Wenzel,add Vagrant dev environment,1,[],https://github.com/tklengyel/drakvuf/pull/556,https://github.com/Wenzel,8,https://github.com/tklengyel/drakvuf/pull/556#issuecomment-462784595,"This PR adds a Vagrant development environment.
It's not complete yet, but it already installs

Xen
libvmi
a Win7 VM with a rekall profile
a Xen VM config file

To be continued","I would add it as a submodule that people who need it can easily grab once the VM image is removed from it. Otherwise I will not merge this.

👍
I just found a workaround:
Running an Ansible local action, and build the image on the host, which has a high chance of running KVM, and then uploading the qcow.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,557,2019-02-10T00:39:27Z,2019-09-04T12:59:39Z,2019-09-04T12:59:39Z,CLOSED,False,135,15,2,https://github.com/mdolmen,[syscall] Get the return value of a syscall,2,[],https://github.com/tklengyel/drakvuf/pull/557,https://github.com/mdolmen,1,https://github.com/tklengyel/drakvuf/pull/557,"Fix issue #442


When entering a syscall trap, add a new one to its return address


Create another callback for the return address


Print args and return value at the same time in that new callback","Fix issue #442


When entering a syscall trap, add a new one to its return address


Create another callback for the return address


Print args and return value at the same time in that new callback",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,557,2019-02-10T00:39:27Z,2019-09-04T12:59:39Z,2019-09-04T12:59:39Z,CLOSED,False,135,15,2,https://github.com/mdolmen,[syscall] Get the return value of a syscall,2,[],https://github.com/tklengyel/drakvuf/pull/557,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/557#issuecomment-462092952,"Fix issue #442


When entering a syscall trap, add a new one to its return address


Create another callback for the return address


Print args and return value at the same time in that new callback",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,557,2019-02-10T00:39:27Z,2019-09-04T12:59:39Z,2019-09-04T12:59:39Z,CLOSED,False,135,15,2,https://github.com/mdolmen,[syscall] Get the return value of a syscall,2,[],https://github.com/tklengyel/drakvuf/pull/557,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/557#issuecomment-462093421,"Fix issue #442


When entering a syscall trap, add a new one to its return address


Create another callback for the return address


Print args and return value at the same time in that new callback",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,557,2019-02-10T00:39:27Z,2019-09-04T12:59:39Z,2019-09-04T12:59:39Z,CLOSED,False,135,15,2,https://github.com/mdolmen,[syscall] Get the return value of a syscall,2,[],https://github.com/tklengyel/drakvuf/pull/557,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/557#issuecomment-487601503,"Fix issue #442


When entering a syscall trap, add a new one to its return address


Create another callback for the return address


Print args and return value at the same time in that new callback","@mdolmen Valgrind reports memory leaks

/ssd-storage/jenkins/DRAKVUF-build/src/plugins/syscalls/syscalls.cpp:649
 649     wrapper->args = (unsigned char*)g_malloc(sizeof(char)*size);


/ssd-storage/jenkins/DRAKVUF-build/src/plugins/syscalls/syscalls.cpp:489
 489         drakvuf_trap_t* trap = (drakvuf_trap_t*)g_malloc0(sizeof(drakvuf_trap_t));",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,557,2019-02-10T00:39:27Z,2019-09-04T12:59:39Z,2019-09-04T12:59:39Z,CLOSED,False,135,15,2,https://github.com/mdolmen,[syscall] Get the return value of a syscall,2,[],https://github.com/tklengyel/drakvuf/pull/557,https://github.com/mdolmen,5,https://github.com/tklengyel/drakvuf/pull/557#issuecomment-488059000,"Fix issue #442


When entering a syscall trap, add a new one to its return address


Create another callback for the return address


Print args and return value at the same time in that new callback",How do you use valgrind with xen support? I use the 3.14 version but I got warnings similar to this : __HYPERVISOR_domctl version 0x10 not supported and then drakvuf_init fails. Is there a specific option to use?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,557,2019-02-10T00:39:27Z,2019-09-04T12:59:39Z,2019-09-04T12:59:39Z,CLOSED,False,135,15,2,https://github.com/mdolmen,[syscall] Get the return value of a syscall,2,[],https://github.com/tklengyel/drakvuf/pull/557,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/557#issuecomment-488079199,"Fix issue #442


When entering a syscall trap, add a new one to its return address


Create another callback for the return address


Print args and return value at the same time in that new callback",I have a patched up Valgrind at https://github.com/tklengyel/valgrind that supports Xen 4.12 and the hypercalls DRAKVUF uses. I haven't yet got around to upstream the patches.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,557,2019-02-10T00:39:27Z,2019-09-04T12:59:39Z,2019-09-04T12:59:39Z,CLOSED,False,135,15,2,https://github.com/mdolmen,[syscall] Get the return value of a syscall,2,[],https://github.com/tklengyel/drakvuf/pull/557,https://github.com/mdolmen,7,https://github.com/tklengyel/drakvuf/pull/557#issuecomment-488085490,"Fix issue #442


When entering a syscall trap, add a new one to its return address


Create another callback for the return address


Print args and return value at the same time in that new callback",Ok nice! Thanks.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,557,2019-02-10T00:39:27Z,2019-09-04T12:59:39Z,2019-09-04T12:59:39Z,CLOSED,False,135,15,2,https://github.com/mdolmen,[syscall] Get the return value of a syscall,2,[],https://github.com/tklengyel/drakvuf/pull/557,https://github.com/mdolmen,8,https://github.com/tklengyel/drakvuf/pull/557#issuecomment-490230505,"Fix issue #442


When entering a syscall trap, add a new one to its return address


Create another callback for the return address


Print args and return value at the same time in that new callback",Still memory leaks?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,557,2019-02-10T00:39:27Z,2019-09-04T12:59:39Z,2019-09-04T12:59:39Z,CLOSED,False,135,15,2,https://github.com/mdolmen,[syscall] Get the return value of a syscall,2,[],https://github.com/tklengyel/drakvuf/pull/557,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/557#issuecomment-490246160,"Fix issue #442


When entering a syscall trap, add a new one to its return address


Create another callback for the return address


Print args and return value at the same time in that new callback",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,557,2019-02-10T00:39:27Z,2019-09-04T12:59:39Z,2019-09-04T12:59:39Z,CLOSED,False,135,15,2,https://github.com/mdolmen,[syscall] Get the return value of a syscall,2,[],https://github.com/tklengyel/drakvuf/pull/557,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/557#issuecomment-490248394,"Fix issue #442


When entering a syscall trap, add a new one to its return address


Create another callback for the return address


Print args and return value at the same time in that new callback",@mdolmen This time DRAKVUF actually crashes with a Segmentation fault.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,557,2019-02-10T00:39:27Z,2019-09-04T12:59:39Z,2019-09-04T12:59:39Z,CLOSED,False,135,15,2,https://github.com/mdolmen,[syscall] Get the return value of a syscall,2,[],https://github.com/tklengyel/drakvuf/pull/557,https://github.com/mdolmen,11,https://github.com/tklengyel/drakvuf/pull/557#issuecomment-493195198,"Fix issue #442


When entering a syscall trap, add a new one to its return address


Create another callback for the return address


Print args and return value at the same time in that new callback","The segfault happens in malloc() or in a function called by malloc() and only after lots of syscalls have been intercepted (if I filter only NtOpenFile() for example, there is no problem). It seems related to a stack overflow when the call stack is too big. I am not sure of this though, I will continue to investigate.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,557,2019-02-10T00:39:27Z,2019-09-04T12:59:39Z,2019-09-04T12:59:39Z,CLOSED,False,135,15,2,https://github.com/mdolmen,[syscall] Get the return value of a syscall,2,[],https://github.com/tklengyel/drakvuf/pull/557,https://github.com/tklengyel,12,https://github.com/tklengyel/drakvuf/pull/557#issuecomment-527889221,"Fix issue #442


When entering a syscall trap, add a new one to its return address


Create another callback for the return address


Print args and return value at the same time in that new callback","@mdolmen I'm closing this for now, feel free to reopen when you have a chance to come back to it",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,558,2019-02-10T16:56:55Z,2019-02-11T02:29:59Z,2019-02-11T02:30:01Z,MERGED,True,205,155,27,https://github.com/tklengyel,Add more compiler checks to libdrakvuf,3,[],https://github.com/tklengyel/drakvuf/pull/558,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/558,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,558,2019-02-10T16:56:55Z,2019-02-11T02:29:59Z,2019-02-11T02:30:01Z,MERGED,True,205,155,27,https://github.com/tklengyel,Add more compiler checks to libdrakvuf,3,[],https://github.com/tklengyel/drakvuf/pull/558,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/558#issuecomment-462155444,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,559,2019-02-14T16:19:16Z,2019-02-22T13:16:40Z,2019-03-25T15:32:25Z,MERGED,True,517,31,9,https://github.com/skvl,Add plugin clipboardmon,1,[],https://github.com/tklengyel/drakvuf/pull/559,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/559,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,559,2019-02-14T16:19:16Z,2019-02-22T13:16:40Z,2019-03-25T15:32:25Z,MERGED,True,517,31,9,https://github.com/skvl,Add plugin clipboardmon,1,[],https://github.com/tklengyel/drakvuf/pull/559,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/559#issuecomment-463690252,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,559,2019-02-14T16:19:16Z,2019-02-22T13:16:40Z,2019-03-25T15:32:25Z,MERGED,True,517,31,9,https://github.com/skvl,Add plugin clipboardmon,1,[],https://github.com/tklengyel/drakvuf/pull/559,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/559#issuecomment-463856708,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,559,2019-02-14T16:19:16Z,2019-02-22T13:16:40Z,2019-03-25T15:32:25Z,MERGED,True,517,31,9,https://github.com/skvl,Add plugin clipboardmon,1,[],https://github.com/tklengyel/drakvuf/pull/559,https://github.com/skvl,4,https://github.com/tklengyel/drakvuf/pull/559#issuecomment-464144758,,@tklengyel is something wrong with this plugin?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,559,2019-02-14T16:19:16Z,2019-02-22T13:16:40Z,2019-03-25T15:32:25Z,MERGED,True,517,31,9,https://github.com/skvl,Add plugin clipboardmon,1,[],https://github.com/tklengyel/drakvuf/pull/559,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/559#issuecomment-464147872,,@Sklv I'm traveling at the moment so didn't have a chance to take a closer look at it yet.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,559,2019-02-14T16:19:16Z,2019-02-22T13:16:40Z,2019-03-25T15:32:25Z,MERGED,True,517,31,9,https://github.com/skvl,Add plugin clipboardmon,1,[],https://github.com/tklengyel/drakvuf/pull/559,https://github.com/skvl,6,https://github.com/tklengyel/drakvuf/pull/559#issuecomment-464154288,,OK. Good luck.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,559,2019-02-14T16:19:16Z,2019-02-22T13:16:40Z,2019-03-25T15:32:25Z,MERGED,True,517,31,9,https://github.com/skvl,Add plugin clipboardmon,1,[],https://github.com/tklengyel/drakvuf/pull/559,https://github.com/skvl,7,https://github.com/tklengyel/drakvuf/pull/559#issuecomment-466024330,,"@tklengyel I think something is wrong with Travis-CI:

The command ""git submodule update --init libvmi"" failed and exited with 1 during .",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,559,2019-02-14T16:19:16Z,2019-02-22T13:16:40Z,2019-03-25T15:32:25Z,MERGED,True,517,31,9,https://github.com/skvl,Add plugin clipboardmon,1,[],https://github.com/tklengyel/drakvuf/pull/559,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/559#issuecomment-466024773,,"@skvl Yes I saw, fix is on its way.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,559,2019-02-14T16:19:16Z,2019-02-22T13:16:40Z,2019-03-25T15:32:25Z,MERGED,True,517,31,9,https://github.com/skvl,Add plugin clipboardmon,1,[],https://github.com/tklengyel/drakvuf/pull/559,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/559#issuecomment-466060656,,Could you please rebase this on the latest master?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,559,2019-02-14T16:19:16Z,2019-02-22T13:16:40Z,2019-03-25T15:32:25Z,MERGED,True,517,31,9,https://github.com/skvl,Add plugin clipboardmon,1,[],https://github.com/tklengyel/drakvuf/pull/559,https://github.com/skvl,10,https://github.com/tklengyel/drakvuf/pull/559#issuecomment-466343717,,Done!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,560,2019-02-14T18:54:45Z,2019-03-01T16:13:25Z,2019-03-25T15:32:26Z,MERGED,True,502,17,8,https://github.com/skvl,Windowmon,2,[],https://github.com/tklengyel/drakvuf/pull/560,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/560,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,560,2019-02-14T18:54:45Z,2019-03-01T16:13:25Z,2019-03-25T15:32:26Z,MERGED,True,502,17,8,https://github.com/skvl,Windowmon,2,[],https://github.com/tklengyel/drakvuf/pull/560,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/560#issuecomment-463747432,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,560,2019-02-14T18:54:45Z,2019-03-01T16:13:25Z,2019-03-25T15:32:26Z,MERGED,True,502,17,8,https://github.com/skvl,Windowmon,2,[],https://github.com/tklengyel/drakvuf/pull/560,https://github.com/skvl,3,https://github.com/tklengyel/drakvuf/pull/560#issuecomment-464144792,,@tklengyel is something wrong with this plugin?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,560,2019-02-14T18:54:45Z,2019-03-01T16:13:25Z,2019-03-25T15:32:26Z,MERGED,True,502,17,8,https://github.com/skvl,Windowmon,2,[],https://github.com/tklengyel/drakvuf/pull/560,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/560#issuecomment-464321052,,Looks like you included your other new plugin in this PR too,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,560,2019-02-14T18:54:45Z,2019-03-01T16:13:25Z,2019-03-25T15:32:26Z,MERGED,True,502,17,8,https://github.com/skvl,Windowmon,2,[],https://github.com/tklengyel/drakvuf/pull/560,https://github.com/skvl,5,https://github.com/tklengyel/drakvuf/pull/560#issuecomment-464698694,,Yes. I have done dome work each time based on previous. I will re-base it each time or we could combine them into single. As you wish.,True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,560,2019-02-14T18:54:45Z,2019-03-01T16:13:25Z,2019-03-25T15:32:26Z,MERGED,True,502,17,8,https://github.com/skvl,Windowmon,2,[],https://github.com/tklengyel/drakvuf/pull/560,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/560#issuecomment-466258118,,I'll just merge this after clipboardmon is merged.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,560,2019-02-14T18:54:45Z,2019-03-01T16:13:25Z,2019-03-25T15:32:26Z,MERGED,True,502,17,8,https://github.com/skvl,Windowmon,2,[],https://github.com/tklengyel/drakvuf/pull/560,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/560#issuecomment-466258151,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,560,2019-02-14T18:54:45Z,2019-03-01T16:13:25Z,2019-03-25T15:32:26Z,MERGED,True,502,17,8,https://github.com/skvl,Windowmon,2,[],https://github.com/tklengyel/drakvuf/pull/560,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/560#issuecomment-466393053,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,560,2019-02-14T18:54:45Z,2019-03-01T16:13:25Z,2019-03-25T15:32:26Z,MERGED,True,502,17,8,https://github.com/skvl,Windowmon,2,[],https://github.com/tklengyel/drakvuf/pull/560,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/560#issuecomment-466733108,,@skvl This will need to be rebased to resolve the conflicts,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,560,2019-02-14T18:54:45Z,2019-03-01T16:13:25Z,2019-03-25T15:32:26Z,MERGED,True,502,17,8,https://github.com/skvl,Windowmon,2,[],https://github.com/tklengyel/drakvuf/pull/560,https://github.com/skvl,10,https://github.com/tklengyel/drakvuf/pull/560#issuecomment-466962872,,Done!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,560,2019-02-14T18:54:45Z,2019-03-01T16:13:25Z,2019-03-25T15:32:26Z,MERGED,True,502,17,8,https://github.com/skvl,Windowmon,2,[],https://github.com/tklengyel/drakvuf/pull/560,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/560#issuecomment-467080929,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,561,2019-02-15T18:37:35Z,2019-04-22T15:36:08Z,2019-04-24T12:47:46Z,MERGED,True,74,23,3,https://github.com/skvl,Fix print injection status,2,[],https://github.com/tklengyel/drakvuf/pull/561,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/561,"Fix possible null pointer dereference
Add printing of crashed processes while injection","Fix possible null pointer dereference
Add printing of crashed processes while injection",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,561,2019-02-15T18:37:35Z,2019-04-22T15:36:08Z,2019-04-24T12:47:46Z,MERGED,True,74,23,3,https://github.com/skvl,Fix print injection status,2,[],https://github.com/tklengyel/drakvuf/pull/561,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/561#issuecomment-464154178,"Fix possible null pointer dereference
Add printing of crashed processes while injection",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,561,2019-02-15T18:37:35Z,2019-04-22T15:36:08Z,2019-04-24T12:47:46Z,MERGED,True,74,23,3,https://github.com/skvl,Fix print injection status,2,[],https://github.com/tklengyel/drakvuf/pull/561,https://github.com/skvl,3,https://github.com/tklengyel/drakvuf/pull/561#issuecomment-464163283,"Fix possible null pointer dereference
Add printing of crashed processes while injection",@tklengyel I think that error from Travis is not related to my code: https://travis-ci.org/tklengyel/drakvuf/jobs/493898744#L168,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,561,2019-02-15T18:37:35Z,2019-04-22T15:36:08Z,2019-04-24T12:47:46Z,MERGED,True,74,23,3,https://github.com/skvl,Fix print injection status,2,[],https://github.com/tklengyel/drakvuf/pull/561,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/561#issuecomment-464962489,"Fix possible null pointer dereference
Add printing of crashed processes while injection",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,561,2019-02-15T18:37:35Z,2019-04-22T15:36:08Z,2019-04-24T12:47:46Z,MERGED,True,74,23,3,https://github.com/skvl,Fix print injection status,2,[],https://github.com/tklengyel/drakvuf/pull/561,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/561#issuecomment-465155200,"Fix possible null pointer dereference
Add printing of crashed processes while injection",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,561,2019-02-15T18:37:35Z,2019-04-22T15:36:08Z,2019-04-24T12:47:46Z,MERGED,True,74,23,3,https://github.com/skvl,Fix print injection status,2,[],https://github.com/tklengyel/drakvuf/pull/561,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/561#issuecomment-465171336,"Fix possible null pointer dereference
Add printing of crashed processes while injection",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,561,2019-02-15T18:37:35Z,2019-04-22T15:36:08Z,2019-04-24T12:47:46Z,MERGED,True,74,23,3,https://github.com/skvl,Fix print injection status,2,[],https://github.com/tklengyel/drakvuf/pull/561,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/561#issuecomment-466257913,"Fix possible null pointer dereference
Add printing of crashed processes while injection",@skvl please rebase this PR so that it doesn't include unrelated commits,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,561,2019-02-15T18:37:35Z,2019-04-22T15:36:08Z,2019-04-24T12:47:46Z,MERGED,True,74,23,3,https://github.com/skvl,Fix print injection status,2,[],https://github.com/tklengyel/drakvuf/pull/561,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/561#issuecomment-466733079,"Fix possible null pointer dereference
Add printing of crashed processes while injection",@skvl I think this will need to be rebased to resolve the conflicts,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,561,2019-02-15T18:37:35Z,2019-04-22T15:36:08Z,2019-04-24T12:47:46Z,MERGED,True,74,23,3,https://github.com/skvl,Fix print injection status,2,[],https://github.com/tklengyel/drakvuf/pull/561,https://github.com/skvl,9,https://github.com/tklengyel/drakvuf/pull/561#issuecomment-468724098,"Fix possible null pointer dereference
Add printing of crashed processes while injection",@tklengyel Done!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,561,2019-02-15T18:37:35Z,2019-04-22T15:36:08Z,2019-04-24T12:47:46Z,MERGED,True,74,23,3,https://github.com/skvl,Fix print injection status,2,[],https://github.com/tklengyel/drakvuf/pull/561,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/561#issuecomment-468736611,"Fix possible null pointer dereference
Add printing of crashed processes while injection",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,561,2019-02-15T18:37:35Z,2019-04-22T15:36:08Z,2019-04-24T12:47:46Z,MERGED,True,74,23,3,https://github.com/skvl,Fix print injection status,2,[],https://github.com/tklengyel/drakvuf/pull/561,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/561#issuecomment-468770078,"Fix possible null pointer dereference
Add printing of crashed processes while injection",@skvl This PR is introducing a regression when injecting into a Windows 7 32-bit system with drakvuf itself (not through the standalone injector),True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,561,2019-02-15T18:37:35Z,2019-04-22T15:36:08Z,2019-04-24T12:47:46Z,MERGED,True,74,23,3,https://github.com/skvl,Fix print injection status,2,[],https://github.com/tklengyel/drakvuf/pull/561,https://github.com/skvl,12,https://github.com/tklengyel/drakvuf/pull/561#issuecomment-468891569,"Fix possible null pointer dereference
Add printing of crashed processes while injection",@tklengyel could you provide some details? I have found an error in WoW64 support last evening. May be the error was due to this?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,561,2019-02-15T18:37:35Z,2019-04-22T15:36:08Z,2019-04-24T12:47:46Z,MERGED,True,74,23,3,https://github.com/skvl,Fix print injection status,2,[],https://github.com/tklengyel/drakvuf/pull/561,https://github.com/tklengyel,13,https://github.com/tklengyel/drakvuf/pull/561#issuecomment-468891706,"Fix possible null pointer dereference
Add printing of crashed processes while injection",I just see that the test consistently fails with injecting through drakvuf. I don't know which part of the PR is causing it. I suggest setting up a 32bit Win7 locally and testing that way.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,561,2019-02-15T18:37:35Z,2019-04-22T15:36:08Z,2019-04-24T12:47:46Z,MERGED,True,74,23,3,https://github.com/skvl,Fix print injection status,2,[],https://github.com/tklengyel/drakvuf/pull/561,https://github.com/skvl,14,https://github.com/tklengyel/drakvuf/pull/561#issuecomment-468892469,"Fix possible null pointer dereference
Add printing of crashed processes while injection",I will retest it.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,561,2019-02-15T18:37:35Z,2019-04-22T15:36:08Z,2019-04-24T12:47:46Z,MERGED,True,74,23,3,https://github.com/skvl,Fix print injection status,2,[],https://github.com/tklengyel/drakvuf/pull/561,https://github.com/skvl,15,https://github.com/tklengyel/drakvuf/pull/561#issuecomment-468894930,"Fix possible null pointer dereference
Add printing of crashed processes while injection","@tklengyel it works for me:
sudo drakvuf -d TRAP -r ${DIR}/rekall-kernel.json -T ${DIR}/rekall-tcpip.json -i 1436 -e 'calc.exe'
...
[INJECT] TIME:1551510255.903344 STATUS:SUCCESS PID:1436 FILE:""calc.exe"" ARGUMENTS:"""" INJECTED_PID:3468 INJECTED_TID:3472",True,{'CONFUSED': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,561,2019-02-15T18:37:35Z,2019-04-22T15:36:08Z,2019-04-24T12:47:46Z,MERGED,True,74,23,3,https://github.com/skvl,Fix print injection status,2,[],https://github.com/tklengyel/drakvuf/pull/561,https://github.com/tklengyel,16,https://github.com/tklengyel/drakvuf/pull/561#issuecomment-468897402,"Fix possible null pointer dereference
Add printing of crashed processes while injection",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,561,2019-02-15T18:37:35Z,2019-04-22T15:36:08Z,2019-04-24T12:47:46Z,MERGED,True,74,23,3,https://github.com/skvl,Fix print injection status,2,[],https://github.com/tklengyel/drakvuf/pull/561,https://github.com/tklengyel,17,https://github.com/tklengyel/drakvuf/pull/561#issuecomment-468926811,"Fix possible null pointer dereference
Add printing of crashed processes while injection",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,561,2019-02-15T18:37:35Z,2019-04-22T15:36:08Z,2019-04-24T12:47:46Z,MERGED,True,74,23,3,https://github.com/skvl,Fix print injection status,2,[],https://github.com/tklengyel/drakvuf/pull/561,https://github.com/skvl,18,https://github.com/tklengyel/drakvuf/pull/561#issuecomment-469224980,"Fix possible null pointer dereference
Add printing of crashed processes while injection","@tklengyel I think I have found the real reason of fails.
Both clipboardmon and windowmon hooks win32k.sys. But parts of it could not be loaded into virtual memory. So one should make this functions to be loaded before running plugins.
I don't know why this did not rise earlier.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,561,2019-02-15T18:37:35Z,2019-04-22T15:36:08Z,2019-04-24T12:47:46Z,MERGED,True,74,23,3,https://github.com/skvl,Fix print injection status,2,[],https://github.com/tklengyel/drakvuf/pull/561,https://github.com/tklengyel,19,https://github.com/tklengyel/drakvuf/pull/561#issuecomment-469240803,"Fix possible null pointer dereference
Add printing of crashed processes while injection","For 32bit Windows I don't have rekall profile for win32k.sys, so those plugins shouldn't have started to begin with.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,561,2019-02-15T18:37:35Z,2019-04-22T15:36:08Z,2019-04-24T12:47:46Z,MERGED,True,74,23,3,https://github.com/skvl,Fix print injection status,2,[],https://github.com/tklengyel/drakvuf/pull/561,https://github.com/tklengyel,20,https://github.com/tklengyel/drakvuf/pull/561#issuecomment-469240978,"Fix possible null pointer dereference
Add printing of crashed processes while injection",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,561,2019-02-15T18:37:35Z,2019-04-22T15:36:08Z,2019-04-24T12:47:46Z,MERGED,True,74,23,3,https://github.com/skvl,Fix print injection status,2,[],https://github.com/tklengyel/drakvuf/pull/561,https://github.com/tklengyel,21,https://github.com/tklengyel/drakvuf/pull/561#issuecomment-469244054,"Fix possible null pointer dereference
Add printing of crashed processes while injection",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,561,2019-02-15T18:37:35Z,2019-04-22T15:36:08Z,2019-04-24T12:47:46Z,MERGED,True,74,23,3,https://github.com/skvl,Fix print injection status,2,[],https://github.com/tklengyel/drakvuf/pull/561,https://github.com/tklengyel,22,https://github.com/tklengyel/drakvuf/pull/561#issuecomment-469258600,"Fix possible null pointer dereference
Add printing of crashed processes while injection","This was the output from a failed run from before. It didn't get a successful injection
Running DRAKVUF #1 for 30 seconds. Opts:  -i 2028 -e calc.exe -m createproc
DRAKVUF is running with PID 10727
CPU utilization average: 1
Syscalls: 0
1551538407.559174 DRAKVUF v0.6-f9d4690
1551538407.559246 Starting DRAKVUF initialization
1551538407.598885 drakvuf_init: Rekall WoW64 profile not used
1551538407.599149 drakvuf_event_fd_add fd=18
1551538407.599163 size of list=1
1551538407.599168 regenerating event_fds and fd_info_lookup...
1551538407.599173 new event_fd i=0 for fd=18
1551538407.599178 new fd_info_lookup i=0 for fd=18
1551538407.599183 drakvuf_init: adding event_fd done
1551538407.599297 init_vmi on domID 97 -> windows7-sp1-x86-jenkins
1551538407.599863 init_vmi: initializing vmi done
1551538407.599923 init_vmi: initializing vmi paging done
1551538407.633891 init_vmi: initializing vmi OS done
1551538407.633961 Max GPFN: 0xff000
1551538407.633977 Max mem set? 0
1551538407.633995 Physmap populated? 0
1551538407.634032 Altp2m enabled? 0
1551538407.634041 Altp2m view X created? 0 with ID 1
1551538407.634049 Altp2m view R created? 0 with ID 2
1551538407.634067 Switched Altp2m view to X? 0
1551538407.634097 init_vmi finished
1551538407.634112 Windows kernel base address is 0x8261f000
1551538407.634124 Rekall profile: '_EPROCESS' has no 'Wow64Process' member
1551538407.634129 Failed to find offset for _EPROCESS:Wow64Process
1551538407.634134 Rekall profile: '_EPROCESS' has no 'WoW64Process' member
1551538407.634139 Failed to find offset for _EPROCESS:WoW64Process
1551538407.634168 Rekall profile: no '_EWOW64PROCESS' found
1551538407.634173 Failed to find offset for _EWOW64PROCESS:Peb
1551538407.634178 Failed to find offsets for array of structure names and subsymbols.
1551538407.634183 libdrakvuf initialized
1551538407.634189 DRAKVUF initializated
1551538407.634199 Starting injection with PID 2028(0) for calc.exe
Target PID 2028 to start 'calc.exe'
1551538407.634674 Rekall profile: '_KTRAP_FRAME' has no 'Rip' member
1551538407.634682 Failed to find offset for _KTRAP_FRAME:Rip
Failed to find one of offsets.
1551538407.634748 Found PEB @ 0x7ffd7000. LDR @ 0x77837880. INLOADORDER @ 0x4017e0.
1551538407.634788 Found module taskmgr.exe
1551538407.634818 Found module ntdll.dll
1551538407.634827 Found module kernel32.dll
1551538407.634935 	ResumeThread @ 0x75f70f1c
1551538407.634943 Found PEB @ 0x7ffd7000. LDR @ 0x77837880. INLOADORDER @ 0x4017e0.
1551538407.634950 Found module taskmgr.exe
1551538407.634956 Found module ntdll.dll
1551538407.634962 Found module kernel32.dll
1551538407.635009 	CreateProcessW @ 0x75f3204d
Starting injection loop
1551538407.635028 Started DRAKVUF loop
1551538407.635241 CR3 cb on vCPU 1: 0x3e9de0a0
CR3 changed to 0x3e9de0a0. PID: 372 PPID: 364
1551538407.635335 CR3 cb on vCPU 0: 0x3e9de320
CR3 changed to 0x3e9de320. PID: 872 PPID: 312
1551538407.635540 CR3 cb on vCPU 0: 0x185000
CR3 changed to 0x185000. PID: 0 PPID: 0
1551538407.635672 CR3 cb on vCPU 1: 0x185000
CR3 changed to 0x185000. PID: 0 PPID: 0
1551538407.635699 CR3 cb on vCPU 0: 0x3e9de320
CR3 changed to 0x3e9de320. PID: 872 PPID: 312
1551538407.635831 CR3 cb on vCPU 0: 0x185000
CR3 changed to 0x185000. PID: 0 PPID: 0
1551538407.693202 CR3 cb on vCPU 0: 0x3e9de320
CR3 changed to 0x3e9de320. PID: 872 PPID: 312
1551538407.693337 CR3 cb on vCPU 1: 0x3e9de0a0
CR3 changed to 0x3e9de0a0. PID: 372 PPID: 364
1551538407.693687 CR3 cb on vCPU 0: 0x185000
CR3 changed to 0x185000. PID: 0 PPID: 0
1551538407.693779 CR3 cb on vCPU 1: 0x185000
CR3 changed to 0x185000. PID: 0 PPID: 0
1551538407.694074 CR3 cb on vCPU 0: 0x3e9de320
CR3 changed to 0x3e9de320. PID: 872 PPID: 312
1551538407.694368 CR3 cb on vCPU 0: 0x185000
CR3 changed to 0x185000. PID: 0 PPID: 0
1551538407.708957 CR3 cb on vCPU 0: 0x3e9de0a0
CR3 changed to 0x3e9de0a0. PID: 372 PPID: 364
1551538407.709368 CR3 cb on vCPU 0: 0x185000
CR3 changed to 0x185000. PID: 0 PPID: 0
1551538407.709448 CR3 cb on vCPU 1: 0x3e9de300
CR3 changed to 0x3e9de300. PID: 1840 PPID: 1768
1551538407.711284 CR3 cb on vCPU 1: 0x185000
CR3 changed to 0x185000. PID: 0 PPID: 0
1551538407.711394 CR3 cb on vCPU 0: 0x3e9de300
CR3 changed to 0x3e9de300. PID: 1840 PPID: 1768
1551538407.715755 CR3 cb on vCPU 1: 0x3e9de300
CR3 changed to 0x3e9de300. PID: 1840 PPID: 1768
1551538407.716315 CR3 cb on vCPU 1: 0x185000
CR3 changed to 0x185000. PID: 0 PPID: 0
1551538407.717741 CR3 cb on vCPU 0: 0x185000
CR3 changed to 0x185000. PID: 0 PPID: 0
1551538407.755649 CR3 cb on vCPU 1: 0x3e9de300
CR3 changed to 0x3e9de300. PID: 1840 PPID: 1768
1551538407.755943 CR3 cb on vCPU 0: 0x3e9de320
CR3 changed to 0x3e9de320. PID: 872 PPID: 312
1551538407.756243 CR3 cb on vCPU 0: 0x3e9de0a0
CR3 changed to 0x3e9de0a0. PID: 372 PPID: 364
1551538407.756654 CR3 cb on vCPU 1: 0x185000
CR3 changed to 0x185000. PID: 0 PPID: 0
1551538407.756774 CR3 cb on vCPU 0: 0x185000
CR3 changed to 0x185000. PID: 0 PPID: 0
1551538407.802454 CR3 cb on vCPU 1: 0x3e9de1a0
CR3 changed to 0x3e9de1a0. PID: 736 PPID: 424
1551538407.803222 CR3 cb on vCPU 1: 0x185000
CR3 changed to 0x185000. PID: 0 PPID: 0
1551538407.818089 CR3 cb on vCPU 1: 0x3e9de0a0
CR3 changed to 0x3e9de0a0. PID: 372 PPID: 364
1551538407.818258 CR3 cb on vCPU 0: 0x3e9de320
CR3 changed to 0x3e9de320. PID: 872 PPID: 312
1551538407.818512 CR3 cb on vCPU 0: 0x185000
CR3 changed to 0x185000. PID: 0 PPID: 0
1551538407.818586 CR3 cb on vCPU 1: 0x185000
CR3 changed to 0x185000. PID: 0 PPID: 0
1551538407.818829 CR3 cb on vCPU 0: 0x3e9de320
CR3 changed to 0x3e9de320. PID: 872 PPID: 312
1551538407.819092 CR3 cb on vCPU 0: 0x185000
CR3 changed to 0x185000. PID: 0 PPID: 0
1551538407.880374 CR3 cb on vCPU 0: 0x3e9de320
CR3 changed to 0x3e9de320. PID: 872 PPID: 312
1551538407.880502 CR3 cb on vCPU 1: 0x3e9de0a0
CR3 changed to 0x3e9de0a0. PID: 372 PPID: 364
1551538407.880832 CR3 cb on vCPU 1: 0x185000
CR3 changed to 0x185000. PID: 0 PPID: 0
1551538407.880914 CR3 cb on vCPU 0: 0x185000
CR3 changed to 0x185000. PID: 0 PPID: 0
1551538407.911726 CR3 cb on vCPU 0: 0x3e9de0a0
CR3 changed to 0x3e9de0a0. PID: 372 PPID: 364
1551538407.912153 CR3 cb on vCPU 0: 0x3e9de300
CR3 changed to 0x3e9de300. PID: 1840 PPID: 1768
1551538407.912248 CR3 cb on vCPU 1: 0x3e9de080
CR3 changed to 0x3e9de080. PID: 2028 PPID: 1840
Thread @ 0x84e73d48. ThreadID: 2032
1551538407.974519 Pre mem cb with vCPU 1 @ 0x26ed50b4 in view 128: --x
1551538407.974576 Switching to altp2m view 0 on vCPU 1
1551538407.974583 CR3 cb on vCPU 0: 0x3e9de0a0
1551538407.974648 Post mem cb @ 0x26ed50b4 vCPU 1 altp2m 128
MemX at 0x82a342d8
1551538407.975072 Breakpoint VA 0x82a342d8 -> PA 0x2a342d8
1551538407.975087 Physmap populated? 0
1551538407.975124 Copied trapped page to new location
1551538407.975130 Activating remapped gfns in the altp2m views!
1551538407.975194 		Trap added @ PA 0x2a342d8 RPA 0xff0022d8 Page 10804 for entry. 
Stack setup finished and return trap added @ 0x82a342d8
1551538407.975211 Removed memtrap for GFN 0x21ecd in altp2m view 1
1551538407.975220 Removed memtrap for GFN 0x21dd1 in altp2m view 1
...
1551538407.988320 Removed memtrap for GFN 0x26d41 in altp2m view 1
1551538407.988360 CR3 cb on vCPU 0: 0x3e9de320
1551538407.988451 CR3 cb on vCPU 0: 0x3e9de300
1551538419.149160 CR3 cb on vCPU 0: 0x185000
1551538467.547643 DRAKVUF loop broke unexpectedly: [Errno: 4] Interrupted system call
1551538467.547861 DRAKVUF loop finished
Finished with injection. Ret: 0.
Process startup failed
1551538467.547982 close_vmi starting
1551538467.548139 Removed memtrap for GFN 0xff001 in altp2m view 1
1551538468.237854 close_vmi finished
inject,1551538467.547909,PrematureBreak",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,561,2019-02-15T18:37:35Z,2019-04-22T15:36:08Z,2019-04-24T12:47:46Z,MERGED,True,74,23,3,https://github.com/skvl,Fix print injection status,2,[],https://github.com/tklengyel/drakvuf/pull/561,https://github.com/skvl,23,https://github.com/tklengyel/drakvuf/pull/561#issuecomment-476233305,"Fix possible null pointer dereference
Add printing of crashed processes while injection","@tklengyel, UP",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,561,2019-02-15T18:37:35Z,2019-04-22T15:36:08Z,2019-04-24T12:47:46Z,MERGED,True,74,23,3,https://github.com/skvl,Fix print injection status,2,[],https://github.com/tklengyel/drakvuf/pull/561,https://github.com/tklengyel,24,https://github.com/tklengyel/drakvuf/pull/561#issuecomment-476243718,"Fix possible null pointer dereference
Add printing of crashed processes while injection",I'm still not convinced Disable clipboardmon and windowmon by default is needed,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,561,2019-02-15T18:37:35Z,2019-04-22T15:36:08Z,2019-04-24T12:47:46Z,MERGED,True,74,23,3,https://github.com/skvl,Fix print injection status,2,[],https://github.com/tklengyel/drakvuf/pull/561,https://github.com/skvl,25,https://github.com/tklengyel/drakvuf/pull/561#issuecomment-476245844,"Fix possible null pointer dereference
Add printing of crashed processes while injection",This is for users convenience. Because not everyone needs it but enabling this make user to perform extra-actions. If You don't like this I could remove it. Or I could make separate PR.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,561,2019-02-15T18:37:35Z,2019-04-22T15:36:08Z,2019-04-24T12:47:46Z,MERGED,True,74,23,3,https://github.com/skvl,Fix print injection status,2,[],https://github.com/tklengyel/drakvuf/pull/561,https://github.com/tklengyel,26,https://github.com/tklengyel/drakvuf/pull/561#issuecomment-476256835,"Fix possible null pointer dereference
Add printing of crashed processes while injection",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,561,2019-02-15T18:37:35Z,2019-04-22T15:36:08Z,2019-04-24T12:47:46Z,MERGED,True,74,23,3,https://github.com/skvl,Fix print injection status,2,[],https://github.com/tklengyel/drakvuf/pull/561,https://github.com/tklengyel,27,https://github.com/tklengyel/drakvuf/pull/561#issuecomment-476269316,"Fix possible null pointer dereference
Add printing of crashed processes while injection","Well, it is perplexing but with this PR the 32-bit injection is still definitely broken on my side. I can't pinpoint why that is. It's not related to the plugins being enabled/disabled as at this point plugins haven't run yet, this is the log I get:
1553529260.596856 DRAKVUF v0.6-ab1be5e
1553529260.596930 Starting DRAKVUF initialization
1553529260.637029 drakvuf_init: Rekall WoW64 profile not used
1553529260.637277 drakvuf_event_fd_add fd=18
1553529260.637293 size of list=1
1553529260.637298 regenerating event_fds and fd_info_lookup...
1553529260.637303 new event_fd i=0 for fd=18
1553529260.637307 new fd_info_lookup i=0 for fd=18
1553529260.637312 drakvuf_init: adding event_fd done
1553529260.637448 init_vmi on domID 84 -> windows7-sp1-x86-jenkins
1553529260.637982 init_vmi: initializing vmi done
1553529260.638042 init_vmi: initializing vmi paging done
1553529260.672249 init_vmi: initializing vmi OS done
1553529260.672320 Max GPFN: 0xff000
1553529260.672335 Max mem set? 0
1553529260.672354 Physmap populated? 0
1553529260.672393 Altp2m enabled? 0
1553529260.672402 Altp2m view X created? 0 with ID 1
1553529260.672409 Altp2m view R created? 0 with ID 2
1553529260.672427 Switched Altp2m view to X? 0
1553529260.672456 init_vmi finished
1553529260.672471 Windows kernel base address is 0x8261f000
1553529260.672483 Rekall profile: '_EPROCESS' has no 'Wow64Process' member
1553529260.672488 Failed to find offset for _EPROCESS:Wow64Process
1553529260.672493 Rekall profile: '_EPROCESS' has no 'WoW64Process' member
1553529260.672497 Failed to find offset for _EPROCESS:WoW64Process
1553529260.672526 Rekall profile: no '_EWOW64PROCESS' found
1553529260.672531 Failed to find offset for _EWOW64PROCESS:Peb
1553529260.672536 Failed to find offsets for array of structure names and subsymbols.
1553529260.672541 libdrakvuf initialized
1553529260.672546 DRAKVUF initializated
1553529260.672557 Starting injection with PID 2028(0) for calc.exe
Target PID 2028 to start 'calc.exe'
1553529260.673022 Rekall profile: '_KTRAP_FRAME' has no 'Rip' member
1553529260.673029 Failed to find offset for _KTRAP_FRAME:Rip
Failed to find one of offsets.
1553529260.673095 Found PEB @ 0x7ffd7000. LDR @ 0x77837880. INLOADORDER @ 0x4017e0.
1553529260.673135 Found module taskmgr.exe
1553529260.673165 Found module ntdll.dll
1553529260.673173 Found module kernel32.dll
1553529260.673282 	ResumeThread @ 0x75f70f1c
1553529260.673290 Found PEB @ 0x7ffd7000. LDR @ 0x77837880. INLOADORDER @ 0x4017e0.
1553529260.673297 Found module taskmgr.exe
1553529260.673303 Found module ntdll.dll
1553529260.673308 Found module kernel32.dll
1553529260.673356 	CreateProcessW @ 0x75f3204d
Starting injection loop
1553529260.673375 Started DRAKVUF loop
...
CR3 changed to 0x3e9de080. PID: 2028 PPID: 1840
Thread @ 0x84e73d48. ThreadID: 2032
1553529260.904559 Pre mem cb with vCPU 1 @ 0x26ed50b4 in view 128: --x
1553529260.904614 Switching to altp2m view 0 on vCPU 1
1553529260.904620 CR3 cb on vCPU 0: 0x3e9de0a0
1553529260.904697 Post mem cb @ 0x26ed50b4 vCPU 1 altp2m 128
MemX at 0x82a342d8
1553529260.905127 Breakpoint VA 0x82a342d8 -> PA 0x2a342d8
1553529260.905142 Physmap populated? 0
1553529260.905180 Copied trapped page to new location
1553529260.905186 Activating remapped gfns in the altp2m views!
1553529260.905252 		Trap added @ PA 0x2a342d8 RPA 0xff0022d8 Page 10804 for entry. 
Stack setup finished and return trap added @ 0x82a342d8
1553529260.905271 Removed memtrap for GFN 0x140cb in altp2m view 1
...
1553529260.918167 Removed memtrap for GFN 0x26ef5 in altp2m view 1
1553529260.918208 CR3 cb on vCPU 0: 0x3e9de320
1553529260.918333 CR3 cb on vCPU 0: 0x185000
1553529320.588320 DRAKVUF loop broke unexpectedly: [Errno: 4] Interrupted system call
1553529320.588434 DRAKVUF loop finished
Finished with injection. Ret: 0.
Process startup failed
1553529320.588515 close_vmi starting
1553529320.588655 Removed memtrap for GFN 0xff001 in altp2m view 1
1553529321.272118 close_vmi finished
inject,1553529320.588465,PrematureBreak
Build step 'Execute shell' marked build as failure
Finished: FAILURE",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,561,2019-02-15T18:37:35Z,2019-04-22T15:36:08Z,2019-04-24T12:47:46Z,MERGED,True,74,23,3,https://github.com/skvl,Fix print injection status,2,[],https://github.com/tklengyel/drakvuf/pull/561,https://github.com/skvl,28,https://github.com/tklengyel/drakvuf/pull/561#issuecomment-476288590,"Fix possible null pointer dereference
Add printing of crashed processes while injection","@tklengyel

It's not related to the plugins being enabled/disabled as at this point plugins haven't run yet

A have returned the commit with plugins disabled and if I understand right it works now.
The only thing that I don't understand is why this plugins works in master and not works in this branch. If You examine the branch the only thing changed is printing injection status.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,561,2019-02-15T18:37:35Z,2019-04-22T15:36:08Z,2019-04-24T12:47:46Z,MERGED,True,74,23,3,https://github.com/skvl,Fix print injection status,2,[],https://github.com/tklengyel/drakvuf/pull/561,https://github.com/tklengyel,29,https://github.com/tklengyel/drakvuf/pull/561#issuecomment-476306274,"Fix possible null pointer dereference
Add printing of crashed processes while injection",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,561,2019-02-15T18:37:35Z,2019-04-22T15:36:08Z,2019-04-24T12:47:46Z,MERGED,True,74,23,3,https://github.com/skvl,Fix print injection status,2,[],https://github.com/tklengyel/drakvuf/pull/561,https://github.com/tklengyel,30,https://github.com/tklengyel/drakvuf/pull/561#issuecomment-476309785,"Fix possible null pointer dereference
Add printing of crashed processes while injection",It seems to be passing now but you also have the plugins disabled by default in this PR,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,561,2019-02-15T18:37:35Z,2019-04-22T15:36:08Z,2019-04-24T12:47:46Z,MERGED,True,74,23,3,https://github.com/skvl,Fix print injection status,2,[],https://github.com/tklengyel/drakvuf/pull/561,https://github.com/skvl,31,https://github.com/tklengyel/drakvuf/pull/561#issuecomment-484871607,"Fix possible null pointer dereference
Add printing of crashed processes while injection","@tklengyel, it seems to work now.",True,{'HOORAY': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,561,2019-02-15T18:37:35Z,2019-04-22T15:36:08Z,2019-04-24T12:47:46Z,MERGED,True,74,23,3,https://github.com/skvl,Fix print injection status,2,[],https://github.com/tklengyel/drakvuf/pull/561,https://github.com/tklengyel,32,https://github.com/tklengyel/drakvuf/pull/561#issuecomment-484917480,"Fix possible null pointer dereference
Add printing of crashed processes while injection",@skvl Looks good but I think you included an extra commit that should be a separate PR (filetracer: Print ACLs).,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,561,2019-02-15T18:37:35Z,2019-04-22T15:36:08Z,2019-04-24T12:47:46Z,MERGED,True,74,23,3,https://github.com/skvl,Fix print injection status,2,[],https://github.com/tklengyel/drakvuf/pull/561,https://github.com/skvl,33,https://github.com/tklengyel/drakvuf/pull/561#issuecomment-484988264,"Fix possible null pointer dereference
Add printing of crashed processes while injection",This because I have rebased this branch onto that. I will rebase it to master as soon as You will accept those branch.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,561,2019-02-15T18:37:35Z,2019-04-22T15:36:08Z,2019-04-24T12:47:46Z,MERGED,True,74,23,3,https://github.com/skvl,Fix print injection status,2,[],https://github.com/tklengyel/drakvuf/pull/561,https://github.com/tklengyel,34,https://github.com/tklengyel/drakvuf/pull/561#issuecomment-484993992,"Fix possible null pointer dereference
Add printing of crashed processes while injection","@skvl No, please just remove the unnecessary commits from this branch. You can use git rebase -i HEAD~2 and just remove the last commit",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,561,2019-02-15T18:37:35Z,2019-04-22T15:36:08Z,2019-04-24T12:47:46Z,MERGED,True,74,23,3,https://github.com/skvl,Fix print injection status,2,[],https://github.com/tklengyel/drakvuf/pull/561,https://github.com/skvl,35,https://github.com/tklengyel/drakvuf/pull/561#issuecomment-485364782,"Fix possible null pointer dereference
Add printing of crashed processes while injection","@tklengyel, done!",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,562,2019-02-18T11:41:13Z,2019-02-19T13:41:20Z,2019-02-19T13:42:42Z,MERGED,True,2,2,1,https://github.com/aoshiken,Fix uninitialized variable on win_is_eprocess() and win_is_ethread(),1,[],https://github.com/tklengyel/drakvuf/pull/562,https://github.com/aoshiken,1,https://github.com/tklengyel/drakvuf/pull/562,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,562,2019-02-18T11:41:13Z,2019-02-19T13:41:20Z,2019-02-19T13:42:42Z,MERGED,True,2,2,1,https://github.com/aoshiken,Fix uninitialized variable on win_is_eprocess() and win_is_ethread(),1,[],https://github.com/tklengyel/drakvuf/pull/562,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/562#issuecomment-464700337,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,562,2019-02-18T11:41:13Z,2019-02-19T13:41:20Z,2019-02-19T13:42:42Z,MERGED,True,2,2,1,https://github.com/aoshiken,Fix uninitialized variable on win_is_eprocess() and win_is_ethread(),1,[],https://github.com/tklengyel/drakvuf/pull/562,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/562#issuecomment-464962368,,"So what is the error exactly you are fixing here? I don't think this is needed, the variables are not used in an uninitialized form - they get overwritten by vmi_read_8. So while initializing them doesn't change anything it's also pointless.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,562,2019-02-18T11:41:13Z,2019-02-19T13:41:20Z,2019-02-19T13:42:42Z,MERGED,True,2,2,1,https://github.com/aoshiken,Fix uninitialized variable on win_is_eprocess() and win_is_ethread(),1,[],https://github.com/tklengyel/drakvuf/pull/562,https://github.com/aoshiken,4,https://github.com/tklengyel/drakvuf/pull/562#issuecomment-465090501,,"Currently the variable dispatcher_type is of type enum so its size is 4 bytes but vmi_read_8() will end up inside vmi_read() changing just 1 byte via memcpy() leaving the other 3 bytes unchanged.
On the other hand we don't have guaranteed the initialization value of  dispatcher_type so, for instance, the following line in win_is_ethread():
    if ( dispatcher_type == DISPATCHER_THREAD_OBJECT )

...could be translated in runtime to something as...
   if ( 0x7f06 == 0x6 )

...instead of...
   if ( 0x6 == 0x6 )

That behaviour is compiler dependent, I think the following mini program will explain it better:
#include<stdio.h>

typedef enum dispatcher_object
{
    DISPATCHER_PROCESS_OBJECT = 3,
    DISPATCHER_THREAD_OBJECT  = 6
} dispatcher_object_t ;

int main( void)
{
    dispatcher_object_t dispatcher_type ;
    printf(""dispatcher_type sizeof[%lu] initial value[0x%X]\n"", sizeof(dispatcher_type),
                                                                dispatcher_type );
    char *kk = (char*)&dispatcher_type;
    return 1;
}

Executing the previous PoC first with clang++ and next with g++:
aandres@xen-devel:/tmp$ clang++ kk.cpp   -o kk ; ./kk
dispatcher_type sizeof[4] initial value[0x0]
aandres@xen-devel:/tmp$
aandres@xen-devel:/tmp$ g++ kk.cpp   -o kk ; ./kk
dispatcher_type sizeof[4] initial value[0x7FFC]

If we remove from the PoC the line with the char *kk pointer assignment the g++ compiler behaves differently:
aandres@xen-devel:/tmp$ clang++ kk.cpp   -o kk ; ./kk
dispatcher_type sizeof[4] initial value[0x0]
aandres@xen-devel:/tmp$
aandres@xen-devel:/tmp$ g++ kk.cpp   -o kk ; ./kk
dispatcher_type sizeof[4] initial value[0x0]

Hope this clarifies the goal of this PR.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,562,2019-02-18T11:41:13Z,2019-02-19T13:41:20Z,2019-02-19T13:42:42Z,MERGED,True,2,2,1,https://github.com/aoshiken,Fix uninitialized variable on win_is_eprocess() and win_is_ethread(),1,[],https://github.com/tklengyel/drakvuf/pull/562,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/562#issuecomment-465131726,,"I see, OK, that makes sense.",True,{'THUMBS_UP': ['https://github.com/aoshiken']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,563,2019-02-19T14:53:58Z,2019-02-19T15:16:09Z,2019-02-19T15:16:11Z,MERGED,True,3,2,1,https://github.com/tklengyel,Initialize enum with defined value,1,[],https://github.com/tklengyel/drakvuf/pull/563,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/563,"Fix error:
win-processes.c: In function ‘win_is_ethread’:
win-processes.c:380:41: error: enum conversion in initialization is invalid in C++ [-Werror=c++-compat]
     dispatcher_object_t dispatcher_type=0;
                                         ^
win-processes.c: In function ‘win_is_eprocess’:
win-processes.c:405:41: error: enum conversion in initialization is invalid in C++ [-Werror=c++-compat]
     dispatcher_object_t dispatcher_type=0;
                                         ^
cc1: all warnings being treated as errors","Fix error:
win-processes.c: In function ‘win_is_ethread’:
win-processes.c:380:41: error: enum conversion in initialization is invalid in C++ [-Werror=c++-compat]
     dispatcher_object_t dispatcher_type=0;
                                         ^
win-processes.c: In function ‘win_is_eprocess’:
win-processes.c:405:41: error: enum conversion in initialization is invalid in C++ [-Werror=c++-compat]
     dispatcher_object_t dispatcher_type=0;
                                         ^
cc1: all warnings being treated as errors",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,565,2019-02-21T12:53:20Z,2019-02-22T03:07:11Z,2019-02-22T13:43:13Z,MERGED,True,6,2,1,https://github.com/disaykin,Fix premature exit from the loop on Interrupted System Call error,1,[],https://github.com/tklengyel/drakvuf/pull/565,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/565,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,565,2019-02-21T12:53:20Z,2019-02-22T03:07:11Z,2019-02-22T13:43:13Z,MERGED,True,6,2,1,https://github.com/disaykin,Fix premature exit from the loop on Interrupted System Call error,1,[],https://github.com/tklengyel/drakvuf/pull/565,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/565#issuecomment-465988882,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,565,2019-02-21T12:53:20Z,2019-02-22T03:07:11Z,2019-02-22T13:43:13Z,MERGED,True,6,2,1,https://github.com/disaykin,Fix premature exit from the loop on Interrupted System Call error,1,[],https://github.com/tklengyel/drakvuf/pull/565,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/565#issuecomment-465991228,,"Interesting, what's the errno you were getting when it exited too early?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,565,2019-02-21T12:53:20Z,2019-02-22T03:07:11Z,2019-02-22T13:43:13Z,MERGED,True,6,2,1,https://github.com/disaykin,Fix premature exit from the loop on Interrupted System Call error,1,[],https://github.com/tklengyel/drakvuf/pull/565,https://github.com/disaykin,4,https://github.com/tklengyel/drakvuf/pull/565#issuecomment-466027946,,errno=4,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,565,2019-02-21T12:53:20Z,2019-02-22T03:07:11Z,2019-02-22T13:43:13Z,MERGED,True,6,2,1,https://github.com/disaykin,Fix premature exit from the loop on Interrupted System Call error,1,[],https://github.com/tklengyel/drakvuf/pull/565,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/565#issuecomment-466032504,,"I'm not sure I understand the scenario where this occurs, EINTR is errno 4. Now you want to completely ignore that signal but what is the source of that signal? To me it definitely looks like something that should warrant interrupting the loop and exiting.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,565,2019-02-21T12:53:20Z,2019-02-22T03:07:11Z,2019-02-22T13:43:13Z,MERGED,True,6,2,1,https://github.com/disaykin,Fix premature exit from the loop on Interrupted System Call error,1,[],https://github.com/tklengyel/drakvuf/pull/565,https://github.com/disaykin,6,https://github.com/tklengyel/drakvuf/pull/565#issuecomment-466056924,,It is normal system call behaviour. Signal handler must setup drakvuf->interrupted variable into non-zero value. After that drakvuf loop will be interrupted as usual. If poll interrupts on another reason (may be sporadically) then loop will be continued.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,565,2019-02-21T12:53:20Z,2019-02-22T03:07:11Z,2019-02-22T13:43:13Z,MERGED,True,6,2,1,https://github.com/disaykin,Fix premature exit from the loop on Interrupted System Call error,1,[],https://github.com/tklengyel/drakvuf/pull/565,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/565#issuecomment-466059320,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,565,2019-02-21T12:53:20Z,2019-02-22T03:07:11Z,2019-02-22T13:43:13Z,MERGED,True,6,2,1,https://github.com/disaykin,Fix premature exit from the loop on Interrupted System Call error,1,[],https://github.com/tklengyel/drakvuf/pull/565,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/565#issuecomment-466257382,,"@disaykin You might want to open a PR to LibVMI as well, and perhaps patch Xen's tools/tests/xen-access.c",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,565,2019-02-21T12:53:20Z,2019-02-22T03:07:11Z,2019-02-22T13:43:13Z,MERGED,True,6,2,1,https://github.com/disaykin,Fix premature exit from the loop on Interrupted System Call error,1,[],https://github.com/tklengyel/drakvuf/pull/565,https://github.com/disaykin,9,https://github.com/tklengyel/drakvuf/pull/565#issuecomment-466367276,,"Xen events polling in libvmi is already handled correctly.
I see some problems in kvm driver sources (libvmi/driver/kvm/kvm.c).
See write manpage^
       write() writes up to count bytes from the buffer starting at buf to the file referred to by the file descriptor fd.

       The number of bytes written may be less than count if, for example, there is insufficient space on the underlying physical medium, or the RLIMIT_FSIZE resource limit is encountered (see setr‐
       limit(2)), or the call was interrupted by a signal handler after having written less than count bytes.  (See also pipe(7).)

The same for read call.
I do not use kvm driver. So I can fix it without testing only.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,565,2019-02-21T12:53:20Z,2019-02-22T03:07:11Z,2019-02-22T13:43:13Z,MERGED,True,6,2,1,https://github.com/disaykin,Fix premature exit from the loop on Interrupted System Call error,1,[],https://github.com/tklengyel/drakvuf/pull/565,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/565#issuecomment-466400245,,"Wow, indeed, both xen-access and libvmi handle it already. I guess we forgot to add that piece when the polling got placed internally to DRAKVUF. Never mind then :) 👍",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,566,2019-02-21T13:22:05Z,2019-02-25T18:44:31Z,2019-02-25T18:44:36Z,MERGED,True,359,7,5,https://github.com/zodeak,[procmon] print new memory protection attributes,3,[],https://github.com/tklengyel/drakvuf/pull/566,https://github.com/zodeak,1,https://github.com/tklengyel/drakvuf/pull/566,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,566,2019-02-21T13:22:05Z,2019-02-25T18:44:31Z,2019-02-25T18:44:36Z,MERGED,True,359,7,5,https://github.com/zodeak,[procmon] print new memory protection attributes,3,[],https://github.com/tklengyel/drakvuf/pull/566,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/566#issuecomment-465997266,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,566,2019-02-21T13:22:05Z,2019-02-25T18:44:31Z,2019-02-25T18:44:36Z,MERGED,True,359,7,5,https://github.com/zodeak,[procmon] print new memory protection attributes,3,[],https://github.com/tklengyel/drakvuf/pull/566,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/566#issuecomment-467020906,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,566,2019-02-21T13:22:05Z,2019-02-25T18:44:31Z,2019-02-25T18:44:36Z,MERGED,True,359,7,5,https://github.com/zodeak,[procmon] print new memory protection attributes,3,[],https://github.com/tklengyel/drakvuf/pull/566,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/566#issuecomment-467130489,,Thanks!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,567,2019-02-21T14:38:31Z,2019-02-21T14:53:32Z,2019-02-21T14:53:35Z,MERGED,True,1,1,1,https://github.com/tklengyel,Update LibVMI,1,[],https://github.com/tklengyel/drakvuf/pull/567,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/567,Fixes #564,Fixes #564,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,568,2019-02-22T07:32:35Z,2019-02-22T08:32:26Z,2019-02-22T08:54:47Z,MERGED,True,0,2,1,https://github.com/Dos98,trivial bug - return stmt,1,[],https://github.com/tklengyel/drakvuf/pull/568,https://github.com/Dos98,1,https://github.com/tklengyel/drakvuf/pull/568,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,568,2019-02-22T07:32:35Z,2019-02-22T08:32:26Z,2019-02-22T08:54:47Z,MERGED,True,0,2,1,https://github.com/Dos98,trivial bug - return stmt,1,[],https://github.com/tklengyel/drakvuf/pull/568,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/568#issuecomment-466302302,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,568,2019-02-22T07:32:35Z,2019-02-22T08:32:26Z,2019-02-22T08:54:47Z,MERGED,True,0,2,1,https://github.com/Dos98,trivial bug - return stmt,1,[],https://github.com/tklengyel/drakvuf/pull/568,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/568#issuecomment-466316644,,Thanks!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,569,2019-02-22T11:14:07Z,2019-02-22T18:17:42Z,2019-03-13T12:41:59Z,MERGED,True,39,39,1,https://github.com/disaykin,SOCKETMON: Fixed output format,1,[],https://github.com/tklengyel/drakvuf/pull/569,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/569,"Add quotes for Owner field
Add missing commas in JSON output format","Add quotes for Owner field
Add missing commas in JSON output format",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,569,2019-02-22T11:14:07Z,2019-02-22T18:17:42Z,2019-03-13T12:41:59Z,MERGED,True,39,39,1,https://github.com/disaykin,SOCKETMON: Fixed output format,1,[],https://github.com/tklengyel/drakvuf/pull/569,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/569#issuecomment-466362686,"Add quotes for Owner field
Add missing commas in JSON output format",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,569,2019-02-22T11:14:07Z,2019-02-22T18:17:42Z,2019-03-13T12:41:59Z,MERGED,True,39,39,1,https://github.com/disaykin,SOCKETMON: Fixed output format,1,[],https://github.com/tklengyel/drakvuf/pull/569,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/569#issuecomment-466393356,"Add quotes for Owner field
Add missing commas in JSON output format",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,570,2019-02-22T11:27:10Z,2019-02-22T13:19:22Z,2019-02-22T13:19:30Z,MERGED,True,24,26,10,https://github.com/Dos98,"Empty statements removed -> redundant "" ; """,3,[],https://github.com/tklengyel/drakvuf/pull/570,https://github.com/Dos98,1,https://github.com/tklengyel/drakvuf/pull/570,removed ';' that were present at the closing braces of switch and if stmts.,removed ';' that were present at the closing braces of switch and if stmts.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,570,2019-02-22T11:27:10Z,2019-02-22T13:19:22Z,2019-02-22T13:19:30Z,MERGED,True,24,26,10,https://github.com/Dos98,"Empty statements removed -> redundant "" ; """,3,[],https://github.com/tklengyel/drakvuf/pull/570,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/570#issuecomment-466365936,removed ';' that were present at the closing braces of switch and if stmts.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,570,2019-02-22T11:27:10Z,2019-02-22T13:19:22Z,2019-02-22T13:19:30Z,MERGED,True,24,26,10,https://github.com/Dos98,"Empty statements removed -> redundant "" ; """,3,[],https://github.com/tklengyel/drakvuf/pull/570,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/570#issuecomment-466393673,removed ';' that were present at the closing braces of switch and if stmts.,Thanks!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,573,2019-02-22T15:08:28Z,2019-02-22T15:10:52Z,2019-02-22T15:10:55Z,MERGED,True,5,0,2,https://github.com/tklengyel,(re-)Add Rekall submodule,1,[],https://github.com/tklengyel/drakvuf/pull/573,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/573,Installing rekall from pip3 has issues running due to dependency errors. Install rekall manually instead from the git repository.,Installing rekall from pip3 has issues running due to dependency errors. Install rekall manually instead from the git repository.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,574,2019-02-22T17:55:14Z,2019-02-22T20:16:19Z,2019-02-22T20:16:20Z,MERGED,True,114,48,20,https://github.com/Dos98,Define each identifier in a dedicated statement,3,[],https://github.com/tklengyel/drakvuf/pull/574,https://github.com/Dos98,1,https://github.com/tklengyel/drakvuf/pull/574,Init-declarator-lists and member-declarator-lists should consist of single init-declarators and member-declarators respectively for c and c++.,Init-declarator-lists and member-declarator-lists should consist of single init-declarators and member-declarators respectively for c and c++.,True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,574,2019-02-22T17:55:14Z,2019-02-22T20:16:19Z,2019-02-22T20:16:20Z,MERGED,True,114,48,20,https://github.com/Dos98,Define each identifier in a dedicated statement,3,[],https://github.com/tklengyel/drakvuf/pull/574,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/574#issuecomment-466486529,Init-declarator-lists and member-declarator-lists should consist of single init-declarators and member-declarators respectively for c and c++.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,574,2019-02-22T17:55:14Z,2019-02-22T20:16:19Z,2019-02-22T20:16:20Z,MERGED,True,114,48,20,https://github.com/Dos98,Define each identifier in a dedicated statement,3,[],https://github.com/tklengyel/drakvuf/pull/574,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/574#issuecomment-466493926,Init-declarator-lists and member-declarator-lists should consist of single init-declarators and member-declarators respectively for c and c++.,You are on a roll :),True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,574,2019-02-22T17:55:14Z,2019-02-22T20:16:19Z,2019-02-22T20:16:20Z,MERGED,True,114,48,20,https://github.com/Dos98,Define each identifier in a dedicated statement,3,[],https://github.com/tklengyel/drakvuf/pull/574,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/574#issuecomment-466493952,Init-declarator-lists and member-declarator-lists should consist of single init-declarators and member-declarators respectively for c and c++.,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,574,2019-02-22T17:55:14Z,2019-02-22T20:16:19Z,2019-02-22T20:16:20Z,MERGED,True,114,48,20,https://github.com/Dos98,Define each identifier in a dedicated statement,3,[],https://github.com/tklengyel/drakvuf/pull/574,https://github.com/Dos98,5,https://github.com/tklengyel/drakvuf/pull/574#issuecomment-466508203,Init-declarator-lists and member-declarator-lists should consist of single init-declarators and member-declarators respectively for c and c++.,Thank you @tklengyel !!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,579,2019-02-28T12:15:32Z,2019-03-01T16:14:03Z,2019-03-01T16:14:03Z,MERGED,True,2,4,1,https://github.com/Dos98,Update to snprintf,3,[],https://github.com/tklengyel/drakvuf/pull/579,https://github.com/Dos98,1,https://github.com/tklengyel/drakvuf/pull/579,I have changed only one sprintf to snprintf for now. I just wanted to test whether it is okay or not.,I have changed only one sprintf to snprintf for now. I just wanted to test whether it is okay or not.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,579,2019-02-28T12:15:32Z,2019-03-01T16:14:03Z,2019-03-01T16:14:03Z,MERGED,True,2,4,1,https://github.com/Dos98,Update to snprintf,3,[],https://github.com/tklengyel/drakvuf/pull/579,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/579#issuecomment-468251341,I have changed only one sprintf to snprintf for now. I just wanted to test whether it is okay or not.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,579,2019-02-28T12:15:32Z,2019-03-01T16:14:03Z,2019-03-01T16:14:03Z,MERGED,True,2,4,1,https://github.com/Dos98,Update to snprintf,3,[],https://github.com/tklengyel/drakvuf/pull/579,https://github.com/disaykin,3,https://github.com/tklengyel/drakvuf/pull/579#issuecomment-468257393,I have changed only one sprintf to snprintf for now. I just wanted to test whether it is okay or not.,@Dos98 Using g_strdup_printf() would be convenient in this case.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,579,2019-02-28T12:15:32Z,2019-03-01T16:14:03Z,2019-03-01T16:14:03Z,MERGED,True,2,4,1,https://github.com/Dos98,Update to snprintf,3,[],https://github.com/tklengyel/drakvuf/pull/579,https://github.com/Dos98,4,https://github.com/tklengyel/drakvuf/pull/579#issuecomment-468608919,I have changed only one sprintf to snprintf for now. I just wanted to test whether it is okay or not.,"I went through glib yesterday. gchar in glib is defined as : typedef char gchar;
I have used char* instead of gchar* here. Looking for suggestions from everyone on how should i proceed.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,579,2019-02-28T12:15:32Z,2019-03-01T16:14:03Z,2019-03-01T16:14:03Z,MERGED,True,2,4,1,https://github.com/Dos98,Update to snprintf,3,[],https://github.com/tklengyel/drakvuf/pull/579,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/579#issuecomment-468714699,I have changed only one sprintf to snprintf for now. I just wanted to test whether it is okay or not.,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,580,2019-02-28T13:41:42Z,2019-02-28T14:56:01Z,2019-02-28T16:10:41Z,MERGED,True,267,940,12,https://github.com/disaykin,SOCKETMON: Add PID and PPID info for socket owner process.,1,[],https://github.com/tklengyel/drakvuf/pull/580,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/580,"Add missing PID and PPID info for socket owner (need for strong
process identification).
Deduplicate code for some callbacks in socketmon.
Add missing TcpState fields in JSON output format.
Rename LocalIp, LocalPort -> ListenIp, ListenPort for listening
sockets in KV and JSON output formats.","Add missing PID and PPID info for socket owner (need for strong
process identification).
Deduplicate code for some callbacks in socketmon.
Add missing TcpState fields in JSON output format.
Rename LocalIp, LocalPort -> ListenIp, ListenPort for listening
sockets in KV and JSON output formats.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,580,2019-02-28T13:41:42Z,2019-02-28T14:56:01Z,2019-02-28T16:10:41Z,MERGED,True,267,940,12,https://github.com/disaykin,SOCKETMON: Add PID and PPID info for socket owner process.,1,[],https://github.com/tklengyel/drakvuf/pull/580,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/580#issuecomment-468276404,"Add missing PID and PPID info for socket owner (need for strong
process identification).
Deduplicate code for some callbacks in socketmon.
Add missing TcpState fields in JSON output format.
Rename LocalIp, LocalPort -> ListenIp, ListenPort for listening
sockets in KV and JSON output formats.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,580,2019-02-28T13:41:42Z,2019-02-28T14:56:01Z,2019-02-28T16:10:41Z,MERGED,True,267,940,12,https://github.com/disaykin,SOCKETMON: Add PID and PPID info for socket owner process.,1,[],https://github.com/tklengyel/drakvuf/pull/580,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/580#issuecomment-468278107,"Add missing PID and PPID info for socket owner (need for strong
process identification).
Deduplicate code for some callbacks in socketmon.
Add missing TcpState fields in JSON output format.
Rename LocalIp, LocalPort -> ListenIp, ListenPort for listening
sockets in KV and JSON output formats.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,580,2019-02-28T13:41:42Z,2019-02-28T14:56:01Z,2019-02-28T16:10:41Z,MERGED,True,267,940,12,https://github.com/disaykin,SOCKETMON: Add PID and PPID info for socket owner process.,1,[],https://github.com/tklengyel/drakvuf/pull/580,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/580#issuecomment-468297146,"Add missing PID and PPID info for socket owner (need for strong
process identification).
Deduplicate code for some callbacks in socketmon.
Add missing TcpState fields in JSON output format.
Rename LocalIp, LocalPort -> ListenIp, ListenPort for listening
sockets in KV and JSON output formats.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,581,2019-02-28T16:01:54Z,2019-02-28T18:08:06Z,2019-02-28T18:36:55Z,MERGED,True,18,13,1,https://github.com/disaykin,SOCKETMON: Fix protocol string,1,[],https://github.com/tklengyel/drakvuf/pull/581,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/581,I make a bug in #580. This MR fixes it.,I make a bug in #580. This MR fixes it.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,581,2019-02-28T16:01:54Z,2019-02-28T18:08:06Z,2019-02-28T18:36:55Z,MERGED,True,18,13,1,https://github.com/disaykin,SOCKETMON: Fix protocol string,1,[],https://github.com/tklengyel/drakvuf/pull/581,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/581#issuecomment-468328743,I make a bug in #580. This MR fixes it.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,581,2019-02-28T16:01:54Z,2019-02-28T18:08:06Z,2019-02-28T18:36:55Z,MERGED,True,18,13,1,https://github.com/disaykin,SOCKETMON: Fix protocol string,1,[],https://github.com/tklengyel/drakvuf/pull/581,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/581#issuecomment-468358343,I make a bug in #580. This MR fixes it.,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,582,2019-03-02T06:47:27Z,2019-03-02T14:47:42Z,2019-03-25T15:32:25Z,MERGED,True,4,0,1,https://github.com/skvl,Fix error in WoW64 modules search for x86 OS,1,[],https://github.com/tklengyel/drakvuf/pull/582,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/582,Before the patch search for WoW64 modules under x86 OS result in segmentation fault in drakvuf.,Before the patch search for WoW64 modules under x86 OS result in segmentation fault in drakvuf.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,582,2019-03-02T06:47:27Z,2019-03-02T14:47:42Z,2019-03-25T15:32:25Z,MERGED,True,4,0,1,https://github.com/skvl,Fix error in WoW64 modules search for x86 OS,1,[],https://github.com/tklengyel/drakvuf/pull/582,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/582#issuecomment-468892511,Before the patch search for WoW64 modules under x86 OS result in segmentation fault in drakvuf.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,582,2019-03-02T06:47:27Z,2019-03-02T14:47:42Z,2019-03-25T15:32:25Z,MERGED,True,4,0,1,https://github.com/skvl,Fix error in WoW64 modules search for x86 OS,1,[],https://github.com/tklengyel/drakvuf/pull/582,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/582#issuecomment-468897329,Before the patch search for WoW64 modules under x86 OS result in segmentation fault in drakvuf.,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,583,2019-03-04T14:02:49Z,2019-03-04T19:39:18Z,2019-03-13T12:41:57Z,MERGED,True,2,1,1,https://github.com/disaykin,getopt_long: Add proper long options array terminator,1,[],https://github.com/tklengyel/drakvuf/pull/583,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/583,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,583,2019-03-04T14:02:49Z,2019-03-04T19:39:18Z,2019-03-13T12:41:57Z,MERGED,True,2,1,1,https://github.com/disaykin,getopt_long: Add proper long options array terminator,1,[],https://github.com/tklengyel/drakvuf/pull/583,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/583#issuecomment-469263320,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,583,2019-03-04T14:02:49Z,2019-03-04T19:39:18Z,2019-03-13T12:41:57Z,MERGED,True,2,1,1,https://github.com/disaykin,getopt_long: Add proper long options array terminator,1,[],https://github.com/tklengyel/drakvuf/pull/583,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/583#issuecomment-469264806,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,585,2019-03-06T19:01:58Z,2019-03-06T22:00:06Z,2019-03-06T22:00:06Z,MERGED,True,763,421,6,https://github.com/mleinhos,Linux syscalls,5,[],https://github.com/tklengyel/drakvuf/pull/585,https://github.com/mleinhos,1,https://github.com/tklengyel/drakvuf/pull/585,"This is a refactor of the syscall plugin to make it easier to examine Linux syscalls. It only supports a small handful of syscalls for now, but it will make it easier to add support for additional ones later.
Using this new code, argument introspection works correctly on Linux 4.15, but it appears to retrieve garbage from memory on 4.18. The cause of this is still under investigation (maybe due to a Spectre/Meltdown mitigation?), but even against 4.18, the code is stable (it just gives incorrect results).","This is a refactor of the syscall plugin to make it easier to examine Linux syscalls. It only supports a small handful of syscalls for now, but it will make it easier to add support for additional ones later.
Using this new code, argument introspection works correctly on Linux 4.15, but it appears to retrieve garbage from memory on 4.18. The cause of this is still under investigation (maybe due to a Spectre/Meltdown mitigation?), but even against 4.18, the code is stable (it just gives incorrect results).",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,585,2019-03-06T19:01:58Z,2019-03-06T22:00:06Z,2019-03-06T22:00:06Z,MERGED,True,763,421,6,https://github.com/mleinhos,Linux syscalls,5,[],https://github.com/tklengyel/drakvuf/pull/585,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/585#issuecomment-470233014,"This is a refactor of the syscall plugin to make it easier to examine Linux syscalls. It only supports a small handful of syscalls for now, but it will make it easier to add support for additional ones later.
Using this new code, argument introspection works correctly on Linux 4.15, but it appears to retrieve garbage from memory on 4.18. The cause of this is still under investigation (maybe due to a Spectre/Meltdown mitigation?), but even against 4.18, the code is stable (it just gives incorrect results).",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,585,2019-03-06T19:01:58Z,2019-03-06T22:00:06Z,2019-03-06T22:00:06Z,MERGED,True,763,421,6,https://github.com/mleinhos,Linux syscalls,5,[],https://github.com/tklengyel/drakvuf/pull/585,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/585#issuecomment-470233847,"This is a refactor of the syscall plugin to make it easier to examine Linux syscalls. It only supports a small handful of syscalls for now, but it will make it easier to add support for additional ones later.
Using this new code, argument introspection works correctly on Linux 4.15, but it appears to retrieve garbage from memory on 4.18. The cause of this is still under investigation (maybe due to a Spectre/Meltdown mitigation?), but even against 4.18, the code is stable (it just gives incorrect results).",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,585,2019-03-06T19:01:58Z,2019-03-06T22:00:06Z,2019-03-06T22:00:06Z,MERGED,True,763,421,6,https://github.com/mleinhos,Linux syscalls,5,[],https://github.com/tklengyel/drakvuf/pull/585,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/585#issuecomment-470270711,"This is a refactor of the syscall plugin to make it easier to examine Linux syscalls. It only supports a small handful of syscalls for now, but it will make it easier to add support for additional ones later.
Using this new code, argument introspection works correctly on Linux 4.15, but it appears to retrieve garbage from memory on 4.18. The cause of this is still under investigation (maybe due to a Spectre/Meltdown mitigation?), but even against 4.18, the code is stable (it just gives incorrect results).",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,585,2019-03-06T19:01:58Z,2019-03-06T22:00:06Z,2019-03-06T22:00:06Z,MERGED,True,763,421,6,https://github.com/mleinhos,Linux syscalls,5,[],https://github.com/tklengyel/drakvuf/pull/585,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/585#issuecomment-470294420,"This is a refactor of the syscall plugin to make it easier to examine Linux syscalls. It only supports a small handful of syscalls for now, but it will make it easier to add support for additional ones later.
Using this new code, argument introspection works correctly on Linux 4.15, but it appears to retrieve garbage from memory on 4.18. The cause of this is still under investigation (maybe due to a Spectre/Meltdown mitigation?), but even against 4.18, the code is stable (it just gives incorrect results).",Thanks! Looks good to me,True,{'THUMBS_UP': ['https://github.com/mleinhos']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,587,2019-03-08T21:08:59Z,2019-03-09T02:57:48Z,2019-03-09T02:57:48Z,MERGED,True,148,36,3,https://github.com/mleinhos,Linux syscalls,7,[],https://github.com/tklengyel/drakvuf/pull/587,https://github.com/mleinhos,1,https://github.com/tklengyel/drakvuf/pull/587,"This is an update to my branch, which handles both old-style and new Linux syscalls. Legacy ones read arguments directly from registers, new ones read from the passed pt_regs struct. Closes #586.","This is an update to my branch, which handles both old-style and new Linux syscalls. Legacy ones read arguments directly from registers, new ones read from the passed pt_regs struct. Closes #586.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,587,2019-03-08T21:08:59Z,2019-03-09T02:57:48Z,2019-03-09T02:57:48Z,MERGED,True,148,36,3,https://github.com/mleinhos,Linux syscalls,7,[],https://github.com/tklengyel/drakvuf/pull/587,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/587#issuecomment-471076962,"This is an update to my branch, which handles both old-style and new Linux syscalls. Legacy ones read arguments directly from registers, new ones read from the passed pt_regs struct. Closes #586.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,587,2019-03-08T21:08:59Z,2019-03-09T02:57:48Z,2019-03-09T02:57:48Z,MERGED,True,148,36,3,https://github.com/mleinhos,Linux syscalls,7,[],https://github.com/tklengyel/drakvuf/pull/587,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/587#issuecomment-471091482,"This is an update to my branch, which handles both old-style and new Linux syscalls. Legacy ones read arguments directly from registers, new ones read from the passed pt_regs struct. Closes #586.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,587,2019-03-08T21:08:59Z,2019-03-09T02:57:48Z,2019-03-09T02:57:48Z,MERGED,True,148,36,3,https://github.com/mleinhos,Linux syscalls,7,[],https://github.com/tklengyel/drakvuf/pull/587,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/587#issuecomment-471094429,"This is an update to my branch, which handles both old-style and new Linux syscalls. Legacy ones read arguments directly from registers, new ones read from the passed pt_regs struct. Closes #586.","@mleinhos Looks good to me, I'll merge later today. Thanks!",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,590,2019-03-11T18:13:27Z,2019-03-13T14:11:45Z,2019-03-20T11:08:06Z,MERGED,True,912,46,10,https://github.com/zodeak,EnvMon plugin,3,[],https://github.com/tklengyel/drakvuf/pull/590,https://github.com/zodeak,1,https://github.com/tklengyel/drakvuf/pull/590,"EnvMon Plugin traces calls, that are used by malware to detect virtual environment.","EnvMon Plugin traces calls, that are used by malware to detect virtual environment.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,590,2019-03-11T18:13:27Z,2019-03-13T14:11:45Z,2019-03-20T11:08:06Z,MERGED,True,912,46,10,https://github.com/zodeak,EnvMon plugin,3,[],https://github.com/tklengyel/drakvuf/pull/590,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/590#issuecomment-471658367,"EnvMon Plugin traces calls, that are used by malware to detect virtual environment.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,590,2019-03-11T18:13:27Z,2019-03-13T14:11:45Z,2019-03-20T11:08:06Z,MERGED,True,912,46,10,https://github.com/zodeak,EnvMon plugin,3,[],https://github.com/tklengyel/drakvuf/pull/590,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/590#issuecomment-472421918,"EnvMon Plugin traces calls, that are used by malware to detect virtual environment.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,590,2019-03-11T18:13:27Z,2019-03-13T14:11:45Z,2019-03-20T11:08:06Z,MERGED,True,912,46,10,https://github.com/zodeak,EnvMon plugin,3,[],https://github.com/tklengyel/drakvuf/pull/590,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/590#issuecomment-472422369,"EnvMon Plugin traces calls, that are used by malware to detect virtual environment.","Please provide a description of the plugin in the commit message for this PR, thanks! Otherwise the PR looks mostly good to me",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,590,2019-03-11T18:13:27Z,2019-03-13T14:11:45Z,2019-03-20T11:08:06Z,MERGED,True,912,46,10,https://github.com/zodeak,EnvMon plugin,3,[],https://github.com/tklengyel/drakvuf/pull/590,https://github.com/ultrapikachu,5,https://github.com/tklengyel/drakvuf/pull/590#issuecomment-474785060,"EnvMon Plugin traces calls, that are used by malware to detect virtual environment.",@zodeak plugin didn't give any output,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,591,2019-03-12T15:21:09Z,2019-03-12T16:58:33Z,2019-03-13T08:53:18Z,MERGED,True,1,1,1,https://github.com/disaykin,Fix garbage in drakvuf_get_current_process_data() result,2,[],https://github.com/tklengyel/drakvuf/pull/591,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/591,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,591,2019-03-12T15:21:09Z,2019-03-12T16:58:33Z,2019-03-13T08:53:18Z,MERGED,True,1,1,1,https://github.com/disaykin,Fix garbage in drakvuf_get_current_process_data() result,2,[],https://github.com/tklengyel/drakvuf/pull/591,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/591#issuecomment-472078376,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,591,2019-03-12T15:21:09Z,2019-03-12T16:58:33Z,2019-03-13T08:53:18Z,MERGED,True,1,1,1,https://github.com/disaykin,Fix garbage in drakvuf_get_current_process_data() result,2,[],https://github.com/tklengyel/drakvuf/pull/591,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/591#issuecomment-472079595,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,592,2019-03-13T14:31:17Z,2019-03-14T13:53:55Z,2019-03-18T09:48:40Z,MERGED,True,159,219,40,https://github.com/disaykin,More type-safe plugin initialization,1,[],https://github.com/tklengyel/drakvuf/pull/592,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/592,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,592,2019-03-13T14:31:17Z,2019-03-14T13:53:55Z,2019-03-18T09:48:40Z,MERGED,True,159,219,40,https://github.com/disaykin,More type-safe plugin initialization,1,[],https://github.com/tklengyel/drakvuf/pull/592,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/592#issuecomment-472446188,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,592,2019-03-13T14:31:17Z,2019-03-14T13:53:55Z,2019-03-18T09:48:40Z,MERGED,True,159,219,40,https://github.com/disaykin,More type-safe plugin initialization,1,[],https://github.com/tklengyel/drakvuf/pull/592,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/592#issuecomment-472449267,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,594,2019-03-15T00:09:39Z,2019-03-15T15:58:45Z,2019-03-15T15:58:50Z,MERGED,True,13,15,3,https://github.com/Dos98,Update all remaining insecure sprintf,1,[],https://github.com/tklengyel/drakvuf/pull/594,https://github.com/Dos98,1,https://github.com/tklengyel/drakvuf/pull/594,Updated sprintf to secure g_strdup_printf.,Updated sprintf to secure g_strdup_printf.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,594,2019-03-15T00:09:39Z,2019-03-15T15:58:45Z,2019-03-15T15:58:50Z,MERGED,True,13,15,3,https://github.com/Dos98,Update all remaining insecure sprintf,1,[],https://github.com/tklengyel/drakvuf/pull/594,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/594#issuecomment-473111711,Updated sprintf to secure g_strdup_printf.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,594,2019-03-15T00:09:39Z,2019-03-15T15:58:45Z,2019-03-15T15:58:50Z,MERGED,True,13,15,3,https://github.com/Dos98,Update all remaining insecure sprintf,1,[],https://github.com/tklengyel/drakvuf/pull/594,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/594#issuecomment-473111955,Updated sprintf to secure g_strdup_printf.,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,594,2019-03-15T00:09:39Z,2019-03-15T15:58:45Z,2019-03-15T15:58:50Z,MERGED,True,13,15,3,https://github.com/Dos98,Update all remaining insecure sprintf,1,[],https://github.com/tklengyel/drakvuf/pull/594,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/594#issuecomment-473342569,Updated sprintf to secure g_strdup_printf.,Thanks!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,596,2019-03-21T08:38:10Z,2019-03-22T14:15:31Z,2019-03-22T14:15:31Z,MERGED,True,25,1,1,https://github.com/Dos98,Added option '-a' to activate the specified  plugin,6,[],https://github.com/tklengyel/drakvuf/pull/596,https://github.com/Dos98,1,https://github.com/tklengyel/drakvuf/pull/596,"Created an option -a to activate the specified plugin and disabling the rest.

It disables all the plugins only once
-a can be used to activate multiple plugins



Usage: ./src/drakvuf -r /root/windows7-sp1.rekall.json -d 1 -a poolmon -a syscalls
This activates only the specified plugins.

Code formatting of file is done.","Created an option -a to activate the specified plugin and disabling the rest.

It disables all the plugins only once
-a can be used to activate multiple plugins



Usage: ./src/drakvuf -r /root/windows7-sp1.rekall.json -d 1 -a poolmon -a syscalls
This activates only the specified plugins.

Code formatting of file is done.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,596,2019-03-21T08:38:10Z,2019-03-22T14:15:31Z,2019-03-22T14:15:31Z,MERGED,True,25,1,1,https://github.com/Dos98,Added option '-a' to activate the specified  plugin,6,[],https://github.com/tklengyel/drakvuf/pull/596,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/596#issuecomment-475147712,"Created an option -a to activate the specified plugin and disabling the rest.

It disables all the plugins only once
-a can be used to activate multiple plugins



Usage: ./src/drakvuf -r /root/windows7-sp1.rekall.json -d 1 -a poolmon -a syscalls
This activates only the specified plugins.

Code formatting of file is done.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,596,2019-03-21T08:38:10Z,2019-03-22T14:15:31Z,2019-03-22T14:15:31Z,MERGED,True,25,1,1,https://github.com/Dos98,Added option '-a' to activate the specified  plugin,6,[],https://github.com/tklengyel/drakvuf/pull/596,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/596#issuecomment-475255618,"Created an option -a to activate the specified plugin and disabling the rest.

It disables all the plugins only once
-a can be used to activate multiple plugins



Usage: ./src/drakvuf -r /root/windows7-sp1.rekall.json -d 1 -a poolmon -a syscalls
This activates only the specified plugins.

Code formatting of file is done.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,596,2019-03-21T08:38:10Z,2019-03-22T14:15:31Z,2019-03-22T14:15:31Z,MERGED,True,25,1,1,https://github.com/Dos98,Added option '-a' to activate the specified  plugin,6,[],https://github.com/tklengyel/drakvuf/pull/596,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/596#issuecomment-475637228,"Created an option -a to activate the specified plugin and disabling the rest.

It disables all the plugins only once
-a can be used to activate multiple plugins



Usage: ./src/drakvuf -r /root/windows7-sp1.rekall.json -d 1 -a poolmon -a syscalls
This activates only the specified plugins.

Code formatting of file is done.","Thanks, looks good!",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,597,2019-03-21T14:29:42Z,2019-05-07T20:41:52Z,2019-05-07T20:41:52Z,CLOSED,False,542,6,4,https://github.com/mleinhos,Added example tool to monitor for kernel memory modification,8,[],https://github.com/tklengyel/drakvuf/pull/597,https://github.com/mleinhos,1,https://github.com/tklengyel/drakvuf/pull/597,"Added a toy example that uses libdrakvuf to monitor for modification of kernel text. This probably isn't terribly useful for production, but it shows another way to use the library and tests some functionality that probably hasn't been tested for a while.","Added a toy example that uses libdrakvuf to monitor for modification of kernel text. This probably isn't terribly useful for production, but it shows another way to use the library and tests some functionality that probably hasn't been tested for a while.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,597,2019-03-21T14:29:42Z,2019-05-07T20:41:52Z,2019-05-07T20:41:52Z,CLOSED,False,542,6,4,https://github.com/mleinhos,Added example tool to monitor for kernel memory modification,8,[],https://github.com/tklengyel/drakvuf/pull/597,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/597#issuecomment-475268792,"Added a toy example that uses libdrakvuf to monitor for modification of kernel text. This probably isn't terribly useful for production, but it shows another way to use the library and tests some functionality that probably hasn't been tested for a while.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,597,2019-03-21T14:29:42Z,2019-05-07T20:41:52Z,2019-05-07T20:41:52Z,CLOSED,False,542,6,4,https://github.com/mleinhos,Added example tool to monitor for kernel memory modification,8,[],https://github.com/tklengyel/drakvuf/pull/597,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/597#issuecomment-490247365,"Added a toy example that uses libdrakvuf to monitor for modification of kernel text. This probably isn't terribly useful for production, but it shows another way to use the library and tests some functionality that probably hasn't been tested for a while.","@mleinhos I'm closing this PR for now. The example tool is certainly useful in demonstrating the use of the API and the integration necessary to add a new tool to the build system. However, as the tool itself has limited functionality having it be included in all builds is not something I want to do at this point. Thanks though!",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,598,2019-03-22T11:46:09Z,2019-03-22T16:27:20Z,2019-04-17T11:12:03Z,MERGED,True,989,1,9,https://github.com/sifurov,LIBRARYMON plugin: Trace library loads,3,[],https://github.com/tklengyel/drakvuf/pull/598,https://github.com/sifurov,1,https://github.com/tklengyel/drakvuf/pull/598,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,598,2019-03-22T11:46:09Z,2019-03-22T16:27:20Z,2019-04-17T11:12:03Z,MERGED,True,989,1,9,https://github.com/sifurov,LIBRARYMON plugin: Trace library loads,3,[],https://github.com/tklengyel/drakvuf/pull/598,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/598#issuecomment-475590489,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,598,2019-03-22T11:46:09Z,2019-03-22T16:27:20Z,2019-04-17T11:12:03Z,MERGED,True,989,1,9,https://github.com/sifurov,LIBRARYMON plugin: Trace library loads,3,[],https://github.com/tklengyel/drakvuf/pull/598,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/598#issuecomment-475637995,,Could you please provide a description of the plugin you are adding and also what the new plugins_ex addition does?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,598,2019-03-22T11:46:09Z,2019-03-22T16:27:20Z,2019-04-17T11:12:03Z,MERGED,True,989,1,9,https://github.com/sifurov,LIBRARYMON plugin: Trace library loads,3,[],https://github.com/tklengyel/drakvuf/pull/598,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/598#issuecomment-475647096,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,598,2019-03-22T11:46:09Z,2019-03-22T16:27:20Z,2019-04-17T11:12:03Z,MERGED,True,989,1,9,https://github.com/sifurov,LIBRARYMON plugin: Trace library loads,3,[],https://github.com/tklengyel/drakvuf/pull/598,https://github.com/sifurov,5,https://github.com/tklengyel/drakvuf/pull/598#issuecomment-475648739,,"librarymon is a plugin that print a parameters of call function LdrLoadDll and LdrGetDllHandle (for this moment).
The class plugin_ex is a smart wrapper for common plugin operations like that registration a trap in exe, in dll and at end of function. The management a list of that traps (automatically deletion).",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,598,2019-03-22T11:46:09Z,2019-03-22T16:27:20Z,2019-04-17T11:12:03Z,MERGED,True,989,1,9,https://github.com/sifurov,LIBRARYMON plugin: Trace library loads,3,[],https://github.com/tklengyel/drakvuf/pull/598,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/598#issuecomment-475661158,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,598,2019-03-22T11:46:09Z,2019-03-22T16:27:20Z,2019-04-17T11:12:03Z,MERGED,True,989,1,9,https://github.com/sifurov,LIBRARYMON plugin: Trace library loads,3,[],https://github.com/tklengyel/drakvuf/pull/598,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/598#issuecomment-475687013,,"Thanks, looks good!",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,599,2019-03-25T12:11:33Z,2019-03-25T16:16:22Z,2019-04-17T11:12:03Z,MERGED,True,457,322,5,https://github.com/sifurov,Switch few exists plugin to use plugin_ex,1,[],https://github.com/tklengyel/drakvuf/pull/599,https://github.com/sifurov,1,https://github.com/tklengyel/drakvuf/pull/599,"New handler for GetAdaptersAddresses, WNetGetProviderNameW.
Other changes is plugin conversion to use plugin_ex.","New handler for GetAdaptersAddresses, WNetGetProviderNameW.
Other changes is plugin conversion to use plugin_ex.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,599,2019-03-25T12:11:33Z,2019-03-25T16:16:22Z,2019-04-17T11:12:03Z,MERGED,True,457,322,5,https://github.com/sifurov,Switch few exists plugin to use plugin_ex,1,[],https://github.com/tklengyel/drakvuf/pull/599,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/599#issuecomment-476169450,"New handler for GetAdaptersAddresses, WNetGetProviderNameW.
Other changes is plugin conversion to use plugin_ex.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,599,2019-03-25T12:11:33Z,2019-03-25T16:16:22Z,2019-04-17T11:12:03Z,MERGED,True,457,322,5,https://github.com/sifurov,Switch few exists plugin to use plugin_ex,1,[],https://github.com/tklengyel/drakvuf/pull/599,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/599#issuecomment-476194277,"New handler for GetAdaptersAddresses, WNetGetProviderNameW.
Other changes is plugin conversion to use plugin_ex.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,600,2019-03-25T15:17:09Z,2019-03-25T16:16:11Z,2019-04-15T09:08:25Z,MERGED,True,5,3,2,https://github.com/skvl,clipboardmon: Intercept NtUserSetClipboardData,1,[],https://github.com/tklengyel/drakvuf/pull/600,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/600,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,600,2019-03-25T15:17:09Z,2019-03-25T16:16:11Z,2019-04-15T09:08:25Z,MERGED,True,5,3,2,https://github.com/skvl,clipboardmon: Intercept NtUserSetClipboardData,1,[],https://github.com/tklengyel/drakvuf/pull/600,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/600#issuecomment-476243220,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,600,2019-03-25T15:17:09Z,2019-03-25T16:16:11Z,2019-04-15T09:08:25Z,MERGED,True,5,3,2,https://github.com/skvl,clipboardmon: Intercept NtUserSetClipboardData,1,[],https://github.com/tklengyel/drakvuf/pull/600,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/600#issuecomment-476243975,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,601,2019-03-25T15:20:28Z,2019-03-25T16:15:47Z,2019-04-15T09:08:24Z,MERGED,True,56,1,6,https://github.com/skvl,Add interface for process enumeration,1,[],https://github.com/tklengyel/drakvuf/pull/601,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/601,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,601,2019-03-25T15:20:28Z,2019-03-25T16:15:47Z,2019-04-15T09:08:24Z,MERGED,True,56,1,6,https://github.com/skvl,Add interface for process enumeration,1,[],https://github.com/tklengyel/drakvuf/pull/601,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/601#issuecomment-476244698,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,601,2019-03-25T15:20:28Z,2019-03-25T16:15:47Z,2019-04-15T09:08:24Z,MERGED,True,56,1,6,https://github.com/skvl,Add interface for process enumeration,1,[],https://github.com/tklengyel/drakvuf/pull/601,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/601#issuecomment-476258520,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,602,2019-03-26T14:15:17Z,2019-03-26T21:11:41Z,2019-04-15T09:08:23Z,MERGED,True,378,0,6,https://github.com/skvl,Add plugin to check for hidden processes (DKOM),2,[],https://github.com/tklengyel/drakvuf/pull/602,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/602,"This is the first and simplest implementation of the plugin. It checks that current process is self-cycled.
Thus if rootkit would hide two sequential processes then the check does not notice this.","This is the first and simplest implementation of the plugin. It checks that current process is self-cycled.
Thus if rootkit would hide two sequential processes then the check does not notice this.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,602,2019-03-26T14:15:17Z,2019-03-26T21:11:41Z,2019-04-15T09:08:23Z,MERGED,True,378,0,6,https://github.com/skvl,Add plugin to check for hidden processes (DKOM),2,[],https://github.com/tklengyel/drakvuf/pull/602,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/602#issuecomment-476664482,"This is the first and simplest implementation of the plugin. It checks that current process is self-cycled.
Thus if rootkit would hide two sequential processes then the check does not notice this.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,602,2019-03-26T14:15:17Z,2019-03-26T21:11:41Z,2019-04-15T09:08:23Z,MERGED,True,378,0,6,https://github.com/skvl,Add plugin to check for hidden processes (DKOM),2,[],https://github.com/tklengyel/drakvuf/pull/602,https://github.com/skvl,3,https://github.com/tklengyel/drakvuf/pull/602#issuecomment-476671987,"This is the first and simplest implementation of the plugin. It checks that current process is self-cycled.
Thus if rootkit would hide two sequential processes then the check does not notice this.",To test one could use https://github.com/landhb/HideProcess,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,602,2019-03-26T14:15:17Z,2019-03-26T21:11:41Z,2019-04-15T09:08:23Z,MERGED,True,378,0,6,https://github.com/skvl,Add plugin to check for hidden processes (DKOM),2,[],https://github.com/tklengyel/drakvuf/pull/602,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/602#issuecomment-476678400,"This is the first and simplest implementation of the plugin. It checks that current process is self-cycled.
Thus if rootkit would hide two sequential processes then the check does not notice this.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,602,2019-03-26T14:15:17Z,2019-03-26T21:11:41Z,2019-04-15T09:08:23Z,MERGED,True,378,0,6,https://github.com/skvl,Add plugin to check for hidden processes (DKOM),2,[],https://github.com/tklengyel/drakvuf/pull/602,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/602#issuecomment-476698754,"This is the first and simplest implementation of the plugin. It checks that current process is self-cycled.
Thus if rootkit would hide two sequential processes then the check does not notice this.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,603,2019-03-29T12:39:10Z,2019-03-29T17:24:42Z,2019-04-15T09:08:24Z,MERGED,True,165,8,2,https://github.com/skvl,dkommon: Add trap for context switch to check drivers list changes,4,[],https://github.com/tklengyel/drakvuf/pull/603,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/603,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,603,2019-03-29T12:39:10Z,2019-03-29T17:24:42Z,2019-04-15T09:08:24Z,MERGED,True,165,8,2,https://github.com/skvl,dkommon: Add trap for context switch to check drivers list changes,4,[],https://github.com/tklengyel/drakvuf/pull/603,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/603#issuecomment-477983023,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,603,2019-03-29T12:39:10Z,2019-03-29T17:24:42Z,2019-04-15T09:08:24Z,MERGED,True,165,8,2,https://github.com/skvl,dkommon: Add trap for context switch to check drivers list changes,4,[],https://github.com/tklengyel/drakvuf/pull/603,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/603#issuecomment-478021466,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,605,2019-04-01T15:08:52Z,2019-04-01T17:03:50Z,2019-04-01T17:03:54Z,MERGED,True,1,1,1,https://github.com/tklengyel,Update to Xen 4.12,1,[],https://github.com/tklengyel/drakvuf/pull/605,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/605,Fixes #238,Fixes #238,True,"{'HOORAY': ['https://github.com/Dos98'], 'ROCKET': ['https://github.com/Dos98']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,606,2019-04-08T07:31:18Z,2019-04-08T14:03:38Z,2019-04-15T09:08:24Z,MERGED,True,656,27,2,https://github.com/skvl,filetracer: Print all attribute names on NtCreateFile,6,[],https://github.com/tklengyel/drakvuf/pull/606,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/606,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,606,2019-04-08T07:31:18Z,2019-04-08T14:03:38Z,2019-04-15T09:08:24Z,MERGED,True,656,27,2,https://github.com/skvl,filetracer: Print all attribute names on NtCreateFile,6,[],https://github.com/tklengyel/drakvuf/pull/606,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/606#issuecomment-480717199,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,606,2019-04-08T07:31:18Z,2019-04-08T14:03:38Z,2019-04-15T09:08:24Z,MERGED,True,656,27,2,https://github.com/skvl,filetracer: Print all attribute names on NtCreateFile,6,[],https://github.com/tklengyel/drakvuf/pull/606,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/606#issuecomment-480827406,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,606,2019-04-08T07:31:18Z,2019-04-08T14:03:38Z,2019-04-15T09:08:24Z,MERGED,True,656,27,2,https://github.com/skvl,filetracer: Print all attribute names on NtCreateFile,6,[],https://github.com/tklengyel/drakvuf/pull/606,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/606#issuecomment-480829937,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,607,2019-04-09T14:58:12Z,2019-04-09T22:04:50Z,2019-04-15T09:08:25Z,MERGED,True,1,1,1,https://github.com/skvl,Fix SIGSEGV in WoW64 modules enumeration,1,[],https://github.com/tklengyel/drakvuf/pull/607,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/607,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,607,2019-04-09T14:58:12Z,2019-04-09T22:04:50Z,2019-04-15T09:08:25Z,MERGED,True,1,1,1,https://github.com/skvl,Fix SIGSEGV in WoW64 modules enumeration,1,[],https://github.com/tklengyel/drakvuf/pull/607,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/607#issuecomment-481288381,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,607,2019-04-09T14:58:12Z,2019-04-09T22:04:50Z,2019-04-15T09:08:25Z,MERGED,True,1,1,1,https://github.com/skvl,Fix SIGSEGV in WoW64 modules enumeration,1,[],https://github.com/tklengyel/drakvuf/pull/607,https://github.com/aoshiken,3,https://github.com/tklengyel/drakvuf/pull/607#issuecomment-481290534,,Thanks @skvl,True,{'THUMBS_UP': ['https://github.com/skvl']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,607,2019-04-09T14:58:12Z,2019-04-09T22:04:50Z,2019-04-15T09:08:25Z,MERGED,True,1,1,1,https://github.com/skvl,Fix SIGSEGV in WoW64 modules enumeration,1,[],https://github.com/tklengyel/drakvuf/pull/607,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/607#issuecomment-481299274,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,607,2019-04-09T14:58:12Z,2019-04-09T22:04:50Z,2019-04-15T09:08:25Z,MERGED,True,1,1,1,https://github.com/skvl,Fix SIGSEGV in WoW64 modules enumeration,1,[],https://github.com/tklengyel/drakvuf/pull/607,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/607#issuecomment-481304148,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,607,2019-04-09T14:58:12Z,2019-04-09T22:04:50Z,2019-04-15T09:08:25Z,MERGED,True,1,1,1,https://github.com/skvl,Fix SIGSEGV in WoW64 modules enumeration,1,[],https://github.com/tklengyel/drakvuf/pull/607,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/607#issuecomment-481405288,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,608,2019-04-10T13:07:03Z,2019-04-11T13:29:04Z,2019-04-15T09:08:24Z,MERGED,True,234,18,3,https://github.com/skvl,Filetracer print security descriptor,3,[],https://github.com/tklengyel/drakvuf/pull/608,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/608,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,608,2019-04-10T13:07:03Z,2019-04-11T13:29:04Z,2019-04-15T09:08:24Z,MERGED,True,234,18,3,https://github.com/skvl,Filetracer print security descriptor,3,[],https://github.com/tklengyel/drakvuf/pull/608,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/608#issuecomment-481682801,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,608,2019-04-10T13:07:03Z,2019-04-11T13:29:04Z,2019-04-15T09:08:24Z,MERGED,True,234,18,3,https://github.com/skvl,Filetracer print security descriptor,3,[],https://github.com/tklengyel/drakvuf/pull/608,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/608#issuecomment-481689123,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,608,2019-04-10T13:07:03Z,2019-04-11T13:29:04Z,2019-04-15T09:08:24Z,MERGED,True,234,18,3,https://github.com/skvl,Filetracer print security descriptor,3,[],https://github.com/tklengyel/drakvuf/pull/608,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/608#issuecomment-481692477,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,609,2019-04-11T13:11:09Z,2019-04-16T13:32:12Z,2019-04-19T11:26:08Z,MERGED,True,466,565,5,https://github.com/skvl,Plugins print flags,5,[],https://github.com/tklengyel/drakvuf/pull/609,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/609,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,609,2019-04-11T13:11:09Z,2019-04-16T13:32:12Z,2019-04-19T11:26:08Z,MERGED,True,466,565,5,https://github.com/skvl,Plugins print flags,5,[],https://github.com/tklengyel/drakvuf/pull/609,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/609#issuecomment-482107751,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,609,2019-04-11T13:11:09Z,2019-04-16T13:32:12Z,2019-04-19T11:26:08Z,MERGED,True,466,565,5,https://github.com/skvl,Plugins print flags,5,[],https://github.com/tklengyel/drakvuf/pull/609,https://github.com/skvl,3,https://github.com/tklengyel/drakvuf/pull/609#issuecomment-482108038,,@tklengyel I will rebase the branch as soon as previous branch would be accepted.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,609,2019-04-11T13:11:09Z,2019-04-16T13:32:12Z,2019-04-19T11:26:08Z,MERGED,True,466,565,5,https://github.com/skvl,Plugins print flags,5,[],https://github.com/tklengyel/drakvuf/pull/609,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/609#issuecomment-482132176,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,609,2019-04-11T13:11:09Z,2019-04-16T13:32:12Z,2019-04-19T11:26:08Z,MERGED,True,466,565,5,https://github.com/skvl,Plugins print flags,5,[],https://github.com/tklengyel/drakvuf/pull/609,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/609#issuecomment-483483559,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,612,2019-04-17T12:53:51Z,2019-04-18T15:02:30Z,2019-04-18T15:02:35Z,MERGED,True,1558,220,12,https://github.com/sifurov,New plugin WMIMon,1,[],https://github.com/tklengyel/drakvuf/pull/612,https://github.com/sifurov,1,https://github.com/tklengyel/drakvuf/pull/612,"New plugin WMIMon that is monitor a basic WMI requests as IWbemlocator::ConnectServer, IWbemServices::ExecQuery, IWbemServices::GetObject, IWbemServices::ExecMethod. But only for x64 platform. We found a bug a rekall profile for syswow64/ole32.dll. Also I change a plugins_ex.h and plugins_ex.cpp and other plugins that depend of them. I did a class pluginex more resemble for classes of std.","New plugin WMIMon that is monitor a basic WMI requests as IWbemlocator::ConnectServer, IWbemServices::ExecQuery, IWbemServices::GetObject, IWbemServices::ExecMethod. But only for x64 platform. We found a bug a rekall profile for syswow64/ole32.dll. Also I change a plugins_ex.h and plugins_ex.cpp and other plugins that depend of them. I did a class pluginex more resemble for classes of std.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,612,2019-04-17T12:53:51Z,2019-04-18T15:02:30Z,2019-04-18T15:02:35Z,MERGED,True,1558,220,12,https://github.com/sifurov,New plugin WMIMon,1,[],https://github.com/tklengyel/drakvuf/pull/612,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/612#issuecomment-484071405,"New plugin WMIMon that is monitor a basic WMI requests as IWbemlocator::ConnectServer, IWbemServices::ExecQuery, IWbemServices::GetObject, IWbemServices::ExecMethod. But only for x64 platform. We found a bug a rekall profile for syswow64/ole32.dll. Also I change a plugins_ex.h and plugins_ex.cpp and other plugins that depend of them. I did a class pluginex more resemble for classes of std.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,612,2019-04-17T12:53:51Z,2019-04-18T15:02:30Z,2019-04-18T15:02:35Z,MERGED,True,1558,220,12,https://github.com/sifurov,New plugin WMIMon,1,[],https://github.com/tklengyel/drakvuf/pull/612,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/612#issuecomment-484110608,"New plugin WMIMon that is monitor a basic WMI requests as IWbemlocator::ConnectServer, IWbemServices::ExecQuery, IWbemServices::GetObject, IWbemServices::ExecMethod. But only for x64 platform. We found a bug a rekall profile for syswow64/ole32.dll. Also I change a plugins_ex.h and plugins_ex.cpp and other plugins that depend of them. I did a class pluginex more resemble for classes of std.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,612,2019-04-17T12:53:51Z,2019-04-18T15:02:30Z,2019-04-18T15:02:35Z,MERGED,True,1558,220,12,https://github.com/sifurov,New plugin WMIMon,1,[],https://github.com/tklengyel/drakvuf/pull/612,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/612#issuecomment-484546989,"New plugin WMIMon that is monitor a basic WMI requests as IWbemlocator::ConnectServer, IWbemServices::ExecQuery, IWbemServices::GetObject, IWbemServices::ExecMethod. But only for x64 platform. We found a bug a rekall profile for syswow64/ole32.dll. Also I change a plugins_ex.h and plugins_ex.cpp and other plugins that depend of them. I did a class pluginex more resemble for classes of std.",Thanks!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,614,2019-04-17T21:35:28Z,2019-05-07T20:43:10Z,2019-05-07T20:43:10Z,CLOSED,False,2,2,1,https://github.com/wmliang,enable and disable multiple plugin,1,[],https://github.com/tklengyel/drakvuf/pull/614,https://github.com/wmliang,1,https://github.com/tklengyel/drakvuf/pull/614,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,614,2019-04-17T21:35:28Z,2019-05-07T20:43:10Z,2019-05-07T20:43:10Z,CLOSED,False,2,2,1,https://github.com/wmliang,enable and disable multiple plugin,1,[],https://github.com/tklengyel/drakvuf/pull/614,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/614#issuecomment-484270441,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,614,2019-04-17T21:35:28Z,2019-05-07T20:43:10Z,2019-05-07T20:43:10Z,CLOSED,False,2,2,1,https://github.com/wmliang,enable and disable multiple plugin,1,[],https://github.com/tklengyel/drakvuf/pull/614,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/614#issuecomment-484282616,,I'm not sure about this.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,614,2019-04-17T21:35:28Z,2019-05-07T20:43:10Z,2019-05-07T20:43:10Z,CLOSED,False,2,2,1,https://github.com/wmliang,enable and disable multiple plugin,1,[],https://github.com/tklengyel/drakvuf/pull/614,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/614#issuecomment-490247774,,"I prefer to have each enable/disable bit explicitly marked with an opt flag -x or -a. So thanks, but for now I'm going to pass on this addition.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,616,2019-04-18T12:25:56Z,2019-04-22T15:40:48Z,2019-04-24T12:47:46Z,MERGED,True,896,81,7,https://github.com/skvl,filetracer: Print ACLs,1,[],https://github.com/tklengyel/drakvuf/pull/616,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/616,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,616,2019-04-18T12:25:56Z,2019-04-22T15:40:48Z,2019-04-24T12:47:46Z,MERGED,True,896,81,7,https://github.com/skvl,filetracer: Print ACLs,1,[],https://github.com/tklengyel/drakvuf/pull/616,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/616#issuecomment-484483841,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,616,2019-04-18T12:25:56Z,2019-04-22T15:40:48Z,2019-04-24T12:47:46Z,MERGED,True,896,81,7,https://github.com/skvl,filetracer: Print ACLs,1,[],https://github.com/tklengyel/drakvuf/pull/616,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/616#issuecomment-484539047,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,616,2019-04-18T12:25:56Z,2019-04-22T15:40:48Z,2019-04-24T12:47:46Z,MERGED,True,896,81,7,https://github.com/skvl,filetracer: Print ACLs,1,[],https://github.com/tklengyel/drakvuf/pull/616,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/616#issuecomment-485031656,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,617,2019-04-19T12:11:09Z,2019-04-22T15:41:19Z,2019-04-24T12:47:46Z,MERGED,True,39,0,1,https://github.com/skvl,Print process list on procmon plugin start,2,[],https://github.com/tklengyel/drakvuf/pull/617,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/617,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,617,2019-04-19T12:11:09Z,2019-04-22T15:41:19Z,2019-04-24T12:47:46Z,MERGED,True,39,0,1,https://github.com/skvl,Print process list on procmon plugin start,2,[],https://github.com/tklengyel/drakvuf/pull/617,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/617#issuecomment-484875009,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,617,2019-04-19T12:11:09Z,2019-04-22T15:41:19Z,2019-04-24T12:47:46Z,MERGED,True,39,0,1,https://github.com/skvl,Print process list on procmon plugin start,2,[],https://github.com/tklengyel/drakvuf/pull/617,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/617#issuecomment-485035520,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,618,2019-04-19T16:44:59Z,2019-04-23T00:35:17Z,2019-04-24T12:47:46Z,MERGED,True,101,16,3,https://github.com/skvl,filetracer: parse ACL flags,5,[],https://github.com/tklengyel/drakvuf/pull/618,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/618,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,618,2019-04-19T16:44:59Z,2019-04-23T00:35:17Z,2019-04-24T12:47:46Z,MERGED,True,101,16,3,https://github.com/skvl,filetracer: parse ACL flags,5,[],https://github.com/tklengyel/drakvuf/pull/618,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/618#issuecomment-484953302,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,618,2019-04-19T16:44:59Z,2019-04-23T00:35:17Z,2019-04-24T12:47:46Z,MERGED,True,101,16,3,https://github.com/skvl,filetracer: parse ACL flags,5,[],https://github.com/tklengyel/drakvuf/pull/618,https://github.com/skvl,3,https://github.com/tklengyel/drakvuf/pull/618#issuecomment-485366467,,"@tklengyel, this PR extends #616. Fill free to accept this one instead of previous.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,618,2019-04-19T16:44:59Z,2019-04-23T00:35:17Z,2019-04-24T12:47:46Z,MERGED,True,101,16,3,https://github.com/skvl,filetracer: parse ACL flags,5,[],https://github.com/tklengyel/drakvuf/pull/618,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/618#issuecomment-485453680,,@skvl Please rebase on master,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,618,2019-04-19T16:44:59Z,2019-04-23T00:35:17Z,2019-04-24T12:47:46Z,MERGED,True,101,16,3,https://github.com/skvl,filetracer: parse ACL flags,5,[],https://github.com/tklengyel/drakvuf/pull/618,https://github.com/skvl,5,https://github.com/tklengyel/drakvuf/pull/618#issuecomment-485489867,,"@tklengyel, done.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,618,2019-04-19T16:44:59Z,2019-04-23T00:35:17Z,2019-04-24T12:47:46Z,MERGED,True,101,16,3,https://github.com/skvl,filetracer: parse ACL flags,5,[],https://github.com/tklengyel/drakvuf/pull/618,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/618#issuecomment-485590072,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,619,2019-04-24T13:59:01Z,2019-04-25T13:53:15Z,2019-04-26T11:30:31Z,MERGED,True,61,4,2,https://github.com/skvl,dkommon: Monitor writes to zero page,1,[],https://github.com/tklengyel/drakvuf/pull/619,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/619,Such writes have been used in the past in CVEs like CVE-2014-4113.,Such writes have been used in the past in CVEs like CVE-2014-4113.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,619,2019-04-24T13:59:01Z,2019-04-25T13:53:15Z,2019-04-26T11:30:31Z,MERGED,True,61,4,2,https://github.com/skvl,dkommon: Monitor writes to zero page,1,[],https://github.com/tklengyel/drakvuf/pull/619,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/619#issuecomment-486244785,Such writes have been used in the past in CVEs like CVE-2014-4113.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,619,2019-04-24T13:59:01Z,2019-04-25T13:53:15Z,2019-04-26T11:30:31Z,MERGED,True,61,4,2,https://github.com/skvl,dkommon: Monitor writes to zero page,1,[],https://github.com/tklengyel/drakvuf/pull/619,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/619#issuecomment-486260975,Such writes have been used in the past in CVEs like CVE-2014-4113.,Should this be a separate plugin?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,619,2019-04-24T13:59:01Z,2019-04-25T13:53:15Z,2019-04-26T11:30:31Z,MERGED,True,61,4,2,https://github.com/skvl,dkommon: Monitor writes to zero page,1,[],https://github.com/tklengyel/drakvuf/pull/619,https://github.com/skvl,4,https://github.com/tklengyel/drakvuf/pull/619#issuecomment-486276771,Such writes have been used in the past in CVEs like CVE-2014-4113.,I think we could leave it here because this triggers OS kernel to modify internal structures to grant SYSTEM privileges (see CVE-2014-4113),True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,619,2019-04-24T13:59:01Z,2019-04-25T13:53:15Z,2019-04-26T11:30:31Z,MERGED,True,61,4,2,https://github.com/skvl,dkommon: Monitor writes to zero page,1,[],https://github.com/tklengyel/drakvuf/pull/619,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/619#issuecomment-486282383,Such writes have been used in the past in CVEs like CVE-2014-4113.,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,620,2019-04-25T06:39:34Z,2019-04-26T12:25:44Z,2019-05-08T09:10:23Z,MERGED,True,75,0,6,https://github.com/skvl,configure: Enable building with sanitizers,1,[],https://github.com/tklengyel/drakvuf/pull/620,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/620,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,620,2019-04-25T06:39:34Z,2019-04-26T12:25:44Z,2019-05-08T09:10:23Z,MERGED,True,75,0,6,https://github.com/skvl,configure: Enable building with sanitizers,1,[],https://github.com/tklengyel/drakvuf/pull/620,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/620#issuecomment-486539322,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,620,2019-04-25T06:39:34Z,2019-04-26T12:25:44Z,2019-05-08T09:10:23Z,MERGED,True,75,0,6,https://github.com/skvl,configure: Enable building with sanitizers,1,[],https://github.com/tklengyel/drakvuf/pull/620,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/620#issuecomment-486674809,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,624,2019-04-30T20:31:17Z,2019-05-01T02:06:59Z,2019-05-07T20:32:06Z,CLOSED,False,276,236,18,https://github.com/tklengyel,Don't automatically trap on MOV-TO-CR3,5,[],https://github.com/tklengyel/drakvuf/pull/624,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/624,"It can create severe overhead on certain systems.
Fixes #621","It can create severe overhead on certain systems.
Fixes #621",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,624,2019-04-30T20:31:17Z,2019-05-01T02:06:59Z,2019-05-07T20:32:06Z,CLOSED,False,276,236,18,https://github.com/tklengyel,Don't automatically trap on MOV-TO-CR3,5,[],https://github.com/tklengyel/drakvuf/pull/624,https://github.com/psfrolov,2,https://github.com/tklengyel/drakvuf/pull/624#issuecomment-490068478,"It can create severe overhead on certain systems.
Fixes #621","@tklengyel, the issue is closed but the code is not in master branch yet. Is it intentional?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,624,2019-04-30T20:31:17Z,2019-05-01T02:06:59Z,2019-05-07T20:32:06Z,CLOSED,False,276,236,18,https://github.com/tklengyel,Don't automatically trap on MOV-TO-CR3,5,[],https://github.com/tklengyel/drakvuf/pull/624,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/624#issuecomment-490244098,"It can create severe overhead on certain systems.
Fixes #621",@arkfps The issue is still open. I only closed this PR because there are deeper level fixes necessary to get this in working order. Likely to be done with Xen 4.13,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,625,2019-05-06T14:09:14Z,2019-07-15T23:35:30Z,2020-05-13T13:01:50Z,CLOSED,False,469,791,11,https://github.com/skvl,Switch to CMake,5,[],https://github.com/tklengyel/drakvuf/pull/625,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/625,"@tklengyel, this is ""work in progress"":

it successfully builds on Ubuntu 18.04

Travis CI uses Ubuntu 16.04 which misses libxentoollog and libxlutils. I don't know how it builds with autotools.
In .travis.yml LibVMI is installed in some path which I don't know how to search.


I have disabled -Werror because multiple warnings which I didn't fixed yet
it is possible that I have forgotten something...

Could you please help me with the branch.
Thank You.","@tklengyel, this is ""work in progress"":

it successfully builds on Ubuntu 18.04

Travis CI uses Ubuntu 16.04 which misses libxentoollog and libxlutils. I don't know how it builds with autotools.
In .travis.yml LibVMI is installed in some path which I don't know how to search.


I have disabled -Werror because multiple warnings which I didn't fixed yet
it is possible that I have forgotten something...

Could you please help me with the branch.
Thank You.",True,{'THUMBS_UP': ['https://github.com/Wenzel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,625,2019-05-06T14:09:14Z,2019-07-15T23:35:30Z,2020-05-13T13:01:50Z,CLOSED,False,469,791,11,https://github.com/skvl,Switch to CMake,5,[],https://github.com/tklengyel/drakvuf/pull/625,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/625#issuecomment-489634239,"@tklengyel, this is ""work in progress"":

it successfully builds on Ubuntu 18.04

Travis CI uses Ubuntu 16.04 which misses libxentoollog and libxlutils. I don't know how it builds with autotools.
In .travis.yml LibVMI is installed in some path which I don't know how to search.


I have disabled -Werror because multiple warnings which I didn't fixed yet
it is possible that I have forgotten something...

Could you please help me with the branch.
Thank You.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,625,2019-05-06T14:09:14Z,2019-07-15T23:35:30Z,2020-05-13T13:01:50Z,CLOSED,False,469,791,11,https://github.com/skvl,Switch to CMake,5,[],https://github.com/tklengyel/drakvuf/pull/625,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/625#issuecomment-489661844,"@tklengyel, this is ""work in progress"":

it successfully builds on Ubuntu 18.04

Travis CI uses Ubuntu 16.04 which misses libxentoollog and libxlutils. I don't know how it builds with autotools.
In .travis.yml LibVMI is installed in some path which I don't know how to search.


I have disabled -Werror because multiple warnings which I didn't fixed yet
it is possible that I have forgotten something...

Could you please help me with the branch.
Thank You.","@skvl what's the benefit of switching to cmake? I'm personally am not a big fan of it so unless there is a clear and obvious ""win"" for switching I'm unlikely to accept this PR",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,625,2019-05-06T14:09:14Z,2019-07-15T23:35:30Z,2020-05-13T13:01:50Z,CLOSED,False,469,791,11,https://github.com/skvl,Switch to CMake,5,[],https://github.com/tklengyel/drakvuf/pull/625,https://github.com/skvl,4,https://github.com/tklengyel/drakvuf/pull/625#issuecomment-489928948,"@tklengyel, this is ""work in progress"":

it successfully builds on Ubuntu 18.04

Travis CI uses Ubuntu 16.04 which misses libxentoollog and libxlutils. I don't know how it builds with autotools.
In .travis.yml LibVMI is installed in some path which I don't know how to search.


I have disabled -Werror because multiple warnings which I didn't fixed yet
it is possible that I have forgotten something...

Could you please help me with the branch.
Thank You.","I think we will benifit from switching to more clear and supportable approach.
Also this would help supporting Windows builds after some work. As I see there is some part of community wishing this (see LibVMI issue).
It will also aid in test writing.
ccmake is a very helpful tool for configuration.

@Wenzel could you help with this branch please?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,625,2019-05-06T14:09:14Z,2019-07-15T23:35:30Z,2020-05-13T13:01:50Z,CLOSED,False,469,791,11,https://github.com/skvl,Switch to CMake,5,[],https://github.com/tklengyel/drakvuf/pull/625,https://github.com/v-p-b,5,https://github.com/tklengyel/drakvuf/pull/625#issuecomment-490114109,"@tklengyel, this is ""work in progress"":

it successfully builds on Ubuntu 18.04

Travis CI uses Ubuntu 16.04 which misses libxentoollog and libxlutils. I don't know how it builds with autotools.
In .travis.yml LibVMI is installed in some path which I don't know how to search.


I have disabled -Werror because multiple warnings which I didn't fixed yet
it is possible that I have forgotten something...

Could you please help me with the branch.
Thank You.","Last time I tried to integrate DRAKVUF into something (ivmi?) having a CMake build config would've spared me tons of work, so I would give a +1 to this. Can't we have both types, so users can choose?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,625,2019-05-06T14:09:14Z,2019-07-15T23:35:30Z,2020-05-13T13:01:50Z,CLOSED,False,469,791,11,https://github.com/skvl,Switch to CMake,5,[],https://github.com/tklengyel/drakvuf/pull/625,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/625#issuecomment-490244933,"@tklengyel, this is ""work in progress"":

it successfully builds on Ubuntu 18.04

Travis CI uses Ubuntu 16.04 which misses libxentoollog and libxlutils. I don't know how it builds with autotools.
In .travis.yml LibVMI is installed in some path which I don't know how to search.


I have disabled -Werror because multiple warnings which I didn't fixed yet
it is possible that I have forgotten something...

Could you please help me with the branch.
Thank You.","Also this would help supporting Windows builds after some work.

That's a moot point given you can only run DRAKVUF from a PV/H Linux guest.

It will also aid in test writing.

What type of tests? What prevents those tests being written now?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,625,2019-05-06T14:09:14Z,2019-07-15T23:35:30Z,2020-05-13T13:01:50Z,CLOSED,False,469,791,11,https://github.com/skvl,Switch to CMake,5,[],https://github.com/tklengyel/drakvuf/pull/625,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/625#issuecomment-490245523,"@tklengyel, this is ""work in progress"":

it successfully builds on Ubuntu 18.04

Travis CI uses Ubuntu 16.04 which misses libxentoollog and libxlutils. I don't know how it builds with autotools.
In .travis.yml LibVMI is installed in some path which I don't know how to search.


I have disabled -Werror because multiple warnings which I didn't fixed yet
it is possible that I have forgotten something...

Could you please help me with the branch.
Thank You.","Last time I tried to integrate DRAKVUF into something (ivmi?) having a CMake build config would've spared me tons of work, so I would give a +1 to this. Can't we have both types, so users can choose?

That's perhaps an option. My problem is that I don't know enough about CMake to feel comfortable supporting that on the long run. Perhaps if there is a separate repository - not maintained by me - that applies the CMake glue on top of the existing repo for those that prefer cmake, that would be a better route.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,625,2019-05-06T14:09:14Z,2019-07-15T23:35:30Z,2020-05-13T13:01:50Z,CLOSED,False,469,791,11,https://github.com/skvl,Switch to CMake,5,[],https://github.com/tklengyel/drakvuf/pull/625,https://github.com/skvl,8,https://github.com/tklengyel/drakvuf/pull/625#issuecomment-490502705,"@tklengyel, this is ""work in progress"":

it successfully builds on Ubuntu 18.04

Travis CI uses Ubuntu 16.04 which misses libxentoollog and libxlutils. I don't know how it builds with autotools.
In .travis.yml LibVMI is installed in some path which I don't know how to search.


I have disabled -Werror because multiple warnings which I didn't fixed yet
it is possible that I have forgotten something...

Could you please help me with the branch.
Thank You.","That's a moot point given you can only run DRAKVUF from a PV/H Linux guest.

I think I agree with you. Though it would be possible to use Drakvuf with VirtualBox once LibVMI driver be released. Also Hyper-V API looks good.

What type of tests? What prevents those tests being written now?

CMake provides good Google Test integration. And CDash looks good.

My problem is that I don't know enough about CMake to feel comfortable supporting that on the long run.

A week ago I knew nothing about it :)

Perhaps if there is a separate repository - not maintained by me - that applies the CMake glue on top of the existing repo for those that prefer cmake, that would be a better route.

It would be odd and painful to synchronize them.",True,{'THUMBS_UP': ['https://github.com/Wenzel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,625,2019-05-06T14:09:14Z,2019-07-15T23:35:30Z,2020-05-13T13:01:50Z,CLOSED,False,469,791,11,https://github.com/skvl,Switch to CMake,5,[],https://github.com/tklengyel/drakvuf/pull/625,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/625#issuecomment-490507329,"@tklengyel, this is ""work in progress"":

it successfully builds on Ubuntu 18.04

Travis CI uses Ubuntu 16.04 which misses libxentoollog and libxlutils. I don't know how it builds with autotools.
In .travis.yml LibVMI is installed in some path which I don't know how to search.


I have disabled -Werror because multiple warnings which I didn't fixed yet
it is possible that I have forgotten something...

Could you please help me with the branch.
Thank You.","I think I agree with you. Though it would be possible to use Drakvuf with VirtualBox once LibVMI driver be released. Also Hyper-V API looks good.

Unlikely either of these hypervisors will have the necessary features to run DRAKVUF. I don't expect that to happen at all.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,625,2019-05-06T14:09:14Z,2019-07-15T23:35:30Z,2020-05-13T13:01:50Z,CLOSED,False,469,791,11,https://github.com/skvl,Switch to CMake,5,[],https://github.com/tklengyel/drakvuf/pull/625,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/625#issuecomment-490511506,"@tklengyel, this is ""work in progress"":

it successfully builds on Ubuntu 18.04

Travis CI uses Ubuntu 16.04 which misses libxentoollog and libxlutils. I don't know how it builds with autotools.
In .travis.yml LibVMI is installed in some path which I don't know how to search.


I have disabled -Werror because multiple warnings which I didn't fixed yet
it is possible that I have forgotten something...

Could you please help me with the branch.
Thank You.","CMake provides good Google Test integration. And CDash looks good.

Those are hypotheticals. If the PR that switches the build to cmake doesn't have a quantifiable win I'm not going to merge it on a guess that it may be useful in some future test integration. Either add those test integrations and show how it improves code coverage/review/development of new features or the chances of this going in is very small.",True,{'THUMBS_UP': ['https://github.com/skvl']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,625,2019-05-06T14:09:14Z,2019-07-15T23:35:30Z,2020-05-13T13:01:50Z,CLOSED,False,469,791,11,https://github.com/skvl,Switch to CMake,5,[],https://github.com/tklengyel/drakvuf/pull/625,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/625#issuecomment-511607806,"@tklengyel, this is ""work in progress"":

it successfully builds on Ubuntu 18.04

Travis CI uses Ubuntu 16.04 which misses libxentoollog and libxlutils. I don't know how it builds with autotools.
In .travis.yml LibVMI is installed in some path which I don't know how to search.


I have disabled -Werror because multiple warnings which I didn't fixed yet
it is possible that I have forgotten something...

Could you please help me with the branch.
Thank You.",@skvl I'm closing this PR for now.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,626,2019-05-06T19:44:39Z,2019-05-06T20:16:15Z,2019-05-06T20:16:18Z,MERGED,True,5,0,1,https://github.com/tklengyel,Add a VM pause for shadow copy refresh operation,1,[],https://github.com/tklengyel/drakvuf/pull/626,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/626,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,627,2019-05-07T08:42:14Z,2019-05-07T20:38:55Z,2020-05-13T13:01:54Z,MERGED,True,7,0,1,https://github.com/skvl,Check for bad ACEs while parsing ACLs,1,[],https://github.com/tklengyel/drakvuf/pull/627,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/627,This prevents endless loops and out-of-bound reads.,This prevents endless loops and out-of-bound reads.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,627,2019-05-07T08:42:14Z,2019-05-07T20:38:55Z,2020-05-13T13:01:54Z,MERGED,True,7,0,1,https://github.com/skvl,Check for bad ACEs while parsing ACLs,1,[],https://github.com/tklengyel/drakvuf/pull/627,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/627#issuecomment-490243631,This prevents endless loops and out-of-bound reads.,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,627,2019-05-07T08:42:14Z,2019-05-07T20:38:55Z,2020-05-13T13:01:54Z,MERGED,True,7,0,1,https://github.com/skvl,Check for bad ACEs while parsing ACLs,1,[],https://github.com/tklengyel/drakvuf/pull/627,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/627#issuecomment-490243647,This prevents endless loops and out-of-bound reads.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,628,2019-05-10T03:06:38Z,2019-05-10T03:34:57Z,2019-05-20T02:29:17Z,MERGED,True,1,1,1,https://github.com/tklengyel,Update LibVMI,1,[],https://github.com/tklengyel/drakvuf/pull/628,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/628,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,630,2019-05-10T15:37:53Z,2019-05-10T16:41:17Z,2019-05-20T02:29:15Z,MERGED,True,8,2,2,https://github.com/tklengyel,Fix memory leaks in crashmon,1,[],https://github.com/tklengyel/drakvuf/pull/630,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/630,/cc @skvl,/cc @skvl,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,633,2019-05-16T15:19:46Z,2019-05-16T16:34:33Z,2019-05-16T16:34:36Z,MERGED,True,314,256,18,https://github.com/tklengyel,Don't automatically trap MOV-TO-CR3,1,[],https://github.com/tklengyel/drakvuf/pull/633,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/633,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,634,2019-05-20T00:31:53Z,2019-05-20T00:46:14Z,2019-05-20T00:46:17Z,MERGED,True,17,12,6,https://github.com/tklengyel,Run scan-build on plugins in Travis-CI,2,[],https://github.com/tklengyel/drakvuf/pull/634,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/634,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,635,2019-05-20T02:00:38Z,2019-05-20T02:28:18Z,2019-05-20T02:28:20Z,MERGED,True,692,125,22,https://github.com/tklengyel,Add extra compiler checks to plugins,1,[],https://github.com/tklengyel/drakvuf/pull/635,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/635,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,649,2019-07-15T12:19:16Z,2019-07-15T13:10:09Z,2019-07-15T13:10:12Z,MERGED,True,42,14,1,https://github.com/tklengyel,Fix getting the process name on Linux when in usermode,1,[],https://github.com/tklengyel/drakvuf/pull/649,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/649,Fixes #613,Fixes #613,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,650,2019-07-15T14:19:06Z,2019-07-16T07:40:36Z,2019-07-16T07:40:36Z,CLOSED,False,67,1,5,https://github.com/alexmocha,Extends syscalls plugin to be able to dump input buffer of NtWriteVirtualMemory,1,[],https://github.com/tklengyel/drakvuf/pull/650,https://github.com/alexmocha,1,https://github.com/tklengyel/drakvuf/pull/650,"This adds the possibility to the syscalls plugin to dump content of memory written by the NtWriteVirtualMemory syscall.
This option could be enabled by adding ""-E"" when launching drakvuf.","This adds the possibility to the syscalls plugin to dump content of memory written by the NtWriteVirtualMemory syscall.
This option could be enabled by adding ""-E"" when launching drakvuf.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,650,2019-07-15T14:19:06Z,2019-07-16T07:40:36Z,2019-07-16T07:40:36Z,CLOSED,False,67,1,5,https://github.com/alexmocha,Extends syscalls plugin to be able to dump input buffer of NtWriteVirtualMemory,1,[],https://github.com/tklengyel/drakvuf/pull/650,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/650#issuecomment-511421943,"This adds the possibility to the syscalls plugin to dump content of memory written by the NtWriteVirtualMemory syscall.
This option could be enabled by adding ""-E"" when launching drakvuf.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,650,2019-07-15T14:19:06Z,2019-07-16T07:40:36Z,2019-07-16T07:40:36Z,CLOSED,False,67,1,5,https://github.com/alexmocha,Extends syscalls plugin to be able to dump input buffer of NtWriteVirtualMemory,1,[],https://github.com/tklengyel/drakvuf/pull/650,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/650#issuecomment-511433036,"This adds the possibility to the syscalls plugin to dump content of memory written by the NtWriteVirtualMemory syscall.
This option could be enabled by adding ""-E"" when launching drakvuf.","@alexmocha Thanks for the contribution. I think this should be a standalone plugin, not an extension of syscalls.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,650,2019-07-15T14:19:06Z,2019-07-16T07:40:36Z,2019-07-16T07:40:36Z,CLOSED,False,67,1,5,https://github.com/alexmocha,Extends syscalls plugin to be able to dump input buffer of NtWriteVirtualMemory,1,[],https://github.com/tklengyel/drakvuf/pull/650,https://github.com/alexmocha,4,https://github.com/tklengyel/drakvuf/pull/650#issuecomment-511701366,"This adds the possibility to the syscalls plugin to dump content of memory written by the NtWriteVirtualMemory syscall.
This option could be enabled by adding ""-E"" when launching drakvuf.","@tklengyel Ok, I will develop a standalone plugin for this feature",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,651,2019-07-16T13:26:21Z,2019-07-16T19:41:12Z,2019-07-16T21:59:45Z,MERGED,True,184,0,8,https://github.com/icedevml,Implement win_find_mmvad in libdrakvuf,4,[],https://github.com/tklengyel/drakvuf/pull/651,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/651,"The drakvuf_find_mmvad function is capable of seeking through Windows MMVAD tree. It could find VAD node corresponding to the provided virtual address existing in particular process.
The user is able to obtain the basic information about allocation (i.e. starting and ending virtual page number), flags (_MMVAD_FLAGS bitfield) and a pointer to a file name, if the allocation is backed by some file. As this is the case of most DLL modules, it allows to determine the origin of a pointer, so for instance you can easily tell that some raw pointer like 0xFEEE1234 is actually kernel32.dll base + 0x4567 offset.","The drakvuf_find_mmvad function is capable of seeking through Windows MMVAD tree. It could find VAD node corresponding to the provided virtual address existing in particular process.
The user is able to obtain the basic information about allocation (i.e. starting and ending virtual page number), flags (_MMVAD_FLAGS bitfield) and a pointer to a file name, if the allocation is backed by some file. As this is the case of most DLL modules, it allows to determine the origin of a pointer, so for instance you can easily tell that some raw pointer like 0xFEEE1234 is actually kernel32.dll base + 0x4567 offset.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,651,2019-07-16T13:26:21Z,2019-07-16T19:41:12Z,2019-07-16T21:59:45Z,MERGED,True,184,0,8,https://github.com/icedevml,Implement win_find_mmvad in libdrakvuf,4,[],https://github.com/tklengyel/drakvuf/pull/651,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/651#issuecomment-511814899,"The drakvuf_find_mmvad function is capable of seeking through Windows MMVAD tree. It could find VAD node corresponding to the provided virtual address existing in particular process.
The user is able to obtain the basic information about allocation (i.e. starting and ending virtual page number), flags (_MMVAD_FLAGS bitfield) and a pointer to a file name, if the allocation is backed by some file. As this is the case of most DLL modules, it allows to determine the origin of a pointer, so for instance you can easily tell that some raw pointer like 0xFEEE1234 is actually kernel32.dll base + 0x4567 offset.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,651,2019-07-16T13:26:21Z,2019-07-16T19:41:12Z,2019-07-16T21:59:45Z,MERGED,True,184,0,8,https://github.com/icedevml,Implement win_find_mmvad in libdrakvuf,4,[],https://github.com/tklengyel/drakvuf/pull/651,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/651#issuecomment-511819009,"The drakvuf_find_mmvad function is capable of seeking through Windows MMVAD tree. It could find VAD node corresponding to the provided virtual address existing in particular process.
The user is able to obtain the basic information about allocation (i.e. starting and ending virtual page number), flags (_MMVAD_FLAGS bitfield) and a pointer to a file name, if the allocation is backed by some file. As this is the case of most DLL modules, it allows to determine the origin of a pointer, so for instance you can easily tell that some raw pointer like 0xFEEE1234 is actually kernel32.dll base + 0x4567 offset.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,651,2019-07-16T13:26:21Z,2019-07-16T19:41:12Z,2019-07-16T21:59:45Z,MERGED,True,184,0,8,https://github.com/icedevml,Implement win_find_mmvad in libdrakvuf,4,[],https://github.com/tklengyel/drakvuf/pull/651,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/651#issuecomment-511919686,"The drakvuf_find_mmvad function is capable of seeking through Windows MMVAD tree. It could find VAD node corresponding to the provided virtual address existing in particular process.
The user is able to obtain the basic information about allocation (i.e. starting and ending virtual page number), flags (_MMVAD_FLAGS bitfield) and a pointer to a file name, if the allocation is backed by some file. As this is the case of most DLL modules, it allows to determine the origin of a pointer, so for instance you can easily tell that some raw pointer like 0xFEEE1234 is actually kernel32.dll base + 0x4567 offset.","Ok, I think it's ready. I will add some usage in next PR which will implement a new plugin for memory dumping.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,651,2019-07-16T13:26:21Z,2019-07-16T19:41:12Z,2019-07-16T21:59:45Z,MERGED,True,184,0,8,https://github.com/icedevml,Implement win_find_mmvad in libdrakvuf,4,[],https://github.com/tklengyel/drakvuf/pull/651,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/651#issuecomment-511957241,"The drakvuf_find_mmvad function is capable of seeking through Windows MMVAD tree. It could find VAD node corresponding to the provided virtual address existing in particular process.
The user is able to obtain the basic information about allocation (i.e. starting and ending virtual page number), flags (_MMVAD_FLAGS bitfield) and a pointer to a file name, if the allocation is backed by some file. As this is the case of most DLL modules, it allows to determine the origin of a pointer, so for instance you can easily tell that some raw pointer like 0xFEEE1234 is actually kernel32.dll base + 0x4567 offset.","Looks good, thanks!",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,652,2019-07-17T17:27:58Z,2019-07-19T12:49:16Z,2019-07-19T12:49:16Z,MERGED,True,480,1,8,https://github.com/icedevml,Implement basic memory dumping plugin,13,[],https://github.com/tklengyel/drakvuf/pull/652,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/652,"Implements a new Windows plugin called memdump which reacts when somebody calls NtFreeVirtualMemory on something that looks like a binary - very simple heuristic based on presence of MZ magic in the first two bytes of the memory block. A memory dump is stored to the location pointed by --memdump-dir.
Exemplary sample for which this works:
423d8a075a52a44ae43287d48ec46fa60eb9b7da15a163627bb3e7a8e1f67b43
Note: it also exhibits some interesting behavior of crashing the whole VM and this is probably by design.
For this particular one, a UPXed binary is dumped which could be then decompressed using upx -d. The resulting file contains unpacked code of the malware which is easy to analyze statically.
Note about dump file name: Exemplary dump name 1752-0x1e10000-0001.dmp meets the format <pid>_<dump_base_address>_<sequential_number>.dmp. The PID may be useful when confronted against DRAKVUF logs generated by other plugins, dump base address may be an important hint when disassembling. The dump file itself doesn't contain any metadata, just raw bytes.","Implements a new Windows plugin called memdump which reacts when somebody calls NtFreeVirtualMemory on something that looks like a binary - very simple heuristic based on presence of MZ magic in the first two bytes of the memory block. A memory dump is stored to the location pointed by --memdump-dir.
Exemplary sample for which this works:
423d8a075a52a44ae43287d48ec46fa60eb9b7da15a163627bb3e7a8e1f67b43
Note: it also exhibits some interesting behavior of crashing the whole VM and this is probably by design.
For this particular one, a UPXed binary is dumped which could be then decompressed using upx -d. The resulting file contains unpacked code of the malware which is easy to analyze statically.
Note about dump file name: Exemplary dump name 1752-0x1e10000-0001.dmp meets the format <pid>_<dump_base_address>_<sequential_number>.dmp. The PID may be useful when confronted against DRAKVUF logs generated by other plugins, dump base address may be an important hint when disassembling. The dump file itself doesn't contain any metadata, just raw bytes.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,652,2019-07-17T17:27:58Z,2019-07-19T12:49:16Z,2019-07-19T12:49:16Z,MERGED,True,480,1,8,https://github.com/icedevml,Implement basic memory dumping plugin,13,[],https://github.com/tklengyel/drakvuf/pull/652,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/652#issuecomment-512441435,"Implements a new Windows plugin called memdump which reacts when somebody calls NtFreeVirtualMemory on something that looks like a binary - very simple heuristic based on presence of MZ magic in the first two bytes of the memory block. A memory dump is stored to the location pointed by --memdump-dir.
Exemplary sample for which this works:
423d8a075a52a44ae43287d48ec46fa60eb9b7da15a163627bb3e7a8e1f67b43
Note: it also exhibits some interesting behavior of crashing the whole VM and this is probably by design.
For this particular one, a UPXed binary is dumped which could be then decompressed using upx -d. The resulting file contains unpacked code of the malware which is easy to analyze statically.
Note about dump file name: Exemplary dump name 1752-0x1e10000-0001.dmp meets the format <pid>_<dump_base_address>_<sequential_number>.dmp. The PID may be useful when confronted against DRAKVUF logs generated by other plugins, dump base address may be an important hint when disassembling. The dump file itself doesn't contain any metadata, just raw bytes.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,652,2019-07-17T17:27:58Z,2019-07-19T12:49:16Z,2019-07-19T12:49:16Z,MERGED,True,480,1,8,https://github.com/icedevml,Implement basic memory dumping plugin,13,[],https://github.com/tklengyel/drakvuf/pull/652,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/652#issuecomment-512491078,"Implements a new Windows plugin called memdump which reacts when somebody calls NtFreeVirtualMemory on something that looks like a binary - very simple heuristic based on presence of MZ magic in the first two bytes of the memory block. A memory dump is stored to the location pointed by --memdump-dir.
Exemplary sample for which this works:
423d8a075a52a44ae43287d48ec46fa60eb9b7da15a163627bb3e7a8e1f67b43
Note: it also exhibits some interesting behavior of crashing the whole VM and this is probably by design.
For this particular one, a UPXed binary is dumped which could be then decompressed using upx -d. The resulting file contains unpacked code of the malware which is easy to analyze statically.
Note about dump file name: Exemplary dump name 1752-0x1e10000-0001.dmp meets the format <pid>_<dump_base_address>_<sequential_number>.dmp. The PID may be useful when confronted against DRAKVUF logs generated by other plugins, dump base address may be an important hint when disassembling. The dump file itself doesn't contain any metadata, just raw bytes.",Beware that LibVMI upgrade is involved in this PR as to provide the required vmi_mmap_guest function. This may affect the operation of the whole DRAKVUF.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,652,2019-07-17T17:27:58Z,2019-07-19T12:49:16Z,2019-07-19T12:49:16Z,MERGED,True,480,1,8,https://github.com/icedevml,Implement basic memory dumping plugin,13,[],https://github.com/tklengyel/drakvuf/pull/652,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/652#issuecomment-512505501,"Implements a new Windows plugin called memdump which reacts when somebody calls NtFreeVirtualMemory on something that looks like a binary - very simple heuristic based on presence of MZ magic in the first two bytes of the memory block. A memory dump is stored to the location pointed by --memdump-dir.
Exemplary sample for which this works:
423d8a075a52a44ae43287d48ec46fa60eb9b7da15a163627bb3e7a8e1f67b43
Note: it also exhibits some interesting behavior of crashing the whole VM and this is probably by design.
For this particular one, a UPXed binary is dumped which could be then decompressed using upx -d. The resulting file contains unpacked code of the malware which is easy to analyze statically.
Note about dump file name: Exemplary dump name 1752-0x1e10000-0001.dmp meets the format <pid>_<dump_base_address>_<sequential_number>.dmp. The PID may be useful when confronted against DRAKVUF logs generated by other plugins, dump base address may be an important hint when disassembling. The dump file itself doesn't contain any metadata, just raw bytes.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,652,2019-07-17T17:27:58Z,2019-07-19T12:49:16Z,2019-07-19T12:49:16Z,MERGED,True,480,1,8,https://github.com/icedevml,Implement basic memory dumping plugin,13,[],https://github.com/tklengyel/drakvuf/pull/652,https://github.com/icedevml,5,https://github.com/tklengyel/drakvuf/pull/652#issuecomment-512533971,"Implements a new Windows plugin called memdump which reacts when somebody calls NtFreeVirtualMemory on something that looks like a binary - very simple heuristic based on presence of MZ magic in the first two bytes of the memory block. A memory dump is stored to the location pointed by --memdump-dir.
Exemplary sample for which this works:
423d8a075a52a44ae43287d48ec46fa60eb9b7da15a163627bb3e7a8e1f67b43
Note: it also exhibits some interesting behavior of crashing the whole VM and this is probably by design.
For this particular one, a UPXed binary is dumped which could be then decompressed using upx -d. The resulting file contains unpacked code of the malware which is easy to analyze statically.
Note about dump file name: Exemplary dump name 1752-0x1e10000-0001.dmp meets the format <pid>_<dump_base_address>_<sequential_number>.dmp. The PID may be useful when confronted against DRAKVUF logs generated by other plugins, dump base address may be an important hint when disassembling. The dump file itself doesn't contain any metadata, just raw bytes.",Also works with malware sample 749948b4a522bb6b02976a1c807b57c407bacc6a1785432832aa17d676098d8b (nymaim). Gets through the packer and dumps (highly obfuscated) malware core. Good enough to apply some Yara rules on it or conduct further manual analysis.,True,{'ROCKET': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,652,2019-07-17T17:27:58Z,2019-07-19T12:49:16Z,2019-07-19T12:49:16Z,MERGED,True,480,1,8,https://github.com/icedevml,Implement basic memory dumping plugin,13,[],https://github.com/tklengyel/drakvuf/pull/652,https://github.com/icedevml,6,https://github.com/tklengyel/drakvuf/pull/652#issuecomment-512584588,"Implements a new Windows plugin called memdump which reacts when somebody calls NtFreeVirtualMemory on something that looks like a binary - very simple heuristic based on presence of MZ magic in the first two bytes of the memory block. A memory dump is stored to the location pointed by --memdump-dir.
Exemplary sample for which this works:
423d8a075a52a44ae43287d48ec46fa60eb9b7da15a163627bb3e7a8e1f67b43
Note: it also exhibits some interesting behavior of crashing the whole VM and this is probably by design.
For this particular one, a UPXed binary is dumped which could be then decompressed using upx -d. The resulting file contains unpacked code of the malware which is easy to analyze statically.
Note about dump file name: Exemplary dump name 1752-0x1e10000-0001.dmp meets the format <pid>_<dump_base_address>_<sequential_number>.dmp. The PID may be useful when confronted against DRAKVUF logs generated by other plugins, dump base address may be an important hint when disassembling. The dump file itself doesn't contain any metadata, just raw bytes.","A little bit refactored and ready to review. This is pretty limited as per now, but this is just a starting point - we are going to enhance it with some additional tricks in further PRs.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,652,2019-07-17T17:27:58Z,2019-07-19T12:49:16Z,2019-07-19T12:49:16Z,MERGED,True,480,1,8,https://github.com/icedevml,Implement basic memory dumping plugin,13,[],https://github.com/tklengyel/drakvuf/pull/652,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/652#issuecomment-512626825,"Implements a new Windows plugin called memdump which reacts when somebody calls NtFreeVirtualMemory on something that looks like a binary - very simple heuristic based on presence of MZ magic in the first two bytes of the memory block. A memory dump is stored to the location pointed by --memdump-dir.
Exemplary sample for which this works:
423d8a075a52a44ae43287d48ec46fa60eb9b7da15a163627bb3e7a8e1f67b43
Note: it also exhibits some interesting behavior of crashing the whole VM and this is probably by design.
For this particular one, a UPXed binary is dumped which could be then decompressed using upx -d. The resulting file contains unpacked code of the malware which is easy to analyze statically.
Note about dump file name: Exemplary dump name 1752-0x1e10000-0001.dmp meets the format <pid>_<dump_base_address>_<sequential_number>.dmp. The PID may be useful when confronted against DRAKVUF logs generated by other plugins, dump base address may be an important hint when disassembling. The dump file itself doesn't contain any metadata, just raw bytes.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,652,2019-07-17T17:27:58Z,2019-07-19T12:49:16Z,2019-07-19T12:49:16Z,MERGED,True,480,1,8,https://github.com/icedevml,Implement basic memory dumping plugin,13,[],https://github.com/tklengyel/drakvuf/pull/652,https://github.com/icedevml,8,https://github.com/tklengyel/drakvuf/pull/652#issuecomment-512761618,"Implements a new Windows plugin called memdump which reacts when somebody calls NtFreeVirtualMemory on something that looks like a binary - very simple heuristic based on presence of MZ magic in the first two bytes of the memory block. A memory dump is stored to the location pointed by --memdump-dir.
Exemplary sample for which this works:
423d8a075a52a44ae43287d48ec46fa60eb9b7da15a163627bb3e7a8e1f67b43
Note: it also exhibits some interesting behavior of crashing the whole VM and this is probably by design.
For this particular one, a UPXed binary is dumped which could be then decompressed using upx -d. The resulting file contains unpacked code of the malware which is easy to analyze statically.
Note about dump file name: Exemplary dump name 1752-0x1e10000-0001.dmp meets the format <pid>_<dump_base_address>_<sequential_number>.dmp. The PID may be useful when confronted against DRAKVUF logs generated by other plugins, dump base address may be an important hint when disassembling. The dump file itself doesn't contain any metadata, just raw bytes.","Ok, some better printouts:
[MEMDUMP] TIME:1563445605.160227 VCPU:1 CR3:0x70697000,""\Device\HarddiskVolume2\Users\zenvm\AppData\Local\Microsoft\Windows\Temporary Internet Files\Content.IE5\0XPXKWAM\gunwo[1].exe"" SessionID:1 ""NtFreeVirtualMemory"" Reason:""Possible binary detected"" Process:2068 Base:0x490000 Size:94208 File:""(not configured)""
If the --memdump-dir is not provided then file name will be always printed as (not configured), this should be pretty easy to debug if somebody would misconfigure the plugin.
TODO carefully check if the syntax is right for all output formats",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,652,2019-07-17T17:27:58Z,2019-07-19T12:49:16Z,2019-07-19T12:49:16Z,MERGED,True,480,1,8,https://github.com/icedevml,Implement basic memory dumping plugin,13,[],https://github.com/tklengyel/drakvuf/pull/652,https://github.com/icedevml,9,https://github.com/tklengyel/drakvuf/pull/652#issuecomment-512847315,"Implements a new Windows plugin called memdump which reacts when somebody calls NtFreeVirtualMemory on something that looks like a binary - very simple heuristic based on presence of MZ magic in the first two bytes of the memory block. A memory dump is stored to the location pointed by --memdump-dir.
Exemplary sample for which this works:
423d8a075a52a44ae43287d48ec46fa60eb9b7da15a163627bb3e7a8e1f67b43
Note: it also exhibits some interesting behavior of crashing the whole VM and this is probably by design.
For this particular one, a UPXed binary is dumped which could be then decompressed using upx -d. The resulting file contains unpacked code of the malware which is easy to analyze statically.
Note about dump file name: Exemplary dump name 1752-0x1e10000-0001.dmp meets the format <pid>_<dump_base_address>_<sequential_number>.dmp. The PID may be useful when confronted against DRAKVUF logs generated by other plugins, dump base address may be an important hint when disassembling. The dump file itself doesn't contain any metadata, just raw bytes.",All output formats seem to work fine after some adjustments. PR is ready.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,653,2019-07-17T22:13:15Z,2019-07-26T14:47:41Z,2019-08-09T16:55:56Z,MERGED,True,179,0,10,https://github.com/icedevml,Implement win_get_user_stack32/64 - fetch userland esp/rsp from inside kernel,6,[],https://github.com/tklengyel/drakvuf/pull/653,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/653,Implements libdrakvuf methods that allow to obtain userland stack pointers when we break inside a syscall. This allows to perform stack inspection and guess/predict something about what was the cause of the syscall on the userland side. Tool for memdump plugin.,Implements libdrakvuf methods that allow to obtain userland stack pointers when we break inside a syscall. This allows to perform stack inspection and guess/predict something about what was the cause of the syscall on the userland side. Tool for memdump plugin.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,653,2019-07-17T22:13:15Z,2019-07-26T14:47:41Z,2019-08-09T16:55:56Z,MERGED,True,179,0,10,https://github.com/icedevml,Implement win_get_user_stack32/64 - fetch userland esp/rsp from inside kernel,6,[],https://github.com/tklengyel/drakvuf/pull/653,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/653#issuecomment-512588311,Implements libdrakvuf methods that allow to obtain userland stack pointers when we break inside a syscall. This allows to perform stack inspection and guess/predict something about what was the cause of the syscall on the userland side. Tool for memdump plugin.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,653,2019-07-17T22:13:15Z,2019-07-26T14:47:41Z,2019-08-09T16:55:56Z,MERGED,True,179,0,10,https://github.com/icedevml,Implement win_get_user_stack32/64 - fetch userland esp/rsp from inside kernel,6,[],https://github.com/tklengyel/drakvuf/pull/653,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/653#issuecomment-512626770,Implements libdrakvuf methods that allow to obtain userland stack pointers when we break inside a syscall. This allows to perform stack inspection and guess/predict something about what was the cause of the syscall on the userland side. Tool for memdump plugin.,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,653,2019-07-17T22:13:15Z,2019-07-26T14:47:41Z,2019-08-09T16:55:56Z,MERGED,True,179,0,10,https://github.com/icedevml,Implement win_get_user_stack32/64 - fetch userland esp/rsp from inside kernel,6,[],https://github.com/tklengyel/drakvuf/pull/653,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/653#issuecomment-513985126,Implements libdrakvuf methods that allow to obtain userland stack pointers when we break inside a syscall. This allows to perform stack inspection and guess/predict something about what was the cause of the syscall on the userland side. Tool for memdump plugin.,"Another strange thing. There is:
[EWOW64PROCESS_PEB] = { ""_EWOW64PROCESS"", ""Peb"" },

in win-offsets-map.h but the whole structure is actually missing from my Windows 7 SP1 profile. On the other side, the Wow64Process field is present in _EPROCESS as a void pointer type and WOW is working in general.
Is it hidden in some DLL? Or maybe it was just not exported at all? Going to consider...",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,653,2019-07-17T22:13:15Z,2019-07-26T14:47:41Z,2019-08-09T16:55:56Z,MERGED,True,179,0,10,https://github.com/icedevml,Implement win_get_user_stack32/64 - fetch userland esp/rsp from inside kernel,6,[],https://github.com/tklengyel/drakvuf/pull/653,https://github.com/aoshiken,5,https://github.com/tklengyel/drakvuf/pull/653#issuecomment-514066180,Implements libdrakvuf methods that allow to obtain userland stack pointers when we break inside a syscall. This allows to perform stack inspection and guess/predict something about what was the cause of the syscall on the userland side. Tool for memdump plugin.,"Another strange thing. There is:
[EWOW64PROCESS_PEB] = { ""_EWOW64PROCESS"", ""Peb"" },

in win-offsets-map.h but the whole structure is actually missing from my Windows 7 SP1 profile. On the other side, the Wow64Process field is present in _EPROCESS as a void pointer type and WOW is working in general.
Is it hidden in some DLL? Or maybe it was just not exported at all? Going to consider...

You can find that symbol and a lot more regarding WoW64 at Windows\SysWOW64\ntdll.dll.
Use the -w, --rekall-wow option for loading the related Rekall profile.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,653,2019-07-17T22:13:15Z,2019-07-26T14:47:41Z,2019-08-09T16:55:56Z,MERGED,True,179,0,10,https://github.com/icedevml,Implement win_get_user_stack32/64 - fetch userland esp/rsp from inside kernel,6,[],https://github.com/tklengyel/drakvuf/pull/653,https://github.com/icedevml,6,https://github.com/tklengyel/drakvuf/pull/653#issuecomment-514099336,Implements libdrakvuf methods that allow to obtain userland stack pointers when we break inside a syscall. This allows to perform stack inspection and guess/predict something about what was the cause of the syscall on the userland side. Tool for memdump plugin.,"@aoshiken It's just called _EPROCESS in my wntdll, anyway the abovementioned code expects _EWOW64PROCESS to be in kernel's profile (because the access is like drakvuf->offsets[EWOW64PROCESS_PEB]), so this code wouldn't work. Perhaps some special case is needed?
My Win7SP1 kernel and wntdll profile: profiles.zip",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,653,2019-07-17T22:13:15Z,2019-07-26T14:47:41Z,2019-08-09T16:55:56Z,MERGED,True,179,0,10,https://github.com/icedevml,Implement win_get_user_stack32/64 - fetch userland esp/rsp from inside kernel,6,[],https://github.com/tklengyel/drakvuf/pull/653,https://github.com/aoshiken,7,https://github.com/tklengyel/drakvuf/pull/653#issuecomment-514118953,Implements libdrakvuf methods that allow to obtain userland stack pointers when we break inside a syscall. This allows to perform stack inspection and guess/predict something about what was the cause of the syscall on the userland side. Tool for memdump plugin.,"@icedevml that symbol appears on Windows10, not on Windows7,
See win_get_wow_peb() on libdrakvuf/win-process.c:
if ( vmi_get_winver( drakvuf->vmi ) == VMI_OS_WINDOWS_10 )
{
    ctx->addr = wow_process + drakvuf->offsets[EWOW64PROCESS_PEB] ;

Hope this clarifies better my previous post",True,{'THUMBS_UP': ['https://github.com/icedevml']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,653,2019-07-17T22:13:15Z,2019-07-26T14:47:41Z,2019-08-09T16:55:56Z,MERGED,True,179,0,10,https://github.com/icedevml,Implement win_get_user_stack32/64 - fetch userland esp/rsp from inside kernel,6,[],https://github.com/tklengyel/drakvuf/pull/653,https://github.com/icedevml,8,https://github.com/tklengyel/drakvuf/pull/653#issuecomment-514132968,Implements libdrakvuf methods that allow to obtain userland stack pointers when we break inside a syscall. This allows to perform stack inspection and guess/predict something about what was the cause of the syscall on the userland side. Tool for memdump plugin.,"@aoshiken Ah, I missed that. So SysWOW must be handled differently across Windows versions.",True,{'THUMBS_UP': ['https://github.com/aoshiken']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,653,2019-07-17T22:13:15Z,2019-07-26T14:47:41Z,2019-08-09T16:55:56Z,MERGED,True,179,0,10,https://github.com/icedevml,Implement win_get_user_stack32/64 - fetch userland esp/rsp from inside kernel,6,[],https://github.com/tklengyel/drakvuf/pull/653,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/653#issuecomment-514214400,Implements libdrakvuf methods that allow to obtain userland stack pointers when we break inside a syscall. This allows to perform stack inspection and guess/predict something about what was the cause of the syscall on the userland side. Tool for memdump plugin.,@icedevml You will have to rebase this on the latest master to get the updated libvmi submodule so Travis can compile it,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,653,2019-07-17T22:13:15Z,2019-07-26T14:47:41Z,2019-08-09T16:55:56Z,MERGED,True,179,0,10,https://github.com/icedevml,Implement win_get_user_stack32/64 - fetch userland esp/rsp from inside kernel,6,[],https://github.com/tklengyel/drakvuf/pull/653,https://github.com/icedevml,10,https://github.com/tklengyel/drakvuf/pull/653#issuecomment-514353773,Implements libdrakvuf methods that allow to obtain userland stack pointers when we break inside a syscall. This allows to perform stack inspection and guess/predict something about what was the cause of the syscall on the userland side. Tool for memdump plugin.,"@tklengyel This time I feel really defeated by git, it was much easier to repeat the changes by hand rather than do a rebase. Most probably I did someting strange previously.
Btw. this PR provides tools for #665.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,653,2019-07-17T22:13:15Z,2019-07-26T14:47:41Z,2019-08-09T16:55:56Z,MERGED,True,179,0,10,https://github.com/icedevml,Implement win_get_user_stack32/64 - fetch userland esp/rsp from inside kernel,6,[],https://github.com/tklengyel/drakvuf/pull/653,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/653#issuecomment-514377396,Implements libdrakvuf methods that allow to obtain userland stack pointers when we break inside a syscall. This allows to perform stack inspection and guess/predict something about what was the cause of the syscall on the userland side. Tool for memdump plugin.,"@icedevml it's usually easier if you first squash your commits and then do a rebase. I usually use git rebase -i master because it lets you pick which commits you want to squash (with fix) and which you want to keep, then edit the files as they are conflicting, do a git add on each and finally git rebase --continue. It takes a bit of practice to get used to it for sure :)",True,{'THUMBS_UP': ['https://github.com/icedevml']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,653,2019-07-17T22:13:15Z,2019-07-26T14:47:41Z,2019-08-09T16:55:56Z,MERGED,True,179,0,10,https://github.com/icedevml,Implement win_get_user_stack32/64 - fetch userland esp/rsp from inside kernel,6,[],https://github.com/tklengyel/drakvuf/pull/653,https://github.com/icedevml,12,https://github.com/tklengyel/drakvuf/pull/653#issuecomment-515429330,Implements libdrakvuf methods that allow to obtain userland stack pointers when we break inside a syscall. This allows to perform stack inspection and guess/predict something about what was the cause of the syscall on the userland side. Tool for memdump plugin.,"Ready to review. All new methods seem to work fine with my Windows 7 SP 1 guest, not sure about other systems.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,653,2019-07-17T22:13:15Z,2019-07-26T14:47:41Z,2019-08-09T16:55:56Z,MERGED,True,179,0,10,https://github.com/icedevml,Implement win_get_user_stack32/64 - fetch userland esp/rsp from inside kernel,6,[],https://github.com/tklengyel/drakvuf/pull/653,https://github.com/tklengyel,13,https://github.com/tklengyel/drakvuf/pull/653#issuecomment-515441493,Implements libdrakvuf methods that allow to obtain userland stack pointers when we break inside a syscall. This allows to perform stack inspection and guess/predict something about what was the cause of the syscall on the userland side. Tool for memdump plugin.,"LGTM, if there are some issues with other Windows versions then we can address them as they pop up",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,654,2019-07-18T13:33:52Z,2019-07-19T13:40:44Z,2019-07-19T13:40:46Z,MERGED,True,2,2,1,https://github.com/tklengyel,Use -Q astyle option in Travis script,1,[],https://github.com/tklengyel/drakvuf/pull/654,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/654,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,654,2019-07-18T13:33:52Z,2019-07-19T13:40:44Z,2019-07-19T13:40:46Z,MERGED,True,2,2,1,https://github.com/tklengyel,Use -Q astyle option in Travis script,1,[],https://github.com/tklengyel/drakvuf/pull/654,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/654#issuecomment-513217796,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,654,2019-07-18T13:33:52Z,2019-07-19T13:40:44Z,2019-07-19T13:40:46Z,MERGED,True,2,2,1,https://github.com/tklengyel,Use -Q astyle option in Travis script,1,[],https://github.com/tklengyel/drakvuf/pull/654,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/654#issuecomment-513225465,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,655,2019-07-19T09:29:59Z,2019-07-23T14:49:36Z,2019-07-23T14:49:36Z,CLOSED,False,482,41,7,https://github.com/alexmocha,Add plugin to track and dump NtWriteVirtualMemory calls,5,[],https://github.com/tklengyel/drakvuf/pull/655,https://github.com/alexmocha,1,https://github.com/tklengyel/drakvuf/pull/655,"Implementation of the feature discussed in #650
This plugin logs and allows to dump the memory written by the NtWriteVirtualMemory system call.
The dump folder is chosen with the  --virtualmemdump  argument.","Implementation of the feature discussed in #650
This plugin logs and allows to dump the memory written by the NtWriteVirtualMemory system call.
The dump folder is chosen with the  --virtualmemdump  argument.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,655,2019-07-19T09:29:59Z,2019-07-23T14:49:36Z,2019-07-23T14:49:36Z,CLOSED,False,482,41,7,https://github.com/alexmocha,Add plugin to track and dump NtWriteVirtualMemory calls,5,[],https://github.com/tklengyel/drakvuf/pull/655,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/655#issuecomment-513162363,"Implementation of the feature discussed in #650
This plugin logs and allows to dump the memory written by the NtWriteVirtualMemory system call.
The dump folder is chosen with the  --virtualmemdump  argument.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,655,2019-07-19T09:29:59Z,2019-07-23T14:49:36Z,2019-07-23T14:49:36Z,CLOSED,False,482,41,7,https://github.com/alexmocha,Add plugin to track and dump NtWriteVirtualMemory calls,5,[],https://github.com/tklengyel/drakvuf/pull/655,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/655#issuecomment-513176226,"Implementation of the feature discussed in #650
This plugin logs and allows to dump the memory written by the NtWriteVirtualMemory system call.
The dump folder is chosen with the  --virtualmemdump  argument.","Could this be a part of memdump plugin introduced in #652? It seems that the goal is very similiar.
I can potentially prepare a PR which would incorporate this into memdump.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,655,2019-07-19T09:29:59Z,2019-07-23T14:49:36Z,2019-07-23T14:49:36Z,CLOSED,False,482,41,7,https://github.com/alexmocha,Add plugin to track and dump NtWriteVirtualMemory calls,5,[],https://github.com/tklengyel/drakvuf/pull/655,https://github.com/alexmocha,4,https://github.com/tklengyel/drakvuf/pull/655#issuecomment-513193599,"Implementation of the feature discussed in #650
This plugin logs and allows to dump the memory written by the NtWriteVirtualMemory system call.
The dump folder is chosen with the  --virtualmemdump  argument.",@icedevml  Yes the goal is almost the same. I think it could be great to integrate this feature into memdump.,True,"{'THUMBS_UP': ['https://github.com/tklengyel', 'https://github.com/icedevml']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,655,2019-07-19T09:29:59Z,2019-07-23T14:49:36Z,2019-07-23T14:49:36Z,CLOSED,False,482,41,7,https://github.com/alexmocha,Add plugin to track and dump NtWriteVirtualMemory calls,5,[],https://github.com/tklengyel/drakvuf/pull/655,https://github.com/icedevml,5,https://github.com/tklengyel/drakvuf/pull/655#issuecomment-513234157,"Implementation of the feature discussed in #650
This plugin logs and allows to dump the memory written by the NtWriteVirtualMemory system call.
The dump folder is chosen with the  --virtualmemdump  argument.","Ok, as memdump was merged, I will propose something soon.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,655,2019-07-19T09:29:59Z,2019-07-23T14:49:36Z,2019-07-23T14:49:36Z,CLOSED,False,482,41,7,https://github.com/alexmocha,Add plugin to track and dump NtWriteVirtualMemory calls,5,[],https://github.com/tklengyel/drakvuf/pull/655,https://github.com/icedevml,6,https://github.com/tklengyel/drakvuf/pull/655#issuecomment-513273361,"Implementation of the feature discussed in #650
This plugin logs and allows to dump the memory written by the NtWriteVirtualMemory system call.
The dump folder is chosen with the  --virtualmemdump  argument.",@alexmocha Do you have some hashes of (malware) samples for which this would produce interesting results?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,656,2019-07-19T15:26:03Z,2019-07-19T15:40:08Z,2019-07-19T15:40:09Z,CLOSED,False,10,6,1,https://github.com/tklengyel,Move Travis to Bionic,1,[],https://github.com/tklengyel/drakvuf/pull/656,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/656,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,656,2019-07-19T15:26:03Z,2019-07-19T15:40:08Z,2019-07-19T15:40:09Z,CLOSED,False,10,6,1,https://github.com/tklengyel,Move Travis to Bionic,1,[],https://github.com/tklengyel/drakvuf/pull/656,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/656#issuecomment-513276840,,The Travis apt plugin seems to be having some issues on bionic (https://travis-ci.community/t/apt-addon-broken-on-bionic/4061) so closing this for now,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,657,2019-07-19T21:59:08Z,2019-07-23T14:49:22Z,2019-08-09T16:55:43Z,MERGED,True,213,41,9,https://github.com/icedevml,Extend memdump plugin: track NtWriteVirtualMemory (integrate alexmocha's code),7,[],https://github.com/tklengyel/drakvuf/pull/657,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/657,"Integrated @alexmocha code from PR #655 into memdump plugin.
In case of NtWriteVirtualMemory it is very important to log some non-standard parameters like target process PID (to whom the write was done) and target base address. Thus, dump_memory_region now accepts printout_extras callback, which is capable of adding some syscall-specific things to the printouts.","Integrated @alexmocha code from PR #655 into memdump plugin.
In case of NtWriteVirtualMemory it is very important to log some non-standard parameters like target process PID (to whom the write was done) and target base address. Thus, dump_memory_region now accepts printout_extras callback, which is capable of adding some syscall-specific things to the printouts.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,657,2019-07-19T21:59:08Z,2019-07-23T14:49:22Z,2019-08-09T16:55:43Z,MERGED,True,213,41,9,https://github.com/icedevml,Extend memdump plugin: track NtWriteVirtualMemory (integrate alexmocha's code),7,[],https://github.com/tklengyel/drakvuf/pull/657,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/657#issuecomment-513392597,"Integrated @alexmocha code from PR #655 into memdump plugin.
In case of NtWriteVirtualMemory it is very important to log some non-standard parameters like target process PID (to whom the write was done) and target base address. Thus, dump_memory_region now accepts printout_extras callback, which is capable of adding some syscall-specific things to the printouts.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,657,2019-07-19T21:59:08Z,2019-07-23T14:49:22Z,2019-08-09T16:55:43Z,MERGED,True,213,41,9,https://github.com/icedevml,Extend memdump plugin: track NtWriteVirtualMemory (integrate alexmocha's code),7,[],https://github.com/tklengyel/drakvuf/pull/657,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/657#issuecomment-513416895,"Integrated @alexmocha code from PR #655 into memdump plugin.
In case of NtWriteVirtualMemory it is very important to log some non-standard parameters like target process PID (to whom the write was done) and target base address. Thus, dump_memory_region now accepts printout_extras callback, which is capable of adding some syscall-specific things to the printouts.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,657,2019-07-19T21:59:08Z,2019-07-23T14:49:22Z,2019-08-09T16:55:43Z,MERGED,True,213,41,9,https://github.com/icedevml,Extend memdump plugin: track NtWriteVirtualMemory (integrate alexmocha's code),7,[],https://github.com/tklengyel/drakvuf/pull/657,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/657#issuecomment-514114966,"Integrated @alexmocha code from PR #655 into memdump plugin.
In case of NtWriteVirtualMemory it is very important to log some non-standard parameters like target process PID (to whom the write was done) and target base address. Thus, dump_memory_region now accepts printout_extras callback, which is capable of adding some syscall-specific things to the printouts.","Ready to review. dump_memory_region is much more convoluted now, but now it knows how to handle unaligned addresses and unaligned dump sizes.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,658,2019-07-20T00:12:43Z,2019-07-20T00:52:34Z,2019-07-20T00:52:37Z,MERGED,True,135,173,29,https://github.com/tklengyel,Move Travis to Bionic and adjust astyle with new options,2,[],https://github.com/tklengyel/drakvuf/pull/658,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/658,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,659,2019-07-22T13:30:50Z,2019-07-22T17:21:11Z,2019-07-22T17:21:11Z,MERGED,True,4,1,1,https://github.com/mtarral,procmon: produce valid JSON in NtProtectVirtualMemory callback,1,[],https://github.com/tklengyel/drakvuf/pull/659,https://github.com/mtarral,1,https://github.com/tklengyel/drakvuf/pull/659,This PR fixes the JSON output of protect_virtual_memory_hook_cb,This PR fixes the JSON output of protect_virtual_memory_hook_cb,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,659,2019-07-22T13:30:50Z,2019-07-22T17:21:11Z,2019-07-22T17:21:11Z,MERGED,True,4,1,1,https://github.com/mtarral,procmon: produce valid JSON in NtProtectVirtualMemory callback,1,[],https://github.com/tklengyel/drakvuf/pull/659,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/659#issuecomment-513792108,This PR fixes the JSON output of protect_virtual_memory_hook_cb,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,659,2019-07-22T13:30:50Z,2019-07-22T17:21:11Z,2019-07-22T17:21:11Z,MERGED,True,4,1,1,https://github.com/mtarral,procmon: produce valid JSON in NtProtectVirtualMemory callback,1,[],https://github.com/tklengyel/drakvuf/pull/659,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/659#issuecomment-513829539,This PR fixes the JSON output of protect_virtual_memory_hook_cb,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,660,2019-07-22T13:34:54Z,2019-07-24T14:09:48Z,2019-07-24T14:09:48Z,CLOSED,False,21,4,2,https://github.com/mtarral,Don't process cr3/int3 callbacks if process identification failed,1,[],https://github.com/tklengyel/drakvuf/pull/660,https://github.com/mtarral,1,https://github.com/tklengyel/drakvuf/pull/660,"This PR enforces checking the return value of drakvuf_get_current_process_data, and prevents Drakvuf from processing the cr3/int3 callbacks when it fails.
This avoids Drakvuf's to crash if the process identification failed, and a plugin tries to access the proc_data
Related #122
Also adds debug output in win-processes.","This PR enforces checking the return value of drakvuf_get_current_process_data, and prevents Drakvuf from processing the cr3/int3 callbacks when it fails.
This avoids Drakvuf's to crash if the process identification failed, and a plugin tries to access the proc_data
Related #122
Also adds debug output in win-processes.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,660,2019-07-22T13:34:54Z,2019-07-24T14:09:48Z,2019-07-24T14:09:48Z,CLOSED,False,21,4,2,https://github.com/mtarral,Don't process cr3/int3 callbacks if process identification failed,1,[],https://github.com/tklengyel/drakvuf/pull/660,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/660#issuecomment-513793609,"This PR enforces checking the return value of drakvuf_get_current_process_data, and prevents Drakvuf from processing the cr3/int3 callbacks when it fails.
This avoids Drakvuf's to crash if the process identification failed, and a plugin tries to access the proc_data
Related #122
Also adds debug output in win-processes.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,660,2019-07-22T13:34:54Z,2019-07-24T14:09:48Z,2019-07-24T14:09:48Z,CLOSED,False,21,4,2,https://github.com/mtarral,Don't process cr3/int3 callbacks if process identification failed,1,[],https://github.com/tklengyel/drakvuf/pull/660,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/660#issuecomment-513829269,"This PR enforces checking the return value of drakvuf_get_current_process_data, and prevents Drakvuf from processing the cr3/int3 callbacks when it fails.
This avoids Drakvuf's to crash if the process identification failed, and a plugin tries to access the proc_data
Related #122
Also adds debug output in win-processes.",I don't think that's the right approach. I would be much more interested to know why the process identification fails and fix it instead of masking the problem from the plugins. As a stop-gap measure it might be OK to just send an empty proc_data to the plugins if there is a failure.,True,{'THUMBS_UP': ['https://github.com/aoshiken']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,661,2019-07-22T13:48:09Z,2019-07-22T17:20:41Z,2019-07-22T17:20:41Z,MERGED,True,2,0,1,https://github.com/mtarral,"rekall: fix rekall_get_os_type when ProfileClass value is just ""Nt""",1,[],https://github.com/tklengyel/drakvuf/pull/661,https://github.com/mtarral,1,https://github.com/tklengyel/drakvuf/pull/661,"Som rekall profiles from https://github.com/google/rekall-profiles have a ProfileClass that contains only Nt.
You can gunzip -d the first one from this list to confirm (0018A9A7F0334E8D965F310D1653A5452.gz):
https://github.com/google/rekall-profiles/tree/gh-pages/v1.0/nt/GUID","Som rekall profiles from https://github.com/google/rekall-profiles have a ProfileClass that contains only Nt.
You can gunzip -d the first one from this list to confirm (0018A9A7F0334E8D965F310D1653A5452.gz):
https://github.com/google/rekall-profiles/tree/gh-pages/v1.0/nt/GUID",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,661,2019-07-22T13:48:09Z,2019-07-22T17:20:41Z,2019-07-22T17:20:41Z,MERGED,True,2,0,1,https://github.com/mtarral,"rekall: fix rekall_get_os_type when ProfileClass value is just ""Nt""",1,[],https://github.com/tklengyel/drakvuf/pull/661,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/661#issuecomment-513798653,"Som rekall profiles from https://github.com/google/rekall-profiles have a ProfileClass that contains only Nt.
You can gunzip -d the first one from this list to confirm (0018A9A7F0334E8D965F310D1653A5452.gz):
https://github.com/google/rekall-profiles/tree/gh-pages/v1.0/nt/GUID",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,661,2019-07-22T13:48:09Z,2019-07-22T17:20:41Z,2019-07-22T17:20:41Z,MERGED,True,2,0,1,https://github.com/mtarral,"rekall: fix rekall_get_os_type when ProfileClass value is just ""Nt""",1,[],https://github.com/tklengyel/drakvuf/pull/661,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/661#issuecomment-513827536,"Som rekall profiles from https://github.com/google/rekall-profiles have a ProfileClass that contains only Nt.
You can gunzip -d the first one from this list to confirm (0018A9A7F0334E8D965F310D1653A5452.gz):
https://github.com/google/rekall-profiles/tree/gh-pages/v1.0/nt/GUID",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,664,2019-07-23T13:21:08Z,2019-07-23T13:34:19Z,2019-07-23T13:34:22Z,MERGED,True,1,1,1,https://github.com/tklengyel,Update LibVMI,1,[],https://github.com/tklengyel/drakvuf/pull/664,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/664,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,664,2019-07-23T13:21:08Z,2019-07-23T13:34:19Z,2019-07-23T13:34:22Z,MERGED,True,1,1,1,https://github.com/tklengyel,Update LibVMI,1,[],https://github.com/tklengyel/drakvuf/pull/664,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/664#issuecomment-514207084,,Fixes #663,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,665,2019-07-23T19:37:44Z,2019-08-13T14:41:54Z,2020-03-13T12:03:17Z,MERGED,True,627,85,13,https://github.com/icedevml,memdump: Dumps based on stack inspection,7,[],https://github.com/tklengyel/drakvuf/pull/665,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/665,"When process does an interesting syscall, walks the usermode stack to get some information about the cause. Dumps the offending code fragments if they appear to be interesting.","When process does an interesting syscall, walks the usermode stack to get some information about the cause. Dumps the offending code fragments if they appear to be interesting.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,665,2019-07-23T19:37:44Z,2019-08-13T14:41:54Z,2020-03-13T12:03:17Z,MERGED,True,627,85,13,https://github.com/icedevml,memdump: Dumps based on stack inspection,7,[],https://github.com/tklengyel/drakvuf/pull/665,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/665#issuecomment-514353519,"When process does an interesting syscall, walks the usermode stack to get some information about the cause. Dumps the offending code fragments if they appear to be interesting.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,665,2019-07-23T19:37:44Z,2019-08-13T14:41:54Z,2020-03-13T12:03:17Z,MERGED,True,627,85,13,https://github.com/icedevml,memdump: Dumps based on stack inspection,7,[],https://github.com/tklengyel/drakvuf/pull/665,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/665#issuecomment-514377558,"When process does an interesting syscall, walks the usermode stack to get some information about the cause. Dumps the offending code fragments if they appear to be interesting.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,665,2019-07-23T19:37:44Z,2019-08-13T14:41:54Z,2020-03-13T12:03:17Z,MERGED,True,627,85,13,https://github.com/icedevml,memdump: Dumps based on stack inspection,7,[],https://github.com/tklengyel/drakvuf/pull/665,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/665#issuecomment-515437202,"When process does an interesting syscall, walks the usermode stack to get some information about the cause. Dumps the offending code fragments if they appear to be interesting.",Guess some segmentation fault occurred during CI test? Seems like the stack walk needs more testing.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,665,2019-07-23T19:37:44Z,2019-08-13T14:41:54Z,2020-03-13T12:03:17Z,MERGED,True,627,85,13,https://github.com/icedevml,memdump: Dumps based on stack inspection,7,[],https://github.com/tklengyel/drakvuf/pull/665,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/665#issuecomment-515440825,"When process does an interesting syscall, walks the usermode stack to get some information about the cause. Dumps the offending code fragments if they appear to be interesting.",No segfault but the windows10 VM did crash.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,665,2019-07-23T19:37:44Z,2019-08-13T14:41:54Z,2020-03-13T12:03:17Z,MERGED,True,627,85,13,https://github.com/icedevml,memdump: Dumps based on stack inspection,7,[],https://github.com/tklengyel/drakvuf/pull/665,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/665#issuecomment-515440876,"When process does an interesting syscall, walks the usermode stack to get some information about the cause. Dumps the offending code fragments if they appear to be interesting.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,665,2019-07-23T19:37:44Z,2019-08-13T14:41:54Z,2020-03-13T12:03:17Z,MERGED,True,627,85,13,https://github.com/icedevml,memdump: Dumps based on stack inspection,7,[],https://github.com/tklengyel/drakvuf/pull/665,https://github.com/icedevml,7,https://github.com/tklengyel/drakvuf/pull/665#issuecomment-515533610,"When process does an interesting syscall, walks the usermode stack to get some information about the cause. Dumps the offending code fragments if they appear to be interesting.","Rebased to 5cf53f6 as it is now merged, I will probably get a Windows 10 VM soon to see what is wrong with this stuff. So strange that in fact this doesn't do anything invasive. Observer effect? Some unrelated bug?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,665,2019-07-23T19:37:44Z,2019-08-13T14:41:54Z,2020-03-13T12:03:17Z,MERGED,True,627,85,13,https://github.com/icedevml,memdump: Dumps based on stack inspection,7,[],https://github.com/tklengyel/drakvuf/pull/665,https://github.com/icedevml,8,https://github.com/tklengyel/drakvuf/pull/665#issuecomment-515571740,"When process does an interesting syscall, walks the usermode stack to get some information about the cause. Dumps the offending code fragments if they appear to be interesting.","The pipeline is passing now, so I guess it was some random thing with the CI itself.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,665,2019-07-23T19:37:44Z,2019-08-13T14:41:54Z,2020-03-13T12:03:17Z,MERGED,True,627,85,13,https://github.com/icedevml,memdump: Dumps based on stack inspection,7,[],https://github.com/tklengyel/drakvuf/pull/665,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/665#issuecomment-515591475,"When process does an interesting syscall, walks the usermode stack to get some information about the cause. Dumps the offending code fragments if they appear to be interesting.","Yea, sometimes that happens ¯\_(ツ)_/¯",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,665,2019-07-23T19:37:44Z,2019-08-13T14:41:54Z,2020-03-13T12:03:17Z,MERGED,True,627,85,13,https://github.com/icedevml,memdump: Dumps based on stack inspection,7,[],https://github.com/tklengyel/drakvuf/pull/665,https://github.com/icedevml,10,https://github.com/tklengyel/drakvuf/pull/665#issuecomment-520565444,"When process does an interesting syscall, walks the usermode stack to get some information about the cause. Dumps the offending code fragments if they appear to be interesting.",Ready to review.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,666,2019-07-24T01:15:41Z,2019-08-25T14:51:10Z,2019-08-26T08:13:53Z,MERGED,True,3730,1601,26,https://github.com/Dos98,[GSoC 2019] linux-injector,27,[],https://github.com/tklengyel/drakvuf/pull/666,https://github.com/Dos98,1,https://github.com/tklengyel/drakvuf/pull/666,"process
Example Run: ./src/injector -r /root/linux.json -d 1 -i 2831 -e gnome-calculator -m execproc


shellcode (in dev)(Segfault while executing shellcode)
Example Run: ./src/injector -r /root/linux.json -d 1 -i 3661 -e /home/ayush-drakvuf/Desktop/file.txt -m linuxshellcode","process
Example Run: ./src/injector -r /root/linux.json -d 1 -i 2831 -e gnome-calculator -m execproc


shellcode (in dev)(Segfault while executing shellcode)
Example Run: ./src/injector -r /root/linux.json -d 1 -i 3661 -e /home/ayush-drakvuf/Desktop/file.txt -m linuxshellcode",True,"{'THUMBS_UP': ['https://github.com/tklengyel', 'https://github.com/mtarral']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,666,2019-07-24T01:15:41Z,2019-08-25T14:51:10Z,2019-08-26T08:13:53Z,MERGED,True,3730,1601,26,https://github.com/Dos98,[GSoC 2019] linux-injector,27,[],https://github.com/tklengyel/drakvuf/pull/666,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/666#issuecomment-514440249,"process
Example Run: ./src/injector -r /root/linux.json -d 1 -i 2831 -e gnome-calculator -m execproc


shellcode (in dev)(Segfault while executing shellcode)
Example Run: ./src/injector -r /root/linux.json -d 1 -i 3661 -e /home/ayush-drakvuf/Desktop/file.txt -m linuxshellcode",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,666,2019-07-24T01:15:41Z,2019-08-25T14:51:10Z,2019-08-26T08:13:53Z,MERGED,True,3730,1601,26,https://github.com/Dos98,[GSoC 2019] linux-injector,27,[],https://github.com/tklengyel/drakvuf/pull/666,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/666#issuecomment-514619045,"process
Example Run: ./src/injector -r /root/linux.json -d 1 -i 2831 -e gnome-calculator -m execproc


shellcode (in dev)(Segfault while executing shellcode)
Example Run: ./src/injector -r /root/linux.json -d 1 -i 3661 -e /home/ayush-drakvuf/Desktop/file.txt -m linuxshellcode",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,666,2019-07-24T01:15:41Z,2019-08-25T14:51:10Z,2019-08-26T08:13:53Z,MERGED,True,3730,1601,26,https://github.com/Dos98,[GSoC 2019] linux-injector,27,[],https://github.com/tklengyel/drakvuf/pull/666,https://github.com/Dos98,4,https://github.com/tklengyel/drakvuf/pull/666#issuecomment-517623399,"process
Example Run: ./src/injector -r /root/linux.json -d 1 -i 2831 -e gnome-calculator -m execproc


shellcode (in dev)(Segfault while executing shellcode)
Example Run: ./src/injector -r /root/linux.json -d 1 -i 3661 -e /home/ayush-drakvuf/Desktop/file.txt -m linuxshellcode",I have pushed the changes made till now. I need a little help with the relocation of symbols in elf64.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,666,2019-07-24T01:15:41Z,2019-08-25T14:51:10Z,2019-08-26T08:13:53Z,MERGED,True,3730,1601,26,https://github.com/Dos98,[GSoC 2019] linux-injector,27,[],https://github.com/tklengyel/drakvuf/pull/666,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/666#issuecomment-519615418,"process
Example Run: ./src/injector -r /root/linux.json -d 1 -i 2831 -e gnome-calculator -m execproc


shellcode (in dev)(Segfault while executing shellcode)
Example Run: ./src/injector -r /root/linux.json -d 1 -i 3661 -e /home/ayush-drakvuf/Desktop/file.txt -m linuxshellcode",@Dos98 Please remove the libvmi and xen submodule changes from the PR,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,666,2019-07-24T01:15:41Z,2019-08-25T14:51:10Z,2019-08-26T08:13:53Z,MERGED,True,3730,1601,26,https://github.com/Dos98,[GSoC 2019] linux-injector,27,[],https://github.com/tklengyel/drakvuf/pull/666,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/666#issuecomment-520468880,"process
Example Run: ./src/injector -r /root/linux.json -d 1 -i 2831 -e gnome-calculator -m execproc


shellcode (in dev)(Segfault while executing shellcode)
Example Run: ./src/injector -r /root/linux.json -d 1 -i 3661 -e /home/ayush-drakvuf/Desktop/file.txt -m linuxshellcode","I tried injecting to a bash process the command top as follows:
./src/injector -v -d debian-stretch-jenkins -r /shared/cfg/debian-stretch.json -i 2549 -e top -m execproc
The in-guest process segfaults pretty much right away, injector on the other keeps running. When I send it SIGINT (ie. CTRL+C) it also segfaults:
(gdb) signal SIGINT
Continuing with signal SIGINT.
1565622894.864586 CR3 cb on vCPU 1: 0x14f13805
Injected process callback !!
RAX: 0x14f12005
0|2549|0|2549 
1565622894.864637 DRAKVUF loop finished

Program received signal SIGSEGV, Segmentation fault.
__memmove_avx_unaligned_erms () at ../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S:288
288	../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S: No such file or directory.
(gdb) bt
#0  __memmove_avx_unaligned_erms () at ../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S:288
#1  0x00007ffff7b32ac9 in g_strchug () from /usr/lib/x86_64-linux-gnu/libglib-2.0.so.0
#2  0x000055555557c731 in print_injection_info (format=format@entry=OUTPUT_DEFAULT, file=file@entry=0x7fffffffed6c ""top"", injector=injector@entry=0x5555569da960) at linux_injector.c:708
#3  0x000055555557daea in injector_start_app_on_linux (drakvuf=0x5555555c4080, pid=2549, tid=<optimized out>, file=0x7fffffffed6c ""top"", method=<optimized out>, format=OUTPUT_DEFAULT, 
    args_count=0, args=0x7fffffffe850) at linux_injector.c:950
#4  0x000055555556aeea in main (argc=12, argv=0x7fffffffea58) at injector.c:300",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,666,2019-07-24T01:15:41Z,2019-08-25T14:51:10Z,2019-08-26T08:13:53Z,MERGED,True,3730,1601,26,https://github.com/Dos98,[GSoC 2019] linux-injector,27,[],https://github.com/tklengyel/drakvuf/pull/666,https://github.com/Dos98,7,https://github.com/tklengyel/drakvuf/pull/666#issuecomment-520527948,"process
Example Run: ./src/injector -r /root/linux.json -d 1 -i 2831 -e gnome-calculator -m execproc


shellcode (in dev)(Segfault while executing shellcode)
Example Run: ./src/injector -r /root/linux.json -d 1 -i 3661 -e /home/ayush-drakvuf/Desktop/file.txt -m linuxshellcode",Corrected! There is some problem with Travis now.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,666,2019-07-24T01:15:41Z,2019-08-25T14:51:10Z,2019-08-26T08:13:53Z,MERGED,True,3730,1601,26,https://github.com/Dos98,[GSoC 2019] linux-injector,27,[],https://github.com/tklengyel/drakvuf/pull/666,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/666#issuecomment-521288753,"process
Example Run: ./src/injector -r /root/linux.json -d 1 -i 2831 -e gnome-calculator -m execproc


shellcode (in dev)(Segfault while executing shellcode)
Example Run: ./src/injector -r /root/linux.json -d 1 -i 3661 -e /home/ayush-drakvuf/Desktop/file.txt -m linuxshellcode","Alright, drakvuf no longer segfaults but the target process in the guest still does sometime. Other times it seems like the injection was setup but for some reason it doesn't actually go through:
CR3 changed to 0x1788006. TID: 3093 PID: 3093 PPID: 2858
Rip is 0xffffffffb86a9442
1565795405.321782 LIB NAME is: test2
1565795405.321792 LIB NAME is: test2
1565795405.321801 LIB NAME is: test2
1565795405.321837 LIB NAME is: libc-2.24.so
1565795405.321849 LIB NAME is: libc-2.24.so
1565795405.321860 LIB NAME is: libc-2.24.so
1565795405.321868 LIB NAME is: libc-2.24.so
1565795405.321891 LIB NAME is: ld-2.24.so
1565795405.321905 LIB NAME is: ld-2.24.so
1565795405.321915 LIB NAME is: ld-2.24.so
Address of execlp symbol is: 0xffffffffffffffff
Injector->target_base = 0xffff9f35953dbe00
1565795405.321939 Breakpoint VA 0xffffffffb86a9442 -> PA 0x116a9442
1565795405.321955 Physmap populated? 0
1565795405.321999 Copied trapped page to new location
1565795405.322007 Activating remapped gfns in the altp2m views!
1565795405.322085       Trap added @ PA 0x116a9442 RPA 0xff006442 Page 71337 for entry.
Got return address 0xffffffffb86a9442 and it's now trapped!
INT3 Callback @ 0xffffffffb86a9442. CR3 0x1200a006.
1565795405.322324 Switching altp2m and to singlestep on vcpu 0
1565795405.322441 reset trap on vCPU 0, switching altp2m 0->1
...",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,666,2019-07-24T01:15:41Z,2019-08-25T14:51:10Z,2019-08-26T08:13:53Z,MERGED,True,3730,1601,26,https://github.com/Dos98,[GSoC 2019] linux-injector,27,[],https://github.com/tklengyel/drakvuf/pull/666,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/666#issuecomment-521291946,"process
Example Run: ./src/injector -r /root/linux.json -d 1 -i 2831 -e gnome-calculator -m execproc


shellcode (in dev)(Segfault while executing shellcode)
Example Run: ./src/injector -r /root/linux.json -d 1 -i 3661 -e /home/ayush-drakvuf/Desktop/file.txt -m linuxshellcode",Looks like all the callbacks at the address breakpointed here Got return address 0xffffffffb86a9442 and it's now trapped! are coming from swapper,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,666,2019-07-24T01:15:41Z,2019-08-25T14:51:10Z,2019-08-26T08:13:53Z,MERGED,True,3730,1601,26,https://github.com/Dos98,[GSoC 2019] linux-injector,27,[],https://github.com/tklengyel/drakvuf/pull/666,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/666#issuecomment-521295297,"process
Example Run: ./src/injector -r /root/linux.json -d 1 -i 2831 -e gnome-calculator -m execproc


shellcode (in dev)(Segfault while executing shellcode)
Example Run: ./src/injector -r /root/linux.json -d 1 -i 3661 -e /home/ayush-drakvuf/Desktop/file.txt -m linuxshellcode","When the in-guest process segfaults it seems the symbol's address is wrong:
Address of execlp symbol is: 0xffffffffffffffff",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,666,2019-07-24T01:15:41Z,2019-08-25T14:51:10Z,2019-08-26T08:13:53Z,MERGED,True,3730,1601,26,https://github.com/Dos98,[GSoC 2019] linux-injector,27,[],https://github.com/tklengyel/drakvuf/pull/666,https://github.com/Dos98,11,https://github.com/tklengyel/drakvuf/pull/666#issuecomment-521305464,"process
Example Run: ./src/injector -r /root/linux.json -d 1 -i 2831 -e gnome-calculator -m execproc


shellcode (in dev)(Segfault while executing shellcode)
Example Run: ./src/injector -r /root/linux.json -d 1 -i 3661 -e /home/ayush-drakvuf/Desktop/file.txt -m linuxshellcode","This happened due to the version of Glibc is different for this os. Here it is ""libc-2.24.so"" whereas it was looking for ""libc-2.27.so""",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,666,2019-07-24T01:15:41Z,2019-08-25T14:51:10Z,2019-08-26T08:13:53Z,MERGED,True,3730,1601,26,https://github.com/Dos98,[GSoC 2019] linux-injector,27,[],https://github.com/tklengyel/drakvuf/pull/666,https://github.com/tklengyel,12,https://github.com/tklengyel/drakvuf/pull/666#issuecomment-521306273,"process
Example Run: ./src/injector -r /root/linux.json -d 1 -i 2831 -e gnome-calculator -m execproc


shellcode (in dev)(Segfault while executing shellcode)
Example Run: ./src/injector -r /root/linux.json -d 1 -i 3661 -e /home/ayush-drakvuf/Desktop/file.txt -m linuxshellcode",Why is the specific version of libc hardcoded?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,666,2019-07-24T01:15:41Z,2019-08-25T14:51:10Z,2019-08-26T08:13:53Z,MERGED,True,3730,1601,26,https://github.com/Dos98,[GSoC 2019] linux-injector,27,[],https://github.com/tklengyel/drakvuf/pull/666,https://github.com/Dos98,13,https://github.com/tklengyel/drakvuf/pull/666#issuecomment-521306599,"process
Example Run: ./src/injector -r /root/linux.json -d 1 -i 2831 -e gnome-calculator -m execproc


shellcode (in dev)(Segfault while executing shellcode)
Example Run: ./src/injector -r /root/linux.json -d 1 -i 3661 -e /home/ayush-drakvuf/Desktop/file.txt -m linuxshellcode",I will correct it now.,True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,666,2019-07-24T01:15:41Z,2019-08-25T14:51:10Z,2019-08-26T08:13:53Z,MERGED,True,3730,1601,26,https://github.com/Dos98,[GSoC 2019] linux-injector,27,[],https://github.com/tklengyel/drakvuf/pull/666,https://github.com/tklengyel,14,https://github.com/tklengyel/drakvuf/pull/666#issuecomment-522571088,"process
Example Run: ./src/injector -r /root/linux.json -d 1 -i 2831 -e gnome-calculator -m execproc


shellcode (in dev)(Segfault while executing shellcode)
Example Run: ./src/injector -r /root/linux.json -d 1 -i 3661 -e /home/ayush-drakvuf/Desktop/file.txt -m linuxshellcode","Nice, it seems to be working :)",True,{'HOORAY': ['https://github.com/Dos98']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,666,2019-07-24T01:15:41Z,2019-08-25T14:51:10Z,2019-08-26T08:13:53Z,MERGED,True,3730,1601,26,https://github.com/Dos98,[GSoC 2019] linux-injector,27,[],https://github.com/tklengyel/drakvuf/pull/666,https://github.com/tklengyel,15,https://github.com/tklengyel/drakvuf/pull/666#issuecomment-522595879,"process
Example Run: ./src/injector -r /root/linux.json -d 1 -i 2831 -e gnome-calculator -m execproc


shellcode (in dev)(Segfault while executing shellcode)
Example Run: ./src/injector -r /root/linux.json -d 1 -i 3661 -e /home/ayush-drakvuf/Desktop/file.txt -m linuxshellcode",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,666,2019-07-24T01:15:41Z,2019-08-25T14:51:10Z,2019-08-26T08:13:53Z,MERGED,True,3730,1601,26,https://github.com/Dos98,[GSoC 2019] linux-injector,27,[],https://github.com/tklengyel/drakvuf/pull/666,https://github.com/tklengyel,16,https://github.com/tklengyel/drakvuf/pull/666#issuecomment-522661206,"process
Example Run: ./src/injector -r /root/linux.json -d 1 -i 2831 -e gnome-calculator -m execproc


shellcode (in dev)(Segfault while executing shellcode)
Example Run: ./src/injector -r /root/linux.json -d 1 -i 3661 -e /home/ayush-drakvuf/Desktop/file.txt -m linuxshellcode",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,666,2019-07-24T01:15:41Z,2019-08-25T14:51:10Z,2019-08-26T08:13:53Z,MERGED,True,3730,1601,26,https://github.com/Dos98,[GSoC 2019] linux-injector,27,[],https://github.com/tklengyel/drakvuf/pull/666,https://github.com/tklengyel,17,https://github.com/tklengyel/drakvuf/pull/666#issuecomment-523583484,"process
Example Run: ./src/injector -r /root/linux.json -d 1 -i 2831 -e gnome-calculator -m execproc


shellcode (in dev)(Segfault while executing shellcode)
Example Run: ./src/injector -r /root/linux.json -d 1 -i 3661 -e /home/ayush-drakvuf/Desktop/file.txt -m linuxshellcode",@Dos98 Please also rebase on the latest master,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,666,2019-07-24T01:15:41Z,2019-08-25T14:51:10Z,2019-08-26T08:13:53Z,MERGED,True,3730,1601,26,https://github.com/Dos98,[GSoC 2019] linux-injector,27,[],https://github.com/tklengyel/drakvuf/pull/666,https://github.com/Dos98,18,https://github.com/tklengyel/drakvuf/pull/666#issuecomment-523589054,"process
Example Run: ./src/injector -r /root/linux.json -d 1 -i 2831 -e gnome-calculator -m execproc


shellcode (in dev)(Segfault while executing shellcode)
Example Run: ./src/injector -r /root/linux.json -d 1 -i 3661 -e /home/ayush-drakvuf/Desktop/file.txt -m linuxshellcode",I have my last exam tomorrow morning. I will do just after that. I am sorry for procrastinating.,True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,666,2019-07-24T01:15:41Z,2019-08-25T14:51:10Z,2019-08-26T08:13:53Z,MERGED,True,3730,1601,26,https://github.com/Dos98,[GSoC 2019] linux-injector,27,[],https://github.com/tklengyel/drakvuf/pull/666,https://github.com/GCS85,19,https://github.com/tklengyel/drakvuf/pull/666#issuecomment-524765346,"process
Example Run: ./src/injector -r /root/linux.json -d 1 -i 2831 -e gnome-calculator -m execproc


shellcode (in dev)(Segfault while executing shellcode)
Example Run: ./src/injector -r /root/linux.json -d 1 -i 3661 -e /home/ayush-drakvuf/Desktop/file.txt -m linuxshellcode","process
Example Run: ./src/injector -r /root/linux.json -d 1 -i 2831 -e gnome-calculator -m execproc
shellcode (in dev)(Segfault while executing shellcode)
Example Run: ./src/injector -r /root/linux.json -d 1 -i 3661 -e /home/ayush-drakvuf/Desktop/file.txt -m linuxshellcode 



Can it work on  VM : ubuntu14.04( 3.13.0-X86_64 )?  Which guests are supported ?
for process, which TGID should I input? ( Windows: PID_Taskmgr;  Linux : ? )",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,668,2019-07-24T12:44:23Z,2019-07-24T13:04:20Z,2019-07-24T13:04:20Z,MERGED,True,16,3,1,https://github.com/mtarral,crashmon: add json output,1,[],https://github.com/tklengyel/drakvuf/pull/668,https://github.com/mtarral,1,https://github.com/tklengyel/drakvuf/pull/668,Implement the JSON output for crashmon,Implement the JSON output for crashmon,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,668,2019-07-24T12:44:23Z,2019-07-24T13:04:20Z,2019-07-24T13:04:20Z,MERGED,True,16,3,1,https://github.com/mtarral,crashmon: add json output,1,[],https://github.com/tklengyel/drakvuf/pull/668,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/668#issuecomment-514616331,Implement the JSON output for crashmon,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,668,2019-07-24T12:44:23Z,2019-07-24T13:04:20Z,2019-07-24T13:04:20Z,MERGED,True,16,3,1,https://github.com/mtarral,crashmon: add json output,1,[],https://github.com/tklengyel/drakvuf/pull/668,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/668#issuecomment-514618327,Implement the JSON output for crashmon,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,670,2019-07-25T17:23:49Z,2019-07-25T17:44:16Z,2019-07-25T17:44:19Z,MERGED,True,118,116,15,https://github.com/tklengyel,Use bool instead of status_t in libdrakvuf.h,2,[],https://github.com/tklengyel/drakvuf/pull/670,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/670,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,671,2019-07-26T00:57:47Z,2019-07-26T01:14:18Z,2019-07-26T01:14:21Z,MERGED,True,1,1,1,https://github.com/tklengyel,Fix cppcheck warning,1,[],https://github.com/tklengyel/drakvuf/pull/671,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/671,"[src/libdrakvuf/rekall-profile.c:406]: (error) Width 15 given in format string (no. 6) is larger than destination buffer 'junk[15]', use %14s to prevent overflowing it.","[src/libdrakvuf/rekall-profile.c:406]: (error) Width 15 given in format string (no. 6) is larger than destination buffer 'junk[15]', use %14s to prevent overflowing it.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,674,2019-07-30T13:11:19Z,2019-07-30T13:50:34Z,2019-07-30T13:50:37Z,MERGED,True,8,8,1,https://github.com/tklengyel,Remove redundant pointer operations,1,[],https://github.com/tklengyel/drakvuf/pull/674,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/674,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,675,2019-08-01T13:16:26Z,2019-08-07T16:28:30Z,2019-08-09T16:54:00Z,MERGED,True,881,52,11,https://github.com/icedevml,memdump: Dumps based on user mode API calls,10,[],https://github.com/tklengyel/drakvuf/pull/675,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/675,"The aim of this PR is to implement robust, runtime user mode hooking and to eliminate (at least some) problems discussed in #669.
What we do:

we hook on NtMapViewOfSection and NtProtectVirtualMemory, because these system calls are specific to the Windows loader, so we could observe a DLL being loaded by the process
if the DLL seems to be interesting, we make sure that IMAGE_EXPORT_DIRECTORY is fully readable, if not then we use vmi_request_page_fault to force Windows to map these memory pages
we compute the addresses of interesting functions using vmi_translate_sym2v and make sure if the corresponding pages are readable, if not then we also cause a page fault

Sometimes, a page fault may trigger a system service exception. For that reason we hook KiSystemServiceException in order to suppress the system from crashing in such a case.
Moreover, sometimes a program may want to memory-patch its own DLLs (Internet Explorer is doing that, probably some kind of hotpatching) and in such a case, copy-on-write will occur. We hook MiCopyOnWrite in order to observe such cases. (Will be added in future PR)
Note: In the future, it this would be mature enough, the enclosed code may evolve into a separate plugin which would provide a behavioral log of WinAPI calls.","The aim of this PR is to implement robust, runtime user mode hooking and to eliminate (at least some) problems discussed in #669.
What we do:

we hook on NtMapViewOfSection and NtProtectVirtualMemory, because these system calls are specific to the Windows loader, so we could observe a DLL being loaded by the process
if the DLL seems to be interesting, we make sure that IMAGE_EXPORT_DIRECTORY is fully readable, if not then we use vmi_request_page_fault to force Windows to map these memory pages
we compute the addresses of interesting functions using vmi_translate_sym2v and make sure if the corresponding pages are readable, if not then we also cause a page fault

Sometimes, a page fault may trigger a system service exception. For that reason we hook KiSystemServiceException in order to suppress the system from crashing in such a case.
Moreover, sometimes a program may want to memory-patch its own DLLs (Internet Explorer is doing that, probably some kind of hotpatching) and in such a case, copy-on-write will occur. We hook MiCopyOnWrite in order to observe such cases. (Will be added in future PR)
Note: In the future, it this would be mature enough, the enclosed code may evolve into a separate plugin which would provide a behavioral log of WinAPI calls.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,675,2019-08-01T13:16:26Z,2019-08-07T16:28:30Z,2019-08-09T16:54:00Z,MERGED,True,881,52,11,https://github.com/icedevml,memdump: Dumps based on user mode API calls,10,[],https://github.com/tklengyel/drakvuf/pull/675,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/675#issuecomment-517283493,"The aim of this PR is to implement robust, runtime user mode hooking and to eliminate (at least some) problems discussed in #669.
What we do:

we hook on NtMapViewOfSection and NtProtectVirtualMemory, because these system calls are specific to the Windows loader, so we could observe a DLL being loaded by the process
if the DLL seems to be interesting, we make sure that IMAGE_EXPORT_DIRECTORY is fully readable, if not then we use vmi_request_page_fault to force Windows to map these memory pages
we compute the addresses of interesting functions using vmi_translate_sym2v and make sure if the corresponding pages are readable, if not then we also cause a page fault

Sometimes, a page fault may trigger a system service exception. For that reason we hook KiSystemServiceException in order to suppress the system from crashing in such a case.
Moreover, sometimes a program may want to memory-patch its own DLLs (Internet Explorer is doing that, probably some kind of hotpatching) and in such a case, copy-on-write will occur. We hook MiCopyOnWrite in order to observe such cases. (Will be added in future PR)
Note: In the future, it this would be mature enough, the enclosed code may evolve into a separate plugin which would provide a behavioral log of WinAPI calls.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,675,2019-08-01T13:16:26Z,2019-08-07T16:28:30Z,2019-08-09T16:54:00Z,MERGED,True,881,52,11,https://github.com/icedevml,memdump: Dumps based on user mode API calls,10,[],https://github.com/tklengyel/drakvuf/pull/675,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/675#issuecomment-517284185,"The aim of this PR is to implement robust, runtime user mode hooking and to eliminate (at least some) problems discussed in #669.
What we do:

we hook on NtMapViewOfSection and NtProtectVirtualMemory, because these system calls are specific to the Windows loader, so we could observe a DLL being loaded by the process
if the DLL seems to be interesting, we make sure that IMAGE_EXPORT_DIRECTORY is fully readable, if not then we use vmi_request_page_fault to force Windows to map these memory pages
we compute the addresses of interesting functions using vmi_translate_sym2v and make sure if the corresponding pages are readable, if not then we also cause a page fault

Sometimes, a page fault may trigger a system service exception. For that reason we hook KiSystemServiceException in order to suppress the system from crashing in such a case.
Moreover, sometimes a program may want to memory-patch its own DLLs (Internet Explorer is doing that, probably some kind of hotpatching) and in such a case, copy-on-write will occur. We hook MiCopyOnWrite in order to observe such cases. (Will be added in future PR)
Note: In the future, it this would be mature enough, the enclosed code may evolve into a separate plugin which would provide a behavioral log of WinAPI calls.",Note that there is an issue with LibVMI which is preventing this patch from working: libvmi #796. It needs to be somehow resolved first.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,675,2019-08-01T13:16:26Z,2019-08-07T16:28:30Z,2019-08-09T16:54:00Z,MERGED,True,881,52,11,https://github.com/icedevml,memdump: Dumps based on user mode API calls,10,[],https://github.com/tklengyel/drakvuf/pull/675,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/675#issuecomment-517316232,"The aim of this PR is to implement robust, runtime user mode hooking and to eliminate (at least some) problems discussed in #669.
What we do:

we hook on NtMapViewOfSection and NtProtectVirtualMemory, because these system calls are specific to the Windows loader, so we could observe a DLL being loaded by the process
if the DLL seems to be interesting, we make sure that IMAGE_EXPORT_DIRECTORY is fully readable, if not then we use vmi_request_page_fault to force Windows to map these memory pages
we compute the addresses of interesting functions using vmi_translate_sym2v and make sure if the corresponding pages are readable, if not then we also cause a page fault

Sometimes, a page fault may trigger a system service exception. For that reason we hook KiSystemServiceException in order to suppress the system from crashing in such a case.
Moreover, sometimes a program may want to memory-patch its own DLLs (Internet Explorer is doing that, probably some kind of hotpatching) and in such a case, copy-on-write will occur. We hook MiCopyOnWrite in order to observe such cases. (Will be added in future PR)
Note: In the future, it this would be mature enough, the enclosed code may evolve into a separate plugin which would provide a behavioral log of WinAPI calls.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,675,2019-08-01T13:16:26Z,2019-08-07T16:28:30Z,2019-08-09T16:54:00Z,MERGED,True,881,52,11,https://github.com/icedevml,memdump: Dumps based on user mode API calls,10,[],https://github.com/tklengyel/drakvuf/pull/675,https://github.com/icedevml,5,https://github.com/tklengyel/drakvuf/pull/675#issuecomment-517771516,"The aim of this PR is to implement robust, runtime user mode hooking and to eliminate (at least some) problems discussed in #669.
What we do:

we hook on NtMapViewOfSection and NtProtectVirtualMemory, because these system calls are specific to the Windows loader, so we could observe a DLL being loaded by the process
if the DLL seems to be interesting, we make sure that IMAGE_EXPORT_DIRECTORY is fully readable, if not then we use vmi_request_page_fault to force Windows to map these memory pages
we compute the addresses of interesting functions using vmi_translate_sym2v and make sure if the corresponding pages are readable, if not then we also cause a page fault

Sometimes, a page fault may trigger a system service exception. For that reason we hook KiSystemServiceException in order to suppress the system from crashing in such a case.
Moreover, sometimes a program may want to memory-patch its own DLLs (Internet Explorer is doing that, probably some kind of hotpatching) and in such a case, copy-on-write will occur. We hook MiCopyOnWrite in order to observe such cases. (Will be added in future PR)
Note: In the future, it this would be mature enough, the enclosed code may evolve into a separate plugin which would provide a behavioral log of WinAPI calls.","Seems like we arrived at the point where something works, i.e. it should debug-print:
[MEMDUMP-USER] Usermode callback called <pid>!<api call name>

whenever a process calls WSAStartup, SetUnhandledExceptionFilter. CryptAcquireContext* or CryptGenKey. Next week we will take some time to implement copy-on-write handling, implement actual memory dumping and do some extensive testing.",True,{'ROCKET': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,675,2019-08-01T13:16:26Z,2019-08-07T16:28:30Z,2019-08-09T16:54:00Z,MERGED,True,881,52,11,https://github.com/icedevml,memdump: Dumps based on user mode API calls,10,[],https://github.com/tklengyel/drakvuf/pull/675,https://github.com/icedevml,6,https://github.com/tklengyel/drakvuf/pull/675#issuecomment-518336591,"The aim of this PR is to implement robust, runtime user mode hooking and to eliminate (at least some) problems discussed in #669.
What we do:

we hook on NtMapViewOfSection and NtProtectVirtualMemory, because these system calls are specific to the Windows loader, so we could observe a DLL being loaded by the process
if the DLL seems to be interesting, we make sure that IMAGE_EXPORT_DIRECTORY is fully readable, if not then we use vmi_request_page_fault to force Windows to map these memory pages
we compute the addresses of interesting functions using vmi_translate_sym2v and make sure if the corresponding pages are readable, if not then we also cause a page fault

Sometimes, a page fault may trigger a system service exception. For that reason we hook KiSystemServiceException in order to suppress the system from crashing in such a case.
Moreover, sometimes a program may want to memory-patch its own DLLs (Internet Explorer is doing that, probably some kind of hotpatching) and in such a case, copy-on-write will occur. We hook MiCopyOnWrite in order to observe such cases. (Will be added in future PR)
Note: In the future, it this would be mature enough, the enclosed code may evolve into a separate plugin which would provide a behavioral log of WinAPI calls.","Ready to review, copy-on-write handling will be in separate PR, as things are starting to be pretty complex (this PR adds a lot of code even without this feature).
I wonder if the list of DLLs and the target functions should be somehow configurable by some .txt or .json file and if the whole feature should be enabled by default, as it's pretty invasive.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,675,2019-08-01T13:16:26Z,2019-08-07T16:28:30Z,2019-08-09T16:54:00Z,MERGED,True,881,52,11,https://github.com/icedevml,memdump: Dumps based on user mode API calls,10,[],https://github.com/tklengyel/drakvuf/pull/675,https://github.com/icedevml,7,https://github.com/tklengyel/drakvuf/pull/675#issuecomment-519170399,"The aim of this PR is to implement robust, runtime user mode hooking and to eliminate (at least some) problems discussed in #669.
What we do:

we hook on NtMapViewOfSection and NtProtectVirtualMemory, because these system calls are specific to the Windows loader, so we could observe a DLL being loaded by the process
if the DLL seems to be interesting, we make sure that IMAGE_EXPORT_DIRECTORY is fully readable, if not then we use vmi_request_page_fault to force Windows to map these memory pages
we compute the addresses of interesting functions using vmi_translate_sym2v and make sure if the corresponding pages are readable, if not then we also cause a page fault

Sometimes, a page fault may trigger a system service exception. For that reason we hook KiSystemServiceException in order to suppress the system from crashing in such a case.
Moreover, sometimes a program may want to memory-patch its own DLLs (Internet Explorer is doing that, probably some kind of hotpatching) and in such a case, copy-on-write will occur. We hook MiCopyOnWrite in order to observe such cases. (Will be added in future PR)
Note: In the future, it this would be mature enough, the enclosed code may evolve into a separate plugin which would provide a behavioral log of WinAPI calls.","Ok, I've did some brief final tests and it seems to work for at least a few malware samples. Can be merged.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,676,2019-08-02T13:38:50Z,2019-08-02T14:17:25Z,2019-08-02T14:17:46Z,MERGED,True,2,0,1,https://github.com/tklengyel,"Sonar broken on bionic, stick with Xenial",1,[],https://github.com/tklengyel/drakvuf/pull/676,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/676,Ticket tracker: https://jira.sonarsource.com/browse/CPP-2027,Ticket tracker: https://jira.sonarsource.com/browse/CPP-2027,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,677,2019-08-02T15:17:59Z,2019-08-02T16:06:44Z,2019-08-02T16:06:47Z,MERGED,True,6,8,2,https://github.com/tklengyel,Fix some sonar errors,1,[],https://github.com/tklengyel/drakvuf/pull/677,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/677,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,681,2019-08-09T10:21:21Z,2019-08-09T14:59:00Z,2019-08-09T16:51:37Z,MERGED,True,24,0,1,https://github.com/icedevml,Enable altp2m in runtime when DRAKVUF starts,1,[],https://github.com/tklengyel/drakvuf/pull/681,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/681,"At the moment, there is no clear way to enable altp2m when Xen is wrapped by libvirt/virsh. This PR adds an additional check which is executed when DRAKVUF inits and so invalid altp2m configuration is automatically corrected.","At the moment, there is no clear way to enable altp2m when Xen is wrapped by libvirt/virsh. This PR adds an additional check which is executed when DRAKVUF inits and so invalid altp2m configuration is automatically corrected.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,681,2019-08-09T10:21:21Z,2019-08-09T14:59:00Z,2019-08-09T16:51:37Z,MERGED,True,24,0,1,https://github.com/icedevml,Enable altp2m in runtime when DRAKVUF starts,1,[],https://github.com/tklengyel/drakvuf/pull/681,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/681#issuecomment-519867094,"At the moment, there is no clear way to enable altp2m when Xen is wrapped by libvirt/virsh. This PR adds an additional check which is executed when DRAKVUF inits and so invalid altp2m configuration is automatically corrected.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,681,2019-08-09T10:21:21Z,2019-08-09T14:59:00Z,2019-08-09T16:51:37Z,MERGED,True,24,0,1,https://github.com/icedevml,Enable altp2m in runtime when DRAKVUF starts,1,[],https://github.com/tklengyel/drakvuf/pull/681,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/681#issuecomment-519868659,"At the moment, there is no clear way to enable altp2m when Xen is wrapped by libvirt/virsh. This PR adds an additional check which is executed when DRAKVUF inits and so invalid altp2m configuration is automatically corrected.","Tested manually, seems to work when there is no altp2m key in domain's xl.cfg.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,681,2019-08-09T10:21:21Z,2019-08-09T14:59:00Z,2019-08-09T16:51:37Z,MERGED,True,24,0,1,https://github.com/icedevml,Enable altp2m in runtime when DRAKVUF starts,1,[],https://github.com/tklengyel/drakvuf/pull/681,https://github.com/mtarral,4,https://github.com/tklengyel/drakvuf/pull/681#issuecomment-519912365,"At the moment, there is no clear way to enable altp2m when Xen is wrapped by libvirt/virsh. This PR adds an additional check which is executed when DRAKVUF inits and so invalid altp2m configuration is automatically corrected.","I like the idea of enforcing altp2m when drakvuf starts.
However, this adds another direct call to Xen libraries.
As I started the discussion about having Drakuf running on KVM #679 , I would like to rebase all VMI APIs on LibVMI in the future.
So we should also think how we could implement this check in LibVMI ?
Maybe with VMI_INIT_ALTP2M at vmi_init, and put the check there directly instead of opening a new public API ?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,681,2019-08-09T10:21:21Z,2019-08-09T14:59:00Z,2019-08-09T16:51:37Z,MERGED,True,24,0,1,https://github.com/icedevml,Enable altp2m in runtime when DRAKVUF starts,1,[],https://github.com/tklengyel/drakvuf/pull/681,https://github.com/icedevml,5,https://github.com/tklengyel/drakvuf/pull/681#issuecomment-519922377,"At the moment, there is no clear way to enable altp2m when Xen is wrapped by libvirt/virsh. This PR adds an additional check which is executed when DRAKVUF inits and so invalid altp2m configuration is automatically corrected.",@mtarral Your proposition seems to be OK IMHO,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,681,2019-08-09T10:21:21Z,2019-08-09T14:59:00Z,2019-08-09T16:51:37Z,MERGED,True,24,0,1,https://github.com/icedevml,Enable altp2m in runtime when DRAKVUF starts,1,[],https://github.com/tklengyel/drakvuf/pull/681,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/681#issuecomment-519947328,"At the moment, there is no clear way to enable altp2m when Xen is wrapped by libvirt/virsh. This PR adds an additional check which is executed when DRAKVUF inits and so invalid altp2m configuration is automatically corrected.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,681,2019-08-09T10:21:21Z,2019-08-09T14:59:00Z,2019-08-09T16:51:37Z,MERGED,True,24,0,1,https://github.com/icedevml,Enable altp2m in runtime when DRAKVUF starts,1,[],https://github.com/tklengyel/drakvuf/pull/681,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/681#issuecomment-519947749,"At the moment, there is no clear way to enable altp2m when Xen is wrapped by libvirt/virsh. This PR adds an additional check which is executed when DRAKVUF inits and so invalid altp2m configuration is automatically corrected.","So we should also think how we could implement this check in LibVMI ?

I wouldn't put it in VMI init, but rather into vmi_slat_set_domain_state.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,682,2019-08-09T17:53:19Z,2019-08-09T19:15:11Z,2019-08-09T19:15:15Z,MERGED,True,1,1,1,https://github.com/tklengyel,Update Xen to 4.12.1,1,[],https://github.com/tklengyel/drakvuf/pull/682,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/682,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,683,2019-08-12T16:57:15Z,2019-08-12T23:41:55Z,2019-08-12T23:41:57Z,MERGED,True,37,29,3,https://github.com/tklengyel,Move altp2m enabling to xen_helper ,1,[],https://github.com/tklengyel/drakvuf/pull/683,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/683,"Fix some travis errors with sonarcloud
vmi.c:1458:25: error: use of undeclared identifier 'XEN_ALTP2M_external'

    if (param_altp2m != XEN_ALTP2M_external)","Fix some travis errors with sonarcloud
vmi.c:1458:25: error: use of undeclared identifier 'XEN_ALTP2M_external'

    if (param_altp2m != XEN_ALTP2M_external)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,684,2019-08-12T20:19:34Z,2019-08-13T14:42:19Z,2020-03-13T12:03:16Z,MERGED,True,5,1,1,https://github.com/icedevml,"memdump: Fix heuristic for write-memory dumps, don't dump self-writes",2,[],https://github.com/tklengyel/drakvuf/pull/684,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/684,Add previously-forgotten check. The heuristic is to track the situation when malware injects its code to the other process.,Add previously-forgotten check. The heuristic is to track the situation when malware injects its code to the other process.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,684,2019-08-12T20:19:34Z,2019-08-13T14:42:19Z,2020-03-13T12:03:16Z,MERGED,True,5,1,1,https://github.com/icedevml,"memdump: Fix heuristic for write-memory dumps, don't dump self-writes",2,[],https://github.com/tklengyel/drakvuf/pull/684,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/684#issuecomment-520579110,Add previously-forgotten check. The heuristic is to track the situation when malware injects its code to the other process.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,684,2019-08-12T20:19:34Z,2019-08-13T14:42:19Z,2020-03-13T12:03:16Z,MERGED,True,5,1,1,https://github.com/icedevml,"memdump: Fix heuristic for write-memory dumps, don't dump self-writes",2,[],https://github.com/tklengyel/drakvuf/pull/684,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/684#issuecomment-520588823,Add previously-forgotten check. The heuristic is to track the situation when malware injects its code to the other process.,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,685,2019-08-14T14:16:16Z,2019-09-04T12:59:05Z,2020-05-13T13:01:53Z,CLOSED,False,12,4,2,https://github.com/skvl,Fix error in obtaining CPL,1,[],https://github.com/tklengyel/drakvuf/pull/685,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/685,The error breaks process injection (tested Windows 7 x64 and Windows 10 x64),The error breaks process injection (tested Windows 7 x64 and Windows 10 x64),True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,685,2019-08-14T14:16:16Z,2019-09-04T12:59:05Z,2020-05-13T13:01:53Z,CLOSED,False,12,4,2,https://github.com/skvl,Fix error in obtaining CPL,1,[],https://github.com/tklengyel/drakvuf/pull/685,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/685#issuecomment-521264603,The error breaks process injection (tested Windows 7 x64 and Windows 10 x64),Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,685,2019-08-14T14:16:16Z,2019-09-04T12:59:05Z,2020-05-13T13:01:53Z,CLOSED,False,12,4,2,https://github.com/skvl,Fix error in obtaining CPL,1,[],https://github.com/tklengyel/drakvuf/pull/685,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/685#issuecomment-521274714,The error breaks process injection (tested Windows 7 x64 and Windows 10 x64),"The error breaks process injection (tested Windows 7 x64 and Windows 10 x64)

Injection works on my CI system no problem, Win7 x64 and x86 + Win10 x64.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,685,2019-08-14T14:16:16Z,2019-09-04T12:59:05Z,2020-05-13T13:01:53Z,CLOSED,False,12,4,2,https://github.com/skvl,Fix error in obtaining CPL,1,[],https://github.com/tklengyel/drakvuf/pull/685,https://github.com/skvl,4,https://github.com/tklengyel/drakvuf/pull/685#issuecomment-521610298,The error breaks process injection (tested Windows 7 x64 and Windows 10 x64),I think I have found an issue. I'm working with Xen 4.11.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,685,2019-08-14T14:16:16Z,2019-09-04T12:59:05Z,2020-05-13T13:01:53Z,CLOSED,False,12,4,2,https://github.com/skvl,Fix error in obtaining CPL,1,[],https://github.com/tklengyel/drakvuf/pull/685,https://github.com/skvl,5,https://github.com/tklengyel/drakvuf/pull/685#issuecomment-521890076,The error breaks process injection (tested Windows 7 x64 and Windows 10 x64),"@tklengyel, I have fixed mistype. Also I have add a check for SS AR so it will not be read if not empty.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,685,2019-08-14T14:16:16Z,2019-09-04T12:59:05Z,2020-05-13T13:01:53Z,CLOSED,False,12,4,2,https://github.com/skvl,Fix error in obtaining CPL,1,[],https://github.com/tklengyel/drakvuf/pull/685,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/685#issuecomment-522016019,The error breaks process injection (tested Windows 7 x64 and Windows 10 x64),So you are still using vmi_get_vcpureg here which I would like to avoid. Please verify that the issue you are seeing still happens when you are on Xen 4.12.1 and post the debug log here to verify that this is the root cause.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,685,2019-08-14T14:16:16Z,2019-09-04T12:59:05Z,2020-05-13T13:01:53Z,CLOSED,False,12,4,2,https://github.com/skvl,Fix error in obtaining CPL,1,[],https://github.com/tklengyel/drakvuf/pull/685,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/685#issuecomment-522016668,The error breaks process injection (tested Windows 7 x64 and Windows 10 x64),"I see you are actually intending this approach to be applied only to older versions of Xen. However, I specifically don't support older versions of Xen with DRAKVUF, only the latest version.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,685,2019-08-14T14:16:16Z,2019-09-04T12:59:05Z,2020-05-13T13:01:53Z,CLOSED,False,12,4,2,https://github.com/skvl,Fix error in obtaining CPL,1,[],https://github.com/tklengyel/drakvuf/pull/685,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/685#issuecomment-522024956,The error breaks process injection (tested Windows 7 x64 and Windows 10 x64),"FYI, there was a bug in LibVMI, that's why info->regs->ss_arbytes was zero, fixed in libvmi/libvmi#810",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,685,2019-08-14T14:16:16Z,2019-09-04T12:59:05Z,2020-05-13T13:01:53Z,CLOSED,False,12,4,2,https://github.com/skvl,Fix error in obtaining CPL,1,[],https://github.com/tklengyel/drakvuf/pull/685,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/685#issuecomment-522661000,The error breaks process injection (tested Windows 7 x64 and Windows 10 x64),@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,685,2019-08-14T14:16:16Z,2019-09-04T12:59:05Z,2020-05-13T13:01:53Z,CLOSED,False,12,4,2,https://github.com/skvl,Fix error in obtaining CPL,1,[],https://github.com/tklengyel/drakvuf/pull/685,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/685#issuecomment-527889013,The error breaks process injection (tested Windows 7 x64 and Windows 10 x64),@skvl I'm closing this for now,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,686,2019-08-14T18:41:09Z,2019-08-15T13:47:09Z,2019-08-15T13:47:13Z,MERGED,True,9,5,2,https://github.com/tklengyel,Update LibVMI,1,[],https://github.com/tklengyel/drakvuf/pull/686,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/686,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,687,2019-08-19T15:32:13Z,2019-08-22T21:17:16Z,2020-03-13T12:03:20Z,MERGED,True,151,19,2,https://github.com/sasza8,memdump: CoW hooks,12,[],https://github.com/tklengyel/drakvuf/pull/687,https://github.com/sasza8,1,https://github.com/tklengyel/drakvuf/pull/687,"As hooks are added per physical address, any write access to the page with the hook causes loss of it due to copy on write. This PR hooks MiCopyOnWrite function and re-adds hooks after moving hooked function to another physical address.","As hooks are added per physical address, any write access to the page with the hook causes loss of it due to copy on write. This PR hooks MiCopyOnWrite function and re-adds hooks after moving hooked function to another physical address.",True,{'THUMBS_UP': ['https://github.com/icedevml']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,687,2019-08-19T15:32:13Z,2019-08-22T21:17:16Z,2020-03-13T12:03:20Z,MERGED,True,151,19,2,https://github.com/sasza8,memdump: CoW hooks,12,[],https://github.com/tklengyel/drakvuf/pull/687,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/687#issuecomment-522630158,"As hooks are added per physical address, any write access to the page with the hook causes loss of it due to copy on write. This PR hooks MiCopyOnWrite function and re-adds hooks after moving hooked function to another physical address.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,687,2019-08-19T15:32:13Z,2019-08-22T21:17:16Z,2020-03-13T12:03:20Z,MERGED,True,151,19,2,https://github.com/sasza8,memdump: CoW hooks,12,[],https://github.com/tklengyel/drakvuf/pull/687,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/687#issuecomment-522661722,"As hooks are added per physical address, any write access to the page with the hook causes loss of it due to copy on write. This PR hooks MiCopyOnWrite function and re-adds hooks after moving hooked function to another physical address.","Bring xen back to ba62d9e360f830ed21daaec7205339bc312f2e56

Why?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,687,2019-08-19T15:32:13Z,2019-08-22T21:17:16Z,2020-03-13T12:03:20Z,MERGED,True,151,19,2,https://github.com/sasza8,memdump: CoW hooks,12,[],https://github.com/tklengyel/drakvuf/pull/687,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/687#issuecomment-522667801,"As hooks are added per physical address, any write access to the page with the hook causes loss of it due to copy on write. This PR hooks MiCopyOnWrite function and re-adds hooks after moving hooked function to another physical address.","Bring xen back to ba62d9e360f830ed21daaec7205339bc312f2e56

Why?

This PR updates (downgrades?) xen and libvmi submodule but it's not necessary (rather accidental)",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,687,2019-08-19T15:32:13Z,2019-08-22T21:17:16Z,2020-03-13T12:03:20Z,MERGED,True,151,19,2,https://github.com/sasza8,memdump: CoW hooks,12,[],https://github.com/tklengyel/drakvuf/pull/687,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/687#issuecomment-523021293,"As hooks are added per physical address, any write access to the page with the hook causes loss of it due to copy on write. This PR hooks MiCopyOnWrite function and re-adds hooks after moving hooked function to another physical address.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,687,2019-08-19T15:32:13Z,2019-08-22T21:17:16Z,2020-03-13T12:03:20Z,MERGED,True,151,19,2,https://github.com/sasza8,memdump: CoW hooks,12,[],https://github.com/tklengyel/drakvuf/pull/687,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/687#issuecomment-523057034,"As hooks are added per physical address, any write access to the page with the hook causes loss of it due to copy on write. This PR hooks MiCopyOnWrite function and re-adds hooks after moving hooked function to another physical address.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,687,2019-08-19T15:32:13Z,2019-08-22T21:17:16Z,2020-03-13T12:03:20Z,MERGED,True,151,19,2,https://github.com/sasza8,memdump: CoW hooks,12,[],https://github.com/tklengyel/drakvuf/pull/687,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/687#issuecomment-523088151,"As hooks are added per physical address, any write access to the page with the hook causes loss of it due to copy on write. This PR hooks MiCopyOnWrite function and re-adds hooks after moving hooked function to another physical address.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,687,2019-08-19T15:32:13Z,2019-08-22T21:17:16Z,2020-03-13T12:03:20Z,MERGED,True,151,19,2,https://github.com/sasza8,memdump: CoW hooks,12,[],https://github.com/tklengyel/drakvuf/pull/687,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/687#issuecomment-523991642,"As hooks are added per physical address, any write access to the page with the hook causes loss of it due to copy on write. This PR hooks MiCopyOnWrite function and re-adds hooks after moving hooked function to another physical address.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,687,2019-08-19T15:32:13Z,2019-08-22T21:17:16Z,2020-03-13T12:03:20Z,MERGED,True,151,19,2,https://github.com/sasza8,memdump: CoW hooks,12,[],https://github.com/tklengyel/drakvuf/pull/687,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/687#issuecomment-524008289,"As hooks are added per physical address, any write access to the page with the hook causes loss of it due to copy on write. This PR hooks MiCopyOnWrite function and re-adds hooks after moving hooked function to another physical address.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,687,2019-08-19T15:32:13Z,2019-08-22T21:17:16Z,2020-03-13T12:03:20Z,MERGED,True,151,19,2,https://github.com/sasza8,memdump: CoW hooks,12,[],https://github.com/tklengyel/drakvuf/pull/687,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/687#issuecomment-524057198,"As hooks are added per physical address, any write access to the page with the hook causes loss of it due to copy on write. This PR hooks MiCopyOnWrite function and re-adds hooks after moving hooked function to another physical address.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,688,2019-08-20T15:53:24Z,2019-08-20T16:07:54Z,2019-08-20T16:07:57Z,MERGED,True,6,0,1,https://github.com/tklengyel,Memdump: don't exit if no WoW profile provided,1,[],https://github.com/tklengyel/drakvuf/pull/688,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/688,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,690,2019-08-21T17:43:07Z,2019-08-21T18:06:56Z,2020-03-13T12:03:17Z,MERGED,True,50,0,1,https://github.com/icedevml,Add JSON output mode in injector,1,[],https://github.com/tklengyel/drakvuf/pull/690,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/690,"Currently, with -o json injector outputs log lines in default format, which may be inconvenient. This PR adds JSON output format.","Currently, with -o json injector outputs log lines in default format, which may be inconvenient. This PR adds JSON output format.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,690,2019-08-21T17:43:07Z,2019-08-21T18:06:56Z,2020-03-13T12:03:17Z,MERGED,True,50,0,1,https://github.com/icedevml,Add JSON output mode in injector,1,[],https://github.com/tklengyel/drakvuf/pull/690,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/690#issuecomment-523572089,"Currently, with -o json injector outputs log lines in default format, which may be inconvenient. This PR adds JSON output format.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,690,2019-08-21T17:43:07Z,2019-08-21T18:06:56Z,2020-03-13T12:03:17Z,MERGED,True,50,0,1,https://github.com/icedevml,Add JSON output mode in injector,1,[],https://github.com/tklengyel/drakvuf/pull/690,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/690#issuecomment-523573320,"Currently, with -o json injector outputs log lines in default format, which may be inconvenient. This PR adds JSON output format.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,691,2019-08-21T18:10:43Z,2019-09-04T21:40:04Z,2020-03-13T12:03:18Z,MERGED,True,14,6,3,https://github.com/icedevml,memdump: initialize properly even if WOW64 NTDLL profile is not provided,1,[],https://github.com/tklengyel/drakvuf/pull/691,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/691,[Work in progress] Fix memdump so it doesn't require WOW64 NTDLL profile to be provided at all times.,[Work in progress] Fix memdump so it doesn't require WOW64 NTDLL profile to be provided at all times.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,691,2019-08-21T18:10:43Z,2019-09-04T21:40:04Z,2020-03-13T12:03:18Z,MERGED,True,14,6,3,https://github.com/icedevml,memdump: initialize properly even if WOW64 NTDLL profile is not provided,1,[],https://github.com/tklengyel/drakvuf/pull/691,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/691#issuecomment-523585237,[Work in progress] Fix memdump so it doesn't require WOW64 NTDLL profile to be provided at all times.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,691,2019-08-21T18:10:43Z,2019-09-04T21:40:04Z,2020-03-13T12:03:18Z,MERGED,True,14,6,3,https://github.com/icedevml,memdump: initialize properly even if WOW64 NTDLL profile is not provided,1,[],https://github.com/tklengyel/drakvuf/pull/691,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/691#issuecomment-523586559,[Work in progress] Fix memdump so it doesn't require WOW64 NTDLL profile to be provided at all times.,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,691,2019-08-21T18:10:43Z,2019-09-04T21:40:04Z,2020-03-13T12:03:18Z,MERGED,True,14,6,3,https://github.com/icedevml,memdump: initialize properly even if WOW64 NTDLL profile is not provided,1,[],https://github.com/tklengyel/drakvuf/pull/691,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/691#issuecomment-527888783,[Work in progress] Fix memdump so it doesn't require WOW64 NTDLL profile to be provided at all times.,What's the status of this PR?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,691,2019-08-21T18:10:43Z,2019-09-04T21:40:04Z,2020-03-13T12:03:18Z,MERGED,True,14,6,3,https://github.com/icedevml,memdump: initialize properly even if WOW64 NTDLL profile is not provided,1,[],https://github.com/tklengyel/drakvuf/pull/691,https://github.com/icedevml,5,https://github.com/tklengyel/drakvuf/pull/691#issuecomment-527942943,[Work in progress] Fix memdump so it doesn't require WOW64 NTDLL profile to be provided at all times.,"I had some interruptions recently, going back to it soon.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,691,2019-08-21T18:10:43Z,2019-09-04T21:40:04Z,2020-03-13T12:03:18Z,MERGED,True,14,6,3,https://github.com/icedevml,memdump: initialize properly even if WOW64 NTDLL profile is not provided,1,[],https://github.com/tklengyel/drakvuf/pull/691,https://github.com/icedevml,6,https://github.com/tklengyel/drakvuf/pull/691#issuecomment-528088474,[Work in progress] Fix memdump so it doesn't require WOW64 NTDLL profile to be provided at all times.,After rough tests everything seems to be OK with this PR. I think it's ready to merge.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,692,2019-08-21T19:15:31Z,2019-08-22T00:58:15Z,2020-03-13T12:03:19Z,MERGED,True,209,130,4,https://github.com/icedevml,"memdump: better heuristics in memdump plugin, deduplicate dumps by hash",2,[],https://github.com/tklengyel/drakvuf/pull/692,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/692,"Refactor code in memdump, introduce some additional heuristics and deduplicate memory dumps by their hash.","Refactor code in memdump, introduce some additional heuristics and deduplicate memory dumps by their hash.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,692,2019-08-21T19:15:31Z,2019-08-22T00:58:15Z,2020-03-13T12:03:19Z,MERGED,True,209,130,4,https://github.com/icedevml,"memdump: better heuristics in memdump plugin, deduplicate dumps by hash",2,[],https://github.com/tklengyel/drakvuf/pull/692,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/692#issuecomment-523609863,"Refactor code in memdump, introduce some additional heuristics and deduplicate memory dumps by their hash.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,692,2019-08-21T19:15:31Z,2019-08-22T00:58:15Z,2020-03-13T12:03:19Z,MERGED,True,209,130,4,https://github.com/icedevml,"memdump: better heuristics in memdump plugin, deduplicate dumps by hash",2,[],https://github.com/tklengyel/drakvuf/pull/692,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/692#issuecomment-523632751,"Refactor code in memdump, introduce some additional heuristics and deduplicate memory dumps by their hash.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,692,2019-08-21T19:15:31Z,2019-08-22T00:58:15Z,2020-03-13T12:03:19Z,MERGED,True,209,130,4,https://github.com/icedevml,"memdump: better heuristics in memdump plugin, deduplicate dumps by hash",2,[],https://github.com/tklengyel/drakvuf/pull/692,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/692#issuecomment-523671235,"Refactor code in memdump, introduce some additional heuristics and deduplicate memory dumps by their hash.","@icedevml LGTM, let's merge?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,692,2019-08-21T19:15:31Z,2019-08-22T00:58:15Z,2020-03-13T12:03:19Z,MERGED,True,209,130,4,https://github.com/icedevml,"memdump: better heuristics in memdump plugin, deduplicate dumps by hash",2,[],https://github.com/tklengyel/drakvuf/pull/692,https://github.com/icedevml,5,https://github.com/tklengyel/drakvuf/pull/692#issuecomment-523674451,"Refactor code in memdump, introduce some additional heuristics and deduplicate memory dumps by their hash.","@tklengyel We've been running this patch on our test server for a few hours already, seems to work tho. Can be merged.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,693,2019-08-24T20:12:19Z,2019-08-25T13:20:38Z,2019-08-25T13:20:38Z,MERGED,True,1249,84220,46,https://github.com/the-elves,Gsoc 2019 afl injector,25,[],https://github.com/tklengyel/drakvuf/pull/693,https://github.com/the-elves,1,https://github.com/tklengyel/drakvuf/pull/693,"The code is generalised and documentation updated with instructions to setup.
Comments added","The code is generalised and documentation updated with instructions to setup.
Comments added",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,693,2019-08-24T20:12:19Z,2019-08-25T13:20:38Z,2019-08-25T13:20:38Z,MERGED,True,1249,84220,46,https://github.com/the-elves,Gsoc 2019 afl injector,25,[],https://github.com/tklengyel/drakvuf/pull/693,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/693#issuecomment-524577334,"The code is generalised and documentation updated with instructions to setup.
Comments added",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,693,2019-08-24T20:12:19Z,2019-08-25T13:20:38Z,2019-08-25T13:20:38Z,MERGED,True,1249,84220,46,https://github.com/the-elves,Gsoc 2019 afl injector,25,[],https://github.com/tklengyel/drakvuf/pull/693,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/693#issuecomment-524592554,"The code is generalised and documentation updated with instructions to setup.
Comments added",To get Travis to build this properly you will need to add libcapstone-dev to the apt-get line in .travis.yml,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,694,2019-08-28T16:30:47Z,2019-08-28T21:27:35Z,2020-03-13T12:03:20Z,MERGED,True,6,2,1,https://github.com/sasza8,fixed bug while deleting usermode hook,2,[],https://github.com/tklengyel/drakvuf/pull/694,https://github.com/sasza8,1,https://github.com/tklengyel/drakvuf/pull/694,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,694,2019-08-28T16:30:47Z,2019-08-28T21:27:35Z,2020-03-13T12:03:20Z,MERGED,True,6,2,1,https://github.com/sasza8,fixed bug while deleting usermode hook,2,[],https://github.com/tklengyel/drakvuf/pull/694,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/694#issuecomment-525822373,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,694,2019-08-28T16:30:47Z,2019-08-28T21:27:35Z,2020-03-13T12:03:20Z,MERGED,True,6,2,1,https://github.com/sasza8,fixed bug while deleting usermode hook,2,[],https://github.com/tklengyel/drakvuf/pull/694,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/694#issuecomment-525823518,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,695,2019-08-29T09:19:44Z,2019-08-29T14:29:28Z,2019-08-29T15:15:28Z,MERGED,True,51,26,1,https://github.com/mtarral,vmi: replace xc_altp2m calls by vmi_slat functions from LibVMI,1,[],https://github.com/tklengyel/drakvuf/pull/695,https://github.com/mtarral,1,https://github.com/tklengyel/drakvuf/pull/695,"Working on issue #679, this PR removes some of the direct calls made to Xen libraries, using LibVMI as an abstraction layer instead.
The only call which is missing is vmi_slat_set_domain_state(true), because it's already handled in xen_helper.c:xen_enable_altp2m().
This function should be integrated in Libvmi as well. (#681 (comment))","Working on issue #679, this PR removes some of the direct calls made to Xen libraries, using LibVMI as an abstraction layer instead.
The only call which is missing is vmi_slat_set_domain_state(true), because it's already handled in xen_helper.c:xen_enable_altp2m().
This function should be integrated in Libvmi as well. (#681 (comment))",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,695,2019-08-29T09:19:44Z,2019-08-29T14:29:28Z,2019-08-29T15:15:28Z,MERGED,True,51,26,1,https://github.com/mtarral,vmi: replace xc_altp2m calls by vmi_slat functions from LibVMI,1,[],https://github.com/tklengyel/drakvuf/pull/695,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/695#issuecomment-526101796,"Working on issue #679, this PR removes some of the direct calls made to Xen libraries, using LibVMI as an abstraction layer instead.
The only call which is missing is vmi_slat_set_domain_state(true), because it's already handled in xen_helper.c:xen_enable_altp2m().
This function should be integrated in Libvmi as well. (#681 (comment))",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,695,2019-08-29T09:19:44Z,2019-08-29T14:29:28Z,2019-08-29T15:15:28Z,MERGED,True,51,26,1,https://github.com/mtarral,vmi: replace xc_altp2m calls by vmi_slat functions from LibVMI,1,[],https://github.com/tklengyel/drakvuf/pull/695,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/695#issuecomment-526178189,"Working on issue #679, this PR removes some of the direct calls made to Xen libraries, using LibVMI as an abstraction layer instead.
The only call which is missing is vmi_slat_set_domain_state(true), because it's already handled in xen_helper.c:xen_enable_altp2m().
This function should be integrated in Libvmi as well. (#681 (comment))",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,695,2019-08-29T09:19:44Z,2019-08-29T14:29:28Z,2019-08-29T15:15:28Z,MERGED,True,51,26,1,https://github.com/mtarral,vmi: replace xc_altp2m calls by vmi_slat functions from LibVMI,1,[],https://github.com/tklengyel/drakvuf/pull/695,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/695#issuecomment-526212054,"Working on issue #679, this PR removes some of the direct calls made to Xen libraries, using LibVMI as an abstraction layer instead.
The only call which is missing is vmi_slat_set_domain_state(true), because it's already handled in xen_helper.c:xen_enable_altp2m().
This function should be integrated in Libvmi as well. (#681 (comment))",Thanks!,True,{'THUMBS_UP': ['https://github.com/Wenzel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,696,2019-09-02T16:33:25Z,2019-09-04T12:57:55Z,2020-03-13T12:03:22Z,MERGED,True,6,3,1,https://github.com/sasza8,fix HOOK_FAIL lookup in CoW,2,[],https://github.com/tklengyel/drakvuf/pull/696,https://github.com/sasza8,1,https://github.com/tklengyel/drakvuf/pull/696,"If there were failed hooks, ""trap"" was NULL causing crashes.","If there were failed hooks, ""trap"" was NULL causing crashes.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,696,2019-09-02T16:33:25Z,2019-09-04T12:57:55Z,2020-03-13T12:03:22Z,MERGED,True,6,3,1,https://github.com/sasza8,fix HOOK_FAIL lookup in CoW,2,[],https://github.com/tklengyel/drakvuf/pull/696,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/696#issuecomment-527200552,"If there were failed hooks, ""trap"" was NULL causing crashes.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,696,2019-09-02T16:33:25Z,2019-09-04T12:57:55Z,2020-03-13T12:03:22Z,MERGED,True,6,3,1,https://github.com/sasza8,fix HOOK_FAIL lookup in CoW,2,[],https://github.com/tklengyel/drakvuf/pull/696,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/696#issuecomment-527257632,"If there were failed hooks, ""trap"" was NULL causing crashes.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,696,2019-09-02T16:33:25Z,2019-09-04T12:57:55Z,2020-03-13T12:03:22Z,MERGED,True,6,3,1,https://github.com/sasza8,fix HOOK_FAIL lookup in CoW,2,[],https://github.com/tklengyel/drakvuf/pull/696,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/696#issuecomment-527267369,"If there were failed hooks, ""trap"" was NULL causing crashes.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,696,2019-09-02T16:33:25Z,2019-09-04T12:57:55Z,2020-03-13T12:03:22Z,MERGED,True,6,3,1,https://github.com/sasza8,fix HOOK_FAIL lookup in CoW,2,[],https://github.com/tklengyel/drakvuf/pull/696,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/696#issuecomment-527453557,"If there were failed hooks, ""trap"" was NULL causing crashes.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,696,2019-09-02T16:33:25Z,2019-09-04T12:57:55Z,2020-03-13T12:03:22Z,MERGED,True,6,3,1,https://github.com/sasza8,fix HOOK_FAIL lookup in CoW,2,[],https://github.com/tklengyel/drakvuf/pull/696,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/696#issuecomment-527883924,"If there were failed hooks, ""trap"" was NULL causing crashes.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,698,2019-09-05T17:36:56Z,2019-09-05T18:07:07Z,2019-09-05T18:07:10Z,MERGED,True,77,2,2,https://github.com/tklengyel,Remove switch-enum from compiler checks in plugins,2,[],https://github.com/tklengyel/drakvuf/pull/698,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/698,Fixes #697,Fixes #697,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,701,2019-09-06T16:15:34Z,2019-09-06T19:23:48Z,2019-09-07T04:55:40Z,MERGED,True,3,3,2,https://github.com/umarfarook882,Fix debugmon and socketmon JSON output,1,[],https://github.com/tklengyel/drakvuf/pull/701,https://github.com/umarfarook882,1,https://github.com/tklengyel/drakvuf/pull/701,Fixes #699 #700,Fixes #699 #700,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,701,2019-09-06T16:15:34Z,2019-09-06T19:23:48Z,2019-09-07T04:55:40Z,MERGED,True,3,3,2,https://github.com/umarfarook882,Fix debugmon and socketmon JSON output,1,[],https://github.com/tklengyel/drakvuf/pull/701,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/701#issuecomment-528918262,Fixes #699 #700,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,701,2019-09-06T16:15:34Z,2019-09-06T19:23:48Z,2019-09-07T04:55:40Z,MERGED,True,3,3,2,https://github.com/umarfarook882,Fix debugmon and socketmon JSON output,1,[],https://github.com/tklengyel/drakvuf/pull/701,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/701#issuecomment-528932753,Fixes #699 #700,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,701,2019-09-06T16:15:34Z,2019-09-06T19:23:48Z,2019-09-07T04:55:40Z,MERGED,True,3,3,2,https://github.com/umarfarook882,Fix debugmon and socketmon JSON output,1,[],https://github.com/tklengyel/drakvuf/pull/701,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/701#issuecomment-528946022,Fixes #699 #700,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,702,2019-09-06T17:55:17Z,2019-09-06T20:01:59Z,2019-09-06T20:01:59Z,CLOSED,False,1,1,1,https://github.com/Dos98,Filetracer Plugin for Linux.,1,[],https://github.com/tklengyel/drakvuf/pull/702,https://github.com/Dos98,1,https://github.com/tklengyel/drakvuf/pull/702,Set off to build filetracer plugin for Linux.,Set off to build filetracer plugin for Linux.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,702,2019-09-06T17:55:17Z,2019-09-06T20:01:59Z,2019-09-06T20:01:59Z,CLOSED,False,1,1,1,https://github.com/Dos98,Filetracer Plugin for Linux.,1,[],https://github.com/tklengyel/drakvuf/pull/702,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/702#issuecomment-528952562,Set off to build filetracer plugin for Linux.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,702,2019-09-06T17:55:17Z,2019-09-06T20:01:59Z,2019-09-06T20:01:59Z,CLOSED,False,1,1,1,https://github.com/Dos98,Filetracer Plugin for Linux.,1,[],https://github.com/tklengyel/drakvuf/pull/702,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/702#issuecomment-528994844,Set off to build filetracer plugin for Linux.,Please open the PR when the code is ready for review,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,704,2019-10-01T11:57:47Z,2019-10-01T13:27:17Z,2019-10-01T13:27:17Z,CLOSED,False,6,32,3,https://github.com/mtarral,vmi: use vmi_slat_set_domain_state,1,[],https://github.com/tklengyel/drakvuf/pull/704,https://github.com/mtarral,1,https://github.com/tklengyel/drakvuf/pull/704,"This PR goes with libvmi/libvmi#816
Moving the enforcement of ALTP2M_external in Libvmi, and using vmi_slat_set_domain_state.
Helps for #679","This PR goes with libvmi/libvmi#816
Moving the enforcement of ALTP2M_external in Libvmi, and using vmi_slat_set_domain_state.
Helps for #679",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,704,2019-10-01T11:57:47Z,2019-10-01T13:27:17Z,2019-10-01T13:27:17Z,CLOSED,False,6,32,3,https://github.com/mtarral,vmi: use vmi_slat_set_domain_state,1,[],https://github.com/tklengyel/drakvuf/pull/704,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/704#issuecomment-537002492,"This PR goes with libvmi/libvmi#816
Moving the enforcement of ALTP2M_external in Libvmi, and using vmi_slat_set_domain_state.
Helps for #679",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,704,2019-10-01T11:57:47Z,2019-10-01T13:27:17Z,2019-10-01T13:27:17Z,CLOSED,False,6,32,3,https://github.com/mtarral,vmi: use vmi_slat_set_domain_state,1,[],https://github.com/tklengyel/drakvuf/pull/704,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/704#issuecomment-537035459,"This PR goes with libvmi/libvmi#816
Moving the enforcement of ALTP2M_external in Libvmi, and using vmi_slat_set_domain_state.
Helps for #679",Declined,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,705,2019-10-01T15:06:06Z,2019-10-01T16:22:45Z,2019-10-01T16:34:37Z,MERGED,True,2,3,1,https://github.com/mtarral,build: remove Wstrict-prototypes and Wmissing-prototypes for cpp,1,[],https://github.com/tklengyel/drakvuf/pull/705,https://github.com/mtarral,1,https://github.com/tklengyel/drakvuf/pull/705,"This PR removes useless CPP flags, since the C++ compiler will always show warnings for missing prototypes.
source: https://stackoverflow.com/a/2389184/3017219","This PR removes useless CPP flags, since the C++ compiler will always show warnings for missing prototypes.
source: https://stackoverflow.com/a/2389184/3017219",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,705,2019-10-01T15:06:06Z,2019-10-01T16:22:45Z,2019-10-01T16:34:37Z,MERGED,True,2,3,1,https://github.com/mtarral,build: remove Wstrict-prototypes and Wmissing-prototypes for cpp,1,[],https://github.com/tklengyel/drakvuf/pull/705,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/705#issuecomment-537080643,"This PR removes useless CPP flags, since the C++ compiler will always show warnings for missing prototypes.
source: https://stackoverflow.com/a/2389184/3017219",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,705,2019-10-01T15:06:06Z,2019-10-01T16:22:45Z,2019-10-01T16:34:37Z,MERGED,True,2,3,1,https://github.com/mtarral,build: remove Wstrict-prototypes and Wmissing-prototypes for cpp,1,[],https://github.com/tklengyel/drakvuf/pull/705,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/705#issuecomment-537107671,"This PR removes useless CPP flags, since the C++ compiler will always show warnings for missing prototypes.
source: https://stackoverflow.com/a/2389184/3017219",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,705,2019-10-01T15:06:06Z,2019-10-01T16:22:45Z,2019-10-01T16:34:37Z,MERGED,True,2,3,1,https://github.com/mtarral,build: remove Wstrict-prototypes and Wmissing-prototypes for cpp,1,[],https://github.com/tklengyel/drakvuf/pull/705,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/705#issuecomment-537108455,"This PR removes useless CPP flags, since the C++ compiler will always show warnings for missing prototypes.
source: https://stackoverflow.com/a/2389184/3017219",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,707,2019-10-02T16:42:05Z,2020-03-03T01:46:52Z,2020-03-03T01:46:52Z,CLOSED,False,136,19,5,https://github.com/Dos98,Implemented fork before exec in Linux-injector,1,[],https://github.com/tklengyel/drakvuf/pull/707,https://github.com/Dos98,1,https://github.com/tklengyel/drakvuf/pull/707,Work In Progress,Work In Progress,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,707,2019-10-02T16:42:05Z,2020-03-03T01:46:52Z,2020-03-03T01:46:52Z,CLOSED,False,136,19,5,https://github.com/Dos98,Implemented fork before exec in Linux-injector,1,[],https://github.com/tklengyel/drakvuf/pull/707,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/707#issuecomment-537579063,Work In Progress,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,707,2019-10-02T16:42:05Z,2020-03-03T01:46:52Z,2020-03-03T01:46:52Z,CLOSED,False,136,19,5,https://github.com/Dos98,Implemented fork before exec in Linux-injector,1,[],https://github.com/tklengyel/drakvuf/pull/707,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/707#issuecomment-593723232,Work In Progress,@Dos98 I'm closing this for now,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,708,2019-10-05T00:49:12Z,2019-10-05T01:03:59Z,2019-10-05T05:08:25Z,MERGED,True,1,1,1,https://github.com/tklengyel,Fix lingering remapped gfns after memaccess traps are gone,1,[],https://github.com/tklengyel/drakvuf/pull/708,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/708,"Removing the entry completely is safe for both remapped and non-remapped GFNs as it will just trigger a copy form the hostp2m on the next fault.
This is most likely the bug behind the following tickets:
Fixes #576
Fixes #622
Thanks to @icedevml for finally figuring this one out!","Removing the entry completely is safe for both remapped and non-remapped GFNs as it will just trigger a copy form the hostp2m on the next fault.
This is most likely the bug behind the following tickets:
Fixes #576
Fixes #622
Thanks to @icedevml for finally figuring this one out!",True,"{'THUMBS_UP': ['https://github.com/icedevml', 'https://github.com/psrok1', 'https://github.com/Wenzel', 'https://github.com/aoshiken'], 'HEART': ['https://github.com/Wenzel'], 'ROCKET': ['https://github.com/Wenzel'], 'HOORAY': ['https://github.com/Wenzel', 'https://github.com/chivay']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,708,2019-10-05T00:49:12Z,2019-10-05T01:03:59Z,2019-10-05T05:08:25Z,MERGED,True,1,1,1,https://github.com/tklengyel,Fix lingering remapped gfns after memaccess traps are gone,1,[],https://github.com/tklengyel/drakvuf/pull/708,https://github.com/icedevml,2,https://github.com/tklengyel/drakvuf/pull/708#issuecomment-538617171,"Removing the entry completely is safe for both remapped and non-remapped GFNs as it will just trigger a copy form the hostp2m on the next fault.
This is most likely the bug behind the following tickets:
Fixes #576
Fixes #622
Thanks to @icedevml for finally figuring this one out!","Huge thanks for that patch.
Also thanks @sasza8 for finding the cases under which this bug reliably triggers and initial investigation.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,709,2019-10-05T03:10:09Z,2019-10-05T03:24:35Z,2019-10-05T03:24:39Z,MERGED,True,25,11,5,https://github.com/tklengyel,Travis CI updates,4,[],https://github.com/tklengyel/drakvuf/pull/709,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/709,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,710,2019-10-05T15:47:10Z,2019-10-05T16:01:42Z,2019-10-05T16:01:45Z,MERGED,True,1,1,1,https://github.com/tklengyel,Bump version to 0.7,1,[],https://github.com/tklengyel/drakvuf/pull/710,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/710,,,True,{'HOORAY': ['https://github.com/Dos98']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,712,2019-10-07T17:47:25Z,2019-10-07T18:09:31Z,2019-10-07T18:09:33Z,MERGED,True,52,52,18,https://github.com/tklengyel,Use g_try_malloc0,1,[],https://github.com/tklengyel/drakvuf/pull/712,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/712,Allows to handle oom situations gracefully,Allows to handle oom situations gracefully,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,713,2019-10-07T18:13:40Z,2019-10-07T19:47:24Z,2019-10-07T19:47:26Z,MERGED,True,1,1,1,https://github.com/tklengyel,Update LibVMI,1,[],https://github.com/tklengyel/drakvuf/pull/713,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/713,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,714,2019-10-07T18:27:15Z,2019-10-09T16:43:45Z,2020-03-13T12:03:27Z,CLOSED,False,295,1,11,https://github.com/icedevml,Add Ubuntu deb package build to Travis,1,[],https://github.com/tklengyel/drakvuf/pull/714,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/714,Discussion in ticket #711,Discussion in ticket #711,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,714,2019-10-07T18:27:15Z,2019-10-09T16:43:45Z,2020-03-13T12:03:27Z,CLOSED,False,295,1,11,https://github.com/icedevml,Add Ubuntu deb package build to Travis,1,[],https://github.com/tklengyel/drakvuf/pull/714,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/714#issuecomment-539143446,Discussion in ticket #711,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,714,2019-10-07T18:27:15Z,2019-10-09T16:43:45Z,2020-03-13T12:03:27Z,CLOSED,False,295,1,11,https://github.com/icedevml,Add Ubuntu deb package build to Travis,1,[],https://github.com/tklengyel/drakvuf/pull/714,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/714#issuecomment-539233743,Discussion in ticket #711,"This would build particularly long on Travis. I guess we need two more steps:

build weekly Docker base image with Ubuntu/Debian and all build-time dependencies included, if weekly image was already built then just pull it from the Docker Hub, saving ~5-10 minutes
build Xen intermediate-step image for given submodule hash of Xen, if the image for given hash was already built then just pull it from Docker Hub, saving another ~15 minutes

then I guess it would take up to few minutes to make a quick rebuild. We need Docker Hub login credentials and GitHub API key to be configured as a secret in Travis CI, in order to do it like that.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,714,2019-10-07T18:27:15Z,2019-10-09T16:43:45Z,2020-03-13T12:03:27Z,CLOSED,False,295,1,11,https://github.com/icedevml,Add Ubuntu deb package build to Travis,1,[],https://github.com/tklengyel/drakvuf/pull/714,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/714#issuecomment-539236113,Discussion in ticket #711,"Also this travis_wait is hiding all the command output, this needs to be fixed. I will check it out later.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,714,2019-10-07T18:27:15Z,2019-10-09T16:43:45Z,2020-03-13T12:03:27Z,CLOSED,False,295,1,11,https://github.com/icedevml,Add Ubuntu deb package build to Travis,1,[],https://github.com/tklengyel/drakvuf/pull/714,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/714#issuecomment-539263206,Discussion in ticket #711,I'm not really concerned about long build time as long as it doesn't time-out on Travis. Having to manually update docker images is not really ideal.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,715,2019-10-08T18:03:51Z,2019-10-09T16:43:22Z,2020-01-08T23:34:28Z,CLOSED,False,324,1,10,https://github.com/tklengyel,Generate binary packages on Travis automatically,7,[],https://github.com/tklengyel/drakvuf/pull/715,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/715,"Generate binary builds and push them as releases under the https://github.com/tklengyel/drakvuf-builds repository
Fixes #711","Generate binary builds and push them as releases under the https://github.com/tklengyel/drakvuf-builds repository
Fixes #711",True,{'THUMBS_UP': ['https://github.com/icedevml']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,715,2019-10-08T18:03:51Z,2019-10-09T16:43:22Z,2020-01-08T23:34:28Z,CLOSED,False,324,1,10,https://github.com/tklengyel,Generate binary packages on Travis automatically,7,[],https://github.com/tklengyel/drakvuf/pull/715,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/715#issuecomment-539634644,"Generate binary builds and push them as releases under the https://github.com/tklengyel/drakvuf-builds repository
Fixes #711",/cc @icedevml,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,715,2019-10-08T18:03:51Z,2019-10-09T16:43:22Z,2020-01-08T23:34:28Z,CLOSED,False,324,1,10,https://github.com/tklengyel,Generate binary packages on Travis automatically,7,[],https://github.com/tklengyel/drakvuf/pull/715,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/715#issuecomment-539661835,"Generate binary builds and push them as releases under the https://github.com/tklengyel/drakvuf-builds repository
Fixes #711",Seems to be working fine: https://github.com/tklengyel/drakvuf-builds/releases/tag/20191008191654-d240fa6,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,715,2019-10-08T18:03:51Z,2019-10-09T16:43:22Z,2020-01-08T23:34:28Z,CLOSED,False,324,1,10,https://github.com/tklengyel,Generate binary packages on Travis automatically,7,[],https://github.com/tklengyel/drakvuf/pull/715,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/715#issuecomment-540036107,"Generate binary builds and push them as releases under the https://github.com/tklengyel/drakvuf-builds repository
Fixes #711",@icedevml I'm not sure what the benefit of building the debs using Docker. The Travis build environment is already an Ubuntu Bionic image.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,715,2019-10-08T18:03:51Z,2019-10-09T16:43:22Z,2020-01-08T23:34:28Z,CLOSED,False,324,1,10,https://github.com/tklengyel,Generate binary packages on Travis automatically,7,[],https://github.com/tklengyel/drakvuf/pull/715,https://github.com/icedevml,5,https://github.com/tklengyel/drakvuf/pull/715#issuecomment-540041081,"Generate binary builds and push them as releases under the https://github.com/tklengyel/drakvuf-builds repository
Fixes #711","@tklengyel Because it's inside Docker, it is very easy to run it on a local machine and receive a build. Thus, the build would be reproducible and we would have much easier way of dealing with potential bugs. Also it is possible to target e.g. Debian Buster just by changing FROM line in the Dockerfile, regardless of your native system. For me it's extremely handy that I could test a build prior to even pushing it to GitHub, especially if I have a stronger machine than Travis CI worker.
Xen Project also has such thing: https://github.com/Xilinx/xen/tree/master/automation/build
Also the caching feature is pretty cool. I can later provide another PR which would implement a cache around Xen build, so it would be rebuilt only once the git submodule of Xen changes and the build would finish much faster.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,715,2019-10-08T18:03:51Z,2019-10-09T16:43:22Z,2020-01-08T23:34:28Z,CLOSED,False,324,1,10,https://github.com/tklengyel,Generate binary packages on Travis automatically,7,[],https://github.com/tklengyel/drakvuf/pull/715,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/715#issuecomment-540045005,"Generate binary builds and push them as releases under the https://github.com/tklengyel/drakvuf-builds repository
Fixes #711","OK, I can live with keeping the Docker build. One issue I see though is that there is very little point in rebuilding Xen after every merge. We always keep to stable Xen builds so I would like to generate a separate Xen deb and cache it on Travis, and only build a new one if we upgrade the Xen submodule. So I'm looking into that.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,715,2019-10-08T18:03:51Z,2019-10-09T16:43:22Z,2020-01-08T23:34:28Z,CLOSED,False,324,1,10,https://github.com/tklengyel,Generate binary packages on Travis automatically,7,[],https://github.com/tklengyel/drakvuf/pull/715,https://github.com/icedevml,7,https://github.com/tklengyel/drakvuf/pull/715#issuecomment-540047675,"Generate binary builds and push them as releases under the https://github.com/tklengyel/drakvuf-builds repository
Fixes #711","@tklengyel We could split the build process into two Dockerfiles, one would build Xen and be cached and the second one would depend on the first one and build only LibVMI and DRAKVUF. Then the Xen image could be somehow cached and builds will be much faster.
I can also look at it now.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,715,2019-10-08T18:03:51Z,2019-10-09T16:43:22Z,2020-01-08T23:34:28Z,CLOSED,False,324,1,10,https://github.com/tklengyel,Generate binary packages on Travis automatically,7,[],https://github.com/tklengyel/drakvuf/pull/715,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/715#issuecomment-540048369,"Generate binary builds and push them as releases under the https://github.com/tklengyel/drakvuf-builds repository
Fixes #711",Also FYI: we should install packages for Xen's build with build-dep xen-hypervisor* and then use Xen's built-in make debball command.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,715,2019-10-08T18:03:51Z,2019-10-09T16:43:22Z,2020-01-08T23:34:28Z,CLOSED,False,324,1,10,https://github.com/tklengyel,Generate binary packages on Travis automatically,7,[],https://github.com/tklengyel/drakvuf/pull/715,https://github.com/icedevml,9,https://github.com/tklengyel/drakvuf/pull/715#issuecomment-540050992,"Generate binary builds and push them as releases under the https://github.com/tklengyel/drakvuf-builds repository
Fixes #711","@tklengyel What about the prefix? Can I change it back to /usr?
I've found some guide about packaging:
https://www.debian.org/doc/manuals/maint-guide/modify.en.html

Most third-party software installs itself in the /usr/local directory hierarchy. On Debian this is reserved for private use by the system administrator, so packages must not use directories such as /usr/local/bin but should instead use system directories such as /usr/bin, obeying the Filesystem Hierarchy Standard (FHS).",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,715,2019-10-08T18:03:51Z,2019-10-09T16:43:22Z,2020-01-08T23:34:28Z,CLOSED,False,324,1,10,https://github.com/tklengyel,Generate binary packages on Travis automatically,7,[],https://github.com/tklengyel/drakvuf/pull/715,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/715#issuecomment-540051998,"Generate binary builds and push them as releases under the https://github.com/tklengyel/drakvuf-builds repository
Fixes #711","For caching I was thinking of having a folder xendeb with the compiled deb packages and a file containing the git version. If that version doesn't match the xen submodule version we kick a new build and copy the final deb files into the xendeb folder. Then whatever deb files are in the xendeb folder are the ones we would publish in the deploy phase.
cache:
  directories:
  - xendeb

See https://docs.travis-ci.com/user/caching/",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,715,2019-10-08T18:03:51Z,2019-10-09T16:43:22Z,2020-01-08T23:34:28Z,CLOSED,False,324,1,10,https://github.com/tklengyel,Generate binary packages on Travis automatically,7,[],https://github.com/tklengyel/drakvuf/pull/715,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/715#issuecomment-540052545,"Generate binary builds and push them as releases under the https://github.com/tklengyel/drakvuf-builds repository
Fixes #711","Can I change it back to /usr?

Sure, go ahead.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,715,2019-10-08T18:03:51Z,2019-10-09T16:43:22Z,2020-01-08T23:34:28Z,CLOSED,False,324,1,10,https://github.com/tklengyel,Generate binary packages on Travis automatically,7,[],https://github.com/tklengyel/drakvuf/pull/715,https://github.com/icedevml,12,https://github.com/tklengyel/drakvuf/pull/715#issuecomment-540054755,"Generate binary builds and push them as releases under the https://github.com/tklengyel/drakvuf-builds repository
Fixes #711","Also FYI: we should install packages for Xen's build with build-dep xen-hypervisor* and then use Xen's built-in make debball command.

Regarding this part, apt-get build-dep would fetch the dependencies for the version of xen-hypervisor that is in the repository, so these may be older than the ones required by our bleeding edge Xen version from git. Especially if they would add a new dependency in the new version of hypervisor, we would anyway have to tweak the package list manually because build-dep wouldn't install that or would install the version that is too old.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,715,2019-10-08T18:03:51Z,2019-10-09T16:43:22Z,2020-01-08T23:34:28Z,CLOSED,False,324,1,10,https://github.com/tklengyel,Generate binary packages on Travis automatically,7,[],https://github.com/tklengyel/drakvuf/pull/715,https://github.com/tklengyel,13,https://github.com/tklengyel/drakvuf/pull/715#issuecomment-540058705,"Generate binary builds and push them as releases under the https://github.com/tklengyel/drakvuf-builds repository
Fixes #711",Those dependencies don't really change for Xen between versions. I'm pretty sure it would be fine to just use build-dep.,True,{'THUMBS_UP': ['https://github.com/icedevml']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,715,2019-10-08T18:03:51Z,2019-10-09T16:43:22Z,2020-01-08T23:34:28Z,CLOSED,False,324,1,10,https://github.com/tklengyel,Generate binary packages on Travis automatically,7,[],https://github.com/tklengyel/drakvuf/pull/715,https://github.com/icedevml,14,https://github.com/tklengyel/drakvuf/pull/715#issuecomment-540060852,"Generate binary builds and push them as releases under the https://github.com/tklengyel/drakvuf-builds repository
Fixes #711",OK I will look for some patch to incorporate dependency provisioning with build-dep and Xen caching.,True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,716,2019-10-09T16:34:20Z,2019-10-10T16:52:03Z,2020-03-13T12:03:28Z,MERGED,True,359,1,13,https://github.com/icedevml,Generate binary packages on Travis automatically v2,20,[],https://github.com/tklengyel/drakvuf/pull/716,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/716,Fixes #711,Fixes #711,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,716,2019-10-09T16:34:20Z,2019-10-10T16:52:03Z,2020-03-13T12:03:28Z,MERGED,True,359,1,13,https://github.com/icedevml,Generate binary packages on Travis automatically v2,20,[],https://github.com/tklengyel/drakvuf/pull/716,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/716#issuecomment-540082251,Fixes #711,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,716,2019-10-09T16:34:20Z,2019-10-10T16:52:03Z,2020-03-13T12:03:28Z,MERGED,True,359,1,13,https://github.com/icedevml,Generate binary packages on Travis automatically v2,20,[],https://github.com/tklengyel/drakvuf/pull/716,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/716#issuecomment-540082434,Fixes #711,"Yet to be done:

change prefix to /usr
implement apt-get build-dep",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,716,2019-10-09T16:34:20Z,2019-10-10T16:52:03Z,2020-03-13T12:03:28Z,MERGED,True,359,1,13,https://github.com/icedevml,Generate binary packages on Travis automatically v2,20,[],https://github.com/tklengyel/drakvuf/pull/716,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/716#issuecomment-540082504,Fixes #711,/cc @tklengyel,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,716,2019-10-09T16:34:20Z,2019-10-10T16:52:03Z,2020-03-13T12:03:28Z,MERGED,True,359,1,13,https://github.com/icedevml,Generate binary packages on Travis automatically v2,20,[],https://github.com/tklengyel/drakvuf/pull/716,https://github.com/icedevml,5,https://github.com/tklengyel/drakvuf/pull/716#issuecomment-540083255,Fixes #711,"What I've implemented is a split to two Dockerfiles, one for Xen and one for the rest of the stuff. The intermediate image is saved with docker save and then cached using Travis CI. This should be pretty robust, as docker save would essentially save the full filesystem at the point when Xen was succesfully installed.
Work in progress.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,716,2019-10-09T16:34:20Z,2019-10-10T16:52:03Z,2020-03-13T12:03:28Z,MERGED,True,359,1,13,https://github.com/icedevml,Generate binary packages on Travis automatically v2,20,[],https://github.com/tklengyel/drakvuf/pull/716,https://github.com/icedevml,6,https://github.com/tklengyel/drakvuf/pull/716#issuecomment-540090747,Fixes #711,TODO error code checks,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,716,2019-10-09T16:34:20Z,2019-10-10T16:52:03Z,2020-03-13T12:03:28Z,MERGED,True,359,1,13,https://github.com/icedevml,Generate binary packages on Travis automatically v2,20,[],https://github.com/tklengyel/drakvuf/pull/716,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/716#issuecomment-540092418,Fixes #711,Also don't forget to add the Travis caching for package/cache.,True,{'THUMBS_UP': ['https://github.com/icedevml']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,716,2019-10-09T16:34:20Z,2019-10-10T16:52:03Z,2020-03-13T12:03:28Z,MERGED,True,359,1,13,https://github.com/icedevml,Generate binary packages on Travis automatically v2,20,[],https://github.com/tklengyel/drakvuf/pull/716,https://github.com/icedevml,8,https://github.com/tklengyel/drakvuf/pull/716#issuecomment-540107027,Fixes #711,@tklengyel I wonder if these old xen-intermediate* would be deleted after some time or we need explicit cleanup? Or is the caching only per-branch? (Then we may always keep no more than single cached xen-intermediate*),True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,716,2019-10-09T16:34:20Z,2019-10-10T16:52:03Z,2020-03-13T12:03:28Z,MERGED,True,359,1,13,https://github.com/icedevml,Generate binary packages on Travis automatically v2,20,[],https://github.com/tklengyel/drakvuf/pull/716,https://github.com/icedevml,9,https://github.com/tklengyel/drakvuf/pull/716#issuecomment-540116542,Fixes #711,"Ah got it

There is one cache per branch

so we don't need more than one xen-intermediate-* in any case
TODO keep at most one tarball with xen at once",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,716,2019-10-09T16:34:20Z,2019-10-10T16:52:03Z,2020-03-13T12:03:28Z,MERGED,True,359,1,13,https://github.com/icedevml,Generate binary packages on Travis automatically v2,20,[],https://github.com/tklengyel/drakvuf/pull/716,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/716#issuecomment-540122369,Fixes #711,"Right, + the before_deploy section is only triggered for builds on the master branch, ie. after a merge",True,{'THUMBS_UP': ['https://github.com/icedevml']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,716,2019-10-09T16:34:20Z,2019-10-10T16:52:03Z,2020-03-13T12:03:28Z,MERGED,True,359,1,13,https://github.com/icedevml,Generate binary packages on Travis automatically v2,20,[],https://github.com/tklengyel/drakvuf/pull/716,https://github.com/icedevml,11,https://github.com/tklengyel/drakvuf/pull/716#issuecomment-540510430,Fixes #711,"Ok, ready to review. I think that all sub-issues were fixed.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,716,2019-10-09T16:34:20Z,2019-10-10T16:52:03Z,2020-03-13T12:03:28Z,MERGED,True,359,1,13,https://github.com/icedevml,Generate binary packages on Travis automatically v2,20,[],https://github.com/tklengyel/drakvuf/pull/716,https://github.com/icedevml,12,https://github.com/tklengyel/drakvuf/pull/716#issuecomment-540615331,Fixes #711,"Now it works on both Ubuntu 18.04 and Debian Buster (at least from what I've tested).
Btw. pipeline randomly failed because of apt repository sync being in progress o_O",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,716,2019-10-09T16:34:20Z,2019-10-10T16:52:03Z,2020-03-13T12:03:28Z,MERGED,True,359,1,13,https://github.com/icedevml,Generate binary packages on Travis automatically v2,20,[],https://github.com/tklengyel/drakvuf/pull/716,https://github.com/tklengyel,13,https://github.com/tklengyel/drakvuf/pull/716#issuecomment-540668603,Fixes #711,"OK, I think we are good with merging this. We can tweak it later if needed.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,717,2019-10-10T17:15:53Z,2019-10-11T01:16:39Z,2019-10-11T01:52:54Z,MERGED,True,84,36,6,https://github.com/tklengyel,Add headers for proper make dist tarball,2,[],https://github.com/tklengyel/drakvuf/pull/717,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/717,,,True,{'THUMBS_UP': ['https://github.com/icedevml']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,717,2019-10-10T17:15:53Z,2019-10-11T01:16:39Z,2019-10-11T01:52:54Z,MERGED,True,84,36,6,https://github.com/tklengyel,Add headers for proper make dist tarball,2,[],https://github.com/tklengyel/drakvuf/pull/717,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/717#issuecomment-540693301,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,717,2019-10-10T17:15:53Z,2019-10-11T01:16:39Z,2019-10-11T01:52:54Z,MERGED,True,84,36,6,https://github.com/tklengyel,Add headers for proper make dist tarball,2,[],https://github.com/tklengyel/drakvuf/pull/717,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/717#issuecomment-540703633,,@icedevml looks like for some reason the deb files were not released when the master branch got built: https://github.com/tklengyel/drakvuf-builds/releases/tag/20191010175202-7b97fae,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,717,2019-10-10T17:15:53Z,2019-10-11T01:16:39Z,2019-10-11T01:52:54Z,MERGED,True,84,36,6,https://github.com/tklengyel,Add headers for proper make dist tarball,2,[],https://github.com/tklengyel/drakvuf/pull/717,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/717#issuecomment-540703960,,Here is the build log: https://travis-ci.org/tklengyel/drakvuf/jobs/596208965,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,717,2019-10-10T17:15:53Z,2019-10-11T01:16:39Z,2019-10-11T01:52:54Z,MERGED,True,84,36,6,https://github.com/tklengyel,Add headers for proper make dist tarball,2,[],https://github.com/tklengyel/drakvuf/pull/717,https://github.com/icedevml,5,https://github.com/tklengyel/drakvuf/pull/717#issuecomment-540705248,,"@tklengyel This is due to a typo, fixed here: #718",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,717,2019-10-10T17:15:53Z,2019-10-11T01:16:39Z,2019-10-11T01:52:54Z,MERGED,True,84,36,6,https://github.com/tklengyel,Add headers for proper make dist tarball,2,[],https://github.com/tklengyel/drakvuf/pull/717,https://github.com/icedevml,6,https://github.com/tklengyel/drakvuf/pull/717#issuecomment-540825680,,"I think the stuff that was created in before_deploy would not be cached, because of the lifecycle:
https://docs.travis-ci.com/user/job-lifecycle/
From some CI logs:
store build cache
before_deploy.1
23.64s$ git submodule update --init libvmi xen drakvuf-doppelganging
$ travis_wait 60 sh package/build.sh;

so the build cache was stored just before the package was actually built and I guess the stuff would be never cached due to that.
I think that the commands should be moved from before_deploy to script and something like that should be added:
branches:
  only:
  - master",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,717,2019-10-10T17:15:53Z,2019-10-11T01:16:39Z,2019-10-11T01:52:54Z,MERGED,True,84,36,6,https://github.com/tklengyel,Add headers for proper make dist tarball,2,[],https://github.com/tklengyel/drakvuf/pull/717,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/717#issuecomment-540866162,,@icedevml looks to me it's working just fine now: https://github.com/tklengyel/drakvuf-builds/releases/tag/20191011015038-b28f1c8,True,{'THUMBS_UP': ['https://github.com/icedevml']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,718,2019-10-10T18:01:30Z,2019-10-10T19:07:11Z,2020-03-13T12:03:29Z,MERGED,True,1,1,1,https://github.com/icedevml,Fix artifacts in Travis-CI,1,[],https://github.com/tklengyel/drakvuf/pull/718,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/718,"There was a release pushed without any artifacts o_O
https://github.com/tklengyel/drakvuf-builds/releases/tag/20191010175202-7b97fae
mostly because I've made a typo previously.","There was a release pushed without any artifacts o_O
https://github.com/tklengyel/drakvuf-builds/releases/tag/20191010175202-7b97fae
mostly because I've made a typo previously.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,718,2019-10-10T18:01:30Z,2019-10-10T19:07:11Z,2020-03-13T12:03:29Z,MERGED,True,1,1,1,https://github.com/icedevml,Fix artifacts in Travis-CI,1,[],https://github.com/tklengyel/drakvuf/pull/718,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/718#issuecomment-540702785,"There was a release pushed without any artifacts o_O
https://github.com/tklengyel/drakvuf-builds/releases/tag/20191010175202-7b97fae
mostly because I've made a typo previously.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,718,2019-10-10T18:01:30Z,2019-10-10T19:07:11Z,2020-03-13T12:03:29Z,MERGED,True,1,1,1,https://github.com/icedevml,Fix artifacts in Travis-CI,1,[],https://github.com/tklengyel/drakvuf/pull/718,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/718#issuecomment-540739523,"There was a release pushed without any artifacts o_O
https://github.com/tklengyel/drakvuf-builds/releases/tag/20191010175202-7b97fae
mostly because I've made a typo previously.","6f0b387
CI for this commit was not triggered at all? o_O
@tklengyel",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,718,2019-10-10T18:01:30Z,2019-10-10T19:07:11Z,2020-03-13T12:03:29Z,MERGED,True,1,1,1,https://github.com/icedevml,Fix artifacts in Travis-CI,1,[],https://github.com/tklengyel/drakvuf/pull/718,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/718#issuecomment-540806279,"There was a release pushed without any artifacts o_O
https://github.com/tklengyel/drakvuf-builds/releases/tag/20191010175202-7b97fae
mostly because I've made a typo previously.",@tklengyel Can you retrigger CI build for master branch? The fixed release was not built from this PR because Travis wasn't triggered for some reason.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,718,2019-10-10T18:01:30Z,2019-10-10T19:07:11Z,2020-03-13T12:03:29Z,MERGED,True,1,1,1,https://github.com/icedevml,Fix artifacts in Travis-CI,1,[],https://github.com/tklengyel/drakvuf/pull/718,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/718#issuecomment-540853794,"There was a release pushed without any artifacts o_O
https://github.com/tklengyel/drakvuf-builds/releases/tag/20191010175202-7b97fae
mostly because I've made a typo previously.","Yea, I had the ""build on push"" option turned off in Travis, I turned it back on now.",True,{'THUMBS_UP': ['https://github.com/icedevml']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,719,2019-10-10T21:05:26Z,2019-10-10T21:15:52Z,2020-03-03T12:19:01Z,CLOSED,False,1,0,1,https://github.com/icedevml,test,1,[],https://github.com/tklengyel/drakvuf/pull/719,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/719,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,720,2019-10-11T02:12:34Z,2019-10-11T02:59:47Z,2019-10-11T02:59:50Z,MERGED,True,10,5,5,https://github.com/tklengyel,Add more missing headers for make dist,3,[],https://github.com/tklengyel/drakvuf/pull/720,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/720,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,721,2019-10-12T11:38:19Z,2019-10-27T00:34:49Z,2020-03-13T12:03:34Z,MERGED,True,27,4,1,https://github.com/icedevml,Fix warning about EPT not supported while already running on Xen,1,[],https://github.com/tklengyel/drakvuf/pull/721,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/721,Fix the drakvuf-bundle package complaining about missing EPT support when the system is already running on Xen during installation.,Fix the drakvuf-bundle package complaining about missing EPT support when the system is already running on Xen during installation.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,721,2019-10-12T11:38:19Z,2019-10-27T00:34:49Z,2020-03-13T12:03:34Z,MERGED,True,27,4,1,https://github.com/icedevml,Fix warning about EPT not supported while already running on Xen,1,[],https://github.com/tklengyel/drakvuf/pull/721,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/721#issuecomment-541316694,Fix the drakvuf-bundle package complaining about missing EPT support when the system is already running on Xen during installation.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,721,2019-10-12T11:38:19Z,2019-10-27T00:34:49Z,2020-03-13T12:03:34Z,MERGED,True,27,4,1,https://github.com/icedevml,Fix warning about EPT not supported while already running on Xen,1,[],https://github.com/tklengyel/drakvuf/pull/721,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/721#issuecomment-541853241,Fix the drakvuf-bundle package complaining about missing EPT support when the system is already running on Xen during installation.,LGTM,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,721,2019-10-12T11:38:19Z,2019-10-27T00:34:49Z,2020-03-13T12:03:34Z,MERGED,True,27,4,1,https://github.com/icedevml,Fix warning about EPT not supported while already running on Xen,1,[],https://github.com/tklengyel/drakvuf/pull/721,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/721#issuecomment-541871087,Fix the drakvuf-bundle package complaining about missing EPT support when the system is already running on Xen during installation.,"I have to dig a little bit more, surprisingly this one doesn't work yet, the postrm script is crashing sometimes, TODO fix.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,721,2019-10-12T11:38:19Z,2019-10-27T00:34:49Z,2020-03-13T12:03:34Z,MERGED,True,27,4,1,https://github.com/icedevml,Fix warning about EPT not supported while already running on Xen,1,[],https://github.com/tklengyel/drakvuf/pull/721,https://github.com/icedevml,5,https://github.com/tklengyel/drakvuf/pull/721#issuecomment-546647765,Fix the drakvuf-bundle package complaining about missing EPT support when the system is already running on Xen during installation.,"seems to be fixed now, I was not aware of set -e at the very beginning of the script :P",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,726,2019-10-22T21:07:20Z,2019-10-22T21:21:38Z,2019-10-22T21:21:40Z,MERGED,True,1,1,1,https://github.com/tklengyel,Fix bitwise negation of a boolean expression,1,[],https://github.com/tklengyel/drakvuf/pull/726,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/726,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,728,2019-10-23T22:46:10Z,2019-10-23T23:32:59Z,2019-10-24T11:43:18Z,CLOSED,False,12,0,1,https://github.com/tklengyel,Add undefined sanitizer,1,[],https://github.com/tklengyel/drakvuf/pull/728,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/728,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,728,2019-10-23T22:46:10Z,2019-10-23T23:32:59Z,2019-10-24T11:43:18Z,CLOSED,False,12,0,1,https://github.com/tklengyel,Add undefined sanitizer,1,[],https://github.com/tklengyel/drakvuf/pull/728,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/728#issuecomment-545670072,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,729,2019-10-24T00:33:35Z,2019-10-24T11:43:13Z,2019-10-24T11:43:18Z,MERGED,True,12,0,1,https://github.com/tklengyel,Add undefined sanitizer,1,[],https://github.com/tklengyel/drakvuf/pull/729,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/729,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,730,2019-10-24T19:39:43Z,2019-10-24T19:58:22Z,2020-03-13T12:03:31Z,MERGED,True,2,0,1,https://github.com/icedevml,Fix bug with remapped_gfn not reactivating in breakpoint,1,[],https://github.com/tklengyel/drakvuf/pull/730,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/730,"As far as I understand right now:

This activates remapped gfns if the trap is added for the first time: https://github.com/CERT-Polska/drakvuf/blob/master/src/libdrakvuf/vmi.c#L1060
This sets mappings back to ""normal"" once trap is removed: https://github.com/CERT-Polska/drakvuf/blob/master/src/libdrakvuf/vmi.c#L822
If the trap is added once again, remapped gfns are not reactivated because remapped_gfn->active is still set to 1 and nowhere it is set to zero?

I have no idea what would be the exact impact of the proposed patch, but intuitively seems to solve the above issue?
/cc @sasza8","As far as I understand right now:

This activates remapped gfns if the trap is added for the first time: https://github.com/CERT-Polska/drakvuf/blob/master/src/libdrakvuf/vmi.c#L1060
This sets mappings back to ""normal"" once trap is removed: https://github.com/CERT-Polska/drakvuf/blob/master/src/libdrakvuf/vmi.c#L822
If the trap is added once again, remapped gfns are not reactivated because remapped_gfn->active is still set to 1 and nowhere it is set to zero?

I have no idea what would be the exact impact of the proposed patch, but intuitively seems to solve the above issue?
/cc @sasza8",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,730,2019-10-24T19:39:43Z,2019-10-24T19:58:22Z,2020-03-13T12:03:31Z,MERGED,True,2,0,1,https://github.com/icedevml,Fix bug with remapped_gfn not reactivating in breakpoint,1,[],https://github.com/tklengyel/drakvuf/pull/730,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/730#issuecomment-546071590,"As far as I understand right now:

This activates remapped gfns if the trap is added for the first time: https://github.com/CERT-Polska/drakvuf/blob/master/src/libdrakvuf/vmi.c#L1060
This sets mappings back to ""normal"" once trap is removed: https://github.com/CERT-Polska/drakvuf/blob/master/src/libdrakvuf/vmi.c#L822
If the trap is added once again, remapped gfns are not reactivated because remapped_gfn->active is still set to 1 and nowhere it is set to zero?

I have no idea what would be the exact impact of the proposed patch, but intuitively seems to solve the above issue?
/cc @sasza8",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,730,2019-10-24T19:39:43Z,2019-10-24T19:58:22Z,2020-03-13T12:03:31Z,MERGED,True,2,0,1,https://github.com/icedevml,Fix bug with remapped_gfn not reactivating in breakpoint,1,[],https://github.com/tklengyel/drakvuf/pull/730,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/730#issuecomment-546073691,"As far as I understand right now:

This activates remapped gfns if the trap is added for the first time: https://github.com/CERT-Polska/drakvuf/blob/master/src/libdrakvuf/vmi.c#L1060
This sets mappings back to ""normal"" once trap is removed: https://github.com/CERT-Polska/drakvuf/blob/master/src/libdrakvuf/vmi.c#L822
If the trap is added once again, remapped gfns are not reactivated because remapped_gfn->active is still set to 1 and nowhere it is set to zero?

I have no idea what would be the exact impact of the proposed patch, but intuitively seems to solve the above issue?
/cc @sasza8",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,730,2019-10-24T19:39:43Z,2019-10-24T19:58:22Z,2020-03-13T12:03:31Z,MERGED,True,2,0,1,https://github.com/icedevml,Fix bug with remapped_gfn not reactivating in breakpoint,1,[],https://github.com/tklengyel/drakvuf/pull/730,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/730#issuecomment-546074529,"As far as I understand right now:

This activates remapped gfns if the trap is added for the first time: https://github.com/CERT-Polska/drakvuf/blob/master/src/libdrakvuf/vmi.c#L1060
This sets mappings back to ""normal"" once trap is removed: https://github.com/CERT-Polska/drakvuf/blob/master/src/libdrakvuf/vmi.c#L822
If the trap is added once again, remapped gfns are not reactivated because remapped_gfn->active is still set to 1 and nowhere it is set to zero?

I have no idea what would be the exact impact of the proposed patch, but intuitively seems to solve the above issue?
/cc @sasza8","Good catch, indeed that was missing.",True,{'THUMBS_UP': ['https://github.com/icedevml']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,731,2019-10-24T21:13:32Z,2019-10-24T21:29:37Z,2020-03-13T12:03:32Z,CLOSED,False,0,2,1,https://github.com/icedevml,"Revert ""Fix bug with remapped_gfn not reactivating in breakpoint""",1,[],https://github.com/tklengyel/drakvuf/pull/731,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/731,"Reverts #730
I think it was a little bit too fast. I found some cases where this patch is crashing the whole VM badly, I don't know why exactly yet.","Reverts #730
I think it was a little bit too fast. I found some cases where this patch is crashing the whole VM badly, I don't know why exactly yet.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,731,2019-10-24T21:13:32Z,2019-10-24T21:29:37Z,2020-03-13T12:03:32Z,CLOSED,False,0,2,1,https://github.com/icedevml,"Revert ""Fix bug with remapped_gfn not reactivating in breakpoint""",1,[],https://github.com/tklengyel/drakvuf/pull/731,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/731#issuecomment-546105989,"Reverts #730
I think it was a little bit too fast. I found some cases where this patch is crashing the whole VM badly, I don't know why exactly yet.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,731,2019-10-24T21:13:32Z,2019-10-24T21:29:37Z,2020-03-13T12:03:32Z,CLOSED,False,0,2,1,https://github.com/icedevml,"Revert ""Fix bug with remapped_gfn not reactivating in breakpoint""",1,[],https://github.com/tklengyel/drakvuf/pull/731,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/731#issuecomment-546108064,"Reverts #730
I think it was a little bit too fast. I found some cases where this patch is crashing the whole VM badly, I don't know why exactly yet.","src/drakvuf -v -d windows7-sp1 -r ../windows7-sp1.rekall.json -w ../wntdll.rekall.json -x bsodmon -x clipboardmon -x cpuidmon -x crashmon -x debugmon -x delaymon -x dkommon -x envmon -x exmon -x filedelete -x filetracer -x librarymon -x omon -x poolmon -x regmon -x socketmon -x ssdtmon -x windowmon -x wmimon -x syscalls --dll-hooks-list ./dll-hooks.txt

where dll-hooks.txt is:
user32.dll,IsZoomed

when launching Internet Explorer, everything hangs after just a second, which wasn't the case previously
... or maybe memdump plugin is doing something strange?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,731,2019-10-24T21:13:32Z,2019-10-24T21:29:37Z,2020-03-13T12:03:32Z,CLOSED,False,0,2,1,https://github.com/icedevml,"Revert ""Fix bug with remapped_gfn not reactivating in breakpoint""",1,[],https://github.com/tklengyel/drakvuf/pull/731,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/731#issuecomment-546111398,"Reverts #730
I think it was a little bit too fast. I found some cases where this patch is crashing the whole VM badly, I don't know why exactly yet.","Well, #730 was certainly the correct behavior, that needs to happen when a remapped_gfn is being deactivated. So instead of reverting that correct behavior we should open a separate issue for investigating the details of the new hang you are seeing.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,732,2019-10-24T21:37:20Z,2019-10-24T22:13:43Z,2019-10-24T22:13:45Z,MERGED,True,6,3,1,https://github.com/tklengyel,Deactivate remapped gfn when removing memaccess trap,1,[],https://github.com/tklengyel/drakvuf/pull/732,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/732,/cc @icedevml,/cc @icedevml,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,732,2019-10-24T21:37:20Z,2019-10-24T22:13:43Z,2019-10-24T22:13:45Z,MERGED,True,6,3,1,https://github.com/tklengyel,Deactivate remapped gfn when removing memaccess trap,1,[],https://github.com/tklengyel/drakvuf/pull/732,https://github.com/icedevml,2,https://github.com/tklengyel/drakvuf/pull/732#issuecomment-546119371,/cc @icedevml,"Perhaps some null check would be necessary. If somebody is using MEMACCESS just manually then the trap doesn't necessarily have to be in this remapped_gfns hashmap AFAIK
Program received signal SIGSEGV, Segmentation fault.
remove_trap (drakvuf=drakvuf@entry=0x5555558f7210, trap=<optimized out>, trap@entry=0x555557222028) at vmi.c:827
827			    remapped_gfn->active = 0;",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,732,2019-10-24T21:37:20Z,2019-10-24T22:13:43Z,2019-10-24T22:13:45Z,MERGED,True,6,3,1,https://github.com/tklengyel,Deactivate remapped gfn when removing memaccess trap,1,[],https://github.com/tklengyel/drakvuf/pull/732,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/732#issuecomment-546120328,/cc @icedevml,"... and when I've added a nullcheck then memdump seems to work correctly, the VM doesn't crash as in #730 and the original issue of ""re-activating"" seems to be addressed.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,732,2019-10-24T21:37:20Z,2019-10-24T22:13:43Z,2019-10-24T22:13:45Z,MERGED,True,6,3,1,https://github.com/tklengyel,Deactivate remapped gfn when removing memaccess trap,1,[],https://github.com/tklengyel/drakvuf/pull/732,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/732#issuecomment-546120712,/cc @icedevml,"Yea, what happens there is that both guard pages are being removed, but only one of them is actually a remapped gfn. So we got that null-pointer dereference for the one that had no remapped entry. Fixed now.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,733,2019-10-26T22:21:32Z,2019-10-27T00:35:38Z,2020-03-13T12:03:33Z,MERGED,True,3,1,1,https://github.com/icedevml,[filetracer] Fix syntax error in JSON output (SecurityDescriptor),1,[],https://github.com/tklengyel/drakvuf/pull/733,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/733,Comma before first key in SecurityDescriptor dict is making JSON unparseable.,Comma before first key in SecurityDescriptor dict is making JSON unparseable.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,733,2019-10-26T22:21:32Z,2019-10-27T00:35:38Z,2020-03-13T12:03:33Z,MERGED,True,3,1,1,https://github.com/icedevml,[filetracer] Fix syntax error in JSON output (SecurityDescriptor),1,[],https://github.com/tklengyel/drakvuf/pull/733,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/733#issuecomment-546644312,Comma before first key in SecurityDescriptor dict is making JSON unparseable.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,733,2019-10-26T22:21:32Z,2019-10-27T00:35:38Z,2020-03-13T12:03:33Z,MERGED,True,3,1,1,https://github.com/icedevml,[filetracer] Fix syntax error in JSON output (SecurityDescriptor),1,[],https://github.com/tklengyel/drakvuf/pull/733,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/733#issuecomment-546650606,Comma before first key in SecurityDescriptor dict is making JSON unparseable.,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,734,2019-10-26T22:34:04Z,2019-12-16T18:43:58Z,2019-12-16T18:55:06Z,MERGED,True,50,0,4,https://github.com/icedevml,[memdump] Provide default DLL hook list for memdump plugin if not provided by user,1,[],https://github.com/tklengyel/drakvuf/pull/734,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/734,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,734,2019-10-26T22:34:04Z,2019-12-16T18:43:58Z,2019-12-16T18:55:06Z,MERGED,True,50,0,4,https://github.com/icedevml,[memdump] Provide default DLL hook list for memdump plugin if not provided by user,1,[],https://github.com/tklengyel/drakvuf/pull/734,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/734#issuecomment-546645154,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,734,2019-10-26T22:34:04Z,2019-12-16T18:43:58Z,2019-12-16T18:55:06Z,MERGED,True,50,0,4,https://github.com/icedevml,[memdump] Provide default DLL hook list for memdump plugin if not provided by user,1,[],https://github.com/tklengyel/drakvuf/pull/734,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/734#issuecomment-546650635,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,734,2019-10-26T22:34:04Z,2019-12-16T18:43:58Z,2019-12-16T18:55:06Z,MERGED,True,50,0,4,https://github.com/icedevml,[memdump] Provide default DLL hook list for memdump plugin if not provided by user,1,[],https://github.com/tklengyel/drakvuf/pull/734,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/734#issuecomment-546651891,,"1572136813.058941 DRAKVUF v0.7-b75bc66
Plugin memdump startup failed!

If no profile is provided for memdump to start with should just bail but not block the whole startup of DRAKVUF",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,734,2019-10-26T22:34:04Z,2019-12-16T18:43:58Z,2019-12-16T18:55:06Z,MERGED,True,50,0,4,https://github.com/icedevml,[memdump] Provide default DLL hook list for memdump plugin if not provided by user,1,[],https://github.com/tklengyel/drakvuf/pull/734,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/734#issuecomment-546651932,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,734,2019-10-26T22:34:04Z,2019-12-16T18:43:58Z,2019-12-16T18:55:06Z,MERGED,True,50,0,4,https://github.com/icedevml,[memdump] Provide default DLL hook list for memdump plugin if not provided by user,1,[],https://github.com/tklengyel/drakvuf/pull/734,https://github.com/icedevml,6,https://github.com/tklengyel/drakvuf/pull/734#issuecomment-546678557,,Seems I didn't staged all the necessary changes. Gonna check it soon.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,734,2019-10-26T22:34:04Z,2019-12-16T18:43:58Z,2019-12-16T18:55:06Z,MERGED,True,50,0,4,https://github.com/icedevml,[memdump] Provide default DLL hook list for memdump plugin if not provided by user,1,[],https://github.com/tklengyel/drakvuf/pull/734,https://github.com/icedevml,7,https://github.com/tklengyel/drakvuf/pull/734#issuecomment-546710923,,"@tklengyel for some reason this works for me:
src/drakvuf -v -d windows7-sp1 -r ../windows7-sp1.rekall.json

what Windows version is failing and what is the faulting command line?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,734,2019-10-26T22:34:04Z,2019-12-16T18:43:58Z,2019-12-16T18:55:06Z,MERGED,True,50,0,4,https://github.com/icedevml,[memdump] Provide default DLL hook list for memdump plugin if not provided by user,1,[],https://github.com/tklengyel/drakvuf/pull/734,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/734#issuecomment-546711210,,I got the error with 32-bit Windows 7.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,734,2019-10-26T22:34:04Z,2019-12-16T18:43:58Z,2019-12-16T18:55:06Z,MERGED,True,50,0,4,https://github.com/icedevml,[memdump] Provide default DLL hook list for memdump plugin if not provided by user,1,[],https://github.com/tklengyel/drakvuf/pull/734,https://github.com/icedevml,9,https://github.com/tklengyel/drakvuf/pull/734#issuecomment-546711437,,Seems like SysWOW64 was not available ( :D ) or some related problem. I will check.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,734,2019-10-26T22:34:04Z,2019-12-16T18:43:58Z,2019-12-16T18:55:06Z,MERGED,True,50,0,4,https://github.com/icedevml,[memdump] Provide default DLL hook list for memdump plugin if not provided by user,1,[],https://github.com/tklengyel/drakvuf/pull/734,https://github.com/icedevml,10,https://github.com/tklengyel/drakvuf/pull/734#issuecomment-555220139,,"In particular, turns out that KiSystemServiceHandler is not present in Windows 7 x86. I would have to dig deeper to find proper replacement or just disable the feature for x86 guests.
Perhaps somewhere around KiSystemFatalException...",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,734,2019-10-26T22:34:04Z,2019-12-16T18:43:58Z,2019-12-16T18:55:06Z,MERGED,True,50,0,4,https://github.com/icedevml,[memdump] Provide default DLL hook list for memdump plugin if not provided by user,1,[],https://github.com/tklengyel/drakvuf/pull/734,https://github.com/icedevml,11,https://github.com/tklengyel/drakvuf/pull/734#issuecomment-566091619,,"Ok, unfortunately it is not so easy to support 32 bit x86 and for now we have identified at least two different problems that prevent it.
I've added a guard to disable usermode hooking completely if the page mode is not VMI_PM_IA32E. I'm pretty short on time till the end of the year, but we will get back to it someday.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,734,2019-10-26T22:34:04Z,2019-12-16T18:43:58Z,2019-12-16T18:55:06Z,MERGED,True,50,0,4,https://github.com/icedevml,[memdump] Provide default DLL hook list for memdump plugin if not provided by user,1,[],https://github.com/tklengyel/drakvuf/pull/734,https://github.com/tklengyel,12,https://github.com/tklengyel/drakvuf/pull/734#issuecomment-566108187,,"Valgrind caught a leak at:
/shared/jenkins/DRAKVUF-build/src/plugins/memdump/userhook.cpp:292
 292     drakvuf_trap_t* trap = (drakvuf_trap_t*)g_try_malloc0(sizeof(drakvuf_trap_t));",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,734,2019-10-26T22:34:04Z,2019-12-16T18:43:58Z,2019-12-16T18:55:06Z,MERGED,True,50,0,4,https://github.com/icedevml,[memdump] Provide default DLL hook list for memdump plugin if not provided by user,1,[],https://github.com/tklengyel/drakvuf/pull/734,https://github.com/icedevml,13,https://github.com/tklengyel/drakvuf/pull/734#issuecomment-566123919,,"@tklengyel AFAIK traps are automatically freed by DRAKVUF when it is stopped? Or not?
I wonder whether I should record all the traps added in the plugin's object and free them explicitly in the destructor?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,734,2019-10-26T22:34:04Z,2019-12-16T18:43:58Z,2019-12-16T18:55:06Z,MERGED,True,50,0,4,https://github.com/icedevml,[memdump] Provide default DLL hook list for memdump plugin if not provided by user,1,[],https://github.com/tklengyel/drakvuf/pull/734,https://github.com/tklengyel,14,https://github.com/tklengyel/drakvuf/pull/734#issuecomment-566125367,,"@icedevml No, traps are stopped but memory management is up to each plugin. There is no garbage collection.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,734,2019-10-26T22:34:04Z,2019-12-16T18:43:58Z,2019-12-16T18:55:06Z,MERGED,True,50,0,4,https://github.com/icedevml,[memdump] Provide default DLL hook list for memdump plugin if not provided by user,1,[],https://github.com/tklengyel/drakvuf/pull/734,https://github.com/icedevml,15,https://github.com/tklengyel/drakvuf/pull/734#issuecomment-566125490,,"Okay, I will address this.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,734,2019-10-26T22:34:04Z,2019-12-16T18:43:58Z,2019-12-16T18:55:06Z,MERGED,True,50,0,4,https://github.com/icedevml,[memdump] Provide default DLL hook list for memdump plugin if not provided by user,1,[],https://github.com/tklengyel/drakvuf/pull/734,https://github.com/tklengyel,16,https://github.com/tklengyel/drakvuf/pull/734#issuecomment-566161800,,"Valgrind now says
/shared/jenkins/DRAKVUF-build/src/plugins/memdump/userhook.cpp:1066
Mismatched free() / delete / delete []",True,{'THUMBS_UP': ['https://github.com/icedevml']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,734,2019-10-26T22:34:04Z,2019-12-16T18:43:58Z,2019-12-16T18:55:06Z,MERGED,True,50,0,4,https://github.com/icedevml,[memdump] Provide default DLL hook list for memdump plugin if not provided by user,1,[],https://github.com/tklengyel/drakvuf/pull/734,https://github.com/icedevml,17,https://github.com/tklengyel/drakvuf/pull/734#issuecomment-566174193,,Seems like it's finally sorted out.,True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,736,2019-10-27T00:42:21Z,2019-10-28T23:33:16Z,2019-10-29T15:55:32Z,MERGED,True,189,98,11,https://github.com/tklengyel,Harden breakpoints against instruction injection leaks,5,[],https://github.com/tklengyel/drakvuf/pull/736,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/736,"Examine breakpoint location to ensure that no instructions preceding it
can leak the breakpoint during execution. Certain instructions can fetch
subsequent memory and store it in registers, thus potentially revealing
the presence of the breakpoint. This is due to the fetch being performed
as part of the instruction and thus no read-access is performed.
This is an extra hardening step against code that may try to detect the
presence of DRAKVUF. When it is deemed unsafe to use the breakpoint
instruction itself, DRAKVUF reverts to a fallback mode using
memory permission based monitor and simulated int3 events. This backup
mode is a bit slower then using actual breakpoints but otherwise should
work without any sideeffect or the libdrakvuf caller having to know
where and when it is safe to use breakpoints.
We employ a whitelist of instructions that are allowed to precede the
breakpoint based on empiricial observation. This is overly cautious and
we may easily have excluded instructions that would be no problem. But
for now this list is working and can be extended in the future in case
anyone has a need for it.","Examine breakpoint location to ensure that no instructions preceding it
can leak the breakpoint during execution. Certain instructions can fetch
subsequent memory and store it in registers, thus potentially revealing
the presence of the breakpoint. This is due to the fetch being performed
as part of the instruction and thus no read-access is performed.
This is an extra hardening step against code that may try to detect the
presence of DRAKVUF. When it is deemed unsafe to use the breakpoint
instruction itself, DRAKVUF reverts to a fallback mode using
memory permission based monitor and simulated int3 events. This backup
mode is a bit slower then using actual breakpoints but otherwise should
work without any sideeffect or the libdrakvuf caller having to know
where and when it is safe to use breakpoints.
We employ a whitelist of instructions that are allowed to precede the
breakpoint based on empiricial observation. This is overly cautious and
we may easily have excluded instructions that would be no problem. But
for now this list is working and can be extended in the future in case
anyone has a need for it.",True,{'THUMBS_UP': ['https://github.com/aoshiken']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,736,2019-10-27T00:42:21Z,2019-10-28T23:33:16Z,2019-10-29T15:55:32Z,MERGED,True,189,98,11,https://github.com/tklengyel,Harden breakpoints against instruction injection leaks,5,[],https://github.com/tklengyel/drakvuf/pull/736,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/736#issuecomment-546658097,"Examine breakpoint location to ensure that no instructions preceding it
can leak the breakpoint during execution. Certain instructions can fetch
subsequent memory and store it in registers, thus potentially revealing
the presence of the breakpoint. This is due to the fetch being performed
as part of the instruction and thus no read-access is performed.
This is an extra hardening step against code that may try to detect the
presence of DRAKVUF. When it is deemed unsafe to use the breakpoint
instruction itself, DRAKVUF reverts to a fallback mode using
memory permission based monitor and simulated int3 events. This backup
mode is a bit slower then using actual breakpoints but otherwise should
work without any sideeffect or the libdrakvuf caller having to know
where and when it is safe to use breakpoints.
We employ a whitelist of instructions that are allowed to precede the
breakpoint based on empiricial observation. This is overly cautious and
we may easily have excluded instructions that would be no problem. But
for now this list is working and can be extended in the future in case
anyone has a need for it.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,736,2019-10-27T00:42:21Z,2019-10-28T23:33:16Z,2019-10-29T15:55:32Z,MERGED,True,189,98,11,https://github.com/tklengyel,Harden breakpoints against instruction injection leaks,5,[],https://github.com/tklengyel/drakvuf/pull/736,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/736#issuecomment-546678601,"Examine breakpoint location to ensure that no instructions preceding it
can leak the breakpoint during execution. Certain instructions can fetch
subsequent memory and store it in registers, thus potentially revealing
the presence of the breakpoint. This is due to the fetch being performed
as part of the instruction and thus no read-access is performed.
This is an extra hardening step against code that may try to detect the
presence of DRAKVUF. When it is deemed unsafe to use the breakpoint
instruction itself, DRAKVUF reverts to a fallback mode using
memory permission based monitor and simulated int3 events. This backup
mode is a bit slower then using actual breakpoints but otherwise should
work without any sideeffect or the libdrakvuf caller having to know
where and when it is safe to use breakpoints.
We employ a whitelist of instructions that are allowed to precede the
breakpoint based on empiricial observation. This is overly cautious and
we may easily have excluded instructions that would be no problem. But
for now this list is working and can be extended in the future in case
anyone has a need for it.",/cc @sasza8,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,736,2019-10-27T00:42:21Z,2019-10-28T23:33:16Z,2019-10-29T15:55:32Z,MERGED,True,189,98,11,https://github.com/tklengyel,Harden breakpoints against instruction injection leaks,5,[],https://github.com/tklengyel/drakvuf/pull/736,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/736#issuecomment-546736414,"Examine breakpoint location to ensure that no instructions preceding it
can leak the breakpoint during execution. Certain instructions can fetch
subsequent memory and store it in registers, thus potentially revealing
the presence of the breakpoint. This is due to the fetch being performed
as part of the instruction and thus no read-access is performed.
This is an extra hardening step against code that may try to detect the
presence of DRAKVUF. When it is deemed unsafe to use the breakpoint
instruction itself, DRAKVUF reverts to a fallback mode using
memory permission based monitor and simulated int3 events. This backup
mode is a bit slower then using actual breakpoints but otherwise should
work without any sideeffect or the libdrakvuf caller having to know
where and when it is safe to use breakpoints.
We employ a whitelist of instructions that are allowed to precede the
breakpoint based on empiricial observation. This is overly cautious and
we may easily have excluded instructions that would be no problem. But
for now this list is working and can be extended in the future in case
anyone has a need for it.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,736,2019-10-27T00:42:21Z,2019-10-28T23:33:16Z,2019-10-29T15:55:32Z,MERGED,True,189,98,11,https://github.com/tklengyel,Harden breakpoints against instruction injection leaks,5,[],https://github.com/tklengyel/drakvuf/pull/736,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/736#issuecomment-546744167,"Examine breakpoint location to ensure that no instructions preceding it
can leak the breakpoint during execution. Certain instructions can fetch
subsequent memory and store it in registers, thus potentially revealing
the presence of the breakpoint. This is due to the fetch being performed
as part of the instruction and thus no read-access is performed.
This is an extra hardening step against code that may try to detect the
presence of DRAKVUF. When it is deemed unsafe to use the breakpoint
instruction itself, DRAKVUF reverts to a fallback mode using
memory permission based monitor and simulated int3 events. This backup
mode is a bit slower then using actual breakpoints but otherwise should
work without any sideeffect or the libdrakvuf caller having to know
where and when it is safe to use breakpoints.
We employ a whitelist of instructions that are allowed to precede the
breakpoint based on empiricial observation. This is overly cautious and
we may easily have excluded instructions that would be no problem. But
for now this list is working and can be extended in the future in case
anyone has a need for it.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,736,2019-10-27T00:42:21Z,2019-10-28T23:33:16Z,2019-10-29T15:55:32Z,MERGED,True,189,98,11,https://github.com/tklengyel,Harden breakpoints against instruction injection leaks,5,[],https://github.com/tklengyel/drakvuf/pull/736,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/736#issuecomment-546745020,"Examine breakpoint location to ensure that no instructions preceding it
can leak the breakpoint during execution. Certain instructions can fetch
subsequent memory and store it in registers, thus potentially revealing
the presence of the breakpoint. This is due to the fetch being performed
as part of the instruction and thus no read-access is performed.
This is an extra hardening step against code that may try to detect the
presence of DRAKVUF. When it is deemed unsafe to use the breakpoint
instruction itself, DRAKVUF reverts to a fallback mode using
memory permission based monitor and simulated int3 events. This backup
mode is a bit slower then using actual breakpoints but otherwise should
work without any sideeffect or the libdrakvuf caller having to know
where and when it is safe to use breakpoints.
We employ a whitelist of instructions that are allowed to precede the
breakpoint based on empiricial observation. This is overly cautious and
we may easily have excluded instructions that would be no problem. But
for now this list is working and can be extended in the future in case
anyone has a need for it.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,736,2019-10-27T00:42:21Z,2019-10-28T23:33:16Z,2019-10-29T15:55:32Z,MERGED,True,189,98,11,https://github.com/tklengyel,Harden breakpoints against instruction injection leaks,5,[],https://github.com/tklengyel/drakvuf/pull/736,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/736#issuecomment-547182696,"Examine breakpoint location to ensure that no instructions preceding it
can leak the breakpoint during execution. Certain instructions can fetch
subsequent memory and store it in registers, thus potentially revealing
the presence of the breakpoint. This is due to the fetch being performed
as part of the instruction and thus no read-access is performed.
This is an extra hardening step against code that may try to detect the
presence of DRAKVUF. When it is deemed unsafe to use the breakpoint
instruction itself, DRAKVUF reverts to a fallback mode using
memory permission based monitor and simulated int3 events. This backup
mode is a bit slower then using actual breakpoints but otherwise should
work without any sideeffect or the libdrakvuf caller having to know
where and when it is safe to use breakpoints.
We employ a whitelist of instructions that are allowed to precede the
breakpoint based on empiricial observation. This is overly cautious and
we may easily have excluded instructions that would be no problem. But
for now this list is working and can be extended in the future in case
anyone has a need for it.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,737,2019-10-27T16:59:33Z,2019-10-30T14:10:43Z,2020-03-13T12:03:37Z,MERGED,True,6,6,2,https://github.com/icedevml,[memdump] Fix possible buffer overflow,2,[],https://github.com/tklengyel/drakvuf/pull/737,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/737,"There are some unsafe values of ptr_length that could potentially lead to buffer overflow in inspect_stack_ptr. We replace ptr_length with bool is_32bit parameter, so method caller doesn't have the possibility to cause overflow.","There are some unsafe values of ptr_length that could potentially lead to buffer overflow in inspect_stack_ptr. We replace ptr_length with bool is_32bit parameter, so method caller doesn't have the possibility to cause overflow.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,737,2019-10-27T16:59:33Z,2019-10-30T14:10:43Z,2020-03-13T12:03:37Z,MERGED,True,6,6,2,https://github.com/icedevml,[memdump] Fix possible buffer overflow,2,[],https://github.com/tklengyel/drakvuf/pull/737,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/737#issuecomment-546713537,"There are some unsafe values of ptr_length that could potentially lead to buffer overflow in inspect_stack_ptr. We replace ptr_length with bool is_32bit parameter, so method caller doesn't have the possibility to cause overflow.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,737,2019-10-27T16:59:33Z,2019-10-30T14:10:43Z,2020-03-13T12:03:37Z,MERGED,True,6,6,2,https://github.com/icedevml,[memdump] Fix possible buffer overflow,2,[],https://github.com/tklengyel/drakvuf/pull/737,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/737#issuecomment-547913630,"There are some unsafe values of ptr_length that could potentially lead to buffer overflow in inspect_stack_ptr. We replace ptr_length with bool is_32bit parameter, so method caller doesn't have the possibility to cause overflow.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,738,2019-10-29T16:55:13Z,2019-10-29T18:09:45Z,2019-10-29T18:09:48Z,MERGED,True,11,84,1,https://github.com/tklengyel,Fall-back to memory access based monitoring on certain writes,1,[],https://github.com/tklengyel/drakvuf/pull/738,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/738,"Retire experimental white-list based approach
/cc @sasza8","Retire experimental white-list based approach
/cc @sasza8",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,740,2019-11-01T13:35:26Z,2019-11-01T14:08:41Z,2019-11-01T14:08:44Z,MERGED,True,12,16,2,https://github.com/tklengyel,Rename zero page to sink page,1,[],https://github.com/tklengyel/drakvuf/pull/740,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/740,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,741,2019-11-02T00:29:43Z,2019-11-02T11:45:37Z,2020-03-13T12:03:41Z,MERGED,True,19,7,2,https://github.com/icedevml,Package build: allow to specify version manually,1,[],https://github.com/tklengyel/drakvuf/pull/741,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/741,More robust package version detection && possibility to specify it manually if it's not detected (happens in some environments).,More robust package version detection && possibility to specify it manually if it's not detected (happens in some environments).,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,741,2019-11-02T00:29:43Z,2019-11-02T11:45:37Z,2020-03-13T12:03:41Z,MERGED,True,19,7,2,https://github.com/icedevml,Package build: allow to specify version manually,1,[],https://github.com/tklengyel/drakvuf/pull/741,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/741#issuecomment-548991775,More robust package version detection && possibility to specify it manually if it's not detected (happens in some environments).,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,742,2019-11-05T22:53:24Z,2019-11-05T23:07:17Z,2020-03-13T12:03:42Z,MERGED,True,5,4,1,https://github.com/icedevml,Fix conffiles in package build,1,[],https://github.com/tklengyel/drakvuf/pull/742,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/742,"Move deb/DEBIAN/conffiles generation to the proper place, so all files belonging to /etc are captured there.
This fixes problem of DPKG overriding configuration files on package upgrade.","Move deb/DEBIAN/conffiles generation to the proper place, so all files belonging to /etc are captured there.
This fixes problem of DPKG overriding configuration files on package upgrade.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,742,2019-11-05T22:53:24Z,2019-11-05T23:07:17Z,2020-03-13T12:03:42Z,MERGED,True,5,4,1,https://github.com/icedevml,Fix conffiles in package build,1,[],https://github.com/tklengyel/drakvuf/pull/742,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/742#issuecomment-550060001,"Move deb/DEBIAN/conffiles generation to the proper place, so all files belonging to /etc are captured there.
This fixes problem of DPKG overriding configuration files on package upgrade.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,744,2019-11-12T09:15:29Z,2019-11-12T16:42:05Z,2020-03-13T12:03:43Z,MERGED,True,13,1,1,https://github.com/icedevml,[procmon] Implement JSON output in process_visitor,1,[],https://github.com/tklengyel/drakvuf/pull/744,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/744,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,744,2019-11-12T09:15:29Z,2019-11-12T16:42:05Z,2020-03-13T12:03:43Z,MERGED,True,13,1,1,https://github.com/icedevml,[procmon] Implement JSON output in process_visitor,1,[],https://github.com/tklengyel/drakvuf/pull/744,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/744#issuecomment-552804237,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,744,2019-11-12T09:15:29Z,2019-11-12T16:42:05Z,2020-03-13T12:03:43Z,MERGED,True,13,1,1,https://github.com/icedevml,[procmon] Implement JSON output in process_visitor,1,[],https://github.com/tklengyel/drakvuf/pull/744,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/744#issuecomment-552876751,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,744,2019-11-12T09:15:29Z,2019-11-12T16:42:05Z,2020-03-13T12:03:43Z,MERGED,True,13,1,1,https://github.com/icedevml,[procmon] Implement JSON output in process_visitor,1,[],https://github.com/tklengyel/drakvuf/pull/744,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/744#issuecomment-552955555,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,744,2019-11-12T09:15:29Z,2019-11-12T16:42:05Z,2020-03-13T12:03:43Z,MERGED,True,13,1,1,https://github.com/icedevml,[procmon] Implement JSON output in process_visitor,1,[],https://github.com/tklengyel/drakvuf/pull/744,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/744#issuecomment-552972809,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,745,2019-11-13T04:11:53Z,2019-11-13T13:13:38Z,2019-11-13T13:13:41Z,MERGED,True,9,24,1,https://github.com/tklengyel,Style cleanup and remove old commented out code,1,[],https://github.com/tklengyel/drakvuf/pull/745,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/745,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,746,2019-11-22T17:12:50Z,2019-11-23T20:53:28Z,2020-03-13T12:03:44Z,MERGED,True,18,0,1,https://github.com/icedevml,"[gh-pages] Add info about usermode profiles, resolve #735",1,[],https://github.com/tklengyel/drakvuf/pull/746,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/746,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,746,2019-11-22T17:12:50Z,2019-11-23T20:53:28Z,2020-03-13T12:03:44Z,MERGED,True,18,0,1,https://github.com/icedevml,"[gh-pages] Add info about usermode profiles, resolve #735",1,[],https://github.com/tklengyel/drakvuf/pull/746,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/746#issuecomment-557615751,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,747,2019-11-24T01:39:58Z,2019-11-24T02:08:48Z,2019-11-24T02:08:51Z,MERGED,True,49,44,3,https://github.com/tklengyel,Cleanup and update LibVMI,2,[],https://github.com/tklengyel/drakvuf/pull/747,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/747,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,748,2019-11-25T03:27:14Z,2019-11-25T17:38:05Z,2019-11-25T17:38:12Z,MERGED,True,6,4,3,https://github.com/tklengyel,Fix polling with 0 timeout (used for cleanup),1,[],https://github.com/tklengyel/drakvuf/pull/748,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/748,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,748,2019-11-25T03:27:14Z,2019-11-25T17:38:05Z,2019-11-25T17:38:12Z,MERGED,True,6,4,3,https://github.com/tklengyel,Fix polling with 0 timeout (used for cleanup),1,[],https://github.com/tklengyel/drakvuf/pull/748,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/748#issuecomment-558219891,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,749,2019-11-28T08:28:08Z,2020-03-12T13:15:18Z,2020-03-12T13:15:19Z,CLOSED,False,27,3,6,https://github.com/Kerrbty,Windows XP support,3,[],https://github.com/tklengyel/drakvuf/pull/749,https://github.com/Kerrbty,1,https://github.com/tklengyel/drakvuf/pull/749,"兼容 xp 的 EPROCESS struct
兼容 windows 内核 在 single cpu 的情况","兼容 xp 的 EPROCESS struct
兼容 windows 内核 在 single cpu 的情况",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,749,2019-11-28T08:28:08Z,2020-03-12T13:15:18Z,2020-03-12T13:15:19Z,CLOSED,False,27,3,6,https://github.com/Kerrbty,Windows XP support,3,[],https://github.com/tklengyel/drakvuf/pull/749,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/749#issuecomment-559391189,"兼容 xp 的 EPROCESS struct
兼容 windows 内核 在 single cpu 的情况",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,749,2019-11-28T08:28:08Z,2020-03-12T13:15:18Z,2020-03-12T13:15:19Z,CLOSED,False,27,3,6,https://github.com/Kerrbty,Windows XP support,3,[],https://github.com/tklengyel/drakvuf/pull/749,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/749#issuecomment-559497850,"兼容 xp 的 EPROCESS struct
兼容 windows 内核 在 single cpu 的情况","Thanks for this PR, XP support has been on the todo for a long time now. Could you also say whether injection works against an XP guest? If not, please also add a check there that quits early.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,749,2019-11-28T08:28:08Z,2020-03-12T13:15:18Z,2020-03-12T13:15:19Z,CLOSED,False,27,3,6,https://github.com/Kerrbty,Windows XP support,3,[],https://github.com/tklengyel/drakvuf/pull/749,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/749#issuecomment-559498386,"兼容 xp 的 EPROCESS struct
兼容 windows 内核 在 single cpu 的情况",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,749,2019-11-28T08:28:08Z,2020-03-12T13:15:18Z,2020-03-12T13:15:19Z,CLOSED,False,27,3,6,https://github.com/Kerrbty,Windows XP support,3,[],https://github.com/tklengyel/drakvuf/pull/749,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/749#issuecomment-593723411,"兼容 xp 的 EPROCESS struct
兼容 windows 内核 在 single cpu 的情况",@jha334201553 are you still working on this PR?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,749,2019-11-28T08:28:08Z,2020-03-12T13:15:18Z,2020-03-12T13:15:19Z,CLOSED,False,27,3,6,https://github.com/Kerrbty,Windows XP support,3,[],https://github.com/tklengyel/drakvuf/pull/749,https://github.com/Kerrbty,6,https://github.com/tklengyel/drakvuf/pull/749#issuecomment-598024409,"兼容 xp 的 EPROCESS struct
兼容 windows 内核 在 single cpu 的情况","@ jha334201553您是否还在从事此PR？

Sorry, I quit",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,749,2019-11-28T08:28:08Z,2020-03-12T13:15:18Z,2020-03-12T13:15:19Z,CLOSED,False,27,3,6,https://github.com/Kerrbty,Windows XP support,3,[],https://github.com/tklengyel/drakvuf/pull/749,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/749#issuecomment-598179221,"兼容 xp 的 EPROCESS struct
兼容 windows 内核 在 single cpu 的情况","OK, thanks for the update",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,751,2019-12-03T09:30:07Z,2019-12-03T11:12:00Z,2019-12-03T11:30:31Z,MERGED,True,48,35,2,https://github.com/skvl,Fix several errors in filedelete plugin,1,[],https://github.com/tklengyel/drakvuf/pull/751,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/751,"Fix duplicated file artifacts
start_readfile function reports error if (PID, TID, Handle) is
processed already. After that the fall-back method is called to download
the file.


Fix BSOD on multi-processing systems
BSOD occur if guest OS reschedule thread during ZwReadFile injection
cycle. This happens because before injection starts all registers are
saved. After read file finish all registers are restored. If OS reschedule
the thread to other vCPU then some system registers could be malformed
(e.g. GS BASE).","Fix duplicated file artifacts
start_readfile function reports error if (PID, TID, Handle) is
processed already. After that the fall-back method is called to download
the file.


Fix BSOD on multi-processing systems
BSOD occur if guest OS reschedule thread during ZwReadFile injection
cycle. This happens because before injection starts all registers are
saved. After read file finish all registers are restored. If OS reschedule
the thread to other vCPU then some system registers could be malformed
(e.g. GS BASE).",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,751,2019-12-03T09:30:07Z,2019-12-03T11:12:00Z,2019-12-03T11:30:31Z,MERGED,True,48,35,2,https://github.com/skvl,Fix several errors in filedelete plugin,1,[],https://github.com/tklengyel/drakvuf/pull/751,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/751#issuecomment-561078432,"Fix duplicated file artifacts
start_readfile function reports error if (PID, TID, Handle) is
processed already. After that the fall-back method is called to download
the file.


Fix BSOD on multi-processing systems
BSOD occur if guest OS reschedule thread during ZwReadFile injection
cycle. This happens because before injection starts all registers are
saved. After read file finish all registers are restored. If OS reschedule
the thread to other vCPU then some system registers could be malformed
(e.g. GS BASE).",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,751,2019-12-03T09:30:07Z,2019-12-03T11:12:00Z,2019-12-03T11:30:31Z,MERGED,True,48,35,2,https://github.com/skvl,Fix several errors in filedelete plugin,1,[],https://github.com/tklengyel/drakvuf/pull/751,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/751#issuecomment-561109530,"Fix duplicated file artifacts
start_readfile function reports error if (PID, TID, Handle) is
processed already. After that the fall-back method is called to download
the file.


Fix BSOD on multi-processing systems
BSOD occur if guest OS reschedule thread during ZwReadFile injection
cycle. This happens because before injection starts all registers are
saved. After read file finish all registers are restored. If OS reschedule
the thread to other vCPU then some system registers could be malformed
(e.g. GS BASE).",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,753,2019-12-11T10:53:40Z,2019-12-11T13:41:58Z,2020-03-13T12:03:47Z,MERGED,True,135,16,3,https://github.com/sasza8,added win10 support for memdump plugin,2,[],https://github.com/tklengyel/drakvuf/pull/753,https://github.com/sasza8,1,https://github.com/tklengyel/drakvuf/pull/753,resolve #752,resolve #752,True,"{'THUMBS_UP': ['https://github.com/tklengyel', 'https://github.com/icedevml']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,753,2019-12-11T10:53:40Z,2019-12-11T13:41:58Z,2020-03-13T12:03:47Z,MERGED,True,135,16,3,https://github.com/sasza8,added win10 support for memdump plugin,2,[],https://github.com/tklengyel/drakvuf/pull/753,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/753#issuecomment-564487489,resolve #752,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,753,2019-12-11T10:53:40Z,2019-12-11T13:41:58Z,2020-03-13T12:03:47Z,MERGED,True,135,16,3,https://github.com/sasza8,added win10 support for memdump plugin,2,[],https://github.com/tklengyel/drakvuf/pull/753,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/753#issuecomment-564498417,resolve #752,LGTM,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,753,2019-12-11T10:53:40Z,2019-12-11T13:41:58Z,2020-03-13T12:03:47Z,MERGED,True,135,16,3,https://github.com/sasza8,added win10 support for memdump plugin,2,[],https://github.com/tklengyel/drakvuf/pull/753,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/753#issuecomment-564535314,resolve #752,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,754,2019-12-12T03:21:14Z,2019-12-16T00:58:10Z,2019-12-16T00:58:14Z,MERGED,True,629,929,44,https://github.com/tklengyel,Switch to using Volatility3 IST,8,[],https://github.com/tklengyel/drakvuf/pull/754,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/754,"Switch to using Volatility3 IST. This is still WiP but seems to work fine with Windows 10.
/cc @icedevml @trapframe
Fixes #739","Switch to using Volatility3 IST. This is still WiP but seems to work fine with Windows 10.
/cc @icedevml @trapframe
Fixes #739",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,754,2019-12-12T03:21:14Z,2019-12-16T00:58:10Z,2019-12-16T00:58:14Z,MERGED,True,629,929,44,https://github.com/tklengyel,Switch to using Volatility3 IST,8,[],https://github.com/tklengyel/drakvuf/pull/754,https://github.com/icedevml,2,https://github.com/tklengyel/drakvuf/pull/754#issuecomment-565165081,"Switch to using Volatility3 IST. This is still WiP but seems to work fine with Windows 10.
/cc @icedevml @trapframe
Fixes #739","@tklengyel As far as I see from the diff, it doesn't diverge too much from the Rekall format?
I'm going to test this within a few days.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,754,2019-12-12T03:21:14Z,2019-12-16T00:58:10Z,2019-12-16T00:58:14Z,MERGED,True,629,929,44,https://github.com/tklengyel,Switch to using Volatility3 IST,8,[],https://github.com/tklengyel/drakvuf/pull/754,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/754#issuecomment-565179028,"Switch to using Volatility3 IST. This is still WiP but seems to work fine with Windows 10.
/cc @icedevml @trapframe
Fixes #739","Yea, it's largely the same. There is no separate $CONSTANTS and $FUNCTIONS sections and the VC++ names are still mangled. But otherwise the same information is available in both.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,754,2019-12-12T03:21:14Z,2019-12-16T00:58:10Z,2019-12-16T00:58:14Z,MERGED,True,629,929,44,https://github.com/tklengyel,Switch to using Volatility3 IST,8,[],https://github.com/tklengyel/drakvuf/pull/754,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/754#issuecomment-565179634,"Switch to using Volatility3 IST. This is still WiP but seems to work fine with Windows 10.
/cc @icedevml @trapframe
Fixes #739","Also, I haven't tested it with any jsons other then the one for the Windows 10 kernel so I'm not sure how some of the plugins that take the profiles for kernel drivers and such would behave with this change.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,754,2019-12-12T03:21:14Z,2019-12-16T00:58:10Z,2019-12-16T00:58:14Z,MERGED,True,629,929,44,https://github.com/tklengyel,Switch to using Volatility3 IST,8,[],https://github.com/tklengyel/drakvuf/pull/754,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/754#issuecomment-565856168,"Switch to using Volatility3 IST. This is still WiP but seems to work fine with Windows 10.
/cc @icedevml @trapframe
Fixes #739",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,754,2019-12-12T03:21:14Z,2019-12-16T00:58:10Z,2019-12-16T00:58:14Z,MERGED,True,629,929,44,https://github.com/tklengyel,Switch to using Volatility3 IST,8,[],https://github.com/tklengyel/drakvuf/pull/754,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/754#issuecomment-565867022,"Switch to using Volatility3 IST. This is still WiP but seems to work fine with Windows 10.
/cc @icedevml @trapframe
Fixes #739","Alright, this should now work with both Rekall profiles and Volatility ISTs.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,755,2019-12-12T15:18:02Z,2019-12-16T15:56:52Z,2019-12-16T16:02:53Z,MERGED,True,222,8,2,https://github.com/sasza8,behavioral analysis,6,[],https://github.com/tklengyel/drakvuf/pull/755,https://github.com/sasza8,1,https://github.com/tklengyel/drakvuf/pull/755,Tracking WinAPI calls with their arguments and return value,Tracking WinAPI calls with their arguments and return value,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,755,2019-12-12T15:18:02Z,2019-12-16T15:56:52Z,2019-12-16T16:02:53Z,MERGED,True,222,8,2,https://github.com/sasza8,behavioral analysis,6,[],https://github.com/tklengyel/drakvuf/pull/755,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/755#issuecomment-565050347,Tracking WinAPI calls with their arguments and return value,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,755,2019-12-12T15:18:02Z,2019-12-16T15:56:52Z,2019-12-16T16:02:53Z,MERGED,True,222,8,2,https://github.com/sasza8,behavioral analysis,6,[],https://github.com/tklengyel/drakvuf/pull/755,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/755#issuecomment-566086135,Tracking WinAPI calls with their arguments and return value,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,756,2019-12-16T02:11:45Z,2019-12-16T02:31:44Z,2019-12-16T02:31:47Z,MERGED,True,1,1,1,https://github.com/tklengyel,Use the non-canonical branch for dwarf2json,1,[],https://github.com/tklengyel/drakvuf/pull/756,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/756,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,757,2019-12-17T15:00:25Z,2020-05-02T11:36:04Z,2020-05-13T13:01:50Z,CLOSED,False,2,3,1,https://github.com/skvl,Implement fast singlestep,1,[],https://github.com/tklengyel/drakvuf/pull/757,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/757,"On break point event eight context switches occurs.
With fast single step it is possible to shorten path for two context switches
and gain 35% speed-up.","On break point event eight context switches occurs.
With fast single step it is possible to shorten path for two context switches
and gain 35% speed-up.",True,"{'THUMBS_UP': ['https://github.com/tklengyel', 'https://github.com/aoshiken']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,757,2019-12-17T15:00:25Z,2020-05-02T11:36:04Z,2020-05-13T13:01:50Z,CLOSED,False,2,3,1,https://github.com/skvl,Implement fast singlestep,1,[],https://github.com/tklengyel/drakvuf/pull/757,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/757#issuecomment-566578549,"On break point event eight context switches occurs.
With fast single step it is possible to shorten path for two context switches
and gain 35% speed-up.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,757,2019-12-17T15:00:25Z,2020-05-02T11:36:04Z,2020-05-13T13:01:50Z,CLOSED,False,2,3,1,https://github.com/skvl,Implement fast singlestep,1,[],https://github.com/tklengyel/drakvuf/pull/757,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/757#issuecomment-566578551,"On break point event eight context switches occurs.
With fast single step it is possible to shorten path for two context switches
and gain 35% speed-up.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,757,2019-12-17T15:00:25Z,2020-05-02T11:36:04Z,2020-05-13T13:01:50Z,CLOSED,False,2,3,1,https://github.com/skvl,Implement fast singlestep,1,[],https://github.com/tklengyel/drakvuf/pull/757,https://github.com/skvl,4,https://github.com/tklengyel/drakvuf/pull/757#issuecomment-566579285,"On break point event eight context switches occurs.
With fast single step it is possible to shorten path for two context switches
and gain 35% speed-up.",This needs libvmi/libvmi#856,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,757,2019-12-17T15:00:25Z,2020-05-02T11:36:04Z,2020-05-13T13:01:50Z,CLOSED,False,2,3,1,https://github.com/skvl,Implement fast singlestep,1,[],https://github.com/tklengyel/drakvuf/pull/757,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/757#issuecomment-566643797,"On break point event eight context switches occurs.
With fast single step it is possible to shorten path for two context switches
and gain 35% speed-up.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,757,2019-12-17T15:00:25Z,2020-05-02T11:36:04Z,2020-05-13T13:01:50Z,CLOSED,False,2,3,1,https://github.com/skvl,Implement fast singlestep,1,[],https://github.com/tklengyel/drakvuf/pull/757,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/757#issuecomment-566670211,"On break point event eight context switches occurs.
With fast single step it is possible to shorten path for two context switches
and gain 35% speed-up.","Valgrind reports memory leak:
/shared/jenkins/DRAKVUF-build/src/libdrakvuf/vmi.c:437
 0437         struct memcb_pass* pass = (struct memcb_pass*)g_try_malloc0(sizeof(struct memcb_pass));",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,757,2019-12-17T15:00:25Z,2020-05-02T11:36:04Z,2020-05-13T13:01:50Z,CLOSED,False,2,3,1,https://github.com/skvl,Implement fast singlestep,1,[],https://github.com/tklengyel/drakvuf/pull/757,https://github.com/skvl,7,https://github.com/tklengyel/drakvuf/pull/757#issuecomment-566892241,"On break point event eight context switches occurs.
With fast single step it is possible to shorten path for two context switches
and gain 35% speed-up.","@tklengyel, I didn't patch the pre_mem_cb(). We should report this as another issue.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,757,2019-12-17T15:00:25Z,2020-05-02T11:36:04Z,2020-05-13T13:01:50Z,CLOSED,False,2,3,1,https://github.com/skvl,Implement fast singlestep,1,[],https://github.com/tklengyel/drakvuf/pull/757,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/757#issuecomment-567016413,"On break point event eight context switches occurs.
With fast single step it is possible to shorten path for two context switches
and gain 35% speed-up.",Weirdly the leak only happens with this PR. But it could be a separate issue.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,757,2019-12-17T15:00:25Z,2020-05-02T11:36:04Z,2020-05-13T13:01:50Z,CLOSED,False,2,3,1,https://github.com/skvl,Implement fast singlestep,1,[],https://github.com/tklengyel/drakvuf/pull/757,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/757#issuecomment-567028851,"On break point event eight context switches occurs.
With fast single step it is possible to shorten path for two context switches
and gain 35% speed-up.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,757,2019-12-17T15:00:25Z,2020-05-02T11:36:04Z,2020-05-13T13:01:50Z,CLOSED,False,2,3,1,https://github.com/skvl,Implement fast singlestep,1,[],https://github.com/tklengyel/drakvuf/pull/757,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/757#issuecomment-567042276,"On break point event eight context switches occurs.
With fast single step it is possible to shorten path for two context switches
and gain 35% speed-up.",The leak is reproducible with this PR but not with master. So something this PR does triggers that leak (perhaps unintentionally as a sideeffect).,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,757,2019-12-17T15:00:25Z,2020-05-02T11:36:04Z,2020-05-13T13:01:50Z,CLOSED,False,2,3,1,https://github.com/skvl,Implement fast singlestep,1,[],https://github.com/tklengyel/drakvuf/pull/757,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/757#issuecomment-567046140,"On break point event eight context switches occurs.
With fast single step it is possible to shorten path for two context switches
and gain 35% speed-up.","So the only way for this leak to happen is if post_mem_cb was never called. During shutdown all memcb_pass structures active for the singlestep events get freed, so that means there was a case where multiple memcb_pass structures were allocated with at least one that missed its post_mem_cb. Provided that this PR introduces the option to skip those singlestep callback it is likely that it somehow affected one of these events that should have been issued for post_mem_cb.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,757,2019-12-17T15:00:25Z,2020-05-02T11:36:04Z,2020-05-13T13:01:50Z,CLOSED,False,2,3,1,https://github.com/skvl,Implement fast singlestep,1,[],https://github.com/tklengyel/drakvuf/pull/757,https://github.com/skvl,12,https://github.com/tklengyel/drakvuf/pull/757#issuecomment-567058082,"On break point event eight context switches occurs.
With fast single step it is possible to shorten path for two context switches
and gain 35% speed-up.","@tklengyel, thank You. I will try to debug it.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,757,2019-12-17T15:00:25Z,2020-05-02T11:36:04Z,2020-05-13T13:01:50Z,CLOSED,False,2,3,1,https://github.com/skvl,Implement fast singlestep,1,[],https://github.com/tklengyel/drakvuf/pull/757,https://github.com/tklengyel,13,https://github.com/tklengyel/drakvuf/pull/757#issuecomment-567077809,"On break point event eight context switches occurs.
With fast single step it is possible to shorten path for two context switches
and gain 35% speed-up.",Oddly I can't seem to be able to trigger the leak when I run it manually on the same VM with the same settings.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,757,2019-12-17T15:00:25Z,2020-05-02T11:36:04Z,2020-05-13T13:01:50Z,CLOSED,False,2,3,1,https://github.com/skvl,Implement fast singlestep,1,[],https://github.com/tklengyel/drakvuf/pull/757,https://github.com/skvl,14,https://github.com/tklengyel/drakvuf/pull/757#issuecomment-567486550,"On break point event eight context switches occurs.
With fast single step it is possible to shorten path for two context switches
and gain 35% speed-up.","@tklengyel how do you run drakvuf with valgrind. I get ""libdrakvuf initialization failed"" every time. Without it everything works ok.
Even more surprising is that drakvuf works with gdb and valgrind (something like $ valgrind gdb --args drakvuf ...)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,757,2019-12-17T15:00:25Z,2020-05-02T11:36:04Z,2020-05-13T13:01:50Z,CLOSED,False,2,3,1,https://github.com/skvl,Implement fast singlestep,1,[],https://github.com/tklengyel/drakvuf/pull/757,https://github.com/skvl,15,https://github.com/tklengyel/drakvuf/pull/757#issuecomment-567503745,"On break point event eight context switches occurs.
With fast single step it is possible to shorten path for two context switches
and gain 35% speed-up.",I have the memory leak once with clang sanitizer enabled. Unfortunately I can't reproduce it once more...,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,757,2019-12-17T15:00:25Z,2020-05-02T11:36:04Z,2020-05-13T13:01:50Z,CLOSED,False,2,3,1,https://github.com/skvl,Implement fast singlestep,1,[],https://github.com/tklengyel/drakvuf/pull/757,https://github.com/skvl,16,https://github.com/tklengyel/drakvuf/pull/757#issuecomment-567543314,"On break point event eight context switches occurs.
With fast single step it is possible to shorten path for two context switches
and gain 35% speed-up.","Finally I have managed to get it:
=================================================================
==15633==ERROR: LeakSanitizer: detected memory leaks

Direct leak of 144 byte(s) in 2 object(s) allocated from:
    #0 0x4f428a in calloc /build/llvm-toolchain-8-F3l7P1/llvm-toolchain-8-8/projects/compiler-rt/lib/asan/asan_malloc_linux.cc:155:3
    #1 0x7f674d290528 in g_malloc0 (/lib/x86_64-linux-gnu/libglib-2.0.so.0+0x54528)
    #2 0x548f9d in int3_cb /home/skovalev/src/ms/drakvuf/origin/src/libdrakvuf/vmi.c:559:16
    #3 0x7f674d380633 in process_software_breakpoint /home/skovalev/src/ms/drakvuf/origin/libvmi/libvmi/driver/xen/xen_events.c:683:5
    #4 0x7f674d381c0f in process_request /home/skovalev/src/ms/drakvuf/origin/libvmi/libvmi/driver/xen/xen_events.c:1241:12
    #5 0x7f674d383b6e in process_requests_412 /home/skovalev/src/ms/drakvuf/origin/libvmi/libvmi/driver/xen/xen_events.c:1850:15
    #6 0x7f674d385826 in xen_events_listen /home/skovalev/src/ms/drakvuf/origin/libvmi/libvmi/driver/xen/xen_events.c:2376:11
    #7 0x7f674d38e6fc in driver_events_listen /home/skovalev/src/ms/drakvuf/origin/libvmi/libvmi/driver/driver_wrapper.h:423:12
    #8 0x7f674d3909e3 in vmi_events_listen /home/skovalev/src/ms/drakvuf/origin/libvmi/libvmi/events.c:1024:12
    #9 0x55381d in drakvuf_vmi_event_callback /home/skovalev/src/ms/drakvuf/origin/src/libdrakvuf/vmi.c:1266:23
    #10 0x554791 in drakvuf_poll /home/skovalev/src/ms/drakvuf/origin/src/libdrakvuf/vmi.c:1298:9
    #11 0x553dc7 in drakvuf_loop /home/skovalev/src/ms/drakvuf/origin/src/libdrakvuf/vmi.c:1311:9
    #12 0x526cb7 in drakvuf_c::loop(int) /home/skovalev/src/ms/drakvuf/origin/src/drakvuf.cpp:201:5
    #13 0x529b49 in main /home/skovalev/src/ms/drakvuf/origin/src/main.cpp:541:14
    #14 0x7f674c3ddb6a in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x26b6a)

Indirect leak of 400 byte(s) in 2 object(s) allocated from:
    #0 0x5235b2 in operator new(unsigned long) (/home/skovalev/src/ms/drakvuf/origin/build/drakvuf+0x5235b2)
    #1 0x5b452a in create_file_cb(drakvuf*, drakvuf_trap_info*) /home/skovalev/src/ms/drakvuf/origin/src/plugins/filetracer/filetracer.cpp:892:25
    #2 0x548f9d in int3_cb /home/skovalev/src/ms/drakvuf/origin/src/libdrakvuf/vmi.c:559:16
    #3 0x7f674d380633 in process_software_breakpoint /home/skovalev/src/ms/drakvuf/origin/libvmi/libvmi/driver/xen/xen_events.c:683:5
    #4 0x7f674d381c0f in process_request /home/skovalev/src/ms/drakvuf/origin/libvmi/libvmi/driver/xen/xen_events.c:1241:12
    #5 0x7f674d383b6e in process_requests_412 /home/skovalev/src/ms/drakvuf/origin/libvmi/libvmi/driver/xen/xen_events.c:1850:15
    #6 0x7f674d385826 in xen_events_listen /home/skovalev/src/ms/drakvuf/origin/libvmi/libvmi/driver/xen/xen_events.c:2376:11
    #7 0x7f674d38e6fc in driver_events_listen /home/skovalev/src/ms/drakvuf/origin/libvmi/libvmi/driver/driver_wrapper.h:423:12
    #8 0x7f674d3909e3 in vmi_events_listen /home/skovalev/src/ms/drakvuf/origin/libvmi/libvmi/events.c:1024:12
    #9 0x55381d in drakvuf_vmi_event_callback /home/skovalev/src/ms/drakvuf/origin/src/libdrakvuf/vmi.c:1266:23
    #10 0x554791 in drakvuf_poll /home/skovalev/src/ms/drakvuf/origin/src/libdrakvuf/vmi.c:1298:9
    #11 0x553dc7 in drakvuf_loop /home/skovalev/src/ms/drakvuf/origin/src/libdrakvuf/vmi.c:1311:9
    #12 0x526cb7 in drakvuf_c::loop(int) /home/skovalev/src/ms/drakvuf/origin/src/drakvuf.cpp:201:5
    #13 0x529b49 in main /home/skovalev/src/ms/drakvuf/origin/src/main.cpp:541:14
    #14 0x7f674c3ddb6a in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x26b6a)

Indirect leak of 370 byte(s) in 8 object(s) allocated from:
    #0 0x5235b2 in operator new(unsigned long) (/home/skovalev/src/ms/drakvuf/origin/build/drakvuf+0x5235b2)
    #1 0x7f674c87c61c in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (/lib/x86_64-linux-gnu/libstdc++.so.6+0x13e61c)

SUMMARY: AddressSanitizer: 914 byte(s) leaked in 12 allocation(s).

I have tested my own branch (based on commit c526aea).
I don't understand first and third leaks because of strange back-traces.
I think second leak is caused by SIGTERM. filetracer sets breakpoint on return from NtCreateFile and allocates wrapper data structure for it. On SIGTERM drakvuf removes breakpoint but doesn't remove the data. So we just catch ""right"" moment to kill drakvuf.
Is it possible that you catch the same situation?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,757,2019-12-17T15:00:25Z,2020-05-02T11:36:04Z,2020-05-13T13:01:50Z,CLOSED,False,2,3,1,https://github.com/skvl,Implement fast singlestep,1,[],https://github.com/tklengyel/drakvuf/pull/757,https://github.com/tklengyel,17,https://github.com/tklengyel/drakvuf/pull/757#issuecomment-567547162,"On break point event eight context switches occurs.
With fast single step it is possible to shorten path for two context switches
and gain 35% speed-up.","You need to use https://github.com/tklengyel/valgrind, I've patched it up to support newer versions of Xen and the hypercalls drakvuf/libvmi uses.

Is it possible that you catch the same situation?

Possible but then we would have seen it at least occasionally in the past. Somehow this PR either is causing it or makes its occurrence a lot more likely.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,757,2019-12-17T15:00:25Z,2020-05-02T11:36:04Z,2020-05-13T13:01:50Z,CLOSED,False,2,3,1,https://github.com/skvl,Implement fast singlestep,1,[],https://github.com/tklengyel/drakvuf/pull/757,https://github.com/skvl,18,https://github.com/tklengyel/drakvuf/pull/757#issuecomment-567559868,"On break point event eight context switches occurs.
With fast single step it is possible to shorten path for two context switches
and gain 35% speed-up.",Thank you very much. I will try it.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,757,2019-12-17T15:00:25Z,2020-05-02T11:36:04Z,2020-05-13T13:01:50Z,CLOSED,False,2,3,1,https://github.com/skvl,Implement fast singlestep,1,[],https://github.com/tklengyel/drakvuf/pull/757,https://github.com/skvl,19,https://github.com/tklengyel/drakvuf/pull/757#issuecomment-567865801,"On break point event eight context switches occurs.
With fast single step it is possible to shorten path for two context switches
and gain 35% speed-up.","@tklengyel, I have tried you valgrind branch:
==11809== Memcheck, a memory error detector
==11809== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==11809== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==11809== Command: /home/skovalev/src/ms/drakvuf/origin/build/drakvuf -d trap -r /mnt/images/win7-sp1-x64/rekall/kernel.json -S /home/skovalev/src/ms/worker/daemon/syscall_list.txt -o kv -D /tmp/zms-1 -M -n -v  
==11809==
1576835492.193166 Drakvuf v0.6-86e6a4f77115982172be849a661a3888d7cbcda5-dirty
1576835492.209122 Starting DRAKVUF initialization
1576835493.325045 drakvuf_init: Rekall WoW64 profile not used
==11809== Warning: noted but unhandled ioctl 0x50ff with no size/direction hints.
==11809==    This could cause spurious value errors to appear.
==11809==    See README_MISSING_SYSCALL_OR_IOCTL for guidance on writing a proper wrapper.
==11809== Warning: noted but unhandled ioctl 0x105005 with no size/direction hints.
==11809==    This could cause spurious value errors to appear.
==11809==    See README_MISSING_SYSCALL_OR_IOCTL for guidance on writing a proper wrapper.
1576835493.341190 drakvuf_event_fd_add fd=18
1576835493.342695 size of list=1
1576835493.343028 regenerating event_fds and fd_info_lookup...
1576835493.343730 new event_fd i=0 for fd=18
1576835493.344314 new fd_info_lookup i=0 for fd=18
1576835493.344788 drakvuf_init: adding event_fd done
--11809-- WARNING: __HYPERVISOR_sysctl version 0x12 not supported
--11809-- You may be able to write your own handler.
--11809-- Read the file README_MISSING_SYSCALL_OR_IOCTL.
--11809-- Nevertheless we consider this a bug.  Please report
--11809-- it at http://valgrind.org/support/bug_reports.html &
--11809-- http://wiki.xen.org/wiki/Reporting_Bugs_against_Xen.
libxl: error: libxl_domain.c:315:libxl_list_domain: getting domain info list: Function not implemented
Domain is not running, failed to get domID from name!
--11809-- WARNING: __HYPERVISOR_domctl version 0x11 not supported
--11809-- You may be able to write your own handler.
--11809-- Read the file README_MISSING_SYSCALL_OR_IOCTL.
--11809-- Nevertheless we consider this a bug.  Please report
--11809-- it at http://valgrind.org/support/bug_reports.html &
--11809-- http://wiki.xen.org/wiki/Reporting_Bugs_against_Xen.
1576835493.366520 init_vmi on domID 0 -> (null)
--11809-- WARNING: __HYPERVISOR_domctl version 0x11 not supported
--11809-- You may be able to write your own handler.
--11809-- Read the file README_MISSING_SYSCALL_OR_IOCTL.
--11809-- Nevertheless we consider this a bug.  Please report
--11809-- it at http://valgrind.org/support/bug_reports.html &
--11809-- http://wiki.xen.org/wiki/Reporting_Bugs_against_Xen.
VMI_ERROR: Invalid id.
Failed to init LibVMI library.
1576835493.536434 libdrakvuf initialization failed
Failed to initialize DRAKVUF: drakvuf_init() failed
==11809==
==11809== HEAP SUMMARY:
==11809==     in use at exit: 18,604 bytes in 6 blocks
==11809==   total heap usage: 200,476 allocs, 200,470 frees, 24,381,725 bytes allocated
==11809==
==11809== LEAK SUMMARY:
==11809==    definitely lost: 0 bytes in 0 blocks
==11809==    indirectly lost: 0 bytes in 0 blocks
==11809==      possibly lost: 0 bytes in 0 blocks
==11809==    still reachable: 18,604 bytes in 6 blocks
==11809==         suppressed: 0 bytes in 0 blocks
==11809== Reachable blocks (those to which a pointer was found) are not shown.
==11809== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==11809==
==11809== For counts of detected and suppressed errors, rerun with: -v
==11809== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,757,2019-12-17T15:00:25Z,2020-05-02T11:36:04Z,2020-05-13T13:01:50Z,CLOSED,False,2,3,1,https://github.com/skvl,Implement fast singlestep,1,[],https://github.com/tklengyel/drakvuf/pull/757,https://github.com/tklengyel,20,https://github.com/tklengyel/drakvuf/pull/757#issuecomment-567907573,"On break point event eight context switches occurs.
With fast single step it is possible to shorten path for two context switches
and gain 35% speed-up.",Are you sure you are using the correct valgrind? I'm running it on Xen 4.13 without any issue,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,758,2019-12-19T00:27:00Z,2019-12-19T00:27:14Z,2019-12-19T00:27:17Z,MERGED,True,1,1,1,https://github.com/tklengyel,Update to Xen 4.13.0,1,[],https://github.com/tklengyel/drakvuf/pull/758,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/758,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,759,2019-12-21T01:53:22Z,2019-12-21T02:08:08Z,2019-12-21T02:08:11Z,MERGED,True,2,8,1,https://github.com/tklengyel,Minor correction in linux_sym2v,1,[],https://github.com/tklengyel/drakvuf/pull/759,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/759,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,760,2019-12-23T13:17:56Z,2019-12-23T13:18:36Z,2020-05-13T13:01:57Z,CLOSED,False,1,0,1,https://github.com/skvl,Fix missing proc_data.tid in proc_mem_cb,1,[],https://github.com/tklengyel/drakvuf/pull/760,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/760,"This affects libinjector/win_injector.c:mem_callback() where proc_data.tid checked against target_tid.
In some cases this results in injection timeout for Windows 7 x86.","This affects libinjector/win_injector.c:mem_callback() where proc_data.tid checked against target_tid.
In some cases this results in injection timeout for Windows 7 x86.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,760,2019-12-23T13:17:56Z,2019-12-23T13:18:36Z,2020-05-13T13:01:57Z,CLOSED,False,1,0,1,https://github.com/skvl,Fix missing proc_data.tid in proc_mem_cb,1,[],https://github.com/tklengyel/drakvuf/pull/760,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/760#issuecomment-568472801,"This affects libinjector/win_injector.c:mem_callback() where proc_data.tid checked against target_tid.
In some cases this results in injection timeout for Windows 7 x86.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,760,2019-12-23T13:17:56Z,2019-12-23T13:18:36Z,2020-05-13T13:01:57Z,CLOSED,False,1,0,1,https://github.com/skvl,Fix missing proc_data.tid in proc_mem_cb,1,[],https://github.com/tklengyel/drakvuf/pull/760,https://github.com/skvl,3,https://github.com/tklengyel/drakvuf/pull/760#issuecomment-568473283,"This affects libinjector/win_injector.c:mem_callback() where proc_data.tid checked against target_tid.
In some cases this results in injection timeout for Windows 7 x86.",I should re-test it first...,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,761,2019-12-24T16:44:08Z,2019-12-26T07:51:43Z,2020-05-13T13:01:56Z,CLOSED,False,1096,743,21,https://github.com/skvl,"Fixes and refactoring in libinjector, filedelete, filetracer, wmimon, procmon, socketmon",11,[],https://github.com/tklengyel/drakvuf/pull/761,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/761,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,761,2019-12-24T16:44:08Z,2019-12-26T07:51:43Z,2020-05-13T13:01:56Z,CLOSED,False,1096,743,21,https://github.com/skvl,"Fixes and refactoring in libinjector, filedelete, filetracer, wmimon, procmon, socketmon",11,[],https://github.com/tklengyel/drakvuf/pull/761,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/761#issuecomment-568776917,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,761,2019-12-24T16:44:08Z,2019-12-26T07:51:43Z,2020-05-13T13:01:56Z,CLOSED,False,1096,743,21,https://github.com/skvl,"Fixes and refactoring in libinjector, filedelete, filetracer, wmimon, procmon, socketmon",11,[],https://github.com/tklengyel/drakvuf/pull/761,https://github.com/skvl,3,https://github.com/tklengyel/drakvuf/pull/761#issuecomment-568777001,,@tklengyel this is my work from last several months. If you would like I could split it to multiple PRs.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,761,2019-12-24T16:44:08Z,2019-12-26T07:51:43Z,2020-05-13T13:01:56Z,CLOSED,False,1096,743,21,https://github.com/skvl,"Fixes and refactoring in libinjector, filedelete, filetracer, wmimon, procmon, socketmon",11,[],https://github.com/tklengyel/drakvuf/pull/761,https://github.com/skvl,4,https://github.com/tklengyel/drakvuf/pull/761#issuecomment-568858361,,Yikes! I have forgotten to push my last commit with some fixes!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,761,2019-12-24T16:44:08Z,2019-12-26T07:51:43Z,2020-05-13T13:01:56Z,CLOSED,False,1096,743,21,https://github.com/skvl,"Fixes and refactoring in libinjector, filedelete, filetracer, wmimon, procmon, socketmon",11,[],https://github.com/tklengyel/drakvuf/pull/761,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/761#issuecomment-568942936,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,761,2019-12-24T16:44:08Z,2019-12-26T07:51:43Z,2020-05-13T13:01:56Z,CLOSED,False,1096,743,21,https://github.com/skvl,"Fixes and refactoring in libinjector, filedelete, filetracer, wmimon, procmon, socketmon",11,[],https://github.com/tklengyel/drakvuf/pull/761,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/761#issuecomment-568958252,,So this PR consistently fails the Jenkins tests. I would suggest to break it up into smaller PRs to be able to better pinpoint the problem.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,761,2019-12-24T16:44:08Z,2019-12-26T07:51:43Z,2020-05-13T13:01:56Z,CLOSED,False,1096,743,21,https://github.com/skvl,"Fixes and refactoring in libinjector, filedelete, filetracer, wmimon, procmon, socketmon",11,[],https://github.com/tklengyel/drakvuf/pull/761,https://github.com/skvl,7,https://github.com/tklengyel/drakvuf/pull/761#issuecomment-569002802,,"would suggest to break it up into smaller PRs to be able to better pinpoint the problem.

Sure. I will split it to several branches. And I will send memdump changes last to give @icedevml some time to form his ideas.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,762,2019-12-24T19:46:50Z,2019-12-24T20:28:26Z,2019-12-24T20:28:26Z,MERGED,True,8,0,1,https://github.com/icedevml,memdump: document the idea of memdump file names,1,[],https://github.com/tklengyel/drakvuf/pull/762,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/762,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,762,2019-12-24T19:46:50Z,2019-12-24T20:28:26Z,2019-12-24T20:28:26Z,MERGED,True,8,0,1,https://github.com/icedevml,memdump: document the idea of memdump file names,1,[],https://github.com/tklengyel/drakvuf/pull/762,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/762#issuecomment-568795930,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,763,2019-12-26T08:01:26Z,2019-12-26T14:31:02Z,2020-05-13T13:01:55Z,MERGED,True,22,9,3,https://github.com/skvl,Fixes for x86,3,[],https://github.com/tklengyel/drakvuf/pull/763,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/763,"Fix missing proc_data.tid in proc_mem_cb
Fix initializtion of injector functions for Windows x86","Fix missing proc_data.tid in proc_mem_cb
Fix initializtion of injector functions for Windows x86",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,763,2019-12-26T08:01:26Z,2019-12-26T14:31:02Z,2020-05-13T13:01:55Z,MERGED,True,22,9,3,https://github.com/skvl,Fixes for x86,3,[],https://github.com/tklengyel/drakvuf/pull/763,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/763#issuecomment-569005456,"Fix missing proc_data.tid in proc_mem_cb
Fix initializtion of injector functions for Windows x86",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,763,2019-12-26T08:01:26Z,2019-12-26T14:31:02Z,2020-05-13T13:01:55Z,MERGED,True,22,9,3,https://github.com/skvl,Fixes for x86,3,[],https://github.com/tklengyel/drakvuf/pull/763,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/763#issuecomment-569065034,"Fix missing proc_data.tid in proc_mem_cb
Fix initializtion of injector functions for Windows x86",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,764,2019-12-26T08:23:40Z,2019-12-26T14:30:32Z,2020-05-13T13:01:59Z,MERGED,True,221,116,5,https://github.com/skvl,Refactoring and debug output,5,[],https://github.com/tklengyel/drakvuf/pull/764,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/764,"Add verbose output for file extraction failures
Add ""help"" command-line argument","Add verbose output for file extraction failures
Add ""help"" command-line argument",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,764,2019-12-26T08:23:40Z,2019-12-26T14:30:32Z,2020-05-13T13:01:59Z,MERGED,True,221,116,5,https://github.com/skvl,Refactoring and debug output,5,[],https://github.com/tklengyel/drakvuf/pull/764,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/764#issuecomment-569010309,"Add verbose output for file extraction failures
Add ""help"" command-line argument",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,764,2019-12-26T08:23:40Z,2019-12-26T14:30:32Z,2020-05-13T13:01:59Z,MERGED,True,221,116,5,https://github.com/skvl,Refactoring and debug output,5,[],https://github.com/tklengyel/drakvuf/pull/764,https://github.com/skvl,3,https://github.com/tklengyel/drakvuf/pull/764#issuecomment-569014725,"Add verbose output for file extraction failures
Add ""help"" command-line argument",@tklengyel I will rebase the branch after you accept previous one.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,764,2019-12-26T08:23:40Z,2019-12-26T14:30:32Z,2020-05-13T13:01:59Z,MERGED,True,221,116,5,https://github.com/skvl,Refactoring and debug output,5,[],https://github.com/tklengyel/drakvuf/pull/764,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/764#issuecomment-569064409,"Add verbose output for file extraction failures
Add ""help"" command-line argument",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,765,2019-12-26T08:35:39Z,2019-12-27T13:25:05Z,2020-05-13T13:01:57Z,MERGED,True,177,73,4,https://github.com/skvl,Add new hooks,1,[],https://github.com/tklengyel/drakvuf/pull/765,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/765,"plugins/procmon: add hook for NtAdjustPrivilegesToken
plugins/filetracer: hook return from NtCreateFile to get file handle","plugins/procmon: add hook for NtAdjustPrivilegesToken
plugins/filetracer: hook return from NtCreateFile to get file handle",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,765,2019-12-26T08:35:39Z,2019-12-27T13:25:05Z,2020-05-13T13:01:57Z,MERGED,True,177,73,4,https://github.com/skvl,Add new hooks,1,[],https://github.com/tklengyel/drakvuf/pull/765,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/765#issuecomment-569012420,"plugins/procmon: add hook for NtAdjustPrivilegesToken
plugins/filetracer: hook return from NtCreateFile to get file handle",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,765,2019-12-26T08:35:39Z,2019-12-27T13:25:05Z,2020-05-13T13:01:57Z,MERGED,True,177,73,4,https://github.com/skvl,Add new hooks,1,[],https://github.com/tklengyel/drakvuf/pull/765,https://github.com/skvl,3,https://github.com/tklengyel/drakvuf/pull/765#issuecomment-569014736,"plugins/procmon: add hook for NtAdjustPrivilegesToken
plugins/filetracer: hook return from NtCreateFile to get file handle",@tklengyel I will rebase the branch after you accept previous one.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,765,2019-12-26T08:35:39Z,2019-12-27T13:25:05Z,2020-05-13T13:01:57Z,MERGED,True,177,73,4,https://github.com/skvl,Add new hooks,1,[],https://github.com/tklengyel/drakvuf/pull/765,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/765#issuecomment-569068187,"plugins/procmon: add hook for NtAdjustPrivilegesToken
plugins/filetracer: hook return from NtCreateFile to get file handle",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,765,2019-12-26T08:35:39Z,2019-12-27T13:25:05Z,2020-05-13T13:01:57Z,MERGED,True,177,73,4,https://github.com/skvl,Add new hooks,1,[],https://github.com/tklengyel/drakvuf/pull/765,https://github.com/skvl,5,https://github.com/tklengyel/drakvuf/pull/765#issuecomment-569077600,"plugins/procmon: add hook for NtAdjustPrivilegesToken
plugins/filetracer: hook return from NtCreateFile to get file handle",@tklengyel what is the error?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,765,2019-12-26T08:35:39Z,2019-12-27T13:25:05Z,2020-05-13T13:01:57Z,MERGED,True,177,73,4,https://github.com/skvl,Add new hooks,1,[],https://github.com/tklengyel/drakvuf/pull/765,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/765#issuecomment-569082928,"plugins/procmon: add hook for NtAdjustPrivilegesToken
plugins/filetracer: hook return from NtCreateFile to get file handle",Both the 32-bit and the 64-bit Win7 VMs crash.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,765,2019-12-26T08:35:39Z,2019-12-27T13:25:05Z,2020-05-13T13:01:57Z,MERGED,True,177,73,4,https://github.com/skvl,Add new hooks,1,[],https://github.com/tklengyel/drakvuf/pull/765,https://github.com/skvl,7,https://github.com/tklengyel/drakvuf/pull/765#issuecomment-569224026,"plugins/procmon: add hook for NtAdjustPrivilegesToken
plugins/filetracer: hook return from NtCreateFile to get file handle",I will try to debug it. So leave the branch to the end.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,765,2019-12-26T08:35:39Z,2019-12-27T13:25:05Z,2020-05-13T13:01:57Z,MERGED,True,177,73,4,https://github.com/skvl,Add new hooks,1,[],https://github.com/tklengyel/drakvuf/pull/765,https://github.com/skvl,8,https://github.com/tklengyel/drakvuf/pull/765#issuecomment-569262298,"plugins/procmon: add hook for NtAdjustPrivilegesToken
plugins/filetracer: hook return from NtCreateFile to get file handle",@tklengyel I have fixed the bug.,True,{'HOORAY': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,765,2019-12-26T08:35:39Z,2019-12-27T13:25:05Z,2020-05-13T13:01:57Z,MERGED,True,177,73,4,https://github.com/skvl,Add new hooks,1,[],https://github.com/tklengyel/drakvuf/pull/765,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/765#issuecomment-569267043,"plugins/procmon: add hook for NtAdjustPrivilegesToken
plugins/filetracer: hook return from NtCreateFile to get file handle",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,766,2019-12-26T08:50:19Z,2020-01-16T13:24:06Z,2020-05-13T13:01:53Z,MERGED,True,89,249,5,https://github.com/skvl,Fix socketmon,3,[],https://github.com/tklengyel/drakvuf/pull/766,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/766,"Remove unrelaible parts (tcp listener and udp seems not working to me)
Redefine structures for tcp endpoint for Windows 8.1 and Windows 10 (1803)
Reverse and leave single breakpoint to tcpip:TcpCreateAndConnectTcbComplete","Remove unrelaible parts (tcp listener and udp seems not working to me)
Redefine structures for tcp endpoint for Windows 8.1 and Windows 10 (1803)
Reverse and leave single breakpoint to tcpip:TcpCreateAndConnectTcbComplete",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,766,2019-12-26T08:50:19Z,2020-01-16T13:24:06Z,2020-05-13T13:01:53Z,MERGED,True,89,249,5,https://github.com/skvl,Fix socketmon,3,[],https://github.com/tklengyel/drakvuf/pull/766,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/766#issuecomment-569015060,"Remove unrelaible parts (tcp listener and udp seems not working to me)
Redefine structures for tcp endpoint for Windows 8.1 and Windows 10 (1803)
Reverse and leave single breakpoint to tcpip:TcpCreateAndConnectTcbComplete",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,766,2019-12-26T08:50:19Z,2020-01-16T13:24:06Z,2020-05-13T13:01:53Z,MERGED,True,89,249,5,https://github.com/skvl,Fix socketmon,3,[],https://github.com/tklengyel/drakvuf/pull/766,https://github.com/skvl,3,https://github.com/tklengyel/drakvuf/pull/766#issuecomment-569015089,"Remove unrelaible parts (tcp listener and udp seems not working to me)
Redefine structures for tcp endpoint for Windows 8.1 and Windows 10 (1803)
Reverse and leave single breakpoint to tcpip:TcpCreateAndConnectTcbComplete",@tklengyel I will rebase the branch after you accept previous one.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,766,2019-12-26T08:50:19Z,2020-01-16T13:24:06Z,2020-05-13T13:01:53Z,MERGED,True,89,249,5,https://github.com/skvl,Fix socketmon,3,[],https://github.com/tklengyel/drakvuf/pull/766,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/766#issuecomment-569084533,"Remove unrelaible parts (tcp listener and udp seems not working to me)
Redefine structures for tcp endpoint for Windows 8.1 and Windows 10 (1803)
Reverse and leave single breakpoint to tcpip:TcpCreateAndConnectTcbComplete",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,766,2019-12-26T08:50:19Z,2020-01-16T13:24:06Z,2020-05-13T13:01:53Z,MERGED,True,89,249,5,https://github.com/skvl,Fix socketmon,3,[],https://github.com/tklengyel/drakvuf/pull/766,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/766#issuecomment-569084669,"Remove unrelaible parts (tcp listener and udp seems not working to me)
Redefine structures for tcp endpoint for Windows 8.1 and Windows 10 (1803)
Reverse and leave single breakpoint to tcpip:TcpCreateAndConnectTcbComplete",You should do a git rebase -i master and only pick the socketmon commit to be part of this PR.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,766,2019-12-26T08:50:19Z,2020-01-16T13:24:06Z,2020-05-13T13:01:53Z,MERGED,True,89,249,5,https://github.com/skvl,Fix socketmon,3,[],https://github.com/tklengyel/drakvuf/pull/766,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/766#issuecomment-569260994,"Remove unrelaible parts (tcp listener and udp seems not working to me)
Redefine structures for tcp endpoint for Windows 8.1 and Windows 10 (1803)
Reverse and leave single breakpoint to tcpip:TcpCreateAndConnectTcbComplete","You still have a commit here that was wminon changes, do you want to keep it in this PR since it now passes the tests?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,766,2019-12-26T08:50:19Z,2020-01-16T13:24:06Z,2020-05-13T13:01:53Z,MERGED,True,89,249,5,https://github.com/skvl,Fix socketmon,3,[],https://github.com/tklengyel/drakvuf/pull/766,https://github.com/skvl,7,https://github.com/tklengyel/drakvuf/pull/766#issuecomment-572460567,"Remove unrelaible parts (tcp listener and udp seems not working to me)
Redefine structures for tcp endpoint for Windows 8.1 and Windows 10 (1803)
Reverse and leave single breakpoint to tcpip:TcpCreateAndConnectTcbComplete",@tklengyel is something wrong with this PR?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,766,2019-12-26T08:50:19Z,2020-01-16T13:24:06Z,2020-05-13T13:01:53Z,MERGED,True,89,249,5,https://github.com/skvl,Fix socketmon,3,[],https://github.com/tklengyel/drakvuf/pull/766,https://github.com/skvl,8,https://github.com/tklengyel/drakvuf/pull/766#issuecomment-573652399,"Remove unrelaible parts (tcp listener and udp seems not working to me)
Redefine structures for tcp endpoint for Windows 8.1 and Windows 10 (1803)
Reverse and leave single breakpoint to tcpip:TcpCreateAndConnectTcbComplete","@tklengyel, this PR needs libvmi/libvmi#868",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,766,2019-12-26T08:50:19Z,2020-01-16T13:24:06Z,2020-05-13T13:01:53Z,MERGED,True,89,249,5,https://github.com/skvl,Fix socketmon,3,[],https://github.com/tklengyel/drakvuf/pull/766,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/766#issuecomment-574220446,"Remove unrelaible parts (tcp listener and udp seems not working to me)
Redefine structures for tcp endpoint for Windows 8.1 and Windows 10 (1803)
Reverse and leave single breakpoint to tcpip:TcpCreateAndConnectTcbComplete",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,766,2019-12-26T08:50:19Z,2020-01-16T13:24:06Z,2020-05-13T13:01:53Z,MERGED,True,89,249,5,https://github.com/skvl,Fix socketmon,3,[],https://github.com/tklengyel/drakvuf/pull/766,https://github.com/skvl,10,https://github.com/tklengyel/drakvuf/pull/766#issuecomment-574542845,"Remove unrelaible parts (tcp listener and udp seems not working to me)
Redefine structures for tcp endpoint for Windows 8.1 and Windows 10 (1803)
Reverse and leave single breakpoint to tcpip:TcpCreateAndConnectTcbComplete","@tklengyel, I don't understand the Travis CI error. For some reason scan-build-10 fails. But scan-build-8 works.
This the full error (from my local system):
configure:3705: checking for C compiler version
configure:3714: /usr/share/clang/scan-build-10/bin/../libexec/ccc-analyzer --version >&5
clang version 10.0.0-++20200114063916+fd19ffc6a50-1~exp1~20200114175404.1441
Target: x86_64-pc-linux-gnu
Thread model: posix
InstalledDir: /usr/bin
configure:3725: $? = 0
configure:3714: /usr/share/clang/scan-build-10/bin/../libexec/ccc-analyzer -v >&5
clang version 10.0.0-++20200114063916+fd19ffc6a50-1~exp1~20200114175404.1441
Target: x86_64-pc-linux-gnu
Thread model: posix
InstalledDir: /usr/bin
Found candidate GCC installation: /usr/bin/../lib/gcc/x86_64-linux-gnu/7
Found candidate GCC installation: /usr/bin/../lib/gcc/x86_64-linux-gnu/7.4.0
Found candidate GCC installation: /usr/bin/../lib/gcc/x86_64-linux-gnu/8
Found candidate GCC installation: /usr/bin/../lib/gcc/x86_64-linux-gnu/9
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/7
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/7.4.0
... rest of stderr output deleted ...
configure:3725: $? = 0
configure:3714: /usr/share/clang/scan-build-10/bin/../libexec/ccc-analyzer -V >&5
clang: error: argument to '-V' is missing (expected 1 value)
clang: error: no input files
configure:3725: $? = 1
configure:3714: /usr/share/clang/scan-build-10/bin/../libexec/ccc-analyzer -qversion >&5
clang: error: unknown argument '-qversion'; did you mean '--version'?
clang: error: no input files
configure:3725: $? = 1
configure:3745: checking whether the C compiler works
configure:3767: /usr/share/clang/scan-build-10/bin/../libexec/ccc-analyzer    conftest.c  >&5
cannot find 'clang' in 'clang' command
configure:3771: $? = 255
configure:3809: result: no
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""DRAKVUF""
| #define PACKAGE_TARNAME ""drakvuf""
| #define PACKAGE_VERSION ""0.7-fea2f86""
| #define PACKAGE_STRING ""DRAKVUF 0.7-fea2f86""
| #define PACKAGE_BUGREPORT ""tamas@tklengyel.com""
| #define PACKAGE_URL ""https://drakvuf.com""
| /* end confdefs.h.  */
|
| int
| main ()
| {
|
|   ;
|   return 0;
| }
configure:3814: error: in `/home/skovalev/src/drakvuf':
configure:3816: error: C compiler cannot create executables",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,766,2019-12-26T08:50:19Z,2020-01-16T13:24:06Z,2020-05-13T13:01:53Z,MERGED,True,89,249,5,https://github.com/skvl,Fix socketmon,3,[],https://github.com/tklengyel/drakvuf/pull/766,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/766#issuecomment-574866383,"Remove unrelaible parts (tcp listener and udp seems not working to me)
Redefine structures for tcp endpoint for Windows 8.1 and Windows 10 (1803)
Reverse and leave single breakpoint to tcpip:TcpCreateAndConnectTcbComplete","Yea, using clang-10 broke on Travis for some reason. Anyway, just rebase on master and the error will go away.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,766,2019-12-26T08:50:19Z,2020-01-16T13:24:06Z,2020-05-13T13:01:53Z,MERGED,True,89,249,5,https://github.com/skvl,Fix socketmon,3,[],https://github.com/tklengyel/drakvuf/pull/766,https://github.com/skvl,12,https://github.com/tklengyel/drakvuf/pull/766#issuecomment-575134389,"Remove unrelaible parts (tcp listener and udp seems not working to me)
Redefine structures for tcp endpoint for Windows 8.1 and Windows 10 (1803)
Reverse and leave single breakpoint to tcpip:TcpCreateAndConnectTcbComplete","@tklengyel, done!",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,767,2019-12-26T09:20:01Z,2020-01-14T17:10:27Z,2020-05-13T13:01:56Z,MERGED,True,85,26,3,https://github.com/skvl,plugins/memdump: save metadata file similar to plugins/filedelete ,1,[],https://github.com/tklengyel/drakvuf/pull/767,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/767,"Name memdump artifacts according to plugins/filedelete and save additional
information in metadata file. This unifies both plugins.
Refactor printing extra information in debug logs to support more types for
feature use.","Name memdump artifacts according to plugins/filedelete and save additional
information in metadata file. This unifies both plugins.
Refactor printing extra information in debug logs to support more types for
feature use.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,767,2019-12-26T09:20:01Z,2020-01-14T17:10:27Z,2020-05-13T13:01:56Z,MERGED,True,85,26,3,https://github.com/skvl,plugins/memdump: save metadata file similar to plugins/filedelete ,1,[],https://github.com/tklengyel/drakvuf/pull/767,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/767#issuecomment-569021067,"Name memdump artifacts according to plugins/filedelete and save additional
information in metadata file. This unifies both plugins.
Refactor printing extra information in debug logs to support more types for
feature use.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,767,2019-12-26T09:20:01Z,2020-01-14T17:10:27Z,2020-05-13T13:01:56Z,MERGED,True,85,26,3,https://github.com/skvl,plugins/memdump: save metadata file similar to plugins/filedelete ,1,[],https://github.com/tklengyel/drakvuf/pull/767,https://github.com/skvl,3,https://github.com/tklengyel/drakvuf/pull/767#issuecomment-569021093,"Name memdump artifacts according to plugins/filedelete and save additional
information in metadata file. This unifies both plugins.
Refactor printing extra information in debug logs to support more types for
feature use.",@tklengyel I will rebase the branch after you accept previous one.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,767,2019-12-26T09:20:01Z,2020-01-14T17:10:27Z,2020-05-13T13:01:56Z,MERGED,True,85,26,3,https://github.com/skvl,plugins/memdump: save metadata file similar to plugins/filedelete ,1,[],https://github.com/tklengyel/drakvuf/pull/767,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/767#issuecomment-569115357,"Name memdump artifacts according to plugins/filedelete and save additional
information in metadata file. This unifies both plugins.
Refactor printing extra information in debug logs to support more types for
feature use.",@skvl gonna look at it within next 2 days,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,767,2019-12-26T09:20:01Z,2020-01-14T17:10:27Z,2020-05-13T13:01:56Z,MERGED,True,85,26,3,https://github.com/skvl,plugins/memdump: save metadata file similar to plugins/filedelete ,1,[],https://github.com/tklengyel/drakvuf/pull/767,https://github.com/skvl,5,https://github.com/tklengyel/drakvuf/pull/767#issuecomment-569228946,"Name memdump artifacts according to plugins/filedelete and save additional
information in metadata file. This unifies both plugins.
Refactor printing extra information in debug logs to support more types for
feature use.","@icedevml, OK.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,767,2019-12-26T09:20:01Z,2020-01-14T17:10:27Z,2020-05-13T13:01:56Z,MERGED,True,85,26,3,https://github.com/skvl,plugins/memdump: save metadata file similar to plugins/filedelete ,1,[],https://github.com/tklengyel/drakvuf/pull/767,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/767#issuecomment-569270413,"Name memdump artifacts according to plugins/filedelete and save additional
information in metadata file. This unifies both plugins.
Refactor printing extra information in debug logs to support more types for
feature use.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,767,2019-12-26T09:20:01Z,2020-01-14T17:10:27Z,2020-05-13T13:01:56Z,MERGED,True,85,26,3,https://github.com/skvl,plugins/memdump: save metadata file similar to plugins/filedelete ,1,[],https://github.com/tklengyel/drakvuf/pull/767,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/767#issuecomment-572629939,"Name memdump artifacts according to plugins/filedelete and save additional
information in metadata file. This unifies both plugins.
Refactor printing extra information in debug logs to support more types for
feature use.",@skvl @icedevml what's the status of this PR? Any more work left?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,767,2019-12-26T09:20:01Z,2020-01-14T17:10:27Z,2020-05-13T13:01:56Z,MERGED,True,85,26,3,https://github.com/skvl,plugins/memdump: save metadata file similar to plugins/filedelete ,1,[],https://github.com/tklengyel/drakvuf/pull/767,https://github.com/icedevml,8,https://github.com/tklengyel/drakvuf/pull/767#issuecomment-572824225,"Name memdump artifacts according to plugins/filedelete and save additional
information in metadata file. This unifies both plugins.
Refactor printing extra information in debug logs to support more types for
feature use.","I think @skvl is still considering some of my comments:

I will check some ideas and will back with some proposition (may be agree with proposition 1).

So I bet it's still work in progress yet.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,767,2019-12-26T09:20:01Z,2020-01-14T17:10:27Z,2020-05-13T13:01:56Z,MERGED,True,85,26,3,https://github.com/skvl,plugins/memdump: save metadata file similar to plugins/filedelete ,1,[],https://github.com/tklengyel/drakvuf/pull/767,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/767#issuecomment-572840712,"Name memdump artifacts according to plugins/filedelete and save additional
information in metadata file. This unifies both plugins.
Refactor printing extra information in debug logs to support more types for
feature use.","OK, I'll leave it up to you decide when it's good to merge",True,{'THUMBS_UP': ['https://github.com/icedevml']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,767,2019-12-26T09:20:01Z,2020-01-14T17:10:27Z,2020-05-13T13:01:56Z,MERGED,True,85,26,3,https://github.com/skvl,plugins/memdump: save metadata file similar to plugins/filedelete ,1,[],https://github.com/tklengyel/drakvuf/pull/767,https://github.com/skvl,10,https://github.com/tklengyel/drakvuf/pull/767#issuecomment-573630060,"Name memdump artifacts according to plugins/filedelete and save additional
information in metadata file. This unifies both plugins.
Refactor printing extra information in debug logs to support more types for
feature use.","@tklengyel, what is the error with jenkins?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,767,2019-12-26T09:20:01Z,2020-01-14T17:10:27Z,2020-05-13T13:01:56Z,MERGED,True,85,26,3,https://github.com/skvl,plugins/memdump: save metadata file similar to plugins/filedelete ,1,[],https://github.com/tklengyel/drakvuf/pull/767,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/767#issuecomment-573675439,"Name memdump artifacts according to plugins/filedelete and save additional
information in metadata file. This unifies both plugins.
Refactor printing extra information in debug logs to support more types for
feature use.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,767,2019-12-26T09:20:01Z,2020-01-14T17:10:27Z,2020-05-13T13:01:56Z,MERGED,True,85,26,3,https://github.com/skvl,plugins/memdump: save metadata file similar to plugins/filedelete ,1,[],https://github.com/tklengyel/drakvuf/pull/767,https://github.com/icedevml,12,https://github.com/tklengyel/drakvuf/pull/767#issuecomment-573929618,"Name memdump artifacts according to plugins/filedelete and save additional
information in metadata file. This unifies both plugins.
Refactor printing extra information in debug logs to support more types for
feature use.",Gonna look at it within ~12 hours from now.,True,{'THUMBS_UP': ['https://github.com/skvl']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,767,2019-12-26T09:20:01Z,2020-01-14T17:10:27Z,2020-05-13T13:01:56Z,MERGED,True,85,26,3,https://github.com/skvl,plugins/memdump: save metadata file similar to plugins/filedelete ,1,[],https://github.com/tklengyel/drakvuf/pull/767,https://github.com/icedevml,13,https://github.com/tklengyel/drakvuf/pull/767#issuecomment-574166421,"Name memdump artifacts according to plugins/filedelete and save additional
information in metadata file. This unifies both plugins.
Refactor printing extra information in debug logs to support more types for
feature use.","@skvl Are you sure that everything is pushed to the branch? This doesn't look like implementation of proposition 1, the memory dump file names are changed (with respect to what is currently on master branch).
Your version:
https://github.com/tklengyel/drakvuf/pull/767/files#diff-47890e1c15a972220533511890a86941R293
Current version on master:

  
    
      drakvuf/src/plugins/memdump/memdump.cpp
    
    
         Line 244
      in
      893f95a
    
  
  
    

        
          
           if (asprintf(&file, ""%llx_%.16s"", (unsigned long long) ctx->addr, chk_str) < 0)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,767,2019-12-26T09:20:01Z,2020-01-14T17:10:27Z,2020-05-13T13:01:56Z,MERGED,True,85,26,3,https://github.com/skvl,plugins/memdump: save metadata file similar to plugins/filedelete ,1,[],https://github.com/tklengyel/drakvuf/pull/767,https://github.com/skvl,14,https://github.com/tklengyel/drakvuf/pull/767#issuecomment-574181192,"Name memdump artifacts according to plugins/filedelete and save additional
information in metadata file. This unifies both plugins.
Refactor printing extra information in debug logs to support more types for
feature use.","@icedevml, please note this is a metafile name:
if (asprintf(&metafile, ""%s/memdump.%06d"", plugin->memdump_dir, ++plugin->dumps_count) < 0)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,767,2019-12-26T09:20:01Z,2020-01-14T17:10:27Z,2020-05-13T13:01:56Z,MERGED,True,85,26,3,https://github.com/skvl,plugins/memdump: save metadata file similar to plugins/filedelete ,1,[],https://github.com/tklengyel/drakvuf/pull/767,https://github.com/icedevml,15,https://github.com/tklengyel/drakvuf/pull/767#issuecomment-574186803,"Name memdump artifacts according to plugins/filedelete and save additional
information in metadata file. This unifies both plugins.
Refactor printing extra information in debug logs to support more types for
feature use.","@skvl ah, you are right. So the only thing that still concerns me - couldn't we use JSON for metadata? This is as simple as doing json.loads() in Python (or almost any other language - either builtin or with well known library) and it's also one of the output formats supported by DRAKVUF. Here we have something very simple - that's perfectly fine, but you need to have a custom parser for that format.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,767,2019-12-26T09:20:01Z,2020-01-14T17:10:27Z,2020-05-13T13:01:56Z,MERGED,True,85,26,3,https://github.com/skvl,plugins/memdump: save metadata file similar to plugins/filedelete ,1,[],https://github.com/tklengyel/drakvuf/pull/767,https://github.com/skvl,16,https://github.com/tklengyel/drakvuf/pull/767#issuecomment-574252638,"Name memdump artifacts according to plugins/filedelete and save additional
information in metadata file. This unifies both plugins.
Refactor printing extra information in debug logs to support more types for
feature use.","@icedevml, the very same format is used in filedelete plugin. See 
  
    
      drakvuf/src/plugins/filedelete/filedelete.cpp
    
    
         Line 244
      in
      02ebf67
    
  
  
    

        
          
           static void save_file_metadata(filedelete* f, 
        
    
  


I don't use to mess up with different formats in different plugins. And also I already use metadata from filedelete.
We could change format in both plugins. But as different PR.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,767,2019-12-26T09:20:01Z,2020-01-14T17:10:27Z,2020-05-13T13:01:56Z,MERGED,True,85,26,3,https://github.com/skvl,plugins/memdump: save metadata file similar to plugins/filedelete ,1,[],https://github.com/tklengyel/drakvuf/pull/767,https://github.com/tklengyel,17,https://github.com/tklengyel/drakvuf/pull/767#issuecomment-574258303,"Name memdump artifacts according to plugins/filedelete and save additional
information in metadata file. This unifies both plugins.
Refactor printing extra information in debug logs to support more types for
feature use.","We could change format in both plugins. But as different PR.

Sounds to me like a sensible approach. Are you planning on doing that PR (ie. is there agreement on which format to use eventually in both plugins)?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,767,2019-12-26T09:20:01Z,2020-01-14T17:10:27Z,2020-05-13T13:01:56Z,MERGED,True,85,26,3,https://github.com/skvl,plugins/memdump: save metadata file similar to plugins/filedelete ,1,[],https://github.com/tklengyel/drakvuf/pull/767,https://github.com/skvl,18,https://github.com/tklengyel/drakvuf/pull/767#issuecomment-574268713,"Name memdump artifacts according to plugins/filedelete and save additional
information in metadata file. This unifies both plugins.
Refactor printing extra information in debug logs to support more types for
feature use.","Are you planning on doing that PR

I didn't plan to do it. I perfectly OK with current solution. Though if you insist I could do it.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,767,2019-12-26T09:20:01Z,2020-01-14T17:10:27Z,2020-05-13T13:01:56Z,MERGED,True,85,26,3,https://github.com/skvl,plugins/memdump: save metadata file similar to plugins/filedelete ,1,[],https://github.com/tklengyel/drakvuf/pull/767,https://github.com/tklengyel,19,https://github.com/tklengyel/drakvuf/pull/767#issuecomment-574269539,"Name memdump artifacts according to plugins/filedelete and save additional
information in metadata file. This unifies both plugins.
Refactor printing extra information in debug logs to support more types for
feature use.","I didn't plan to do it. I perfectly OK with current solution. Though if you insist I could do it.

I wouldn't mandate you do that if you don't need it, was just wondering whether you are OK if the format is switched later to JSON as @icedevml suggested?",True,{'THUMBS_UP': ['https://github.com/icedevml']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,767,2019-12-26T09:20:01Z,2020-01-14T17:10:27Z,2020-05-13T13:01:56Z,MERGED,True,85,26,3,https://github.com/skvl,plugins/memdump: save metadata file similar to plugins/filedelete ,1,[],https://github.com/tklengyel/drakvuf/pull/767,https://github.com/skvl,20,https://github.com/tklengyel/drakvuf/pull/767#issuecomment-574271477,"Name memdump artifacts according to plugins/filedelete and save additional
information in metadata file. This unifies both plugins.
Refactor printing extra information in debug logs to support more types for
feature use.","whether you are OK if the format is switched later to JSON as @icedevml suggested?

Sure! No problems!",True,{'THUMBS_UP': ['https://github.com/icedevml']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,767,2019-12-26T09:20:01Z,2020-01-14T17:10:27Z,2020-05-13T13:01:56Z,MERGED,True,85,26,3,https://github.com/skvl,plugins/memdump: save metadata file similar to plugins/filedelete ,1,[],https://github.com/tklengyel/drakvuf/pull/767,https://github.com/icedevml,21,https://github.com/tklengyel/drakvuf/pull/767#issuecomment-574275860,"Name memdump artifacts according to plugins/filedelete and save additional
information in metadata file. This unifies both plugins.
Refactor printing extra information in debug logs to support more types for
feature use.","@skvl @tklengyel I can take care of switching format in both plugins, soon.
So this PR is 👍",True,"{'THUMBS_UP': ['https://github.com/tklengyel', 'https://github.com/skvl']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,768,2019-12-26T11:31:37Z,2019-12-27T15:47:33Z,2020-05-13T13:01:55Z,MERGED,True,1,1,1,https://github.com/skvl,Fix scanning WOW processes,1,[],https://github.com/tklengyel/drakvuf/pull/768,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/768,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,768,2019-12-26T11:31:37Z,2019-12-27T15:47:33Z,2020-05-13T13:01:55Z,MERGED,True,1,1,1,https://github.com/skvl,Fix scanning WOW processes,1,[],https://github.com/tklengyel/drakvuf/pull/768,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/768#issuecomment-569042606,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,768,2019-12-26T11:31:37Z,2019-12-27T15:47:33Z,2020-05-13T13:01:55Z,MERGED,True,1,1,1,https://github.com/skvl,Fix scanning WOW processes,1,[],https://github.com/tklengyel/drakvuf/pull/768,https://github.com/skvl,3,https://github.com/tklengyel/drakvuf/pull/768#issuecomment-569045731,,@tklengyel I will rebase the branch after you accept previous one.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,768,2019-12-26T11:31:37Z,2019-12-27T15:47:33Z,2020-05-13T13:01:55Z,MERGED,True,1,1,1,https://github.com/skvl,Fix scanning WOW processes,1,[],https://github.com/tklengyel/drakvuf/pull/768,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/768#issuecomment-569270488,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,769,2019-12-26T11:46:59Z,2019-12-27T15:46:58Z,2020-05-13T13:01:50Z,MERGED,True,102,0,2,https://github.com/skvl,plugins/envmon: hook kernelbase!DefineDosDeviceW,1,[],https://github.com/tklengyel/drakvuf/pull/769,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/769,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,769,2019-12-26T11:46:59Z,2019-12-27T15:46:58Z,2020-05-13T13:01:50Z,MERGED,True,102,0,2,https://github.com/skvl,plugins/envmon: hook kernelbase!DefineDosDeviceW,1,[],https://github.com/tklengyel/drakvuf/pull/769,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/769#issuecomment-569044456,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,769,2019-12-26T11:46:59Z,2019-12-27T15:46:58Z,2020-05-13T13:01:50Z,MERGED,True,102,0,2,https://github.com/skvl,plugins/envmon: hook kernelbase!DefineDosDeviceW,1,[],https://github.com/tklengyel/drakvuf/pull/769,https://github.com/skvl,3,https://github.com/tklengyel/drakvuf/pull/769#issuecomment-569045738,,@tklengyel I will rebase the branch after you accept previous one.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,769,2019-12-26T11:46:59Z,2019-12-27T15:46:58Z,2020-05-13T13:01:50Z,MERGED,True,102,0,2,https://github.com/skvl,plugins/envmon: hook kernelbase!DefineDosDeviceW,1,[],https://github.com/tklengyel/drakvuf/pull/769,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/769#issuecomment-569270573,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,770,2019-12-26T13:23:31Z,2019-12-27T13:34:53Z,2020-05-13T13:01:54Z,MERGED,True,99,55,6,https://github.com/skvl,plugins/wmimon: use correct dll to find CoCreateInstance,1,[],https://github.com/tklengyel/drakvuf/pull/770,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/770,"Starting from Windows 8 the CoCreateInstance functions resides in combase.dll.
The WoW is an exception.
Read WMI vtables based on OS arch","Starting from Windows 8 the CoCreateInstance functions resides in combase.dll.
The WoW is an exception.
Read WMI vtables based on OS arch",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,770,2019-12-26T13:23:31Z,2019-12-27T13:34:53Z,2020-05-13T13:01:54Z,MERGED,True,99,55,6,https://github.com/skvl,plugins/wmimon: use correct dll to find CoCreateInstance,1,[],https://github.com/tklengyel/drakvuf/pull/770,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/770#issuecomment-569057960,"Starting from Windows 8 the CoCreateInstance functions resides in combase.dll.
The WoW is an exception.
Read WMI vtables based on OS arch",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,770,2019-12-26T13:23:31Z,2019-12-27T13:34:53Z,2020-05-13T13:01:54Z,MERGED,True,99,55,6,https://github.com/skvl,plugins/wmimon: use correct dll to find CoCreateInstance,1,[],https://github.com/tklengyel/drakvuf/pull/770,https://github.com/skvl,3,https://github.com/tklengyel/drakvuf/pull/770#issuecomment-569057978,"Starting from Windows 8 the CoCreateInstance functions resides in combase.dll.
The WoW is an exception.
Read WMI vtables based on OS arch",@tklengyel I will rebase the branch after you accept previous one.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,770,2019-12-26T13:23:31Z,2019-12-27T13:34:53Z,2020-05-13T13:01:54Z,MERGED,True,99,55,6,https://github.com/skvl,plugins/wmimon: use correct dll to find CoCreateInstance,1,[],https://github.com/tklengyel/drakvuf/pull/770,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/770#issuecomment-569066135,"Starting from Windows 8 the CoCreateInstance functions resides in combase.dll.
The WoW is an exception.
Read WMI vtables based on OS arch","@skvl I've tuned the Jenkins config a bit, let's see if this passes as-is",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,770,2019-12-26T13:23:31Z,2019-12-27T13:34:53Z,2020-05-13T13:01:54Z,MERGED,True,99,55,6,https://github.com/skvl,plugins/wmimon: use correct dll to find CoCreateInstance,1,[],https://github.com/tklengyel/drakvuf/pull/770,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/770#issuecomment-569066187,"Starting from Windows 8 the CoCreateInstance functions resides in combase.dll.
The WoW is an exception.
Read WMI vtables based on OS arch",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,771,2019-12-27T10:14:39Z,2019-12-27T15:46:29Z,2020-05-13T13:01:58Z,MERGED,True,493,1,4,https://github.com/skvl,plugins/procmon: add hook for NtAdjustPrivilegesToken,1,[],https://github.com/tklengyel/drakvuf/pull/771,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/771,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,771,2019-12-27T10:14:39Z,2019-12-27T15:46:29Z,2020-05-13T13:01:58Z,MERGED,True,493,1,4,https://github.com/skvl,plugins/procmon: add hook for NtAdjustPrivilegesToken,1,[],https://github.com/tklengyel/drakvuf/pull/771,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/771#issuecomment-569238779,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,771,2019-12-27T10:14:39Z,2019-12-27T15:46:29Z,2020-05-13T13:01:58Z,MERGED,True,493,1,4,https://github.com/skvl,plugins/procmon: add hook for NtAdjustPrivilegesToken,1,[],https://github.com/tklengyel/drakvuf/pull/771,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/771#issuecomment-569270800,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,772,2019-12-29T02:33:03Z,2020-01-01T19:26:44Z,2020-01-01T19:26:47Z,MERGED,True,1,1,1,https://github.com/tklengyel,Update LibVMI,1,[],https://github.com/tklengyel/drakvuf/pull/772,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/772,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,772,2019-12-29T02:33:03Z,2020-01-01T19:26:44Z,2020-01-01T19:26:47Z,MERGED,True,1,1,1,https://github.com/tklengyel,Update LibVMI,1,[],https://github.com/tklengyel/drakvuf/pull/772,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/772#issuecomment-569469478,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,773,2020-01-08T22:03:01Z,2020-01-08T22:17:32Z,2020-01-08T22:17:35Z,MERGED,True,1,1,1,https://github.com/tklengyel,Fix warning produced by range-loop-analysis,1,[],https://github.com/tklengyel/drakvuf/pull/773,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/773,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,774,2020-01-08T22:47:42Z,2020-01-08T22:54:53Z,2020-01-08T22:54:56Z,MERGED,True,142,142,142,https://github.com/tklengyel,Update year to 2020 in license,1,[],https://github.com/tklengyel/drakvuf/pull/774,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/774,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,776,2020-01-12T14:25:57Z,2020-01-12T15:20:13Z,2020-01-12T15:20:16Z,MERGED,True,87,82,2,https://github.com/tklengyel,Specify noexcept for C libraries,1,[],https://github.com/tklengyel/drakvuf/pull/776,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/776,Optimizes C++ code as C functions never throw exceptions,Optimizes C++ code as C functions never throw exceptions,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,777,2020-01-14T14:15:45Z,2020-01-14T15:08:03Z,2020-01-14T15:08:06Z,MERGED,True,3,14,1,https://github.com/tklengyel,Use optimized Xen paths,1,[],https://github.com/tklengyel/drakvuf/pull/777,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/777,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,778,2020-01-14T16:57:21Z,2020-01-14T19:34:13Z,2020-05-13T13:01:58Z,MERGED,True,211,1,3,https://github.com/skvl,Add tool to catch processes execution statistics in Windows,1,[],https://github.com/tklengyel/drakvuf/pull/778,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/778,"This is used to determine most suitable PID and TID to inject into.
This is instead of libvmi/libvmi#869","This is used to determine most suitable PID and TID to inject into.
This is instead of libvmi/libvmi#869",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,778,2020-01-14T16:57:21Z,2020-01-14T19:34:13Z,2020-05-13T13:01:58Z,MERGED,True,211,1,3,https://github.com/skvl,Add tool to catch processes execution statistics in Windows,1,[],https://github.com/tklengyel/drakvuf/pull/778,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/778#issuecomment-574272093,"This is used to determine most suitable PID and TID to inject into.
This is instead of libvmi/libvmi#869",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,778,2020-01-14T16:57:21Z,2020-01-14T19:34:13Z,2020-05-13T13:01:58Z,MERGED,True,211,1,3,https://github.com/skvl,Add tool to catch processes execution statistics in Windows,1,[],https://github.com/tklengyel/drakvuf/pull/778,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/778#issuecomment-574274190,"This is used to determine most suitable PID and TID to inject into.
This is instead of libvmi/libvmi#869",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,778,2020-01-14T16:57:21Z,2020-01-14T19:34:13Z,2020-05-13T13:01:58Z,MERGED,True,211,1,3,https://github.com/skvl,Add tool to catch processes execution statistics in Windows,1,[],https://github.com/tklengyel/drakvuf/pull/778,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/778#issuecomment-574280512,"This is used to determine most suitable PID and TID to inject into.
This is instead of libvmi/libvmi#869","Thanks for contribution this new tool here. The code seems a lot cleaner without having to duplicate all that stuff DRAKVUF already does for you ;) I'm happy to merge as soon as the Travis error is resolved, it's a minor issue due to the C++ compiler being more anal about struct initialization order then the C compiler. It's better to not initialize struct fields using ={.field=value} in C++ but directly as structname.field=value;",True,{'THUMBS_UP': ['https://github.com/skvl']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,780,2020-01-14T17:27:16Z,2020-03-03T13:14:29Z,2020-03-03T14:14:58Z,MERGED,True,293,23,5,https://github.com/icedevml,memdump/filedelete: change metadata format to JSON,6,[],https://github.com/tklengyel/drakvuf/pull/780,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/780,"Store JSON metadata together with files dumped by filedelete plugin and memory dumps created by memdump. Add some util to make JSON-C usage easier.
resolve #779","Store JSON metadata together with files dumped by filedelete plugin and memory dumps created by memdump. Add some util to make JSON-C usage easier.
resolve #779",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,780,2020-01-14T17:27:16Z,2020-03-03T13:14:29Z,2020-03-03T14:14:58Z,MERGED,True,293,23,5,https://github.com/icedevml,memdump/filedelete: change metadata format to JSON,6,[],https://github.com/tklengyel/drakvuf/pull/780,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/780#issuecomment-574284985,"Store JSON metadata together with files dumped by filedelete plugin and memory dumps created by memdump. Add some util to make JSON-C usage easier.
resolve #779",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,780,2020-01-14T17:27:16Z,2020-03-03T13:14:29Z,2020-03-03T14:14:58Z,MERGED,True,293,23,5,https://github.com/icedevml,memdump/filedelete: change metadata format to JSON,6,[],https://github.com/tklengyel/drakvuf/pull/780,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/780#issuecomment-593153172,"Store JSON metadata together with files dumped by filedelete plugin and memory dumps created by memdump. Add some util to make JSON-C usage easier.
resolve #779",/cc @skvl,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,780,2020-01-14T17:27:16Z,2020-03-03T13:14:29Z,2020-03-03T14:14:58Z,MERGED,True,293,23,5,https://github.com/icedevml,memdump/filedelete: change metadata format to JSON,6,[],https://github.com/tklengyel/drakvuf/pull/780,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/780#issuecomment-593153706,"Store JSON metadata together with files dumped by filedelete plugin and memory dumps created by memdump. Add some util to make JSON-C usage easier.
resolve #779","I've additionally implemented json_object_new_string_fmt convenience function which allows to construct JSON string using C formats:
https://github.com/tklengyel/drakvuf/pull/780/files#diff-6dcb8ea4addaa9c5893335b2a695c68dR111",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,780,2020-01-14T17:27:16Z,2020-03-03T13:14:29Z,2020-03-03T14:14:58Z,MERGED,True,293,23,5,https://github.com/icedevml,memdump/filedelete: change metadata format to JSON,6,[],https://github.com/tklengyel/drakvuf/pull/780,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/780#issuecomment-593174413,"Store JSON metadata together with files dumped by filedelete plugin and memory dumps created by memdump. Add some util to make JSON-C usage easier.
resolve #779",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,780,2020-01-14T17:27:16Z,2020-03-03T13:14:29Z,2020-03-03T14:14:58Z,MERGED,True,293,23,5,https://github.com/icedevml,memdump/filedelete: change metadata format to JSON,6,[],https://github.com/tklengyel/drakvuf/pull/780,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/780#issuecomment-593723053,"Store JSON metadata together with files dumped by filedelete plugin and memory dumps created by memdump. Add some util to make JSON-C usage easier.
resolve #779","The PR looks good to me, let me know when you are finished.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,780,2020-01-14T17:27:16Z,2020-03-03T13:14:29Z,2020-03-03T14:14:58Z,MERGED,True,293,23,5,https://github.com/icedevml,memdump/filedelete: change metadata format to JSON,6,[],https://github.com/tklengyel/drakvuf/pull/780,https://github.com/icedevml,7,https://github.com/tklengyel/drakvuf/pull/780#issuecomment-593893830,"Store JSON metadata together with files dumped by filedelete plugin and memory dumps created by memdump. Add some util to make JSON-C usage easier.
resolve #779","@tklengyel I've double checked right now, I think it's fine and can be merged.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,781,2020-01-15T19:14:41Z,2020-01-15T21:33:04Z,2020-01-15T21:33:07Z,MERGED,True,21,18,3,https://github.com/tklengyel,Filetracer: keep track of dynamically allocated traps,2,[],https://github.com/tklengyel/drakvuf/pull/781,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/781,Valgrind caught a memory leak of trap if system exists before the callback has been issued for the dynamically allocated trap.,Valgrind caught a memory leak of trap if system exists before the callback has been issued for the dynamically allocated trap.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,782,2020-01-18T14:23:29Z,2020-01-18T16:14:37Z,2020-01-18T16:14:40Z,MERGED,True,2,2,1,https://github.com/tklengyel,Linux's 4th arg is in rcx,1,[],https://github.com/tklengyel/drakvuf/pull/782,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/782,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,783,2020-01-22T19:12:03Z,2020-01-22T19:21:16Z,2020-01-22T19:21:16Z,MERGED,True,1,1,1,https://github.com/icedevml,memdump: fix docs about --dll-hooks-list,1,[],https://github.com/tklengyel/drakvuf/pull/783,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/783,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,784,2020-01-23T14:42:54Z,2020-01-27T18:23:13Z,2020-03-13T12:03:07Z,MERGED,True,415,56,10,https://github.com/sasza8,Key extraction for CryptGenKey,2,[],https://github.com/tklengyel/drakvuf/pull/784,https://github.com/sasza8,1,https://github.com/tklengyel/drakvuf/pull/784,Custom hook for CryptGenKey from cryptoapi allowing to extract generated key bytes,Custom hook for CryptGenKey from cryptoapi allowing to extract generated key bytes,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,784,2020-01-23T14:42:54Z,2020-01-27T18:23:13Z,2020-03-13T12:03:07Z,MERGED,True,415,56,10,https://github.com/sasza8,Key extraction for CryptGenKey,2,[],https://github.com/tklengyel/drakvuf/pull/784,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/784#issuecomment-577710978,Custom hook for CryptGenKey from cryptoapi allowing to extract generated key bytes,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,784,2020-01-23T14:42:54Z,2020-01-27T18:23:13Z,2020-03-13T12:03:07Z,MERGED,True,415,56,10,https://github.com/sasza8,Key extraction for CryptGenKey,2,[],https://github.com/tklengyel/drakvuf/pull/784,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/784#issuecomment-577731815,Custom hook for CryptGenKey from cryptoapi allowing to extract generated key bytes,So I'm wondering whether this should be a separate plugin from memdump. The functionality this provides certainly seems distinct enough to do that. Question is how much it depends on the plumbing of memdump and whether that could be abstracted out to either libdrakvuf or a common plugin interface plugins could opt into.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,784,2020-01-23T14:42:54Z,2020-01-27T18:23:13Z,2020-03-13T12:03:07Z,MERGED,True,415,56,10,https://github.com/sasza8,Key extraction for CryptGenKey,2,[],https://github.com/tklengyel/drakvuf/pull/784,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/784#issuecomment-577737240,Custom hook for CryptGenKey from cryptoapi allowing to extract generated key bytes,"@tklengyel We are aware that this problem araises with every non-memdumping-related PR to memdump. I think it is around the time to split memdump into memdump and usermode(?), but then we need to move a lot of stuff into libdrakvuf and perhaps this is going to be a large change.
Maybe let's merge this, but we will open a ticket for splitting memdump and I will take care of it within few days?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,784,2020-01-23T14:42:54Z,2020-01-27T18:23:13Z,2020-03-13T12:03:07Z,MERGED,True,415,56,10,https://github.com/sasza8,Key extraction for CryptGenKey,2,[],https://github.com/tklengyel/drakvuf/pull/784,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/784#issuecomment-577744397,Custom hook for CryptGenKey from cryptoapi allowing to extract generated key bytes,"but then we need to move a lot of stuff into libdrakvuf and perhaps this is going to be a large change

As long as the code isn't using too much C++ specific stuff that move should be quite straight forward. And don't worry about bloating libdrakvuf, it's purpose is to house common functionality like this.

Maybe let's merge this, but we will open a ticket for splitting memdump and I will take care of it within few days?

SGTM",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,784,2020-01-23T14:42:54Z,2020-01-27T18:23:13Z,2020-03-13T12:03:07Z,MERGED,True,415,56,10,https://github.com/sasza8,Key extraction for CryptGenKey,2,[],https://github.com/tklengyel/drakvuf/pull/784,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/784#issuecomment-577744469,Custom hook for CryptGenKey from cryptoapi allowing to extract generated key bytes,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,784,2020-01-23T14:42:54Z,2020-01-27T18:23:13Z,2020-03-13T12:03:07Z,MERGED,True,415,56,10,https://github.com/sasza8,Key extraction for CryptGenKey,2,[],https://github.com/tklengyel/drakvuf/pull/784,https://github.com/icedevml,7,https://github.com/tklengyel/drakvuf/pull/784#issuecomment-577745656,Custom hook for CryptGenKey from cryptoapi allowing to extract generated key bytes,Related #787,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,784,2020-01-23T14:42:54Z,2020-01-27T18:23:13Z,2020-03-13T12:03:07Z,MERGED,True,415,56,10,https://github.com/sasza8,Key extraction for CryptGenKey,2,[],https://github.com/tklengyel/drakvuf/pull/784,https://github.com/sasza8,8,https://github.com/tklengyel/drakvuf/pull/784#issuecomment-578842371,Custom hook for CryptGenKey from cryptoapi allowing to extract generated key bytes,"@tklengyel CI failed, could you paste logs here?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,784,2020-01-23T14:42:54Z,2020-01-27T18:23:13Z,2020-03-13T12:03:07Z,MERGED,True,415,56,10,https://github.com/sasza8,Key extraction for CryptGenKey,2,[],https://github.com/tklengyel/drakvuf/pull/784,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/784#issuecomment-578845347,Custom hook for CryptGenKey from cryptoapi allowing to extract generated key bytes,It's unrelated to this PR.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,784,2020-01-23T14:42:54Z,2020-01-27T18:23:13Z,2020-03-13T12:03:07Z,MERGED,True,415,56,10,https://github.com/sasza8,Key extraction for CryptGenKey,2,[],https://github.com/tklengyel/drakvuf/pull/784,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/784#issuecomment-578845386,Custom hook for CryptGenKey from cryptoapi allowing to extract generated key bytes,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,784,2020-01-23T14:42:54Z,2020-01-27T18:23:13Z,2020-03-13T12:03:07Z,MERGED,True,415,56,10,https://github.com/sasza8,Key extraction for CryptGenKey,2,[],https://github.com/tklengyel/drakvuf/pull/784,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/784#issuecomment-578852183,Custom hook for CryptGenKey from cryptoapi allowing to extract generated key bytes,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,788,2020-01-23T16:16:07Z,2020-01-23T17:35:08Z,2020-01-23T17:35:11Z,MERGED,True,2861,2970,5,https://github.com/tklengyel,Move ntstatus parsing logic to libdrakvuf,1,[],https://github.com/tklengyel/drakvuf/pull/788,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/788,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,790,2020-01-23T16:43:28Z,2020-01-23T17:34:16Z,2020-01-23T17:34:20Z,MERGED,True,1,1,1,https://github.com/tklengyel,Update LibVMI,1,[],https://github.com/tklengyel/drakvuf/pull/790,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/790,Fixes #789,Fixes #789,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,793,2020-01-24T04:32:20Z,2020-01-24T19:25:10Z,2020-01-24T19:25:13Z,MERGED,True,4,8,1,https://github.com/tklengyel,SSDTmon: The entries in the SSDT are 32-bit offsets from the SSDT base,1,[],https://github.com/tklengyel/drakvuf/pull/793,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/793,SSDTmon assumed 64-bit offsets for x64 Windows.,SSDTmon assumed 64-bit offsets for x64 Windows.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,793,2020-01-24T04:32:20Z,2020-01-24T19:25:10Z,2020-01-24T19:25:13Z,MERGED,True,4,8,1,https://github.com/tklengyel,SSDTmon: The entries in the SSDT are 32-bit offsets from the SSDT base,1,[],https://github.com/tklengyel/drakvuf/pull/793,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/793#issuecomment-578245544,SSDTmon assumed 64-bit offsets for x64 Windows.,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,793,2020-01-24T04:32:20Z,2020-01-24T19:25:10Z,2020-01-24T19:25:13Z,MERGED,True,4,8,1,https://github.com/tklengyel,SSDTmon: The entries in the SSDT are 32-bit offsets from the SSDT base,1,[],https://github.com/tklengyel/drakvuf/pull/793,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/793#issuecomment-578258260,SSDTmon assumed 64-bit offsets for x64 Windows.,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,794,2020-01-24T18:49:05Z,2020-01-24T19:02:18Z,2020-01-24T19:02:21Z,MERGED,True,1,1,1,https://github.com/tklengyel,Fix filetracer order of frees,1,[],https://github.com/tklengyel/drakvuf/pull/794,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/794,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,795,2020-01-27T17:04:43Z,2020-01-28T03:09:25Z,2020-01-28T03:09:28Z,MERGED,True,7,2,1,https://github.com/tklengyel,filetracer: delete wrapper on trap,1,[],https://github.com/tklengyel/drakvuf/pull/795,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/795,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,795,2020-01-27T17:04:43Z,2020-01-28T03:09:25Z,2020-01-28T03:09:28Z,MERGED,True,7,2,1,https://github.com/tklengyel,filetracer: delete wrapper on trap,1,[],https://github.com/tklengyel/drakvuf/pull/795,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/795#issuecomment-578884302,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,795,2020-01-27T17:04:43Z,2020-01-28T03:09:25Z,2020-01-28T03:09:28Z,MERGED,True,7,2,1,https://github.com/tklengyel,filetracer: delete wrapper on trap,1,[],https://github.com/tklengyel/drakvuf/pull/795,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/795#issuecomment-579002239,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,795,2020-01-27T17:04:43Z,2020-01-28T03:09:25Z,2020-01-28T03:09:28Z,MERGED,True,7,2,1,https://github.com/tklengyel,filetracer: delete wrapper on trap,1,[],https://github.com/tklengyel/drakvuf/pull/795,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/795#issuecomment-579038392,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,796,2020-01-30T02:21:23Z,2020-01-30T02:42:10Z,2020-01-30T02:42:13Z,MERGED,True,204,203,2,https://github.com/tklengyel,filetracer: move static const arrays to private.h,1,[],https://github.com/tklengyel/drakvuf/pull/796,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/796,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,797,2020-01-30T04:18:00Z,2020-01-30T04:57:01Z,2020-01-30T04:57:04Z,MERGED,True,188,0,1,https://github.com/tklengyel,Add demangle.py to post-process Volatility ISTs,1,[],https://github.com/tklengyel/drakvuf/pull/797,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/797,Interim solution while volatilityfoundation/volatility3#157 is being resolved,Interim solution while volatilityfoundation/volatility3#157 is being resolved,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,798,2020-02-01T16:46:22Z,2020-03-03T01:44:12Z,2020-03-13T12:03:06Z,MERGED,True,1378,741,9,https://github.com/icedevml,memdump: refactor usermode hooking into core DRAKVUF,16,[],https://github.com/tklengyel/drakvuf/pull/798,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/798,"Move usermode hooking framework from memdump plugin to core DRAKVUF.
resolve #787","Move usermode hooking framework from memdump plugin to core DRAKVUF.
resolve #787",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,798,2020-02-01T16:46:22Z,2020-03-03T01:44:12Z,2020-03-13T12:03:06Z,MERGED,True,1378,741,9,https://github.com/icedevml,memdump: refactor usermode hooking into core DRAKVUF,16,[],https://github.com/tklengyel/drakvuf/pull/798,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/798#issuecomment-581047339,"Move usermode hooking framework from memdump plugin to core DRAKVUF.
resolve #787",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,798,2020-02-01T16:46:22Z,2020-03-03T01:44:12Z,2020-03-13T12:03:06Z,MERGED,True,1378,741,9,https://github.com/icedevml,memdump: refactor usermode hooking into core DRAKVUF,16,[],https://github.com/tklengyel/drakvuf/pull/798,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/798#issuecomment-581048429,"Move usermode hooking framework from memdump plugin to core DRAKVUF.
resolve #787","@tklengyel Few highlights:
One global instance of ""usermode hooking framework"" in drakvuf_t struct:
https://github.com/tklengyel/drakvuf/pull/798/files#diff-fc9a35fbf5c5a8715ad343f640d17b46R236
Some random hack to pass it through C code (this probably needs to be changed):
https://github.com/tklengyel/drakvuf/pull/798/files#diff-6c7089902b14b5e69e26f860662af448R568
This is not a plugin anymore, but we still derive from pluginex because it offers a lot of useful functionality. I wonder if it could be considered as clean approach here. Changing this situation would require a heavy refactor of pluginex or code duplication inside userhook:
https://github.com/tklengyel/drakvuf/pull/798/files#diff-4239cc7683c85e3925daf121f71bd9a5R199
This is how memdump subscribes to usermode hooking:
https://github.com/tklengyel/drakvuf/pull/798/files#diff-da50bc7c3b93e99cfbf61ebae9d8fc87R402
The memdump plugin provides a callback, which will be invoked every time when we discover a new DLL being loaded. A plugin can then add some targets to the DLL, i.e. ask the framework to hook some functions. If the DLL is not interesting, it may simply ignore it.

  
    
      drakvuf/src/plugins/memdump/userhook.cpp
    
    
         Line 318
      in
      9464b40
    
  
  
    

        
          
           void on_dll_discovered(drakvuf_t drakvuf, void* plugin_, void* mmvad_, void* dll_meta_) 
        
    
  


Finally, the plugin gets callback for each invocation of the interesting DLL methods, just like in the normal DRAKVUF:

  
    
      drakvuf/src/plugins/memdump/userhook.cpp
    
    
         Line 230
      in
      9464b40
    
  
  
    

        
          
           static event_response_t usermode_hook_cb(drakvuf_t drakvuf, drakvuf_trap_info* info) 
        
    
  


The callback may be specified when the DLL is being discovered and may be different for each function/DLL.
This is still very much a ""draft"" quality, so things like indentation/formatting may be messed at few points. I just want to consult the design at this point. From what I've tested, this is working properly in this form (which was my primary concern :P )",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,798,2020-02-01T16:46:22Z,2020-03-03T01:44:12Z,2020-03-13T12:03:06Z,MERGED,True,1378,741,9,https://github.com/icedevml,memdump: refactor usermode hooking into core DRAKVUF,16,[],https://github.com/tklengyel/drakvuf/pull/798,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/798#issuecomment-581048856,"Move usermode hooking framework from memdump plugin to core DRAKVUF.
resolve #787",I'll take a look in the next couple days and give you feedback!,True,{'THUMBS_UP': ['https://github.com/icedevml']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,798,2020-02-01T16:46:22Z,2020-03-03T01:44:12Z,2020-03-13T12:03:06Z,MERGED,True,1378,741,9,https://github.com/icedevml,memdump: refactor usermode hooking into core DRAKVUF,16,[],https://github.com/tklengyel/drakvuf/pull/798,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/798#issuecomment-581709538,"Move usermode hooking framework from memdump plugin to core DRAKVUF.
resolve #787","I'm still reading through but a couple questions I wasn't sure about.
Is this new library supposed to work with pure C applications as well? I see api.h which looks like that's the goal but then it also takes a plugin instance as an input, which are all C++.. So I'm not sure I follow what's the logic there.
I see the main libdrakvuf instance now would have a pointer for the usermood class instance, but I think it would be better if each plugin would individually create an instance for it that they own. There might be some duplication of drakvuf traps because of that but that memory/performance overhead I think is negligible and would keep things still nicely compartmentalized.
Finally, it would be great if we had some run-time tests we could integrate into the Jenkins CI loop so that we can be sure this didn't break going forward. It's a really complex codebase that I'm sure can very easily break. You can see the current CI test script here: https://github.com/tklengyel/drakvuf-ci/blob/master/run.sh, would be very interested in your thoughts on how to test it.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,798,2020-02-01T16:46:22Z,2020-03-03T01:44:12Z,2020-03-13T12:03:06Z,MERGED,True,1378,741,9,https://github.com/icedevml,memdump: refactor usermode hooking into core DRAKVUF,16,[],https://github.com/tklengyel/drakvuf/pull/798,https://github.com/icedevml,6,https://github.com/tklengyel/drakvuf/pull/798#issuecomment-581906472,"Move usermode hooking framework from memdump plugin to core DRAKVUF.
resolve #787","Is this new library supposed to work with pure C applications as well? I see api.h which looks like that's the goal but then it also takes a plugin instance as an input, which are all C++.. So I'm not sure I follow what's the logic there.

The libdrakvuf is in C, so the API must be C compatible for that reason. I agree this is pretty strange around passing the C++ instance pointer to plugins.
I think I will just propose a neat C-API and just don't expose the instance outside.

I see the main libdrakvuf instance now would have a pointer for the usermood class instance, but I think it would be better if each plugin would individually create an instance for it that they own. There might be some duplication of drakvuf traps because of that but that memory/performance overhead I think is negligible and would keep things still nicely compartmentalized.

Each plugin has its independent DLL traps, but the instrumentation for observing new DLLs being loaded and for raising page faults when it's required is common and I would prefer to have it as a ""singleton"". The logic for hijacking threads and causing page faults is pretty heavy and I think it's pretty risky to run the separate instance of such stuff for each plugin.

Finally, it would be great if we had some run-time tests we could integrate into the Jenkins CI loop so that we can be sure this didn't break going forward. It's a really complex codebase that I'm sure can very easily break.

Sure, I will think of some tests. We do have some very simple stuff internally (rather ran manually, but it may be converted into something feasible for CI).",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,798,2020-02-01T16:46:22Z,2020-03-03T01:44:12Z,2020-03-13T12:03:06Z,MERGED,True,1378,741,9,https://github.com/icedevml,memdump: refactor usermode hooking into core DRAKVUF,16,[],https://github.com/tklengyel/drakvuf/pull/798,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/798#issuecomment-581925438,"Move usermode hooking framework from memdump plugin to core DRAKVUF.
resolve #787","I agree this is pretty strange around passing the C++ instance pointer to plugins.

I mean we do that with drakvuf traps and plugins all the time so that part is not that strange ;)

I think I will just propose a neat C-API and just don't expose the instance outside.

+1",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,798,2020-02-01T16:46:22Z,2020-03-03T01:44:12Z,2020-03-13T12:03:06Z,MERGED,True,1378,741,9,https://github.com/icedevml,memdump: refactor usermode hooking into core DRAKVUF,16,[],https://github.com/tklengyel/drakvuf/pull/798,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/798#issuecomment-582166273,"Move usermode hooking framework from memdump plugin to core DRAKVUF.
resolve #787","Each plugin has its independent DLL traps, but the instrumentation for observing new DLLs being loaded and for raising page faults when it's required is common and I would prefer to have it as a ""singleton"". The logic for hijacking threads and causing page faults is pretty heavy and I think it's pretty risky to run the separate instance of such stuff for each plugin.

Fair enough, in that case I would just ask that the instance should only be allocated if there is a plugin subscribing to it. If no plugin makes use of it, it shouldn't be.",True,{'THUMBS_UP': ['https://github.com/icedevml']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,798,2020-02-01T16:46:22Z,2020-03-03T01:44:12Z,2020-03-13T12:03:06Z,MERGED,True,1378,741,9,https://github.com/icedevml,memdump: refactor usermode hooking into core DRAKVUF,16,[],https://github.com/tklengyel/drakvuf/pull/798,https://github.com/icedevml,9,https://github.com/tklengyel/drakvuf/pull/798#issuecomment-583760314,"Move usermode hooking framework from memdump plugin to core DRAKVUF.
resolve #787","I mean we do that with drakvuf traps and plugins all the time so that part is not that strange ;)

Although for now I've eliminated any parts that belonged to C code. Plugin directly calls libusermode which calls libdrakvuf on behalf of plugin.

I think I will just propose a neat C-API and just don't expose the instance outside.

Turns out to be not that simple :P There are too many structs involving STL stuff already in the usermode framework and a huge refactor would be required to enable a C API. I reconsider this as ""nice to have but not critical"" thing. For now I propose to leave this as C++-only-accessible library.

Fair enough, in that case I would just ask that the instance should only be allocated if there is a plugin subscribing to it. If no plugin makes use of it, it shouldn't be.

New commits implement it exactly this way. Also, instatiation of libusermode may fail for a few various reasons, but it is possible for a plugin to recover from that, e.g. by cutting functionality.

Finally, it would be great if we had some run-time tests we could integrate into the Jenkins CI loop so that we can be sure this didn't break going forward. It's a really complex codebase that I'm sure can very easily break.

The most basic test would be to run some toy_program.exe that would call various WinAPI functions and then assert if all callbacks were fired properly. I will get back to this in a few days.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,798,2020-02-01T16:46:22Z,2020-03-03T01:44:12Z,2020-03-13T12:03:06Z,MERGED,True,1378,741,9,https://github.com/icedevml,memdump: refactor usermode hooking into core DRAKVUF,16,[],https://github.com/tklengyel/drakvuf/pull/798,https://github.com/icedevml,10,https://github.com/tklengyel/drakvuf/pull/798#issuecomment-584711617,"Move usermode hooking framework from memdump plugin to core DRAKVUF.
resolve #787","Ok, the framework itself seems be more-or-less complete. What left:

@sasza8 will soon provide some insights about testing
I will split memdump into two or three plugins (as in #787)",True,{'HOORAY': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,798,2020-02-01T16:46:22Z,2020-03-03T01:44:12Z,2020-03-13T12:03:06Z,MERGED,True,1378,741,9,https://github.com/icedevml,memdump: refactor usermode hooking into core DRAKVUF,16,[],https://github.com/tklengyel/drakvuf/pull/798,https://github.com/sasza8,11,https://github.com/tklengyel/drakvuf/pull/798#issuecomment-590982483,"Move usermode hooking framework from memdump plugin to core DRAKVUF.
resolve #787","Sorry to keep you waiting
I'm not sure how to integrate it with your CI, but we prepared some test case for userhook either way and hope it will be useful.
How to run:

run the following code using injector (EXE in attachment):

#include <Windows.h>

int main()
{
    CharLowerA((LPSTR)0x41);
    SetRect(0x0, 0x1234, 0xdeadb33f, 0xc0dec0de, 0x31337);
}

put the following content in dll-hooks file:

user32.dll,CharLowerA,1
user32.dll,SetRect,5


run drakvuf as follows:

./drakvuf  -d win10 -r win10.json -a memdump --dll-hooks dll-hooks -o json


Compare with the following output:

{""Plugin"": ""memdump-userhook"", ""TimeStamp"":""1582651541.111457"", ""ProcessName"": ""\Device\HarddiskVolume2\Users\janusz\Desktop\aaa.exe"", ""UserName"": ""SessionID"", ""UserId"": 1, ""PID"": 4364, ""PPID"": 3620, ""Method"": ""CharLowerA"", ""CalledFrom"": 0xefefa2, ""ReturnValue"": 0x61, ""Arguments"": [0x41], ""Extra"": {}}
{""Plugin"": ""memdump-userhook"", ""TimeStamp"":""1582651541.115004"", ""ProcessName"": ""\Device\HarddiskVolume2\Users\janusz\Desktop\aaa.exe"", ""UserName"": ""SessionID"", ""UserId"": 1, ""PID"": 4364, ""PPID"": 3620, ""Method"": ""SetRect"", ""CalledFrom"": 0xefefc7, ""ReturnValue"": 0x0, ""Arguments"": [0x0,0x1234,0xDEADB33F,0xC0DEC0DE,0x31337], ""Extra"": {}}
cryptoapi tests are a little bit more tricky - we need to generate a key in VM, transfer it somehow to the host and compare with the results from drakvuf - how can it be done? Is there any shared volume / network adapter we can use to communicate with the VM?
userhook_test.zip",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,798,2020-02-01T16:46:22Z,2020-03-03T01:44:12Z,2020-03-13T12:03:06Z,MERGED,True,1378,741,9,https://github.com/icedevml,memdump: refactor usermode hooking into core DRAKVUF,16,[],https://github.com/tklengyel/drakvuf/pull/798,https://github.com/tklengyel,12,https://github.com/tklengyel/drakvuf/pull/798#issuecomment-590994686,"Move usermode hooking framework from memdump plugin to core DRAKVUF.
resolve #787","Is there any shared volume / network adapter we can use to communicate with the VM?

No, the VMs are pretty much headless, I just restore them from a snapshot for the CI test to run and destroy them right after. I can of course load any process into the VM and get any info required out of it before I take the snapshot.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,798,2020-02-01T16:46:22Z,2020-03-03T01:44:12Z,2020-03-13T12:03:06Z,MERGED,True,1378,741,9,https://github.com/icedevml,memdump: refactor usermode hooking into core DRAKVUF,16,[],https://github.com/tklengyel/drakvuf/pull/798,https://github.com/icedevml,13,https://github.com/tklengyel/drakvuf/pull/798#issuecomment-590996171,"Move usermode hooking framework from memdump plugin to core DRAKVUF.
resolve #787","Ok, to the best of our knowledge this changes are working OK and some test cases for end-to-end testing were proposed.
I think that further refactor (splitting memdump into more parts or proposing tests for Crypto API) could be an issue for another pull request, as this is one already pretty large.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,798,2020-02-01T16:46:22Z,2020-03-03T01:44:12Z,2020-03-13T12:03:06Z,MERGED,True,1378,741,9,https://github.com/icedevml,memdump: refactor usermode hooking into core DRAKVUF,16,[],https://github.com/tklengyel/drakvuf/pull/798,https://github.com/tklengyel,14,https://github.com/tklengyel/drakvuf/pull/798#issuecomment-590997662,"Move usermode hooking framework from memdump plugin to core DRAKVUF.
resolve #787",I'll review it and see about integrating it into the CI over the weekend.,True,{'THUMBS_UP': ['https://github.com/icedevml']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,798,2020-02-01T16:46:22Z,2020-03-03T01:44:12Z,2020-03-13T12:03:06Z,MERGED,True,1378,741,9,https://github.com/icedevml,memdump: refactor usermode hooking into core DRAKVUF,16,[],https://github.com/tklengyel/drakvuf/pull/798,https://github.com/tklengyel,15,https://github.com/tklengyel/drakvuf/pull/798#issuecomment-593048058,"Move usermode hooking framework from memdump plugin to core DRAKVUF.
resolve #787",FYI Windows 10 blocks the execution of the attached exe for it being malicious by default. VirusTotal report: https://www.virustotal.com/gui/file/66835a9f055af63f367f58cddead82b7978b7341963f4a24930d13ef8926eba0/detection. Is this intended?,True,{'EYES': ['https://github.com/icedevml']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,798,2020-02-01T16:46:22Z,2020-03-03T01:44:12Z,2020-03-13T12:03:06Z,MERGED,True,1378,741,9,https://github.com/icedevml,memdump: refactor usermode hooking into core DRAKVUF,16,[],https://github.com/tklengyel/drakvuf/pull/798,https://github.com/tklengyel,16,https://github.com/tklengyel/drakvuf/pull/798#issuecomment-593049113,"Move usermode hooking framework from memdump plugin to core DRAKVUF.
resolve #787","If I compile the code with VS2019 it produces an exe that's ~40Kbyte in Debug mode, ~10Kbyte in Release mode. The one that's attached is over 400Kbyte. So yea, @sasza8, double check what's going on on your machine.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,798,2020-02-01T16:46:22Z,2020-03-03T01:44:12Z,2020-03-13T12:03:06Z,MERGED,True,1378,741,9,https://github.com/icedevml,memdump: refactor usermode hooking into core DRAKVUF,16,[],https://github.com/tklengyel/drakvuf/pull/798,https://github.com/tklengyel,17,https://github.com/tklengyel/drakvuf/pull/798#issuecomment-593052609,"Move usermode hooking framework from memdump plugin to core DRAKVUF.
resolve #787",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,798,2020-02-01T16:46:22Z,2020-03-03T01:44:12Z,2020-03-13T12:03:06Z,MERGED,True,1378,741,9,https://github.com/icedevml,memdump: refactor usermode hooking into core DRAKVUF,16,[],https://github.com/tklengyel/drakvuf/pull/798,https://github.com/tklengyel,18,https://github.com/tklengyel/drakvuf/pull/798#issuecomment-593054523,"Move usermode hooking framework from memdump plugin to core DRAKVUF.
resolve #787",The Windows 7 32-bit test fails with Plugin memdump startup failed!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,798,2020-02-01T16:46:22Z,2020-03-03T01:44:12Z,2020-03-13T12:03:06Z,MERGED,True,1378,741,9,https://github.com/icedevml,memdump: refactor usermode hooking into core DRAKVUF,16,[],https://github.com/tklengyel/drakvuf/pull/798,https://github.com/tklengyel,19,https://github.com/tklengyel/drakvuf/pull/798#issuecomment-593054687,"Move usermode hooking framework from memdump plugin to core DRAKVUF.
resolve #787",The CI system now also incorporates in the Windows 10 test-run the usermode hook test with a clean version of the test-program. I just loaded the exe into the VM and wrote a small powershell script to execute it in a loop. Then grep the output to see if the expected events have been recorded accordingly.,True,{'THUMBS_UP': ['https://github.com/icedevml']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,798,2020-02-01T16:46:22Z,2020-03-03T01:44:12Z,2020-03-13T12:03:06Z,MERGED,True,1378,741,9,https://github.com/icedevml,memdump: refactor usermode hooking into core DRAKVUF,16,[],https://github.com/tklengyel/drakvuf/pull/798,https://github.com/icedevml,20,https://github.com/tklengyel/drakvuf/pull/798#issuecomment-593124004,"Move usermode hooking framework from memdump plugin to core DRAKVUF.
resolve #787","If I compile the code with VS2019 it produces an exe that's ~40Kbyte in Debug mode, ~10Kbyte in Release mode. The one that's attached is over 400Kbyte. So yea, @sasza8, double check what's going on on your machine.

In theory this was compiled on some clean Windows VM and I bet it was done in such way to statically link the whole VC++ runtime (we always struggle with some random problems when we don't do it this way).
Looking at VirusTotal - for me it looks like some random heuristics just kicked in, maybe this is due to the fact that it was compiled by IEUser on a modern.ie VM. /cc @sasza8

The Windows 7 32-bit test fails with Plugin memdump startup failed!

There was a condition that was just disabling usermode hooks when there is an unsupported architecture/bitness but this code was accidentally dropped during refactor. I've added it once again.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,798,2020-02-01T16:46:22Z,2020-03-03T01:44:12Z,2020-03-13T12:03:06Z,MERGED,True,1378,741,9,https://github.com/icedevml,memdump: refactor usermode hooking into core DRAKVUF,16,[],https://github.com/tklengyel/drakvuf/pull/798,https://github.com/icedevml,21,https://github.com/tklengyel/drakvuf/pull/798#issuecomment-593125098,"Move usermode hooking framework from memdump plugin to core DRAKVUF.
resolve #787","@tklengyel e2e test failed, could you investigate?
It passed with the next commit, 🤔",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,798,2020-02-01T16:46:22Z,2020-03-03T01:44:12Z,2020-03-13T12:03:06Z,MERGED,True,1378,741,9,https://github.com/icedevml,memdump: refactor usermode hooking into core DRAKVUF,16,[],https://github.com/tklengyel/drakvuf/pull/798,https://github.com/icedevml,22,https://github.com/tklengyel/drakvuf/pull/798#issuecomment-593136503,"Move usermode hooking framework from memdump plugin to core DRAKVUF.
resolve #787","Hm. I've did something wrong when refactoring this VMI locking mechanisms.
After manual test 1228297 works OK and the later commits no (hooking fails). Going to investigate.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,798,2020-02-01T16:46:22Z,2020-03-03T01:44:12Z,2020-03-13T12:03:06Z,MERGED,True,1378,741,9,https://github.com/icedevml,memdump: refactor usermode hooking into core DRAKVUF,16,[],https://github.com/tklengyel/drakvuf/pull/798,https://github.com/icedevml,23,https://github.com/tklengyel/drakvuf/pull/798#issuecomment-593140607,"Move usermode hooking framework from memdump plugin to core DRAKVUF.
resolve #787","I've checked the sample provided by @sasza8 and it appears to be legitimate at the first glance (for a moment I was afraid we've sent you some actual malware o_O)

I can also confirm that the binary is so big due to static linkage of MSVCRT. Haven't checked for backdoors, tho :P
After NOPing out the whole main function (shown on the screenshot above), the detection rate jumped from 9 / 90 to 17 / 92. I have no idea what is going on there o_O",True,{'LAUGH': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,798,2020-02-01T16:46:22Z,2020-03-03T01:44:12Z,2020-03-13T12:03:06Z,MERGED,True,1378,741,9,https://github.com/icedevml,memdump: refactor usermode hooking into core DRAKVUF,16,[],https://github.com/tklengyel/drakvuf/pull/798,https://github.com/icedevml,24,https://github.com/tklengyel/drakvuf/pull/798#issuecomment-593141460,"Move usermode hooking framework from memdump plugin to core DRAKVUF.
resolve #787","Ok, the bugs are fixed and I've patched the code according to code review.
Tomorrow we will look at this PR one more time with @sasza8 and most probably it would be ready then.",True,{'HOORAY': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,798,2020-02-01T16:46:22Z,2020-03-03T01:44:12Z,2020-03-13T12:03:06Z,MERGED,True,1378,741,9,https://github.com/icedevml,memdump: refactor usermode hooking into core DRAKVUF,16,[],https://github.com/tklengyel/drakvuf/pull/798,https://github.com/tklengyel,25,https://github.com/tklengyel/drakvuf/pull/798#issuecomment-593172684,"Move usermode hooking framework from memdump plugin to core DRAKVUF.
resolve #787","Looks good to me, I'm ready to merge when you are done.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,798,2020-02-01T16:46:22Z,2020-03-03T01:44:12Z,2020-03-13T12:03:06Z,MERGED,True,1378,741,9,https://github.com/icedevml,memdump: refactor usermode hooking into core DRAKVUF,16,[],https://github.com/tklengyel/drakvuf/pull/798,https://github.com/icedevml,26,https://github.com/tklengyel/drakvuf/pull/798#issuecomment-593677797,"Move usermode hooking framework from memdump plugin to core DRAKVUF.
resolve #787","Ok, at the end I've made some small refactor to introduce uh-private.hpp header. This header is internal for libusermode and allows to hide some implementation details away from user.
This PR is ready to merge, we will do further adjustments in next PRs.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,799,2020-02-05T03:40:05Z,2020-02-05T05:15:20Z,2020-02-05T05:15:23Z,MERGED,True,8,4,4,https://github.com/tklengyel,Use new LIBVMI_EXTRA flags,1,[],https://github.com/tklengyel/drakvuf/pull/799,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/799,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,804,2020-02-16T00:51:30Z,2020-02-16T01:24:25Z,2020-02-16T01:24:27Z,MERGED,True,2,2,2,https://github.com/tklengyel,Update submodules,1,[],https://github.com/tklengyel/drakvuf/pull/804,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/804,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,806,2020-03-02T04:06:46Z,2020-03-02T04:22:50Z,2020-03-02T04:22:53Z,MERGED,True,4,0,1,https://github.com/tklengyel,Only update mem access permission on trap removal if needed,1,[],https://github.com/tklengyel/drakvuf/pull/806,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/806,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,807,2020-03-02T04:46:53Z,2020-03-02T05:00:28Z,2020-03-02T05:00:31Z,MERGED,True,31,35,13,https://github.com/tklengyel,Enable more compiler warnings in debug builds,1,[],https://github.com/tklengyel/drakvuf/pull/807,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/807,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,808,2020-03-02T05:16:49Z,2020-03-02T05:27:23Z,2020-03-02T05:27:26Z,MERGED,True,14,9,6,https://github.com/tklengyel,Properly enable hardening ldflags,1,[],https://github.com/tklengyel/drakvuf/pull/808,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/808,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,809,2020-03-02T22:46:39Z,2020-03-03T22:58:14Z,2020-03-03T23:00:53Z,CLOSED,False,4,4,1,https://github.com/kaganisildak,Minor correction in output format,3,[],https://github.com/tklengyel/drakvuf/pull/809,https://github.com/kaganisildak,1,https://github.com/tklengyel/drakvuf/pull/809,Comma should not come after the plugin value in KV format(Other plugins follow this rule),Comma should not come after the plugin value in KV format(Other plugins follow this rule),True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,809,2020-03-02T22:46:39Z,2020-03-03T22:58:14Z,2020-03-03T23:00:53Z,CLOSED,False,4,4,1,https://github.com/kaganisildak,Minor correction in output format,3,[],https://github.com/tklengyel/drakvuf/pull/809,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/809#issuecomment-593662994,Comma should not come after the plugin value in KV format(Other plugins follow this rule),Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,809,2020-03-02T22:46:39Z,2020-03-03T22:58:14Z,2020-03-03T23:00:53Z,CLOSED,False,4,4,1,https://github.com/kaganisildak,Minor correction in output format,3,[],https://github.com/tklengyel/drakvuf/pull/809,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/809#issuecomment-593722332,Comma should not come after the plugin value in KV format(Other plugins follow this rule),@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,810,2020-03-02T22:56:47Z,2020-03-11T15:39:07Z,2020-03-11T15:39:07Z,CLOSED,False,17,5,1,https://github.com/kaganisildak,Arguments Extraction for CreateProcessA,1,[],https://github.com/tklengyel/drakvuf/pull/810,https://github.com/kaganisildak,1,https://github.com/tklengyel/drakvuf/pull/810,"Extracting values of arguments to functions called in User-Mode
I just made a small addition to CreateProcessA for now.
The main purpose is to show the values of the arguments used in the function in detail.
It can be automated for functions that use string-type arguments.
Example output
memdump-userhook Time=1583188903.822590,VCPU=0,CR3=0x3c7d3000,ProcessName=""\Device\HarddiskVolume2\Users\Test\Desktop\ProcessHollowing.exe"",UserID=1,Method=""CreateProcessA"",CalledFrom=0x7358bcfe,Arguments=""0x662ED8,0x662F00,0x0,0x0,0x1,0x0,0x0,0x0,0x22F9B0,0x22F9F4"",Values=""C:\Windows\system32\cmd.exe,C:\Windows\system32\cmd.exe /c pause""","Extracting values of arguments to functions called in User-Mode
I just made a small addition to CreateProcessA for now.
The main purpose is to show the values of the arguments used in the function in detail.
It can be automated for functions that use string-type arguments.
Example output
memdump-userhook Time=1583188903.822590,VCPU=0,CR3=0x3c7d3000,ProcessName=""\Device\HarddiskVolume2\Users\Test\Desktop\ProcessHollowing.exe"",UserID=1,Method=""CreateProcessA"",CalledFrom=0x7358bcfe,Arguments=""0x662ED8,0x662F00,0x0,0x0,0x1,0x0,0x0,0x0,0x22F9B0,0x22F9F4"",Values=""C:\Windows\system32\cmd.exe,C:\Windows\system32\cmd.exe /c pause""",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,810,2020-03-02T22:56:47Z,2020-03-11T15:39:07Z,2020-03-11T15:39:07Z,CLOSED,False,17,5,1,https://github.com/kaganisildak,Arguments Extraction for CreateProcessA,1,[],https://github.com/tklengyel/drakvuf/pull/810,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/810#issuecomment-593666503,"Extracting values of arguments to functions called in User-Mode
I just made a small addition to CreateProcessA for now.
The main purpose is to show the values of the arguments used in the function in detail.
It can be automated for functions that use string-type arguments.
Example output
memdump-userhook Time=1583188903.822590,VCPU=0,CR3=0x3c7d3000,ProcessName=""\Device\HarddiskVolume2\Users\Test\Desktop\ProcessHollowing.exe"",UserID=1,Method=""CreateProcessA"",CalledFrom=0x7358bcfe,Arguments=""0x662ED8,0x662F00,0x0,0x0,0x1,0x0,0x0,0x0,0x22F9B0,0x22F9F4"",Values=""C:\Windows\system32\cmd.exe,C:\Windows\system32\cmd.exe /c pause""",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,810,2020-03-02T22:56:47Z,2020-03-11T15:39:07Z,2020-03-11T15:39:07Z,CLOSED,False,17,5,1,https://github.com/kaganisildak,Arguments Extraction for CreateProcessA,1,[],https://github.com/tklengyel/drakvuf/pull/810,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/810#issuecomment-593678329,"Extracting values of arguments to functions called in User-Mode
I just made a small addition to CreateProcessA for now.
The main purpose is to show the values of the arguments used in the function in detail.
It can be automated for functions that use string-type arguments.
Example output
memdump-userhook Time=1583188903.822590,VCPU=0,CR3=0x3c7d3000,ProcessName=""\Device\HarddiskVolume2\Users\Test\Desktop\ProcessHollowing.exe"",UserID=1,Method=""CreateProcessA"",CalledFrom=0x7358bcfe,Arguments=""0x662ED8,0x662F00,0x0,0x0,0x1,0x0,0x0,0x0,0x22F9B0,0x22F9F4"",Values=""C:\Windows\system32\cmd.exe,C:\Windows\system32\cmd.exe /c pause""","Hello, this is already work-in-progress, being written by @sasza8. He is working on some mechanism that would allow argument extraction in the generic case.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,810,2020-03-02T22:56:47Z,2020-03-11T15:39:07Z,2020-03-11T15:39:07Z,CLOSED,False,17,5,1,https://github.com/kaganisildak,Arguments Extraction for CreateProcessA,1,[],https://github.com/tklengyel/drakvuf/pull/810,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/810#issuecomment-594139930,"Extracting values of arguments to functions called in User-Mode
I just made a small addition to CreateProcessA for now.
The main purpose is to show the values of the arguments used in the function in detail.
It can be automated for functions that use string-type arguments.
Example output
memdump-userhook Time=1583188903.822590,VCPU=0,CR3=0x3c7d3000,ProcessName=""\Device\HarddiskVolume2\Users\Test\Desktop\ProcessHollowing.exe"",UserID=1,Method=""CreateProcessA"",CalledFrom=0x7358bcfe,Arguments=""0x662ED8,0x662F00,0x0,0x0,0x1,0x0,0x0,0x0,0x22F9B0,0x22F9F4"",Values=""C:\Windows\system32\cmd.exe,C:\Windows\system32\cmd.exe /c pause""",@kaganisildak Would be great if you could look at #814 - this is our (CERT Polska) PR that provides usermode argument printing in the general case. We are open to your suggestions or/and code review :),True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,810,2020-03-02T22:56:47Z,2020-03-11T15:39:07Z,2020-03-11T15:39:07Z,CLOSED,False,17,5,1,https://github.com/kaganisildak,Arguments Extraction for CreateProcessA,1,[],https://github.com/tklengyel/drakvuf/pull/810,https://github.com/kaganisildak,5,https://github.com/tklengyel/drakvuf/pull/810#issuecomment-594151438,"Extracting values of arguments to functions called in User-Mode
I just made a small addition to CreateProcessA for now.
The main purpose is to show the values of the arguments used in the function in detail.
It can be automated for functions that use string-type arguments.
Example output
memdump-userhook Time=1583188903.822590,VCPU=0,CR3=0x3c7d3000,ProcessName=""\Device\HarddiskVolume2\Users\Test\Desktop\ProcessHollowing.exe"",UserID=1,Method=""CreateProcessA"",CalledFrom=0x7358bcfe,Arguments=""0x662ED8,0x662F00,0x0,0x0,0x1,0x0,0x0,0x0,0x22F9B0,0x22F9F4"",Values=""C:\Windows\system32\cmd.exe,C:\Windows\system32\cmd.exe /c pause""",@icedevml great. it looks much better. I'll test and give more fb,True,{'THUMBS_UP': ['https://github.com/icedevml']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,811,2020-03-03T03:26:14Z,2020-03-03T04:10:14Z,2020-03-03T04:10:16Z,MERGED,True,30,37,1,https://github.com/tklengyel,Travis-CI update,1,[],https://github.com/tklengyel/drakvuf/pull/811,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/811,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,812,2020-03-03T04:35:22Z,2020-03-03T04:50:43Z,2020-03-03T04:50:46Z,MERGED,True,1,2,1,https://github.com/tklengyel,Fix SonarCloud travis error,1,[],https://github.com/tklengyel/drakvuf/pull/812,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/812,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,813,2020-03-03T15:54:56Z,2020-03-03T16:12:04Z,2020-03-03T16:12:07Z,MERGED,True,2,0,1,https://github.com/tklengyel,Add noexecstack linker flag,1,[],https://github.com/tklengyel/drakvuf/pull/813,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/813,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,814,2020-03-03T16:50:14Z,2020-03-11T15:37:17Z,2020-03-13T12:02:49Z,MERGED,True,1321,255,20,https://github.com/sasza8,"memdump: logging string-typed arguments, introduce apimon plugin",5,[],https://github.com/tklengyel/drakvuf/pull/814,https://github.com/sasza8,1,https://github.com/tklengyel/drakvuf/pull/814,"This PR adds feature of logging string-typed (LPCSTR, LPWCSTR, UNICODE etc.) and implements a framework which allows adding printing logic for different types easily.","This PR adds feature of logging string-typed (LPCSTR, LPWCSTR, UNICODE etc.) and implements a framework which allows adding printing logic for different types easily.",True,"{'THUMBS_UP': ['https://github.com/kaganisildak', 'https://github.com/icedevml']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,814,2020-03-03T16:50:14Z,2020-03-11T15:37:17Z,2020-03-13T12:02:49Z,MERGED,True,1321,255,20,https://github.com/sasza8,"memdump: logging string-typed arguments, introduce apimon plugin",5,[],https://github.com/tklengyel/drakvuf/pull/814,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/814#issuecomment-594051728,"This PR adds feature of logging string-typed (LPCSTR, LPWCSTR, UNICODE etc.) and implements a framework which allows adding printing logic for different types easily.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,814,2020-03-03T16:50:14Z,2020-03-11T15:37:17Z,2020-03-13T12:02:49Z,MERGED,True,1321,255,20,https://github.com/sasza8,"memdump: logging string-typed arguments, introduce apimon plugin",5,[],https://github.com/tklengyel/drakvuf/pull/814,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/814#issuecomment-594128833,"This PR adds feature of logging string-typed (LPCSTR, LPWCSTR, UNICODE etc.) and implements a framework which allows adding printing logic for different types easily.","I've rebased it to latest master, tested, seems to work +/- properly.
The good information is that this argument printing feature is also printing the return value (rax), so for every invocation of hundreds of different API calls a return trap is being created and then deleted and still everything seems to run fine. Looks like all bugs in the framework itself were already caught ;)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,814,2020-03-03T16:50:14Z,2020-03-11T15:37:17Z,2020-03-13T12:02:49Z,MERGED,True,1321,255,20,https://github.com/sasza8,"memdump: logging string-typed arguments, introduce apimon plugin",5,[],https://github.com/tklengyel/drakvuf/pull/814,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/814#issuecomment-594229213,"This PR adds feature of logging string-typed (LPCSTR, LPWCSTR, UNICODE etc.) and implements a framework which allows adding printing logic for different types easily.",✅ TODO refactor API logging stuff to another plugin,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,814,2020-03-03T16:50:14Z,2020-03-11T15:37:17Z,2020-03-13T12:02:49Z,MERGED,True,1321,255,20,https://github.com/sasza8,"memdump: logging string-typed arguments, introduce apimon plugin",5,[],https://github.com/tklengyel/drakvuf/pull/814,https://github.com/icedevml,5,https://github.com/tklengyel/drakvuf/pull/814#issuecomment-594681940,"This PR adds feature of logging string-typed (LPCSTR, LPWCSTR, UNICODE etc.) and implements a framework which allows adding printing logic for different types easily.","This PR adds exemplary dll-hooks-list file dedicated for Win7x64 in src/plugins/apimon/example/dll-hooks-list-win7x64 (I'm not sure if there is some better location for that).
How to run:
src/drakvuf -a apimon -a memdump -d win7 -r win7.json --dll-hooks-list mq/drakvuf/src/plugins/apimon/example/dll-hooks-list-win7x64",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,814,2020-03-03T16:50:14Z,2020-03-11T15:37:17Z,2020-03-13T12:02:49Z,MERGED,True,1321,255,20,https://github.com/sasza8,"memdump: logging string-typed arguments, introduce apimon plugin",5,[],https://github.com/tklengyel/drakvuf/pull/814,https://github.com/icedevml,6,https://github.com/tklengyel/drakvuf/pull/814#issuecomment-594918989,"This PR adds feature of logging string-typed (LPCSTR, LPWCSTR, UNICODE etc.) and implements a framework which allows adding printing logic for different types easily.",@tklengyel This is ready to review.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,814,2020-03-03T16:50:14Z,2020-03-11T15:37:17Z,2020-03-13T12:02:49Z,MERGED,True,1321,255,20,https://github.com/sasza8,"memdump: logging string-typed arguments, introduce apimon plugin",5,[],https://github.com/tklengyel/drakvuf/pull/814,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/814#issuecomment-594987274,"This PR adds feature of logging string-typed (LPCSTR, LPWCSTR, UNICODE etc.) and implements a framework which allows adding printing logic for different types easily.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,814,2020-03-03T16:50:14Z,2020-03-11T15:37:17Z,2020-03-13T12:02:49Z,MERGED,True,1321,255,20,https://github.com/sasza8,"memdump: logging string-typed arguments, introduce apimon plugin",5,[],https://github.com/tklengyel/drakvuf/pull/814,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/814#issuecomment-594992401,"This PR adds feature of logging string-typed (LPCSTR, LPWCSTR, UNICODE etc.) and implements a framework which allows adding printing logic for different types easily.","All Windows tests fail on the CI system. Windows 10 fails with the Usermode hook test (no calls to CharLowerA were recorded). Windows 7 produces memory leaks caught by valgrind:
8 bytes in 1 blocks are definitely lost in loss record 3 of 12
 342         this->wanted_hooks.emplace_back(""ws2_32.dll"", ""WSAStartup"", ""log+stack"", std::vector<ArgumentPrinter*> { new ArgumentPrinter(), new ArgumentPrinter() });

8 bytes in 1 blocks are definitely lost in loss record 5 of 12
 343         this->wanted_hooks.emplace_back(""ntdll.dll"", ""RtlExitUserProcess"", ""log+stack"", std::vector<ArgumentPrinter*> { new ArgumentPrinter(), new ArgumentPrinter() });",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,814,2020-03-03T16:50:14Z,2020-03-11T15:37:17Z,2020-03-13T12:02:49Z,MERGED,True,1321,255,20,https://github.com/sasza8,"memdump: logging string-typed arguments, introduce apimon plugin",5,[],https://github.com/tklengyel/drakvuf/pull/814,https://github.com/icedevml,9,https://github.com/tklengyel/drakvuf/pull/814#issuecomment-595181002,"This PR adds feature of logging string-typed (LPCSTR, LPWCSTR, UNICODE etc.) and implements a framework which allows adding printing logic for different types easily.","Tests fail due to the fact that the format of dll-hooks-list file format was changed a little bit, I will give some details soon.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,814,2020-03-03T16:50:14Z,2020-03-11T15:37:17Z,2020-03-13T12:02:49Z,MERGED,True,1321,255,20,https://github.com/sasza8,"memdump: logging string-typed arguments, introduce apimon plugin",5,[],https://github.com/tklengyel/drakvuf/pull/814,https://github.com/icedevml,10,https://github.com/tklengyel/drakvuf/pull/814#issuecomment-595245961,"This PR adds feature of logging string-typed (LPCSTR, LPWCSTR, UNICODE etc.) and implements a framework which allows adding printing logic for different types easily.","@tklengyel We had to change the format for dll-hooks-list a little bit and this is the reason why tests fail on the CI.
Could you modify the CI config in such way to take --dll-hooks-list src/plugins/apimon/example/dll-hooks-list-drakvuf-ci? (I.e. don't hardcode the dll-hooks-list but just every time fetch it from the repository) This way the PR would contain the compatible configuration file by itself.
https://github.com/tklengyel/drakvuf/blob/dc0638a04db5fd7ce380a2a5fbf820094f1ecb09/src/plugins/apimon/example/dll-hooks-list-drakvuf-ci
The output format is also slightly changed:
[APIMON-USERHOOK] TIME:1583419046.049131 VCPU:1 CR3:0xa1f3000 ProcessName:""\Device\HarddiskVolume2\Users\user\Desktop\userhook_test.exe"" UserID:1 Method:""SetRect"" CalledFrom:0x0 ReturnValue:0x134efc7 Arguments:[ ""0x0"", ""0x1234"", ""0xdeadb33f"", ""0xc0dec0de"", ""0x31337"" ]
[APIMON-USERHOOK] TIME:1583419109.526512 VCPU:1 CR3:0x56435000 ProcessName:""\Device\HarddiskVolume2\Users\user\Desktop\userhook_test.exe"" UserID:1 Method:""CharLowerA"" CalledFrom:0x61 ReturnValue:0x110efa2 Arguments:[ ""0x41"" ]

(or with OUTPUT_JSON)
{""Plugin"": ""apimon"", ""TimeStamp"":""1583419194.172844"", ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\user\\Desktop\\userhook_test.exe"", ""UserName"": ""SessionID"", ""UserId"": 1, ""PID"": 3228, ""PPID"": 1920, ""Method"": ""SetRect"", ""CalledFrom"": 0xd2efc7, ""ReturnValue"": 0x0, ""Arguments"": [ ""0x0"", ""0x1234"", ""0xdeadb33f"", ""0xc0dec0de"", ""0x31337"" ], ""Extra"": {}}
{""Plugin"": ""apimon"", ""TimeStamp"":""1583419169.243413"", ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\user\\Desktop\\userhook_test.exe"", ""UserName"": ""SessionID"", ""UserId"": 1, ""PID"": 1144, ""PPID"": 1920, ""Method"": ""CharLowerA"", ""CalledFrom"": 0x135efa2, ""ReturnValue"": 0x61, ""Arguments"": [ ""0x41"" ], ""Extra"": {}}",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,814,2020-03-03T16:50:14Z,2020-03-11T15:37:17Z,2020-03-13T12:02:49Z,MERGED,True,1321,255,20,https://github.com/sasza8,"memdump: logging string-typed arguments, introduce apimon plugin",5,[],https://github.com/tklengyel/drakvuf/pull/814,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/814#issuecomment-595271557,"This PR adds feature of logging string-typed (LPCSTR, LPWCSTR, UNICODE etc.) and implements a framework which allows adding printing logic for different types easily.","src/plugins/apimon/example/dll-hooks-list-drakvuf-ci

Could you make a top level folder ci and put this in there?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,814,2020-03-03T16:50:14Z,2020-03-11T15:37:17Z,2020-03-13T12:02:49Z,MERGED,True,1321,255,20,https://github.com/sasza8,"memdump: logging string-typed arguments, introduce apimon plugin",5,[],https://github.com/tklengyel/drakvuf/pull/814,https://github.com/tklengyel,12,https://github.com/tklengyel/drakvuf/pull/814#issuecomment-595273150,"This PR adds feature of logging string-typed (LPCSTR, LPWCSTR, UNICODE etc.) and implements a framework which allows adding printing logic for different types easily.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,814,2020-03-03T16:50:14Z,2020-03-11T15:37:17Z,2020-03-13T12:02:49Z,MERGED,True,1321,255,20,https://github.com/sasza8,"memdump: logging string-typed arguments, introduce apimon plugin",5,[],https://github.com/tklengyel/drakvuf/pull/814,https://github.com/icedevml,13,https://github.com/tklengyel/drakvuf/pull/814#issuecomment-595274151,"This PR adds feature of logging string-typed (LPCSTR, LPWCSTR, UNICODE etc.) and implements a framework which allows adding printing logic for different types easily.",@tklengyel Moved to ci/dll-hooks-list: https://github.com/tklengyel/drakvuf/pull/814/files#diff-e8d9a51d609af600d0f9929cff54bd29,True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,814,2020-03-03T16:50:14Z,2020-03-11T15:37:17Z,2020-03-13T12:02:49Z,MERGED,True,1321,255,20,https://github.com/sasza8,"memdump: logging string-typed arguments, introduce apimon plugin",5,[],https://github.com/tklengyel/drakvuf/pull/814,https://github.com/tklengyel,14,https://github.com/tklengyel/drakvuf/pull/814#issuecomment-595283970,"This PR adds feature of logging string-typed (LPCSTR, LPWCSTR, UNICODE etc.) and implements a framework which allows adding printing logic for different types easily.","Valgrind still catches memory leaks (see http://ci.drakvuf.com:8080/job/DRAKVUF-windows7-sp1-x86/lastFailedBuild/valgrindResult/pid=1945156,0x9)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,814,2020-03-03T16:50:14Z,2020-03-11T15:37:17Z,2020-03-13T12:02:49Z,MERGED,True,1321,255,20,https://github.com/sasza8,"memdump: logging string-typed arguments, introduce apimon plugin",5,[],https://github.com/tklengyel/drakvuf/pull/814,https://github.com/tklengyel,15,https://github.com/tklengyel/drakvuf/pull/814#issuecomment-595284439,"This PR adds feature of logging string-typed (LPCSTR, LPWCSTR, UNICODE etc.) and implements a framework which allows adding printing logic for different types easily.",Also: Malformed DLL hook configuration for MEMDUMP plugin,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,814,2020-03-03T16:50:14Z,2020-03-11T15:37:17Z,2020-03-13T12:02:49Z,MERGED,True,1321,255,20,https://github.com/sasza8,"memdump: logging string-typed arguments, introduce apimon plugin",5,[],https://github.com/tklengyel/drakvuf/pull/814,https://github.com/icedevml,16,https://github.com/tklengyel/drakvuf/pull/814#issuecomment-595322876,"This PR adds feature of logging string-typed (LPCSTR, LPWCSTR, UNICODE etc.) and implements a framework which allows adding printing logic for different types easily.","Valgrind still catches memory leaks (see http://ci.drakvuf.com:8080/job/DRAKVUF-windows7-sp1-x86/lastFailedBuild/valgrindResult/pid=1945156,0x9)

Yup, we are going to address this using std::unique_ptr or so.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,814,2020-03-03T16:50:14Z,2020-03-11T15:37:17Z,2020-03-13T12:02:49Z,MERGED,True,1321,255,20,https://github.com/sasza8,"memdump: logging string-typed arguments, introduce apimon plugin",5,[],https://github.com/tklengyel/drakvuf/pull/814,https://github.com/icedevml,17,https://github.com/tklengyel/drakvuf/pull/814#issuecomment-595324972,"This PR adds feature of logging string-typed (LPCSTR, LPWCSTR, UNICODE etc.) and implements a framework which allows adding printing logic for different types easily.",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,814,2020-03-03T16:50:14Z,2020-03-11T15:37:17Z,2020-03-13T12:02:49Z,MERGED,True,1321,255,20,https://github.com/sasza8,"memdump: logging string-typed arguments, introduce apimon plugin",5,[],https://github.com/tklengyel/drakvuf/pull/814,https://github.com/icedevml,18,https://github.com/tklengyel/drakvuf/pull/814#issuecomment-595327808,"This PR adds feature of logging string-typed (LPCSTR, LPWCSTR, UNICODE etc.) and implements a framework which allows adding printing logic for different types easily.","@tklengyel Isn't the CI still using the old configuration file instead of ci/dll-hooks-list from the repo?
Running DRAKVUF #2 for 60 seconds. Opts:  -S /shared/syscalls.txt -a syscalls --dll-hooks /shared/dllhooks.txt -a memdump
...
Malformed DLL hook configuration for MEMDUMP plugin

also, as we do have two plugins right now, there should be -a memdump -a apimon in this test.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,814,2020-03-03T16:50:14Z,2020-03-11T15:37:17Z,2020-03-13T12:02:49Z,MERGED,True,1321,255,20,https://github.com/sasza8,"memdump: logging string-typed arguments, introduce apimon plugin",5,[],https://github.com/tklengyel/drakvuf/pull/814,https://github.com/tklengyel,19,https://github.com/tklengyel/drakvuf/pull/814#issuecomment-595331038,"This PR adds feature of logging string-typed (LPCSTR, LPWCSTR, UNICODE etc.) and implements a framework which allows adding printing logic for different types easily.","Ah yes, the ci folder needs to be copied to the run test. Should be fixed now.
@drakvuf-jenkins Retest this please",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,814,2020-03-03T16:50:14Z,2020-03-11T15:37:17Z,2020-03-13T12:02:49Z,MERGED,True,1321,255,20,https://github.com/sasza8,"memdump: logging string-typed arguments, introduce apimon plugin",5,[],https://github.com/tklengyel/drakvuf/pull/814,https://github.com/tklengyel,20,https://github.com/tklengyel/drakvuf/pull/814#issuecomment-595333202,"This PR adds feature of logging string-typed (LPCSTR, LPWCSTR, UNICODE etc.) and implements a framework which allows adding printing logic for different types easily.","OK, it found the right config now but:
Running DRAKVUF #2 for 60 seconds. Opts:  -S /shared/syscalls.txt -a syscalls --dll-hooks /shared/jenkins/DRAKVUF-windows10/ci/dll-hooks-list -a memdump
DRAKVUF is running with PID 1996751

CPU utilization average: 14

Syscalls: 80181
CharLowerA: 0",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,814,2020-03-03T16:50:14Z,2020-03-11T15:37:17Z,2020-03-13T12:02:49Z,MERGED,True,1321,255,20,https://github.com/sasza8,"memdump: logging string-typed arguments, introduce apimon plugin",5,[],https://github.com/tklengyel/drakvuf/pull/814,https://github.com/icedevml,21,https://github.com/tklengyel/drakvuf/pull/814#issuecomment-595335598,"This PR adds feature of logging string-typed (LPCSTR, LPWCSTR, UNICODE etc.) and implements a framework which allows adding printing logic for different types easily.",@tklengyel Please add -a apimon everywhere where you have -a memdump already and should be fine ;),True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,814,2020-03-03T16:50:14Z,2020-03-11T15:37:17Z,2020-03-13T12:02:49Z,MERGED,True,1321,255,20,https://github.com/sasza8,"memdump: logging string-typed arguments, introduce apimon plugin",5,[],https://github.com/tklengyel/drakvuf/pull/814,https://github.com/tklengyel,22,https://github.com/tklengyel/drakvuf/pull/814#issuecomment-595345200,"This PR adds feature of logging string-typed (LPCSTR, LPWCSTR, UNICODE etc.) and implements a framework which allows adding printing logic for different types easily.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,814,2020-03-03T16:50:14Z,2020-03-11T15:37:17Z,2020-03-13T12:02:49Z,MERGED,True,1321,255,20,https://github.com/sasza8,"memdump: logging string-typed arguments, introduce apimon plugin",5,[],https://github.com/tklengyel/drakvuf/pull/814,https://github.com/tklengyel,23,https://github.com/tklengyel/drakvuf/pull/814#issuecomment-595358388,"This PR adds feature of logging string-typed (LPCSTR, LPWCSTR, UNICODE etc.) and implements a framework which allows adding printing logic for different types easily.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,814,2020-03-03T16:50:14Z,2020-03-11T15:37:17Z,2020-03-13T12:02:49Z,MERGED,True,1321,255,20,https://github.com/sasza8,"memdump: logging string-typed arguments, introduce apimon plugin",5,[],https://github.com/tklengyel/drakvuf/pull/814,https://github.com/tklengyel,24,https://github.com/tklengyel/drakvuf/pull/814#issuecomment-595360949,"This PR adds feature of logging string-typed (LPCSTR, LPWCSTR, UNICODE etc.) and implements a framework which allows adding printing logic for different types easily.","Running DRAKVUF #2 for 60 seconds. Opts:  -S /shared/syscalls.txt -a syscalls -a apimon --dll-hooks /shared/jenkins/DRAKVUF-windows10/ci/dll-hooks-list -a memdump
DRAKVUF is running with PID 2032708

CPU utilization average: 15

Syscalls: 79979
CharLowerA: 5
SetRect: 5

So now it just fails with Valgrind :)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,814,2020-03-03T16:50:14Z,2020-03-11T15:37:17Z,2020-03-13T12:02:49Z,MERGED,True,1321,255,20,https://github.com/sasza8,"memdump: logging string-typed arguments, introduce apimon plugin",5,[],https://github.com/tklengyel/drakvuf/pull/814,https://github.com/icedevml,25,https://github.com/tklengyel/drakvuf/pull/814#issuecomment-595361634,"This PR adds feature of logging string-typed (LPCSTR, LPWCSTR, UNICODE etc.) and implements a framework which allows adding printing logic for different types easily.","Ok, so we are at the desired point :P This will be solved soon.",True,{'LAUGH': ['https://github.com/kaganisildak']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,814,2020-03-03T16:50:14Z,2020-03-11T15:37:17Z,2020-03-13T12:02:49Z,MERGED,True,1321,255,20,https://github.com/sasza8,"memdump: logging string-typed arguments, introduce apimon plugin",5,[],https://github.com/tklengyel/drakvuf/pull/814,https://github.com/icedevml,26,https://github.com/tklengyel/drakvuf/pull/814#issuecomment-597340485,"This PR adds feature of logging string-typed (LPCSTR, LPWCSTR, UNICODE etc.) and implements a framework which allows adding printing logic for different types easily.","Ok, I think that all review issues were addressed and from our perspective this PR is ready.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,814,2020-03-03T16:50:14Z,2020-03-11T15:37:17Z,2020-03-13T12:02:49Z,MERGED,True,1321,255,20,https://github.com/sasza8,"memdump: logging string-typed arguments, introduce apimon plugin",5,[],https://github.com/tklengyel/drakvuf/pull/814,https://github.com/tklengyel,27,https://github.com/tklengyel/drakvuf/pull/814#issuecomment-597395379,"This PR adds feature of logging string-typed (LPCSTR, LPWCSTR, UNICODE etc.) and implements a framework which allows adding printing logic for different types easily.","This looks good to me, I really only spotted some very minor things on my last review. With those fixed I'm good to merge.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,814,2020-03-03T16:50:14Z,2020-03-11T15:37:17Z,2020-03-13T12:02:49Z,MERGED,True,1321,255,20,https://github.com/sasza8,"memdump: logging string-typed arguments, introduce apimon plugin",5,[],https://github.com/tklengyel/drakvuf/pull/814,https://github.com/icedevml,28,https://github.com/tklengyel/drakvuf/pull/814#issuecomment-597684268,"This PR adds feature of logging string-typed (LPCSTR, LPWCSTR, UNICODE etc.) and implements a framework which allows adding printing logic for different types easily.",@tklengyel Done. (The CI check has to be re-requested because it failed for unrelated reason).,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,815,2020-03-03T22:58:06Z,2020-03-04T14:16:54Z,2020-03-04T14:16:54Z,MERGED,True,3,3,1,https://github.com/kaganisildak,Minor correction in output format,1,[],https://github.com/tklengyel/drakvuf/pull/815,https://github.com/kaganisildak,1,https://github.com/tklengyel/drakvuf/pull/815,"Comma should not come after the plugin value in KV format(Other plugins follow this rule)
PID and PPID values added to KV format","Comma should not come after the plugin value in KV format(Other plugins follow this rule)
PID and PPID values added to KV format",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,815,2020-03-03T22:58:06Z,2020-03-04T14:16:54Z,2020-03-04T14:16:54Z,MERGED,True,3,3,1,https://github.com/kaganisildak,Minor correction in output format,1,[],https://github.com/tklengyel/drakvuf/pull/815,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/815#issuecomment-594214783,"Comma should not come after the plugin value in KV format(Other plugins follow this rule)
PID and PPID values added to KV format",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,815,2020-03-03T22:58:06Z,2020-03-04T14:16:54Z,2020-03-04T14:16:54Z,MERGED,True,3,3,1,https://github.com/kaganisildak,Minor correction in output format,1,[],https://github.com/tklengyel/drakvuf/pull/815,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/815#issuecomment-594225179,"Comma should not come after the plugin value in KV format(Other plugins follow this rule)
PID and PPID values added to KV format",@drakvuf-jenkins Test this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,816,2020-03-05T02:47:00Z,2020-03-05T03:09:03Z,2020-03-05T03:09:05Z,MERGED,True,2,1,1,https://github.com/tklengyel,Use VMI_GET_BIT in procmon,1,[],https://github.com/tklengyel/drakvuf/pull/816,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/816,Left-shifting signed 1 more then 31-bits is undefined behavior.,Left-shifting signed 1 more then 31-bits is undefined behavior.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,817,2020-03-05T03:11:33Z,2020-03-05T03:28:39Z,2020-03-05T03:28:42Z,MERGED,True,11,0,1,https://github.com/tklengyel,Add cppcheck to Travis-CI,1,[],https://github.com/tklengyel/drakvuf/pull/817,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/817,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,818,2020-03-08T02:53:35Z,2020-03-08T03:13:00Z,2020-03-08T03:13:03Z,MERGED,True,143,23,7,https://github.com/tklengyel,Use g_slice_alloc0 to optimize memory allocations,1,[],https://github.com/tklengyel/drakvuf/pull/818,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/818,https://developer.gnome.org/glib/stable/glib-Memory-Slices.html,https://developer.gnome.org/glib/stable/glib-Memory-Slices.html,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,819,2020-03-09T10:22:39Z,2020-03-09T14:49:45Z,2020-03-09T17:17:48Z,MERGED,True,2,1,2,https://github.com/icedevml,memdump/filetracer: fix OUTPUT_JSON parse errors,2,[],https://github.com/tklengyel/drakvuf/pull/819,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/819,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,822,2020-03-10T02:28:16Z,2020-03-10T02:38:53Z,2020-03-10T02:38:56Z,MERGED,True,1,1,1,https://github.com/tklengyel,Update LibVMI,1,[],https://github.com/tklengyel/drakvuf/pull/822,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/822,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,823,2020-03-10T02:40:50Z,2020-03-10T03:27:12Z,2020-03-10T03:27:15Z,MERGED,True,2,6,1,https://github.com/tklengyel,Remove coverity token from travis.yml,1,[],https://github.com/tklengyel/drakvuf/pull/823,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/823,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,824,2020-03-10T16:18:28Z,2020-03-31T21:47:13Z,2020-03-31T21:51:16Z,MERGED,True,769,1,8,https://github.com/BonusPlay,Create python REPL for debugging drakvuf,22,[],https://github.com/tklengyel/drakvuf/pull/824,https://github.com/BonusPlay,1,https://github.com/tklengyel/drakvuf/pull/824,"This PR adds easily embeddable IPython REPL for debugging drakvuf hooks.
Running: ctypesgen src/libdrakvuf/libdrakvuf.h -o src/librepl/libdrakvuf.py -I /usr/include -I /usr/include/glib-2.0 -I /lib/x86_64-linux-gnu/glib-2.0/include generated ctypes bindings for python, which are later imported by REPL. Would be nice to incorporate this command into build process.
This PR also includes a repl binary which runs standalone drakvuf and starts REPL on first CR3 breakpoint (to try it out).
Currently there is no way to modify vmi return code, so editing registers is not implemented, but this is a subject to change.","This PR adds easily embeddable IPython REPL for debugging drakvuf hooks.
Running: ctypesgen src/libdrakvuf/libdrakvuf.h -o src/librepl/libdrakvuf.py -I /usr/include -I /usr/include/glib-2.0 -I /lib/x86_64-linux-gnu/glib-2.0/include generated ctypes bindings for python, which are later imported by REPL. Would be nice to incorporate this command into build process.
This PR also includes a repl binary which runs standalone drakvuf and starts REPL on first CR3 breakpoint (to try it out).
Currently there is no way to modify vmi return code, so editing registers is not implemented, but this is a subject to change.",True,{'THUMBS_UP': ['https://github.com/icedevml']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,824,2020-03-10T16:18:28Z,2020-03-31T21:47:13Z,2020-03-31T21:51:16Z,MERGED,True,769,1,8,https://github.com/BonusPlay,Create python REPL for debugging drakvuf,22,[],https://github.com/tklengyel/drakvuf/pull/824,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/824#issuecomment-597176826,"This PR adds easily embeddable IPython REPL for debugging drakvuf hooks.
Running: ctypesgen src/libdrakvuf/libdrakvuf.h -o src/librepl/libdrakvuf.py -I /usr/include -I /usr/include/glib-2.0 -I /lib/x86_64-linux-gnu/glib-2.0/include generated ctypes bindings for python, which are later imported by REPL. Would be nice to incorporate this command into build process.
This PR also includes a repl binary which runs standalone drakvuf and starts REPL on first CR3 breakpoint (to try it out).
Currently there is no way to modify vmi return code, so editing registers is not implemented, but this is a subject to change.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,824,2020-03-10T16:18:28Z,2020-03-31T21:47:13Z,2020-03-31T21:51:16Z,MERGED,True,769,1,8,https://github.com/BonusPlay,Create python REPL for debugging drakvuf,22,[],https://github.com/tklengyel/drakvuf/pull/824,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/824#issuecomment-597178116,"This PR adds easily embeddable IPython REPL for debugging drakvuf hooks.
Running: ctypesgen src/libdrakvuf/libdrakvuf.h -o src/librepl/libdrakvuf.py -I /usr/include -I /usr/include/glib-2.0 -I /lib/x86_64-linux-gnu/glib-2.0/include generated ctypes bindings for python, which are later imported by REPL. Would be nice to incorporate this command into build process.
This PR also includes a repl binary which runs standalone drakvuf and starts REPL on first CR3 breakpoint (to try it out).
Currently there is no way to modify vmi return code, so editing registers is not implemented, but this is a subject to change.",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,824,2020-03-10T16:18:28Z,2020-03-31T21:47:13Z,2020-03-31T21:51:16Z,MERGED,True,769,1,8,https://github.com/BonusPlay,Create python REPL for debugging drakvuf,22,[],https://github.com/tklengyel/drakvuf/pull/824,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/824#issuecomment-597179491,"This PR adds easily embeddable IPython REPL for debugging drakvuf hooks.
Running: ctypesgen src/libdrakvuf/libdrakvuf.h -o src/librepl/libdrakvuf.py -I /usr/include -I /usr/include/glib-2.0 -I /lib/x86_64-linux-gnu/glib-2.0/include generated ctypes bindings for python, which are later imported by REPL. Would be nice to incorporate this command into build process.
This PR also includes a repl binary which runs standalone drakvuf and starts REPL on first CR3 breakpoint (to try it out).
Currently there is no way to modify vmi return code, so editing registers is not implemented, but this is a subject to change.","@BonusPlay
configure.ac:107: installing './missing'
src/Makefile.am: installing './depcomp'
src/librepl/Makefile.am:148: error: librepl_la_LIBADD must be set with '=' before using '+='
autoreconf: automake failed with exit status: 1
Build step 'Execute shell' marked build as failure
Skipped archiving because build is not successful
Finished: FAILURE",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,824,2020-03-10T16:18:28Z,2020-03-31T21:47:13Z,2020-03-31T21:51:16Z,MERGED,True,769,1,8,https://github.com/BonusPlay,Create python REPL for debugging drakvuf,22,[],https://github.com/tklengyel/drakvuf/pull/824,https://github.com/BonusPlay,5,https://github.com/tklengyel/drakvuf/pull/824#issuecomment-597181539,"This PR adds easily embeddable IPython REPL for debugging drakvuf hooks.
Running: ctypesgen src/libdrakvuf/libdrakvuf.h -o src/librepl/libdrakvuf.py -I /usr/include -I /usr/include/glib-2.0 -I /lib/x86_64-linux-gnu/glib-2.0/include generated ctypes bindings for python, which are later imported by REPL. Would be nice to incorporate this command into build process.
This PR also includes a repl binary which runs standalone drakvuf and starts REPL on first CR3 breakpoint (to try it out).
Currently there is no way to modify vmi return code, so editing registers is not implemented, but this is a subject to change.","Yes, this was a mistake while rebasing.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,824,2020-03-10T16:18:28Z,2020-03-31T21:47:13Z,2020-03-31T21:51:16Z,MERGED,True,769,1,8,https://github.com/BonusPlay,Create python REPL for debugging drakvuf,22,[],https://github.com/tklengyel/drakvuf/pull/824,https://github.com/icedevml,6,https://github.com/tklengyel/drakvuf/pull/824#issuecomment-597183256,"This PR adds easily embeddable IPython REPL for debugging drakvuf hooks.
Running: ctypesgen src/libdrakvuf/libdrakvuf.h -o src/librepl/libdrakvuf.py -I /usr/include -I /usr/include/glib-2.0 -I /lib/x86_64-linux-gnu/glib-2.0/include generated ctypes bindings for python, which are later imported by REPL. Would be nice to incorporate this command into build process.
This PR also includes a repl binary which runs standalone drakvuf and starts REPL on first CR3 breakpoint (to try it out).
Currently there is no way to modify vmi return code, so editing registers is not implemented, but this is a subject to change.","config.status: creating src/dirwatch/Makefile
config.status: creating src/libusermode/Makefile
config.status: creating src/librepl/Makefile
config.status: creating config.h
config.status: executing depfiles commands
config.status: error: in `/shared/jenkins/DRAKVUF-build':
config.status: error: Something went wrong bootstrapping makefile fragments
    for automatic dependency tracking.  Try re-running configure with the
    '--disable-dependency-tracking' option to at least be able to build
    the package (albeit without support for automatic dependency tracking).
See `config.log' for more details
Build step 'Execute shell' marked build as failure
Skipped archiving because build is not successful
Finished: FAILURE

🤔",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,824,2020-03-10T16:18:28Z,2020-03-31T21:47:13Z,2020-03-31T21:51:16Z,MERGED,True,769,1,8,https://github.com/BonusPlay,Create python REPL for debugging drakvuf,22,[],https://github.com/tklengyel/drakvuf/pull/824,https://github.com/BonusPlay,7,https://github.com/tklengyel/drakvuf/pull/824#issuecomment-597188311,"This PR adds easily embeddable IPython REPL for debugging drakvuf hooks.
Running: ctypesgen src/libdrakvuf/libdrakvuf.h -o src/librepl/libdrakvuf.py -I /usr/include -I /usr/include/glib-2.0 -I /lib/x86_64-linux-gnu/glib-2.0/include generated ctypes bindings for python, which are later imported by REPL. Would be nice to incorporate this command into build process.
This PR also includes a repl binary which runs standalone drakvuf and starts REPL on first CR3 breakpoint (to try it out).
Currently there is no way to modify vmi return code, so editing registers is not implemented, but this is a subject to change.","Build step 'Execute shell' marked build as failure

Sounds like execute shell is not allowed, however this is a the proper way to link python libs to project.

Making all in librepl make[3]: Entering directory '/home/travis/build/tklengyel/drakvuf/src/librepl' Makefile:649: *** missing separator.  Stop.

Hmm, it does work on my development machine...",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,824,2020-03-10T16:18:28Z,2020-03-31T21:47:13Z,2020-03-31T21:51:16Z,MERGED,True,769,1,8,https://github.com/BonusPlay,Create python REPL for debugging drakvuf,22,[],https://github.com/tklengyel/drakvuf/pull/824,https://github.com/icedevml,8,https://github.com/tklengyel/drakvuf/pull/824#issuecomment-597243168,"This PR adds easily embeddable IPython REPL for debugging drakvuf hooks.
Running: ctypesgen src/libdrakvuf/libdrakvuf.h -o src/librepl/libdrakvuf.py -I /usr/include -I /usr/include/glib-2.0 -I /lib/x86_64-linux-gnu/glib-2.0/include generated ctypes bindings for python, which are later imported by REPL. Would be nice to incorporate this command into build process.
This PR also includes a repl binary which runs standalone drakvuf and starts REPL on first CR3 breakpoint (to try it out).
Currently there is no way to modify vmi return code, so editing registers is not implemented, but this is a subject to change.","@tklengyel In terms of this PR, this is some attempt to have (at least very basic) live debugging possibilities with DRAKVUF. As @BonusPlay wrote in the PR description, it adds an alternative entry point in a form o repl binary. Inside the Python REPL, it is possible to add some new traps and then to inspect drakvuf_trap_info_t by hand, when the callback hits.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,824,2020-03-10T16:18:28Z,2020-03-31T21:47:13Z,2020-03-31T21:51:16Z,MERGED,True,769,1,8,https://github.com/BonusPlay,Create python REPL for debugging drakvuf,22,[],https://github.com/tklengyel/drakvuf/pull/824,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/824#issuecomment-597307584,"This PR adds easily embeddable IPython REPL for debugging drakvuf hooks.
Running: ctypesgen src/libdrakvuf/libdrakvuf.h -o src/librepl/libdrakvuf.py -I /usr/include -I /usr/include/glib-2.0 -I /lib/x86_64-linux-gnu/glib-2.0/include generated ctypes bindings for python, which are later imported by REPL. Would be nice to incorporate this command into build process.
This PR also includes a repl binary which runs standalone drakvuf and starts REPL on first CR3 breakpoint (to try it out).
Currently there is no way to modify vmi return code, so editing registers is not implemented, but this is a subject to change.","@icedevml that's all fine and good, my only concerns is drakvuf_LDADD += librepl/librepl.la adding this new library for all builds, even for ones where it's not needed",True,{'THUMBS_UP': ['https://github.com/icedevml']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,824,2020-03-10T16:18:28Z,2020-03-31T21:47:13Z,2020-03-31T21:51:16Z,MERGED,True,769,1,8,https://github.com/BonusPlay,Create python REPL for debugging drakvuf,22,[],https://github.com/tklengyel/drakvuf/pull/824,https://github.com/icedevml,10,https://github.com/tklengyel/drakvuf/pull/824#issuecomment-597341838,"This PR adds easily embeddable IPython REPL for debugging drakvuf hooks.
Running: ctypesgen src/libdrakvuf/libdrakvuf.h -o src/librepl/libdrakvuf.py -I /usr/include -I /usr/include/glib-2.0 -I /lib/x86_64-linux-gnu/glib-2.0/include generated ctypes bindings for python, which are later imported by REPL. Would be nice to incorporate this command into build process.
This PR also includes a repl binary which runs standalone drakvuf and starts REPL on first CR3 breakpoint (to try it out).
Currently there is no way to modify vmi return code, so editing registers is not implemented, but this is a subject to change.","@tklengyel AFAIK this is already fixed:
https://github.com/tklengyel/drakvuf/pull/824/files#diff-480477e89f9b6ddafb30c4383dcdd705R162-R174",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,824,2020-03-10T16:18:28Z,2020-03-31T21:47:13Z,2020-03-31T21:51:16Z,MERGED,True,769,1,8,https://github.com/BonusPlay,Create python REPL for debugging drakvuf,22,[],https://github.com/tklengyel/drakvuf/pull/824,https://github.com/BonusPlay,11,https://github.com/tklengyel/drakvuf/pull/824#issuecomment-597732563,"This PR adds easily embeddable IPython REPL for debugging drakvuf hooks.
Running: ctypesgen src/libdrakvuf/libdrakvuf.h -o src/librepl/libdrakvuf.py -I /usr/include -I /usr/include/glib-2.0 -I /lib/x86_64-linux-gnu/glib-2.0/include generated ctypes bindings for python, which are later imported by REPL. Would be nice to incorporate this command into build process.
This PR also includes a repl binary which runs standalone drakvuf and starts REPL on first CR3 breakpoint (to try it out).
Currently there is no way to modify vmi return code, so editing registers is not implemented, but this is a subject to change.","@tklengyel that should have done it. I'm generating libdrakvuf.py by doing
ctypesgen src/libdrakvuf/libdrakvuf.h -o src/librepl/libdrakvuf.py -I /usr/include -I /usr/include/glib-2.0 -I /lib/x86_64-linux-gnu/glib-2.0/include

Where ctypesgen is a python library. I don't know autotools well enough to implement this command into the build system myself. I should mention somewhere that IPython needs to be installed as well.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,824,2020-03-10T16:18:28Z,2020-03-31T21:47:13Z,2020-03-31T21:51:16Z,MERGED,True,769,1,8,https://github.com/BonusPlay,Create python REPL for debugging drakvuf,22,[],https://github.com/tklengyel/drakvuf/pull/824,https://github.com/tklengyel,12,https://github.com/tklengyel/drakvuf/pull/824#issuecomment-597734746,"This PR adds easily embeddable IPython REPL for debugging drakvuf hooks.
Running: ctypesgen src/libdrakvuf/libdrakvuf.h -o src/librepl/libdrakvuf.py -I /usr/include -I /usr/include/glib-2.0 -I /lib/x86_64-linux-gnu/glib-2.0/include generated ctypes bindings for python, which are later imported by REPL. Would be nice to incorporate this command into build process.
This PR also includes a repl binary which runs standalone drakvuf and starts REPL on first CR3 breakpoint (to try it out).
Currently there is no way to modify vmi return code, so editing registers is not implemented, but this is a subject to change.",You should just google around for configure.ac ctypesgen and you will find some project that already figured it out. For example: https://github.com/p4lang/switch/blob/master/configure.ac https://github.com/p4lang/switch/blob/92afb048c2e7f8691e01b4e3839bd7acfd3de4b5/switchapi/Makefile.am#L31,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,824,2020-03-10T16:18:28Z,2020-03-31T21:47:13Z,2020-03-31T21:51:16Z,MERGED,True,769,1,8,https://github.com/BonusPlay,Create python REPL for debugging drakvuf,22,[],https://github.com/tklengyel/drakvuf/pull/824,https://github.com/tklengyel,13,https://github.com/tklengyel/drakvuf/pull/824#issuecomment-602967126,"This PR adds easily embeddable IPython REPL for debugging drakvuf hooks.
Running: ctypesgen src/libdrakvuf/libdrakvuf.h -o src/librepl/libdrakvuf.py -I /usr/include -I /usr/include/glib-2.0 -I /lib/x86_64-linux-gnu/glib-2.0/include generated ctypes bindings for python, which are later imported by REPL. Would be nice to incorporate this command into build process.
This PR also includes a repl binary which runs standalone drakvuf and starts REPL on first CR3 breakpoint (to try it out).
Currently there is no way to modify vmi return code, so editing registers is not implemented, but this is a subject to change.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,824,2020-03-10T16:18:28Z,2020-03-31T21:47:13Z,2020-03-31T21:51:16Z,MERGED,True,769,1,8,https://github.com/BonusPlay,Create python REPL for debugging drakvuf,22,[],https://github.com/tklengyel/drakvuf/pull/824,https://github.com/BonusPlay,14,https://github.com/tklengyel/drakvuf/pull/824#issuecomment-604604512,"This PR adds easily embeddable IPython REPL for debugging drakvuf hooks.
Running: ctypesgen src/libdrakvuf/libdrakvuf.h -o src/librepl/libdrakvuf.py -I /usr/include -I /usr/include/glib-2.0 -I /lib/x86_64-linux-gnu/glib-2.0/include generated ctypes bindings for python, which are later imported by REPL. Would be nice to incorporate this command into build process.
This PR also includes a repl binary which runs standalone drakvuf and starts REPL on first CR3 breakpoint (to try it out).
Currently there is no way to modify vmi return code, so editing registers is not implemented, but this is a subject to change.","@tklengyel would be nice to add it to at least 1 task on travis (since currently all builds omit librepl), what do you think?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,824,2020-03-10T16:18:28Z,2020-03-31T21:47:13Z,2020-03-31T21:51:16Z,MERGED,True,769,1,8,https://github.com/BonusPlay,Create python REPL for debugging drakvuf,22,[],https://github.com/tklengyel/drakvuf/pull/824,https://github.com/BonusPlay,15,https://github.com/tklengyel/drakvuf/pull/824#issuecomment-604607865,"This PR adds easily embeddable IPython REPL for debugging drakvuf hooks.
Running: ctypesgen src/libdrakvuf/libdrakvuf.h -o src/librepl/libdrakvuf.py -I /usr/include -I /usr/include/glib-2.0 -I /lib/x86_64-linux-gnu/glib-2.0/include generated ctypes bindings for python, which are later imported by REPL. Would be nice to incorporate this command into build process.
This PR also includes a repl binary which runs standalone drakvuf and starts REPL on first CR3 breakpoint (to try it out).
Currently there is no way to modify vmi return code, so editing registers is not implemented, but this is a subject to change.","hmmm, exactly what I was talking about...",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,824,2020-03-10T16:18:28Z,2020-03-31T21:47:13Z,2020-03-31T21:51:16Z,MERGED,True,769,1,8,https://github.com/BonusPlay,Create python REPL for debugging drakvuf,22,[],https://github.com/tklengyel/drakvuf/pull/824,https://github.com/tklengyel,16,https://github.com/tklengyel/drakvuf/pull/824#issuecomment-604638353,"This PR adds easily embeddable IPython REPL for debugging drakvuf hooks.
Running: ctypesgen src/libdrakvuf/libdrakvuf.h -o src/librepl/libdrakvuf.py -I /usr/include -I /usr/include/glib-2.0 -I /lib/x86_64-linux-gnu/glib-2.0/include generated ctypes bindings for python, which are later imported by REPL. Would be nice to incorporate this command into build process.
This PR also includes a repl binary which runs standalone drakvuf and starts REPL on first CR3 breakpoint (to try it out).
Currently there is no way to modify vmi return code, so editing registers is not implemented, but this is a subject to change.","Adding a travis task sounds good to me, would be very appropriate",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,824,2020-03-10T16:18:28Z,2020-03-31T21:47:13Z,2020-03-31T21:51:16Z,MERGED,True,769,1,8,https://github.com/BonusPlay,Create python REPL for debugging drakvuf,22,[],https://github.com/tklengyel/drakvuf/pull/824,https://github.com/BonusPlay,17,https://github.com/tklengyel/drakvuf/pull/824#issuecomment-604644203,"This PR adds easily embeddable IPython REPL for debugging drakvuf hooks.
Running: ctypesgen src/libdrakvuf/libdrakvuf.h -o src/librepl/libdrakvuf.py -I /usr/include -I /usr/include/glib-2.0 -I /lib/x86_64-linux-gnu/glib-2.0/include generated ctypes bindings for python, which are later imported by REPL. Would be nice to incorporate this command into build process.
This PR also includes a repl binary which runs standalone drakvuf and starts REPL on first CR3 breakpoint (to try it out).
Currently there is no way to modify vmi return code, so editing registers is not implemented, but this is a subject to change.",I've added just debug build (as 99.99% of the time it will/should be used in that build) to not add too much stress to CI/CD.,True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,824,2020-03-10T16:18:28Z,2020-03-31T21:47:13Z,2020-03-31T21:51:16Z,MERGED,True,769,1,8,https://github.com/BonusPlay,Create python REPL for debugging drakvuf,22,[],https://github.com/tklengyel/drakvuf/pull/824,https://github.com/BonusPlay,18,https://github.com/tklengyel/drakvuf/pull/824#issuecomment-604676725,"This PR adds easily embeddable IPython REPL for debugging drakvuf hooks.
Running: ctypesgen src/libdrakvuf/libdrakvuf.h -o src/librepl/libdrakvuf.py -I /usr/include -I /usr/include/glib-2.0 -I /lib/x86_64-linux-gnu/glib-2.0/include generated ctypes bindings for python, which are later imported by REPL. Would be nice to incorporate this command into build process.
This PR also includes a repl binary which runs standalone drakvuf and starts REPL on first CR3 breakpoint (to try it out).
Currently there is no way to modify vmi return code, so editing registers is not implemented, but this is a subject to change.","Did take quite a few attempts, but hey - it works :)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,825,2020-03-11T02:00:24Z,2020-03-11T02:24:30Z,2020-03-11T02:24:33Z,MERGED,True,21,20,8,https://github.com/tklengyel,Coverity fixes,1,[],https://github.com/tklengyel/drakvuf/pull/825,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/825,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,826,2020-03-11T02:44:36Z,2020-03-11T04:13:35Z,2020-03-11T04:13:39Z,MERGED,True,21,10,5,https://github.com/tklengyel,Coverity fixes,1,[],https://github.com/tklengyel/drakvuf/pull/826,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/826,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,827,2020-03-11T16:08:16Z,2020-03-11T17:07:27Z,2020-03-11T17:07:33Z,MERGED,True,43,6,3,https://github.com/tklengyel,Fix make dist error and add Travis check for it,1,[],https://github.com/tklengyel/drakvuf/pull/827,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/827,"https://travis-ci.org/github/tklengyel/drakvuf/jobs/661137329
/cc @sasza8 @icedevml","https://travis-ci.org/github/tklengyel/drakvuf/jobs/661137329
/cc @sasza8 @icedevml",True,{'THUMBS_UP': ['https://github.com/icedevml']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,828,2020-03-12T00:18:58Z,2020-03-12T00:40:07Z,2020-03-12T00:40:07Z,MERGED,True,3,3,1,https://github.com/icedevml,filetracer: fix syntax errors in OUTPUT_JSON,1,[],https://github.com/tklengyel/drakvuf/pull/828,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/828,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,829,2020-03-12T00:40:29Z,2020-03-12T01:15:16Z,2020-03-12T01:15:18Z,MERGED,True,21,2,6,https://github.com/tklengyel,Print copyright notice in interactive mode,1,[],https://github.com/tklengyel/drakvuf/pull/829,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/829,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,830,2020-03-12T17:52:52Z,2020-03-13T03:11:16Z,2020-03-13T11:58:02Z,MERGED,True,23,14,7,https://github.com/icedevml,fix OUTPUT_JSON for various plugins,1,[],https://github.com/tklengyel/drakvuf/pull/830,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/830,"Fix syntax errors when outputting OUTPUT_JSON from apimon plugin
Introduce TID in printouts of some plugins","Fix syntax errors when outputting OUTPUT_JSON from apimon plugin
Introduce TID in printouts of some plugins",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,830,2020-03-12T17:52:52Z,2020-03-13T03:11:16Z,2020-03-13T11:58:02Z,MERGED,True,23,14,7,https://github.com/icedevml,fix OUTPUT_JSON for various plugins,1,[],https://github.com/tklengyel/drakvuf/pull/830,https://github.com/icedevml,2,https://github.com/tklengyel/drakvuf/pull/830#issuecomment-598419845,"Fix syntax errors when outputting OUTPUT_JSON from apimon plugin
Introduce TID in printouts of some plugins","Btw. at some point of time it would be nice to rewrite all OUTPUT_JSON printouts to json-c library, because JSON syntax errors are pretty common, especially when some code parts are being frequently changed. It is even easier to use a library instead of glue-ing the JSON manually and it's error-safe. I try to do so in some spare time.
We do have some automation that is getting through the JSON logs, so we need to patiently fix all the errors :P",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,830,2020-03-12T17:52:52Z,2020-03-13T03:11:16Z,2020-03-13T11:58:02Z,MERGED,True,23,14,7,https://github.com/icedevml,fix OUTPUT_JSON for various plugins,1,[],https://github.com/tklengyel/drakvuf/pull/830,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/830#issuecomment-598432440,"Fix syntax errors when outputting OUTPUT_JSON from apimon plugin
Introduce TID in printouts of some plugins","I agree, we should also have an issue tracking this",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,830,2020-03-12T17:52:52Z,2020-03-13T03:11:16Z,2020-03-13T11:58:02Z,MERGED,True,23,14,7,https://github.com/icedevml,fix OUTPUT_JSON for various plugins,1,[],https://github.com/tklengyel/drakvuf/pull/830,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/830#issuecomment-598433428,"Fix syntax errors when outputting OUTPUT_JSON from apimon plugin
Introduce TID in printouts of some plugins",related #832,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,831,2020-03-12T19:14:01Z,2020-03-12T20:49:48Z,2020-03-13T12:02:55Z,MERGED,True,8,2,1,https://github.com/icedevml,apimon: fix drakvuf_remove_trap in apimon,1,[],https://github.com/tklengyel/drakvuf/pull/831,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/831,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,833,2020-03-15T02:50:32Z,2020-03-16T02:51:59Z,2020-03-16T02:51:59Z,MERGED,True,42,1,1,https://github.com/kaganisildak,fix for ProcMon CommandLine Parse Problem,11,[],https://github.com/tklengyel/drakvuf/pull/833,https://github.com/kaganisildak,1,https://github.com/tklengyel/drakvuf/pull/833,"Normally, ProcMon tries to read the commandline information of the new created Process as ""Unicode"" via the ""CommandLine"" address from OS JSON Profile.
_EPROCESS->_PEB->ProcessParameters(_RTL_USER_PROCESS_PARAMETERS)->CommandLine
addr_t cmdline_addr = user_process_parameters_addr + f->command_line;

uses this way
However, in the OS JSON Profile file, CommandLine looks like a single field.
Normally, ProcMon does not have a problem and prints the CommandLine information, but if the CommandLine of the Process is long data, ProcMon cannot read and process it.(related to libvmi)
An error related to this was reported
#821
CommandLine(_UNICODE_STRING) has 3 fields on Windows systems.
  0xAAAAA0    Length                          [unsigned short:Length]: 0x1882
  0xAAAAA2    MaximumLength                   [unsigned short:MaximumLength]: 0x1884
  0xAAAAA8    Buffer                         <UnicodeString Pointer to [0x4d2608] (Buffer)>

The first 2 bytes show Buffer's length.
This patch processes and displays the data with the length of the CommandLine.
Without patch

With patch","Normally, ProcMon tries to read the commandline information of the new created Process as ""Unicode"" via the ""CommandLine"" address from OS JSON Profile.
_EPROCESS->_PEB->ProcessParameters(_RTL_USER_PROCESS_PARAMETERS)->CommandLine
addr_t cmdline_addr = user_process_parameters_addr + f->command_line;

uses this way
However, in the OS JSON Profile file, CommandLine looks like a single field.
Normally, ProcMon does not have a problem and prints the CommandLine information, but if the CommandLine of the Process is long data, ProcMon cannot read and process it.(related to libvmi)
An error related to this was reported
#821
CommandLine(_UNICODE_STRING) has 3 fields on Windows systems.
  0xAAAAA0    Length                          [unsigned short:Length]: 0x1882
  0xAAAAA2    MaximumLength                   [unsigned short:MaximumLength]: 0x1884
  0xAAAAA8    Buffer                         <UnicodeString Pointer to [0x4d2608] (Buffer)>

The first 2 bytes show Buffer's length.
This patch processes and displays the data with the length of the CommandLine.
Without patch

With patch",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,833,2020-03-15T02:50:32Z,2020-03-16T02:51:59Z,2020-03-16T02:51:59Z,MERGED,True,42,1,1,https://github.com/kaganisildak,fix for ProcMon CommandLine Parse Problem,11,[],https://github.com/tklengyel/drakvuf/pull/833,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/833#issuecomment-599160665,"Normally, ProcMon tries to read the commandline information of the new created Process as ""Unicode"" via the ""CommandLine"" address from OS JSON Profile.
_EPROCESS->_PEB->ProcessParameters(_RTL_USER_PROCESS_PARAMETERS)->CommandLine
addr_t cmdline_addr = user_process_parameters_addr + f->command_line;

uses this way
However, in the OS JSON Profile file, CommandLine looks like a single field.
Normally, ProcMon does not have a problem and prints the CommandLine information, but if the CommandLine of the Process is long data, ProcMon cannot read and process it.(related to libvmi)
An error related to this was reported
#821
CommandLine(_UNICODE_STRING) has 3 fields on Windows systems.
  0xAAAAA0    Length                          [unsigned short:Length]: 0x1882
  0xAAAAA2    MaximumLength                   [unsigned short:MaximumLength]: 0x1884
  0xAAAAA8    Buffer                         <UnicodeString Pointer to [0x4d2608] (Buffer)>

The first 2 bytes show Buffer's length.
This patch processes and displays the data with the length of the CommandLine.
Without patch

With patch",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,833,2020-03-15T02:50:32Z,2020-03-16T02:51:59Z,2020-03-16T02:51:59Z,MERGED,True,42,1,1,https://github.com/kaganisildak,fix for ProcMon CommandLine Parse Problem,11,[],https://github.com/tklengyel/drakvuf/pull/833,https://github.com/kaganisildak,3,https://github.com/tklengyel/drakvuf/pull/833#issuecomment-599166713,"Normally, ProcMon tries to read the commandline information of the new created Process as ""Unicode"" via the ""CommandLine"" address from OS JSON Profile.
_EPROCESS->_PEB->ProcessParameters(_RTL_USER_PROCESS_PARAMETERS)->CommandLine
addr_t cmdline_addr = user_process_parameters_addr + f->command_line;

uses this way
However, in the OS JSON Profile file, CommandLine looks like a single field.
Normally, ProcMon does not have a problem and prints the CommandLine information, but if the CommandLine of the Process is long data, ProcMon cannot read and process it.(related to libvmi)
An error related to this was reported
#821
CommandLine(_UNICODE_STRING) has 3 fields on Windows systems.
  0xAAAAA0    Length                          [unsigned short:Length]: 0x1882
  0xAAAAA2    MaximumLength                   [unsigned short:MaximumLength]: 0x1884
  0xAAAAA8    Buffer                         <UnicodeString Pointer to [0x4d2608] (Buffer)>

The first 2 bytes show Buffer's length.
This patch processes and displays the data with the length of the CommandLine.
Without patch

With patch","The root cause of the condition is related to libvmi.
ProcMon uses the ""drakvuf_read_unicode"" function to read the address.
When the function is called, the ""windows_read_unicode_struct_pm"" function compares the length  of Buffer and PageSize while reading the address.
   if ( buffer_len > VMI_PS_4KB ) {

    dbprint(VMI_DEBUG_READ, ""--%s: the length of %"" PRIu16 "" in the UNICODE_STRING at 0x%"" PRIx64 "" is excessive, bailing out.\n"",
    
    __FUNCTION__, buffer_len, ctx->addr);
    
    return NULL;

}

In short, you can deactivate the control here or increase the page size, to get more data about process during the monitor. (VMI_PS_16KB)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,833,2020-03-15T02:50:32Z,2020-03-16T02:51:59Z,2020-03-16T02:51:59Z,MERGED,True,42,1,1,https://github.com/kaganisildak,fix for ProcMon CommandLine Parse Problem,11,[],https://github.com/tklengyel/drakvuf/pull/833,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/833#issuecomment-599206994,"Normally, ProcMon tries to read the commandline information of the new created Process as ""Unicode"" via the ""CommandLine"" address from OS JSON Profile.
_EPROCESS->_PEB->ProcessParameters(_RTL_USER_PROCESS_PARAMETERS)->CommandLine
addr_t cmdline_addr = user_process_parameters_addr + f->command_line;

uses this way
However, in the OS JSON Profile file, CommandLine looks like a single field.
Normally, ProcMon does not have a problem and prints the CommandLine information, but if the CommandLine of the Process is long data, ProcMon cannot read and process it.(related to libvmi)
An error related to this was reported
#821
CommandLine(_UNICODE_STRING) has 3 fields on Windows systems.
  0xAAAAA0    Length                          [unsigned short:Length]: 0x1882
  0xAAAAA2    MaximumLength                   [unsigned short:MaximumLength]: 0x1884
  0xAAAAA8    Buffer                         <UnicodeString Pointer to [0x4d2608] (Buffer)>

The first 2 bytes show Buffer's length.
This patch processes and displays the data with the length of the CommandLine.
Without patch

With patch",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,834,2020-03-15T03:12:35Z,2020-03-15T13:57:01Z,2020-03-15T13:57:01Z,MERGED,True,2,2,1,https://github.com/kaganisildak,Minor correction in output format,1,[],https://github.com/tklengyel/drakvuf/pull/834,https://github.com/kaganisildak,1,https://github.com/tklengyel/drakvuf/pull/834,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,834,2020-03-15T03:12:35Z,2020-03-15T13:57:01Z,2020-03-15T13:57:01Z,MERGED,True,2,2,1,https://github.com/kaganisildak,Minor correction in output format,1,[],https://github.com/tklengyel/drakvuf/pull/834,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/834#issuecomment-599162028,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,834,2020-03-15T03:12:35Z,2020-03-15T13:57:01Z,2020-03-15T13:57:01Z,MERGED,True,2,2,1,https://github.com/kaganisildak,Minor correction in output format,1,[],https://github.com/tklengyel/drakvuf/pull/834,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/834#issuecomment-599205629,,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,835,2020-03-16T16:43:30Z,2020-03-16T22:34:29Z,2020-03-16T22:53:08Z,MERGED,True,30,10,9,https://github.com/icedevml,add -k switch that allows to provide KPGD value manually,3,[],https://github.com/tklengyel/drakvuf/pull/835,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/835,"In some situations, LibVMI doesn't always detect KPGD value in robust way. If somebody is operating in conditions where KPGD is well-known (e.g. DRAKVUF is continously being ran against VM with the same snapshot), the value may manually forced using -k <kpgd value> switch.","In some situations, LibVMI doesn't always detect KPGD value in robust way. If somebody is operating in conditions where KPGD is well-known (e.g. DRAKVUF is continously being ran against VM with the same snapshot), the value may manually forced using -k <kpgd value> switch.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,835,2020-03-16T16:43:30Z,2020-03-16T22:34:29Z,2020-03-16T22:53:08Z,MERGED,True,30,10,9,https://github.com/icedevml,add -k switch that allows to provide KPGD value manually,3,[],https://github.com/tklengyel/drakvuf/pull/835,https://github.com/icedevml,2,https://github.com/tklengyel/drakvuf/pull/835#issuecomment-599677468,"In some situations, LibVMI doesn't always detect KPGD value in robust way. If somebody is operating in conditions where KPGD is well-known (e.g. DRAKVUF is continously being ran against VM with the same snapshot), the value may manually forced using -k <kpgd value> switch.",@tklengyel Ready to review.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,836,2020-03-17T00:31:20Z,2020-03-17T01:38:12Z,2020-03-17T01:38:16Z,MERGED,True,14,0,1,https://github.com/tklengyel,Add syscalls filter used by CI,1,[],https://github.com/tklengyel/drakvuf/pull/836,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/836,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,836,2020-03-17T00:31:20Z,2020-03-17T01:38:12Z,2020-03-17T01:38:16Z,MERGED,True,14,0,1,https://github.com/tklengyel,Add syscalls filter used by CI,1,[],https://github.com/tklengyel/drakvuf/pull/836,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/836#issuecomment-599822955,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/837,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.","This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.",True,{'THUMBS_UP': ['https://github.com/kaganisildak']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-601724013,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-601728756,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.","@skvl I don't have time to read this throughly at the moment, but could you please point out what is the difference between memdump and procdump?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/skvl,4,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-601731636,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.","@icedevml, memdump dumps memory buffers of Nt*VirtualMemory functions. procdump dumps whole process's virtual address space on process termination. It would be similar to WinDbg after we add MiniDump format to it (I hope to add this in near feature).",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/icedevml,5,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-601733758,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.",@skvl Memdump also dumps some interesting buffers on process termination (see NtTerminateProcess hook). There could be some switch that would change this behavior so it dumps the whole address space.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/skvl,6,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-601737293,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.","Memory dumps are interesting by their own (and yes it dumps some regions which are pointed from stack on process termination).
I decided not to overload it with other big functionality.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/skvl,7,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-601759348,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.","@tklengyel I don't understand the errors left:

scan-build works on my machine
make dist not works but I don't know why",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-601782817,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.","scan-build works on my machine

procdump/procdump.cpp:647:13: warning: Attempt to free released memory

            delete[] buf;

            ^~~~~~~~~~~~

1 warning generated.


make dist not works but I don't know why

make[3]: *** No rule to make target 'procdump/private.h', needed by 'distdir'.  Stop.

You likely forgot to add this file to Makefile.am",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-601802699,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.","@skvl Could you split this PR into separate ones for these?

Add procdump plugin to dump processes memory
Refactor filedelete plugin
Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/skvl,10,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-601804729,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.",@tklengyel I could. But it would be hard to retest each such branch for me. This resulting one was well tested.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-601916703,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.",Bundling so many unrelated changes into a single PR just makes reviewing it unnecessarily hard. Some of these changes sound pretty straight forward and probably could get merged faster if they were split out.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/tklengyel,12,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-601922573,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/skvl,13,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-602470617,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.",@tklengyel I will try to split the PR.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/tklengyel,14,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-602753215,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.","Once the LibVMI PR is merged, please update the submodule in this PR to point to the master branch commit. Otherwise things will break when the PR is merged and the branch is deleted because the commit's hash will be different in master.",True,{'THUMBS_UP': ['https://github.com/skvl']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/tklengyel,15,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-602802089,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/skvl,16,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-602840333,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.",@tklengyel what's the error?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/tklengyel,17,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-603553544,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.",I haven't updated LibVMI on the jenkins server yet. Will do it later today.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/tklengyel,18,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-603607222,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/icedevml,19,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-603610157,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.",I would really want to spend some time looking especially at the part related to MMVAD. I will try to look at it within tomorrow.,True,"{'THUMBS_UP': ['https://github.com/tklengyel', 'https://github.com/skvl']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/tklengyel,20,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-603611412,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.","@icedevml Sounds good, no rush from my side. With the lockdown and the kid being home 24/7 my time to review things is extremely limited at this point.",True,{'THUMBS_UP': ['https://github.com/skvl']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/icedevml,21,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-605716827,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.","@skvl I've read the MMVAD-related part in libdrakvuf, it looks really cool, a lot of hard work for sure :)
I'm trying to test the procdump plugin with Win7 x64 guest, but I can't trigger the actual dump. I'm launching and closing various programs inside the VM and the terminate_process_cb actually hits, but it always returns prematurely through one of these two lines:


  
    
      drakvuf/src/plugins/procdump/procdump.cpp
    
    
         Line 657
      in
      a200b1d
    
  
  
    

        
          
           return VMI_EVENT_RESPONSE_NONE; 
        
    
  



  
    
      drakvuf/src/plugins/procdump/procdump.cpp
    
    
         Line 678
      in
      a200b1d
    
  
  
    

        
          
           return VMI_EVENT_RESPONSE_NONE; 
        
    
  



so there are either ""no vads"" at all, or the process was already seen. I suppose this is a bug that it doesn't detect VADs at all?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/skvl,22,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-606502645,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.","@icedevml thank you very much.
I'm using procdump with Windows 7 x86, Windows 7 x64 and Windows 10 build 1803 x64. It works for me. You should notice that there are some time gap between start of dumping the process and it's end.
Though I will retest it in few ours.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/skvl,23,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-606512255,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.","@icedevml I've retested it with Windows 7 x64 and Windows 10 build 1803 x64 like this at commit a200b1d:
/home/user/src/drakvuf/src//drakvuf -d trap -r /mnt/images/tmp-win7-sp1-x64/rekall/kernel.json -o kv --procdump-dir /tmp/zms-1
I've received messages like this:
procdump Time=1585647018.488215,PID=2336,PPID=1352,ProcessName=""\Device\HarddiskVolume2\Windows\System32\calc.exe"",DumpReason=""TerminateProcess"",DumpSize=40767488,SN=0",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/skvl,24,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-606636763,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.",@icedevml I found a bug here. In some cases I have returned a 0 if failed to get attached process. I make it return owning process on every error. It is possible that this error have affected you.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/skvl,25,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-606644897,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.",@tklengyel I don't understand the reason of the error. I don't see any duplication in os.h. And I successfully build this branch myself (see it),True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/tklengyel,26,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-606717550,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.",You should rebase on the latest master. Likely the automatic merge to master introduces the problem.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/skvl,27,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-607137244,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.","You should rebase on the latest master. Likely the automatic merge to master introduces the problem.

Done!
But the error doesn't appear.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/tklengyel,28,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-607377669,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.","Well, I checked out your branch it most definitely doesn't compile, so the error is not in the CI. Make sure you do a git clean -xdf before you rebuild from scratch.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/skvl,29,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-607699090,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.",@tklengyel I have found the issue. You have added the very same function as me (aka get_process_dtb) :),True,{'LAUGH': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/icedevml,30,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-607753195,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.","@skvl Thanks for patches, I will re-test it with my VM.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/skvl,31,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-607825106,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.",Thank You very much,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/tklengyel,32,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-609823495,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.","@icedevml this looks good to me, let me know if you finished your tests",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/icedevml,33,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-610055922,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.","@tklengyel Ok, I'm catching up just right now. Going to look at it soon.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/icedevml,34,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-610083357,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.","@skvl I'm afraid that the issue with Windows 7 x64 persists.
I did some tests and drakvuf_traverse_mmvad(...) is always returning empty vads, because the argument callback dump_mmvad always returns prematurely, because drakvuf_mmvad_commit_charge(...) returns 0 for each found VAD.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/skvl,35,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-610284274,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.","@icedevml thank you for you efforts!
I will describe step by step what I do and what logs I get for better comparison.

Switch to procdump branch at current point (c447b28)
Build it:

./autogen.sh
./configure --enable-debug --disable-plugin-apimon --disable-plugin-bsodmon --disable-plugin-clipboardmon --disable-plugin-cpuidmon --disable-plugin-crashmon --disable-plugin-debugmon --disable-plugin-delaymon --disable-plugin-dkommon --disable-plugin-envmon --disable-plugin-exmon --disable-plugin-filedelete --disable-plugin-filetracer --disable-plugin-librarymon --disable-plugin-memdump --disable-plugin-objmon --disable-plugin-poolmon --disable-plugin-procmon --disable-plugin-regmon --disable-plugin-socketmon --disable-plugin-ssdtmon --disable-plugin-syscalls --disable-plugin-windowmon --disable-plugin-wmimon 
make

Run Windows 7 SP1 x64
Run drakvuf:

stdbuf -e0 -o0 sudo /home/skovalev/src/drakvuf/src/drakvuf -d trap -r /mnt/images/tmp-win7-sp1-x64/rekall/kernel.json -o kv --procdump-dir /tmp/zms-1 -v
After that I have this in STDOUT:
procdump Time=1586252000.829414,PID=1928,PPID=1352,ProcessName=""\Device\HarddiskVolume2\Windows\System32\calc.exe"",DumpReason=""TerminateProcess"",DumpSize=40767488,SN=0

And this in STDERR:
1586252000.223994 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x           20, 0x           20 (    1 PTEs,       4096 bytes), MemCommit 1, VadType 0, CommitCharge 0x1
1586252000.224624 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x           50, 0x           50 (    1 PTEs,       4096 bytes), MemCommit 1, VadType 0, CommitCharge 0x1
1586252000.224947 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x           d0, 0x          100 (   49 PTEs,     200704 bytes), MemCommit 0, VadType 0, CommitCharge 0x31
1586252000.225031 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x          110, 0x          110 (    1 PTEs,       4096 bytes), MemCommit 1, VadType 0, CommitCharge 0x1
1586252000.225258 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x          120, 0x          120 (    1 PTEs,       4096 bytes), MemCommit 1, VadType 0, CommitCharge 0x1
1586252000.225333 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x          140, 0x          14f (   16 PTEs,      65536 bytes), MemCommit 0, VadType 0, CommitCharge 0x10
1586252000.225475 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x          150, 0x          150 (    1 PTEs,       4096 bytes), MemCommit 1, VadType 0, CommitCharge 0x1
1586252000.225556 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x          1b0, 0x          22f (  128 PTEs,     524288 bytes), MemCommit 0, VadType 0, CommitCharge 0x9
1586252000.225958 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x          2d0, 0x          3cf (  256 PTEs,    1048576 bytes), MemCommit 0, VadType 0, CommitCharge 0x63
1586252000.226035 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x          3d0, 0x          4cf (  256 PTEs,    1048576 bytes), MemCommit 0, VadType 0, CommitCharge 0x28
1586252000.237646 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x         1db0, 0x         1e2f (  128 PTEs,     524288 bytes), MemCommit 0, VadType 0, CommitCharge 0x2
1586252000.237664 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x         1f60, 0x         1fdf (  128 PTEs,     524288 bytes), MemCommit 0, VadType 0, CommitCharge 0x21
1586252000.237708 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x         22b0, 0x         23af (  256 PTEs,    1048576 bytes), MemCommit 0, VadType 0, CommitCharge 0x1
1586252000.237923 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x         24e0, 0x         255f (  128 PTEs,     524288 bytes), MemCommit 0, VadType 0, CommitCharge 0x4
1586252000.238026 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x        76fb0, 0x        770ce (  287 PTEs,    1175552 bytes), MemCommit 0, VadType 2, CommitCharge 0x4
1586252000.238097 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x        770d0, 0x        771c9 (  250 PTEs,    1024000 bytes), MemCommit 0, VadType 2, CommitCharge 0x3
1586252000.238133 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x        771d0, 0x        77378 (  425 PTEs,    1740800 bytes), MemCommit 0, VadType 2, CommitCharge 0xc
1586252000.238390 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x        ffb90, 0x        ffc72 (  227 PTEs,     929792 bytes), MemCommit 0, VadType 2, CommitCharge 0x6
1586252000.238411 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x     7fef93d0, 0x     7fef940a (   59 PTEs,     241664 bytes), MemCommit 0, VadType 2, CommitCharge 0x5
1586252000.238493 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x     7fefb380, 0x     7fefb4a9 (  298 PTEs,    1220608 bytes), MemCommit 0, VadType 2, CommitCharge 0x7
1586252000.238541 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x     7fefb990, 0x     7fefbba4 (  533 PTEs,    2183168 bytes), MemCommit 0, VadType 2, CommitCharge 0xc
1586252000.238643 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x     7fefbbb0, 0x     7fefbc05 (   86 PTEs,     352256 bytes), MemCommit 0, VadType 2, CommitCharge 0x4
1586252000.238664 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x     7fefbd90, 0x     7fefbf83 (  500 PTEs,    2048000 bytes), MemCommit 0, VadType 2, CommitCharge 0x6
1586252000.238721 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x     7fefc280, 0x     7fefc28b (   12 PTEs,      49152 bytes), MemCommit 0, VadType 2, CommitCharge 0x2
1586252000.238780 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x     7fefd010, 0x     7fefd01e (   15 PTEs,      61440 bytes), MemCommit 0, VadType 2, CommitCharge 0x2
1586252000.238797 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x     7fefd480, 0x     7fefd4ea (  107 PTEs,     438272 bytes), MemCommit 0, VadType 2, CommitCharge 0x3
1586252000.238991 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x     7fefd570, 0x     7fefd678 (  265 PTEs,    1085440 bytes), MemCommit 0, VadType 2, CommitCharge 0x4
1586252000.239011 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x     7fefd800, 0x     7fefd81e (   31 PTEs,     126976 bytes), MemCommit 0, VadType 2, CommitCharge 0x4
1586252000.239022 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x     7fefd820, 0x     7fefd8f6 (  215 PTEs,     880640 bytes), MemCommit 0, VadType 2, CommitCharge 0x4
1586252000.239090 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x     7fefd900, 0x     7fefda2c (  301 PTEs,    1232896 bytes), MemCommit 0, VadType 2, CommitCharge 0x3
1586252000.239110 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x     7fefda30, 0x     7fefda3d (   14 PTEs,      57344 bytes), MemCommit 0, VadType 2, CommitCharge 0x2
1586252000.239324 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x     7fefdca0, 0x     7fefdd7a (  219 PTEs,     897024 bytes), MemCommit 0, VadType 2, CommitCharge 0x7
1586252000.239345 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x     7fefde20, 0x     7fefdebe (  159 PTEs,     651264 bytes), MemCommit 0, VadType 2, CommitCharge 0x7
1586252000.239357 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x     7fefded0, 0x     7fefdf40 (  113 PTEs,     462848 bytes), MemCommit 0, VadType 2, CommitCharge 0x3
1586252000.239427 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x     7fefdf70, 0x     7fefe008 (  153 PTEs,     626688 bytes), MemCommit 0, VadType 2, CommitCharge 0x7
1586252000.239448 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x     7fefe190, 0x     7fefe258 (  201 PTEs,     823296 bytes), MemCommit 0, VadType 2, CommitCharge 0x4
1586252000.239530 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x     7fefe260, 0x     7fefe462 (  515 PTEs,    2109440 bytes), MemCommit 0, VadType 2, CommitCharge 0x9
1586252000.239712 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x     7fefe650, 0x     7feff3d7 ( 3464 PTEs,   14188544 bytes), MemCommit 0, VadType 2, CommitCharge 0xd
1586252000.239855 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x     7feff3e0, 0x     7feff446 (  103 PTEs,     421888 bytes), MemCommit 0, VadType 2, CommitCharge 0x3
1586252000.239886 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x     7feff450, 0x     7feff47d (   46 PTEs,     188416 bytes), MemCommit 0, VadType 2, CommitCharge 0x3
1586252000.239973 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x     7fffffd8, 0x     7fffffd9 (    2 PTEs,       8192 bytes), MemCommit 1, VadType 0, CommitCharge 0x2
1586252000.239991 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x     7fffffdc, 0x     7fffffdd (    2 PTEs,       8192 bytes), MemCommit 1, VadType 0, CommitCharge 0x2
1586252000.240018 [PID:1928] [\Device\HarddiskVolume2\Windows\System32\calc.exe] MMVAD 0x     7fffffde, 0x     7fffffde (    1 PTEs,       4096 bytes), MemCommit 1, VadType 0, CommitCharge 0x1
1586252000.240033 [PROCDUMP] [""terminate_process_cb"": 664] [PID:1928] [TID:3032] [""\Device\HarddiskVolume2\Windows\System32\calc.exe""] Dump 0x26e1000 (38 MiB, 43 VADs) SN=0

And this files:
$ ls -la /tmp/zms-1
total 35220
drwxrwxr-x  2 skovalev skovalev     4096 Apr  7 09:33 .
drwxrwxrwt 91 root     root        12288 Apr  7 09:35 ..
-rw-r--r--  1 root     root          175 Apr  7 09:33 procdump.0.metadata
-rw-r--r--  1 root     root     36044800 Apr  7 09:33 procdump.0.mm",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/skvl,36,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-610299624,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.","I have noticed a BSOD on c447b28. Previous commit works. So I have to rework this commit.
Though I collect procdumps with this commit before BSOD. @icedevml could you please check it as I wrote earlier? You could use commit 68b96f6.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/skvl,37,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-610338566,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.","I have fixed the errors:

VMI_GET_BIT bit positions
memory corruption error introduced by switch to GLib slices",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/skvl,38,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-610774857,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.","@icedevml do you test it with Volatility?
I still use Rekall. I don't have any Volatility profile to test bitfield access functions. This is possible reason of the error.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/skvl,39,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-610810602,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.","I could confirm that with volatility 3 profile I receive messages:
1586332289.945904 Failed to find offsets for array of structure names and subsymbols.
1586332289.945917 Failed to find offsets for array of bitfields.
1586332289.945925 Failed to find offsets for array of bitfields.
1586332289.945932 Failed to find offsets for array of bitfields.
1586332289.945938 Failed to find offsets for array of bitfields.
1586332289.945945 Failed to find offsets for array of bitfields.
1586332289.945952 Failed to find offsets for array of bitfields.
1586332289.945959 Failed to find offsets for array of bitfields.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/skvl,40,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-610856483,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.",I have fixed an error in LibVMI volatility_profile_bitfield_offset_and_size: libvmi/libvmi#890,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/icedevml,41,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-610886743,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.","@icedevml do you test it with Volatility?
I still use Rekall. I don't have any Volatility profile to test bitfield access functions. This is possible reason of the error.

Ah. May be the case. I think the profile I'm using was generated out of CERT-Polska/drakpdb which doesn't support bitfields.
I will check with Rekall profile.",True,"{'THUMBS_UP': ['https://github.com/skvl', 'https://github.com/tklengyel']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/tklengyel,42,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-611281396,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.","@skvl I've merged the LibVMI PR, can you update the submodule to the latest master here? Thanks",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/skvl,43,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-611505207,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.","@tklengyel thank you very much.
Done.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/icedevml,44,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-611579606,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.","Ok, trying the latest version with Rekall profile just right now.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/icedevml,45,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-611769548,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.","@skvl It's a pity but I can't manage to install Rekall o_O Already tried on three different distributions, but in each case there are some random errors and I'm unable to start it (and it looks like a lot of debugging is required).
Also, Rekall was dropped in DRAKVUF and superseded by Volatility, so in general I think that plugins should be mostly tested against profiles that are generated by Volatility.
Moreover, I see that win_find_mmvad was reimplemented within this PR. Will it still work even with kernel profiles that doesn't have bitfields? This is extremely important because if not, then a few plugins will not work properly under current recommended setup (I mean the install instructions on drakvuf.com).",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/tklengyel,46,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-611773686,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.","@skvl It's a pity but I can't manage to install Rekall o_O Already tried on three different distributions, but in each case there are some random errors and I'm unable to start it (and it looks like a lot of debugging is required).

FYI this worked for me in the past https://github.com/tklengyel/drakvuf/wiki/Rekall's-JSON-profiles",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/skvl,47,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-612011553,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.","@icedevml I have successfully tested it with Volatility 3 too.
Rekall from repos (like in Ubuntu) been broken many times. Last time I have installed it from source code.",True,"{'THUMBS_UP': ['https://github.com/tklengyel', 'https://github.com/icedevml']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/skvl,48,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-612013176,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.","@tklengyel, @icedevml, for your interest, at the time I'm in the process of adding MiniDump format support to procdumps to aid in investigations.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/tklengyel,49,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-612116897,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.",Producing minidump formatted files would certainly be useful!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/skvl,50,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-612363811,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.",@icedevml thank you very much!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/tklengyel,51,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-612425496,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.","@skvl
New defect(s) Reported-by: Coverity Scan
Showing 2 of 2 defect(s)


** CID 279851:  Uninitialized members  (UNINIT_CTOR)
/src/plugins/procdump/procdump.cpp: 741 in procdump::procdump(drakvuf *, const procdump_config *, output_format_t)()


________________________________________________________________________________________________________
*** CID 279851:  Uninitialized members  (UNINIT_CTOR)
/src/plugins/procdump/procdump.cpp: 741 in procdump::procdump(drakvuf *, const procdump_config *, output_format_t)()
735         , traps(nullptr)
736         , procdumps_count(0)
737         , pools()
738         , terminating()
739     {
740         if (!config->procdump_dir)
>>>     CID 279851:  Uninitialized members  (UNINIT_CTOR)
>>>     Non-static class member ""memcpy_va"" is not initialized in this constructor nor in any functions that it calls.
741             return;
742         else
743             procdump_dir = std::string(config->procdump_dir);
744     
745         this->malloc_va =
746             get_function_va(drakvuf, ""ntoskrnl.exe"", ""ExAllocatePoolWithTag"");

** CID 279850:  Error handling issues  (CHECKED_RETURN)
/src/libdrakvuf/vmi.c: 228 in post_mem_cb()


________________________________________________________________________________________________________
*** CID 279850:  Error handling issues  (CHECKED_RETURN)
/src/libdrakvuf/vmi.c: 228 in post_mem_cb()
222                     .trap_pa = pass->pa,
223                     .regs = event->x86_regs,
224                     .vcpu = event->vcpu_id,
225                 };
226     
227                 if (!trap_info.proc_data.tid)
>>>     CID 279850:  Error handling issues  (CHECKED_RETURN)
>>>     Calling ""drakvuf_get_current_thread_id"" without checking return value (as is done elsewhere 9 out of 10 times).
228                     drakvuf_get_current_thread_id(drakvuf, &trap_info, &trap_info.proc_data.tid);
229     
230                 g_get_current_time(&trap_info.timestamp);
231     
232                 rsp |= trap->cb(drakvuf, &trap_info);
233             }",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/skvl,52,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-612752093,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.","@tklengyel, I have fixed first issue in #840
Second issue is more interesting. In this line there is no check for return value too but Coverity doesn't comply. So I don't know what it is supposed to do if getting thread id fails.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,837,2020-03-20T14:18:12Z,2020-04-11T13:34:16Z,2020-04-13T14:31:48Z,MERGED,True,1751,97,25,https://github.com/skvl,"Add plugin to dump process memory, fix errors, refactoring",15,[],https://github.com/tklengyel/drakvuf/pull/837,https://github.com/tklengyel,53,https://github.com/tklengyel/drakvuf/pull/837#issuecomment-612923170,"This PR depends on libvmi/libvmi#888
This is an accumulative PR with bunch of work:

Add procdump plugin to dump processes memory
There are some things to do: add MiniDump file format, refactor code to use bitfields
Refactor filedelete plugin:

Use single prefix fileextractor because it extracts new and modified files too (maybe we should rename plugin to fileextractor too)
Cleanup messages
In the past up to three messages were printed for single extracted files (fileextractor_failure, filiedelete and fileextractor).
That was for historical reasons when I tried to develop filedelete2 plugin. Now failures are printed to stderr, filedelete and fileextractor messages have been merged together.
Print file extraction reason (WreiteFile or DeleteFile)


Fix minor bug in memdump plugin and perform some refactoring
Pass through injection status from linbinjector to separate drakvuf error from sample's error
If you run bad sample (e.g. x64 sample on x86 VM) then Windows returns error code.","All return values should be checked, the ones that aren't have open coverity tickets for them. It doesn't complain about it over and over as long as the ticket is open. If there is nothing to be done, then simply printing a debug line would suffice.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,838,2020-03-21T17:59:55Z,2020-03-28T03:02:51Z,2020-03-28T03:02:54Z,MERGED,True,2986,615,18,https://github.com/tklengyel,Rework syscall monitoring and monitor sysrets,1,[],https://github.com/tklengyel/drakvuf/pull/838,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/838,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,838,2020-03-21T17:59:55Z,2020-03-28T03:02:51Z,2020-03-28T03:02:54Z,MERGED,True,2986,615,18,https://github.com/tklengyel,Rework syscall monitoring and monitor sysrets,1,[],https://github.com/tklengyel/drakvuf/pull/838,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/838#issuecomment-602792987,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,838,2020-03-21T17:59:55Z,2020-03-28T03:02:51Z,2020-03-28T03:02:54Z,MERGED,True,2986,615,18,https://github.com/tklengyel,Rework syscall monitoring and monitor sysrets,1,[],https://github.com/tklengyel/drakvuf/pull/838,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/838#issuecomment-605383551,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,840,2020-03-26T11:31:25Z,2020-04-15T14:58:58Z,2020-05-13T12:55:20Z,MERGED,True,382,199,9,https://github.com/skvl,filedelete: hook NtCreateFile/NtOpenFile,6,[],https://github.com/tklengyel/drakvuf/pull/840,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/840,"It is possible to pass FILE_DELETE_ON_CLOSE flag in CreateOptions/OpenOptions to delete file.
Use attached process to make it more accurate","It is possible to pass FILE_DELETE_ON_CLOSE flag in CreateOptions/OpenOptions to delete file.
Use attached process to make it more accurate",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,840,2020-03-26T11:31:25Z,2020-04-15T14:58:58Z,2020-05-13T12:55:20Z,MERGED,True,382,199,9,https://github.com/skvl,filedelete: hook NtCreateFile/NtOpenFile,6,[],https://github.com/tklengyel/drakvuf/pull/840,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/840#issuecomment-604378632,"It is possible to pass FILE_DELETE_ON_CLOSE flag in CreateOptions/OpenOptions to delete file.
Use attached process to make it more accurate",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,840,2020-03-26T11:31:25Z,2020-04-15T14:58:58Z,2020-05-13T12:55:20Z,MERGED,True,382,199,9,https://github.com/skvl,filedelete: hook NtCreateFile/NtOpenFile,6,[],https://github.com/tklengyel/drakvuf/pull/840,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/840#issuecomment-604478714,"It is possible to pass FILE_DELETE_ON_CLOSE flag in CreateOptions/OpenOptions to delete file.
Use attached process to make it more accurate",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,840,2020-03-26T11:31:25Z,2020-04-15T14:58:58Z,2020-05-13T12:55:20Z,MERGED,True,382,199,9,https://github.com/skvl,filedelete: hook NtCreateFile/NtOpenFile,6,[],https://github.com/tklengyel/drakvuf/pull/840,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/840#issuecomment-604495200,"It is possible to pass FILE_DELETE_ON_CLOSE flag in CreateOptions/OpenOptions to delete file.
Use attached process to make it more accurate",The PR has unrelated commits,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,840,2020-03-26T11:31:25Z,2020-04-15T14:58:58Z,2020-05-13T12:55:20Z,MERGED,True,382,199,9,https://github.com/skvl,filedelete: hook NtCreateFile/NtOpenFile,6,[],https://github.com/tklengyel/drakvuf/pull/840,https://github.com/skvl,5,https://github.com/tklengyel/drakvuf/pull/840#issuecomment-605055656,"It is possible to pass FILE_DELETE_ON_CLOSE flag in CreateOptions/OpenOptions to delete file.
Use attached process to make it more accurate","The PR has unrelated commits

I know. This is based on procdump brunch. I will rebase it after procdump would be merged.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,840,2020-03-26T11:31:25Z,2020-04-15T14:58:58Z,2020-05-13T12:55:20Z,MERGED,True,382,199,9,https://github.com/skvl,filedelete: hook NtCreateFile/NtOpenFile,6,[],https://github.com/tklengyel/drakvuf/pull/840,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/840#issuecomment-613212482,"It is possible to pass FILE_DELETE_ON_CLOSE flag in CreateOptions/OpenOptions to delete file.
Use attached process to make it more accurate",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,840,2020-03-26T11:31:25Z,2020-04-15T14:58:58Z,2020-05-13T12:55:20Z,MERGED,True,382,199,9,https://github.com/skvl,filedelete: hook NtCreateFile/NtOpenFile,6,[],https://github.com/tklengyel/drakvuf/pull/840,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/840#issuecomment-614100098,"It is possible to pass FILE_DELETE_ON_CLOSE flag in CreateOptions/OpenOptions to delete file.
Use attached process to make it more accurate","New defect(s) Reported-by: Coverity Scan
Showing 1 of 1 defect(s)


** CID 284472:  Null pointer dereferences  (FORWARD_NULL)


________________________________________________________________________________________________________
*** CID 284472:  Null pointer dereferences  (FORWARD_NULL)
/src/plugins/filedelete/filedelete.cpp: 423 in save_file_metadata(filedelete *, const char *, const drakvuf_trap_info *, int, unsigned long, const char *, file_extraction_reason, unsigned long, unsigned long, unsigned int)()
417         }
418     
419         fprintf(fp, ""%s\n"", json_object_get_string(jobj));
420         fclose(fp);
421     
422         json_object_put(jobj);
>>>     CID 284472:  Null pointer dereferences  (FORWARD_NULL)
>>>     Passing null pointer ""filename"" to ""print_filedelete_information"", which dereferences it.
423         print_filedelete_information(f, userid_str, info, filename, reason,
424                                      file_size, fo_flags, sequence_number);
425     }
426     
427     static void extract_ca_file(filedelete* f,
428                                 drakvuf_t drakvuf,",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,840,2020-03-26T11:31:25Z,2020-04-15T14:58:58Z,2020-05-13T12:55:20Z,MERGED,True,382,199,9,https://github.com/skvl,filedelete: hook NtCreateFile/NtOpenFile,6,[],https://github.com/tklengyel/drakvuf/pull/840,https://github.com/skvl,8,https://github.com/tklengyel/drakvuf/pull/840#issuecomment-614116572,"It is possible to pass FILE_DELETE_ON_CLOSE flag in CreateOptions/OpenOptions to delete file.
Use attached process to make it more accurate","@tklengyel, I have fixed this in 280bfed",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,841,2020-03-26T11:34:31Z,2020-04-16T16:03:50Z,2020-05-13T12:55:40Z,MERGED,True,68,36,10,https://github.com/skvl,libinjector: return injection status,4,[],https://github.com/tklengyel/drakvuf/pull/841,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/841,"Sometimes drakvuf fails to inject because of invalid sample (e.g. x64 sample
for x86 VM). This allows to distinguish such situations.","Sometimes drakvuf fails to inject because of invalid sample (e.g. x64 sample
for x86 VM). This allows to distinguish such situations.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,841,2020-03-26T11:34:31Z,2020-04-16T16:03:50Z,2020-05-13T12:55:40Z,MERGED,True,68,36,10,https://github.com/skvl,libinjector: return injection status,4,[],https://github.com/tklengyel/drakvuf/pull/841,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/841#issuecomment-604379878,"Sometimes drakvuf fails to inject because of invalid sample (e.g. x64 sample
for x86 VM). This allows to distinguish such situations.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,841,2020-03-26T11:34:31Z,2020-04-16T16:03:50Z,2020-05-13T12:55:40Z,MERGED,True,68,36,10,https://github.com/skvl,libinjector: return injection status,4,[],https://github.com/tklengyel/drakvuf/pull/841,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/841#issuecomment-604479092,"Sometimes drakvuf fails to inject because of invalid sample (e.g. x64 sample
for x86 VM). This allows to distinguish such situations.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,841,2020-03-26T11:34:31Z,2020-04-16T16:03:50Z,2020-05-13T12:55:40Z,MERGED,True,68,36,10,https://github.com/skvl,libinjector: return injection status,4,[],https://github.com/tklengyel/drakvuf/pull/841,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/841#issuecomment-604495435,"Sometimes drakvuf fails to inject because of invalid sample (e.g. x64 sample
for x86 VM). This allows to distinguish such situations.",The PR has unrelated commits,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,841,2020-03-26T11:34:31Z,2020-04-16T16:03:50Z,2020-05-13T12:55:40Z,MERGED,True,68,36,10,https://github.com/skvl,libinjector: return injection status,4,[],https://github.com/tklengyel/drakvuf/pull/841,https://github.com/skvl,5,https://github.com/tklengyel/drakvuf/pull/841#issuecomment-605055881,"Sometimes drakvuf fails to inject because of invalid sample (e.g. x64 sample
for x86 VM). This allows to distinguish such situations.","The PR has unrelated commits

I know. This is based on filedelete-refactor brunch. I will rebase it after filedelete-refactor would be merged.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,841,2020-03-26T11:34:31Z,2020-04-16T16:03:50Z,2020-05-13T12:55:40Z,MERGED,True,68,36,10,https://github.com/skvl,libinjector: return injection status,4,[],https://github.com/tklengyel/drakvuf/pull/841,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/841#issuecomment-613212517,"Sometimes drakvuf fails to inject because of invalid sample (e.g. x64 sample
for x86 VM). This allows to distinguish such situations.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,842,2020-03-28T23:09:05Z,2020-03-29T03:05:21Z,2020-03-29T03:05:23Z,MERGED,True,6488,5480,6,https://github.com/tklengyel,Store syscall definitions in custom structs,1,[],https://github.com/tklengyel/drakvuf/pull/842,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/842,"The previous single-array setup required a 17-sized arg array to be allocated for each syscall, which was just a waste of memory. With a bit of macro-magic we just create a separate struct for each syscall & have a syscall argument struct for each, then collect their pointers into an array.","The previous single-array setup required a 17-sized arg array to be allocated for each syscall, which was just a waste of memory. With a bit of macro-magic we just create a separate struct for each syscall & have a syscall argument struct for each, then collect their pointers into an array.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,844,2020-04-01T18:40:49Z,2020-04-01T19:06:39Z,2020-04-13T10:25:01Z,MERGED,True,1,1,1,https://github.com/disaykin,Fix misprint in makefile.am,1,[],https://github.com/tklengyel/drakvuf/pull/844,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/844,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,844,2020-04-01T18:40:49Z,2020-04-01T19:06:39Z,2020-04-13T10:25:01Z,MERGED,True,1,1,1,https://github.com/disaykin,Fix misprint in makefile.am,1,[],https://github.com/tklengyel/drakvuf/pull/844,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/844#issuecomment-607424237,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,845,2020-04-01T19:25:14Z,2020-04-02T12:34:04Z,2020-04-13T10:25:02Z,MERGED,True,24,45,2,https://github.com/disaykin,Fix memory leak in apimon/crypto.cpp,1,[],https://github.com/tklengyel/drakvuf/pull/845,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/845,"Use vmi_lock_guard in apimon/crypto.cpp.
Fix memory leak in apimon/crypto.cpp.","Use vmi_lock_guard in apimon/crypto.cpp.
Fix memory leak in apimon/crypto.cpp.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,845,2020-04-01T19:25:14Z,2020-04-02T12:34:04Z,2020-04-13T10:25:02Z,MERGED,True,24,45,2,https://github.com/disaykin,Fix memory leak in apimon/crypto.cpp,1,[],https://github.com/tklengyel/drakvuf/pull/845,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/845#issuecomment-607444852,"Use vmi_lock_guard in apimon/crypto.cpp.
Fix memory leak in apimon/crypto.cpp.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,845,2020-04-01T19:25:14Z,2020-04-02T12:34:04Z,2020-04-13T10:25:02Z,MERGED,True,24,45,2,https://github.com/disaykin,Fix memory leak in apimon/crypto.cpp,1,[],https://github.com/tklengyel/drakvuf/pull/845,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/845#issuecomment-607478992,"Use vmi_lock_guard in apimon/crypto.cpp.
Fix memory leak in apimon/crypto.cpp.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,846,2020-04-02T04:27:55Z,2020-04-02T12:36:11Z,2020-04-03T01:06:52Z,MERGED,True,18,3,3,https://github.com/BonusPlay,add libdrakvuf functions to REPL,1,[],https://github.com/tklengyel/drakvuf/pull/846,https://github.com/BonusPlay,1,https://github.com/tklengyel/drakvuf/pull/846,"This PR adds all functions from libdrakvuf to librepl. This allows to pretty much do anything using REPL. I've also prepared a usage guide, which could be added to wiki.
Since ctypes expect a .so library to call functions and libdrakvuf doesn't build into .so I decided to be clever and compile repl binary with PIE and expose all functions, so that ctypes load repl binary just like .so.
This PR also adds ability to change event_response, which in theory allows to modify registers (not tested yet).","This PR adds all functions from libdrakvuf to librepl. This allows to pretty much do anything using REPL. I've also prepared a usage guide, which could be added to wiki.
Since ctypes expect a .so library to call functions and libdrakvuf doesn't build into .so I decided to be clever and compile repl binary with PIE and expose all functions, so that ctypes load repl binary just like .so.
This PR also adds ability to change event_response, which in theory allows to modify registers (not tested yet).",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,846,2020-04-02T04:27:55Z,2020-04-02T12:36:11Z,2020-04-03T01:06:52Z,MERGED,True,18,3,3,https://github.com/BonusPlay,add libdrakvuf functions to REPL,1,[],https://github.com/tklengyel/drakvuf/pull/846,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/846#issuecomment-607613789,"This PR adds all functions from libdrakvuf to librepl. This allows to pretty much do anything using REPL. I've also prepared a usage guide, which could be added to wiki.
Since ctypes expect a .so library to call functions and libdrakvuf doesn't build into .so I decided to be clever and compile repl binary with PIE and expose all functions, so that ctypes load repl binary just like .so.
This PR also adds ability to change event_response, which in theory allows to modify registers (not tested yet).",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,846,2020-04-02T04:27:55Z,2020-04-02T12:36:11Z,2020-04-03T01:06:52Z,MERGED,True,18,3,3,https://github.com/BonusPlay,add libdrakvuf functions to REPL,1,[],https://github.com/tklengyel/drakvuf/pull/846,https://github.com/BonusPlay,3,https://github.com/tklengyel/drakvuf/pull/846#issuecomment-608168029,"This PR adds all functions from libdrakvuf to librepl. This allows to pretty much do anything using REPL. I've also prepared a usage guide, which could be added to wiki.
Since ctypes expect a .so library to call functions and libdrakvuf doesn't build into .so I decided to be clever and compile repl binary with PIE and expose all functions, so that ctypes load repl binary just like .so.
This PR also adds ability to change event_response, which in theory allows to modify registers (not tested yet).",@tklengyel is there a chance to add wiki page I wrote to main repo? It explains how REPL works (and clears out some pitfalls).,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,846,2020-04-02T04:27:55Z,2020-04-02T12:36:11Z,2020-04-03T01:06:52Z,MERGED,True,18,3,3,https://github.com/BonusPlay,add libdrakvuf functions to REPL,1,[],https://github.com/tklengyel/drakvuf/pull/846,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/846#issuecomment-608170879,"This PR adds all functions from libdrakvuf to librepl. This allows to pretty much do anything using REPL. I've also prepared a usage guide, which could be added to wiki.
Since ctypes expect a .so library to call functions and libdrakvuf doesn't build into .so I decided to be clever and compile repl binary with PIE and expose all functions, so that ctypes load repl binary just like .so.
This PR also adds ability to change event_response, which in theory allows to modify registers (not tested yet).","Absolutely. That would be fantastic. Unfortunaly there is no PR process for the wiki but you can still git clone it, push your addition to your own repo, and I can pull it from there. Just open an Issue for it with your branch name.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,847,2020-04-02T18:36:07Z,2020-04-02T18:57:26Z,2020-04-02T19:21:40Z,MERGED,True,3,3,1,https://github.com/chengsteven,fix bug in syscalls output,1,[],https://github.com/tklengyel/drakvuf/pull/847,https://github.com/chengsteven,1,https://github.com/tklengyel/drakvuf/pull/847,"ProcessName, Module, Method had incorrect output from new changes. Dangling comma left in sysret args.
Before:
{""Type"" : ""syscall"",""TimeStamp"" :""1585851942.406507"",""VCPU"": 0,""CR3"": 730857474,""ProcessName"": ""NtCancelTimer"",""UserName"": SessionID,""UserId"": 1""PID"" : 876,""PPID"": 504,""TID"": 900,""Module"": ""(null)"",""Method"": ""(null)"",""Args"": [""Args"": [{""TimerHandle"" :516},{""CurrentState"" :0}] }
{""Type"" : ""sysret"",""TimeStamp"" :""1585851942.406567"",""VCPU"": 0,""CR3"": 730857474,""ProcessName"": ""NtCancelTimer"",""UserName"": SessionID,""UserId"": 1""PID"" : 876,""PPID"": 504,""TID"": 900,""Module"": ""nt"",""Method"": ""(null)"",""Args"": [""Ret"": 0,""Info"": ""STATUS_SUCCESS"",] }
{""Type"" : ""syscall"",""TimeStamp"" :""1585851942.406624"",""VCPU"": 0,""CR3"": 730857474,""ProcessName"": ""NtQueryInformationThread"",""UserName"": SessionID,""UserId"": 1""PID"" : 876,""PPID"": 504,""TID"": 900,""Module"": ""(null)"",""Method"": ""(null)"",""Args"": [""Args"": [{""ThreadHandle"" :18446744073709551614},{""ThreadInformationClass"" :23},{""ThreadInformation"" :818789479600},{""ThreadInformationLength"" :16},{""ReturnLength"" :0}] }
{""Type"" : ""sysret"",""TimeStamp"" :""1585851942.406710"",""VCPU"": 0,""CR3"": 730857474,""ProcessName"": ""NtQueryInformationThread"",""UserName"": SessionID,""UserId"": 1""PID"" : 876,""PPID"": 504,""TID"": 900,""Module"": ""nt"",""Method"": ""(null)"",""Args"": [""Ret"": 0,""Info"": ""STATUS_SUCCESS"",] }

After:
{""Type"" : ""syscall"",""TimeStamp"" :""1585852327.718668"",""VCPU"": 0,""CR3"": 730857474,""ProcessName"": ""\\Device\\HarddiskVolume2\\Windows\\System32\\dwm.exe"",""UserName"": SessionID,""UserId"": 1""PID"" : 876,""PPID"": 504,""TID"": 900,""Module"": ""nt"",""Method"": ""NtQueryInformationThread"",""Args"": [""Args"": [{""ThreadHandle"" :18446744073709551614},{""ThreadInformationClass"" :23},{""ThreadInformation"" :818789479600},{""ThreadInformationLength"" :16},{""ReturnLength"" :0}] }
{""Type"" : ""sysret"",""TimeStamp"" :""1585852327.718730"",""VCPU"": 0,""CR3"": 730857474,""ProcessName"": ""\\Device\\HarddiskVolume2\\Windows\\System32\\dwm.exe"",""UserName"": SessionID,""UserId"": 1""PID"" : 876,""PPID"": 504,""TID"": 900,""Module"": ""nt"",""Method"": ""NtQueryInformationThread"",""Args"": [""Ret"": 0,""Info"": ""STATUS_SUCCESS""] }
{""Type"" : ""syscall"",""TimeStamp"" :""1585852327.718790"",""VCPU"": 0,""CR3"": 730857474,""ProcessName"": ""\\Device\\HarddiskVolume2\\Windows\\System32\\dwm.exe"",""UserName"": SessionID,""UserId"": 1""PID"" : 876,""PPID"": 504,""TID"": 900,""Module"": ""nt"",""Method"": ""NtQueryPerformanceCounter"",""Args"": [""Args"": [{""PerformanceCounter"" :818789479664},{""PerformanceFrequency"" :0}] }
{""Type"" : ""sysret"",""TimeStamp"" :""1585852327.718857"",""VCPU"": 0,""CR3"": 730857474,""ProcessName"": ""\\Device\\HarddiskVolume2\\Windows\\System32\\dwm.exe"",""UserName"": SessionID,""UserId"": 1""PID"" : 876,""PPID"": 504,""TID"": 900,""Module"": ""nt"",""Method"": ""NtQueryPerformanceCounter"",""Args"": [""Ret"": 0,""Info"": ""STATUS_SUCCESS""] }","ProcessName, Module, Method had incorrect output from new changes. Dangling comma left in sysret args.
Before:
{""Type"" : ""syscall"",""TimeStamp"" :""1585851942.406507"",""VCPU"": 0,""CR3"": 730857474,""ProcessName"": ""NtCancelTimer"",""UserName"": SessionID,""UserId"": 1""PID"" : 876,""PPID"": 504,""TID"": 900,""Module"": ""(null)"",""Method"": ""(null)"",""Args"": [""Args"": [{""TimerHandle"" :516},{""CurrentState"" :0}] }
{""Type"" : ""sysret"",""TimeStamp"" :""1585851942.406567"",""VCPU"": 0,""CR3"": 730857474,""ProcessName"": ""NtCancelTimer"",""UserName"": SessionID,""UserId"": 1""PID"" : 876,""PPID"": 504,""TID"": 900,""Module"": ""nt"",""Method"": ""(null)"",""Args"": [""Ret"": 0,""Info"": ""STATUS_SUCCESS"",] }
{""Type"" : ""syscall"",""TimeStamp"" :""1585851942.406624"",""VCPU"": 0,""CR3"": 730857474,""ProcessName"": ""NtQueryInformationThread"",""UserName"": SessionID,""UserId"": 1""PID"" : 876,""PPID"": 504,""TID"": 900,""Module"": ""(null)"",""Method"": ""(null)"",""Args"": [""Args"": [{""ThreadHandle"" :18446744073709551614},{""ThreadInformationClass"" :23},{""ThreadInformation"" :818789479600},{""ThreadInformationLength"" :16},{""ReturnLength"" :0}] }
{""Type"" : ""sysret"",""TimeStamp"" :""1585851942.406710"",""VCPU"": 0,""CR3"": 730857474,""ProcessName"": ""NtQueryInformationThread"",""UserName"": SessionID,""UserId"": 1""PID"" : 876,""PPID"": 504,""TID"": 900,""Module"": ""nt"",""Method"": ""(null)"",""Args"": [""Ret"": 0,""Info"": ""STATUS_SUCCESS"",] }

After:
{""Type"" : ""syscall"",""TimeStamp"" :""1585852327.718668"",""VCPU"": 0,""CR3"": 730857474,""ProcessName"": ""\\Device\\HarddiskVolume2\\Windows\\System32\\dwm.exe"",""UserName"": SessionID,""UserId"": 1""PID"" : 876,""PPID"": 504,""TID"": 900,""Module"": ""nt"",""Method"": ""NtQueryInformationThread"",""Args"": [""Args"": [{""ThreadHandle"" :18446744073709551614},{""ThreadInformationClass"" :23},{""ThreadInformation"" :818789479600},{""ThreadInformationLength"" :16},{""ReturnLength"" :0}] }
{""Type"" : ""sysret"",""TimeStamp"" :""1585852327.718730"",""VCPU"": 0,""CR3"": 730857474,""ProcessName"": ""\\Device\\HarddiskVolume2\\Windows\\System32\\dwm.exe"",""UserName"": SessionID,""UserId"": 1""PID"" : 876,""PPID"": 504,""TID"": 900,""Module"": ""nt"",""Method"": ""NtQueryInformationThread"",""Args"": [""Ret"": 0,""Info"": ""STATUS_SUCCESS""] }
{""Type"" : ""syscall"",""TimeStamp"" :""1585852327.718790"",""VCPU"": 0,""CR3"": 730857474,""ProcessName"": ""\\Device\\HarddiskVolume2\\Windows\\System32\\dwm.exe"",""UserName"": SessionID,""UserId"": 1""PID"" : 876,""PPID"": 504,""TID"": 900,""Module"": ""nt"",""Method"": ""NtQueryPerformanceCounter"",""Args"": [""Args"": [{""PerformanceCounter"" :818789479664},{""PerformanceFrequency"" :0}] }
{""Type"" : ""sysret"",""TimeStamp"" :""1585852327.718857"",""VCPU"": 0,""CR3"": 730857474,""ProcessName"": ""\\Device\\HarddiskVolume2\\Windows\\System32\\dwm.exe"",""UserName"": SessionID,""UserId"": 1""PID"" : 876,""PPID"": 504,""TID"": 900,""Module"": ""nt"",""Method"": ""NtQueryPerformanceCounter"",""Args"": [""Ret"": 0,""Info"": ""STATUS_SUCCESS""] }",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,847,2020-04-02T18:36:07Z,2020-04-02T18:57:26Z,2020-04-02T19:21:40Z,MERGED,True,3,3,1,https://github.com/chengsteven,fix bug in syscalls output,1,[],https://github.com/tklengyel/drakvuf/pull/847,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/847#issuecomment-608033150,"ProcessName, Module, Method had incorrect output from new changes. Dangling comma left in sysret args.
Before:
{""Type"" : ""syscall"",""TimeStamp"" :""1585851942.406507"",""VCPU"": 0,""CR3"": 730857474,""ProcessName"": ""NtCancelTimer"",""UserName"": SessionID,""UserId"": 1""PID"" : 876,""PPID"": 504,""TID"": 900,""Module"": ""(null)"",""Method"": ""(null)"",""Args"": [""Args"": [{""TimerHandle"" :516},{""CurrentState"" :0}] }
{""Type"" : ""sysret"",""TimeStamp"" :""1585851942.406567"",""VCPU"": 0,""CR3"": 730857474,""ProcessName"": ""NtCancelTimer"",""UserName"": SessionID,""UserId"": 1""PID"" : 876,""PPID"": 504,""TID"": 900,""Module"": ""nt"",""Method"": ""(null)"",""Args"": [""Ret"": 0,""Info"": ""STATUS_SUCCESS"",] }
{""Type"" : ""syscall"",""TimeStamp"" :""1585851942.406624"",""VCPU"": 0,""CR3"": 730857474,""ProcessName"": ""NtQueryInformationThread"",""UserName"": SessionID,""UserId"": 1""PID"" : 876,""PPID"": 504,""TID"": 900,""Module"": ""(null)"",""Method"": ""(null)"",""Args"": [""Args"": [{""ThreadHandle"" :18446744073709551614},{""ThreadInformationClass"" :23},{""ThreadInformation"" :818789479600},{""ThreadInformationLength"" :16},{""ReturnLength"" :0}] }
{""Type"" : ""sysret"",""TimeStamp"" :""1585851942.406710"",""VCPU"": 0,""CR3"": 730857474,""ProcessName"": ""NtQueryInformationThread"",""UserName"": SessionID,""UserId"": 1""PID"" : 876,""PPID"": 504,""TID"": 900,""Module"": ""nt"",""Method"": ""(null)"",""Args"": [""Ret"": 0,""Info"": ""STATUS_SUCCESS"",] }

After:
{""Type"" : ""syscall"",""TimeStamp"" :""1585852327.718668"",""VCPU"": 0,""CR3"": 730857474,""ProcessName"": ""\\Device\\HarddiskVolume2\\Windows\\System32\\dwm.exe"",""UserName"": SessionID,""UserId"": 1""PID"" : 876,""PPID"": 504,""TID"": 900,""Module"": ""nt"",""Method"": ""NtQueryInformationThread"",""Args"": [""Args"": [{""ThreadHandle"" :18446744073709551614},{""ThreadInformationClass"" :23},{""ThreadInformation"" :818789479600},{""ThreadInformationLength"" :16},{""ReturnLength"" :0}] }
{""Type"" : ""sysret"",""TimeStamp"" :""1585852327.718730"",""VCPU"": 0,""CR3"": 730857474,""ProcessName"": ""\\Device\\HarddiskVolume2\\Windows\\System32\\dwm.exe"",""UserName"": SessionID,""UserId"": 1""PID"" : 876,""PPID"": 504,""TID"": 900,""Module"": ""nt"",""Method"": ""NtQueryInformationThread"",""Args"": [""Ret"": 0,""Info"": ""STATUS_SUCCESS""] }
{""Type"" : ""syscall"",""TimeStamp"" :""1585852327.718790"",""VCPU"": 0,""CR3"": 730857474,""ProcessName"": ""\\Device\\HarddiskVolume2\\Windows\\System32\\dwm.exe"",""UserName"": SessionID,""UserId"": 1""PID"" : 876,""PPID"": 504,""TID"": 900,""Module"": ""nt"",""Method"": ""NtQueryPerformanceCounter"",""Args"": [""Args"": [{""PerformanceCounter"" :818789479664},{""PerformanceFrequency"" :0}] }
{""Type"" : ""sysret"",""TimeStamp"" :""1585852327.718857"",""VCPU"": 0,""CR3"": 730857474,""ProcessName"": ""\\Device\\HarddiskVolume2\\Windows\\System32\\dwm.exe"",""UserName"": SessionID,""UserId"": 1""PID"" : 876,""PPID"": 504,""TID"": 900,""Module"": ""nt"",""Method"": ""NtQueryPerformanceCounter"",""Args"": [""Ret"": 0,""Info"": ""STATUS_SUCCESS""] }",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,847,2020-04-02T18:36:07Z,2020-04-02T18:57:26Z,2020-04-02T19:21:40Z,MERGED,True,3,3,1,https://github.com/chengsteven,fix bug in syscalls output,1,[],https://github.com/tklengyel/drakvuf/pull/847,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/847#issuecomment-608036907,"ProcessName, Module, Method had incorrect output from new changes. Dangling comma left in sysret args.
Before:
{""Type"" : ""syscall"",""TimeStamp"" :""1585851942.406507"",""VCPU"": 0,""CR3"": 730857474,""ProcessName"": ""NtCancelTimer"",""UserName"": SessionID,""UserId"": 1""PID"" : 876,""PPID"": 504,""TID"": 900,""Module"": ""(null)"",""Method"": ""(null)"",""Args"": [""Args"": [{""TimerHandle"" :516},{""CurrentState"" :0}] }
{""Type"" : ""sysret"",""TimeStamp"" :""1585851942.406567"",""VCPU"": 0,""CR3"": 730857474,""ProcessName"": ""NtCancelTimer"",""UserName"": SessionID,""UserId"": 1""PID"" : 876,""PPID"": 504,""TID"": 900,""Module"": ""nt"",""Method"": ""(null)"",""Args"": [""Ret"": 0,""Info"": ""STATUS_SUCCESS"",] }
{""Type"" : ""syscall"",""TimeStamp"" :""1585851942.406624"",""VCPU"": 0,""CR3"": 730857474,""ProcessName"": ""NtQueryInformationThread"",""UserName"": SessionID,""UserId"": 1""PID"" : 876,""PPID"": 504,""TID"": 900,""Module"": ""(null)"",""Method"": ""(null)"",""Args"": [""Args"": [{""ThreadHandle"" :18446744073709551614},{""ThreadInformationClass"" :23},{""ThreadInformation"" :818789479600},{""ThreadInformationLength"" :16},{""ReturnLength"" :0}] }
{""Type"" : ""sysret"",""TimeStamp"" :""1585851942.406710"",""VCPU"": 0,""CR3"": 730857474,""ProcessName"": ""NtQueryInformationThread"",""UserName"": SessionID,""UserId"": 1""PID"" : 876,""PPID"": 504,""TID"": 900,""Module"": ""nt"",""Method"": ""(null)"",""Args"": [""Ret"": 0,""Info"": ""STATUS_SUCCESS"",] }

After:
{""Type"" : ""syscall"",""TimeStamp"" :""1585852327.718668"",""VCPU"": 0,""CR3"": 730857474,""ProcessName"": ""\\Device\\HarddiskVolume2\\Windows\\System32\\dwm.exe"",""UserName"": SessionID,""UserId"": 1""PID"" : 876,""PPID"": 504,""TID"": 900,""Module"": ""nt"",""Method"": ""NtQueryInformationThread"",""Args"": [""Args"": [{""ThreadHandle"" :18446744073709551614},{""ThreadInformationClass"" :23},{""ThreadInformation"" :818789479600},{""ThreadInformationLength"" :16},{""ReturnLength"" :0}] }
{""Type"" : ""sysret"",""TimeStamp"" :""1585852327.718730"",""VCPU"": 0,""CR3"": 730857474,""ProcessName"": ""\\Device\\HarddiskVolume2\\Windows\\System32\\dwm.exe"",""UserName"": SessionID,""UserId"": 1""PID"" : 876,""PPID"": 504,""TID"": 900,""Module"": ""nt"",""Method"": ""NtQueryInformationThread"",""Args"": [""Ret"": 0,""Info"": ""STATUS_SUCCESS""] }
{""Type"" : ""syscall"",""TimeStamp"" :""1585852327.718790"",""VCPU"": 0,""CR3"": 730857474,""ProcessName"": ""\\Device\\HarddiskVolume2\\Windows\\System32\\dwm.exe"",""UserName"": SessionID,""UserId"": 1""PID"" : 876,""PPID"": 504,""TID"": 900,""Module"": ""nt"",""Method"": ""NtQueryPerformanceCounter"",""Args"": [""Args"": [{""PerformanceCounter"" :818789479664},{""PerformanceFrequency"" :0}] }
{""Type"" : ""sysret"",""TimeStamp"" :""1585852327.718857"",""VCPU"": 0,""CR3"": 730857474,""ProcessName"": ""\\Device\\HarddiskVolume2\\Windows\\System32\\dwm.exe"",""UserName"": SessionID,""UserId"": 1""PID"" : 876,""PPID"": 504,""TID"": 900,""Module"": ""nt"",""Method"": ""NtQueryPerformanceCounter"",""Args"": [""Ret"": 0,""Info"": ""STATUS_SUCCESS""] }",@drakvuf-jenkins Test this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,847,2020-04-02T18:36:07Z,2020-04-02T18:57:26Z,2020-04-02T19:21:40Z,MERGED,True,3,3,1,https://github.com/chengsteven,fix bug in syscalls output,1,[],https://github.com/tklengyel/drakvuf/pull/847,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/847#issuecomment-608044250,"ProcessName, Module, Method had incorrect output from new changes. Dangling comma left in sysret args.
Before:
{""Type"" : ""syscall"",""TimeStamp"" :""1585851942.406507"",""VCPU"": 0,""CR3"": 730857474,""ProcessName"": ""NtCancelTimer"",""UserName"": SessionID,""UserId"": 1""PID"" : 876,""PPID"": 504,""TID"": 900,""Module"": ""(null)"",""Method"": ""(null)"",""Args"": [""Args"": [{""TimerHandle"" :516},{""CurrentState"" :0}] }
{""Type"" : ""sysret"",""TimeStamp"" :""1585851942.406567"",""VCPU"": 0,""CR3"": 730857474,""ProcessName"": ""NtCancelTimer"",""UserName"": SessionID,""UserId"": 1""PID"" : 876,""PPID"": 504,""TID"": 900,""Module"": ""nt"",""Method"": ""(null)"",""Args"": [""Ret"": 0,""Info"": ""STATUS_SUCCESS"",] }
{""Type"" : ""syscall"",""TimeStamp"" :""1585851942.406624"",""VCPU"": 0,""CR3"": 730857474,""ProcessName"": ""NtQueryInformationThread"",""UserName"": SessionID,""UserId"": 1""PID"" : 876,""PPID"": 504,""TID"": 900,""Module"": ""(null)"",""Method"": ""(null)"",""Args"": [""Args"": [{""ThreadHandle"" :18446744073709551614},{""ThreadInformationClass"" :23},{""ThreadInformation"" :818789479600},{""ThreadInformationLength"" :16},{""ReturnLength"" :0}] }
{""Type"" : ""sysret"",""TimeStamp"" :""1585851942.406710"",""VCPU"": 0,""CR3"": 730857474,""ProcessName"": ""NtQueryInformationThread"",""UserName"": SessionID,""UserId"": 1""PID"" : 876,""PPID"": 504,""TID"": 900,""Module"": ""nt"",""Method"": ""(null)"",""Args"": [""Ret"": 0,""Info"": ""STATUS_SUCCESS"",] }

After:
{""Type"" : ""syscall"",""TimeStamp"" :""1585852327.718668"",""VCPU"": 0,""CR3"": 730857474,""ProcessName"": ""\\Device\\HarddiskVolume2\\Windows\\System32\\dwm.exe"",""UserName"": SessionID,""UserId"": 1""PID"" : 876,""PPID"": 504,""TID"": 900,""Module"": ""nt"",""Method"": ""NtQueryInformationThread"",""Args"": [""Args"": [{""ThreadHandle"" :18446744073709551614},{""ThreadInformationClass"" :23},{""ThreadInformation"" :818789479600},{""ThreadInformationLength"" :16},{""ReturnLength"" :0}] }
{""Type"" : ""sysret"",""TimeStamp"" :""1585852327.718730"",""VCPU"": 0,""CR3"": 730857474,""ProcessName"": ""\\Device\\HarddiskVolume2\\Windows\\System32\\dwm.exe"",""UserName"": SessionID,""UserId"": 1""PID"" : 876,""PPID"": 504,""TID"": 900,""Module"": ""nt"",""Method"": ""NtQueryInformationThread"",""Args"": [""Ret"": 0,""Info"": ""STATUS_SUCCESS""] }
{""Type"" : ""syscall"",""TimeStamp"" :""1585852327.718790"",""VCPU"": 0,""CR3"": 730857474,""ProcessName"": ""\\Device\\HarddiskVolume2\\Windows\\System32\\dwm.exe"",""UserName"": SessionID,""UserId"": 1""PID"" : 876,""PPID"": 504,""TID"": 900,""Module"": ""nt"",""Method"": ""NtQueryPerformanceCounter"",""Args"": [""Args"": [{""PerformanceCounter"" :818789479664},{""PerformanceFrequency"" :0}] }
{""Type"" : ""sysret"",""TimeStamp"" :""1585852327.718857"",""VCPU"": 0,""CR3"": 730857474,""ProcessName"": ""\\Device\\HarddiskVolume2\\Windows\\System32\\dwm.exe"",""UserName"": SessionID,""UserId"": 1""PID"" : 876,""PPID"": 504,""TID"": 900,""Module"": ""nt"",""Method"": ""NtQueryPerformanceCounter"",""Args"": [""Ret"": 0,""Info"": ""STATUS_SUCCESS""] }",Thanks for the PR!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,849,2020-04-03T11:50:01Z,2020-04-13T01:38:08Z,2020-04-13T01:38:17Z,MERGED,True,463,192,4,https://github.com/zodeak,add common output formatters,3,[],https://github.com/tklengyel/drakvuf/pull/849,https://github.com/zodeak,1,https://github.com/tklengyel/drakvuf/pull/849,"A try to do common formatting functions with a set of common fields to print, but it breaks backward compat.
Anyway i think it gives more pros than cons.","A try to do common formatting functions with a set of common fields to print, but it breaks backward compat.
Anyway i think it gives more pros than cons.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,849,2020-04-03T11:50:01Z,2020-04-13T01:38:08Z,2020-04-13T01:38:17Z,MERGED,True,463,192,4,https://github.com/zodeak,add common output formatters,3,[],https://github.com/tklengyel/drakvuf/pull/849,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/849#issuecomment-608390588,"A try to do common formatting functions with a set of common fields to print, but it breaks backward compat.
Anyway i think it gives more pros than cons.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,849,2020-04-03T11:50:01Z,2020-04-13T01:38:08Z,2020-04-13T01:38:17Z,MERGED,True,463,192,4,https://github.com/zodeak,add common output formatters,3,[],https://github.com/tklengyel/drakvuf/pull/849,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/849#issuecomment-608471407,"A try to do common formatting functions with a set of common fields to print, but it breaks backward compat.
Anyway i think it gives more pros than cons.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,849,2020-04-03T11:50:01Z,2020-04-13T01:38:08Z,2020-04-13T01:38:17Z,MERGED,True,463,192,4,https://github.com/zodeak,add common output formatters,3,[],https://github.com/tklengyel/drakvuf/pull/849,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/849#issuecomment-608472964,"A try to do common formatting functions with a set of common fields to print, but it breaks backward compat.
Anyway i think it gives more pros than cons.","I think this is much needed, it's really ugly that we have printf's all over each plugin. This would standardize things for plugins, making future changes a lot easier since you wouldn't have to rewrite the output format in each plugin individually. So it's a big +1 from my end.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,849,2020-04-03T11:50:01Z,2020-04-13T01:38:08Z,2020-04-13T01:38:17Z,MERGED,True,463,192,4,https://github.com/zodeak,add common output formatters,3,[],https://github.com/tklengyel/drakvuf/pull/849,https://github.com/BonusPlay,5,https://github.com/tklengyel/drakvuf/pull/849#issuecomment-609440106,"A try to do common formatting functions with a set of common fields to print, but it breaks backward compat.
Anyway i think it gives more pros than cons.","Hmm, it seems that output_format.h is missing from src/plugins/Makefile.am.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,849,2020-04-03T11:50:01Z,2020-04-13T01:38:08Z,2020-04-13T01:38:17Z,MERGED,True,463,192,4,https://github.com/zodeak,add common output formatters,3,[],https://github.com/tklengyel/drakvuf/pull/849,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/849#issuecomment-612710692,"A try to do common formatting functions with a set of common fields to print, but it breaks backward compat.
Anyway i think it gives more pros than cons.",Thanks!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,852,2020-04-13T02:54:23Z,2020-04-13T03:26:39Z,2020-04-13T03:26:42Z,MERGED,True,0,1,1,https://github.com/tklengyel,Move Sonar test to newer Ubuntu,1,[],https://github.com/tklengyel/drakvuf/pull/852,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/852,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,853,2020-04-13T03:26:24Z,2020-04-13T14:34:14Z,2020-04-13T14:34:20Z,MERGED,True,28,45,9,https://github.com/tklengyel,Deprecate GTimeVal use,1,[],https://github.com/tklengyel/drakvuf/pull/853,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/853,Fixes #851,Fixes #851,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,854,2020-04-13T14:36:23Z,2020-04-13T16:12:58Z,2020-04-13T16:13:00Z,MERGED,True,22,13,2,https://github.com/tklengyel,Tune configure.ac,2,[],https://github.com/tklengyel/drakvuf/pull/854,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/854,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,855,2020-04-14T13:32:38Z,2020-04-15T18:40:38Z,2020-04-15T19:29:03Z,MERGED,True,394,34,11,https://github.com/disaykin,Add optional gzip compression of process dump files.,1,[],https://github.com/tklengyel/drakvuf/pull/855,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/855,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,855,2020-04-14T13:32:38Z,2020-04-15T18:40:38Z,2020-04-15T19:29:03Z,MERGED,True,394,34,11,https://github.com/disaykin,Add optional gzip compression of process dump files.,1,[],https://github.com/tklengyel/drakvuf/pull/855,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/855#issuecomment-613444845,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,855,2020-04-14T13:32:38Z,2020-04-15T18:40:38Z,2020-04-15T19:29:03Z,MERGED,True,394,34,11,https://github.com/disaykin,Add optional gzip compression of process dump files.,1,[],https://github.com/tklengyel/drakvuf/pull/855,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/855#issuecomment-613550718,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,856,2020-04-16T16:37:32Z,2020-04-22T19:46:45Z,2020-05-13T12:50:54Z,MERGED,True,378,329,23,https://github.com/skvl,Use attached process data,4,[],https://github.com/tklengyel/drakvuf/pull/856,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/856,This should make drakvuf more accurate.,This should make drakvuf more accurate.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,856,2020-04-16T16:37:32Z,2020-04-22T19:46:45Z,2020-05-13T12:50:54Z,MERGED,True,378,329,23,https://github.com/skvl,Use attached process data,4,[],https://github.com/tklengyel/drakvuf/pull/856,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/856#issuecomment-614762611,This should make drakvuf more accurate.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,856,2020-04-16T16:37:32Z,2020-04-22T19:46:45Z,2020-05-13T12:50:54Z,MERGED,True,378,329,23,https://github.com/skvl,Use attached process data,4,[],https://github.com/tklengyel/drakvuf/pull/856,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/856#issuecomment-614785693,This should make drakvuf more accurate.,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,856,2020-04-16T16:37:32Z,2020-04-22T19:46:45Z,2020-05-13T12:50:54Z,MERGED,True,378,329,23,https://github.com/skvl,Use attached process data,4,[],https://github.com/tklengyel/drakvuf/pull/856,https://github.com/skvl,4,https://github.com/tklengyel/drakvuf/pull/856#issuecomment-617264292,This should make drakvuf more accurate.,@tklengyel it should be done now (see 7145c3d),True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,856,2020-04-16T16:37:32Z,2020-04-22T19:46:45Z,2020-05-13T12:50:54Z,MERGED,True,378,329,23,https://github.com/skvl,Use attached process data,4,[],https://github.com/tklengyel/drakvuf/pull/856,https://github.com/skvl,5,https://github.com/tklengyel/drakvuf/pull/856#issuecomment-617264797,This should make drakvuf more accurate.,@tklengyel it should be done now (see 7145c3d),True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,856,2020-04-16T16:37:32Z,2020-04-22T19:46:45Z,2020-05-13T12:50:54Z,MERGED,True,378,329,23,https://github.com/skvl,Use attached process data,4,[],https://github.com/tklengyel/drakvuf/pull/856,https://github.com/skvl,6,https://github.com/tklengyel/drakvuf/pull/856#issuecomment-617277520,This should make drakvuf more accurate.,@tklengyel it should be done now (see 986e4e3 ),True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,856,2020-04-16T16:37:32Z,2020-04-22T19:46:45Z,2020-05-13T12:50:54Z,MERGED,True,378,329,23,https://github.com/skvl,Use attached process data,4,[],https://github.com/tklengyel/drakvuf/pull/856,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/856#issuecomment-617901058,This should make drakvuf more accurate.,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,857,2020-04-17T11:20:01Z,2020-04-18T19:02:52Z,2020-04-18T21:07:23Z,MERGED,True,3,5,1,https://github.com/disaykin,filetracer: fileinfoclass argument has size = 4,1,[],https://github.com/tklengyel/drakvuf/pull/857,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/857,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,857,2020-04-17T11:20:01Z,2020-04-18T19:02:52Z,2020-04-18T21:07:23Z,MERGED,True,3,5,1,https://github.com/disaykin,filetracer: fileinfoclass argument has size = 4,1,[],https://github.com/tklengyel/drakvuf/pull/857,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/857#issuecomment-615191053,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,857,2020-04-17T11:20:01Z,2020-04-18T19:02:52Z,2020-04-18T21:07:23Z,MERGED,True,3,5,1,https://github.com/disaykin,filetracer: fileinfoclass argument has size = 4,1,[],https://github.com/tklengyel/drakvuf/pull/857,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/857#issuecomment-615251381,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,858,2020-04-17T11:24:33Z,2020-04-23T14:42:15Z,2020-05-13T12:52:27Z,MERGED,True,24,19,2,https://github.com/skvl,Fix some places leading to SIGABRT,2,[],https://github.com/tklengyel/drakvuf/pull/858,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/858,"This are:

g_assert-s in procdump
Buffer allocation error in filetracer","This are:

g_assert-s in procdump
Buffer allocation error in filetracer",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,858,2020-04-17T11:24:33Z,2020-04-23T14:42:15Z,2020-05-13T12:52:27Z,MERGED,True,24,19,2,https://github.com/skvl,Fix some places leading to SIGABRT,2,[],https://github.com/tklengyel/drakvuf/pull/858,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/858#issuecomment-615192754,"This are:

g_assert-s in procdump
Buffer allocation error in filetracer",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,858,2020-04-17T11:24:33Z,2020-04-23T14:42:15Z,2020-05-13T12:52:27Z,MERGED,True,24,19,2,https://github.com/skvl,Fix some places leading to SIGABRT,2,[],https://github.com/tklengyel/drakvuf/pull/858,https://github.com/skvl,3,https://github.com/tklengyel/drakvuf/pull/858#issuecomment-615192965,"This are:

g_assert-s in procdump
Buffer allocation error in filetracer",@tklengyel I will rebase the branch after #856 would be merged.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,858,2020-04-17T11:24:33Z,2020-04-23T14:42:15Z,2020-05-13T12:52:27Z,MERGED,True,24,19,2,https://github.com/skvl,Fix some places leading to SIGABRT,2,[],https://github.com/tklengyel/drakvuf/pull/858,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/858#issuecomment-618408089,"This are:

g_assert-s in procdump
Buffer allocation error in filetracer",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,859,2020-04-22T15:01:53Z,2020-05-07T01:25:20Z,2020-05-13T12:54:22Z,MERGED,True,906,22,13,https://github.com/skvl,Save process dumps in minidump (MDMP) format,2,[],https://github.com/tklengyel/drakvuf/pull/859,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/859,"Minidumps is used to analyze with tools like WinDbg, IDA, etc.
The branch is dependent on libvmi/libvmi#892
This is an minimal valuable implementation:

basic system information: Windows build number, major and minor version, CPUID info, timestamp.
minimal thread information: segments, general purpose registers
memory list: list of memory ranges gathered from VAD

This branch just adds meta information to previous process dumps at the beginning of the file.","Minidumps is used to analyze with tools like WinDbg, IDA, etc.
The branch is dependent on libvmi/libvmi#892
This is an minimal valuable implementation:

basic system information: Windows build number, major and minor version, CPUID info, timestamp.
minimal thread information: segments, general purpose registers
memory list: list of memory ranges gathered from VAD

This branch just adds meta information to previous process dumps at the beginning of the file.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,859,2020-04-22T15:01:53Z,2020-05-07T01:25:20Z,2020-05-13T12:54:22Z,MERGED,True,906,22,13,https://github.com/skvl,Save process dumps in minidump (MDMP) format,2,[],https://github.com/tklengyel/drakvuf/pull/859,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/859#issuecomment-617833947,"Minidumps is used to analyze with tools like WinDbg, IDA, etc.
The branch is dependent on libvmi/libvmi#892
This is an minimal valuable implementation:

basic system information: Windows build number, major and minor version, CPUID info, timestamp.
minimal thread information: segments, general purpose registers
memory list: list of memory ranges gathered from VAD

This branch just adds meta information to previous process dumps at the beginning of the file.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,859,2020-04-22T15:01:53Z,2020-05-07T01:25:20Z,2020-05-13T12:54:22Z,MERGED,True,906,22,13,https://github.com/skvl,Save process dumps in minidump (MDMP) format,2,[],https://github.com/tklengyel/drakvuf/pull/859,https://github.com/skvl,3,https://github.com/tklengyel/drakvuf/pull/859#issuecomment-617834464,"Minidumps is used to analyze with tools like WinDbg, IDA, etc.
The branch is dependent on libvmi/libvmi#892
This is an minimal valuable implementation:

basic system information: Windows build number, major and minor version, CPUID info, timestamp.
minimal thread information: segments, general purpose registers
memory list: list of memory ranges gathered from VAD

This branch just adds meta information to previous process dumps at the beginning of the file.",@tklengyel this is based on #856,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,859,2020-04-22T15:01:53Z,2020-05-07T01:25:20Z,2020-05-13T12:54:22Z,MERGED,True,906,22,13,https://github.com/skvl,Save process dumps in minidump (MDMP) format,2,[],https://github.com/tklengyel/drakvuf/pull/859,https://github.com/skvl,4,https://github.com/tklengyel/drakvuf/pull/859#issuecomment-617838253,"Minidumps is used to analyze with tools like WinDbg, IDA, etc.
The branch is dependent on libvmi/libvmi#892
This is an minimal valuable implementation:

basic system information: Windows build number, major and minor version, CPUID info, timestamp.
minimal thread information: segments, general purpose registers
memory list: list of memory ranges gathered from VAD

This branch just adds meta information to previous process dumps at the beginning of the file.","It is convenient to test with Google Breakpad:
$ ./src/processor/minidump_dump -x /path/to/dump/file",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,859,2020-04-22T15:01:53Z,2020-05-07T01:25:20Z,2020-05-13T12:54:22Z,MERGED,True,906,22,13,https://github.com/skvl,Save process dumps in minidump (MDMP) format,2,[],https://github.com/tklengyel/drakvuf/pull/859,https://github.com/skvl,5,https://github.com/tklengyel/drakvuf/pull/859#issuecomment-621612197,"Minidumps is used to analyze with tools like WinDbg, IDA, etc.
The branch is dependent on libvmi/libvmi#892
This is an minimal valuable implementation:

basic system information: Windows build number, major and minor version, CPUID info, timestamp.
minimal thread information: segments, general purpose registers
memory list: list of memory ranges gathered from VAD

This branch just adds meta information to previous process dumps at the beginning of the file.",@tklengyel is it OK to you?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,859,2020-04-22T15:01:53Z,2020-05-07T01:25:20Z,2020-05-13T12:54:22Z,MERGED,True,906,22,13,https://github.com/skvl,Save process dumps in minidump (MDMP) format,2,[],https://github.com/tklengyel/drakvuf/pull/859,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/859#issuecomment-621966828,"Minidumps is used to analyze with tools like WinDbg, IDA, etc.
The branch is dependent on libvmi/libvmi#892
This is an minimal valuable implementation:

basic system information: Windows build number, major and minor version, CPUID info, timestamp.
minimal thread information: segments, general purpose registers
memory list: list of memory ranges gathered from VAD

This branch just adds meta information to previous process dumps at the beginning of the file.","Well, travis is failing this PR at the moment",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,859,2020-04-22T15:01:53Z,2020-05-07T01:25:20Z,2020-05-13T12:54:22Z,MERGED,True,906,22,13,https://github.com/skvl,Save process dumps in minidump (MDMP) format,2,[],https://github.com/tklengyel/drakvuf/pull/859,https://github.com/skvl,7,https://github.com/tklengyel/drakvuf/pull/859#issuecomment-624467520,"Minidumps is used to analyze with tools like WinDbg, IDA, etc.
The branch is dependent on libvmi/libvmi#892
This is an minimal valuable implementation:

basic system information: Windows build number, major and minor version, CPUID info, timestamp.
minimal thread information: segments, general purpose registers
memory list: list of memory ranges gathered from VAD

This branch just adds meta information to previous process dumps at the beginning of the file.","Well, travis is failing this PR at the moment

Sorry I didn't notice. I have re-based branch onto master.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,859,2020-04-22T15:01:53Z,2020-05-07T01:25:20Z,2020-05-13T12:54:22Z,MERGED,True,906,22,13,https://github.com/skvl,Save process dumps in minidump (MDMP) format,2,[],https://github.com/tklengyel/drakvuf/pull/859,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/859#issuecomment-624641270,"Minidumps is used to analyze with tools like WinDbg, IDA, etc.
The branch is dependent on libvmi/libvmi#892
This is an minimal valuable implementation:

basic system information: Windows build number, major and minor version, CPUID info, timestamp.
minimal thread information: segments, general purpose registers
memory list: list of memory ranges gathered from VAD

This branch just adds meta information to previous process dumps at the beginning of the file.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,859,2020-04-22T15:01:53Z,2020-05-07T01:25:20Z,2020-05-13T12:54:22Z,MERGED,True,906,22,13,https://github.com/skvl,Save process dumps in minidump (MDMP) format,2,[],https://github.com/tklengyel/drakvuf/pull/859,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/859#issuecomment-624642731,"Minidumps is used to analyze with tools like WinDbg, IDA, etc.
The branch is dependent on libvmi/libvmi#892
This is an minimal valuable implementation:

basic system information: Windows build number, major and minor version, CPUID info, timestamp.
minimal thread information: segments, general purpose registers
memory list: list of memory ranges gathered from VAD

This branch just adds meta information to previous process dumps at the beginning of the file.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,859,2020-04-22T15:01:53Z,2020-05-07T01:25:20Z,2020-05-13T12:54:22Z,MERGED,True,906,22,13,https://github.com/skvl,Save process dumps in minidump (MDMP) format,2,[],https://github.com/tklengyel/drakvuf/pull/859,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/859#issuecomment-624971079,"Minidumps is used to analyze with tools like WinDbg, IDA, etc.
The branch is dependent on libvmi/libvmi#892
This is an minimal valuable implementation:

basic system information: Windows build number, major and minor version, CPUID info, timestamp.
minimal thread information: segments, general purpose registers
memory list: list of memory ranges gathered from VAD

This branch just adds meta information to previous process dumps at the beginning of the file.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,860,2020-04-25T19:49:47Z,2020-04-26T02:28:31Z,2020-04-26T02:54:24Z,MERGED,True,1,1,1,https://github.com/icedevml,drakvuf-releases: make versions sortable,4,[],https://github.com/tklengyel/drakvuf/pull/860,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/860,"For nightly Debian packages published with drakvuf-releases, the current version scheme is 0.7-<commit_hash>. Having two debs with version 0.7 it's not possible to tell which one is more recent.
This PR changes the version scheme to: 0.7+git<year><month><day><hour><minute><second>+<git_short_hash>-1. With such format (I hope) Debian will be able to understand which package is older and which is the upgraded version.
Example: 0.7+git20200425213254+ec3a0e7-1","For nightly Debian packages published with drakvuf-releases, the current version scheme is 0.7-<commit_hash>. Having two debs with version 0.7 it's not possible to tell which one is more recent.
This PR changes the version scheme to: 0.7+git<year><month><day><hour><minute><second>+<git_short_hash>-1. With such format (I hope) Debian will be able to understand which package is older and which is the upgraded version.
Example: 0.7+git20200425213254+ec3a0e7-1",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,860,2020-04-25T19:49:47Z,2020-04-26T02:28:31Z,2020-04-26T02:54:24Z,MERGED,True,1,1,1,https://github.com/icedevml,drakvuf-releases: make versions sortable,4,[],https://github.com/tklengyel/drakvuf/pull/860,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/860#issuecomment-619444050,"For nightly Debian packages published with drakvuf-releases, the current version scheme is 0.7-<commit_hash>. Having two debs with version 0.7 it's not possible to tell which one is more recent.
This PR changes the version scheme to: 0.7+git<year><month><day><hour><minute><second>+<git_short_hash>-1. With such format (I hope) Debian will be able to understand which package is older and which is the upgraded version.
Example: 0.7+git20200425213254+ec3a0e7-1",You could change it in configure.ac to have this as PACKAGE_VERSION,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,860,2020-04-25T19:49:47Z,2020-04-26T02:28:31Z,2020-04-26T02:54:24Z,MERGED,True,1,1,1,https://github.com/icedevml,drakvuf-releases: make versions sortable,4,[],https://github.com/tklengyel/drakvuf/pull/860,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/860#issuecomment-619448675,"For nightly Debian packages published with drakvuf-releases, the current version scheme is 0.7-<commit_hash>. Having two debs with version 0.7 it's not possible to tell which one is more recent.
This PR changes the version scheme to: 0.7+git<year><month><day><hour><minute><second>+<git_short_hash>-1. With such format (I hope) Debian will be able to understand which package is older and which is the upgraded version.
Example: 0.7+git20200425213254+ec3a0e7-1","@tklengyel done, took me a while to figure out how to do it with this autoconf :P",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,860,2020-04-25T19:49:47Z,2020-04-26T02:28:31Z,2020-04-26T02:54:24Z,MERGED,True,1,1,1,https://github.com/icedevml,drakvuf-releases: make versions sortable,4,[],https://github.com/tklengyel/drakvuf/pull/860,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/860#issuecomment-619449940,"For nightly Debian packages published with drakvuf-releases, the current version scheme is 0.7-<commit_hash>. Having two debs with version 0.7 it's not possible to tell which one is more recent.
This PR changes the version scheme to: 0.7+git<year><month><day><hour><minute><second>+<git_short_hash>-1. With such format (I hope) Debian will be able to understand which package is older and which is the upgraded version.
Example: 0.7+git20200425213254+ec3a0e7-1",Hah yea not pretty but if it works jt works :),True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,860,2020-04-25T19:49:47Z,2020-04-26T02:28:31Z,2020-04-26T02:54:24Z,MERGED,True,1,1,1,https://github.com/icedevml,drakvuf-releases: make versions sortable,4,[],https://github.com/tklengyel/drakvuf/pull/860,https://github.com/icedevml,5,https://github.com/tklengyel/drakvuf/pull/860#issuecomment-619450067,"For nightly Debian packages published with drakvuf-releases, the current version scheme is 0.7-<commit_hash>. Having two debs with version 0.7 it's not possible to tell which one is more recent.
This PR changes the version scheme to: 0.7+git<year><month><day><hour><minute><second>+<git_short_hash>-1. With such format (I hope) Debian will be able to understand which package is older and which is the upgraded version.
Example: 0.7+git20200425213254+ec3a0e7-1","Seems to work, tested:
configure:# Generated by GNU Autoconf 2.69 for DRAKVUF 0.7-git20200425182409+1a1daec-1.
configure:PACKAGE_VERSION='0.7-git20200425182409+1a1daec-1'",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,860,2020-04-25T19:49:47Z,2020-04-26T02:28:31Z,2020-04-26T02:54:24Z,MERGED,True,1,1,1,https://github.com/icedevml,drakvuf-releases: make versions sortable,4,[],https://github.com/tklengyel/drakvuf/pull/860,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/860#issuecomment-619465517,"For nightly Debian packages published with drakvuf-releases, the current version scheme is 0.7-<commit_hash>. Having two debs with version 0.7 it's not possible to tell which one is more recent.
This PR changes the version scheme to: 0.7+git<year><month><day><hour><minute><second>+<git_short_hash>-1. With such format (I hope) Debian will be able to understand which package is older and which is the upgraded version.
Example: 0.7+git20200425213254+ec3a0e7-1",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,861,2020-04-26T00:08:47Z,2020-04-26T02:28:45Z,2020-04-26T02:54:27Z,MERGED,True,6,6,1,https://github.com/icedevml,syscalls: fix OUTPUT_JSON syntax errors,1,[],https://github.com/tklengyel/drakvuf/pull/861,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/861,JSON output broke again. In some spare time I'll rewrite this to json-c.,JSON output broke again. In some spare time I'll rewrite this to json-c.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,861,2020-04-26T00:08:47Z,2020-04-26T02:28:45Z,2020-04-26T02:54:27Z,MERGED,True,6,6,1,https://github.com/icedevml,syscalls: fix OUTPUT_JSON syntax errors,1,[],https://github.com/tklengyel/drakvuf/pull/861,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/861#issuecomment-619465896,JSON output broke again. In some spare time I'll rewrite this to json-c.,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,862,2020-04-26T03:17:57Z,2020-05-02T11:35:28Z,2020-07-25T12:27:19Z,MERGED,True,38,7,5,https://github.com/tklengyel,Enable new fast singlestep feature by @skvl,2,[],https://github.com/tklengyel/drakvuf/pull/862,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/862,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,863,2020-04-26T03:28:49Z,2020-04-26T04:24:52Z,2020-11-06T18:53:39Z,MERGED,True,12,8,4,https://github.com/icedevml,syscalls: Additional fix for OUTPUT_JSON,3,[],https://github.com/tklengyel/drakvuf/pull/863,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/863,🤔 I need to test it carefully,🤔 I need to test it carefully,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,863,2020-04-26T03:28:49Z,2020-04-26T04:24:52Z,2020-11-06T18:53:39Z,MERGED,True,12,8,4,https://github.com/icedevml,syscalls: Additional fix for OUTPUT_JSON,3,[],https://github.com/tklengyel/drakvuf/pull/863,https://github.com/icedevml,2,https://github.com/tklengyel/drakvuf/pull/863#issuecomment-619478116,🤔 I need to test it carefully,"Ok, finally it seems to work properly :P",True,{'LAUGH': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,864,2020-04-27T13:47:07Z,2020-04-27T15:08:05Z,2020-11-06T18:53:41Z,MERGED,True,62,1,3,https://github.com/icedevml,drakvuf-bundle: Automatically propose Xen Dom0 settings,4,[],https://github.com/tklengyel/drakvuf/pull/864,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/864,"Currently we ship xen.cfg with fixed 2048 MB / 4 CPU allocation for Dom0. This PR changes this behavior so half of the system resources will be dedicated to Dom0 and this could be manually overriden.
This is not extremely optimal, but I hope it's a user-friendly default. Something would work with these settings (better or worse) and then the user has the possibility to fine-tune.","Currently we ship xen.cfg with fixed 2048 MB / 4 CPU allocation for Dom0. This PR changes this behavior so half of the system resources will be dedicated to Dom0 and this could be manually overriden.
This is not extremely optimal, but I hope it's a user-friendly default. Something would work with these settings (better or worse) and then the user has the possibility to fine-tune.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,864,2020-04-27T13:47:07Z,2020-04-27T15:08:05Z,2020-11-06T18:53:41Z,MERGED,True,62,1,3,https://github.com/icedevml,drakvuf-bundle: Automatically propose Xen Dom0 settings,4,[],https://github.com/tklengyel/drakvuf/pull/864,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/864#issuecomment-620032682,"Currently we ship xen.cfg with fixed 2048 MB / 4 CPU allocation for Dom0. This PR changes this behavior so half of the system resources will be dedicated to Dom0 and this could be manually overriden.
This is not extremely optimal, but I hope it's a user-friendly default. Something would work with these settings (better or worse) and then the user has the possibility to fine-tune.","LGTM, let me know when you are done",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,864,2020-04-27T13:47:07Z,2020-04-27T15:08:05Z,2020-11-06T18:53:41Z,MERGED,True,62,1,3,https://github.com/icedevml,drakvuf-bundle: Automatically propose Xen Dom0 settings,4,[],https://github.com/tklengyel/drakvuf/pull/864,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/864#issuecomment-620042177,"Currently we ship xen.cfg with fixed 2048 MB / 4 CPU allocation for Dom0. This PR changes this behavior so half of the system resources will be dedicated to Dom0 and this could be manually overriden.
This is not extremely optimal, but I hope it's a user-friendly default. Something would work with these settings (better or worse) and then the user has the possibility to fine-tune.","tested, should be fine",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,865,2020-04-29T10:46:37Z,2020-04-29T21:56:53Z,2020-04-30T01:31:15Z,MERGED,True,193,30,11,https://github.com/BonusPlay,Add support for .NET AssemblyNative:::LoadImage hook,3,[],https://github.com/tklengyel/drakvuf/pull/865,https://github.com/BonusPlay,1,https://github.com/tklengyel/drakvuf/pull/865,This also implements userhooks by raw offset instead of only by name.,This also implements userhooks by raw offset instead of only by name.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,865,2020-04-29T10:46:37Z,2020-04-29T21:56:53Z,2020-04-30T01:31:15Z,MERGED,True,193,30,11,https://github.com/BonusPlay,Add support for .NET AssemblyNative:::LoadImage hook,3,[],https://github.com/tklengyel/drakvuf/pull/865,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/865#issuecomment-621123202,This also implements userhooks by raw offset instead of only by name.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,865,2020-04-29T10:46:37Z,2020-04-29T21:56:53Z,2020-04-30T01:31:15Z,MERGED,True,193,30,11,https://github.com/BonusPlay,Add support for .NET AssemblyNative:::LoadImage hook,3,[],https://github.com/tklengyel/drakvuf/pull/865,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/865#issuecomment-621125288,This also implements userhooks by raw offset instead of only by name.,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,865,2020-04-29T10:46:37Z,2020-04-29T21:56:53Z,2020-04-30T01:31:15Z,MERGED,True,193,30,11,https://github.com/BonusPlay,Add support for .NET AssemblyNative:::LoadImage hook,3,[],https://github.com/tklengyel/drakvuf/pull/865,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/865#issuecomment-621486673,This also implements userhooks by raw offset instead of only by name.,LGTM,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,865,2020-04-29T10:46:37Z,2020-04-29T21:56:53Z,2020-04-30T01:31:15Z,MERGED,True,193,30,11,https://github.com/BonusPlay,Add support for .NET AssemblyNative:::LoadImage hook,3,[],https://github.com/tklengyel/drakvuf/pull/865,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/865#issuecomment-621493535,This also implements userhooks by raw offset instead of only by name.,"New defect(s) Reported-by: Coverity Scan
Showing 3 of 3 defect(s)


** CID 287087:  Uninitialized members  (UNINIT_CTOR)
/src/libusermode/userhook.hpp: 172 in hook_target_entry_t::hook_target_entry_t(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, unsigned long, unsigned int (*)(drakvuf *, drakvuf_trap_info *), const std::vector<std::unique_ptr<ArgumentPrinter, std::default_delete<ArgumentPrinter>>, std::allocator<std::unique_ptr<ArgumentPrinter, std::default_delete<ArgumentPrinter>>>> &, void *)()


________________________________________________________________________________________________________
*** CID 287087:  Uninitialized members  (UNINIT_CTOR)
/src/libusermode/userhook.hpp: 172 in hook_target_entry_t::hook_target_entry_t(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, unsigned long, unsigned int (*)(drakvuf *, drakvuf_trap_info *), const std::vector<std::unique_ptr<ArgumentPrinter, std::default_delete<ArgumentPrinter>>, std::allocator<std::unique_ptr<ArgumentPrinter, std::default_delete<ArgumentPrinter>>>> &, void *)()
166         hook_target_entry_t(std::string target_name, callback_t callback, const std::vector < std::unique_ptr < ArgumentPrinter > > &argument_printers, void* plugin)
167             : type(HOOK_BY_NAME), target_name(target_name), callback(callback), argument_printers(argument_printers), state(HOOK_FIRST_TRY), plugin(plugin)
168         {}
169     
170         hook_target_entry_t(std::string target_name, addr_t offset, callback_t callback, const std::vector < std::unique_ptr < ArgumentPrinter > > &argument_printers, void* plugin)
171             : type(HOOK_BY_OFFSET), target_name(target_name), offset(offset), callback(callback), argument_printers(argument_printers), state(HOOK_FIRST_TRY), plugin(plugin)
>>>     CID 287087:  Uninitialized members  (UNINIT_CTOR)
>>>     Non-static class member ""trap"" is not initialized in this constructor nor in any functions that it calls.
172         {}
173     };
174     
175     struct return_hook_target_entry_t
176     {
177         vmi_pid_t pid;

** CID 287086:  Uninitialized members  (UNINIT_CTOR)
/src/libusermode/userhook.hpp: 143 in plugin_target_config_entry_t::plugin_target_config_entry_t(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> &&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> &&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> &&, std::vector<std::unique_ptr<ArgumentPrinter, std::default_delete<ArgumentPrinter>>, std::allocator<std::unique_ptr<ArgumentPrinter, std::default_delete<ArgumentPrinter>>>> &&)()


________________________________________________________________________________________________________
*** CID 287086:  Uninitialized members  (UNINIT_CTOR)
/src/libusermode/userhook.hpp: 143 in plugin_target_config_entry_t::plugin_target_config_entry_t(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> &&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> &&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> &&, std::vector<std::unique_ptr<ArgumentPrinter, std::default_delete<ArgumentPrinter>>, std::allocator<std::unique_ptr<ArgumentPrinter, std::default_delete<ArgumentPrinter>>>> &&)()
137         plugin_target_config_entry_t(std::string&& dll_name, std::string&& function_name, addr_t offset, std::string&& log_strategy, std::vector< std::unique_ptr< ArgumentPrinter > > &&argument_printers)
138             : dll_name(std::move(dll_name)), type(HOOK_BY_OFFSET), function_name(std::move(function_name)), offset(offset), log_strategy(std::move(log_strategy)), argument_printers(std::move(argument_printers))
139         {}
140     
141         plugin_target_config_entry_t(std::string&& dll_name, std::string&& function_name, std::string&& log_strategy, std::vector< std::unique_ptr< ArgumentPrinter > > &&argument_printers)
142             : dll_name(std::move(dll_name)), type(HOOK_BY_NAME), function_name(std::move(function_name)), log_strategy(std::move(log_strategy)), argument_printers(std::move(argument_printers))
>>>     CID 287086:  Uninitialized members  (UNINIT_CTOR)
>>>     Non-static class member ""offset"" is not initialized in this constructor nor in any functions that it calls.
143         {}
144     };
145     
146     enum target_hook_state
147     {
148         HOOK_FIRST_TRY,

** CID 287085:  Uninitialized members  (UNINIT_CTOR)
/src/libusermode/userhook.hpp: 135 in plugin_target_config_entry_t::plugin_target_config_entry_t()()


________________________________________________________________________________________________________
*** CID 287085:  Uninitialized members  (UNINIT_CTOR)
/src/libusermode/userhook.hpp: 135 in plugin_target_config_entry_t::plugin_target_config_entry_t()()
129         addr_t offset;
130         std::string log_strategy;
131         std::vector< std::unique_ptr< ArgumentPrinter > > argument_printers;
132     
133         plugin_target_config_entry_t()
134             : dll_name(), function_name(), offset(), log_strategy(), argument_printers()
>>>     CID 287085:  Uninitialized members  (UNINIT_CTOR)
>>>     Non-static class member ""type"" is not initialized in this constructor nor in any functions that it calls.
135         {}
136     
137         plugin_target_config_entry_t(std::string&& dll_name, std::string&& function_name, addr_t offset, std::string&& log_strategy, std::vector< std::unique_ptr< ArgumentPrinter > > &&argument_printers)
138             : dll_name(std::move(dll_name)), type(HOOK_BY_OFFSET), function_name(std::move(function_name)), offset(offset), log_strategy(std::move(log_strategy)), argument_printers(std::move(argument_printers))
139         {}
140",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,865,2020-04-29T10:46:37Z,2020-04-29T21:56:53Z,2020-04-30T01:31:15Z,MERGED,True,193,30,11,https://github.com/BonusPlay,Add support for .NET AssemblyNative:::LoadImage hook,3,[],https://github.com/tklengyel/drakvuf/pull/865,https://github.com/BonusPlay,6,https://github.com/tklengyel/drakvuf/pull/865#issuecomment-621497261,This also implements userhooks by raw offset instead of only by name.,"Those all known.

Non-static class member ""trap"" is not initialized in this constructor nor in any functions that it calls.

This part was unmodified by this PR, so I believe it is initialized later (when trap is hit?).

Non-static class member ""offset"" is not initialized in this constructor nor in any functions that it calls.

This is a ctor for HOOK_BY_NAME, which does not initialize offset, because it doesn't know the offset at that time.

Non-static class member ""type"" is not initialized in this constructor nor in any functions that it calls.

This is basic ctor which expects user to populate it with values manually, so LGTM. Maybe we could add a INVALID_HOOK_TYPE as default to prevent some bugs 🤔.
Note:
whole libusermode could be re-written using std::variant (as there are 2 variants of hooks, by offset & by name, but I was way too lazy to do that).",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,865,2020-04-29T10:46:37Z,2020-04-29T21:56:53Z,2020-04-30T01:31:15Z,MERGED,True,193,30,11,https://github.com/BonusPlay,Add support for .NET AssemblyNative:::LoadImage hook,3,[],https://github.com/tklengyel/drakvuf/pull/865,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/865#issuecomment-621558976,This also implements userhooks by raw offset instead of only by name.,"Yea I think it just means the constructor has to initialize them to some default value (0, NULL etc), even if they are initialized later on by some other function outside the constructor.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,867,2020-04-30T16:28:36Z,2020-04-30T16:39:17Z,2020-04-30T16:44:37Z,MERGED,True,1,1,1,https://github.com/disaykin,Fix microsecs calculation in UNPACK_TIMEVAL,1,[],https://github.com/tklengyel/drakvuf/pull/867,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/867,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,867,2020-04-30T16:28:36Z,2020-04-30T16:39:17Z,2020-04-30T16:44:37Z,MERGED,True,1,1,1,https://github.com/disaykin,Fix microsecs calculation in UNPACK_TIMEVAL,1,[],https://github.com/tklengyel/drakvuf/pull/867,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/867#issuecomment-621961839,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,867,2020-04-30T16:28:36Z,2020-04-30T16:39:17Z,2020-04-30T16:44:37Z,MERGED,True,1,1,1,https://github.com/disaykin,Fix microsecs calculation in UNPACK_TIMEVAL,1,[],https://github.com/tklengyel/drakvuf/pull/867,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/867#issuecomment-621967205,,"Ah, yea, thanks for the fix ;)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,868,2020-04-30T23:03:30Z,2020-05-01T13:55:10Z,2020-05-01T14:33:38Z,MERGED,True,23,9,3,https://github.com/icedevml,Adjust package build process for Ubuntu 20.04,1,[],https://github.com/tklengyel/drakvuf/pull/868,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/868,"sh package/build.sh can now have optional argument of a build base image, e.g. sh package/build.sh ubuntu:20.04, default is ubuntu:18.04 (which produces package compatible with both Debian Buster and Ubuntu 18.04)
implement patches required for Xen to compile/work under Ubuntu 20.04","sh package/build.sh can now have optional argument of a build base image, e.g. sh package/build.sh ubuntu:20.04, default is ubuntu:18.04 (which produces package compatible with both Debian Buster and Ubuntu 18.04)
implement patches required for Xen to compile/work under Ubuntu 20.04",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,868,2020-04-30T23:03:30Z,2020-05-01T13:55:10Z,2020-05-01T14:33:38Z,MERGED,True,23,9,3,https://github.com/icedevml,Adjust package build process for Ubuntu 20.04,1,[],https://github.com/tklengyel/drakvuf/pull/868,https://github.com/icedevml,2,https://github.com/tklengyel/drakvuf/pull/868#issuecomment-622367963,"sh package/build.sh can now have optional argument of a build base image, e.g. sh package/build.sh ubuntu:20.04, default is ubuntu:18.04 (which produces package compatible with both Debian Buster and Ubuntu 18.04)
implement patches required for Xen to compile/work under Ubuntu 20.04","Ok, the Ubuntu 18.04 build was using default GCC which was gcc-7. For Ubuntu 20.04, using gcc-8 produces an unbootable hypervisor (at least for me), but falling back to gcc-7 is a solution.
So for now let's just use gcc-7 everywhere as it's producing good builds for both distros.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,869,2020-05-01T16:13:10Z,2020-05-01T18:50:01Z,2020-05-01T20:37:39Z,MERGED,True,1,1,1,https://github.com/icedevml,Fix CI,1,[],https://github.com/tklengyel/drakvuf/pull/869,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/869,Uncomment accidentally commented log redirection for Xen. It's too much for Travis to carry.,Uncomment accidentally commented log redirection for Xen. It's too much for Travis to carry.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,869,2020-05-01T16:13:10Z,2020-05-01T18:50:01Z,2020-05-01T20:37:39Z,MERGED,True,1,1,1,https://github.com/icedevml,Fix CI,1,[],https://github.com/tklengyel/drakvuf/pull/869,https://github.com/icedevml,2,https://github.com/tklengyel/drakvuf/pull/869#issuecomment-622458737,Uncomment accidentally commented log redirection for Xen. It's too much for Travis to carry.,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,870,2020-05-07T00:34:58Z,2020-05-07T01:08:22Z,2020-05-07T01:08:26Z,MERGED,True,1,1,1,https://github.com/tklengyel,Update LibVMI,1,[],https://github.com/tklengyel/drakvuf/pull/870,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/870,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,871,2020-05-07T12:58:43Z,2020-05-07T15:33:12Z,2020-05-07T15:47:10Z,MERGED,True,1,1,1,https://github.com/disaykin,Fix linux syscalls filter functionality.,1,[],https://github.com/tklengyel/drakvuf/pull/871,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/871,"From official g_hash_table_lookup () documentation:
...Note that this function cannot distinguish
between a key that is not present and one which
is present and has the value NULL.","From official g_hash_table_lookup () documentation:
...Note that this function cannot distinguish
between a key that is not present and one which
is present and has the value NULL.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,871,2020-05-07T12:58:43Z,2020-05-07T15:33:12Z,2020-05-07T15:47:10Z,MERGED,True,1,1,1,https://github.com/disaykin,Fix linux syscalls filter functionality.,1,[],https://github.com/tklengyel/drakvuf/pull/871,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/871#issuecomment-625239613,"From official g_hash_table_lookup () documentation:
...Note that this function cannot distinguish
between a key that is not present and one which
is present and has the value NULL.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,871,2020-05-07T12:58:43Z,2020-05-07T15:33:12Z,2020-05-07T15:47:10Z,MERGED,True,1,1,1,https://github.com/disaykin,Fix linux syscalls filter functionality.,1,[],https://github.com/tklengyel/drakvuf/pull/871,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/871#issuecomment-625265724,"From official g_hash_table_lookup () documentation:
...Note that this function cannot distinguish
between a key that is not present and one which
is present and has the value NULL.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,872,2020-05-07T13:08:53Z,2020-05-08T14:26:39Z,2020-06-19T08:40:18Z,MERGED,True,26,19,1,https://github.com/disaykin,Restore deleted windows syscalls filter functionality,1,[],https://github.com/tklengyel/drakvuf/pull/872,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/872,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,872,2020-05-07T13:08:53Z,2020-05-08T14:26:39Z,2020-06-19T08:40:18Z,MERGED,True,26,19,1,https://github.com/disaykin,Restore deleted windows syscalls filter functionality,1,[],https://github.com/tklengyel/drakvuf/pull/872,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/872#issuecomment-625244979,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,872,2020-05-07T13:08:53Z,2020-05-08T14:26:39Z,2020-06-19T08:40:18Z,MERGED,True,26,19,1,https://github.com/disaykin,Restore deleted windows syscalls filter functionality,1,[],https://github.com/tklengyel/drakvuf/pull/872,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/872#issuecomment-625265522,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,872,2020-05-07T13:08:53Z,2020-05-08T14:26:39Z,2020-06-19T08:40:18Z,MERGED,True,26,19,1,https://github.com/disaykin,Restore deleted windows syscalls filter functionality,1,[],https://github.com/tklengyel/drakvuf/pull/872,https://github.com/disaykin,4,https://github.com/tklengyel/drakvuf/pull/872#issuecomment-625327874,,"@tklengyel, please tell me which check failed.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,872,2020-05-07T13:08:53Z,2020-05-08T14:26:39Z,2020-06-19T08:40:18Z,MERGED,True,26,19,1,https://github.com/disaykin,Restore deleted windows syscalls filter functionality,1,[],https://github.com/tklengyel/drakvuf/pull/872,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/872#issuecomment-625328819,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,872,2020-05-07T13:08:53Z,2020-05-08T14:26:39Z,2020-06-19T08:40:18Z,MERGED,True,26,19,1,https://github.com/disaykin,Restore deleted windows syscalls filter functionality,1,[],https://github.com/tklengyel/drakvuf/pull/872,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/872#issuecomment-625334087,,On 32-bit Windows 7 with the syscall filter active there are no syscalls observed at all.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,872,2020-05-07T13:08:53Z,2020-05-08T14:26:39Z,2020-06-19T08:40:18Z,MERGED,True,26,19,1,https://github.com/disaykin,Restore deleted windows syscalls filter functionality,1,[],https://github.com/tklengyel/drakvuf/pull/872,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/872#issuecomment-625334223,,"Running DRAKVUF #1 for 60 seconds. Opts:  -i 1824 -e calc.exe -m createproc
DRAKVUF is running with PID 214532
CPU utilization average: 73
Syscalls: 49953
Running DRAKVUF #2 for 60 seconds. Opts:  -S /shared/jenkins/DRAKVUF-windows7-sp1-x86/ci/syscalls.txt -a syscalls
DRAKVUF is running with PID 215180
CPU utilization average: 0
Syscalls: 0",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,872,2020-05-07T13:08:53Z,2020-05-08T14:26:39Z,2020-06-19T08:40:18Z,MERGED,True,26,19,1,https://github.com/disaykin,Restore deleted windows syscalls filter functionality,1,[],https://github.com/tklengyel/drakvuf/pull/872,https://github.com/disaykin,8,https://github.com/tklengyel/drakvuf/pull/872#issuecomment-625400160,,"@tklengyel MR #838 seems to add regression to the syscall plugin on x86. Syscall names and their arguments are not printed. This is because symbols->symbols[z].rva == rva seems to always false on x86.
This regression leads to the behavior observed in this test. Because filter needs syscall names for filtering, all syscals is filtered out.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,872,2020-05-07T13:08:53Z,2020-05-08T14:26:39Z,2020-06-19T08:40:18Z,MERGED,True,26,19,1,https://github.com/disaykin,Restore deleted windows syscalls filter functionality,1,[],https://github.com/tklengyel/drakvuf/pull/872,https://github.com/disaykin,9,https://github.com/tklengyel/drakvuf/pull/872#issuecomment-625508564,,See #874,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,872,2020-05-07T13:08:53Z,2020-05-08T14:26:39Z,2020-06-19T08:40:18Z,MERGED,True,26,19,1,https://github.com/disaykin,Restore deleted windows syscalls filter functionality,1,[],https://github.com/tklengyel/drakvuf/pull/872,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/872#issuecomment-625841753,,Thanks for the fixes!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,874,2020-05-07T21:31:00Z,2020-05-08T13:16:30Z,2020-05-08T13:26:18Z,MERGED,True,18,18,3,https://github.com/disaykin,Fix syscall name and arguments printing on x86 windows guests,1,[],https://github.com/tklengyel/drakvuf/pull/874,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/874,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,874,2020-05-07T21:31:00Z,2020-05-08T13:16:30Z,2020-05-08T13:26:18Z,MERGED,True,18,18,3,https://github.com/disaykin,Fix syscall name and arguments printing on x86 windows guests,1,[],https://github.com/tklengyel/drakvuf/pull/874,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/874#issuecomment-625507974,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,874,2020-05-07T21:31:00Z,2020-05-08T13:16:30Z,2020-05-08T13:26:18Z,MERGED,True,18,18,3,https://github.com/disaykin,Fix syscall name and arguments printing on x86 windows guests,1,[],https://github.com/tklengyel/drakvuf/pull/874,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/874#issuecomment-625511198,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,874,2020-05-07T21:31:00Z,2020-05-08T13:16:30Z,2020-05-08T13:26:18Z,MERGED,True,18,18,3,https://github.com/disaykin,Fix syscall name and arguments printing on x86 windows guests,1,[],https://github.com/tklengyel/drakvuf/pull/874,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/874#issuecomment-625514651,,"Unfortunately this also fails the x86 CI test:
Running DRAKVUF #2 for 60 seconds. Opts:  -S /shared/jenkins/DRAKVUF-windows7-sp1-x86/ci/syscalls.txt -a syscalls
DRAKVUF is running with PID 233587

CPU utilization average: 0

Syscalls: 0",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,874,2020-05-07T21:31:00Z,2020-05-08T13:16:30Z,2020-05-08T13:26:18Z,MERGED,True,18,18,3,https://github.com/disaykin,Fix syscall name and arguments printing on x86 windows guests,1,[],https://github.com/tklengyel/drakvuf/pull/874,https://github.com/disaykin,5,https://github.com/tklengyel/drakvuf/pull/874#issuecomment-625695231,,"@tklengyel This is very strange.
I touch the logic of finding of arguments definition. This is does not change trap adding and handling.
Maybe this is segfault. Can you please show me debug logs of run?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,874,2020-05-07T21:31:00Z,2020-05-08T13:16:30Z,2020-05-08T13:26:18Z,MERGED,True,18,18,3,https://github.com/disaykin,Fix syscall name and arguments printing on x86 windows guests,1,[],https://github.com/tklengyel/drakvuf/pull/874,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/874#issuecomment-625794330,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,874,2020-05-07T21:31:00Z,2020-05-08T13:16:30Z,2020-05-08T13:26:18Z,MERGED,True,18,18,3,https://github.com/disaykin,Fix syscall name and arguments printing on x86 windows guests,1,[],https://github.com/tklengyel/drakvuf/pull/874,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/874#issuecomment-625805732,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,874,2020-05-07T21:31:00Z,2020-05-08T13:16:30Z,2020-05-08T13:26:18Z,MERGED,True,18,18,3,https://github.com/disaykin,Fix syscall name and arguments printing on x86 windows guests,1,[],https://github.com/tklengyel/drakvuf/pull/874,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/874#issuecomment-625810102,,Seems to work now,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,875,2020-05-12T23:46:34Z,2020-05-13T15:47:58Z,2020-05-13T15:47:58Z,MERGED,True,1,1,1,https://github.com/icedevml,Fix typo in example xl.cfg,1,[],https://github.com/tklengyel/drakvuf/pull/875,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/875,"https://xenbits.xen.org/docs/unstable/man/xl.cfg.5.html
The key name is
maxvcpus

not
maxcpus

:)","https://xenbits.xen.org/docs/unstable/man/xl.cfg.5.html
The key name is
maxvcpus

not
maxcpus

:)",True,{'HOORAY': ['https://github.com/chivay']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,875,2020-05-12T23:46:34Z,2020-05-13T15:47:58Z,2020-05-13T15:47:58Z,MERGED,True,1,1,1,https://github.com/icedevml,Fix typo in example xl.cfg,1,[],https://github.com/tklengyel/drakvuf/pull/875,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/875#issuecomment-628079007,"https://xenbits.xen.org/docs/unstable/man/xl.cfg.5.html
The key name is
maxvcpus

not
maxcpus

:)","Whoops, this was a typo in the example config I gave in the website :)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,876,2020-05-13T11:31:31Z,2020-05-13T16:07:05Z,2020-10-26T05:50:16Z,MERGED,True,49,9,3,https://github.com/skvl,filedelete: fix errors; dump files with handle reference count going zero,2,[],https://github.com/tklengyel/drakvuf/pull/876,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/876,"Fix error in drakvuf_get_obj_by_handle_impl
To fix error I had to clear two low bits in handle. That is based on WinDbg script, some notes in ""UNDOCUMENTED WINDOWS 2000 SECRETS"" and ""The Art of Memory Forensics"" books and my experiments.
With the fix I have no errors while processing handle table for Windows 7 x86 and Windows 10 x64 build 1803.


Fix error in filedelete callback for NtClose
There was no check that file been present in deleted/modified database filled from other callbacks.


Check reference count for handle in filedelete callback for NtClose
This allows to dump the file only when reference count goes to zero. Thus when all work with file done. I think this allows to avoid duplicates and would help in future work with async files.","Fix error in drakvuf_get_obj_by_handle_impl
To fix error I had to clear two low bits in handle. That is based on WinDbg script, some notes in ""UNDOCUMENTED WINDOWS 2000 SECRETS"" and ""The Art of Memory Forensics"" books and my experiments.
With the fix I have no errors while processing handle table for Windows 7 x86 and Windows 10 x64 build 1803.


Fix error in filedelete callback for NtClose
There was no check that file been present in deleted/modified database filled from other callbacks.


Check reference count for handle in filedelete callback for NtClose
This allows to dump the file only when reference count goes to zero. Thus when all work with file done. I think this allows to avoid duplicates and would help in future work with async files.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,876,2020-05-13T11:31:31Z,2020-05-13T16:07:05Z,2020-10-26T05:50:16Z,MERGED,True,49,9,3,https://github.com/skvl,filedelete: fix errors; dump files with handle reference count going zero,2,[],https://github.com/tklengyel/drakvuf/pull/876,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/876#issuecomment-628081106,"Fix error in drakvuf_get_obj_by_handle_impl
To fix error I had to clear two low bits in handle. That is based on WinDbg script, some notes in ""UNDOCUMENTED WINDOWS 2000 SECRETS"" and ""The Art of Memory Forensics"" books and my experiments.
With the fix I have no errors while processing handle table for Windows 7 x86 and Windows 10 x64 build 1803.


Fix error in filedelete callback for NtClose
There was no check that file been present in deleted/modified database filled from other callbacks.


Check reference count for handle in filedelete callback for NtClose
This allows to dump the file only when reference count goes to zero. Thus when all work with file done. I think this allows to avoid duplicates and would help in future work with async files.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,876,2020-05-13T11:31:31Z,2020-05-13T16:07:05Z,2020-10-26T05:50:16Z,MERGED,True,49,9,3,https://github.com/skvl,filedelete: fix errors; dump files with handle reference count going zero,2,[],https://github.com/tklengyel/drakvuf/pull/876,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/876#issuecomment-628081123,"Fix error in drakvuf_get_obj_by_handle_impl
To fix error I had to clear two low bits in handle. That is based on WinDbg script, some notes in ""UNDOCUMENTED WINDOWS 2000 SECRETS"" and ""The Art of Memory Forensics"" books and my experiments.
With the fix I have no errors while processing handle table for Windows 7 x86 and Windows 10 x64 build 1803.


Fix error in filedelete callback for NtClose
There was no check that file been present in deleted/modified database filled from other callbacks.


Check reference count for handle in filedelete callback for NtClose
This allows to dump the file only when reference count goes to zero. Thus when all work with file done. I think this allows to avoid duplicates and would help in future work with async files.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,877,2020-05-13T12:57:27Z,2020-05-13T16:13:17Z,2020-10-26T05:51:02Z,MERGED,True,1,1,1,https://github.com/skvl,libinjector: fix injection status check,1,[],https://github.com/tklengyel/drakvuf/pull/877,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/877,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,877,2020-05-13T12:57:27Z,2020-05-13T16:13:17Z,2020-10-26T05:51:02Z,MERGED,True,1,1,1,https://github.com/skvl,libinjector: fix injection status check,1,[],https://github.com/tklengyel/drakvuf/pull/877,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/877#issuecomment-628081663,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,877,2020-05-13T12:57:27Z,2020-05-13T16:13:17Z,2020-10-26T05:51:02Z,MERGED,True,1,1,1,https://github.com/skvl,libinjector: fix injection status check,1,[],https://github.com/tklengyel/drakvuf/pull/877,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/877#issuecomment-628081682,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,878,2020-05-14T15:48:02Z,2020-05-14T17:37:01Z,2020-10-26T05:50:28Z,MERGED,True,120,0,2,https://github.com/skvl,filetracer: catch NtSetInformationFile(FileBasicInformation),1,[],https://github.com/tklengyel/drakvuf/pull/878,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/878,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,878,2020-05-14T15:48:02Z,2020-05-14T17:37:01Z,2020-10-26T05:50:28Z,MERGED,True,120,0,2,https://github.com/skvl,filetracer: catch NtSetInformationFile(FileBasicInformation),1,[],https://github.com/tklengyel/drakvuf/pull/878,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/878#issuecomment-628722581,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,878,2020-05-14T15:48:02Z,2020-05-14T17:37:01Z,2020-10-26T05:50:28Z,MERGED,True,120,0,2,https://github.com/skvl,filetracer: catch NtSetInformationFile(FileBasicInformation),1,[],https://github.com/tklengyel/drakvuf/pull/878,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/878#issuecomment-628725012,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,879,2020-05-14T15:55:57Z,2020-05-14T19:19:25Z,2020-10-26T05:53:09Z,MERGED,True,15,3,4,https://github.com/skvl,memdump: disable memdump/userhook for Windows 10 1703,2,[],https://github.com/tklengyel/drakvuf/pull/879,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/879,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,879,2020-05-14T15:55:57Z,2020-05-14T19:19:25Z,2020-10-26T05:53:09Z,MERGED,True,15,3,4,https://github.com/skvl,memdump: disable memdump/userhook for Windows 10 1703,2,[],https://github.com/tklengyel/drakvuf/pull/879,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/879#issuecomment-628727235,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,879,2020-05-14T15:55:57Z,2020-05-14T19:19:25Z,2020-10-26T05:53:09Z,MERGED,True,15,3,4,https://github.com/skvl,memdump: disable memdump/userhook for Windows 10 1703,2,[],https://github.com/tklengyel/drakvuf/pull/879,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/879#issuecomment-628728321,,@skvl What problems are you experiencing with usermode hooking on Win10?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,879,2020-05-14T15:55:57Z,2020-05-14T19:19:25Z,2020-10-26T05:53:09Z,MERGED,True,15,3,4,https://github.com/skvl,memdump: disable memdump/userhook for Windows 10 1703,2,[],https://github.com/tklengyel/drakvuf/pull/879,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/879#issuecomment-628730877,,And why only with Windows build 15063?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,879,2020-05-14T15:55:57Z,2020-05-14T19:19:25Z,2020-10-26T05:53:09Z,MERGED,True,15,3,4,https://github.com/skvl,memdump: disable memdump/userhook for Windows 10 1703,2,[],https://github.com/tklengyel/drakvuf/pull/879,https://github.com/skvl,5,https://github.com/tklengyel/drakvuf/pull/879#issuecomment-628731645,,"libusermode/userhook.cpp hooks MiCopyOnWrite, which is not defined for Windows 10 1703 x64. Though there is MiCopyOnWriteEx.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,879,2020-05-14T15:55:57Z,2020-05-14T19:19:25Z,2020-10-26T05:53:09Z,MERGED,True,15,3,4,https://github.com/skvl,memdump: disable memdump/userhook for Windows 10 1703,2,[],https://github.com/tklengyel/drakvuf/pull/879,https://github.com/skvl,6,https://github.com/tklengyel/drakvuf/pull/879#issuecomment-628735825,,@tklengyel I don't know. With build 1803 it works. Though I don't check it with previous builds.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,879,2020-05-14T15:55:57Z,2020-05-14T19:19:25Z,2020-10-26T05:53:09Z,MERGED,True,15,3,4,https://github.com/skvl,memdump: disable memdump/userhook for Windows 10 1703,2,[],https://github.com/tklengyel/drakvuf/pull/879,https://github.com/icedevml,7,https://github.com/tklengyel/drakvuf/pull/879#issuecomment-628746718,,1703 seems to be fairly old build btw.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,879,2020-05-14T15:55:57Z,2020-05-14T19:19:25Z,2020-10-26T05:53:09Z,MERGED,True,15,3,4,https://github.com/skvl,memdump: disable memdump/userhook for Windows 10 1703,2,[],https://github.com/tklengyel/drakvuf/pull/879,https://github.com/skvl,8,https://github.com/tklengyel/drakvuf/pull/879#issuecomment-628747663,,"@icedevml, you are right. It is 3 years old. But I had to deal with it.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,879,2020-05-14T15:55:57Z,2020-05-14T19:19:25Z,2020-10-26T05:53:09Z,MERGED,True,15,3,4,https://github.com/skvl,memdump: disable memdump/userhook for Windows 10 1703,2,[],https://github.com/tklengyel/drakvuf/pull/879,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/879#issuecomment-628783840,,"Perhaps then disable it for everything that's older then that, not just for that specific version?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,879,2020-05-14T15:55:57Z,2020-05-14T19:19:25Z,2020-10-26T05:53:09Z,MERGED,True,15,3,4,https://github.com/skvl,memdump: disable memdump/userhook for Windows 10 1703,2,[],https://github.com/tklengyel/drakvuf/pull/879,https://github.com/skvl,10,https://github.com/tklengyel/drakvuf/pull/879#issuecomment-628785326,,"@tklengyel, it is possible. Though I didn't check other versions. So I decided not to overkill. What you think?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,879,2020-05-14T15:55:57Z,2020-05-14T19:19:25Z,2020-10-26T05:53:09Z,MERGED,True,15,3,4,https://github.com/skvl,memdump: disable memdump/userhook for Windows 10 1703,2,[],https://github.com/tklengyel/drakvuf/pull/879,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/879#issuecomment-628786732,,"I think it would be safer to disable it for older builds, doubt it would only be that one version where that function is missing. Probably got introduced in later builds only. In any case, if anyone needs it for older builds they can investigate whether it works or not.",True,{'THUMBS_UP': ['https://github.com/icedevml']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,879,2020-05-14T15:55:57Z,2020-05-14T19:19:25Z,2020-10-26T05:53:09Z,MERGED,True,15,3,4,https://github.com/skvl,memdump: disable memdump/userhook for Windows 10 1703,2,[],https://github.com/tklengyel/drakvuf/pull/879,https://github.com/skvl,12,https://github.com/tklengyel/drakvuf/pull/879#issuecomment-628794571,,@tklengyel done!,True,"{'THUMBS_UP': ['https://github.com/icedevml', 'https://github.com/tklengyel']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,879,2020-05-14T15:55:57Z,2020-05-14T19:19:25Z,2020-10-26T05:53:09Z,MERGED,True,15,3,4,https://github.com/skvl,memdump: disable memdump/userhook for Windows 10 1703,2,[],https://github.com/tklengyel/drakvuf/pull/879,https://github.com/tklengyel,13,https://github.com/tklengyel/drakvuf/pull/879#issuecomment-628830891,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,880,2020-05-14T19:31:05Z,2020-05-15T15:24:59Z,2020-10-26T05:50:46Z,MERGED,True,17,12,2,https://github.com/skvl,Fix some possible deadlocks,1,[],https://github.com/tklengyel/drakvuf/pull/880,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/880,"@tklengyel, I just have found some issue while using vmi_lock_guard in plugin initialization.
In socketmon I caught a deadlock in enumerating processes after initializing a vmi_lock_guard.
I fixed similar place in userhook too just for sure.","@tklengyel, I just have found some issue while using vmi_lock_guard in plugin initialization.
In socketmon I caught a deadlock in enumerating processes after initializing a vmi_lock_guard.
I fixed similar place in userhook too just for sure.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,880,2020-05-14T19:31:05Z,2020-05-15T15:24:59Z,2020-10-26T05:50:46Z,MERGED,True,17,12,2,https://github.com/skvl,Fix some possible deadlocks,1,[],https://github.com/tklengyel/drakvuf/pull/880,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/880#issuecomment-628843423,"@tklengyel, I just have found some issue while using vmi_lock_guard in plugin initialization.
In socketmon I caught a deadlock in enumerating processes after initializing a vmi_lock_guard.
I fixed similar place in userhook too just for sure.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,880,2020-05-14T19:31:05Z,2020-05-15T15:24:59Z,2020-10-26T05:50:46Z,MERGED,True,17,12,2,https://github.com/skvl,Fix some possible deadlocks,1,[],https://github.com/tklengyel/drakvuf/pull/880,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/880#issuecomment-628846143,"@tklengyel, I just have found some issue while using vmi_lock_guard in plugin initialization.
In socketmon I caught a deadlock in enumerating processes after initializing a vmi_lock_guard.
I fixed similar place in userhook too just for sure.","Huh, you can't use vmi_lock_guard in the function's context? It has to be restricted to another {} scope within?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,880,2020-05-14T19:31:05Z,2020-05-15T15:24:59Z,2020-10-26T05:50:46Z,MERGED,True,17,12,2,https://github.com/skvl,Fix some possible deadlocks,1,[],https://github.com/tklengyel/drakvuf/pull/880,https://github.com/skvl,4,https://github.com/tklengyel/drakvuf/pull/880#issuecomment-628864069,"@tklengyel, I just have found some issue while using vmi_lock_guard in plugin initialization.
In socketmon I caught a deadlock in enumerating processes after initializing a vmi_lock_guard.
I fixed similar place in userhook too just for sure.","Yes. Prior that was in function context. In result I found that back-trace in GDB:
#2  0x0000000000415d12 in drakvuf_lock_and_get_vmi (drakvuf=0x2044880) at drakvuf.c:442
#3  0x000000000048702d in module_trap_visitor (drakvuf=0x2044880, module_info=0x5b80000, visitor_ctx=0x7ffeaaa77f88) at socketmon/socketmon.cpp:796                                          
#4  0x000000000042127e in win_search_modules (drakvuf=drakvuf@entry=0x2044880, module_name=module_name@entry=0x5698e5 ""dnsapi.dll"",                                                          
    visitor_func=visitor_func@entry=0x486ea0 <module_trap_visitor(drakvuf*, _module_info const*, void*)>, visitor_ctx=visitor_ctx@entry=0x7ffeaaa77f88,                                      
    eprocess_addr=eprocess_addr@entry=18446691329884643904, wow_process=wow_process@entry=0, pid=604, ctx=0x7ffeaaa77ed0) at win-processes.c:730                                             
#5  0x0000000000421d28 in win_enumerate_processes_with_module (drakvuf=0x2044880, module_name=0x5698e5 ""dnsapi.dll"",                                                                         
    visitor_func=0x486ea0 <module_trap_visitor(drakvuf*, _module_info const*, void*)>, visitor_ctx=0x7ffeaaa77f88) at win-processes.c:984                                                    
#6  0x0000000000486dc1 in register_module_trap (drakvuf=0x2044880, trap=0x5bb7c20, module_name=0x5698e5 ""dnsapi.dll"", function_name=0x569963 ""DnsQuery_W"",                                   
    hook_cb=0x484b00 <trap_DnsQuery_W_cb(drakvuf*, drakvuf_trap_info*)>) at socketmon/socketmon.cpp:830                                                                                      
#7  0x0000000000484af9 in register_dnsapi_trap (drakvuf=0x2044880, trap=0x5bb7c20, function_name=0x569963 ""DnsQuery_W"", hook_cb=0x484b00 <trap_DnsQuery_W_cb(drakvuf*, drakvuf_trap_info*)>) 
    at socketmon/socketmon.cpp:841
#8  0x00000000004846af in socketmon::socketmon (this=0x5bb7bc0, drakvuf=0x2044880, c=0x7ffeaaa78420, output=OUTPUT_KV) at socketmon/socketmon.cpp:870                                        
#9  0x0000000000425940 in drakvuf_plugins::start (this=0x2dd3800, plugin_id=PLUGIN_SOCKETMON, options=0x7ffeaaa789a0) at plugins.cpp:230                                                     
#10 0x0000000000414c10 in drakvuf_c::start_plugins (this=0x2042720, plugin_list=0x7ffeaaa78a50, options=0x7ffeaaa789a0) at drakvuf.cpp:155                                                   
#11 0x00000000004147f8 in main (argc=68, argv=0x7ffeaaa78c88) at main.cpp:565",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,880,2020-05-14T19:31:05Z,2020-05-15T15:24:59Z,2020-10-26T05:50:46Z,MERGED,True,17,12,2,https://github.com/skvl,Fix some possible deadlocks,1,[],https://github.com/tklengyel/drakvuf/pull/880,https://github.com/skvl,5,https://github.com/tklengyel/drakvuf/pull/880#issuecomment-628864342,"@tklengyel, I just have found some issue while using vmi_lock_guard in plugin initialization.
In socketmon I caught a deadlock in enumerating processes after initializing a vmi_lock_guard.
I fixed similar place in userhook too just for sure.",If we restrict vmi_lock_guard in {} then it would be released before next line.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,880,2020-05-14T19:31:05Z,2020-05-15T15:24:59Z,2020-10-26T05:50:46Z,MERGED,True,17,12,2,https://github.com/skvl,Fix some possible deadlocks,1,[],https://github.com/tklengyel/drakvuf/pull/880,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/880#issuecomment-628959083,"@tklengyel, I just have found some issue while using vmi_lock_guard in plugin initialization.
In socketmon I caught a deadlock in enumerating processes after initializing a vmi_lock_guard.
I fixed similar place in userhook too just for sure.",Good to know. Could you check if we perhaps have other unsafe uses of it elsewhere? Would be nice to fix all of them in one go.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,880,2020-05-14T19:31:05Z,2020-05-15T15:24:59Z,2020-10-26T05:50:46Z,MERGED,True,17,12,2,https://github.com/skvl,Fix some possible deadlocks,1,[],https://github.com/tklengyel/drakvuf/pull/880,https://github.com/skvl,7,https://github.com/tklengyel/drakvuf/pull/880#issuecomment-629063189,"@tklengyel, I just have found some issue while using vmi_lock_guard in plugin initialization.
In socketmon I caught a deadlock in enumerating processes after initializing a vmi_lock_guard.
I fixed similar place in userhook too just for sure.","Sure. All other places looks reasonably good.
I noticed that the same trick have been used in delaymon::trap_NtDelayExecution_cb, socketmon::trap_DnsQueryEx_cb, socketmon::trap_DnsQuery_W_cb, wmimon::CoCreateInstanse_handler and wmimon::wmimon.
In envmon::trap_DefineDosDeviceW_cb and wmimon::ExecMethod_return_handler there is other way to achieve the same. Explicitly call unlock.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,880,2020-05-14T19:31:05Z,2020-05-15T15:24:59Z,2020-10-26T05:50:46Z,MERGED,True,17,12,2,https://github.com/skvl,Fix some possible deadlocks,1,[],https://github.com/tklengyel/drakvuf/pull/880,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/880#issuecomment-629229745,"@tklengyel, I just have found some issue while using vmi_lock_guard in plugin initialization.
In socketmon I caught a deadlock in enumerating processes after initializing a vmi_lock_guard.
I fixed similar place in userhook too just for sure.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,880,2020-05-14T19:31:05Z,2020-05-15T15:24:59Z,2020-10-26T05:50:46Z,MERGED,True,17,12,2,https://github.com/skvl,Fix some possible deadlocks,1,[],https://github.com/tklengyel/drakvuf/pull/880,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/880#issuecomment-629230195,"@tklengyel, I just have found some issue while using vmi_lock_guard in plugin initialization.
In socketmon I caught a deadlock in enumerating processes after initializing a vmi_lock_guard.
I fixed similar place in userhook too just for sure.",Sure but if you have to call unlock you might as well just use the standard libdrakvuf functions to get & release it :),True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,880,2020-05-14T19:31:05Z,2020-05-15T15:24:59Z,2020-10-26T05:50:46Z,MERGED,True,17,12,2,https://github.com/skvl,Fix some possible deadlocks,1,[],https://github.com/tklengyel/drakvuf/pull/880,https://github.com/skvl,10,https://github.com/tklengyel/drakvuf/pull/880#issuecomment-629257506,"@tklengyel, I just have found some issue while using vmi_lock_guard in plugin initialization.
In socketmon I caught a deadlock in enumerating processes after initializing a vmi_lock_guard.
I fixed similar place in userhook too just for sure.","Sure but if you have to call unlock you might as well just use the standard libdrakvuf functions to get & release it :)

I understand :) I just mentioned other places.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,881,2020-05-15T12:01:00Z,2020-05-15T15:25:15Z,2020-10-26T05:52:43Z,MERGED,True,5,1,1,https://github.com/skvl,procdump: replace assert with warning,1,[],https://github.com/tklengyel/drakvuf/pull/881,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/881,I forgot to push this little change with procdump branch...,I forgot to push this little change with procdump branch...,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,881,2020-05-15T12:01:00Z,2020-05-15T15:25:15Z,2020-10-26T05:52:43Z,MERGED,True,5,1,1,https://github.com/skvl,procdump: replace assert with warning,1,[],https://github.com/tklengyel/drakvuf/pull/881,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/881#issuecomment-629195619,I forgot to push this little change with procdump branch...,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,881,2020-05-15T12:01:00Z,2020-05-15T15:25:15Z,2020-10-26T05:52:43Z,MERGED,True,5,1,1,https://github.com/skvl,procdump: replace assert with warning,1,[],https://github.com/tklengyel/drakvuf/pull/881,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/881#issuecomment-629226699,I forgot to push this little change with procdump branch...,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,882,2020-05-15T12:02:47Z,2020-05-26T01:36:04Z,2020-05-26T01:36:04Z,MERGED,True,2162,429,12,https://github.com/zodeak,added version 2 of type-safe printers + envmon with it,9,[],https://github.com/tklengyel/drakvuf/pull/882,https://github.com/zodeak,1,https://github.com/tklengyel/drakvuf/pull/882,"I have tried to unify various printers.
So it can print only 'fmt' defined types and types should be specified in print() explicitly.","I have tried to unify various printers.
So it can print only 'fmt' defined types and types should be specified in print() explicitly.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,882,2020-05-15T12:02:47Z,2020-05-26T01:36:04Z,2020-05-26T01:36:04Z,MERGED,True,2162,429,12,https://github.com/zodeak,added version 2 of type-safe printers + envmon with it,9,[],https://github.com/tklengyel/drakvuf/pull/882,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/882#issuecomment-629196344,"I have tried to unify various printers.
So it can print only 'fmt' defined types and types should be specified in print() explicitly.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,882,2020-05-15T12:02:47Z,2020-05-26T01:36:04Z,2020-05-26T01:36:04Z,MERGED,True,2162,429,12,https://github.com/zodeak,added version 2 of type-safe printers + envmon with it,9,[],https://github.com/tklengyel/drakvuf/pull/882,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/882#issuecomment-630908889,"I have tried to unify various printers.
So it can print only 'fmt' defined types and types should be specified in print() explicitly.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,882,2020-05-15T12:02:47Z,2020-05-26T01:36:04Z,2020-05-26T01:36:04Z,MERGED,True,2162,429,12,https://github.com/zodeak,added version 2 of type-safe printers + envmon with it,9,[],https://github.com/tklengyel/drakvuf/pull/882,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/882#issuecomment-630909486,"I have tried to unify various printers.
So it can print only 'fmt' defined types and types should be specified in print() explicitly.",@icedevml Thoughts on this one?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,882,2020-05-15T12:02:47Z,2020-05-26T01:36:04Z,2020-05-26T01:36:04Z,MERGED,True,2162,429,12,https://github.com/zodeak,added version 2 of type-safe printers + envmon with it,9,[],https://github.com/tklengyel/drakvuf/pull/882,https://github.com/icedevml,5,https://github.com/tklengyel/drakvuf/pull/882#issuecomment-630913554,"I have tried to unify various printers.
So it can print only 'fmt' defined types and types should be specified in print() explicitly.",@tklengyel I'll be looking at it within few hours.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,882,2020-05-15T12:02:47Z,2020-05-26T01:36:04Z,2020-05-26T01:36:04Z,MERGED,True,2162,429,12,https://github.com/zodeak,added version 2 of type-safe printers + envmon with it,9,[],https://github.com/tklengyel/drakvuf/pull/882,https://github.com/icedevml,6,https://github.com/tklengyel/drakvuf/pull/882#issuecomment-630921384,"I have tried to unify various printers.
So it can print only 'fmt' defined types and types should be specified in print() explicitly.",Also ping @BonusPlay @chivay - they know C++ much better than me :P,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,882,2020-05-15T12:02:47Z,2020-05-26T01:36:04Z,2020-05-26T01:36:04Z,MERGED,True,2162,429,12,https://github.com/zodeak,added version 2 of type-safe printers + envmon with it,9,[],https://github.com/tklengyel/drakvuf/pull/882,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/882#issuecomment-633764159,"I have tried to unify various printers.
So it can print only 'fmt' defined types and types should be specified in print() explicitly.","@BonusPlay Let me know when you are done with your review, I skimmed through the PR and it looks good to me but to me any C++ that's beyond C with classes is usually ¯\_(ツ)_/¯",True,{'LAUGH': ['https://github.com/icedevml']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,882,2020-05-15T12:02:47Z,2020-05-26T01:36:04Z,2020-05-26T01:36:04Z,MERGED,True,2162,429,12,https://github.com/zodeak,added version 2 of type-safe printers + envmon with it,9,[],https://github.com/tklengyel/drakvuf/pull/882,https://github.com/BonusPlay,8,https://github.com/tklengyel/drakvuf/pull/882#issuecomment-633764324,"I have tried to unify various printers.
So it can print only 'fmt' defined types and types should be specified in print() explicitly.","@tklengyel I already reviewed it, LGTM.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,883,2020-05-16T22:24:12Z,2020-05-17T20:45:20Z,2020-05-17T20:45:20Z,MERGED,True,3,3,2,https://github.com/icedevml,Enable optional debug output for drakvuf-bundle,2,[],https://github.com/tklengyel/drakvuf/pull/883,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/883,"The debug printouts will not show by default but would have to be enabled with:

LIBVMI_DEBUG=1 for LibVMI
-v switch for DRAKVUF

this would make it much easier to diagnose some bugs.","The debug printouts will not show by default but would have to be enabled with:

LIBVMI_DEBUG=1 for LibVMI
-v switch for DRAKVUF

this would make it much easier to diagnose some bugs.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,884,2020-05-19T12:36:06Z,2020-05-19T13:54:32Z,2020-11-06T18:53:42Z,MERGED,True,48,16,3,https://github.com/icedevml,"Refactor package build, improve compatibility",4,[],https://github.com/tklengyel/drakvuf/pull/884,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/884,"A little refactor, now it should be simultaneously compatible with ubuntu:focal, ubuntu:bionic and debian:buster.","A little refactor, now it should be simultaneously compatible with ubuntu:focal, ubuntu:bionic and debian:buster.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,886,2020-05-19T15:07:05Z,2020-05-19T15:42:09Z,2020-05-23T20:08:34Z,MERGED,True,1,1,1,https://github.com/tklengyel,Update Xen submodule with vm_event fixes,1,[],https://github.com/tklengyel/drakvuf/pull/886,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/886,Fixes #885,Fixes #885,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,886,2020-05-19T15:07:05Z,2020-05-19T15:42:09Z,2020-05-23T20:08:34Z,MERGED,True,1,1,1,https://github.com/tklengyel,Update Xen submodule with vm_event fixes,1,[],https://github.com/tklengyel/drakvuf/pull/886,https://github.com/icedevml,2,https://github.com/tklengyel/drakvuf/pull/886#issuecomment-630893245,Fixes #885,+1,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,886,2020-05-19T15:07:05Z,2020-05-19T15:42:09Z,2020-05-23T20:08:34Z,MERGED,True,1,1,1,https://github.com/tklengyel,Update Xen submodule with vm_event fixes,1,[],https://github.com/tklengyel/drakvuf/pull/886,https://github.com/aoshiken,3,https://github.com/tklengyel/drakvuf/pull/886#issuecomment-633121696,Fixes #885,"Guys, don't you think it will worth to rebase against the recently released 4.13.1 version?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,886,2020-05-19T15:07:05Z,2020-05-19T15:42:09Z,2020-05-23T20:08:34Z,MERGED,True,1,1,1,https://github.com/tklengyel,Update Xen submodule with vm_event fixes,1,[],https://github.com/tklengyel/drakvuf/pull/886,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/886#issuecomment-633130110,Fixes #885,Sure,True,{'THUMBS_UP': ['https://github.com/aoshiken']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,887,2020-05-19T15:24:50Z,2020-05-19T15:46:23Z,2020-11-06T18:53:45Z,MERGED,True,1,1,1,https://github.com/icedevml,Bump LibVMI to latest master,1,[],https://github.com/tklengyel/drakvuf/pull/887,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/887,(This will allow me to release new patched Sandbox version without diversion from upstream DRAKVUF.),(This will allow me to release new patched Sandbox version without diversion from upstream DRAKVUF.),True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,888,2020-05-19T20:01:14Z,2020-05-19T22:49:14Z,2020-05-19T22:49:14Z,MERGED,True,17,3,4,https://github.com/icedevml,Fix typos in package/depends.sh,2,[],https://github.com/tklengyel/drakvuf/pull/888,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/888,"Fix few typos
Add swab.h patch for Debian to make qemu build properly","Fix few typos
Add swab.h patch for Debian to make qemu build properly",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,891,2020-05-23T20:06:01Z,2020-05-23T22:44:49Z,2020-05-23T22:44:52Z,MERGED,True,1,1,1,https://github.com/tklengyel,Update Xen to 4.13.1 with backported fixes,1,[],https://github.com/tklengyel/drakvuf/pull/891,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/891,,,True,"{'THUMBS_UP': ['https://github.com/icedevml', 'https://github.com/aoshiken']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,891,2020-05-23T20:06:01Z,2020-05-23T22:44:49Z,2020-05-23T22:44:52Z,MERGED,True,1,1,1,https://github.com/tklengyel,Update Xen to 4.13.1 with backported fixes,1,[],https://github.com/tklengyel/drakvuf/pull/891,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/891#issuecomment-633132432,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,891,2020-05-23T20:06:01Z,2020-05-23T22:44:49Z,2020-05-23T22:44:52Z,MERGED,True,1,1,1,https://github.com/tklengyel,Update Xen to 4.13.1 with backported fixes,1,[],https://github.com/tklengyel/drakvuf/pull/891,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/891#issuecomment-633133554,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,891,2020-05-23T20:06:01Z,2020-05-23T22:44:49Z,2020-05-23T22:44:52Z,MERGED,True,1,1,1,https://github.com/tklengyel,Update Xen to 4.13.1 with backported fixes,1,[],https://github.com/tklengyel/drakvuf/pull/891,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/891#issuecomment-633139760,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,892,2020-05-24T10:34:42Z,2020-05-24T14:31:53Z,2020-05-24T14:31:53Z,MERGED,True,9,1,1,https://github.com/icedevml,Fix package build error in Travis,1,[],https://github.com/tklengyel/drakvuf/pull/892,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/892,"I always forget to uncomment this:
# 2>&1 >package/log/xen-build.log

let's just make a special exception in the code for Travis","I always forget to uncomment this:
# 2>&1 >package/log/xen-build.log

let's just make a special exception in the code for Travis",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,894,2020-05-28T00:31:01Z,2020-05-28T00:38:07Z,2020-05-28T00:38:18Z,CLOSED,False,2,0,1,https://github.com/tklengyel,Set registers in cpuidmon stealth mode,1,[],https://github.com/tklengyel/drakvuf/pull/894,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/894,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,894,2020-05-28T00:31:01Z,2020-05-28T00:38:07Z,2020-05-28T00:38:18Z,CLOSED,False,2,0,1,https://github.com/tklengyel,Set registers in cpuidmon stealth mode,1,[],https://github.com/tklengyel/drakvuf/pull/894,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/894#issuecomment-635020355,,Not actually needed,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,895,2020-05-28T09:20:34Z,2020-05-28T13:37:58Z,2020-05-28T21:44:23Z,MERGED,True,2,2,1,https://github.com/icedevml,Fix package build,3,[],https://github.com/tklengyel/drakvuf/pull/895,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/895,resolve #893,resolve #893,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,896,2020-05-28T18:53:48Z,2020-08-14T11:08:32Z,2020-08-14T11:08:32Z,MERGED,True,2968,1168,11,https://github.com/Dos98,Filetracer Plugin for Linux,23,[],https://github.com/tklengyel/drakvuf/pull/896,https://github.com/Dos98,1,https://github.com/tklengyel/drakvuf/pull/896,"Hi Everyone,
I have completed the filetracer plugin for Linux os. I would like you review it and give suggestions to improve it in every-way.

I have restructured the filetracer class.
I tried to capture almost all file operations for linux file tracer.

I have tested it for Linux Ubuntu 20.04 and Debian Buster.","Hi Everyone,
I have completed the filetracer plugin for Linux os. I would like you review it and give suggestions to improve it in every-way.

I have restructured the filetracer class.
I tried to capture almost all file operations for linux file tracer.

I have tested it for Linux Ubuntu 20.04 and Debian Buster.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,896,2020-05-28T18:53:48Z,2020-08-14T11:08:32Z,2020-08-14T11:08:32Z,MERGED,True,2968,1168,11,https://github.com/Dos98,Filetracer Plugin for Linux,23,[],https://github.com/tklengyel/drakvuf/pull/896,https://github.com/Dos98,2,https://github.com/tklengyel/drakvuf/pull/896#issuecomment-635538107,"Hi Everyone,
I have completed the filetracer plugin for Linux os. I would like you review it and give suggestions to improve it in every-way.

I have restructured the filetracer class.
I tried to capture almost all file operations for linux file tracer.

I have tested it for Linux Ubuntu 20.04 and Debian Buster.","For Ubuntu 20.04, I see that gcc optimizes kernel sym utimes_common to utimes_common.isra.0 and not in other linux distros. Therefore it would fail to register trap there on other linux distros.
cat /proc/kallsyms | grep utimes_common
Just shorten the trap's syscall name.
File: filetracer.cpp in register_trap function call",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,896,2020-05-28T18:53:48Z,2020-08-14T11:08:32Z,2020-08-14T11:08:32Z,MERGED,True,2968,1168,11,https://github.com/Dos98,Filetracer Plugin for Linux,23,[],https://github.com/tklengyel/drakvuf/pull/896,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/896#issuecomment-635668584,"Hi Everyone,
I have completed the filetracer plugin for Linux os. I would like you review it and give suggestions to improve it in every-way.

I have restructured the filetracer class.
I tried to capture almost all file operations for linux file tracer.

I have tested it for Linux Ubuntu 20.04 and Debian Buster.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,896,2020-05-28T18:53:48Z,2020-08-14T11:08:32Z,2020-08-14T11:08:32Z,MERGED,True,2968,1168,11,https://github.com/Dos98,Filetracer Plugin for Linux,23,[],https://github.com/tklengyel/drakvuf/pull/896,https://github.com/drakvuf-jenkins,4,https://github.com/tklengyel/drakvuf/pull/896#issuecomment-635668591,"Hi Everyone,
I have completed the filetracer plugin for Linux os. I would like you review it and give suggestions to improve it in every-way.

I have restructured the filetracer class.
I tried to capture almost all file operations for linux file tracer.

I have tested it for Linux Ubuntu 20.04 and Debian Buster.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,896,2020-05-28T18:53:48Z,2020-08-14T11:08:32Z,2020-08-14T11:08:32Z,MERGED,True,2968,1168,11,https://github.com/Dos98,Filetracer Plugin for Linux,23,[],https://github.com/tklengyel/drakvuf/pull/896,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/896#issuecomment-636513665,"Hi Everyone,
I have completed the filetracer plugin for Linux os. I would like you review it and give suggestions to improve it in every-way.

I have restructured the filetracer class.
I tried to capture almost all file operations for linux file tracer.

I have tested it for Linux Ubuntu 20.04 and Debian Buster.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,896,2020-05-28T18:53:48Z,2020-08-14T11:08:32Z,2020-08-14T11:08:32Z,MERGED,True,2968,1168,11,https://github.com/Dos98,Filetracer Plugin for Linux,23,[],https://github.com/tklengyel/drakvuf/pull/896,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/896#issuecomment-637169875,"Hi Everyone,
I have completed the filetracer plugin for Linux os. I would like you review it and give suggestions to improve it in every-way.

I have restructured the filetracer class.
I tried to capture almost all file operations for linux file tracer.

I have tested it for Linux Ubuntu 20.04 and Debian Buster.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,896,2020-05-28T18:53:48Z,2020-08-14T11:08:32Z,2020-08-14T11:08:32Z,MERGED,True,2968,1168,11,https://github.com/Dos98,Filetracer Plugin for Linux,23,[],https://github.com/tklengyel/drakvuf/pull/896,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/896#issuecomment-642879124,"Hi Everyone,
I have completed the filetracer plugin for Linux os. I would like you review it and give suggestions to improve it in every-way.

I have restructured the filetracer class.
I tried to capture almost all file operations for linux file tracer.

I have tested it for Linux Ubuntu 20.04 and Debian Buster.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,896,2020-05-28T18:53:48Z,2020-08-14T11:08:32Z,2020-08-14T11:08:32Z,MERGED,True,2968,1168,11,https://github.com/Dos98,Filetracer Plugin for Linux,23,[],https://github.com/tklengyel/drakvuf/pull/896,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/896#issuecomment-642881980,"Hi Everyone,
I have completed the filetracer plugin for Linux os. I would like you review it and give suggestions to improve it in every-way.

I have restructured the filetracer class.
I tried to capture almost all file operations for linux file tracer.

I have tested it for Linux Ubuntu 20.04 and Debian Buster.",On the debian-stretch test VM filetracer fails: Plugin filetracer startup failed!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,896,2020-05-28T18:53:48Z,2020-08-14T11:08:32Z,2020-08-14T11:08:32Z,MERGED,True,2968,1168,11,https://github.com/Dos98,Filetracer Plugin for Linux,23,[],https://github.com/tklengyel/drakvuf/pull/896,https://github.com/Dos98,9,https://github.com/tklengyel/drakvuf/pull/896#issuecomment-643660726,"Hi Everyone,
I have completed the filetracer plugin for Linux os. I would like you review it and give suggestions to improve it in every-way.

I have restructured the filetracer class.
I tried to capture almost all file operations for linux file tracer.

I have tested it for Linux Ubuntu 20.04 and Debian Buster.","Commented for now, as kernel symbol's suffix varies with distros.

For Ubuntu 20.04, I see that gcc optimizes kernel sym utimes_common to utimes_common.isra.0 and not in other linux distros. Therefore it would fail to register trap there on other linux distros.
cat /proc/kallsyms | grep utimes_common
Just shorten the trap's syscall name.
File: filetracer.cpp in register_trap function call",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,896,2020-05-28T18:53:48Z,2020-08-14T11:08:32Z,2020-08-14T11:08:32Z,MERGED,True,2968,1168,11,https://github.com/Dos98,Filetracer Plugin for Linux,23,[],https://github.com/tklengyel/drakvuf/pull/896,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/896#issuecomment-643703842,"Hi Everyone,
I have completed the filetracer plugin for Linux os. I would like you review it and give suggestions to improve it in every-way.

I have restructured the filetracer class.
I tried to capture almost all file operations for linux file tracer.

I have tested it for Linux Ubuntu 20.04 and Debian Buster.","On the debian-stretch kernel I have
root@debian-stretch:~# cat /proc/kallsyms | grep utimes_common
ffffffff9549fb10 t utimes_common",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,896,2020-05-28T18:53:48Z,2020-08-14T11:08:32Z,2020-08-14T11:08:32Z,MERGED,True,2968,1168,11,https://github.com/Dos98,Filetracer Plugin for Linux,23,[],https://github.com/tklengyel/drakvuf/pull/896,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/896#issuecomment-643703853,"Hi Everyone,
I have completed the filetracer plugin for Linux os. I would like you review it and give suggestions to improve it in every-way.

I have restructured the filetracer class.
I tried to capture almost all file operations for linux file tracer.

I have tested it for Linux Ubuntu 20.04 and Debian Buster.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,896,2020-05-28T18:53:48Z,2020-08-14T11:08:32Z,2020-08-14T11:08:32Z,MERGED,True,2968,1168,11,https://github.com/Dos98,Filetracer Plugin for Linux,23,[],https://github.com/tklengyel/drakvuf/pull/896,https://github.com/tklengyel,12,https://github.com/tklengyel/drakvuf/pull/896#issuecomment-647035326,"Hi Everyone,
I have completed the filetracer plugin for Linux os. I would like you review it and give suggestions to improve it in every-way.

I have restructured the filetracer class.
I tried to capture almost all file operations for linux file tracer.

I have tested it for Linux Ubuntu 20.04 and Debian Buster.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,896,2020-05-28T18:53:48Z,2020-08-14T11:08:32Z,2020-08-14T11:08:32Z,MERGED,True,2968,1168,11,https://github.com/Dos98,Filetracer Plugin for Linux,23,[],https://github.com/tklengyel/drakvuf/pull/896,https://github.com/Dos98,13,https://github.com/tklengyel/drakvuf/pull/896#issuecomment-647716786,"Hi Everyone,
I have completed the filetracer plugin for Linux os. I would like you review it and give suggestions to improve it in every-way.

I have restructured the filetracer class.
I tried to capture almost all file operations for linux file tracer.

I have tested it for Linux Ubuntu 20.04 and Debian Buster.",@tklengyel  Let me know what was the error reported by drakvuf-jenkins.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,896,2020-05-28T18:53:48Z,2020-08-14T11:08:32Z,2020-08-14T11:08:32Z,MERGED,True,2968,1168,11,https://github.com/Dos98,Filetracer Plugin for Linux,23,[],https://github.com/tklengyel/drakvuf/pull/896,https://github.com/tklengyel,14,https://github.com/tklengyel/drakvuf/pull/896#issuecomment-647893770,"Hi Everyone,
I have completed the filetracer plugin for Linux os. I would like you review it and give suggestions to improve it in every-way.

I have restructured the filetracer class.
I tried to capture almost all file operations for linux file tracer.

I have tested it for Linux Ubuntu 20.04 and Debian Buster.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,896,2020-05-28T18:53:48Z,2020-08-14T11:08:32Z,2020-08-14T11:08:32Z,MERGED,True,2968,1168,11,https://github.com/Dos98,Filetracer Plugin for Linux,23,[],https://github.com/tklengyel/drakvuf/pull/896,https://github.com/tklengyel,15,https://github.com/tklengyel/drakvuf/pull/896#issuecomment-648151329,"Hi Everyone,
I have completed the filetracer plugin for Linux os. I would like you review it and give suggestions to improve it in every-way.

I have restructured the filetracer class.
I tried to capture almost all file operations for linux file tracer.

I have tested it for Linux Ubuntu 20.04 and Debian Buster.","Memory leaks caught by valgrind:
 0264             dirname = g_strdup_printf(""%s"", vmi_read_str(vmi, &ctx));

 0315     lw->filename = g_strdup_printf(""%s"", get_filepath(drakvuf, info, vmi_lg.vmi, dentry_addr).data());

and a bunch more. Please use valgrind on your local machine and fix these.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,896,2020-05-28T18:53:48Z,2020-08-14T11:08:32Z,2020-08-14T11:08:32Z,MERGED,True,2968,1168,11,https://github.com/Dos98,Filetracer Plugin for Linux,23,[],https://github.com/tklengyel/drakvuf/pull/896,https://github.com/tklengyel,16,https://github.com/tklengyel/drakvuf/pull/896#issuecomment-663030731,"Hi Everyone,
I have completed the filetracer plugin for Linux os. I would like you review it and give suggestions to improve it in every-way.

I have restructured the filetracer class.
I tried to capture almost all file operations for linux file tracer.

I have tested it for Linux Ubuntu 20.04 and Debian Buster.",@drakvuf-jenkins Retest this please,True,{'HOORAY': ['https://github.com/Dos98']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,896,2020-05-28T18:53:48Z,2020-08-14T11:08:32Z,2020-08-14T11:08:32Z,MERGED,True,2968,1168,11,https://github.com/Dos98,Filetracer Plugin for Linux,23,[],https://github.com/tklengyel/drakvuf/pull/896,https://github.com/tklengyel,17,https://github.com/tklengyel/drakvuf/pull/896#issuecomment-663252122,"Hi Everyone,
I have completed the filetracer plugin for Linux os. I would like you review it and give suggestions to improve it in every-way.

I have restructured the filetracer class.
I tried to capture almost all file operations for linux file tracer.

I have tested it for Linux Ubuntu 20.04 and Debian Buster.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,896,2020-05-28T18:53:48Z,2020-08-14T11:08:32Z,2020-08-14T11:08:32Z,MERGED,True,2968,1168,11,https://github.com/Dos98,Filetracer Plugin for Linux,23,[],https://github.com/tklengyel/drakvuf/pull/896,https://github.com/tklengyel,18,https://github.com/tklengyel/drakvuf/pull/896#issuecomment-663260862,"Hi Everyone,
I have completed the filetracer plugin for Linux os. I would like you review it and give suggestions to improve it in every-way.

I have restructured the filetracer class.
I tried to capture almost all file operations for linux file tracer.

I have tested it for Linux Ubuntu 20.04 and Debian Buster.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,896,2020-05-28T18:53:48Z,2020-08-14T11:08:32Z,2020-08-14T11:08:32Z,MERGED,True,2968,1168,11,https://github.com/Dos98,Filetracer Plugin for Linux,23,[],https://github.com/tklengyel/drakvuf/pull/896,https://github.com/tklengyel,19,https://github.com/tklengyel/drakvuf/pull/896#issuecomment-663262358,"Hi Everyone,
I have completed the filetracer plugin for Linux os. I would like you review it and give suggestions to improve it in every-way.

I have restructured the filetracer class.
I tried to capture almost all file operations for linux file tracer.

I have tested it for Linux Ubuntu 20.04 and Debian Buster.",Looks like you have a double-free bug somewhere: free(): invalid pointer,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,896,2020-05-28T18:53:48Z,2020-08-14T11:08:32Z,2020-08-14T11:08:32Z,MERGED,True,2968,1168,11,https://github.com/Dos98,Filetracer Plugin for Linux,23,[],https://github.com/tklengyel/drakvuf/pull/896,https://github.com/tklengyel,20,https://github.com/tklengyel/drakvuf/pull/896#issuecomment-671417622,"Hi Everyone,
I have completed the filetracer plugin for Linux os. I would like you review it and give suggestions to improve it in every-way.

I have restructured the filetracer class.
I tried to capture almost all file operations for linux file tracer.

I have tested it for Linux Ubuntu 20.04 and Debian Buster.","Please don't change the libvmi submodule, if it needs to be updated that's usually done in separate PRs",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,896,2020-05-28T18:53:48Z,2020-08-14T11:08:32Z,2020-08-14T11:08:32Z,MERGED,True,2968,1168,11,https://github.com/Dos98,Filetracer Plugin for Linux,23,[],https://github.com/tklengyel/drakvuf/pull/896,https://github.com/Dos98,21,https://github.com/tklengyel/drakvuf/pull/896#issuecomment-671559919,"Hi Everyone,
I have completed the filetracer plugin for Linux os. I would like you review it and give suggestions to improve it in every-way.

I have restructured the filetracer class.
I tried to capture almost all file operations for linux file tracer.

I have tested it for Linux Ubuntu 20.04 and Debian Buster.",Certainly prev 6 commits looks like a git blunder. Confused by git revert. Fixed .gitignore. It's all good now. phew!,True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,896,2020-05-28T18:53:48Z,2020-08-14T11:08:32Z,2020-08-14T11:08:32Z,MERGED,True,2968,1168,11,https://github.com/Dos98,Filetracer Plugin for Linux,23,[],https://github.com/tklengyel/drakvuf/pull/896,https://github.com/tklengyel,22,https://github.com/tklengyel/drakvuf/pull/896#issuecomment-673729371,"Hi Everyone,
I have completed the filetracer plugin for Linux os. I would like you review it and give suggestions to improve it in every-way.

I have restructured the filetracer class.
I tried to capture almost all file operations for linux file tracer.

I have tested it for Linux Ubuntu 20.04 and Debian Buster.",@Dos98 I tested the PR and it works great! Would need a final rebase to resolve some conflicts due to some recent changes and then I'm happy to merge. Thanks for adding this! 👍 🥇,True,{'HOORAY': ['https://github.com/Dos98']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,897,2020-05-29T06:18:36Z,2020-06-24T21:38:35Z,2020-10-26T05:51:58Z,MERGED,True,246,43,3,https://github.com/skvl,Procdump update,6,[],https://github.com/tklengyel/drakvuf/pull/897,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/897,"Fix parsing of prototype PTEs while traversing VAD. This fixes dumping memory-mapped files (at the time DLLs).
Split dumping processes into two stages: stage 1 hooks NtTerminateProcess to dump all non-memory-mapped files regions and stage 2 hooks MmCleanProcessAddressSpace to dump memory-mapped files regions. This would allow to dump more information in the feature (at least I belive so).","Fix parsing of prototype PTEs while traversing VAD. This fixes dumping memory-mapped files (at the time DLLs).
Split dumping processes into two stages: stage 1 hooks NtTerminateProcess to dump all non-memory-mapped files regions and stage 2 hooks MmCleanProcessAddressSpace to dump memory-mapped files regions. This would allow to dump more information in the feature (at least I belive so).",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,897,2020-05-29T06:18:36Z,2020-06-24T21:38:35Z,2020-10-26T05:51:58Z,MERGED,True,246,43,3,https://github.com/skvl,Procdump update,6,[],https://github.com/tklengyel/drakvuf/pull/897,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/897#issuecomment-635783288,"Fix parsing of prototype PTEs while traversing VAD. This fixes dumping memory-mapped files (at the time DLLs).
Split dumping processes into two stages: stage 1 hooks NtTerminateProcess to dump all non-memory-mapped files regions and stage 2 hooks MmCleanProcessAddressSpace to dump memory-mapped files regions. This would allow to dump more information in the feature (at least I belive so).",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,897,2020-05-29T06:18:36Z,2020-06-24T21:38:35Z,2020-10-26T05:51:58Z,MERGED,True,246,43,3,https://github.com/skvl,Procdump update,6,[],https://github.com/tklengyel/drakvuf/pull/897,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/897#issuecomment-635906690,"Fix parsing of prototype PTEs while traversing VAD. This fixes dumping memory-mapped files (at the time DLLs).
Split dumping processes into two stages: stage 1 hooks NtTerminateProcess to dump all non-memory-mapped files regions and stage 2 hooks MmCleanProcessAddressSpace to dump memory-mapped files regions. This would allow to dump more information in the feature (at least I belive so).",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,897,2020-05-29T06:18:36Z,2020-06-24T21:38:35Z,2020-10-26T05:51:58Z,MERGED,True,246,43,3,https://github.com/skvl,Procdump update,6,[],https://github.com/tklengyel/drakvuf/pull/897,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/897#issuecomment-642715116,"Fix parsing of prototype PTEs while traversing VAD. This fixes dumping memory-mapped files (at the time DLLs).
Split dumping processes into two stages: stage 1 hooks NtTerminateProcess to dump all non-memory-mapped files regions and stage 2 hooks MmCleanProcessAddressSpace to dump memory-mapped files regions. This would allow to dump more information in the feature (at least I belive so).",What's the status of this PR?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,897,2020-05-29T06:18:36Z,2020-06-24T21:38:35Z,2020-10-26T05:51:58Z,MERGED,True,246,43,3,https://github.com/skvl,Procdump update,6,[],https://github.com/tklengyel/drakvuf/pull/897,https://github.com/skvl,5,https://github.com/tklengyel/drakvuf/pull/897#issuecomment-643930893,"Fix parsing of prototype PTEs while traversing VAD. This fixes dumping memory-mapped files (at the time DLLs).
Split dumping processes into two stages: stage 1 hooks NtTerminateProcess to dump all non-memory-mapped files regions and stage 2 hooks MmCleanProcessAddressSpace to dump memory-mapped files regions. This would allow to dump more information in the feature (at least I belive so).","@tklengyel, @icedevml, I'm very sorry. I have been out for a while. I would try to finish it this week.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,897,2020-05-29T06:18:36Z,2020-06-24T21:38:35Z,2020-10-26T05:51:58Z,MERGED,True,246,43,3,https://github.com/skvl,Procdump update,6,[],https://github.com/tklengyel/drakvuf/pull/897,https://github.com/skvl,6,https://github.com/tklengyel/drakvuf/pull/897#issuecomment-647971945,"Fix parsing of prototype PTEs while traversing VAD. This fixes dumping memory-mapped files (at the time DLLs).
Split dumping processes into two stages: stage 1 hooks NtTerminateProcess to dump all non-memory-mapped files regions and stage 2 hooks MmCleanProcessAddressSpace to dump memory-mapped files regions. This would allow to dump more information in the feature (at least I belive so).","@tklengyel, @icedevml, I have suspected that there could be some nasty bug in the branch. One have been found (f53da18). Sorry to be unresponsive so long.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,897,2020-05-29T06:18:36Z,2020-06-24T21:38:35Z,2020-10-26T05:51:58Z,MERGED,True,246,43,3,https://github.com/skvl,Procdump update,6,[],https://github.com/tklengyel/drakvuf/pull/897,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/897#issuecomment-648372985,"Fix parsing of prototype PTEs while traversing VAD. This fixes dumping memory-mapped files (at the time DLLs).
Split dumping processes into two stages: stage 1 hooks NtTerminateProcess to dump all non-memory-mapped files regions and stage 2 hooks MmCleanProcessAddressSpace to dump memory-mapped files regions. This would allow to dump more information in the feature (at least I belive so).","LGTM, @icedevml ?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,897,2020-05-29T06:18:36Z,2020-06-24T21:38:35Z,2020-10-26T05:51:58Z,MERGED,True,246,43,3,https://github.com/skvl,Procdump update,6,[],https://github.com/tklengyel/drakvuf/pull/897,https://github.com/icedevml,8,https://github.com/tklengyel/drakvuf/pull/897#issuecomment-648486395,"Fix parsing of prototype PTEs while traversing VAD. This fixes dumping memory-mapped files (at the time DLLs).
Split dumping processes into two stages: stage 1 hooks NtTerminateProcess to dump all non-memory-mapped files regions and stage 2 hooks MmCleanProcessAddressSpace to dump memory-mapped files regions. This would allow to dump more information in the feature (at least I belive so).",@tklengyel I'll look tomorrow.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,898,2020-05-29T10:38:12Z,2020-06-22T17:47:51Z,2020-06-22T17:47:51Z,MERGED,True,632,1363,29,https://github.com/zodeak,part of plugins is refactored to use new printing api,56,[],https://github.com/tklengyel/drakvuf/pull/898,https://github.com/zodeak,1,https://github.com/tklengyel/drakvuf/pull/898,Refactoring plugins output to use new printing api.,Refactoring plugins output to use new printing api.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,898,2020-05-29T10:38:12Z,2020-06-22T17:47:51Z,2020-06-22T17:47:51Z,MERGED,True,632,1363,29,https://github.com/zodeak,part of plugins is refactored to use new printing api,56,[],https://github.com/tklengyel/drakvuf/pull/898,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/898#issuecomment-635903035,Refactoring plugins output to use new printing api.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,898,2020-05-29T10:38:12Z,2020-06-22T17:47:51Z,2020-06-22T17:47:51Z,MERGED,True,632,1363,29,https://github.com/zodeak,part of plugins is refactored to use new printing api,56,[],https://github.com/tklengyel/drakvuf/pull/898,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/898#issuecomment-635907560,Refactoring plugins output to use new printing api.,This would need some very extensive testing against DRAKVUF Sandbox to ensure that it doesn't break anything. I'm going to do it within few days.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,898,2020-05-29T10:38:12Z,2020-06-22T17:47:51Z,2020-06-22T17:47:51Z,MERGED,True,632,1363,29,https://github.com/zodeak,part of plugins is refactored to use new printing api,56,[],https://github.com/tklengyel/drakvuf/pull/898,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/898#issuecomment-635907721,Refactoring plugins output to use new printing api.,"Since there are compile errors right now, I will wait until the CI is passing.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,898,2020-05-29T10:38:12Z,2020-06-22T17:47:51Z,2020-06-22T17:47:51Z,MERGED,True,632,1363,29,https://github.com/zodeak,part of plugins is refactored to use new printing api,56,[],https://github.com/tklengyel/drakvuf/pull/898,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/898#issuecomment-635954751,Refactoring plugins output to use new printing api.,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,898,2020-05-29T10:38:12Z,2020-06-22T17:47:51Z,2020-06-22T17:47:51Z,MERGED,True,632,1363,29,https://github.com/zodeak,part of plugins is refactored to use new printing api,56,[],https://github.com/tklengyel/drakvuf/pull/898,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/898#issuecomment-635955072,Refactoring plugins output to use new printing api.,"Thank you for this PR, it makes the code so much cleaner 👍",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,898,2020-05-29T10:38:12Z,2020-06-22T17:47:51Z,2020-06-22T17:47:51Z,MERGED,True,632,1363,29,https://github.com/zodeak,part of plugins is refactored to use new printing api,56,[],https://github.com/tklengyel/drakvuf/pull/898,https://github.com/zodeak,7,https://github.com/tklengyel/drakvuf/pull/898#issuecomment-635975261,Refactoring plugins output to use new printing api.,What is the problem with default? Details cannot be viewed.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,898,2020-05-29T10:38:12Z,2020-06-22T17:47:51Z,2020-06-22T17:47:51Z,MERGED,True,632,1363,29,https://github.com/zodeak,part of plugins is refactored to use new printing api,56,[],https://github.com/tklengyel/drakvuf/pull/898,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/898#issuecomment-635979713,Refactoring plugins output to use new printing api.,"Valgrind errors:
Use of uninitialised value of size 8
Uninitialised value was created by a stack allocation

/shared/jenkins/DRAKVUF-build/src/plugins/./output_format/deffmt.h:163
 163         os << (data.withbase ? ""0x"" : """") << std::uppercase << std::hex << data.value;

and

Conditional jump or move depends on uninitialised value(s)
Uninitialised value was created by a stack allocation

/shared/jenkins/DRAKVUF-build/src/plugins/./output_format/deffmt.h:163
 163         os << (data.withbase ? ""0x"" : """") << std::uppercase << std::hex << data.value;",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,898,2020-05-29T10:38:12Z,2020-06-22T17:47:51Z,2020-06-22T17:47:51Z,MERGED,True,632,1363,29,https://github.com/zodeak,part of plugins is refactored to use new printing api,56,[],https://github.com/tklengyel/drakvuf/pull/898,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/898#issuecomment-636374859,Refactoring plugins output to use new printing api.,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,898,2020-05-29T10:38:12Z,2020-06-22T17:47:51Z,2020-06-22T17:47:51Z,MERGED,True,632,1363,29,https://github.com/zodeak,part of plugins is refactored to use new printing api,56,[],https://github.com/tklengyel/drakvuf/pull/898,https://github.com/zodeak,10,https://github.com/tklengyel/drakvuf/pull/898#issuecomment-639172707,Refactoring plugins output to use new printing api.,"valgind again?
how is it been runned? i need to understand problem.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,898,2020-05-29T10:38:12Z,2020-06-22T17:47:51Z,2020-06-22T17:47:51Z,MERGED,True,632,1363,29,https://github.com/zodeak,part of plugins is refactored to use new printing api,56,[],https://github.com/tklengyel/drakvuf/pull/898,https://github.com/icedevml,11,https://github.com/tklengyel/drakvuf/pull/898#issuecomment-640140671,Refactoring plugins output to use new printing api.,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,898,2020-05-29T10:38:12Z,2020-06-22T17:47:51Z,2020-06-22T17:47:51Z,MERGED,True,632,1363,29,https://github.com/zodeak,part of plugins is refactored to use new printing api,56,[],https://github.com/tklengyel/drakvuf/pull/898,https://github.com/tklengyel,12,https://github.com/tklengyel/drakvuf/pull/898#issuecomment-640142002,Refactoring plugins output to use new printing api.,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,898,2020-05-29T10:38:12Z,2020-06-22T17:47:51Z,2020-06-22T17:47:51Z,MERGED,True,632,1363,29,https://github.com/zodeak,part of plugins is refactored to use new printing api,56,[],https://github.com/tklengyel/drakvuf/pull/898,https://github.com/tklengyel,13,https://github.com/tklengyel/drakvuf/pull/898#issuecomment-640144453,Refactoring plugins output to use new printing api.,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,898,2020-05-29T10:38:12Z,2020-06-22T17:47:51Z,2020-06-22T17:47:51Z,MERGED,True,632,1363,29,https://github.com/zodeak,part of plugins is refactored to use new printing api,56,[],https://github.com/tklengyel/drakvuf/pull/898,https://github.com/tklengyel,14,https://github.com/tklengyel/drakvuf/pull/898#issuecomment-640145376,Refactoring plugins output to use new printing api.,"Valgrind reports:
Use of uninitialised value of size 8
/shared/jenkins/DRAKVUF-build/src/plugins/./output_format/deffmt.h:164

159     template <class Tv = T>
160     static bool print(std::ostream& os, const fmt::Xval<Tv>& data, char)
161     {
162         auto ff = os.flags(); 163         auto base = data.withbase ? ""0x"" : """";
164         os << base << std::uppercase << std::hex << data.value;",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,898,2020-05-29T10:38:12Z,2020-06-22T17:47:51Z,2020-06-22T17:47:51Z,MERGED,True,632,1363,29,https://github.com/zodeak,part of plugins is refactored to use new printing api,56,[],https://github.com/tklengyel/drakvuf/pull/898,https://github.com/tklengyel,15,https://github.com/tklengyel/drakvuf/pull/898#issuecomment-640145639,Refactoring plugins output to use new printing api.,"Also
Invalid read of size 1
Address 0x0 is not stack'd, malloc'd or (recently) free'd

/shared/jenkins/DRAKVUF-build/src/plugins/./output_format/deffmt.h:301
 301         procname += info->attached_proc_data.name;",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,898,2020-05-29T10:38:12Z,2020-06-22T17:47:51Z,2020-06-22T17:47:51Z,MERGED,True,632,1363,29,https://github.com/zodeak,part of plugins is refactored to use new printing api,56,[],https://github.com/tklengyel/drakvuf/pull/898,https://github.com/zodeak,16,https://github.com/tklengyel/drakvuf/pull/898#issuecomment-643605845,Refactoring plugins output to use new printing api.,@tklengyel default waiting for status for hours,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,898,2020-05-29T10:38:12Z,2020-06-22T17:47:51Z,2020-06-22T17:47:51Z,MERGED,True,632,1363,29,https://github.com/zodeak,part of plugins is refactored to use new printing api,56,[],https://github.com/tklengyel/drakvuf/pull/898,https://github.com/tklengyel,17,https://github.com/tklengyel/drakvuf/pull/898#issuecomment-643620526,Refactoring plugins output to use new printing api.,I had to take the CI box offline to test something else.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,898,2020-05-29T10:38:12Z,2020-06-22T17:47:51Z,2020-06-22T17:47:51Z,MERGED,True,632,1363,29,https://github.com/zodeak,part of plugins is refactored to use new printing api,56,[],https://github.com/tklengyel/drakvuf/pull/898,https://github.com/tklengyel,18,https://github.com/tklengyel/drakvuf/pull/898#issuecomment-643621898,Refactoring plugins output to use new printing api.,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,898,2020-05-29T10:38:12Z,2020-06-22T17:47:51Z,2020-06-22T17:47:51Z,MERGED,True,632,1363,29,https://github.com/zodeak,part of plugins is refactored to use new printing api,56,[],https://github.com/tklengyel/drakvuf/pull/898,https://github.com/tklengyel,19,https://github.com/tklengyel/drakvuf/pull/898#issuecomment-644839708,Refactoring plugins output to use new printing api.,FYI the CI system is going to be offline for a while. I recommend setting up a local test environment for development.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,898,2020-05-29T10:38:12Z,2020-06-22T17:47:51Z,2020-06-22T17:47:51Z,MERGED,True,632,1363,29,https://github.com/zodeak,part of plugins is refactored to use new printing api,56,[],https://github.com/tklengyel/drakvuf/pull/898,https://github.com/zodeak,20,https://github.com/tklengyel/drakvuf/pull/898#issuecomment-645446727,Refactoring plugins output to use new printing api.,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,898,2020-05-29T10:38:12Z,2020-06-22T17:47:51Z,2020-06-22T17:47:51Z,MERGED,True,632,1363,29,https://github.com/zodeak,part of plugins is refactored to use new printing api,56,[],https://github.com/tklengyel/drakvuf/pull/898,https://github.com/tklengyel,21,https://github.com/tklengyel/drakvuf/pull/898#issuecomment-647035314,Refactoring plugins output to use new printing api.,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,898,2020-05-29T10:38:12Z,2020-06-22T17:47:51Z,2020-06-22T17:47:51Z,MERGED,True,632,1363,29,https://github.com/zodeak,part of plugins is refactored to use new printing api,56,[],https://github.com/tklengyel/drakvuf/pull/898,https://github.com/tklengyel,22,https://github.com/tklengyel/drakvuf/pull/898#issuecomment-647043165,Refactoring plugins output to use new printing api.,"@zodeak This looks good to me, are you finished with it?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,898,2020-05-29T10:38:12Z,2020-06-22T17:47:51Z,2020-06-22T17:47:51Z,MERGED,True,632,1363,29,https://github.com/zodeak,part of plugins is refactored to use new printing api,56,[],https://github.com/tklengyel/drakvuf/pull/898,https://github.com/zodeak,23,https://github.com/tklengyel/drakvuf/pull/898#issuecomment-647120224,Refactoring plugins output to use new printing api.,"Yes, i've finished.
The rest of plugins will be done in separate mr commits.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,899,2020-06-11T09:42:17Z,2020-06-11T14:56:27Z,2020-06-19T08:40:18Z,MERGED,True,18,1,2,https://github.com/disaykin,Add parameters description for NtUserSetWindowsHookEx syscall,1,[],https://github.com/tklengyel/drakvuf/pull/899,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/899,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,899,2020-06-11T09:42:17Z,2020-06-11T14:56:27Z,2020-06-19T08:40:18Z,MERGED,True,18,1,2,https://github.com/disaykin,Add parameters description for NtUserSetWindowsHookEx syscall,1,[],https://github.com/tklengyel/drakvuf/pull/899,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/899#issuecomment-642536353,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,900,2020-06-19T09:15:50Z,2020-06-20T19:12:14Z,2020-06-22T10:02:01Z,MERGED,True,6,17,1,https://github.com/disaykin,Fix usage of vmi after unlock in linux syscalls plugin,1,[],https://github.com/tklengyel/drakvuf/pull/900,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/900,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,900,2020-06-19T09:15:50Z,2020-06-20T19:12:14Z,2020-06-22T10:02:01Z,MERGED,True,6,17,1,https://github.com/disaykin,Fix usage of vmi after unlock in linux syscalls plugin,1,[],https://github.com/tklengyel/drakvuf/pull/900,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/900#issuecomment-646529393,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,900,2020-06-19T09:15:50Z,2020-06-20T19:12:14Z,2020-06-22T10:02:01Z,MERGED,True,6,17,1,https://github.com/disaykin,Fix usage of vmi after unlock in linux syscalls plugin,1,[],https://github.com/tklengyel/drakvuf/pull/900,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/900#issuecomment-646699441,,I don't really see what the issue is this PR is intended to fix. Care to elaborate?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,900,2020-06-19T09:15:50Z,2020-06-20T19:12:14Z,2020-06-22T10:02:01Z,MERGED,True,6,17,1,https://github.com/disaykin,Fix usage of vmi after unlock in linux syscalls plugin,1,[],https://github.com/tklengyel/drakvuf/pull/900,https://github.com/disaykin,4,https://github.com/tklengyel/drakvuf/pull/900#issuecomment-646783725,,"I don't really see what the issue is this PR is intended to fix. Care to elaborate?

This PR is a mix of refactoring and bugfixing.
The bug was in using of vmi reference after calling drakvuf_release_vmi(drakvuf);",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,900,2020-06-19T09:15:50Z,2020-06-20T19:12:14Z,2020-06-22T10:02:01Z,MERGED,True,6,17,1,https://github.com/disaykin,Fix usage of vmi after unlock in linux syscalls plugin,1,[],https://github.com/tklengyel/drakvuf/pull/900,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/900#issuecomment-647032007,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,901,2020-06-19T18:24:48Z,2020-06-23T19:29:55Z,2020-10-21T12:14:18Z,MERGED,True,27,6,7,https://github.com/disaykin,Add possibility of disabling sysret plugin,1,[],https://github.com/tklengyel/drakvuf/pull/901,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/901,I tried to make disabling sysret functionality very similar to the functionality of disabling other plugins.,I tried to make disabling sysret functionality very similar to the functionality of disabling other plugins.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,901,2020-06-19T18:24:48Z,2020-06-23T19:29:55Z,2020-10-21T12:14:18Z,MERGED,True,27,6,7,https://github.com/disaykin,Add possibility of disabling sysret plugin,1,[],https://github.com/tklengyel/drakvuf/pull/901,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/901#issuecomment-646805516,I tried to make disabling sysret functionality very similar to the functionality of disabling other plugins.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,901,2020-06-19T18:24:48Z,2020-06-23T19:29:55Z,2020-10-21T12:14:18Z,MERGED,True,27,6,7,https://github.com/disaykin,Add possibility of disabling sysret plugin,1,[],https://github.com/tklengyel/drakvuf/pull/901,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/901#issuecomment-646873726,I tried to make disabling sysret functionality very similar to the functionality of disabling other plugins.,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,901,2020-06-19T18:24:48Z,2020-06-23T19:29:55Z,2020-10-21T12:14:18Z,MERGED,True,27,6,7,https://github.com/disaykin,Add possibility of disabling sysret plugin,1,[],https://github.com/tklengyel/drakvuf/pull/901,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/901#issuecomment-646905748,I tried to make disabling sysret functionality very similar to the functionality of disabling other plugins.,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,901,2020-06-19T18:24:48Z,2020-06-23T19:29:55Z,2020-10-21T12:14:18Z,MERGED,True,27,6,7,https://github.com/disaykin,Add possibility of disabling sysret plugin,1,[],https://github.com/tklengyel/drakvuf/pull/901,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/901#issuecomment-647031983,I tried to make disabling sysret functionality very similar to the functionality of disabling other plugins.,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,901,2020-06-19T18:24:48Z,2020-06-23T19:29:55Z,2020-10-21T12:14:18Z,MERGED,True,27,6,7,https://github.com/disaykin,Add possibility of disabling sysret plugin,1,[],https://github.com/tklengyel/drakvuf/pull/901,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/901#issuecomment-647035269,I tried to make disabling sysret functionality very similar to the functionality of disabling other plugins.,I don't particularly like pretending monitoring of sysrets is a separate plugin. Why not just have an otparg value that can be used to disable it?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,901,2020-06-19T18:24:48Z,2020-06-23T19:29:55Z,2020-10-21T12:14:18Z,MERGED,True,27,6,7,https://github.com/disaykin,Add possibility of disabling sysret plugin,1,[],https://github.com/tklengyel/drakvuf/pull/901,https://github.com/disaykin,7,https://github.com/tklengyel/drakvuf/pull/901#issuecomment-647415057,I tried to make disabling sysret functionality very similar to the functionality of disabling other plugins.,"I rework PR, adding --disable-sysret option.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,901,2020-06-19T18:24:48Z,2020-06-23T19:29:55Z,2020-10-21T12:14:18Z,MERGED,True,27,6,7,https://github.com/disaykin,Add possibility of disabling sysret plugin,1,[],https://github.com/tklengyel/drakvuf/pull/901,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/901#issuecomment-647612535,I tried to make disabling sysret functionality very similar to the functionality of disabling other plugins.,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,903,2020-06-23T02:49:12Z,2020-06-23T04:01:10Z,2020-06-23T04:01:13Z,MERGED,True,2,247,5,https://github.com/tklengyel,Remove obsolote xen_memclone functions,1,[],https://github.com/tklengyel/drakvuf/pull/903,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/903,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,903,2020-06-23T02:49:12Z,2020-06-23T04:01:10Z,2020-06-23T04:01:13Z,MERGED,True,2,247,5,https://github.com/tklengyel,Remove obsolote xen_memclone functions,1,[],https://github.com/tklengyel/drakvuf/pull/903,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/903#issuecomment-647887816,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,904,2020-06-23T02:51:19Z,2020-06-23T04:00:58Z,2020-06-23T04:01:02Z,MERGED,True,16,15,4,https://github.com/tklengyel,Fix printing linux syscall info,1,[],https://github.com/tklengyel/drakvuf/pull/904,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/904,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,904,2020-06-23T02:51:19Z,2020-06-23T04:00:58Z,2020-06-23T04:01:02Z,MERGED,True,16,15,4,https://github.com/tklengyel,Fix printing linux syscall info,1,[],https://github.com/tklengyel/drakvuf/pull/904,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/904#issuecomment-647880028,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,904,2020-06-23T02:51:19Z,2020-06-23T04:00:58Z,2020-06-23T04:01:02Z,MERGED,True,16,15,4,https://github.com/tklengyel,Fix printing linux syscall info,1,[],https://github.com/tklengyel/drakvuf/pull/904,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/904#issuecomment-647887852,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,908,2020-07-03T10:05:34Z,2020-07-19T01:23:44Z,2020-07-19T01:23:44Z,MERGED,True,16,1,2,None,Fix windows syscalls error: capture unreliable return values,3,[],https://github.com/tklengyel/drakvuf/pull/908,None,1,https://github.com/tklengyel/drakvuf/pull/908,"The logic of the current code cannot obtain the correct return value in some cases. For example:  Use the parameter -S (syscalls filter) to set a monitor on NtFunctionA . When this monitored function called, it will trigger syscall_cb and get the return address from the stack pointed to by the rsp register, and add a trap at that address. But this NtFunctionA will call other functions which will reach the same return address of this NtFunctionA. Based on the logical of the current code, it will remove this return trap. And we will see the return value of another function. So, just use the tid is not enough, i use the rsp value to resolve this problem for windows system calls. I don't know if this completely solved the problem, Sorry.
Because I am not familiar with Linux, I don’t know if there will be same problem on Linux.","The logic of the current code cannot obtain the correct return value in some cases. For example:  Use the parameter -S (syscalls filter) to set a monitor on NtFunctionA . When this monitored function called, it will trigger syscall_cb and get the return address from the stack pointed to by the rsp register, and add a trap at that address. But this NtFunctionA will call other functions which will reach the same return address of this NtFunctionA. Based on the logical of the current code, it will remove this return trap. And we will see the return value of another function. So, just use the tid is not enough, i use the rsp value to resolve this problem for windows system calls. I don't know if this completely solved the problem, Sorry.
Because I am not familiar with Linux, I don’t know if there will be same problem on Linux.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,908,2020-07-03T10:05:34Z,2020-07-19T01:23:44Z,2020-07-19T01:23:44Z,MERGED,True,16,1,2,None,Fix windows syscalls error: capture unreliable return values,3,[],https://github.com/tklengyel/drakvuf/pull/908,https://github.com/BonusPlay,2,https://github.com/tklengyel/drakvuf/pull/908#issuecomment-654725571,"The logic of the current code cannot obtain the correct return value in some cases. For example:  Use the parameter -S (syscalls filter) to set a monitor on NtFunctionA . When this monitored function called, it will trigger syscall_cb and get the return address from the stack pointed to by the rsp register, and add a trap at that address. But this NtFunctionA will call other functions which will reach the same return address of this NtFunctionA. Based on the logical of the current code, it will remove this return trap. And we will see the return value of another function. So, just use the tid is not enough, i use the rsp value to resolve this problem for windows system calls. I don't know if this completely solved the problem, Sorry.
Because I am not familiar with Linux, I don’t know if there will be same problem on Linux.",May I ask why this was closed?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,908,2020-07-03T10:05:34Z,2020-07-19T01:23:44Z,2020-07-19T01:23:44Z,MERGED,True,16,1,2,None,Fix windows syscalls error: capture unreliable return values,3,[],https://github.com/tklengyel/drakvuf/pull/908,None,3,https://github.com/tklengyel/drakvuf/pull/908#issuecomment-655995017,"The logic of the current code cannot obtain the correct return value in some cases. For example:  Use the parameter -S (syscalls filter) to set a monitor on NtFunctionA . When this monitored function called, it will trigger syscall_cb and get the return address from the stack pointed to by the rsp register, and add a trap at that address. But this NtFunctionA will call other functions which will reach the same return address of this NtFunctionA. Based on the logical of the current code, it will remove this return trap. And we will see the return value of another function. So, just use the tid is not enough, i use the rsp value to resolve this problem for windows system calls. I don't know if this completely solved the problem, Sorry.
Because I am not familiar with Linux, I don’t know if there will be same problem on Linux.","May I ask why this was closed?

Because i think my code is bad, and i don't solve this problem in Linux. Sorry.
But this bug does exist.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,908,2020-07-03T10:05:34Z,2020-07-19T01:23:44Z,2020-07-19T01:23:44Z,MERGED,True,16,1,2,None,Fix windows syscalls error: capture unreliable return values,3,[],https://github.com/tklengyel/drakvuf/pull/908,https://github.com/BonusPlay,4,https://github.com/tklengyel/drakvuf/pull/908#issuecomment-656050418,"The logic of the current code cannot obtain the correct return value in some cases. For example:  Use the parameter -S (syscalls filter) to set a monitor on NtFunctionA . When this monitored function called, it will trigger syscall_cb and get the return address from the stack pointed to by the rsp register, and add a trap at that address. But this NtFunctionA will call other functions which will reach the same return address of this NtFunctionA. Based on the logical of the current code, it will remove this return trap. And we will see the return value of another function. So, just use the tid is not enough, i use the rsp value to resolve this problem for windows system calls. I don't know if this completely solved the problem, Sorry.
Because I am not familiar with Linux, I don’t know if there will be same problem on Linux.","Your code is perfectly fine. If i really had to nitpick something I'd add a comment near stack_fingerprint variable that explains what it exactly is (maybe even just link to this PR).
There's no need to fix issue on both platforms at the same time. 1 less bug is always better. You can always add a comment why you added that if statement. Especially that the patch is ~3 LoC long, so there's no problem in rewriting the solution to proper one that fixes both platforms later down the line when you debug linux. Even if you never intend to fix it on linux, it's still better to remove 1 bug. 1 > 0.",True,"{'THUMBS_UP': ['https://github.com/icedevml', 'https://github.com/tklengyel']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,908,2020-07-03T10:05:34Z,2020-07-19T01:23:44Z,2020-07-19T01:23:44Z,MERGED,True,16,1,2,None,Fix windows syscalls error: capture unreliable return values,3,[],https://github.com/tklengyel/drakvuf/pull/908,None,5,https://github.com/tklengyel/drakvuf/pull/908#issuecomment-656436580,"The logic of the current code cannot obtain the correct return value in some cases. For example:  Use the parameter -S (syscalls filter) to set a monitor on NtFunctionA . When this monitored function called, it will trigger syscall_cb and get the return address from the stack pointed to by the rsp register, and add a trap at that address. But this NtFunctionA will call other functions which will reach the same return address of this NtFunctionA. Based on the logical of the current code, it will remove this return trap. And we will see the return value of another function. So, just use the tid is not enough, i use the rsp value to resolve this problem for windows system calls. I don't know if this completely solved the problem, Sorry.
Because I am not familiar with Linux, I don’t know if there will be same problem on Linux.","Your code is perfectly fine. If i really had to nitpick something I'd add a comment near stack_fingerprint variable that explains what it exactly is (maybe even just link to this PR).
There's no need to fix issue on both platforms at the same time. 1 less bug is always better. You can always add a comment why you added that if statement. Especially that the patch is ~3 LoC long, so there's no problem in rewriting the solution to proper one that fixes both platforms later down the line when you debug linux. Even if you never intend to fix it on linux, it's still better to remove 1 bug. 1 > 0.


Thank you for your recognition and encouragement😁。1 > 0 cool!😝。Could you please fix this bug if you think my report #908 (comment) is right. 3Q🤩",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,908,2020-07-03T10:05:34Z,2020-07-19T01:23:44Z,2020-07-19T01:23:44Z,MERGED,True,16,1,2,None,Fix windows syscalls error: capture unreliable return values,3,[],https://github.com/tklengyel/drakvuf/pull/908,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/908#issuecomment-656967338,"The logic of the current code cannot obtain the correct return value in some cases. For example:  Use the parameter -S (syscalls filter) to set a monitor on NtFunctionA . When this monitored function called, it will trigger syscall_cb and get the return address from the stack pointed to by the rsp register, and add a trap at that address. But this NtFunctionA will call other functions which will reach the same return address of this NtFunctionA. Based on the logical of the current code, it will remove this return trap. And we will see the return value of another function. So, just use the tid is not enough, i use the rsp value to resolve this problem for windows system calls. I don't know if this completely solved the problem, Sorry.
Because I am not familiar with Linux, I don’t know if there will be same problem on Linux.","I agree with @BonusPlay, fixing a bug is always appreciated even if its partial. Feel free to reopen this PR and we can walk you through how to get it into shape so we can merge it.",True,"{'THUMBS_UP': ['https://github.com/BonusPlay', 'https://github.com/icedevml', 'https://github.com/catsuryuu']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,908,2020-07-03T10:05:34Z,2020-07-19T01:23:44Z,2020-07-19T01:23:44Z,MERGED,True,16,1,2,None,Fix windows syscalls error: capture unreliable return values,3,[],https://github.com/tklengyel/drakvuf/pull/908,https://github.com/BonusPlay,7,https://github.com/tklengyel/drakvuf/pull/908#issuecomment-658571195,"The logic of the current code cannot obtain the correct return value in some cases. For example:  Use the parameter -S (syscalls filter) to set a monitor on NtFunctionA . When this monitored function called, it will trigger syscall_cb and get the return address from the stack pointed to by the rsp register, and add a trap at that address. But this NtFunctionA will call other functions which will reach the same return address of this NtFunctionA. Based on the logical of the current code, it will remove this return trap. And we will see the return value of another function. So, just use the tid is not enough, i use the rsp value to resolve this problem for windows system calls. I don't know if this completely solved the problem, Sorry.
Because I am not familiar with Linux, I don’t know if there will be same problem on Linux.","That's a lot of comments. Probably even too much, but don't worry about it. I believe that having more verbose comments is better than having none. Just fix whitespace problems https://travis-ci.org/github/tklengyel/drakvuf/jobs/708229197#L233 and I believe we're ready to merge.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,908,2020-07-03T10:05:34Z,2020-07-19T01:23:44Z,2020-07-19T01:23:44Z,MERGED,True,16,1,2,None,Fix windows syscalls error: capture unreliable return values,3,[],https://github.com/tklengyel/drakvuf/pull/908,None,8,https://github.com/tklengyel/drakvuf/pull/908#issuecomment-658578614,"The logic of the current code cannot obtain the correct return value in some cases. For example:  Use the parameter -S (syscalls filter) to set a monitor on NtFunctionA . When this monitored function called, it will trigger syscall_cb and get the return address from the stack pointed to by the rsp register, and add a trap at that address. But this NtFunctionA will call other functions which will reach the same return address of this NtFunctionA. Based on the logical of the current code, it will remove this return trap. And we will see the return value of another function. So, just use the tid is not enough, i use the rsp value to resolve this problem for windows system calls. I don't know if this completely solved the problem, Sorry.
Because I am not familiar with Linux, I don’t know if there will be same problem on Linux.","That's a lot of comments. Probably even too much, but don't worry about it. I believe that having more verbose comments is better than having none. Just fix whitespace problems https://travis-ci.org/github/tklengyel/drakvuf/jobs/708229197#L233 and I believe we're ready to merge.

Sorry, I just hit the wrong button Close and comment😂",True,{'LAUGH': ['https://github.com/catsuryuu']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,908,2020-07-03T10:05:34Z,2020-07-19T01:23:44Z,2020-07-19T01:23:44Z,MERGED,True,16,1,2,None,Fix windows syscalls error: capture unreliable return values,3,[],https://github.com/tklengyel/drakvuf/pull/908,None,9,https://github.com/tklengyel/drakvuf/pull/908#issuecomment-658580569,"The logic of the current code cannot obtain the correct return value in some cases. For example:  Use the parameter -S (syscalls filter) to set a monitor on NtFunctionA . When this monitored function called, it will trigger syscall_cb and get the return address from the stack pointed to by the rsp register, and add a trap at that address. But this NtFunctionA will call other functions which will reach the same return address of this NtFunctionA. Based on the logical of the current code, it will remove this return trap. And we will see the return value of another function. So, just use the tid is not enough, i use the rsp value to resolve this problem for windows system calls. I don't know if this completely solved the problem, Sorry.
Because I am not familiar with Linux, I don’t know if there will be same problem on Linux.","That's a lot of comments. Probably even too much, but don't worry about it. I believe that having more verbose comments is better than having none. Just fix whitespace problems https://travis-ci.org/github/tklengyel/drakvuf/jobs/708229197#L233 and I believe we're ready to merge.

Yes, I think that's a lot of comments, 😊 i remove some of them. you can re-comment it after merging.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,908,2020-07-03T10:05:34Z,2020-07-19T01:23:44Z,2020-07-19T01:23:44Z,MERGED,True,16,1,2,None,Fix windows syscalls error: capture unreliable return values,3,[],https://github.com/tklengyel/drakvuf/pull/908,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/908#issuecomment-660568948,"The logic of the current code cannot obtain the correct return value in some cases. For example:  Use the parameter -S (syscalls filter) to set a monitor on NtFunctionA . When this monitored function called, it will trigger syscall_cb and get the return address from the stack pointed to by the rsp register, and add a trap at that address. But this NtFunctionA will call other functions which will reach the same return address of this NtFunctionA. Based on the logical of the current code, it will remove this return trap. And we will see the return value of another function. So, just use the tid is not enough, i use the rsp value to resolve this problem for windows system calls. I don't know if this completely solved the problem, Sorry.
Because I am not familiar with Linux, I don’t know if there will be same problem on Linux.",Thanks!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,910,2020-07-09T15:03:26Z,2020-07-11T02:08:22Z,2020-07-28T07:17:12Z,MERGED,True,85,1,1,https://github.com/kscieslinski,Added create_remote_thread_hook_cb in memdump plugin.,4,[],https://github.com/tklengyel/drakvuf/pull/910,https://github.com/kscieslinski,1,https://github.com/tklengyel/drakvuf/pull/910,Added create_remote_thread_hook_cb to memdump plugin. It should help dumping malware unpacked using classic dll and reflective dll injection techniques which both rely on CreateRemoteThread procedure.,Added create_remote_thread_hook_cb to memdump plugin. It should help dumping malware unpacked using classic dll and reflective dll injection techniques which both rely on CreateRemoteThread procedure.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,910,2020-07-09T15:03:26Z,2020-07-11T02:08:22Z,2020-07-28T07:17:12Z,MERGED,True,85,1,1,https://github.com/kscieslinski,Added create_remote_thread_hook_cb in memdump plugin.,4,[],https://github.com/tklengyel/drakvuf/pull/910,https://github.com/icedevml,2,https://github.com/tklengyel/drakvuf/pull/910#issuecomment-656950470,Added create_remote_thread_hook_cb to memdump plugin. It should help dumping malware unpacked using classic dll and reflective dll injection techniques which both rely on CreateRemoteThread procedure.,Consider setting proper user.email in git config so your commits will be properly attributed to your GitHub account.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,911,2020-07-10T14:35:35Z,2020-07-19T01:24:48Z,2020-07-19T10:24:02Z,MERGED,True,69,5,4,https://github.com/icedevml,apimon: log DLL ImageBase and function RVAs when hooking,2,[],https://github.com/tklengyel/drakvuf/pull/911,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/911,"Introduce new kind of apimon log line when OUTPUT_JSON is used:
{
  ""Plugin"": ""apimon"",
  ""Event"": ""dll_loaded"",
  ""Rva"": {
    ""SetupDiGetClassDevsA"": 39104,
    ""SetupDiGetClassDevsW"": 20292,
    ""SetupDiGetDeviceRegistryPropertyA"": 417636,
    ""SetupDiGetDeviceRegistryPropertyW"": 23640,
    ""SetupDiBuildDriverInfoList"": 71040,
    ""IsUserAdmin"": 720196
  },
  ""DllBase"": ""0x7fefdf70000"",
  ""DllName"": ""\\Windows\\System32\\setupapi.dll"",
  ""PID"": 1424
}
this gives a lot of hints about where the DLLs are in particular processes.","Introduce new kind of apimon log line when OUTPUT_JSON is used:
{
  ""Plugin"": ""apimon"",
  ""Event"": ""dll_loaded"",
  ""Rva"": {
    ""SetupDiGetClassDevsA"": 39104,
    ""SetupDiGetClassDevsW"": 20292,
    ""SetupDiGetDeviceRegistryPropertyA"": 417636,
    ""SetupDiGetDeviceRegistryPropertyW"": 23640,
    ""SetupDiBuildDriverInfoList"": 71040,
    ""IsUserAdmin"": 720196
  },
  ""DllBase"": ""0x7fefdf70000"",
  ""DllName"": ""\\Windows\\System32\\setupapi.dll"",
  ""PID"": 1424
}
this gives a lot of hints about where the DLLs are in particular processes.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,911,2020-07-10T14:35:35Z,2020-07-19T01:24:48Z,2020-07-19T10:24:02Z,MERGED,True,69,5,4,https://github.com/icedevml,apimon: log DLL ImageBase and function RVAs when hooking,2,[],https://github.com/tklengyel/drakvuf/pull/911,https://github.com/icedevml,2,https://github.com/tklengyel/drakvuf/pull/911#issuecomment-658180010,"Introduce new kind of apimon log line when OUTPUT_JSON is used:
{
  ""Plugin"": ""apimon"",
  ""Event"": ""dll_loaded"",
  ""Rva"": {
    ""SetupDiGetClassDevsA"": 39104,
    ""SetupDiGetClassDevsW"": 20292,
    ""SetupDiGetDeviceRegistryPropertyA"": 417636,
    ""SetupDiGetDeviceRegistryPropertyW"": 23640,
    ""SetupDiBuildDriverInfoList"": 71040,
    ""IsUserAdmin"": 720196
  },
  ""DllBase"": ""0x7fefdf70000"",
  ""DllName"": ""\\Windows\\System32\\setupapi.dll"",
  ""PID"": 1424
}
this gives a lot of hints about where the DLLs are in particular processes.",@BonusPlay fixed,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,911,2020-07-10T14:35:35Z,2020-07-19T01:24:48Z,2020-07-19T10:24:02Z,MERGED,True,69,5,4,https://github.com/icedevml,apimon: log DLL ImageBase and function RVAs when hooking,2,[],https://github.com/tklengyel/drakvuf/pull/911,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/911#issuecomment-658707830,"Introduce new kind of apimon log line when OUTPUT_JSON is used:
{
  ""Plugin"": ""apimon"",
  ""Event"": ""dll_loaded"",
  ""Rva"": {
    ""SetupDiGetClassDevsA"": 39104,
    ""SetupDiGetClassDevsW"": 20292,
    ""SetupDiGetDeviceRegistryPropertyA"": 417636,
    ""SetupDiGetDeviceRegistryPropertyW"": 23640,
    ""SetupDiBuildDriverInfoList"": 71040,
    ""IsUserAdmin"": 720196
  },
  ""DllBase"": ""0x7fefdf70000"",
  ""DllName"": ""\\Windows\\System32\\setupapi.dll"",
  ""PID"": 1424
}
this gives a lot of hints about where the DLLs are in particular processes.",@tklengyel this PR is ready,True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,914,2020-07-16T09:46:07Z,2020-07-19T01:25:25Z,2020-07-19T09:15:51Z,MERGED,True,95,2,4,https://github.com/kscieslinski,Added NtResumeThread dump heuristic,4,[],https://github.com/tklengyel/drakvuf/pull/914,https://github.com/kscieslinski,1,https://github.com/tklengyel/drakvuf/pull/914,Added nt_resume_thread_hook_cb to memdump plugin. It should help dumping malware unpacked using process hollowing (a.k.a RunPE) code injection technique which rely on NtResumeThread procedure.,Added nt_resume_thread_hook_cb to memdump plugin. It should help dumping malware unpacked using process hollowing (a.k.a RunPE) code injection technique which rely on NtResumeThread procedure.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,916,2020-07-19T23:34:41Z,2020-08-04T00:56:16Z,2020-08-04T18:25:38Z,MERGED,True,438,10,4,https://github.com/icedevml,injector: implement file push/pull feature,5,[],https://github.com/tklengyel/drakvuf/pull/916,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/916,"This PR adds a new operation mode for injector which doesn't spawn any new process but instead allows to read given guest's file and save it on the host side. Windows only.
Manual ability to fetching guest's files into host is useful for many reasons, including DRAKVUF setup procedure when we need to look at various system DLLs in order to generate appropriate usermode profiles.
Example usage:
write file into VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m writefile -e '%USERPROFILE%\desktop\putty.exe' -B putty.exe

read file from VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m readfile -e '%USERPROFILE%\desktop\putty.exe' -B /root/putty_readback.exe","This PR adds a new operation mode for injector which doesn't spawn any new process but instead allows to read given guest's file and save it on the host side. Windows only.
Manual ability to fetching guest's files into host is useful for many reasons, including DRAKVUF setup procedure when we need to look at various system DLLs in order to generate appropriate usermode profiles.
Example usage:
write file into VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m writefile -e '%USERPROFILE%\desktop\putty.exe' -B putty.exe

read file from VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m readfile -e '%USERPROFILE%\desktop\putty.exe' -B /root/putty_readback.exe",True,"{'THUMBS_UP': ['https://github.com/aoshiken', 'https://github.com/chivay', 'https://github.com/BonusPlay', 'https://github.com/kscieslinski', 'https://github.com/tklengyel']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,916,2020-07-19T23:34:41Z,2020-08-04T00:56:16Z,2020-08-04T18:25:38Z,MERGED,True,438,10,4,https://github.com/icedevml,injector: implement file push/pull feature,5,[],https://github.com/tklengyel/drakvuf/pull/916,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/916#issuecomment-660735878,"This PR adds a new operation mode for injector which doesn't spawn any new process but instead allows to read given guest's file and save it on the host side. Windows only.
Manual ability to fetching guest's files into host is useful for many reasons, including DRAKVUF setup procedure when we need to look at various system DLLs in order to generate appropriate usermode profiles.
Example usage:
write file into VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m writefile -e '%USERPROFILE%\desktop\putty.exe' -B putty.exe

read file from VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m readfile -e '%USERPROFILE%\desktop\putty.exe' -B /root/putty_readback.exe","Unless the file you are trying to pull from the VM is present in memory-only, why not just mount the disk and copy it that way? Using libguestfs  may also be an option if this doesn't need to be performant, ie if this is done at the end of an analysis session.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,916,2020-07-19T23:34:41Z,2020-08-04T00:56:16Z,2020-08-04T18:25:38Z,MERGED,True,438,10,4,https://github.com/icedevml,injector: implement file push/pull feature,5,[],https://github.com/tklengyel/drakvuf/pull/916,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/916#issuecomment-660923206,"This PR adds a new operation mode for injector which doesn't spawn any new process but instead allows to read given guest's file and save it on the host side. Windows only.
Manual ability to fetching guest's files into host is useful for many reasons, including DRAKVUF setup procedure when we need to look at various system DLLs in order to generate appropriate usermode profiles.
Example usage:
write file into VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m writefile -e '%USERPROFILE%\desktop\putty.exe' -B putty.exe

read file from VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m readfile -e '%USERPROFILE%\desktop\putty.exe' -B /root/putty_readback.exe","Generally I would like to stick with more out-of-the-box solution and avoid adding additional dependencies.
Also, I'm probably going to extend this to also have ""file push"" feature, because right now we have some problems with reliable injection of the malware samples into the guest OS. In this case libguestfs is not going to work anyway if our VM is already running (snapshotted).",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,916,2020-07-19T23:34:41Z,2020-08-04T00:56:16Z,2020-08-04T18:25:38Z,MERGED,True,438,10,4,https://github.com/icedevml,injector: implement file push/pull feature,5,[],https://github.com/tklengyel/drakvuf/pull/916,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/916#issuecomment-660948592,"This PR adds a new operation mode for injector which doesn't spawn any new process but instead allows to read given guest's file and save it on the host side. Windows only.
Manual ability to fetching guest's files into host is useful for many reasons, including DRAKVUF setup procedure when we need to look at various system DLLs in order to generate appropriate usermode profiles.
Example usage:
write file into VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m writefile -e '%USERPROFILE%\desktop\putty.exe' -B putty.exe

read file from VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m readfile -e '%USERPROFILE%\desktop\putty.exe' -B /root/putty_readback.exe","This way we might end up with injector having a new feature, i.e.: first pushing the sample from host to guest and then executing it. Not only it would be helpful to us, but I belive it's also what many people expect (looking at the tickets where they use injector mistakenly providing host path instead of guest path)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,916,2020-07-19T23:34:41Z,2020-08-04T00:56:16Z,2020-08-04T18:25:38Z,MERGED,True,438,10,4,https://github.com/icedevml,injector: implement file push/pull feature,5,[],https://github.com/tklengyel/drakvuf/pull/916,https://github.com/aoshiken,5,https://github.com/tklengyel/drakvuf/pull/916#issuecomment-660969326,"This PR adds a new operation mode for injector which doesn't spawn any new process but instead allows to read given guest's file and save it on the host side. Windows only.
Manual ability to fetching guest's files into host is useful for many reasons, including DRAKVUF setup procedure when we need to look at various system DLLs in order to generate appropriate usermode profiles.
Example usage:
write file into VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m writefile -e '%USERPROFILE%\desktop\putty.exe' -B putty.exe

read file from VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m readfile -e '%USERPROFILE%\desktop\putty.exe' -B /root/putty_readback.exe","Unless the file you are trying to pull from the VM is present in memory-only, why not just mount the disk and copy it that way? Using libguestfs  may also be an option if this doesn't need to be performant, ie if this is done at the end of an analysis session.

The issue with mounting the filesystem is the time elapsed until the disk view from dom0 and the disk view from inside the domU get synchronized, in my experiments the time elapsed lies between 15 seconds and almost 1 minute (YMMV), obviously this  happens with deletes also sou you might end up mounting a disk and checking for a file that you don't see from dom0 but the fact is that the file exists in the domU filesystem.
Maybe kind of ""push"" for the xen disk driver forced from dom0 could fix this.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,916,2020-07-19T23:34:41Z,2020-08-04T00:56:16Z,2020-08-04T18:25:38Z,MERGED,True,438,10,4,https://github.com/icedevml,injector: implement file push/pull feature,5,[],https://github.com/tklengyel/drakvuf/pull/916,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/916#issuecomment-660980646,"This PR adds a new operation mode for injector which doesn't spawn any new process but instead allows to read given guest's file and save it on the host side. Windows only.
Manual ability to fetching guest's files into host is useful for many reasons, including DRAKVUF setup procedure when we need to look at various system DLLs in order to generate appropriate usermode profiles.
Example usage:
write file into VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m writefile -e '%USERPROFILE%\desktop\putty.exe' -B putty.exe

read file from VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m readfile -e '%USERPROFILE%\desktop\putty.exe' -B /root/putty_readback.exe","Maybe kind of ""push"" for the xen disk driver forced from dom0 could fix this.

This has nothing to do with a xen driver (there is no such thing as a xen driver anyway). The guest itself only performs disk operations after a while and caches them in memory for speed. On linux you can issue the sync command to perform all pending disk ops for this reason. Something like that is probably available for Windows as well. If you just need to extract a file at the end of the analysis you could easily inject a call to sync or its Windows equivalent and then pause the VM, mount the disk and extract the files you need. For other use-cases this is probably not great as it's going to be slow. But the complexity of it is pretty low.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,916,2020-07-19T23:34:41Z,2020-08-04T00:56:16Z,2020-08-04T18:25:38Z,MERGED,True,438,10,4,https://github.com/icedevml,injector: implement file push/pull feature,5,[],https://github.com/tklengyel/drakvuf/pull/916,https://github.com/icedevml,7,https://github.com/tklengyel/drakvuf/pull/916#issuecomment-661064922,"This PR adds a new operation mode for injector which doesn't spawn any new process but instead allows to read given guest's file and save it on the host side. Windows only.
Manual ability to fetching guest's files into host is useful for many reasons, including DRAKVUF setup procedure when we need to look at various system DLLs in order to generate appropriate usermode profiles.
Example usage:
write file into VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m writefile -e '%USERPROFILE%\desktop\putty.exe' -B putty.exe

read file from VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m readfile -e '%USERPROFILE%\desktop\putty.exe' -B /root/putty_readback.exe","Yup, but for writing file into the VM the situation is not that simple. Right now we are seeking the most robust way and it turns out that injecting CreateFile and WriteFile is the best we can do right now. And because this is simply the reverse of ReadFile, we can trivially have both file push and pop.
The huge advantage is that it doesn't need any extra dependencies and doesn't rely on the particular filesystem or implementation. Also, no problems with caching and stuff like that.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,916,2020-07-19T23:34:41Z,2020-08-04T00:56:16Z,2020-08-04T18:25:38Z,MERGED,True,438,10,4,https://github.com/icedevml,injector: implement file push/pull feature,5,[],https://github.com/tklengyel/drakvuf/pull/916,https://github.com/drakvuf-jenkins,8,https://github.com/tklengyel/drakvuf/pull/916#issuecomment-662790528,"This PR adds a new operation mode for injector which doesn't spawn any new process but instead allows to read given guest's file and save it on the host side. Windows only.
Manual ability to fetching guest's files into host is useful for many reasons, including DRAKVUF setup procedure when we need to look at various system DLLs in order to generate appropriate usermode profiles.
Example usage:
write file into VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m writefile -e '%USERPROFILE%\desktop\putty.exe' -B putty.exe

read file from VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m readfile -e '%USERPROFILE%\desktop\putty.exe' -B /root/putty_readback.exe",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,916,2020-07-19T23:34:41Z,2020-08-04T00:56:16Z,2020-08-04T18:25:38Z,MERGED,True,438,10,4,https://github.com/icedevml,injector: implement file push/pull feature,5,[],https://github.com/tklengyel/drakvuf/pull/916,https://github.com/icedevml,9,https://github.com/tklengyel/drakvuf/pull/916#issuecomment-665707972,"This PR adds a new operation mode for injector which doesn't spawn any new process but instead allows to read given guest's file and save it on the host side. Windows only.
Manual ability to fetching guest's files into host is useful for many reasons, including DRAKVUF setup procedure when we need to look at various system DLLs in order to generate appropriate usermode profiles.
Example usage:
write file into VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m writefile -e '%USERPROFILE%\desktop\putty.exe' -B putty.exe

read file from VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m readfile -e '%USERPROFILE%\desktop\putty.exe' -B /root/putty_readback.exe",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,916,2020-07-19T23:34:41Z,2020-08-04T00:56:16Z,2020-08-04T18:25:38Z,MERGED,True,438,10,4,https://github.com/icedevml,injector: implement file push/pull feature,5,[],https://github.com/tklengyel/drakvuf/pull/916,https://github.com/icedevml,10,https://github.com/tklengyel/drakvuf/pull/916#issuecomment-665756225,"This PR adds a new operation mode for injector which doesn't spawn any new process but instead allows to read given guest's file and save it on the host side. Windows only.
Manual ability to fetching guest's files into host is useful for many reasons, including DRAKVUF setup procedure when we need to look at various system DLLs in order to generate appropriate usermode profiles.
Example usage:
write file into VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m writefile -e '%USERPROFILE%\desktop\putty.exe' -B putty.exe

read file from VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m readfile -e '%USERPROFILE%\desktop\putty.exe' -B /root/putty_readback.exe","@tklengyel Some problem with CI?
Can't get domid of domain name 'windows10-jenkins', maybe this domain does not exist.

https://ci.drakvuf.com/job/DRAKVUF-windows10/52/console",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,916,2020-07-19T23:34:41Z,2020-08-04T00:56:16Z,2020-08-04T18:25:38Z,MERGED,True,438,10,4,https://github.com/icedevml,injector: implement file push/pull feature,5,[],https://github.com/tklengyel/drakvuf/pull/916,https://github.com/icedevml,11,https://github.com/tklengyel/drakvuf/pull/916#issuecomment-667084262,"This PR adds a new operation mode for injector which doesn't spawn any new process but instead allows to read given guest's file and save it on the host side. Windows only.
Manual ability to fetching guest's files into host is useful for many reasons, including DRAKVUF setup procedure when we need to look at various system DLLs in order to generate appropriate usermode profiles.
Example usage:
write file into VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m writefile -e '%USERPROFILE%\desktop\putty.exe' -B putty.exe

read file from VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m readfile -e '%USERPROFILE%\desktop\putty.exe' -B /root/putty_readback.exe",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,916,2020-07-19T23:34:41Z,2020-08-04T00:56:16Z,2020-08-04T18:25:38Z,MERGED,True,438,10,4,https://github.com/icedevml,injector: implement file push/pull feature,5,[],https://github.com/tklengyel/drakvuf/pull/916,https://github.com/tklengyel,12,https://github.com/tklengyel/drakvuf/pull/916#issuecomment-667120138,"This PR adds a new operation mode for injector which doesn't spawn any new process but instead allows to read given guest's file and save it on the host side. Windows only.
Manual ability to fetching guest's files into host is useful for many reasons, including DRAKVUF setup procedure when we need to look at various system DLLs in order to generate appropriate usermode profiles.
Example usage:
write file into VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m writefile -e '%USERPROFILE%\desktop\putty.exe' -B putty.exe

read file from VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m readfile -e '%USERPROFILE%\desktop\putty.exe' -B /root/putty_readback.exe","The CI box didn't boot after I updated GRUB2 on it. Still doesn't and its a bug that seems to affect both Debian and Ubuntu - yikes. Anyway, I resorted to booting Xen from EFI directly and it's up now.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,916,2020-07-19T23:34:41Z,2020-08-04T00:56:16Z,2020-08-04T18:25:38Z,MERGED,True,438,10,4,https://github.com/icedevml,injector: implement file push/pull feature,5,[],https://github.com/tklengyel/drakvuf/pull/916,https://github.com/tklengyel,13,https://github.com/tklengyel/drakvuf/pull/916#issuecomment-667120242,"This PR adds a new operation mode for injector which doesn't spawn any new process but instead allows to read given guest's file and save it on the host side. Windows only.
Manual ability to fetching guest's files into host is useful for many reasons, including DRAKVUF setup procedure when we need to look at various system DLLs in order to generate appropriate usermode profiles.
Example usage:
write file into VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m writefile -e '%USERPROFILE%\desktop\putty.exe' -B putty.exe

read file from VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m readfile -e '%USERPROFILE%\desktop\putty.exe' -B /root/putty_readback.exe",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,916,2020-07-19T23:34:41Z,2020-08-04T00:56:16Z,2020-08-04T18:25:38Z,MERGED,True,438,10,4,https://github.com/icedevml,injector: implement file push/pull feature,5,[],https://github.com/tklengyel/drakvuf/pull/916,https://github.com/tklengyel,14,https://github.com/tklengyel/drakvuf/pull/916#issuecomment-667736978,"This PR adds a new operation mode for injector which doesn't spawn any new process but instead allows to read given guest's file and save it on the host side. Windows only.
Manual ability to fetching guest's files into host is useful for many reasons, including DRAKVUF setup procedure when we need to look at various system DLLs in order to generate appropriate usermode profiles.
Example usage:
write file into VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m writefile -e '%USERPROFILE%\desktop\putty.exe' -B putty.exe

read file from VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m readfile -e '%USERPROFILE%\desktop\putty.exe' -B /root/putty_readback.exe","Fantastic addition, works very well. Will add an extra check to the CI to make sure this works going forward. 🥇 🥳",True,"{'HEART': ['https://github.com/BonusPlay', 'https://github.com/icedevml']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,916,2020-07-19T23:34:41Z,2020-08-04T00:56:16Z,2020-08-04T18:25:38Z,MERGED,True,438,10,4,https://github.com/icedevml,injector: implement file push/pull feature,5,[],https://github.com/tklengyel/drakvuf/pull/916,https://github.com/tklengyel,15,https://github.com/tklengyel/drakvuf/pull/916#issuecomment-667753169,"This PR adds a new operation mode for injector which doesn't spawn any new process but instead allows to read given guest's file and save it on the host side. Windows only.
Manual ability to fetching guest's files into host is useful for many reasons, including DRAKVUF setup procedure when we need to look at various system DLLs in order to generate appropriate usermode profiles.
Example usage:
write file into VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m writefile -e '%USERPROFILE%\desktop\putty.exe' -B putty.exe

read file from VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m readfile -e '%USERPROFILE%\desktop\putty.exe' -B /root/putty_readback.exe",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,916,2020-07-19T23:34:41Z,2020-08-04T00:56:16Z,2020-08-04T18:25:38Z,MERGED,True,438,10,4,https://github.com/icedevml,injector: implement file push/pull feature,5,[],https://github.com/tklengyel/drakvuf/pull/916,https://github.com/tklengyel,16,https://github.com/tklengyel/drakvuf/pull/916#issuecomment-667999608,"This PR adds a new operation mode for injector which doesn't spawn any new process but instead allows to read given guest's file and save it on the host side. Windows only.
Manual ability to fetching guest's files into host is useful for many reasons, including DRAKVUF setup procedure when we need to look at various system DLLs in order to generate appropriate usermode profiles.
Example usage:
write file into VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m writefile -e '%USERPROFILE%\desktop\putty.exe' -B putty.exe

read file from VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m readfile -e '%USERPROFILE%\desktop\putty.exe' -B /root/putty_readback.exe",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,916,2020-07-19T23:34:41Z,2020-08-04T00:56:16Z,2020-08-04T18:25:38Z,MERGED,True,438,10,4,https://github.com/icedevml,injector: implement file push/pull feature,5,[],https://github.com/tklengyel/drakvuf/pull/916,https://github.com/tklengyel,17,https://github.com/tklengyel/drakvuf/pull/916#issuecomment-668081841,"This PR adds a new operation mode for injector which doesn't spawn any new process but instead allows to read given guest's file and save it on the host side. Windows only.
Manual ability to fetching guest's files into host is useful for many reasons, including DRAKVUF setup procedure when we need to look at various system DLLs in order to generate appropriate usermode profiles.
Example usage:
write file into VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m writefile -e '%USERPROFILE%\desktop\putty.exe' -B putty.exe

read file from VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m readfile -e '%USERPROFILE%\desktop\putty.exe' -B /root/putty_readback.exe",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,916,2020-07-19T23:34:41Z,2020-08-04T00:56:16Z,2020-08-04T18:25:38Z,MERGED,True,438,10,4,https://github.com/icedevml,injector: implement file push/pull feature,5,[],https://github.com/tklengyel/drakvuf/pull/916,https://github.com/tklengyel,18,https://github.com/tklengyel/drakvuf/pull/916#issuecomment-668109844,"This PR adds a new operation mode for injector which doesn't spawn any new process but instead allows to read given guest's file and save it on the host side. Windows only.
Manual ability to fetching guest's files into host is useful for many reasons, including DRAKVUF setup procedure when we need to look at various system DLLs in order to generate appropriate usermode profiles.
Example usage:
write file into VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m writefile -e '%USERPROFILE%\desktop\putty.exe' -B putty.exe

read file from VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m readfile -e '%USERPROFILE%\desktop\putty.exe' -B /root/putty_readback.exe",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,916,2020-07-19T23:34:41Z,2020-08-04T00:56:16Z,2020-08-04T18:25:38Z,MERGED,True,438,10,4,https://github.com/icedevml,injector: implement file push/pull feature,5,[],https://github.com/tklengyel/drakvuf/pull/916,https://github.com/tklengyel,19,https://github.com/tklengyel/drakvuf/pull/916#issuecomment-668303654,"This PR adds a new operation mode for injector which doesn't spawn any new process but instead allows to read given guest's file and save it on the host side. Windows only.
Manual ability to fetching guest's files into host is useful for many reasons, including DRAKVUF setup procedure when we need to look at various system DLLs in order to generate appropriate usermode profiles.
Example usage:
write file into VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m writefile -e '%USERPROFILE%\desktop\putty.exe' -B putty.exe

read file from VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m readfile -e '%USERPROFILE%\desktop\putty.exe' -B /root/putty_readback.exe","So for the most part the writefile op seems stable but I do get random failures, like in https://ci.drakvuf.com/job/DRAKVUF-windows10-2004/77/console. So if it fails randomly I won't be able to add it to the CI cause it will be too noisy.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,916,2020-07-19T23:34:41Z,2020-08-04T00:56:16Z,2020-08-04T18:25:38Z,MERGED,True,438,10,4,https://github.com/icedevml,injector: implement file push/pull feature,5,[],https://github.com/tklengyel/drakvuf/pull/916,https://github.com/tklengyel,20,https://github.com/tklengyel/drakvuf/pull/916#issuecomment-668305100,"This PR adds a new operation mode for injector which doesn't spawn any new process but instead allows to read given guest's file and save it on the host side. Windows only.
Manual ability to fetching guest's files into host is useful for many reasons, including DRAKVUF setup procedure when we need to look at various system DLLs in order to generate appropriate usermode profiles.
Example usage:
write file into VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m writefile -e '%USERPROFILE%\desktop\putty.exe' -B putty.exe

read file from VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m readfile -e '%USERPROFILE%\desktop\putty.exe' -B /root/putty_readback.exe",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,916,2020-07-19T23:34:41Z,2020-08-04T00:56:16Z,2020-08-04T18:25:38Z,MERGED,True,438,10,4,https://github.com/icedevml,injector: implement file push/pull feature,5,[],https://github.com/tklengyel/drakvuf/pull/916,https://github.com/tklengyel,21,https://github.com/tklengyel/drakvuf/pull/916#issuecomment-668312590,"This PR adds a new operation mode for injector which doesn't spawn any new process but instead allows to read given guest's file and save it on the host side. Windows only.
Manual ability to fetching guest's files into host is useful for many reasons, including DRAKVUF setup procedure when we need to look at various system DLLs in order to generate appropriate usermode profiles.
Example usage:
write file into VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m writefile -e '%USERPROFILE%\desktop\putty.exe' -B putty.exe

read file from VM
src/injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 808 -m readfile -e '%USERPROFILE%\desktop\putty.exe' -B /root/putty_readback.exe","Alright, if the only injection I perform is writefile followed by createproc for the file that was written it is stable.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,919,2020-07-25T12:26:39Z,2020-07-25T14:17:27Z,2020-07-25T14:17:30Z,MERGED,True,1,1,1,https://github.com/tklengyel,Update Xen submodule to 4.14,1,[],https://github.com/tklengyel/drakvuf/pull/919,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/919,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,919,2020-07-25T12:26:39Z,2020-07-25T14:17:27Z,2020-07-25T14:17:30Z,MERGED,True,1,1,1,https://github.com/tklengyel,Update Xen submodule to 4.14,1,[],https://github.com/tklengyel/drakvuf/pull/919,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/919#issuecomment-663854073,,@drakvuf-jenkins Retest this,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,919,2020-07-25T12:26:39Z,2020-07-25T14:17:27Z,2020-07-25T14:17:30Z,MERGED,True,1,1,1,https://github.com/tklengyel,Update Xen submodule to 4.14,1,[],https://github.com/tklengyel/drakvuf/pull/919,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/919#issuecomment-663857896,,@drakvuf-jenkins retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,920,2020-07-25T14:31:35Z,2020-07-25T15:45:51Z,2020-07-25T15:45:55Z,MERGED,True,1,1,1,https://github.com/tklengyel,Bump version to 0.8,1,[],https://github.com/tklengyel/drakvuf/pull/920,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/920,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,921,2020-07-25T17:17:58Z,2020-07-25T17:40:00Z,2020-07-25T17:40:03Z,MERGED,True,1,1,1,https://github.com/tklengyel,Use python3-dev in package/depends.sh,1,[],https://github.com/tklengyel/drakvuf/pull/921,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/921,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,922,2020-07-25T18:29:05Z,2020-07-25T18:29:13Z,2020-07-25T18:29:16Z,MERGED,True,1,1,1,https://github.com/tklengyel,Use python3 in package/mkdeb,1,[],https://github.com/tklengyel/drakvuf/pull/922,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/922,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,923,2020-07-25T18:53:16Z,2020-07-25T18:53:30Z,2020-07-25T18:53:33Z,MERGED,True,0,1,1,https://github.com/tklengyel,Don't manually try to copy non-existent python site-packages,1,[],https://github.com/tklengyel/drakvuf/pull/923,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/923,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,924,2020-07-28T08:32:23Z,2020-08-02T00:29:50Z,2020-11-06T18:54:23Z,MERGED,True,140,100,5,https://github.com/kscieslinski,Changed ProcessHollowing heuristic. Hooking on NtSetInformationThread.,5,[],https://github.com/tklengyel/drakvuf/pull/924,https://github.com/kscieslinski,1,https://github.com/tklengyel/drakvuf/pull/924,"It seems that windows does not modify win32startaddress on NtSetContextThread call as I thought. Instead, now I hook on NtSetInformationThread and I retrieve both eax/eip registers from WOW64_CONTEXT structure. This covers two variants of process hollowing: when Eip is substituted (shellcode injection), and when entry point is changed by modifying eax register.","It seems that windows does not modify win32startaddress on NtSetContextThread call as I thought. Instead, now I hook on NtSetInformationThread and I retrieve both eax/eip registers from WOW64_CONTEXT structure. This covers two variants of process hollowing: when Eip is substituted (shellcode injection), and when entry point is changed by modifying eax register.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,924,2020-07-28T08:32:23Z,2020-08-02T00:29:50Z,2020-11-06T18:54:23Z,MERGED,True,140,100,5,https://github.com/kscieslinski,Changed ProcessHollowing heuristic. Hooking on NtSetInformationThread.,5,[],https://github.com/tklengyel/drakvuf/pull/924,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/924#issuecomment-664859148,"It seems that windows does not modify win32startaddress on NtSetContextThread call as I thought. Instead, now I hook on NtSetInformationThread and I retrieve both eax/eip registers from WOW64_CONTEXT structure. This covers two variants of process hollowing: when Eip is substituted (shellcode injection), and when entry point is changed by modifying eax register.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,924,2020-07-28T08:32:23Z,2020-08-02T00:29:50Z,2020-11-06T18:54:23Z,MERGED,True,140,100,5,https://github.com/kscieslinski,Changed ProcessHollowing heuristic. Hooking on NtSetInformationThread.,5,[],https://github.com/tklengyel/drakvuf/pull/924,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/924#issuecomment-664979667,"It seems that windows does not modify win32startaddress on NtSetContextThread call as I thought. Instead, now I hook on NtSetInformationThread and I retrieve both eax/eip registers from WOW64_CONTEXT structure. This covers two variants of process hollowing: when Eip is substituted (shellcode injection), and when entry point is changed by modifying eax register.",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,924,2020-07-28T08:32:23Z,2020-08-02T00:29:50Z,2020-11-06T18:54:23Z,MERGED,True,140,100,5,https://github.com/kscieslinski,Changed ProcessHollowing heuristic. Hooking on NtSetInformationThread.,5,[],https://github.com/tklengyel/drakvuf/pull/924,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/924#issuecomment-666476648,"It seems that windows does not modify win32startaddress on NtSetContextThread call as I thought. Instead, now I hook on NtSetInformationThread and I retrieve both eax/eip registers from WOW64_CONTEXT structure. This covers two variants of process hollowing: when Eip is substituted (shellcode injection), and when entry point is changed by modifying eax register.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,924,2020-07-28T08:32:23Z,2020-08-02T00:29:50Z,2020-11-06T18:54:23Z,MERGED,True,140,100,5,https://github.com/kscieslinski,Changed ProcessHollowing heuristic. Hooking on NtSetInformationThread.,5,[],https://github.com/tklengyel/drakvuf/pull/924,https://github.com/icedevml,5,https://github.com/tklengyel/drakvuf/pull/924#issuecomment-667090291,"It seems that windows does not modify win32startaddress on NtSetContextThread call as I thought. Instead, now I hook on NtSetInformationThread and I retrieve both eax/eip registers from WOW64_CONTEXT structure. This covers two variants of process hollowing: when Eip is substituted (shellcode injection), and when entry point is changed by modifying eax register.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,924,2020-07-28T08:32:23Z,2020-08-02T00:29:50Z,2020-11-06T18:54:23Z,MERGED,True,140,100,5,https://github.com/kscieslinski,Changed ProcessHollowing heuristic. Hooking on NtSetInformationThread.,5,[],https://github.com/tklengyel/drakvuf/pull/924,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/924#issuecomment-667120734,"It seems that windows does not modify win32startaddress on NtSetContextThread call as I thought. Instead, now I hook on NtSetInformationThread and I retrieve both eax/eip registers from WOW64_CONTEXT structure. This covers two variants of process hollowing: when Eip is substituted (shellcode injection), and when entry point is changed by modifying eax register.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,926,2020-07-29T13:18:35Z,2020-09-15T12:04:19Z,2020-11-06T18:54:17Z,CLOSED,False,6,9,1,https://github.com/kscieslinski,Added set to store unique hashes of dumped memory regions,3,[],https://github.com/tklengyel/drakvuf/pull/926,https://github.com/kscieslinski,1,https://github.com/tklengyel/drakvuf/pull/926,We are dumping the same memory regions in memdump plugin.  I've added a set in which I store hashes of already dumped memory regions and before dumping region I just check if it is already in the set. Analysis of 30k samples proved that this very basic check reduces the storage by 18%.,We are dumping the same memory regions in memdump plugin.  I've added a set in which I store hashes of already dumped memory regions and before dumping region I just check if it is already in the set. Analysis of 30k samples proved that this very basic check reduces the storage by 18%.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,926,2020-07-29T13:18:35Z,2020-09-15T12:04:19Z,2020-11-06T18:54:17Z,CLOSED,False,6,9,1,https://github.com/kscieslinski,Added set to store unique hashes of dumped memory regions,3,[],https://github.com/tklengyel/drakvuf/pull/926,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/926#issuecomment-665658898,We are dumping the same memory regions in memdump plugin.  I've added a set in which I store hashes of already dumped memory regions and before dumping region I just check if it is already in the set. Analysis of 30k samples proved that this very basic check reduces the storage by 18%.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,926,2020-07-29T13:18:35Z,2020-09-15T12:04:19Z,2020-11-06T18:54:17Z,CLOSED,False,6,9,1,https://github.com/kscieslinski,Added set to store unique hashes of dumped memory regions,3,[],https://github.com/tklengyel/drakvuf/pull/926,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/926#issuecomment-665666518,We are dumping the same memory regions in memdump plugin.  I've added a set in which I store hashes of already dumped memory regions and before dumping region I just check if it is already in the set. Analysis of 30k samples proved that this very basic check reduces the storage by 18%.,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,926,2020-07-29T13:18:35Z,2020-09-15T12:04:19Z,2020-11-06T18:54:17Z,CLOSED,False,6,9,1,https://github.com/kscieslinski,Added set to store unique hashes of dumped memory regions,3,[],https://github.com/tklengyel/drakvuf/pull/926,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/926#issuecomment-665709273,We are dumping the same memory regions in memdump plugin.  I've added a set in which I store hashes of already dumped memory regions and before dumping region I just check if it is already in the set. Analysis of 30k samples proved that this very basic check reduces the storage by 18%.,"But wait.
    // The file name format for the memory dump file is:
    // <dump base address>_<contents hash>

if the same content would be dumped few times, anyway it will be stored in an exact same file name.
After this PR is applied, what if the same contents would be dumped from multiple base addresses? The first one would be stored and the rest just discarded?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,926,2020-07-29T13:18:35Z,2020-09-15T12:04:19Z,2020-11-06T18:54:17Z,CLOSED,False,6,9,1,https://github.com/kscieslinski,Added set to store unique hashes of dumped memory regions,3,[],https://github.com/tklengyel/drakvuf/pull/926,https://github.com/kscieslinski,5,https://github.com/tklengyel/drakvuf/pull/926#issuecomment-665715722,We are dumping the same memory regions in memdump plugin.  I've added a set in which I store hashes of already dumped memory regions and before dumping region I just check if it is already in the set. Analysis of 30k samples proved that this very basic check reduces the storage by 18%.,"But wait.
    // The file name format for the memory dump file is:
    // <dump base address>_<contents hash>

if the same content would be dumped few times, anyway it will be stored in an exact same file name.
After this PR is applied, what if the same contents would be dumped from multiple base addresses? The first one would be stored and the rest just discarded?

Yes, the rest will be just discarded. Is there a reason for having multiple dumps from different base addresses?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,926,2020-07-29T13:18:35Z,2020-09-15T12:04:19Z,2020-11-06T18:54:17Z,CLOSED,False,6,9,1,https://github.com/kscieslinski,Added set to store unique hashes of dumped memory regions,3,[],https://github.com/tklengyel/drakvuf/pull/926,https://github.com/icedevml,6,https://github.com/tklengyel/drakvuf/pull/926#issuecomment-665721483,We are dumping the same memory regions in memdump plugin.  I've added a set in which I store hashes of already dumped memory regions and before dumping region I just check if it is already in the set. Analysis of 30k samples proved that this very basic check reduces the storage by 18%.,"Yes, the rest will be just discarded. Is there a reason for having multiple dumps from different base addresses?

IMHO we should at least log that such case occurred and log all the necessary metadata. We could stay with a single dump file, tho.
The base address is a must-have for further analysis of the dump (disassembly). If we would occur the same data under different base addresess, it might happen that only a single one would be valid and rest is to be discarded.",True,"{'THUMBS_UP': ['https://github.com/BonusPlay', 'https://github.com/kscieslinski']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,926,2020-07-29T13:18:35Z,2020-09-15T12:04:19Z,2020-11-06T18:54:17Z,CLOSED,False,6,9,1,https://github.com/kscieslinski,Added set to store unique hashes of dumped memory regions,3,[],https://github.com/tklengyel/drakvuf/pull/926,https://github.com/kscieslinski,7,https://github.com/tklengyel/drakvuf/pull/926#issuecomment-666240584,We are dumping the same memory regions in memdump plugin.  I've added a set in which I store hashes of already dumped memory regions and before dumping region I just check if it is already in the set. Analysis of 30k samples proved that this very basic check reduces the storage by 18%.,"Yes, the rest will be just discarded. Is there a reason for having multiple dumps from different base addresses?

IMHO we should at least log that such case occurred and log all the necessary metadata. We could stay with a single dump file, tho.
The base address is a must-have for further analysis of the dump (disassembly). If we would occur the same data under different base addresess, it might happen that only a single one would be valid and rest is to be discarded.

I've changed the dump file name format. Instead of <base_addr>_<content_hash> it's now only <content_hash>. The DumpAddress is logged anyway in metadata. This way we don't store duplicates and at the same time we don't loose any information.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,926,2020-07-29T13:18:35Z,2020-09-15T12:04:19Z,2020-11-06T18:54:17Z,CLOSED,False,6,9,1,https://github.com/kscieslinski,Added set to store unique hashes of dumped memory regions,3,[],https://github.com/tklengyel/drakvuf/pull/926,https://github.com/icedevml,8,https://github.com/tklengyel/drakvuf/pull/926#issuecomment-666301163,We are dumping the same memory regions in memdump plugin.  I've added a set in which I store hashes of already dumped memory regions and before dumping region I just check if it is already in the set. Analysis of 30k samples proved that this very basic check reduces the storage by 18%.,"Hold on with this one, we need to (re)consider a few things regarding the existing integrations that might get broken with this change. Let's first discuss this internally and final conclusions will be posted here in this PR.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,927,2020-07-29T17:12:52Z,2020-08-02T00:30:27Z,2020-10-26T17:22:44Z,MERGED,True,27,78,2,https://github.com/chivay,apimon: use new fmt API for logging,4,[],https://github.com/tklengyel/drakvuf/pull/927,https://github.com/chivay,1,https://github.com/tklengyel/drakvuf/pull/927,"Use fmt:: for printing logs, fixing a small bug at the same time.
When trying to format empty Extra map, the code would erroneously print , thus breaking JSON.","Use fmt:: for printing logs, fixing a small bug at the same time.
When trying to format empty Extra map, the code would erroneously print , thus breaking JSON.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,927,2020-07-29T17:12:52Z,2020-08-02T00:30:27Z,2020-10-26T17:22:44Z,MERGED,True,27,78,2,https://github.com/chivay,apimon: use new fmt API for logging,4,[],https://github.com/tklengyel/drakvuf/pull/927,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/927#issuecomment-665790352,"Use fmt:: for printing logs, fixing a small bug at the same time.
When trying to format empty Extra map, the code would erroneously print , thus breaking JSON.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,927,2020-07-29T17:12:52Z,2020-08-02T00:30:27Z,2020-10-26T17:22:44Z,MERGED,True,27,78,2,https://github.com/chivay,apimon: use new fmt API for logging,4,[],https://github.com/tklengyel/drakvuf/pull/927,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/927#issuecomment-665810832,"Use fmt:: for printing logs, fixing a small bug at the same time.
When trying to format empty Extra map, the code would erroneously print , thus breaking JSON.",@drakvuf-jenkins: This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,927,2020-07-29T17:12:52Z,2020-08-02T00:30:27Z,2020-10-26T17:22:44Z,MERGED,True,27,78,2,https://github.com/chivay,apimon: use new fmt API for logging,4,[],https://github.com/tklengyel/drakvuf/pull/927,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/927#issuecomment-666403382,"Use fmt:: for printing logs, fixing a small bug at the same time.
When trying to format empty Extra map, the code would erroneously print , thus breaking JSON.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,927,2020-07-29T17:12:52Z,2020-08-02T00:30:27Z,2020-10-26T17:22:44Z,MERGED,True,27,78,2,https://github.com/chivay,apimon: use new fmt API for logging,4,[],https://github.com/tklengyel/drakvuf/pull/927,https://github.com/icedevml,5,https://github.com/tklengyel/drakvuf/pull/927#issuecomment-666476290,"Use fmt:: for printing logs, fixing a small bug at the same time.
When trying to format empty Extra map, the code would erroneously print , thus breaking JSON.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,927,2020-07-29T17:12:52Z,2020-08-02T00:30:27Z,2020-10-26T17:22:44Z,MERGED,True,27,78,2,https://github.com/chivay,apimon: use new fmt API for logging,4,[],https://github.com/tklengyel/drakvuf/pull/927,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/927#issuecomment-666695462,"Use fmt:: for printing logs, fixing a small bug at the same time.
When trying to format empty Extra map, the code would erroneously print , thus breaking JSON.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,928,2020-07-31T11:57:34Z,2020-07-31T13:30:27Z,2020-07-31T13:32:14Z,MERGED,True,0,14,3,https://github.com/icedevml,Remove swab.patch for Debian build,1,[],https://github.com/tklengyel/drakvuf/pull/928,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/928,"Linux headers are now fixed in Debian, no need to apply swab.patch","Linux headers are now fixed in Debian, no need to apply swab.patch",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,929,2020-07-31T20:23:12Z,2020-08-02T00:28:46Z,2020-08-02T00:28:46Z,MERGED,True,1,1,1,https://github.com/icedevml,Fix typo in filetracer's OUTPUT_JSON,1,[],https://github.com/tklengyel/drakvuf/pull/929,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/929,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,929,2020-07-31T20:23:12Z,2020-08-02T00:28:46Z,2020-08-02T00:28:46Z,MERGED,True,1,1,1,https://github.com/icedevml,Fix typo in filetracer's OUTPUT_JSON,1,[],https://github.com/tklengyel/drakvuf/pull/929,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/929#issuecomment-667522612,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,930,2020-08-05T22:36:11Z,2020-08-06T14:16:34Z,2020-08-06T14:57:32Z,MERGED,True,1,1,1,https://github.com/icedevml,OUTPUT_JSON: rename Time key to TimeStamp to be backwards-compatible,1,[],https://github.com/tklengyel/drakvuf/pull/930,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/930,This is to keep parity between plugins that were already rewritten to the new output formatter and the old plugins which all output TimeStamp.,This is to keep parity between plugins that were already rewritten to the new output formatter and the old plugins which all output TimeStamp.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,931,2020-08-07T17:01:46Z,2020-08-13T07:09:12Z,2020-10-26T05:51:45Z,CLOSED,False,269,54,8,https://github.com/skvl,"libusermode, syscalls, filetracer: add new types to printers, fix WoW64, add status for NtCreateFileHook",11,[],https://github.com/tklengyel/drakvuf/pull/931,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/931,This is a accumulative branch with various minor additions.,This is a accumulative branch with various minor additions.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,931,2020-08-07T17:01:46Z,2020-08-13T07:09:12Z,2020-10-26T05:51:45Z,CLOSED,False,269,54,8,https://github.com/skvl,"libusermode, syscalls, filetracer: add new types to printers, fix WoW64, add status for NtCreateFileHook",11,[],https://github.com/tklengyel/drakvuf/pull/931,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/931#issuecomment-670614999,This is a accumulative branch with various minor additions.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,931,2020-08-07T17:01:46Z,2020-08-13T07:09:12Z,2020-10-26T05:51:45Z,CLOSED,False,269,54,8,https://github.com/skvl,"libusermode, syscalls, filetracer: add new types to printers, fix WoW64, add status for NtCreateFileHook",11,[],https://github.com/tklengyel/drakvuf/pull/931,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/931#issuecomment-670646273,This is a accumulative branch with various minor additions.,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,931,2020-08-07T17:01:46Z,2020-08-13T07:09:12Z,2020-10-26T05:51:45Z,CLOSED,False,269,54,8,https://github.com/skvl,"libusermode, syscalls, filetracer: add new types to printers, fix WoW64, add status for NtCreateFileHook",11,[],https://github.com/tklengyel/drakvuf/pull/931,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/931#issuecomment-670680256,This is a accumulative branch with various minor additions.,I'll look tomorrow,True,{'THUMBS_UP': ['https://github.com/skvl']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,931,2020-08-07T17:01:46Z,2020-08-13T07:09:12Z,2020-10-26T05:51:45Z,CLOSED,False,269,54,8,https://github.com/skvl,"libusermode, syscalls, filetracer: add new types to printers, fix WoW64, add status for NtCreateFileHook",11,[],https://github.com/tklengyel/drakvuf/pull/931,https://github.com/icedevml,5,https://github.com/tklengyel/drakvuf/pull/931#issuecomment-671670115,This is a accumulative branch with various minor additions.,"libusermode related part looks good to me, thanks for extending argument printers with new kinds of values",True,{'THUMBS_UP': ['https://github.com/skvl']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,931,2020-08-07T17:01:46Z,2020-08-13T07:09:12Z,2020-10-26T05:51:45Z,CLOSED,False,269,54,8,https://github.com/skvl,"libusermode, syscalls, filetracer: add new types to printers, fix WoW64, add status for NtCreateFileHook",11,[],https://github.com/tklengyel/drakvuf/pull/931,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/931#issuecomment-672124918,This is a accumulative branch with various minor additions.,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,931,2020-08-07T17:01:46Z,2020-08-13T07:09:12Z,2020-10-26T05:51:45Z,CLOSED,False,269,54,8,https://github.com/skvl,"libusermode, syscalls, filetracer: add new types to printers, fix WoW64, add status for NtCreateFileHook",11,[],https://github.com/tklengyel/drakvuf/pull/931,https://github.com/skvl,7,https://github.com/tklengyel/drakvuf/pull/931#issuecomment-672933618,This is a accumulative branch with various minor additions.,@tklengyel what's the error with jenkins?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,931,2020-08-07T17:01:46Z,2020-08-13T07:09:12Z,2020-10-26T05:51:45Z,CLOSED,False,269,54,8,https://github.com/skvl,"libusermode, syscalls, filetracer: add new types to printers, fix WoW64, add status for NtCreateFileHook",11,[],https://github.com/tklengyel/drakvuf/pull/931,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/931#issuecomment-673047599,This is a accumulative branch with various minor additions.,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,931,2020-08-07T17:01:46Z,2020-08-13T07:09:12Z,2020-10-26T05:51:45Z,CLOSED,False,269,54,8,https://github.com/skvl,"libusermode, syscalls, filetracer: add new types to printers, fix WoW64, add status for NtCreateFileHook",11,[],https://github.com/tklengyel/drakvuf/pull/931,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/931#issuecomment-673052054,This is a accumulative branch with various minor additions.,@skvl There are a lot of issues with this PR according to Valgrind: https://ci.drakvuf.com/job/DRAKVUF-windows7-sp1-x64/159/valgrindResult/,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,931,2020-08-07T17:01:46Z,2020-08-13T07:09:12Z,2020-10-26T05:51:45Z,CLOSED,False,269,54,8,https://github.com/skvl,"libusermode, syscalls, filetracer: add new types to printers, fix WoW64, add status for NtCreateFileHook",11,[],https://github.com/tklengyel/drakvuf/pull/931,https://github.com/skvl,10,https://github.com/tklengyel/drakvuf/pull/931#issuecomment-673299852,This is a accumulative branch with various minor additions.,@tklengyel I can't see the page. So I will split the PR to multiple simpler.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,932,2020-08-07T23:10:07Z,2020-08-08T00:57:21Z,2020-08-08T00:57:24Z,MERGED,True,249,170,7,https://github.com/tklengyel,Don't use SET_REGISTERS event response in injector,1,[],https://github.com/tklengyel/drakvuf/pull/932,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/932,Fixes #925,Fixes #925,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,932,2020-08-07T23:10:07Z,2020-08-08T00:57:21Z,2020-08-08T00:57:24Z,MERGED,True,249,170,7,https://github.com/tklengyel,Don't use SET_REGISTERS event response in injector,1,[],https://github.com/tklengyel/drakvuf/pull/932,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/932#issuecomment-670796173,Fixes #925,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,933,2020-08-09T15:26:12Z,2020-08-09T17:21:03Z,2020-11-06T18:54:44Z,MERGED,True,1,0,1,https://github.com/icedevml,injector: fix register restoring,1,[],https://github.com/tklengyel/drakvuf/pull/933,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/933,related #925,related #925,True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,933,2020-08-09T15:26:12Z,2020-08-09T17:21:03Z,2020-11-06T18:54:44Z,MERGED,True,1,0,1,https://github.com/icedevml,injector: fix register restoring,1,[],https://github.com/tklengyel/drakvuf/pull/933,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/933#issuecomment-671071129,related #925,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,933,2020-08-09T15:26:12Z,2020-08-09T17:21:03Z,2020-11-06T18:54:44Z,MERGED,True,1,0,1,https://github.com/icedevml,injector: fix register restoring,1,[],https://github.com/tklengyel/drakvuf/pull/933,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/933#issuecomment-671072820,related #925,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,933,2020-08-09T15:26:12Z,2020-08-09T17:21:03Z,2020-11-06T18:54:44Z,MERGED,True,1,0,1,https://github.com/icedevml,injector: fix register restoring,1,[],https://github.com/tklengyel/drakvuf/pull/933,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/933#issuecomment-671073049,related #925,"I see that I indeed missed copying the saved regs, however this seems to be causing an issue when the injection is done via drakvuf and not the injector. The VM bluescreens. I disabled that test now just to see if it works otherwise.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,933,2020-08-09T15:26:12Z,2020-08-09T17:21:03Z,2020-11-06T18:54:44Z,MERGED,True,1,0,1,https://github.com/icedevml,injector: fix register restoring,1,[],https://github.com/tklengyel/drakvuf/pull/933,https://github.com/icedevml,5,https://github.com/tklengyel/drakvuf/pull/933#issuecomment-671075218,related #925,"This PR only affects injection methods other than createproc (because it doesn't get through this code path, AFAIK). But I think it affects both drakvuf and injector programs.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,933,2020-08-09T15:26:12Z,2020-08-09T17:21:03Z,2020-11-06T18:54:44Z,MERGED,True,1,0,1,https://github.com/icedevml,injector: fix register restoring,1,[],https://github.com/tklengyel/drakvuf/pull/933,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/933#issuecomment-671075341,related #925,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,933,2020-08-09T15:26:12Z,2020-08-09T17:21:03Z,2020-11-06T18:54:44Z,MERGED,True,1,0,1,https://github.com/icedevml,injector: fix register restoring,1,[],https://github.com/tklengyel/drakvuf/pull/933,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/933#issuecomment-671075568,related #925,"The win7 sp1 x64 test currently does a test-run with the injector with both -m createproc and -m shellexec, followed by an injection with the main drakvuf using createproc. I've added a sleep 5 between the injector tests and running drakvuf, that seems to have stabilized things.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,933,2020-08-09T15:26:12Z,2020-08-09T17:21:03Z,2020-11-06T18:54:44Z,MERGED,True,1,0,1,https://github.com/icedevml,injector: fix register restoring,1,[],https://github.com/tklengyel/drakvuf/pull/933,https://github.com/icedevml,8,https://github.com/tklengyel/drakvuf/pull/933#issuecomment-671076881,related #925,:concerned: But it looks like it worked now.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,934,2020-08-09T17:33:44Z,2020-08-09T20:46:46Z,2020-08-09T20:46:50Z,MERGED,True,12,8,1,https://github.com/tklengyel,Remove last path that uses SET_REGISTERS in injector,2,[],https://github.com/tklengyel/drakvuf/pull/934,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/934,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,935,2020-08-09T20:58:02Z,2020-08-09T21:22:23Z,2020-11-06T18:54:45Z,MERGED,True,6,7,1,https://github.com/icedevml,injector: fix bug in writefile/readfile injection method,1,[],https://github.com/tklengyel/drakvuf/pull/935,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/935,"For -m writefile/readfile the injection loop makes one unnecessary pass with the original RIP, which was occasionally causing crashes.","For -m writefile/readfile the injection loop makes one unnecessary pass with the original RIP, which was occasionally causing crashes.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,935,2020-08-09T20:58:02Z,2020-08-09T21:22:23Z,2020-11-06T18:54:45Z,MERGED,True,6,7,1,https://github.com/icedevml,injector: fix bug in writefile/readfile injection method,1,[],https://github.com/tklengyel/drakvuf/pull/935,https://github.com/icedevml,2,https://github.com/tklengyel/drakvuf/pull/935#issuecomment-671100317,"For -m writefile/readfile the injection loop makes one unnecessary pass with the original RIP, which was occasionally causing crashes.",related #925,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,937,2020-08-10T14:42:40Z,2020-08-10T15:04:07Z,2020-08-10T15:04:11Z,MERGED,True,27,49,2,https://github.com/tklengyel,Pause VM before setting regs in injector,1,[],https://github.com/tklengyel/drakvuf/pull/937,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/937,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,937,2020-08-10T14:42:40Z,2020-08-10T15:04:07Z,2020-08-10T15:04:11Z,MERGED,True,27,49,2,https://github.com/tklengyel,Pause VM before setting regs in injector,1,[],https://github.com/tklengyel/drakvuf/pull/937,https://github.com/icedevml,2,https://github.com/tklengyel/drakvuf/pull/937#issuecomment-671404469,,related #925,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,937,2020-08-10T14:42:40Z,2020-08-10T15:04:07Z,2020-08-10T15:04:11Z,MERGED,True,27,49,2,https://github.com/tklengyel,Pause VM before setting regs in injector,1,[],https://github.com/tklengyel/drakvuf/pull/937,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/937#issuecomment-671404741,,"OK, I'll merge this for now but will submit another PR to LibVMI cause this really should be fixed there.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,938,2020-08-12T15:03:04Z,2020-08-13T00:58:25Z,2020-11-06T18:54:53Z,MERGED,True,69,5,2,https://github.com/icedevml,injector: fix bugs in writefile method,2,[],https://github.com/tklengyel/drakvuf/pull/938,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/938,"fix some bugs in writefile method in injector, gracefully handle the situation when there was an error opening/writing/closing file","fix some bugs in writefile method in injector, gracefully handle the situation when there was an error opening/writing/closing file",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,938,2020-08-12T15:03:04Z,2020-08-13T00:58:25Z,2020-11-06T18:54:53Z,MERGED,True,69,5,2,https://github.com/icedevml,injector: fix bugs in writefile method,2,[],https://github.com/tklengyel/drakvuf/pull/938,https://github.com/icedevml,2,https://github.com/tklengyel/drakvuf/pull/938#issuecomment-672932527,"fix some bugs in writefile method in injector, gracefully handle the situation when there was an error opening/writing/closing file","@tklengyel I've spotted that if -I <thread_id> is not provided by the user, injector would use arbitrary thread within the process and if the injection chain is long, different parts of the chain might be executed within different threads because target_tid = 0 so the TID check is skipped by the int3_cb in injector.
The thread ID gets pinned in injector_set_hijacked, but this function is called very lately in some methods.
Is it a bug or feature? I think if the thread ID is not provided, we should take a random TID and immediately pin to it to make sure that whole injection chain is executed from this thread. I saw there is some unstability introduced by not doing this.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,938,2020-08-12T15:03:04Z,2020-08-13T00:58:25Z,2020-11-06T18:54:53Z,MERGED,True,69,5,2,https://github.com/icedevml,injector: fix bugs in writefile method,2,[],https://github.com/tklengyel/drakvuf/pull/938,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/938#issuecomment-672959740,"fix some bugs in writefile method in injector, gracefully handle the situation when there was an error opening/writing/closing file","I took c0bcb59 and added the following extra printout:
diff --git a/src/libinjector/win_injector.c b/src/libinjector/win_injector.c
index f37d634..4262065 100644
--- a/src/libinjector/win_injector.c
+++ b/src/libinjector/win_injector.c
@@ -936,7 +936,7 @@ static event_response_t injector_int3_cb(drakvuf_t drakvuf, drakvuf_trap_info_t*
 {
     injector_t injector = info->trap->data;

-    PRINT_DEBUG(""INT3 Callback @ 0x%lx. CR3 0x%lx. vcpu %i\n"", info->regs->rip, info->regs->cr3, info->vcpu);
+    PRINT_DEBUG(""INT3 Callback @ 0x%lx. CR3 0x%lx. vcpu %i, TID %u\n"", info->regs->rip, info->regs->cr3, info->vcpu, info->proc_data.tid);

     if ( info->proc_data.pid != injector->target_pid )
     {
Launched injector this way:
injector -v -r /var/lib/drakrun/profiles/kernel.json -d vm-1 -i 1896 -e ""%USERPROFILE%\\Desktop\\lol$RANDOM.exe"" -B /root/sample.exe -m writefile

And look at the logs:
Starting injection loop
1597247174.673456 Started DRAKVUF loop
1597247174.674657 CR3 cb on vCPU 0: 0x5ba45000
CR3 changed to 0x5ba45000. PID: 356 PPID: 340 TID: 420
1597247174.674981 CR3 cb on vCPU 0: 0x187000
CR3 changed to 0x187000. PID: 0 PPID: 0 TID: 0
1597247174.690269 CR3 cb on vCPU 0: 0x5ba45000
CR3 changed to 0x5ba45000. PID: 356 PPID: 340 TID: 420
1597247174.690462 CR3 cb on vCPU 0: 0x187000
CR3 changed to 0x187000. PID: 0 PPID: 0 TID: 0
1597247174.690517 CR3 cb on vCPU 1: 0xbc8a000
CR3 changed to 0xbc8a000. PID: 1896 PPID: 432 TID: 1892
1597247174.690707 Breakpoint VA 0x776e933a -> PA 0x62d6433a
1597247174.690726 Physmap populated? 0
1597247174.690778 Copied trapped page to new location
1597247174.690785 Activating remapped gfns in the altp2m views!
1597247174.690821               Trap added @ PA 0x62d6433a RPA 0xff00133a Page 404836 for entry.
Got return address 0x776e933a from trapframe and it's now trapped!
INT3 Callback @ 0x776e933a. CR3 0xbc8a000. vcpu 1, TID 1892
1597247174.691185 Switching altp2m and to singlestep on vcpu 1
INT3 Callback @ 0x776e933a. CR3 0xbc8a000. vcpu 1, TID 1892
Writing to allocated virtual memory to allocate physical memory..
Payload is at: 0x97d0000
1597247174.691563 Switching altp2m and to singlestep on vcpu 1
INT3 Callback @ 0x776e933a. CR3 0xbc8a000. vcpu 1, TID 1892
Expanding shell...
1597247174.692927 Switching altp2m and to singlestep on vcpu 1
INT3 Callback @ 0x776e933a. CR3 0xbc8a000. vcpu 1, TID 1892
Env expand status: 25
Expanded: C:\Users\janusz\Desktop\lol26489.exe
Opening file...
1597247174.693289 Switching altp2m and to singlestep on vcpu 1
1597247174.695186 CR3 cb on vCPU 1: 0x187000
1597247174.705894 CR3 cb on vCPU 0: 0x5ba45000
1597247174.706092 CR3 cb on vCPU 0: 0x187000
1597247174.706131 CR3 cb on vCPU 1: 0xbc8a000
1597247174.707021 CR3 cb on vCPU 1: 0x187000
1597247174.707064 CR3 cb on vCPU 0: 0xbc8a000
INT3 Callback @ 0x776e933a. CR3 0xbc8a000. vcpu 0, TID 2952
File create result 1
Writing file...
Amount: ffff8
Writing...
1597247174.720119 Switching altp2m and to singlestep on vcpu 0
1597247174.720915 CR3 cb on vCPU 1: 0xbc8a000
INT3 Callback @ 0x776e933a. CR3 0xbc8a000. vcpu 0, TID 2952
Writing file...
Amount: 1fd98
Writing...
1597247174.724111 Switching altp2m and to singlestep on vcpu 0
INT3 Callback @ 0x776e933a. CR3 0xbc8a000. vcpu 0, TID 2952
Writing file...
Amount: 0
Finishing
1597247174.724926 Switching altp2m and to singlestep on vcpu 0
INT3 Callback @ 0x776e933a. CR3 0xbc8a000. vcpu 0, TID 2952
Close handle RAX: 0x0
Failed to close guest file handle
1597247174.725174 Switching altp2m and to singlestep on vcpu 0
1597247174.725871 CR3 cb on vCPU 0: 0x16756000

$ cat logs | grep TID
CR3 changed to 0x5ba45000. PID: 356 PPID: 340 TID: 420
CR3 changed to 0x187000. PID: 0 PPID: 0 TID: 0
CR3 changed to 0x5ba45000. PID: 356 PPID: 340 TID: 420
CR3 changed to 0x187000. PID: 0 PPID: 0 TID: 0
CR3 changed to 0xbc8a000. PID: 1896 PPID: 432 TID: 1892
INT3 Callback @ 0x776e933a. CR3 0xbc8a000. vcpu 1, TID 1892
INT3 Callback @ 0x776e933a. CR3 0xbc8a000. vcpu 1, TID 1892
INT3 Callback @ 0x776e933a. CR3 0xbc8a000. vcpu 1, TID 1892
INT3 Callback @ 0x776e933a. CR3 0xbc8a000. vcpu 1, TID 1892 <--- RACE?
INT3 Callback @ 0x776e933a. CR3 0xbc8a000. vcpu 0, TID 2952 <--- RACE?
INT3 Callback @ 0x776e933a. CR3 0xbc8a000. vcpu 0, TID 2952
INT3 Callback @ 0x776e933a. CR3 0xbc8a000. vcpu 0, TID 2952
INT3 Callback @ 0x776e933a. CR3 0xbc8a000. vcpu 0, TID 2952

So half of the injection chain was executed from TID 1892 and half from TID 2952. Moreover, I think these two callbacks marked with RACE? were executed in the same time and the whole injection broke because the next step was executed before the previous one was actually completed.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,938,2020-08-12T15:03:04Z,2020-08-13T00:58:25Z,2020-11-06T18:54:53Z,MERGED,True,69,5,2,https://github.com/icedevml,injector: fix bugs in writefile method,2,[],https://github.com/tklengyel/drakvuf/pull/938,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/938#issuecomment-672970564,"fix some bugs in writefile method in injector, gracefully handle the situation when there was an error opening/writing/closing file","I will fix this by checking if injector->target_tid == 0 in int3_cb and if so, it will be set to the current TID so the whole injection chain will execute within single thread.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,938,2020-08-12T15:03:04Z,2020-08-13T00:58:25Z,2020-11-06T18:54:53Z,MERGED,True,69,5,2,https://github.com/icedevml,injector: fix bugs in writefile method,2,[],https://github.com/tklengyel/drakvuf/pull/938,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/938#issuecomment-673046908,"fix some bugs in writefile method in injector, gracefully handle the situation when there was an error opening/writing/closing file","we should take a random TID and immediately pin to it to make sure that whole injection chain is executed from this thread

That's how it should be, if it's not, that's a bug",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,939,2020-08-12T19:44:37Z,2020-08-12T23:00:04Z,2020-11-06T18:54:55Z,MERGED,True,8,1,1,https://github.com/icedevml,injector: fix race condition when TID is not specified,2,[],https://github.com/tklengyel/drakvuf/pull/939,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/939,related discussion #938,related discussion #938,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,941,2020-08-12T20:39:40Z,2020-08-13T21:46:01Z,2020-11-06T18:54:52Z,CLOSED,False,6,0,1,https://github.com/icedevml,injector: don't accept kernel address as return address in trap frame,1,[],https://github.com/tklengyel/drakvuf/pull/941,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/941,resolve #940,resolve #940,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,941,2020-08-12T20:39:40Z,2020-08-13T21:46:01Z,2020-11-06T18:54:52Z,CLOSED,False,6,0,1,https://github.com/icedevml,injector: don't accept kernel address as return address in trap frame,1,[],https://github.com/tklengyel/drakvuf/pull/941,https://github.com/icedevml,2,https://github.com/tklengyel/drakvuf/pull/941#issuecomment-673726208,resolve #940,"unable to reproduce, looks like it was side effect from some other bug that was already fixed",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,942,2020-08-13T07:00:13Z,2020-08-13T11:51:06Z,2020-10-26T05:52:51Z,MERGED,True,35,13,2,https://github.com/skvl,Syscalls new functions,3,[],https://github.com/tklengyel/drakvuf/pull/942,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/942,Re-work #931,Re-work #931,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,942,2020-08-13T07:00:13Z,2020-08-13T11:51:06Z,2020-10-26T05:52:51Z,MERGED,True,35,13,2,https://github.com/skvl,Syscalls new functions,3,[],https://github.com/tklengyel/drakvuf/pull/942,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/942#issuecomment-673300056,Re-work #931,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,942,2020-08-13T07:00:13Z,2020-08-13T11:51:06Z,2020-10-26T05:52:51Z,MERGED,True,35,13,2,https://github.com/skvl,Syscalls new functions,3,[],https://github.com/tklengyel/drakvuf/pull/942,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/942#issuecomment-673418224,Re-work #931,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,943,2020-08-13T07:02:49Z,2020-08-13T11:19:47Z,2020-10-26T05:50:32Z,MERGED,True,10,14,1,https://github.com/skvl,filetracer: print status of NtCreateFile,1,[],https://github.com/tklengyel/drakvuf/pull/943,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/943,Re-work #931,Re-work #931,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,943,2020-08-13T07:02:49Z,2020-08-13T11:19:47Z,2020-10-26T05:50:32Z,MERGED,True,10,14,1,https://github.com/skvl,filetracer: print status of NtCreateFile,1,[],https://github.com/tklengyel/drakvuf/pull/943,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/943#issuecomment-673301067,Re-work #931,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,943,2020-08-13T07:02:49Z,2020-08-13T11:19:47Z,2020-10-26T05:50:32Z,MERGED,True,10,14,1,https://github.com/skvl,filetracer: print status of NtCreateFile,1,[],https://github.com/tklengyel/drakvuf/pull/943,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/943#issuecomment-673384350,Re-work #931,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,944,2020-08-13T07:04:20Z,2020-08-14T13:20:10Z,2020-10-26T05:52:56Z,MERGED,True,79,7,3,https://github.com/skvl,syscalls: print _OBJECT_ATTRIBUTES,3,[],https://github.com/tklengyel/drakvuf/pull/944,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/944,Re-work #931,Re-work #931,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,944,2020-08-13T07:04:20Z,2020-08-14T13:20:10Z,2020-10-26T05:52:56Z,MERGED,True,79,7,3,https://github.com/skvl,syscalls: print _OBJECT_ATTRIBUTES,3,[],https://github.com/tklengyel/drakvuf/pull/944,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/944#issuecomment-673301658,Re-work #931,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,944,2020-08-13T07:04:20Z,2020-08-14T13:20:10Z,2020-10-26T05:52:56Z,MERGED,True,79,7,3,https://github.com/skvl,syscalls: print _OBJECT_ATTRIBUTES,3,[],https://github.com/tklengyel/drakvuf/pull/944,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/944#issuecomment-673419404,Re-work #931,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,944,2020-08-13T07:04:20Z,2020-08-14T13:20:10Z,2020-10-26T05:52:56Z,MERGED,True,79,7,3,https://github.com/skvl,syscalls: print _OBJECT_ATTRIBUTES,3,[],https://github.com/tklengyel/drakvuf/pull/944,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/944#issuecomment-673475086,Re-work #931,@skvl This is the PR that causes the valgrind issues. I recommend you test it locally with valgrind (https://github.com/tklengyel/valgrind/tree/xen_4.14) and with a libxc that has some extra initialization that makes valgrind more happy (https://github.com/tklengyel/xen/tree/xc_stack_zero),True,{'THUMBS_UP': ['https://github.com/skvl']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,944,2020-08-13T07:04:20Z,2020-08-14T13:20:10Z,2020-10-26T05:52:56Z,MERGED,True,79,7,3,https://github.com/skvl,syscalls: print _OBJECT_ATTRIBUTES,3,[],https://github.com/tklengyel/drakvuf/pull/944,https://github.com/skvl,5,https://github.com/tklengyel/drakvuf/pull/944#issuecomment-673971840,Re-work #931,"@tklengyel, I have found an error. Thank you!

Note I have tried to enable ASan with --enable-sanitize and faced the error with libtool (though I think so). See SO",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,944,2020-08-13T07:04:20Z,2020-08-14T13:20:10Z,2020-10-26T05:52:56Z,MERGED,True,79,7,3,https://github.com/skvl,syscalls: print _OBJECT_ATTRIBUTES,3,[],https://github.com/tklengyel/drakvuf/pull/944,https://github.com/skvl,6,https://github.com/tklengyel/drakvuf/pull/944#issuecomment-673979644,Re-work #931,"@tklengyel, what's the error?
Jenkins doesn't show source code lines causing the errors.
In my tests there is no errors with the branch:
==27736== Memcheck, a memory error detector
==27736== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==27736== Using Valgrind-3.16.0.GIT and LibVEX; rerun with -h for copyright info
==27736== Command: /home/skovalev/src/drakvuf-gh/src//drakvuf -d trap -r /home/skovalev/win10-1803-x64@0/volatility3/kernel.json -x delaymon -t 5 -o kv
==27736== 
1597396510.190471 DRAKVUF v0.8-git20200814101131+84bcc94-1 Copyright (C) 2014-2020 Tamas K Lengyel
==27736== Warning: noted but unhandled ioctl 0x50ff with no size/direction hints.
==27736==    This could cause spurious value errors to appear.
==27736==    See README_MISSING_SYSCALL_OR_IOCTL for guidance on writing a proper wrapper.
==27736== Warning: noted but unhandled ioctl 0x105005 with no size/direction hints.
==27736==    This could cause spurious value errors to appear.
==27736==    See README_MISSING_SYSCALL_OR_IOCTL for guidance on writing a proper wrapper.
==27736== Syscall param XEN_DOMCTL_vm_event_op u.vm_event_op_00000012.u.enable points to uninitialised byte(s)
==27736==    at 0x6CF76D7: ioctl (syscall-template.S:78)
==27736==    by 0x609F1A4: xencall1 (in /usr/lib/x86_64-linux-gnu/libxencall.so.1.2)
==27736==    by 0x5C8C490: xc_vm_event_control (in /usr/lib/x86_64-linux-gnu/libxenctrl.so.4.13.0)
==27736==    by 0x5C8C7BB: xc_vm_event_enable (in /usr/lib/x86_64-linux-gnu/libxenctrl.so.4.13.0)
==27736==    by 0x4E4CEE9: xen_init_events (xen_events.c:3108)
==27736==    by 0x4E455CA: xen_init_vmi (xen.c:650)
==27736==    by 0x4E58DB1: vmi_init (core.c:580)
==27736==    by 0x16779D: init_vmi (vmi.c:1441)
==27736==    by 0x161692: drakvuf_init (drakvuf.c:199)
==27736==    by 0x15F1DD: drakvuf_c::drakvuf_c(char const*, char const*, char const*, output_format_t, bool, bool, bool, unsigned long) (drakvuf.cpp:174)
==27736==    by 0x15E6E7: main (main.cpp:552)
==27736==  Address 0x402b028 is in a rw- mapped file /dev/xen/hypercall segment
==27736== 
==27736== Syscall param XEN_DOMCTL_vm_event_op u.vm_event_op_00000012.u.enable points to uninitialised byte(s)
==27736==    at 0x6CF76D7: ioctl (syscall-template.S:78)
==27736==    by 0x609F1A4: xencall1 (in /usr/lib/x86_64-linux-gnu/libxencall.so.1.2)
==27736==    by 0x5C8C9C9: xc_vm_event_get_version (in /usr/lib/x86_64-linux-gnu/libxenctrl.so.4.13.0)
==27736==    by 0x4E4D15F: xen_init_events (xen_events.c:3212)
==27736==    by 0x4E455CA: xen_init_vmi (xen.c:650)
==27736==    by 0x4E58DB1: vmi_init (core.c:580)
==27736==    by 0x16779D: init_vmi (vmi.c:1441)
==27736==    by 0x161692: drakvuf_init (drakvuf.c:199)
==27736==    by 0x15F1DD: drakvuf_c::drakvuf_c(char const*, char const*, char const*, output_format_t, bool, bool, bool, unsigned long) (drakvuf.cpp:174)
==27736==    by 0x15E6E7: main (main.cpp:552)
==27736==  Address 0x402b028 is in a rw- mapped file /dev/xen/hypercall segment
==27736== 
==27736== Conditional jump or move depends on uninitialised value(s)
==27736==    at 0x4E4756A: xen_start_single_step (xen_events.c:321)
==27736==    by 0x4E599CC: driver_start_single_step (driver_wrapper.h:500)
==27736==    by 0x4E599CC: register_singlestep_event (events.c:379)
==27736==    by 0x167A7E: init_vmi (vmi.c:1517)
==27736==    by 0x161692: drakvuf_init (drakvuf.c:199)
==27736==    by 0x15F1DD: drakvuf_c::drakvuf_c(char const*, char const*, char const*, output_format_t, bool, bool, bool, unsigned long) (drakvuf.cpp:174)
==27736==    by 0x15E6E7: main (main.cpp:552)
==27736== 
==27736== Conditional jump or move depends on uninitialised value(s)
==27736==    at 0x4E4C92F: xen_set_int3_access (xen_events.c:271)
==27736==    by 0x4E59686: driver_set_intr_access (driver_wrapper.h:468)
==27736==    by 0x4E59686: register_interrupt_event (events.c:185)
==27736==    by 0x16815E: init_vmi (vmi.c:1578)
==27736==    by 0x161692: drakvuf_init (drakvuf.c:199)
==27736==    by 0x15F1DD: drakvuf_c::drakvuf_c(char const*, char const*, char const*, output_format_t, bool, bool, bool, unsigned long) (drakvuf.cpp:174)
==27736==    by 0x15E6E7: main (main.cpp:552)
==27736== 
==27736== Syscall param XEN_DOMCTL_vm_event_op u.vm_event_op_00000012.u.enable points to uninitialised byte(s)
==27736==    at 0x6CF76D7: ioctl (syscall-template.S:78)
==27736==    by 0x609F1A4: xencall1 (in /usr/lib/x86_64-linux-gnu/libxencall.so.1.2)
==27736==    by 0x5C8C490: xc_vm_event_control (in /usr/lib/x86_64-linux-gnu/libxenctrl.so.4.13.0)
==27736==    by 0x4E4D612: xen_events_destroy (xen_events.c:3328)
==27736==    by 0x4E45799: xen_destroy (xen.c:683)
==27736==    by 0x4E58B02: driver_destroy (driver_wrapper.h:45)
==27736==    by 0x4E58B02: vmi_destroy (core.c:848)
==27736==    by 0x16887D: close_vmi (vmi.c:1741)
==27736==    by 0x1605D5: drakvuf_close (drakvuf.c:123)
==27736==    by 0x15F388: drakvuf_c::~drakvuf_c() (drakvuf.cpp:191)
==27736==    by 0x15ED9D: main (main.cpp:601)
==27736==  Address 0x402b028 is in a rw- mapped file /dev/xen/hypercall segment
==27736== 
==27736== 
==27736== HEAP SUMMARY:
==27736==     in use at exit: 48,634 bytes in 506 blocks
==27736==   total heap usage: 847,930 allocs, 847,424 frees, 518,743,195 bytes allocated
==27736== 
==27736== LEAK SUMMARY:
==27736==    definitely lost: 5,976 bytes in 249 blocks
==27736==    indirectly lost: 24,018 bytes in 249 blocks
==27736==      possibly lost: 0 bytes in 0 blocks
==27736==    still reachable: 18,640 bytes in 8 blocks
==27736==         suppressed: 0 bytes in 0 blocks
==27736== Rerun with --leak-check=full to see details of leaked memory
==27736== 
==27736== Use --track-origins=yes to see where uninitialised values come from
==27736== For lists of detected and suppressed errors, rerun with: -s
==27736== ERROR SUMMARY: 6 errors from 5 contexts (suppressed: 0 from 0)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,944,2020-08-13T07:04:20Z,2020-08-14T13:20:10Z,2020-10-26T05:52:56Z,MERGED,True,79,7,3,https://github.com/skvl,syscalls: print _OBJECT_ATTRIBUTES,3,[],https://github.com/tklengyel/drakvuf/pull/944,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/944#issuecomment-674021770,Re-work #931,"@skvl ==27736==    definitely lost: 5,976 bytes in 249 blocks",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,944,2020-08-13T07:04:20Z,2020-08-14T13:20:10Z,2020-10-26T05:52:56Z,MERGED,True,79,7,3,https://github.com/skvl,syscalls: print _OBJECT_ATTRIBUTES,3,[],https://github.com/tklengyel/drakvuf/pull/944,https://github.com/skvl,8,https://github.com/tklengyel/drakvuf/pull/944#issuecomment-674030431,Re-work #931,"@skvl ==27736== definitely lost: 5,976 bytes in 249 blocks

Yes. I've seen the message. But there are no errors with syscalls. I think this from some other part.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,944,2020-08-13T07:04:20Z,2020-08-14T13:20:10Z,2020-10-26T05:52:56Z,MERGED,True,79,7,3,https://github.com/skvl,syscalls: print _OBJECT_ATTRIBUTES,3,[],https://github.com/tklengyel/drakvuf/pull/944,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/944#issuecomment-674031568,Re-work #931,"But there are no errors with syscalls

I can't tell that based on the logs. Either way, if the PR triggers a path that reproducibly leaks now, even if its some other place, it needs to be fixed.",True,{'THUMBS_UP': ['https://github.com/skvl']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,944,2020-08-13T07:04:20Z,2020-08-14T13:20:10Z,2020-10-26T05:52:56Z,MERGED,True,79,7,3,https://github.com/skvl,syscalls: print _OBJECT_ATTRIBUTES,3,[],https://github.com/tklengyel/drakvuf/pull/944,https://github.com/skvl,10,https://github.com/tklengyel/drakvuf/pull/944#issuecomment-674036653,Re-work #931,I have added --leak-check=full argument to valgrind and managed to find a bug. Thank you.,True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,945,2020-08-13T07:07:26Z,2020-08-14T11:52:54Z,2020-10-26T05:51:19Z,MERGED,True,37,6,2,https://github.com/skvl,libusermode: fix WoW64 unicode printing,1,[],https://github.com/tklengyel/drakvuf/pull/945,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/945,Re-work #931,Re-work #931,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,945,2020-08-13T07:07:26Z,2020-08-14T11:52:54Z,2020-10-26T05:51:19Z,MERGED,True,37,6,2,https://github.com/skvl,libusermode: fix WoW64 unicode printing,1,[],https://github.com/tklengyel/drakvuf/pull/945,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/945#issuecomment-673302958,Re-work #931,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,945,2020-08-13T07:07:26Z,2020-08-14T11:52:54Z,2020-10-26T05:51:19Z,MERGED,True,37,6,2,https://github.com/skvl,libusermode: fix WoW64 unicode printing,1,[],https://github.com/tklengyel/drakvuf/pull/945,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/945#issuecomment-673384854,Re-work #931,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,945,2020-08-13T07:07:26Z,2020-08-14T11:52:54Z,2020-10-26T05:51:19Z,MERGED,True,37,6,2,https://github.com/skvl,libusermode: fix WoW64 unicode printing,1,[],https://github.com/tklengyel/drakvuf/pull/945,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/945#issuecomment-673472667,Re-work #931,@skvl This will need a rebase before I can merge,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,945,2020-08-13T07:07:26Z,2020-08-14T11:52:54Z,2020-10-26T05:51:19Z,MERGED,True,37,6,2,https://github.com/skvl,libusermode: fix WoW64 unicode printing,1,[],https://github.com/tklengyel/drakvuf/pull/945,https://github.com/skvl,5,https://github.com/tklengyel/drakvuf/pull/945#issuecomment-673732600,Re-work #931,"@tklengyel, done.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,945,2020-08-13T07:07:26Z,2020-08-14T11:52:54Z,2020-10-26T05:51:19Z,MERGED,True,37,6,2,https://github.com/skvl,libusermode: fix WoW64 unicode printing,1,[],https://github.com/tklengyel/drakvuf/pull/945,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/945#issuecomment-673748887,Re-work #931,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,945,2020-08-13T07:07:26Z,2020-08-14T11:52:54Z,2020-10-26T05:51:19Z,MERGED,True,37,6,2,https://github.com/skvl,libusermode: fix WoW64 unicode printing,1,[],https://github.com/tklengyel/drakvuf/pull/945,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/945#issuecomment-673758774,Re-work #931,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,945,2020-08-13T07:07:26Z,2020-08-14T11:52:54Z,2020-10-26T05:51:19Z,MERGED,True,37,6,2,https://github.com/skvl,libusermode: fix WoW64 unicode printing,1,[],https://github.com/tklengyel/drakvuf/pull/945,https://github.com/skvl,8,https://github.com/tklengyel/drakvuf/pull/945#issuecomment-673924873,Re-work #931,@tklengyel what's the error?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,945,2020-08-13T07:07:26Z,2020-08-14T11:52:54Z,2020-10-26T05:51:19Z,MERGED,True,37,6,2,https://github.com/skvl,libusermode: fix WoW64 unicode printing,1,[],https://github.com/tklengyel/drakvuf/pull/945,https://github.com/icedevml,9,https://github.com/tklengyel/drakvuf/pull/945#issuecomment-674020933,Re-work #931,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,945,2020-08-13T07:07:26Z,2020-08-14T11:52:54Z,2020-10-26T05:51:19Z,MERGED,True,37,6,2,https://github.com/skvl,libusermode: fix WoW64 unicode printing,1,[],https://github.com/tklengyel/drakvuf/pull/945,https://github.com/icedevml,10,https://github.com/tklengyel/drakvuf/pull/945#issuecomment-674026343,Re-work #931,"🤔
Running DRAKVUF #2 for 60 seconds. Opts:  -S /shared/jenkins/workspace/DRAKVUF-windows10-2004/ci/syscalls.txt -a syscalls
DRAKVUF is running with PID 12111, background pid is 12098
CPU utilization average: 7
Exit status: 0
stderr line count: 1
Syscalls: 13039
/shared/drakvuf-ci/run.sh: line 369: scalls.txt: command not found
Overhead is a lot",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,945,2020-08-13T07:07:26Z,2020-08-14T11:52:54Z,2020-10-26T05:51:19Z,MERGED,True,37,6,2,https://github.com/skvl,libusermode: fix WoW64 unicode printing,1,[],https://github.com/tklengyel/drakvuf/pull/945,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/945#issuecomment-674026719,Re-work #931,"I'm tweaking the CI, hold on.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,945,2020-08-13T07:07:26Z,2020-08-14T11:52:54Z,2020-10-26T05:51:19Z,MERGED,True,37,6,2,https://github.com/skvl,libusermode: fix WoW64 unicode printing,1,[],https://github.com/tklengyel/drakvuf/pull/945,https://github.com/tklengyel,12,https://github.com/tklengyel/drakvuf/pull/945#issuecomment-674032181,Re-work #931,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,946,2020-08-13T07:08:50Z,2020-08-13T12:09:48Z,2020-10-26T05:51:36Z,MERGED,True,28,1,3,https://github.com/skvl,libusermode: add 'pulong' type,2,[],https://github.com/tklengyel/drakvuf/pull/946,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/946,Re-work #931,Re-work #931,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,946,2020-08-13T07:08:50Z,2020-08-13T12:09:48Z,2020-10-26T05:51:36Z,MERGED,True,28,1,3,https://github.com/skvl,libusermode: add 'pulong' type,2,[],https://github.com/tklengyel/drakvuf/pull/946,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/946#issuecomment-673303577,Re-work #931,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,946,2020-08-13T07:08:50Z,2020-08-13T12:09:48Z,2020-10-26T05:51:36Z,MERGED,True,28,1,3,https://github.com/skvl,libusermode: add 'pulong' type,2,[],https://github.com/tklengyel/drakvuf/pull/946,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/946#issuecomment-673384566,Re-work #931,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,947,2020-08-13T07:14:38Z,2020-08-13T22:51:57Z,2020-10-26T05:51:32Z,MERGED,True,30,0,3,https://github.com/skvl,libusermode: add 'lpvoid*' type,1,[],https://github.com/tklengyel/drakvuf/pull/947,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/947,Re-work #931,Re-work #931,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,947,2020-08-13T07:14:38Z,2020-08-13T22:51:57Z,2020-10-26T05:51:32Z,MERGED,True,30,0,3,https://github.com/skvl,libusermode: add 'lpvoid*' type,1,[],https://github.com/tklengyel/drakvuf/pull/947,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/947#issuecomment-673305925,Re-work #931,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,947,2020-08-13T07:14:38Z,2020-08-13T22:51:57Z,2020-10-26T05:51:32Z,MERGED,True,30,0,3,https://github.com/skvl,libusermode: add 'lpvoid*' type,1,[],https://github.com/tklengyel/drakvuf/pull/947,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/947#issuecomment-673400773,Re-work #931,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,947,2020-08-13T07:14:38Z,2020-08-13T22:51:57Z,2020-10-26T05:51:32Z,MERGED,True,30,0,3,https://github.com/skvl,libusermode: add 'lpvoid*' type,1,[],https://github.com/tklengyel/drakvuf/pull/947,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/947#issuecomment-673472503,Re-work #931,@skvl This will need a rebase before I can merge,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,947,2020-08-13T07:14:38Z,2020-08-13T22:51:57Z,2020-10-26T05:51:32Z,MERGED,True,30,0,3,https://github.com/skvl,libusermode: add 'lpvoid*' type,1,[],https://github.com/tklengyel/drakvuf/pull/947,https://github.com/icedevml,5,https://github.com/tklengyel/drakvuf/pull/947#issuecomment-673500125,Re-work #931,"@skvl do you have dll-hooks-list file which actually uses the new features? would be great if you could share it, we do have some examples in the repo (src/plugins/apimon/example) so it could be putted there I suppose",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,947,2020-08-13T07:14:38Z,2020-08-13T22:51:57Z,2020-10-26T05:51:32Z,MERGED,True,30,0,3,https://github.com/skvl,libusermode: add 'lpvoid*' type,1,[],https://github.com/tklengyel/drakvuf/pull/947,https://github.com/skvl,6,https://github.com/tklengyel/drakvuf/pull/947#issuecomment-673734186,Re-work #931,"@tklengyel, done.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,947,2020-08-13T07:14:38Z,2020-08-13T22:51:57Z,2020-10-26T05:51:32Z,MERGED,True,30,0,3,https://github.com/skvl,libusermode: add 'lpvoid*' type,1,[],https://github.com/tklengyel/drakvuf/pull/947,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/947#issuecomment-673737934,Re-work #931,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,948,2020-08-13T07:16:40Z,2020-08-13T13:16:45Z,2020-10-26T05:51:28Z,MERGED,True,41,2,3,https://github.com/skvl,libusermode: add CLSID and IID types to printers,1,[],https://github.com/tklengyel/drakvuf/pull/948,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/948,Re-work #931,Re-work #931,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,948,2020-08-13T07:16:40Z,2020-08-13T13:16:45Z,2020-10-26T05:51:28Z,MERGED,True,41,2,3,https://github.com/skvl,libusermode: add CLSID and IID types to printers,1,[],https://github.com/tklengyel/drakvuf/pull/948,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/948#issuecomment-673306781,Re-work #931,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,948,2020-08-13T07:16:40Z,2020-08-13T13:16:45Z,2020-10-26T05:51:28Z,MERGED,True,41,2,3,https://github.com/skvl,libusermode: add CLSID and IID types to printers,1,[],https://github.com/tklengyel/drakvuf/pull/948,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/948#issuecomment-673383533,Re-work #931,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,948,2020-08-13T07:16:40Z,2020-08-13T13:16:45Z,2020-10-26T05:51:28Z,MERGED,True,41,2,3,https://github.com/skvl,libusermode: add CLSID and IID types to printers,1,[],https://github.com/tklengyel/drakvuf/pull/948,https://github.com/skvl,4,https://github.com/tklengyel/drakvuf/pull/948#issuecomment-673457639,Re-work #931,"@icedevml, @tklengyel I have also fixed here #946 (raised because of #949)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,949,2020-08-13T07:18:29Z,2020-08-13T11:20:05Z,2020-10-26T05:51:11Z,MERGED,True,15,15,2,https://github.com/skvl,libusermode: add const qualifier to printers,1,[],https://github.com/tklengyel/drakvuf/pull/949,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/949,Re-work #931,Re-work #931,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,949,2020-08-13T07:18:29Z,2020-08-13T11:20:05Z,2020-10-26T05:51:11Z,MERGED,True,15,15,2,https://github.com/skvl,libusermode: add const qualifier to printers,1,[],https://github.com/tklengyel/drakvuf/pull/949,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/949#issuecomment-673307587,Re-work #931,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,949,2020-08-13T07:18:29Z,2020-08-13T11:20:05Z,2020-10-26T05:51:11Z,MERGED,True,15,15,2,https://github.com/skvl,libusermode: add const qualifier to printers,1,[],https://github.com/tklengyel/drakvuf/pull/949,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/949#issuecomment-673383806,Re-work #931,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,950,2020-08-13T21:11:44Z,2020-08-13T21:30:50Z,2020-11-06T18:55:33Z,MERGED,True,33,3,1,https://github.com/icedevml,injector: fix readfile,1,[],https://github.com/tklengyel/drakvuf/pull/950,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/950,"fix bugs which were preventing readfile from working, properly handle when CreateFileW or ReadFile returns FALSE","fix bugs which were preventing readfile from working, properly handle when CreateFileW or ReadFile returns FALSE",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,951,2020-08-14T00:50:52Z,2020-08-14T10:28:15Z,2020-08-14T10:28:19Z,MERGED,True,41,19,10,https://github.com/tklengyel,Make fast singlestep optional,1,[],https://github.com/tklengyel/drakvuf/pull/951,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/951,"While using the new fast singlestep feature from Xen 4.14 a bug has been popping up. When a previous run of DRAKVUF was stopped while fast singlestep was set but before the MTF trap occured, the fast singlestep setting remains in effect either though MTF itself gets disabled. Next time when a new run of DRAKVUF is started and the first event that triggers is an EPT event, the corresponding post_mem_cb is skipped since the fast singlestep setting is still set in Xen. There is currently no way to remove the fast singlestep setting. This is only an issue when multiple runs of DRAKVUF are done, with a single run this is not an issue so we keep the option available to use it. However, while the issue is fixed upstream we don't set it as the default.","While using the new fast singlestep feature from Xen 4.14 a bug has been popping up. When a previous run of DRAKVUF was stopped while fast singlestep was set but before the MTF trap occured, the fast singlestep setting remains in effect either though MTF itself gets disabled. Next time when a new run of DRAKVUF is started and the first event that triggers is an EPT event, the corresponding post_mem_cb is skipped since the fast singlestep setting is still set in Xen. There is currently no way to remove the fast singlestep setting. This is only an issue when multiple runs of DRAKVUF are done, with a single run this is not an issue so we keep the option available to use it. However, while the issue is fixed upstream we don't set it as the default.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,951,2020-08-14T00:50:52Z,2020-08-14T10:28:15Z,2020-08-14T10:28:19Z,MERGED,True,41,19,10,https://github.com/tklengyel,Make fast singlestep optional,1,[],https://github.com/tklengyel/drakvuf/pull/951,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/951#issuecomment-673857650,"While using the new fast singlestep feature from Xen 4.14 a bug has been popping up. When a previous run of DRAKVUF was stopped while fast singlestep was set but before the MTF trap occured, the fast singlestep setting remains in effect either though MTF itself gets disabled. Next time when a new run of DRAKVUF is started and the first event that triggers is an EPT event, the corresponding post_mem_cb is skipped since the fast singlestep setting is still set in Xen. There is currently no way to remove the fast singlestep setting. This is only an issue when multiple runs of DRAKVUF are done, with a single run this is not an issue so we keep the option available to use it. However, while the issue is fixed upstream we don't set it as the default.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,952,2020-08-14T15:36:15Z,2020-08-24T13:23:52Z,2020-10-26T05:53:00Z,MERGED,True,132,339,9,https://github.com/skvl,syscalls: refactor printers,13,[],https://github.com/tklengyel/drakvuf/pull/952,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/952,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,952,2020-08-14T15:36:15Z,2020-08-24T13:23:52Z,2020-10-26T05:53:00Z,MERGED,True,132,339,9,https://github.com/skvl,syscalls: refactor printers,13,[],https://github.com/tklengyel/drakvuf/pull/952,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/952#issuecomment-674133273,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,952,2020-08-14T15:36:15Z,2020-08-24T13:23:52Z,2020-10-26T05:53:00Z,MERGED,True,132,339,9,https://github.com/skvl,syscalls: refactor printers,13,[],https://github.com/tklengyel/drakvuf/pull/952,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/952#issuecomment-674137103,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,952,2020-08-14T15:36:15Z,2020-08-24T13:23:52Z,2020-10-26T05:53:00Z,MERGED,True,132,339,9,https://github.com/skvl,syscalls: refactor printers,13,[],https://github.com/tklengyel/drakvuf/pull/952,https://github.com/skvl,4,https://github.com/tklengyel/drakvuf/pull/952#issuecomment-675423792,,Finaly I've get an issue:,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,952,2020-08-14T15:36:15Z,2020-08-24T13:23:52Z,2020-10-26T05:53:00Z,MERGED,True,132,339,9,https://github.com/skvl,syscalls: refactor printers,13,[],https://github.com/tklengyel/drakvuf/pull/952,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/952#issuecomment-675562537,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,952,2020-08-14T15:36:15Z,2020-08-24T13:23:52Z,2020-10-26T05:53:00Z,MERGED,True,132,339,9,https://github.com/skvl,syscalls: refactor printers,13,[],https://github.com/tklengyel/drakvuf/pull/952,https://github.com/skvl,6,https://github.com/tklengyel/drakvuf/pull/952#issuecomment-675579095,,@tklengyel what is the error with debian-stretch and Windows 7 SP1 x86?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,952,2020-08-14T15:36:15Z,2020-08-24T13:23:52Z,2020-10-26T05:53:00Z,MERGED,True,132,339,9,https://github.com/skvl,syscalls: refactor printers,13,[],https://github.com/tklengyel/drakvuf/pull/952,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/952#issuecomment-675610942,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,952,2020-08-14T15:36:15Z,2020-08-24T13:23:52Z,2020-10-26T05:53:00Z,MERGED,True,132,339,9,https://github.com/skvl,syscalls: refactor printers,13,[],https://github.com/tklengyel/drakvuf/pull/952,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/952#issuecomment-675646714,,"@skvl seems to be some kind of instability with this PR, the VMs crash",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,952,2020-08-14T15:36:15Z,2020-08-24T13:23:52Z,2020-10-26T05:53:00Z,MERGED,True,132,339,9,https://github.com/skvl,syscalls: refactor printers,13,[],https://github.com/tklengyel/drakvuf/pull/952,https://github.com/skvl,9,https://github.com/tklengyel/drakvuf/pull/952#issuecomment-675926907,,Is it possible that auto-test fails to detect some prints? It is possible that some prints have changed a little. What is checked during the test?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,952,2020-08-14T15:36:15Z,2020-08-24T13:23:52Z,2020-10-26T05:53:00Z,MERGED,True,132,339,9,https://github.com/skvl,syscalls: refactor printers,13,[],https://github.com/tklengyel/drakvuf/pull/952,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/952#issuecomment-676132382,,You can see the ci run script here: https://github.com/tklengyel/drakvuf-ci/blob/master/run.sh,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,952,2020-08-14T15:36:15Z,2020-08-24T13:23:52Z,2020-10-26T05:53:00Z,MERGED,True,132,339,9,https://github.com/skvl,syscalls: refactor printers,13,[],https://github.com/tklengyel/drakvuf/pull/952,https://github.com/skvl,11,https://github.com/tklengyel/drakvuf/pull/952#issuecomment-676440697,,"@skvl seems to be some kind of instability with this PR, the VMs crash

@tklengyel, what sorts of crash do you observe? Segfault? Target process crash (in VM)? I can't reproduce that.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,952,2020-08-14T15:36:15Z,2020-08-24T13:23:52Z,2020-10-26T05:53:00Z,MERGED,True,132,339,9,https://github.com/skvl,syscalls: refactor printers,13,[],https://github.com/tklengyel/drakvuf/pull/952,https://github.com/tklengyel,12,https://github.com/tklengyel/drakvuf/pull/952#issuecomment-676444552,,I only see what you see as well in the console log for the CI run.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,952,2020-08-14T15:36:15Z,2020-08-24T13:23:52Z,2020-10-26T05:53:00Z,MERGED,True,132,339,9,https://github.com/skvl,syscalls: refactor printers,13,[],https://github.com/tklengyel/drakvuf/pull/952,https://github.com/tklengyel,13,https://github.com/tklengyel/drakvuf/pull/952#issuecomment-676445063,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,952,2020-08-14T15:36:15Z,2020-08-24T13:23:52Z,2020-10-26T05:53:00Z,MERGED,True,132,339,9,https://github.com/skvl,syscalls: refactor printers,13,[],https://github.com/tklengyel/drakvuf/pull/952,https://github.com/skvl,14,https://github.com/tklengyel/drakvuf/pull/952#issuecomment-677512672,,"@tklengyel, that was a SIGSEGV due to out of bound access to std::vector in x86 branch. Great that CI helps to catch it!",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,952,2020-08-14T15:36:15Z,2020-08-24T13:23:52Z,2020-10-26T05:53:00Z,MERGED,True,132,339,9,https://github.com/skvl,syscalls: refactor printers,13,[],https://github.com/tklengyel/drakvuf/pull/952,https://github.com/skvl,15,https://github.com/tklengyel/drakvuf/pull/952#issuecomment-677555719,,"@tklengyel, could you please re-test branch?
The error looks strange to me:
Can't get domid of domain name 'windows10-2004-jenkins', maybe this domain does not exist.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,952,2020-08-14T15:36:15Z,2020-08-24T13:23:52Z,2020-10-26T05:53:00Z,MERGED,True,132,339,9,https://github.com/skvl,syscalls: refactor printers,13,[],https://github.com/tklengyel/drakvuf/pull/952,https://github.com/skvl,16,https://github.com/tklengyel/drakvuf/pull/952#issuecomment-677559172,,I have successfully test it several times with Windows 10 1803 x64.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,952,2020-08-14T15:36:15Z,2020-08-24T13:23:52Z,2020-10-26T05:53:00Z,MERGED,True,132,339,9,https://github.com/skvl,syscalls: refactor printers,13,[],https://github.com/tklengyel/drakvuf/pull/952,https://github.com/tklengyel,17,https://github.com/tklengyel/drakvuf/pull/952#issuecomment-677637696,,@drakvuf-jenkins Retest this please,True,{'THUMBS_UP': ['https://github.com/skvl']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,952,2020-08-14T15:36:15Z,2020-08-24T13:23:52Z,2020-10-26T05:53:00Z,MERGED,True,132,339,9,https://github.com/skvl,syscalls: refactor printers,13,[],https://github.com/tklengyel/drakvuf/pull/952,https://github.com/skvl,18,https://github.com/tklengyel/drakvuf/pull/952#issuecomment-677645830,,So there is some error with debian. I don't have any VM like this... But I will try to understand.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,952,2020-08-14T15:36:15Z,2020-08-24T13:23:52Z,2020-10-26T05:53:00Z,MERGED,True,132,339,9,https://github.com/skvl,syscalls: refactor printers,13,[],https://github.com/tklengyel/drakvuf/pull/952,https://github.com/skvl,19,https://github.com/tklengyel/drakvuf/pull/952#issuecomment-678272818,,"With Debian we get a SIGSEGV too:
1598014045.227562 Started DRAKVUF loop
Check arg name at 0x6d6574737953694b: 

For some reason sc->args[i].name has bad value.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,952,2020-08-14T15:36:15Z,2020-08-24T13:23:52Z,2020-10-26T05:53:00Z,MERGED,True,132,339,9,https://github.com/skvl,syscalls: refactor printers,13,[],https://github.com/tklengyel/drakvuf/pull/952,https://github.com/tklengyel,20,https://github.com/tklengyel/drakvuf/pull/952#issuecomment-678326360,,"Yea, I've ran into the attached_process being used to fill the info out on other paths, I guess I missed it here but your PR triggered it, so that's good! It's working now ;)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,952,2020-08-14T15:36:15Z,2020-08-24T13:23:52Z,2020-10-26T05:53:00Z,MERGED,True,132,339,9,https://github.com/skvl,syscalls: refactor printers,13,[],https://github.com/tklengyel/drakvuf/pull/952,https://github.com/skvl,21,https://github.com/tklengyel/drakvuf/pull/952#issuecomment-678358412,,I have introduced null pointer dereference. Fixed.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,952,2020-08-14T15:36:15Z,2020-08-24T13:23:52Z,2020-10-26T05:53:00Z,MERGED,True,132,339,9,https://github.com/skvl,syscalls: refactor printers,13,[],https://github.com/tklengyel/drakvuf/pull/952,https://github.com/skvl,22,https://github.com/tklengyel/drakvuf/pull/952#issuecomment-678387014,,"@tklengyel, https://ci.drakvuf.com not works...",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,952,2020-08-14T15:36:15Z,2020-08-24T13:23:52Z,2020-10-26T05:53:00Z,MERGED,True,132,339,9,https://github.com/skvl,syscalls: refactor printers,13,[],https://github.com/tklengyel/drakvuf/pull/952,https://github.com/tklengyel,23,https://github.com/tklengyel/drakvuf/pull/952#issuecomment-678400466,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,952,2020-08-14T15:36:15Z,2020-08-24T13:23:52Z,2020-10-26T05:53:00Z,MERGED,True,132,339,9,https://github.com/skvl,syscalls: refactor printers,13,[],https://github.com/tklengyel/drakvuf/pull/952,https://github.com/skvl,24,https://github.com/tklengyel/drakvuf/pull/952#issuecomment-678446456,,"@tklengyel, I think that @drakvuf-jenkins does't catch the changes after reboot.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,952,2020-08-14T15:36:15Z,2020-08-24T13:23:52Z,2020-10-26T05:53:00Z,MERGED,True,132,339,9,https://github.com/skvl,syscalls: refactor printers,13,[],https://github.com/tklengyel/drakvuf/pull/952,https://github.com/tklengyel,25,https://github.com/tklengyel/drakvuf/pull/952#issuecomment-679123772,,Thanks! Looks good.,True,{'THUMBS_UP': ['https://github.com/skvl']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,953,2020-08-14T16:16:18Z,2020-08-16T13:25:59Z,2020-10-26T05:50:50Z,MERGED,True,33,33,3,https://github.com/skvl,output/kvfmt: fix various format errors,3,[],https://github.com/tklengyel/drakvuf/pull/953,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/953,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,953,2020-08-14T16:16:18Z,2020-08-16T13:25:59Z,2020-10-26T05:50:50Z,MERGED,True,33,33,3,https://github.com/skvl,output/kvfmt: fix various format errors,3,[],https://github.com/tklengyel/drakvuf/pull/953,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/953#issuecomment-674150987,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,953,2020-08-14T16:16:18Z,2020-08-16T13:25:59Z,2020-10-26T05:50:50Z,MERGED,True,33,33,3,https://github.com/skvl,output/kvfmt: fix various format errors,3,[],https://github.com/tklengyel/drakvuf/pull/953,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/953#issuecomment-674175973,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,954,2020-08-14T16:31:53Z,2020-08-19T11:19:34Z,2020-10-26T05:51:24Z,MERGED,True,66,22,3,https://github.com/skvl,libusermode: print argument names,1,[],https://github.com/tklengyel/drakvuf/pull/954,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/954,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,954,2020-08-14T16:31:53Z,2020-08-19T11:19:34Z,2020-10-26T05:51:24Z,MERGED,True,66,22,3,https://github.com/skvl,libusermode: print argument names,1,[],https://github.com/tklengyel/drakvuf/pull/954,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/954#issuecomment-674157597,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,954,2020-08-14T16:31:53Z,2020-08-19T11:19:34Z,2020-10-26T05:51:24Z,MERGED,True,66,22,3,https://github.com/skvl,libusermode: print argument names,1,[],https://github.com/tklengyel/drakvuf/pull/954,https://github.com/BonusPlay,3,https://github.com/tklengyel/drakvuf/pull/954#issuecomment-674251697,,What happened that using ArgumentPrinter::ArgumentPrinter; needed to be added everywhere?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,954,2020-08-14T16:31:53Z,2020-08-19T11:19:34Z,2020-10-26T05:51:24Z,MERGED,True,66,22,3,https://github.com/skvl,libusermode: print argument names,1,[],https://github.com/tklengyel/drakvuf/pull/954,https://github.com/skvl,4,https://github.com/tklengyel/drakvuf/pull/954#issuecomment-675372117,,"@BonusPlay, I've been motivated by https://en.cppreference.com/w/cpp/language/using_declaration , Inheriting constructors.
So since StringPrinterInterface constructor should be a copy of ArgumentPrinter constructor, I have inherited the constructor so not have to write it again.
Am I wrong?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,954,2020-08-14T16:31:53Z,2020-08-19T11:19:34Z,2020-10-26T05:51:24Z,MERGED,True,66,22,3,https://github.com/skvl,libusermode: print argument names,1,[],https://github.com/tklengyel/drakvuf/pull/954,https://github.com/BonusPlay,5,https://github.com/tklengyel/drakvuf/pull/954#issuecomment-675398810,,"Oh, now I see. 👍",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,954,2020-08-14T16:31:53Z,2020-08-19T11:19:34Z,2020-10-26T05:51:24Z,MERGED,True,66,22,3,https://github.com/skvl,libusermode: print argument names,1,[],https://github.com/tklengyel/drakvuf/pull/954,https://github.com/skvl,6,https://github.com/tklengyel/drakvuf/pull/954#issuecomment-675427454,,@tklengyel is this ok? I can't access jenkins page.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,954,2020-08-14T16:31:53Z,2020-08-19T11:19:34Z,2020-10-26T05:51:24Z,MERGED,True,66,22,3,https://github.com/skvl,libusermode: print argument names,1,[],https://github.com/tklengyel/drakvuf/pull/954,https://github.com/icedevml,7,https://github.com/tklengyel/drakvuf/pull/954#issuecomment-675435159,,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,954,2020-08-14T16:31:53Z,2020-08-19T11:19:34Z,2020-10-26T05:51:24Z,MERGED,True,66,22,3,https://github.com/skvl,libusermode: print argument names,1,[],https://github.com/tklengyel/drakvuf/pull/954,https://github.com/icedevml,8,https://github.com/tklengyel/drakvuf/pull/954#issuecomment-675436008,,The CI box seems to be currently down,True,{'CONFUSED': ['https://github.com/BonusPlay']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,954,2020-08-14T16:31:53Z,2020-08-19T11:19:34Z,2020-10-26T05:51:24Z,MERGED,True,66,22,3,https://github.com/skvl,libusermode: print argument names,1,[],https://github.com/tklengyel/drakvuf/pull/954,https://github.com/skvl,9,https://github.com/tklengyel/drakvuf/pull/954#issuecomment-675597691,,@tklengyel what is the error with Windows 10?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,954,2020-08-14T16:31:53Z,2020-08-19T11:19:34Z,2020-10-26T05:51:24Z,MERGED,True,66,22,3,https://github.com/skvl,libusermode: print argument names,1,[],https://github.com/tklengyel/drakvuf/pull/954,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/954#issuecomment-675647066,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,955,2020-08-14T16:36:04Z,2020-08-18T20:32:59Z,2020-10-26T05:50:07Z,MERGED,True,0,2,1,https://github.com/skvl,apimon: remove duplication in output,1,[],https://github.com/tklengyel/drakvuf/pull/955,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/955,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,955,2020-08-14T16:36:04Z,2020-08-18T20:32:59Z,2020-10-26T05:50:07Z,MERGED,True,0,2,1,https://github.com/skvl,apimon: remove duplication in output,1,[],https://github.com/tklengyel/drakvuf/pull/955,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/955#issuecomment-674159318,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,955,2020-08-14T16:36:04Z,2020-08-18T20:32:59Z,2020-10-26T05:50:07Z,MERGED,True,0,2,1,https://github.com/skvl,apimon: remove duplication in output,1,[],https://github.com/tklengyel/drakvuf/pull/955,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/955#issuecomment-674176253,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,955,2020-08-14T16:36:04Z,2020-08-18T20:32:59Z,2020-10-26T05:50:07Z,MERGED,True,0,2,1,https://github.com/skvl,apimon: remove duplication in output,1,[],https://github.com/tklengyel/drakvuf/pull/955,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/955#issuecomment-674526567,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,955,2020-08-14T16:36:04Z,2020-08-18T20:32:59Z,2020-10-26T05:50:07Z,MERGED,True,0,2,1,https://github.com/skvl,apimon: remove duplication in output,1,[],https://github.com/tklengyel/drakvuf/pull/955,https://github.com/skvl,5,https://github.com/tklengyel/drakvuf/pull/955#issuecomment-675427714,,@tklengyel is this ok? I can't access jenkins page.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,955,2020-08-14T16:36:04Z,2020-08-18T20:32:59Z,2020-10-26T05:50:07Z,MERGED,True,0,2,1,https://github.com/skvl,apimon: remove duplication in output,1,[],https://github.com/tklengyel/drakvuf/pull/955,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/955#issuecomment-675691022,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,956,2020-08-14T16:36:07Z,2020-08-17T11:22:02Z,2020-10-26T05:50:03Z,MERGED,True,2,2,1,https://github.com/skvl,apimon: fix KV output,1,[],https://github.com/tklengyel/drakvuf/pull/956,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/956,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,956,2020-08-14T16:36:07Z,2020-08-17T11:22:02Z,2020-10-26T05:50:03Z,MERGED,True,2,2,1,https://github.com/skvl,apimon: fix KV output,1,[],https://github.com/tklengyel/drakvuf/pull/956,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/956#issuecomment-674159340,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,956,2020-08-14T16:36:07Z,2020-08-17T11:22:02Z,2020-10-26T05:50:03Z,MERGED,True,2,2,1,https://github.com/skvl,apimon: fix KV output,1,[],https://github.com/tklengyel/drakvuf/pull/956,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/956#issuecomment-674176889,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,956,2020-08-14T16:36:07Z,2020-08-17T11:22:02Z,2020-10-26T05:50:03Z,MERGED,True,2,2,1,https://github.com/skvl,apimon: fix KV output,1,[],https://github.com/tklengyel/drakvuf/pull/956,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/956#issuecomment-674597820,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,956,2020-08-14T16:36:07Z,2020-08-17T11:22:02Z,2020-10-26T05:50:03Z,MERGED,True,2,2,1,https://github.com/skvl,apimon: fix KV output,1,[],https://github.com/tklengyel/drakvuf/pull/956,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/956#issuecomment-674599248,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,957,2020-08-14T22:04:29Z,2020-08-14T23:07:46Z,2020-08-14T23:07:49Z,MERGED,True,84,58,6,https://github.com/tklengyel,Use faster but safe set vcpu gprs function in injector,1,[],https://github.com/tklengyel/drakvuf/pull/957,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/957,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,958,2020-08-16T14:38:31Z,2020-08-17T00:13:32Z,2020-08-17T00:13:36Z,MERGED,True,5,4,1,https://github.com/tklengyel,Fix leak in Windows syscall plugin,1,[],https://github.com/tklengyel/drakvuf/pull/958,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/958,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,958,2020-08-16T14:38:31Z,2020-08-17T00:13:32Z,2020-08-17T00:13:36Z,MERGED,True,5,4,1,https://github.com/tklengyel,Fix leak in Windows syscall plugin,1,[],https://github.com/tklengyel/drakvuf/pull/958,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/958#issuecomment-674590127,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,959,2020-08-19T16:57:35Z,2020-08-19T17:14:38Z,2020-08-19T17:14:38Z,MERGED,True,1,1,1,https://github.com/icedevml,"OUTPUT_JSON: print Xval as actual hex string, not as a number",1,[],https://github.com/tklengyel/drakvuf/pull/959,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/959,"Xval in JSON format should be represented as ""0x1234"", not as a decimal. It's absolutely hard to manually read virtual addresses in decimal etc.","Xval in JSON format should be represented as ""0x1234"", not as a decimal. It's absolutely hard to manually read virtual addresses in decimal etc.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,961,2020-08-24T09:35:29Z,2020-08-24T15:40:11Z,2020-10-26T05:51:15Z,MERGED,True,1,1,1,https://github.com/skvl,libusermode: fix CLSID printing,1,[],https://github.com/tklengyel/drakvuf/pull/961,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/961,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,961,2020-08-24T09:35:29Z,2020-08-24T15:40:11Z,2020-10-26T05:51:15Z,MERGED,True,1,1,1,https://github.com/skvl,libusermode: fix CLSID printing,1,[],https://github.com/tklengyel/drakvuf/pull/961,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/961#issuecomment-679020060,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,961,2020-08-24T09:35:29Z,2020-08-24T15:40:11Z,2020-10-26T05:51:15Z,MERGED,True,1,1,1,https://github.com/skvl,libusermode: fix CLSID printing,1,[],https://github.com/tklengyel/drakvuf/pull/961,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/961#issuecomment-679056875,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,961,2020-08-24T09:35:29Z,2020-08-24T15:40:11Z,2020-10-26T05:51:15Z,MERGED,True,1,1,1,https://github.com/skvl,libusermode: fix CLSID printing,1,[],https://github.com/tklengyel/drakvuf/pull/961,https://github.com/skvl,4,https://github.com/tklengyel/drakvuf/pull/961#issuecomment-679123896,,! will re-base this in a minute.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,961,2020-08-24T09:35:29Z,2020-08-24T15:40:11Z,2020-10-26T05:51:15Z,MERGED,True,1,1,1,https://github.com/skvl,libusermode: fix CLSID printing,1,[],https://github.com/tklengyel/drakvuf/pull/961,https://github.com/skvl,5,https://github.com/tklengyel/drakvuf/pull/961#issuecomment-679147980,,@tklengyel could re-run Jenkins please?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,961,2020-08-24T09:35:29Z,2020-08-24T15:40:11Z,2020-10-26T05:51:15Z,MERGED,True,1,1,1,https://github.com/skvl,libusermode: fix CLSID printing,1,[],https://github.com/tklengyel/drakvuf/pull/961,https://github.com/icedevml,6,https://github.com/tklengyel/drakvuf/pull/961#issuecomment-679148688,,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,961,2020-08-24T09:35:29Z,2020-08-24T15:40:11Z,2020-10-26T05:51:15Z,MERGED,True,1,1,1,https://github.com/skvl,libusermode: fix CLSID printing,1,[],https://github.com/tklengyel/drakvuf/pull/961,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/961#issuecomment-679148713,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,961,2020-08-24T09:35:29Z,2020-08-24T15:40:11Z,2020-10-26T05:51:15Z,MERGED,True,1,1,1,https://github.com/skvl,libusermode: fix CLSID printing,1,[],https://github.com/tklengyel/drakvuf/pull/961,https://github.com/icedevml,8,https://github.com/tklengyel/drakvuf/pull/961#issuecomment-679149481,,"huh, race condition :D",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,961,2020-08-24T09:35:29Z,2020-08-24T15:40:11Z,2020-10-26T05:51:15Z,MERGED,True,1,1,1,https://github.com/skvl,libusermode: fix CLSID printing,1,[],https://github.com/tklengyel/drakvuf/pull/961,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/961#issuecomment-679152987,,"huh, race condition :D

It will be very well tested at least :)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,961,2020-08-24T09:35:29Z,2020-08-24T15:40:11Z,2020-10-26T05:51:15Z,MERGED,True,1,1,1,https://github.com/skvl,libusermode: fix CLSID printing,1,[],https://github.com/tklengyel/drakvuf/pull/961,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/961#issuecomment-679193687,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,963,2020-08-24T13:35:29Z,2020-08-24T15:35:54Z,2020-08-24T15:35:54Z,MERGED,True,1,8,1,https://github.com/icedevml,libdrakvuf: don't apply old_access flags on breakpoint guard trap,1,[],https://github.com/tklengyel/drakvuf/pull/963,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/963,"resolve #960
Improve performance of DRAKVUF in some corner cases (e.g. co-existing BREAKPOINT traps and dynamic MEMACCESS X traps). This logic is belived to be stale and already covered by different mechanisms.","resolve #960
Improve performance of DRAKVUF in some corner cases (e.g. co-existing BREAKPOINT traps and dynamic MEMACCESS X traps). This logic is belived to be stale and already covered by different mechanisms.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,964,2020-08-24T15:28:57Z,2020-08-24T19:11:24Z,2020-08-24T19:11:26Z,MERGED,True,1,1,1,https://github.com/tklengyel,Update LibVMI,1,[],https://github.com/tklengyel/drakvuf/pull/964,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/964,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,965,2020-08-24T17:47:08Z,2020-08-25T11:27:51Z,2020-10-26T05:52:35Z,MERGED,True,110,290,7,https://github.com/skvl,Procmon printers,4,[],https://github.com/tklengyel/drakvuf/pull/965,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/965,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,965,2020-08-24T17:47:08Z,2020-08-25T11:27:51Z,2020-10-26T05:52:35Z,MERGED,True,110,290,7,https://github.com/skvl,Procmon printers,4,[],https://github.com/tklengyel/drakvuf/pull/965,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/965#issuecomment-679272384,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,965,2020-08-24T17:47:08Z,2020-08-25T11:27:51Z,2020-10-26T05:52:35Z,MERGED,True,110,290,7,https://github.com/skvl,Procmon printers,4,[],https://github.com/tklengyel/drakvuf/pull/965,https://github.com/skvl,3,https://github.com/tklengyel/drakvuf/pull/965#issuecomment-679702056,,@tklengyel could you ask @drakvuf-jenkins retest this please?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,965,2020-08-24T17:47:08Z,2020-08-25T11:27:51Z,2020-10-26T05:52:35Z,MERGED,True,110,290,7,https://github.com/skvl,Procmon printers,4,[],https://github.com/tklengyel/drakvuf/pull/965,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/965#issuecomment-679915874,,@drakvuf-jenkins Retest this please.,True,{'THUMBS_UP': ['https://github.com/skvl']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,965,2020-08-24T17:47:08Z,2020-08-25T11:27:51Z,2020-10-26T05:52:35Z,MERGED,True,110,290,7,https://github.com/skvl,Procmon printers,4,[],https://github.com/tklengyel/drakvuf/pull/965,https://github.com/skvl,5,https://github.com/tklengyel/drakvuf/pull/965#issuecomment-679941024,,"@icedevml, I have tested this with Windows 10 1803 x64. It works. What's the issue with Jenkins?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,965,2020-08-24T17:47:08Z,2020-08-25T11:27:51Z,2020-10-26T05:52:35Z,MERGED,True,110,290,7,https://github.com/skvl,Procmon printers,4,[],https://github.com/tklengyel/drakvuf/pull/965,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/965#issuecomment-679949569,,@drakvuf-jenkins Retest this please.,True,{'THUMBS_UP': ['https://github.com/skvl']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,968,2020-08-25T11:42:03Z,2020-08-25T14:21:56Z,2020-10-26T05:53:05Z,MERGED,True,8,2,2,https://github.com/skvl,syscalls: add SHORT type and NtUserGetAsyncKeyState and NtUserGetKeyState,2,[],https://github.com/tklengyel/drakvuf/pull/968,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/968,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,968,2020-08-25T11:42:03Z,2020-08-25T14:21:56Z,2020-10-26T05:53:05Z,MERGED,True,8,2,2,https://github.com/skvl,syscalls: add SHORT type and NtUserGetAsyncKeyState and NtUserGetKeyState,2,[],https://github.com/tklengyel/drakvuf/pull/968,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/968#issuecomment-679973625,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,968,2020-08-25T11:42:03Z,2020-08-25T14:21:56Z,2020-10-26T05:53:05Z,MERGED,True,8,2,2,https://github.com/skvl,syscalls: add SHORT type and NtUserGetAsyncKeyState and NtUserGetKeyState,2,[],https://github.com/tklengyel/drakvuf/pull/968,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/968#issuecomment-679984031,,Please remove the libvmi submodule changes,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,968,2020-08-25T11:42:03Z,2020-08-25T14:21:56Z,2020-10-26T05:53:05Z,MERGED,True,8,2,2,https://github.com/skvl,syscalls: add SHORT type and NtUserGetAsyncKeyState and NtUserGetKeyState,2,[],https://github.com/tklengyel/drakvuf/pull/968,https://github.com/skvl,4,https://github.com/tklengyel/drakvuf/pull/968#issuecomment-679993730,,"@tklengyel, done",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,968,2020-08-25T11:42:03Z,2020-08-25T14:21:56Z,2020-10-26T05:53:05Z,MERGED,True,8,2,2,https://github.com/skvl,syscalls: add SHORT type and NtUserGetAsyncKeyState and NtUserGetKeyState,2,[],https://github.com/tklengyel/drakvuf/pull/968,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/968#issuecomment-680033743,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,969,2020-08-25T12:39:01Z,2020-08-25T14:22:28Z,2020-10-26T05:52:23Z,MERGED,True,125,1,2,https://github.com/skvl,procmon: hook NtOpenThread,2,[],https://github.com/tklengyel/drakvuf/pull/969,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/969,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,969,2020-08-25T12:39:01Z,2020-08-25T14:22:28Z,2020-10-26T05:52:23Z,MERGED,True,125,1,2,https://github.com/skvl,procmon: hook NtOpenThread,2,[],https://github.com/tklengyel/drakvuf/pull/969,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/969#issuecomment-679999266,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,969,2020-08-25T12:39:01Z,2020-08-25T14:22:28Z,2020-10-26T05:52:23Z,MERGED,True,125,1,2,https://github.com/skvl,procmon: hook NtOpenThread,2,[],https://github.com/tklengyel/drakvuf/pull/969,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/969#issuecomment-680034244,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,970,2020-08-25T13:19:42Z,2020-08-26T14:41:37Z,2020-10-26T05:50:20Z,MERGED,True,46,112,1,https://github.com/skvl,filedelete: switch to new printing API,1,[],https://github.com/tklengyel/drakvuf/pull/970,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/970,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,970,2020-08-25T13:19:42Z,2020-08-26T14:41:37Z,2020-10-26T05:50:20Z,MERGED,True,46,112,1,https://github.com/skvl,filedelete: switch to new printing API,1,[],https://github.com/tklengyel/drakvuf/pull/970,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/970#issuecomment-680020269,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,970,2020-08-25T13:19:42Z,2020-08-26T14:41:37Z,2020-10-26T05:50:20Z,MERGED,True,46,112,1,https://github.com/skvl,filedelete: switch to new printing API,1,[],https://github.com/tklengyel/drakvuf/pull/970,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/970#issuecomment-680034655,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,970,2020-08-25T13:19:42Z,2020-08-26T14:41:37Z,2020-10-26T05:50:20Z,MERGED,True,46,112,1,https://github.com/skvl,filedelete: switch to new printing API,1,[],https://github.com/tklengyel/drakvuf/pull/970,https://github.com/skvl,4,https://github.com/tklengyel/drakvuf/pull/970#issuecomment-680084222,,@tklengyel what is the error with Windows 10 2004? I don't understand the output...,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,970,2020-08-25T13:19:42Z,2020-08-26T14:41:37Z,2020-10-26T05:50:20Z,MERGED,True,46,112,1,https://github.com/skvl,filedelete: switch to new printing API,1,[],https://github.com/tklengyel/drakvuf/pull/970,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/970#issuecomment-680093034,,I'm using the box for some other stuff and there wasn't enough RAM for the CI to spin up that VM. I'll retest this when the box is free again.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,970,2020-08-25T13:19:42Z,2020-08-26T14:41:37Z,2020-10-26T05:50:20Z,MERGED,True,46,112,1,https://github.com/skvl,filedelete: switch to new printing API,1,[],https://github.com/tklengyel/drakvuf/pull/970,https://github.com/skvl,6,https://github.com/tklengyel/drakvuf/pull/970#issuecomment-680129761,,Thank you!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,970,2020-08-25T13:19:42Z,2020-08-26T14:41:37Z,2020-10-26T05:50:20Z,MERGED,True,46,112,1,https://github.com/skvl,filedelete: switch to new printing API,1,[],https://github.com/tklengyel/drakvuf/pull/970,https://github.com/skvl,7,https://github.com/tklengyel/drakvuf/pull/970#issuecomment-680614714,,@tklengyel could you ask @drakvuf-jenkins retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,970,2020-08-25T13:19:42Z,2020-08-26T14:41:37Z,2020-10-26T05:50:20Z,MERGED,True,46,112,1,https://github.com/skvl,filedelete: switch to new printing API,1,[],https://github.com/tklengyel/drakvuf/pull/970,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/970#issuecomment-680830757,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,971,2020-08-25T17:16:49Z,2020-08-26T14:42:09Z,2020-10-26T05:50:37Z,MERGED,True,79,295,1,https://github.com/skvl,filetracer: switch to new printing API (windows only),1,[],https://github.com/tklengyel/drakvuf/pull/971,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/971,This is ongoing work. The Linux part will be in separate PR.,This is ongoing work. The Linux part will be in separate PR.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,971,2020-08-25T17:16:49Z,2020-08-26T14:42:09Z,2020-10-26T05:50:37Z,MERGED,True,79,295,1,https://github.com/skvl,filetracer: switch to new printing API (windows only),1,[],https://github.com/tklengyel/drakvuf/pull/971,https://github.com/skvl,2,https://github.com/tklengyel/drakvuf/pull/971#issuecomment-680613805,This is ongoing work. The Linux part will be in separate PR.,@tklengyel could you ask @drakvuf-jenkins retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,971,2020-08-25T17:16:49Z,2020-08-26T14:42:09Z,2020-10-26T05:50:37Z,MERGED,True,79,295,1,https://github.com/skvl,filetracer: switch to new printing API (windows only),1,[],https://github.com/tklengyel/drakvuf/pull/971,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/971#issuecomment-680831088,This is ongoing work. The Linux part will be in separate PR.,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,971,2020-08-25T17:16:49Z,2020-08-26T14:42:09Z,2020-10-26T05:50:37Z,MERGED,True,79,295,1,https://github.com/skvl,filetracer: switch to new printing API (windows only),1,[],https://github.com/tklengyel/drakvuf/pull/971,https://github.com/drakvuf-jenkins,4,https://github.com/tklengyel/drakvuf/pull/971#issuecomment-680831100,This is ongoing work. The Linux part will be in separate PR.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,972,2020-08-26T06:03:04Z,2020-08-26T15:12:08Z,2020-10-26T05:52:19Z,MERGED,True,3,2,1,https://github.com/skvl,procmon: fix uninitialized members (from coverity),2,[],https://github.com/tklengyel/drakvuf/pull/972,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/972,Fix Coverity issues from #969,Fix Coverity issues from #969,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,972,2020-08-26T06:03:04Z,2020-08-26T15:12:08Z,2020-10-26T05:52:19Z,MERGED,True,3,2,1,https://github.com/skvl,procmon: fix uninitialized members (from coverity),2,[],https://github.com/tklengyel/drakvuf/pull/972,https://github.com/skvl,2,https://github.com/tklengyel/drakvuf/pull/972#issuecomment-680717930,Fix Coverity issues from #969,@tklengyel could you ask @drakvuf-jenkins retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,972,2020-08-26T06:03:04Z,2020-08-26T15:12:08Z,2020-10-26T05:52:19Z,MERGED,True,3,2,1,https://github.com/skvl,procmon: fix uninitialized members (from coverity),2,[],https://github.com/tklengyel/drakvuf/pull/972,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/972#issuecomment-680831218,Fix Coverity issues from #969,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,972,2020-08-26T06:03:04Z,2020-08-26T15:12:08Z,2020-10-26T05:52:19Z,MERGED,True,3,2,1,https://github.com/skvl,procmon: fix uninitialized members (from coverity),2,[],https://github.com/tklengyel/drakvuf/pull/972,https://github.com/drakvuf-jenkins,4,https://github.com/tklengyel/drakvuf/pull/972#issuecomment-680831229,Fix Coverity issues from #969,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,973,2020-08-26T11:34:13Z,2020-08-28T22:59:52Z,2020-10-26T05:50:12Z,MERGED,True,41,18,5,https://github.com/skvl,"libusermode,apimon,memdump: print CLSID from dll hook list",1,[],https://github.com/tklengyel/drakvuf/pull/973,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/973,"This allows to provide a CLSID in dll hooks list which is used as meta information to link multiple events in output e.g.:
System32\taskschd.dll,ITaskService::GetFolder,clsid,0F87369F-A4E5-4CFC-BD3E-73E6154572DD,20520,log,this:lpvoid,path:bstr,ppFolder:lpvoid*","This allows to provide a CLSID in dll hooks list which is used as meta information to link multiple events in output e.g.:
System32\taskschd.dll,ITaskService::GetFolder,clsid,0F87369F-A4E5-4CFC-BD3E-73E6154572DD,20520,log,this:lpvoid,path:bstr,ppFolder:lpvoid*",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,973,2020-08-26T11:34:13Z,2020-08-28T22:59:52Z,2020-10-26T05:50:12Z,MERGED,True,41,18,5,https://github.com/skvl,"libusermode,apimon,memdump: print CLSID from dll hook list",1,[],https://github.com/tklengyel/drakvuf/pull/973,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/973#issuecomment-680831609,"This allows to provide a CLSID in dll hooks list which is used as meta information to link multiple events in output e.g.:
System32\taskschd.dll,ITaskService::GetFolder,clsid,0F87369F-A4E5-4CFC-BD3E-73E6154572DD,20520,log,this:lpvoid,path:bstr,ppFolder:lpvoid*",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,973,2020-08-26T11:34:13Z,2020-08-28T22:59:52Z,2020-10-26T05:50:12Z,MERGED,True,41,18,5,https://github.com/skvl,"libusermode,apimon,memdump: print CLSID from dll hook list",1,[],https://github.com/tklengyel/drakvuf/pull/973,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/973#issuecomment-680831619,"This allows to provide a CLSID in dll hooks list which is used as meta information to link multiple events in output e.g.:
System32\taskschd.dll,ITaskService::GetFolder,clsid,0F87369F-A4E5-4CFC-BD3E-73E6154572DD,20520,log,this:lpvoid,path:bstr,ppFolder:lpvoid*",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,973,2020-08-26T11:34:13Z,2020-08-28T22:59:52Z,2020-10-26T05:50:12Z,MERGED,True,41,18,5,https://github.com/skvl,"libusermode,apimon,memdump: print CLSID from dll hook list",1,[],https://github.com/tklengyel/drakvuf/pull/973,https://github.com/skvl,4,https://github.com/tklengyel/drakvuf/pull/973#issuecomment-680874663,"This allows to provide a CLSID in dll hooks list which is used as meta information to link multiple events in output e.g.:
System32\taskschd.dll,ITaskService::GetFolder,clsid,0F87369F-A4E5-4CFC-BD3E-73E6154572DD,20520,log,this:lpvoid,path:bstr,ppFolder:lpvoid*",@tklengyel is this the resource error once again?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,973,2020-08-26T11:34:13Z,2020-08-28T22:59:52Z,2020-10-26T05:50:12Z,MERGED,True,41,18,5,https://github.com/skvl,"libusermode,apimon,memdump: print CLSID from dll hook list",1,[],https://github.com/tklengyel/drakvuf/pull/973,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/973#issuecomment-680942786,"This allows to provide a CLSID in dll hooks list which is used as meta information to link multiple events in output e.g.:
System32\taskschd.dll,ITaskService::GetFolder,clsid,0F87369F-A4E5-4CFC-BD3E-73E6154572DD,20520,log,this:lpvoid,path:bstr,ppFolder:lpvoid*","@skvl this looks like something else, Valgrind seems to have failed to start on the Win7 x86 VM. Don't know why.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,973,2020-08-26T11:34:13Z,2020-08-28T22:59:52Z,2020-10-26T05:50:12Z,MERGED,True,41,18,5,https://github.com/skvl,"libusermode,apimon,memdump: print CLSID from dll hook list",1,[],https://github.com/tklengyel/drakvuf/pull/973,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/973#issuecomment-680942933,"This allows to provide a CLSID in dll hooks list which is used as meta information to link multiple events in output e.g.:
System32\taskschd.dll,ITaskService::GetFolder,clsid,0F87369F-A4E5-4CFC-BD3E-73E6154572DD,20520,log,this:lpvoid,path:bstr,ppFolder:lpvoid*",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,973,2020-08-26T11:34:13Z,2020-08-28T22:59:52Z,2020-10-26T05:50:12Z,MERGED,True,41,18,5,https://github.com/skvl,"libusermode,apimon,memdump: print CLSID from dll hook list",1,[],https://github.com/tklengyel/drakvuf/pull/973,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/973#issuecomment-680955459,"This allows to provide a CLSID in dll hooks list which is used as meta information to link multiple events in output e.g.:
System32\taskschd.dll,ITaskService::GetFolder,clsid,0F87369F-A4E5-4CFC-BD3E-73E6154572DD,20520,log,this:lpvoid,path:bstr,ppFolder:lpvoid*",/cc @icedevml,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,973,2020-08-26T11:34:13Z,2020-08-28T22:59:52Z,2020-10-26T05:50:12Z,MERGED,True,41,18,5,https://github.com/skvl,"libusermode,apimon,memdump: print CLSID from dll hook list",1,[],https://github.com/tklengyel/drakvuf/pull/973,https://github.com/skvl,8,https://github.com/tklengyel/drakvuf/pull/973#issuecomment-681142130,"This allows to provide a CLSID in dll hooks list which is used as meta information to link multiple events in output e.g.:
System32\taskschd.dll,ITaskService::GetFolder,clsid,0F87369F-A4E5-4CFC-BD3E-73E6154572DD,20520,log,this:lpvoid,path:bstr,ppFolder:lpvoid*",@tklengyel this looks like OK now.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,973,2020-08-26T11:34:13Z,2020-08-28T22:59:52Z,2020-10-26T05:50:12Z,MERGED,True,41,18,5,https://github.com/skvl,"libusermode,apimon,memdump: print CLSID from dll hook list",1,[],https://github.com/tklengyel/drakvuf/pull/973,https://github.com/skvl,9,https://github.com/tklengyel/drakvuf/pull/973#issuecomment-682070263,"This allows to provide a CLSID in dll hooks list which is used as meta information to link multiple events in output e.g.:
System32\taskschd.dll,ITaskService::GetFolder,clsid,0F87369F-A4E5-4CFC-BD3E-73E6154572DD,20520,log,this:lpvoid,path:bstr,ppFolder:lpvoid*","@tklengyel, @icedevml, is this PR OK?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,973,2020-08-26T11:34:13Z,2020-08-28T22:59:52Z,2020-10-26T05:50:12Z,MERGED,True,41,18,5,https://github.com/skvl,"libusermode,apimon,memdump: print CLSID from dll hook list",1,[],https://github.com/tklengyel/drakvuf/pull/973,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/973#issuecomment-682208188,"This allows to provide a CLSID in dll hooks list which is used as meta information to link multiple events in output e.g.:
System32\taskschd.dll,ITaskService::GetFolder,clsid,0F87369F-A4E5-4CFC-BD3E-73E6154572DD,20520,log,this:lpvoid,path:bstr,ppFolder:lpvoid*",@skvl  LGTM but I would like another set of eyes on the libusermode changes,True,{'THUMBS_UP': ['https://github.com/skvl']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,973,2020-08-26T11:34:13Z,2020-08-28T22:59:52Z,2020-10-26T05:50:12Z,MERGED,True,41,18,5,https://github.com/skvl,"libusermode,apimon,memdump: print CLSID from dll hook list",1,[],https://github.com/tklengyel/drakvuf/pull/973,https://github.com/icedevml,11,https://github.com/tklengyel/drakvuf/pull/973#issuecomment-682491143,"This allows to provide a CLSID in dll hooks list which is used as meta information to link multiple events in output e.g.:
System32\taskschd.dll,ITaskService::GetFolder,clsid,0F87369F-A4E5-4CFC-BD3E-73E6154572DD,20520,log,this:lpvoid,path:bstr,ppFolder:lpvoid*",I will look soon,True,{'THUMBS_UP': ['https://github.com/skvl']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,975,2020-08-31T05:56:48Z,2020-09-01T05:24:46Z,2020-10-26T05:52:15Z,CLOSED,False,48,52,5,https://github.com/skvl,Procmon fix multiple issues,3,[],https://github.com/tklengyel/drakvuf/pull/975,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/975,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,975,2020-08-31T05:56:48Z,2020-09-01T05:24:46Z,2020-10-26T05:52:15Z,CLOSED,False,48,52,5,https://github.com/skvl,Procmon fix multiple issues,3,[],https://github.com/tklengyel/drakvuf/pull/975,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/975#issuecomment-683567545,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,975,2020-08-31T05:56:48Z,2020-09-01T05:24:46Z,2020-10-26T05:52:15Z,CLOSED,False,48,52,5,https://github.com/skvl,Procmon fix multiple issues,3,[],https://github.com/tklengyel/drakvuf/pull/975,https://github.com/skvl,3,https://github.com/tklengyel/drakvuf/pull/975#issuecomment-683695527,,@tklengyel @icedevml could you ask @drakvuf-jenkins retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,975,2020-08-31T05:56:48Z,2020-09-01T05:24:46Z,2020-10-26T05:52:15Z,CLOSED,False,48,52,5,https://github.com/skvl,Procmon fix multiple issues,3,[],https://github.com/tklengyel/drakvuf/pull/975,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/975#issuecomment-683725514,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,975,2020-08-31T05:56:48Z,2020-09-01T05:24:46Z,2020-10-26T05:52:15Z,CLOSED,False,48,52,5,https://github.com/skvl,Procmon fix multiple issues,3,[],https://github.com/tklengyel/drakvuf/pull/975,https://github.com/skvl,5,https://github.com/tklengyel/drakvuf/pull/975#issuecomment-683737541,,"@tklengyel is this (https://ci.drakvuf.com/job/DRAKVUF-windows10/251/console) out of resources error?
+ sudo -E /shared/drakvuf-ci/run.sh windows10 /shared/jenkins/workspace/DRAKVUF-windows10 /opt/libvmi RESET
Running environment reset..
Reset result: 32:error:error:error",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,975,2020-08-31T05:56:48Z,2020-09-01T05:24:46Z,2020-10-26T05:52:15Z,CLOSED,False,48,52,5,https://github.com/skvl,Procmon fix multiple issues,3,[],https://github.com/tklengyel/drakvuf/pull/975,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/975#issuecomment-683811271,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,975,2020-08-31T05:56:48Z,2020-09-01T05:24:46Z,2020-10-26T05:52:15Z,CLOSED,False,48,52,5,https://github.com/skvl,Procmon fix multiple issues,3,[],https://github.com/tklengyel/drakvuf/pull/975,https://github.com/skvl,7,https://github.com/tklengyel/drakvuf/pull/975#issuecomment-683847387,,@tklengyel this time goes better: https://ci.drakvuf.com/job/DRAKVUF-PR/247/ . Only two tests fails.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,975,2020-08-31T05:56:48Z,2020-09-01T05:24:46Z,2020-10-26T05:52:15Z,CLOSED,False,48,52,5,https://github.com/skvl,Procmon fix multiple issues,3,[],https://github.com/tklengyel/drakvuf/pull/975,https://github.com/skvl,8,https://github.com/tklengyel/drakvuf/pull/975#issuecomment-684272737,,@tklengyel @icedevml I could split this PR into 3 smaller.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,975,2020-08-31T05:56:48Z,2020-09-01T05:24:46Z,2020-10-26T05:52:15Z,CLOSED,False,48,52,5,https://github.com/skvl,Procmon fix multiple issues,3,[],https://github.com/tklengyel/drakvuf/pull/975,https://github.com/skvl,9,https://github.com/tklengyel/drakvuf/pull/975#issuecomment-684305504,,"Have been splat into #977 , #978 , #979",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,977,2020-09-01T05:22:28Z,2020-09-02T13:23:06Z,2020-10-26T05:52:11Z,MERGED,True,1,1,1,https://github.com/skvl,procmon: fix logical error,1,[],https://github.com/tklengyel/drakvuf/pull/977,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/977,"The error was introduced in d158bf5
Split #975","The error was introduced in d158bf5
Split #975",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,977,2020-09-01T05:22:28Z,2020-09-02T13:23:06Z,2020-10-26T05:52:11Z,MERGED,True,1,1,1,https://github.com/skvl,procmon: fix logical error,1,[],https://github.com/tklengyel/drakvuf/pull/977,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/977#issuecomment-684299128,"The error was introduced in d158bf5
Split #975",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,977,2020-09-01T05:22:28Z,2020-09-02T13:23:06Z,2020-10-26T05:52:11Z,MERGED,True,1,1,1,https://github.com/skvl,procmon: fix logical error,1,[],https://github.com/tklengyel/drakvuf/pull/977,https://github.com/skvl,3,https://github.com/tklengyel/drakvuf/pull/977#issuecomment-684435989,"The error was introduced in d158bf5
Split #975","@tklengyel , @icedevml , could you ask @drakvuf-jenkins retest this please",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,977,2020-09-01T05:22:28Z,2020-09-02T13:23:06Z,2020-10-26T05:52:11Z,MERGED,True,1,1,1,https://github.com/skvl,procmon: fix logical error,1,[],https://github.com/tklengyel/drakvuf/pull/977,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/977#issuecomment-684875830,"The error was introduced in d158bf5
Split #975",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,978,2020-09-01T05:23:02Z,2020-09-02T13:56:12Z,2020-10-26T05:52:39Z,MERGED,True,47,48,3,https://github.com/skvl,procmon: refactor printing privileges with new printing API,1,[],https://github.com/tklengyel/drakvuf/pull/978,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/978,Split #975,Split #975,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,978,2020-09-01T05:23:02Z,2020-09-02T13:56:12Z,2020-10-26T05:52:39Z,MERGED,True,47,48,3,https://github.com/skvl,procmon: refactor printing privileges with new printing API,1,[],https://github.com/tklengyel/drakvuf/pull/978,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/978#issuecomment-684300665,Split #975,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,978,2020-09-01T05:23:02Z,2020-09-02T13:56:12Z,2020-10-26T05:52:39Z,MERGED,True,47,48,3,https://github.com/skvl,procmon: refactor printing privileges with new printing API,1,[],https://github.com/tklengyel/drakvuf/pull/978,https://github.com/skvl,3,https://github.com/tklengyel/drakvuf/pull/978#issuecomment-684436118,Split #975,"@tklengyel , @icedevml , could you ask @drakvuf-jenkins retest this please",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,978,2020-09-01T05:23:02Z,2020-09-02T13:56:12Z,2020-10-26T05:52:39Z,MERGED,True,47,48,3,https://github.com/skvl,procmon: refactor printing privileges with new printing API,1,[],https://github.com/tklengyel/drakvuf/pull/978,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/978#issuecomment-684876250,Split #975,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,978,2020-09-01T05:23:02Z,2020-09-02T13:56:12Z,2020-10-26T05:52:39Z,MERGED,True,47,48,3,https://github.com/skvl,procmon: refactor printing privileges with new printing API,1,[],https://github.com/tklengyel/drakvuf/pull/978,https://github.com/skvl,5,https://github.com/tklengyel/drakvuf/pull/978#issuecomment-684988285,Split #975,@tklengyel https://ci.drakvuf.com not working,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,978,2020-09-01T05:23:02Z,2020-09-02T13:56:12Z,2020-10-26T05:52:39Z,MERGED,True,47,48,3,https://github.com/skvl,procmon: refactor printing privileges with new printing API,1,[],https://github.com/tklengyel/drakvuf/pull/978,https://github.com/skvl,6,https://github.com/tklengyel/drakvuf/pull/978#issuecomment-685326374,Split #975,@tklengyel @icedevml what's the issue?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,978,2020-09-01T05:23:02Z,2020-09-02T13:56:12Z,2020-10-26T05:52:39Z,MERGED,True,47,48,3,https://github.com/skvl,procmon: refactor printing privileges with new printing API,1,[],https://github.com/tklengyel/drakvuf/pull/978,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/978#issuecomment-685733217,Split #975,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,979,2020-09-01T05:23:32Z,2020-09-04T17:36:41Z,2020-10-26T05:50:54Z,MERGED,True,0,3,1,https://github.com/skvl,kvfmt: fix format for quoted strings,1,[],https://github.com/tklengyel/drakvuf/pull/979,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/979,"The key value pair with empty quoted string should be printed.
The error was introduced in c2d8bbe
Split #975","The key value pair with empty quoted string should be printed.
The error was introduced in c2d8bbe
Split #975",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,979,2020-09-01T05:23:32Z,2020-09-04T17:36:41Z,2020-10-26T05:50:54Z,MERGED,True,0,3,1,https://github.com/skvl,kvfmt: fix format for quoted strings,1,[],https://github.com/tklengyel/drakvuf/pull/979,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/979#issuecomment-684302076,"The key value pair with empty quoted string should be printed.
The error was introduced in c2d8bbe
Split #975",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,979,2020-09-01T05:23:32Z,2020-09-04T17:36:41Z,2020-10-26T05:50:54Z,MERGED,True,0,3,1,https://github.com/skvl,kvfmt: fix format for quoted strings,1,[],https://github.com/tklengyel/drakvuf/pull/979,https://github.com/skvl,3,https://github.com/tklengyel/drakvuf/pull/979#issuecomment-684436231,"The key value pair with empty quoted string should be printed.
The error was introduced in c2d8bbe
Split #975","@tklengyel , @icedevml , could you ask @drakvuf-jenkins retest this please",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,979,2020-09-01T05:23:32Z,2020-09-04T17:36:41Z,2020-10-26T05:50:54Z,MERGED,True,0,3,1,https://github.com/skvl,kvfmt: fix format for quoted strings,1,[],https://github.com/tklengyel/drakvuf/pull/979,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/979#issuecomment-684876389,"The key value pair with empty quoted string should be printed.
The error was introduced in c2d8bbe
Split #975",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,979,2020-09-01T05:23:32Z,2020-09-04T17:36:41Z,2020-10-26T05:50:54Z,MERGED,True,0,3,1,https://github.com/skvl,kvfmt: fix format for quoted strings,1,[],https://github.com/tklengyel/drakvuf/pull/979,https://github.com/skvl,5,https://github.com/tklengyel/drakvuf/pull/979#issuecomment-685326432,"The key value pair with empty quoted string should be printed.
The error was introduced in c2d8bbe
Split #975",@tklengyel @icedevml what's the issue?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,979,2020-09-01T05:23:32Z,2020-09-04T17:36:41Z,2020-10-26T05:50:54Z,MERGED,True,0,3,1,https://github.com/skvl,kvfmt: fix format for quoted strings,1,[],https://github.com/tklengyel/drakvuf/pull/979,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/979#issuecomment-685733303,"The key value pair with empty quoted string should be printed.
The error was introduced in c2d8bbe
Split #975",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,979,2020-09-01T05:23:32Z,2020-09-04T17:36:41Z,2020-10-26T05:50:54Z,MERGED,True,0,3,1,https://github.com/skvl,kvfmt: fix format for quoted strings,1,[],https://github.com/tklengyel/drakvuf/pull/979,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/979#issuecomment-685754512,"The key value pair with empty quoted string should be printed.
The error was introduced in c2d8bbe
Split #975",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,979,2020-09-01T05:23:32Z,2020-09-04T17:36:41Z,2020-10-26T05:50:54Z,MERGED,True,0,3,1,https://github.com/skvl,kvfmt: fix format for quoted strings,1,[],https://github.com/tklengyel/drakvuf/pull/979,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/979#issuecomment-685826177,"The key value pair with empty quoted string should be printed.
The error was introduced in c2d8bbe
Split #975",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,979,2020-09-01T05:23:32Z,2020-09-04T17:36:41Z,2020-10-26T05:50:54Z,MERGED,True,0,3,1,https://github.com/skvl,kvfmt: fix format for quoted strings,1,[],https://github.com/tklengyel/drakvuf/pull/979,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/979#issuecomment-686814373,"The key value pair with empty quoted string should be printed.
The error was introduced in c2d8bbe
Split #975",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,979,2020-09-01T05:23:32Z,2020-09-04T17:36:41Z,2020-10-26T05:50:54Z,MERGED,True,0,3,1,https://github.com/skvl,kvfmt: fix format for quoted strings,1,[],https://github.com/tklengyel/drakvuf/pull/979,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/979#issuecomment-686863310,"The key value pair with empty quoted string should be printed.
The error was introduced in c2d8bbe
Split #975","Sorry about the CI being weird, for some reason it's been having trouble running the process list example on Windows 10 from time to time and the vmi-process-list example doesn't take the kpgd value directly. It should at least now be a bit more resilient so these false failures should go away.",True,{'THUMBS_UP': ['https://github.com/skvl']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,979,2020-09-01T05:23:32Z,2020-09-04T17:36:41Z,2020-10-26T05:50:54Z,MERGED,True,0,3,1,https://github.com/skvl,kvfmt: fix format for quoted strings,1,[],https://github.com/tklengyel/drakvuf/pull/979,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/979#issuecomment-686863348,"The key value pair with empty quoted string should be printed.
The error was introduced in c2d8bbe
Split #975",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,979,2020-09-01T05:23:32Z,2020-09-04T17:36:41Z,2020-10-26T05:50:54Z,MERGED,True,0,3,1,https://github.com/skvl,kvfmt: fix format for quoted strings,1,[],https://github.com/tklengyel/drakvuf/pull/979,https://github.com/skvl,12,https://github.com/tklengyel/drakvuf/pull/979#issuecomment-688275969,"The key value pair with empty quoted string should be printed.
The error was introduced in c2d8bbe
Split #975",@tklengyel thank you very much for hard efforts to test this.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,981,2020-09-07T22:14:34Z,2020-09-07T22:43:28Z,2020-09-07T22:43:33Z,MERGED,True,12,1,1,https://github.com/tklengyel,Don't let configure continue with g++ if no clang++ is found,1,[],https://github.com/tklengyel/drakvuf/pull/981,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/981,AC_PROG_CXX sets g++ as default if no clang++ is found. We don't want that. Add minimal test program that bugs out on g++ to stop configure from continuing. Once g++ supports C++20 this will no longer be necessary.,AC_PROG_CXX sets g++ as default if no clang++ is found. We don't want that. Add minimal test program that bugs out on g++ to stop configure from continuing. Once g++ supports C++20 this will no longer be necessary.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,982,2020-09-09T12:48:07Z,2020-09-09T19:18:40Z,2020-10-26T05:50:24Z,MERGED,True,448,165,4,https://github.com/skvl,fileextractor: dump files with sections and views,2,[],https://github.com/tklengyel/drakvuf/pull/982,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/982,This allows to dump files opened for asynchronous access,This allows to dump files opened for asynchronous access,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,982,2020-09-09T12:48:07Z,2020-09-09T19:18:40Z,2020-10-26T05:50:24Z,MERGED,True,448,165,4,https://github.com/skvl,fileextractor: dump files with sections and views,2,[],https://github.com/tklengyel/drakvuf/pull/982,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/982#issuecomment-689540125,This allows to dump files opened for asynchronous access,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,982,2020-09-09T12:48:07Z,2020-09-09T19:18:40Z,2020-10-26T05:50:24Z,MERGED,True,448,165,4,https://github.com/skvl,fileextractor: dump files with sections and views,2,[],https://github.com/tklengyel/drakvuf/pull/982,https://github.com/skvl,3,https://github.com/tklengyel/drakvuf/pull/982#issuecomment-689725770,This allows to dump files opened for asynchronous access,"@tklengyel, @icedevml could you ask @drakvuf-jenkins test this please?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,982,2020-09-09T12:48:07Z,2020-09-09T19:18:40Z,2020-10-26T05:50:24Z,MERGED,True,448,165,4,https://github.com/skvl,fileextractor: dump files with sections and views,2,[],https://github.com/tklengyel/drakvuf/pull/982,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/982#issuecomment-689744237,This allows to dump files opened for asynchronous access,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,983,2020-09-10T18:26:53Z,2020-09-10T23:13:57Z,2020-09-10T23:14:04Z,MERGED,True,2,8,1,https://github.com/skvl,output_format: fix segfault on nullptr string,1,[],https://github.com/tklengyel/drakvuf/pull/983,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/983,"The SIGSEGV could occur with something like this fmt::Qstr((const char*)0)
The Rstr have been patched to be uniform with Qstr","The SIGSEGV could occur with something like this fmt::Qstr((const char*)0)
The Rstr have been patched to be uniform with Qstr",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,983,2020-09-10T18:26:53Z,2020-09-10T23:13:57Z,2020-09-10T23:14:04Z,MERGED,True,2,8,1,https://github.com/skvl,output_format: fix segfault on nullptr string,1,[],https://github.com/tklengyel/drakvuf/pull/983,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/983#issuecomment-690601914,"The SIGSEGV could occur with something like this fmt::Qstr((const char*)0)
The Rstr have been patched to be uniform with Qstr",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,983,2020-09-10T18:26:53Z,2020-09-10T23:13:57Z,2020-09-10T23:14:04Z,MERGED,True,2,8,1,https://github.com/skvl,output_format: fix segfault on nullptr string,1,[],https://github.com/tklengyel/drakvuf/pull/983,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/983#issuecomment-690773361,"The SIGSEGV could occur with something like this fmt::Qstr((const char*)0)
The Rstr have been patched to be uniform with Qstr",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,983,2020-09-10T18:26:53Z,2020-09-10T23:13:57Z,2020-09-10T23:14:04Z,MERGED,True,2,8,1,https://github.com/skvl,output_format: fix segfault on nullptr string,1,[],https://github.com/tklengyel/drakvuf/pull/983,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/983#issuecomment-690779939,"The SIGSEGV could occur with something like this fmt::Qstr((const char*)0)
The Rstr have been patched to be uniform with Qstr",Thanks!,True,{'THUMBS_UP': ['https://github.com/skvl']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,985,2020-09-11T12:31:45Z,2020-09-11T14:01:55Z,2020-10-26T05:50:41Z,MERGED,True,1,1,1,https://github.com/skvl,libusermode: fix memory SIGSEGV,1,[],https://github.com/tklengyel/drakvuf/pull/985,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/985,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,985,2020-09-11T12:31:45Z,2020-09-11T14:01:55Z,2020-10-26T05:50:41Z,MERGED,True,1,1,1,https://github.com/skvl,libusermode: fix memory SIGSEGV,1,[],https://github.com/tklengyel/drakvuf/pull/985,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/985#issuecomment-691066125,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,985,2020-09-11T12:31:45Z,2020-09-11T14:01:55Z,2020-10-26T05:50:41Z,MERGED,True,1,1,1,https://github.com/skvl,libusermode: fix memory SIGSEGV,1,[],https://github.com/tklengyel/drakvuf/pull/985,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/985#issuecomment-691101546,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,985,2020-09-11T12:31:45Z,2020-09-11T14:01:55Z,2020-10-26T05:50:41Z,MERGED,True,1,1,1,https://github.com/skvl,libusermode: fix memory SIGSEGV,1,[],https://github.com/tklengyel/drakvuf/pull/985,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/985#issuecomment-691101823,,Is this related to #986? Something like this would explain it for sure.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,985,2020-09-11T12:31:45Z,2020-09-11T14:01:55Z,2020-10-26T05:50:41Z,MERGED,True,1,1,1,https://github.com/skvl,libusermode: fix memory SIGSEGV,1,[],https://github.com/tklengyel/drakvuf/pull/985,https://github.com/skvl,5,https://github.com/tklengyel/drakvuf/pull/985#issuecomment-691108930,,@tklengyel I'm not sure about this. But it is possible.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,985,2020-09-11T12:31:45Z,2020-09-11T14:01:55Z,2020-10-26T05:50:41Z,MERGED,True,1,1,1,https://github.com/skvl,libusermode: fix memory SIGSEGV,1,[],https://github.com/tklengyel/drakvuf/pull/985,https://github.com/icedevml,6,https://github.com/tklengyel/drakvuf/pull/985#issuecomment-691439013,,"huh, thanks for the fix!",True,{'THUMBS_UP': ['https://github.com/skvl']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,987,2020-09-11T22:58:44Z,2020-09-16T13:12:27Z,2020-09-16T13:12:27Z,MERGED,True,154,0,4,https://github.com/icedevml,ipt: xen_helper: implement methods to support vmtrace IPT,2,[],https://github.com/tklengyel/drakvuf/pull/987,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/987,"Can be enabled conditionally with ./configure --enable-ipt, special Xen version required: https://github.com/icedevml/xen/commits/ipt-patch-v7d
Once vmtrace IPT is upstreamed, it could be compiled-in by default.","Can be enabled conditionally with ./configure --enable-ipt, special Xen version required: https://github.com/icedevml/xen/commits/ipt-patch-v7d
Once vmtrace IPT is upstreamed, it could be compiled-in by default.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,987,2020-09-11T22:58:44Z,2020-09-16T13:12:27Z,2020-09-16T13:12:27Z,MERGED,True,154,0,4,https://github.com/icedevml,ipt: xen_helper: implement methods to support vmtrace IPT,2,[],https://github.com/tklengyel/drakvuf/pull/987,https://github.com/icedevml,2,https://github.com/tklengyel/drakvuf/pull/987#issuecomment-691696235,"Can be enabled conditionally with ./configure --enable-ipt, special Xen version required: https://github.com/icedevml/xen/commits/ipt-patch-v7d
Once vmtrace IPT is upstreamed, it could be compiled-in by default.",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,987,2020-09-11T22:58:44Z,2020-09-16T13:12:27Z,2020-09-16T13:12:27Z,MERGED,True,154,0,4,https://github.com/icedevml,ipt: xen_helper: implement methods to support vmtrace IPT,2,[],https://github.com/tklengyel/drakvuf/pull/987,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/987#issuecomment-692367840,"Can be enabled conditionally with ./configure --enable-ipt, special Xen version required: https://github.com/icedevml/xen/commits/ipt-patch-v7d
Once vmtrace IPT is upstreamed, it could be compiled-in by default.","/usr/include/python3.8/cpython/abstract.h:91:11: error: cast from 'char *' to
      'vectorcallfunc *' (aka '_object *(**)(_object *, _object *const *,
      unsigned long, _object *)') increases required alignment from 1 to 8
      [-Werror,-Wcast-align]
    ptr = (vectorcallfunc*)(((char *)callable) + offset);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1 error generated.

noooooooooooooooooooooooooooooooooooooooooooooo",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,987,2020-09-11T22:58:44Z,2020-09-16T13:12:27Z,2020-09-16T13:12:27Z,MERGED,True,154,0,4,https://github.com/icedevml,ipt: xen_helper: implement methods to support vmtrace IPT,2,[],https://github.com/tklengyel/drakvuf/pull/987,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/987#issuecomment-692375231,"Can be enabled conditionally with ./configure --enable-ipt, special Xen version required: https://github.com/icedevml/xen/commits/ipt-patch-v7d
Once vmtrace IPT is upstreamed, it could be compiled-in by default.","The actual problem is that we rely on libxen-dev which is in some very ancient version on Ubuntu Bionic, which causes we can't use xenforeignmemory because this API was not introduced yet. We can't bump to Focal either because of two weird compilation bugs that are popping up (caused by upstream bugs).
In general, we just need more recent public headers and libs, but I don't have any clue how we are supposed to get them without building Xen from sources (which also doesn't seem to be solution).",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,987,2020-09-11T22:58:44Z,2020-09-16T13:12:27Z,2020-09-16T13:12:27Z,MERGED,True,154,0,4,https://github.com/icedevml,ipt: xen_helper: implement methods to support vmtrace IPT,2,[],https://github.com/tklengyel/drakvuf/pull/987,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/987#issuecomment-692379165,"Can be enabled conditionally with ./configure --enable-ipt, special Xen version required: https://github.com/icedevml/xen/commits/ipt-patch-v7d
Once vmtrace IPT is upstreamed, it could be compiled-in by default.",Let me see if I can move Travis to Focal.,True,{'THUMBS_UP': ['https://github.com/icedevml']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,987,2020-09-11T22:58:44Z,2020-09-16T13:12:27Z,2020-09-16T13:12:27Z,MERGED,True,154,0,4,https://github.com/icedevml,ipt: xen_helper: implement methods to support vmtrace IPT,2,[],https://github.com/tklengyel/drakvuf/pull/987,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/987#issuecomment-692400723,"Can be enabled conditionally with ./configure --enable-ipt, special Xen version required: https://github.com/icedevml/xen/commits/ipt-patch-v7d
Once vmtrace IPT is upstreamed, it could be compiled-in by default.","OK, I've made it quite far but REPL doesn't compile because of some weird linking issue: https://travis-ci.org/github/tklengyel/drakvuf/jobs/727220901",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,987,2020-09-11T22:58:44Z,2020-09-16T13:12:27Z,2020-09-16T13:12:27Z,MERGED,True,154,0,4,https://github.com/icedevml,ipt: xen_helper: implement methods to support vmtrace IPT,2,[],https://github.com/tklengyel/drakvuf/pull/987,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/987#issuecomment-692413602,"Can be enabled conditionally with ./configure --enable-ipt, special Xen version required: https://github.com/icedevml/xen/commits/ipt-patch-v7d
Once vmtrace IPT is upstreamed, it could be compiled-in by default.","Yay, finally works on travis. Damn python3.8 changed how it reports linking flags. There is now at least a python3-embed pkg-config file that can be used. But only with python 3.8+. That was annoying.",True,{'THUMBS_UP': ['https://github.com/icedevml']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,987,2020-09-11T22:58:44Z,2020-09-16T13:12:27Z,2020-09-16T13:12:27Z,MERGED,True,154,0,4,https://github.com/icedevml,ipt: xen_helper: implement methods to support vmtrace IPT,2,[],https://github.com/tklengyel/drakvuf/pull/987,https://github.com/icedevml,8,https://github.com/tklengyel/drakvuf/pull/987#issuecomment-692581091,"Can be enabled conditionally with ./configure --enable-ipt, special Xen version required: https://github.com/icedevml/xen/commits/ipt-patch-v7d
Once vmtrace IPT is upstreamed, it could be compiled-in by default.","Great, thanks!",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,987,2020-09-11T22:58:44Z,2020-09-16T13:12:27Z,2020-09-16T13:12:27Z,MERGED,True,154,0,4,https://github.com/icedevml,ipt: xen_helper: implement methods to support vmtrace IPT,2,[],https://github.com/tklengyel/drakvuf/pull/987,https://github.com/icedevml,9,https://github.com/tklengyel/drakvuf/pull/987#issuecomment-692607576,"Can be enabled conditionally with ./configure --enable-ipt, special Xen version required: https://github.com/icedevml/xen/commits/ipt-patch-v7d
Once vmtrace IPT is upstreamed, it could be compiled-in by default.","rebased to your travis branch, I will rebase it again once it's merged",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,987,2020-09-11T22:58:44Z,2020-09-16T13:12:27Z,2020-09-16T13:12:27Z,MERGED,True,154,0,4,https://github.com/icedevml,ipt: xen_helper: implement methods to support vmtrace IPT,2,[],https://github.com/tklengyel/drakvuf/pull/987,https://github.com/icedevml,10,https://github.com/tklengyel/drakvuf/pull/987#issuecomment-692616779,"Can be enabled conditionally with ./configure --enable-ipt, special Xen version required: https://github.com/icedevml/xen/commits/ipt-patch-v7d
Once vmtrace IPT is upstreamed, it could be compiled-in by default.","✅ CI passed, good",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,987,2020-09-11T22:58:44Z,2020-09-16T13:12:27Z,2020-09-16T13:12:27Z,MERGED,True,154,0,4,https://github.com/icedevml,ipt: xen_helper: implement methods to support vmtrace IPT,2,[],https://github.com/tklengyel/drakvuf/pull/987,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/987#issuecomment-692631560,"Can be enabled conditionally with ./configure --enable-ipt, special Xen version required: https://github.com/icedevml/xen/commits/ipt-patch-v7d
Once vmtrace IPT is upstreamed, it could be compiled-in by default.",Coverity failed to build still in focal but I passed out. I'll try to finish it up in a bit,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,987,2020-09-11T22:58:44Z,2020-09-16T13:12:27Z,2020-09-16T13:12:27Z,MERGED,True,154,0,4,https://github.com/icedevml,ipt: xen_helper: implement methods to support vmtrace IPT,2,[],https://github.com/tklengyel/drakvuf/pull/987,https://github.com/icedevml,12,https://github.com/tklengyel/drakvuf/pull/987#issuecomment-692995326,"Can be enabled conditionally with ./configure --enable-ipt, special Xen version required: https://github.com/icedevml/xen/commits/ipt-patch-v7d
Once vmtrace IPT is upstreamed, it could be compiled-in by default.",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,987,2020-09-11T22:58:44Z,2020-09-16T13:12:27Z,2020-09-16T13:12:27Z,MERGED,True,154,0,4,https://github.com/icedevml,ipt: xen_helper: implement methods to support vmtrace IPT,2,[],https://github.com/tklengyel/drakvuf/pull/987,https://github.com/icedevml,13,https://github.com/tklengyel/drakvuf/pull/987#issuecomment-693379038,"Can be enabled conditionally with ./configure --enable-ipt, special Xen version required: https://github.com/icedevml/xen/commits/ipt-patch-v7d
Once vmtrace IPT is upstreamed, it could be compiled-in by default.",this is ready to review/merge,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,988,2020-09-11T23:30:42Z,2020-09-15T19:59:34Z,2020-11-06T18:55:28Z,MERGED,True,31,7,4,https://github.com/icedevml,ipt: implement CATCHALL_BREAKPOINT trap type,2,[],https://github.com/tklengyel/drakvuf/pull/988,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/988,"Because for the IPT we need to inject a special PTWRITE packet whenever a DRAKVUF breakpoint is hit, the IPT plugin needs to have ability to subscribe to all breakpoints. It doesn't need any special insight about what other plugins do, but it needs such kind of event to properly synchronize the IPT logs.
This might look weird but I hope reasonable.","Because for the IPT we need to inject a special PTWRITE packet whenever a DRAKVUF breakpoint is hit, the IPT plugin needs to have ability to subscribe to all breakpoints. It doesn't need any special insight about what other plugins do, but it needs such kind of event to properly synchronize the IPT logs.
This might look weird but I hope reasonable.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,988,2020-09-11T23:30:42Z,2020-09-15T19:59:34Z,2020-11-06T18:55:28Z,MERGED,True,31,7,4,https://github.com/icedevml,ipt: implement CATCHALL_BREAKPOINT trap type,2,[],https://github.com/tklengyel/drakvuf/pull/988,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/988#issuecomment-691474483,"Because for the IPT we need to inject a special PTWRITE packet whenever a DRAKVUF breakpoint is hit, the IPT plugin needs to have ability to subscribe to all breakpoints. It doesn't need any special insight about what other plugins do, but it needs such kind of event to properly synchronize the IPT logs.
This might look weird but I hope reasonable.",Makes sense,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,988,2020-09-11T23:30:42Z,2020-09-15T19:59:34Z,2020-11-06T18:55:28Z,MERGED,True,31,7,4,https://github.com/icedevml,ipt: implement CATCHALL_BREAKPOINT trap type,2,[],https://github.com/tklengyel/drakvuf/pull/988,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/988#issuecomment-692003935,"Because for the IPT we need to inject a special PTWRITE packet whenever a DRAKVUF breakpoint is hit, the IPT plugin needs to have ability to subscribe to all breakpoints. It doesn't need any special insight about what other plugins do, but it needs such kind of event to properly synchronize the IPT logs.
This might look weird but I hope reasonable.","For such handlers in LibVMI we use the term ""generic"" instead of global. I think we should stick to that here too.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,988,2020-09-11T23:30:42Z,2020-09-15T19:59:34Z,2020-11-06T18:55:28Z,MERGED,True,31,7,4,https://github.com/icedevml,ipt: implement CATCHALL_BREAKPOINT trap type,2,[],https://github.com/tklengyel/drakvuf/pull/988,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/988#issuecomment-692004472,"Because for the IPT we need to inject a special PTWRITE packet whenever a DRAKVUF breakpoint is hit, the IPT plugin needs to have ability to subscribe to all breakpoints. It doesn't need any special insight about what other plugins do, but it needs such kind of event to properly synchronize the IPT logs.
This might look weird but I hope reasonable.","Or I would also be happy with something like ""ALL_BREAKPOINTS"" or ""CATCHALL_BREAKPOINT""",True,{'THUMBS_UP': ['https://github.com/icedevml']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,988,2020-09-11T23:30:42Z,2020-09-15T19:59:34Z,2020-11-06T18:55:28Z,MERGED,True,31,7,4,https://github.com/icedevml,ipt: implement CATCHALL_BREAKPOINT trap type,2,[],https://github.com/tklengyel/drakvuf/pull/988,https://github.com/icedevml,5,https://github.com/tklengyel/drakvuf/pull/988#issuecomment-692106230,"Because for the IPT we need to inject a special PTWRITE packet whenever a DRAKVUF breakpoint is hit, the IPT plugin needs to have ability to subscribe to all breakpoints. It doesn't need any special insight about what other plugins do, but it needs such kind of event to properly synchronize the IPT logs.
This might look weird but I hope reasonable.","Or I would also be happy with something like ""ALL_BREAKPOINTS"" or ""CATCHALL_BREAKPOINT""

I've modified the name to CATCHALL_BREAKPOINT",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,988,2020-09-11T23:30:42Z,2020-09-15T19:59:34Z,2020-11-06T18:55:28Z,MERGED,True,31,7,4,https://github.com/icedevml,ipt: implement CATCHALL_BREAKPOINT trap type,2,[],https://github.com/tklengyel/drakvuf/pull/988,https://github.com/icedevml,6,https://github.com/tklengyel/drakvuf/pull/988#issuecomment-692666208,"Because for the IPT we need to inject a special PTWRITE packet whenever a DRAKVUF breakpoint is hit, the IPT plugin needs to have ability to subscribe to all breakpoints. It doesn't need any special insight about what other plugins do, but it needs such kind of event to properly synchronize the IPT logs.
This might look weird but I hope reasonable.",this one is ready,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,988,2020-09-11T23:30:42Z,2020-09-15T19:59:34Z,2020-11-06T18:55:28Z,MERGED,True,31,7,4,https://github.com/icedevml,ipt: implement CATCHALL_BREAKPOINT trap type,2,[],https://github.com/tklengyel/drakvuf/pull/988,https://github.com/icedevml,7,https://github.com/tklengyel/drakvuf/pull/988#issuecomment-692907509,"Because for the IPT we need to inject a special PTWRITE packet whenever a DRAKVUF breakpoint is hit, the IPT plugin needs to have ability to subscribe to all breakpoints. It doesn't need any special insight about what other plugins do, but it needs such kind of event to properly synchronize the IPT logs.
This might look weird but I hope reasonable.",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,990,2020-09-12T14:55:35Z,2020-09-12T15:32:39Z,2020-09-12T15:32:42Z,MERGED,True,14,17,3,https://github.com/tklengyel,Use pkgconfig to find Xen libraries,2,[],https://github.com/tklengyel/drakvuf/pull/990,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/990,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,992,2020-09-12T23:39:21Z,2020-09-13T00:21:24Z,2020-09-13T00:21:27Z,MERGED,True,0,2,1,https://github.com/tklengyel,Remove redundant assignment in libinjector,1,[],https://github.com/tklengyel/drakvuf/pull/992,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/992,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,992,2020-09-12T23:39:21Z,2020-09-13T00:21:24Z,2020-09-13T00:21:27Z,MERGED,True,0,2,1,https://github.com/tklengyel,Remove redundant assignment in libinjector,1,[],https://github.com/tklengyel/drakvuf/pull/992,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/992#issuecomment-691574906,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,993,2020-09-12T23:47:22Z,2020-09-13T00:34:03Z,2020-09-13T00:34:06Z,MERGED,True,0,3,1,https://github.com/tklengyel,Remove redundant variable from memdump,1,[],https://github.com/tklengyel/drakvuf/pull/993,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/993,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,994,2020-09-12T23:59:27Z,2020-09-13T01:44:01Z,2020-09-13T01:44:04Z,MERGED,True,6,3,1,https://github.com/tklengyel,Remove redundant assignment in procdump,2,[],https://github.com/tklengyel/drakvuf/pull/994,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/994,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,996,2020-09-14T23:56:38Z,2020-09-15T16:09:38Z,2020-09-17T01:00:52Z,MERGED,True,59,120,3,https://github.com/tklengyel,Move travis to Focal,2,[],https://github.com/tklengyel/drakvuf/pull/996,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/996,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,996,2020-09-14T23:56:38Z,2020-09-15T16:09:38Z,2020-09-17T01:00:52Z,MERGED,True,59,120,3,https://github.com/tklengyel,Move travis to Focal,2,[],https://github.com/tklengyel/drakvuf/pull/996,https://github.com/icedevml,2,https://github.com/tklengyel/drakvuf/pull/996#issuecomment-692389703,,If you remove existing export ... from the travis.yml then you need to add sudo before each make install.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,996,2020-09-14T23:56:38Z,2020-09-15T16:09:38Z,2020-09-17T01:00:52Z,MERGED,True,59,120,3,https://github.com/tklengyel,Move travis to Focal,2,[],https://github.com/tklengyel/drakvuf/pull/996,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/996#issuecomment-692810008,,"Well, I can't get coverity to work right so I'm giving up on it. Once clang-10 becomes the default we can revisit enabling coverity.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,996,2020-09-14T23:56:38Z,2020-09-15T16:09:38Z,2020-09-17T01:00:52Z,MERGED,True,59,120,3,https://github.com/tklengyel,Move travis to Focal,2,[],https://github.com/tklengyel/drakvuf/pull/996,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/996#issuecomment-692827633,,"It's weird with this Coverity, but thanks for putting huge effort into CI upgrade!",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,997,2020-09-15T10:07:26Z,2020-09-15T19:58:37Z,2020-10-26T05:52:02Z,MERGED,True,129,0,1,https://github.com/skvl,procmon: hook NtCreateProcessEx,1,[],https://github.com/tklengyel/drakvuf/pull/997,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/997,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,997,2020-09-15T10:07:26Z,2020-09-15T19:58:37Z,2020-10-26T05:52:02Z,MERGED,True,129,0,1,https://github.com/skvl,procmon: hook NtCreateProcessEx,1,[],https://github.com/tklengyel/drakvuf/pull/997,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/997#issuecomment-692844037,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,997,2020-09-15T10:07:26Z,2020-09-15T19:58:37Z,2020-10-26T05:52:02Z,MERGED,True,129,0,1,https://github.com/skvl,procmon: hook NtCreateProcessEx,1,[],https://github.com/tklengyel/drakvuf/pull/997,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/997#issuecomment-692844059,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,998,2020-09-15T10:42:10Z,2020-09-23T23:16:42Z,2020-09-23T23:16:42Z,MERGED,True,61,3,4,https://github.com/icedevml,ipt: implement IPT functions in libdrakvuf,2,[],https://github.com/tklengyel/drakvuf/pull/998,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/998,Provide API in libdrakvuf such that plugins could interact with Intel Processor Trace feature.,Provide API in libdrakvuf such that plugins could interact with Intel Processor Trace feature.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,998,2020-09-15T10:42:10Z,2020-09-23T23:16:42Z,2020-09-23T23:16:42Z,MERGED,True,61,3,4,https://github.com/icedevml,ipt: implement IPT functions in libdrakvuf,2,[],https://github.com/tklengyel/drakvuf/pull/998,https://github.com/icedevml,2,https://github.com/tklengyel/drakvuf/pull/998#issuecomment-693430346,Provide API in libdrakvuf such that plugins could interact with Intel Processor Trace feature.,ready,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,998,2020-09-15T10:42:10Z,2020-09-23T23:16:42Z,2020-09-23T23:16:42Z,MERGED,True,61,3,4,https://github.com/icedevml,ipt: implement IPT functions in libdrakvuf,2,[],https://github.com/tklengyel/drakvuf/pull/998,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/998#issuecomment-695204372,Provide API in libdrakvuf such that plugins could interact with Intel Processor Trace feature.,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,998,2020-09-15T10:42:10Z,2020-09-23T23:16:42Z,2020-09-23T23:16:42Z,MERGED,True,61,3,4,https://github.com/icedevml,ipt: implement IPT functions in libdrakvuf,2,[],https://github.com/tklengyel/drakvuf/pull/998,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/998#issuecomment-695260107,Provide API in libdrakvuf such that plugins could interact with Intel Processor Trace feature.,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,998,2020-09-15T10:42:10Z,2020-09-23T23:16:42Z,2020-09-23T23:16:42Z,MERGED,True,61,3,4,https://github.com/icedevml,ipt: implement IPT functions in libdrakvuf,2,[],https://github.com/tklengyel/drakvuf/pull/998,https://github.com/icedevml,5,https://github.com/tklengyel/drakvuf/pull/998#issuecomment-695277168,Provide API in libdrakvuf such that plugins could interact with Intel Processor Trace feature.,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,999,2020-09-15T11:01:04Z,2020-09-22T21:10:48Z,2020-10-26T05:51:06Z,MERGED,True,47,26,11,https://github.com/skvl,libusermode: stop print addresses of string arguments,2,[],https://github.com/tklengyel/drakvuf/pull/999,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/999,This unifies the output of libusermode with other plugins where we print only values but no addresses,This unifies the output of libusermode with other plugins where we print only values but no addresses,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,999,2020-09-15T11:01:04Z,2020-09-22T21:10:48Z,2020-10-26T05:51:06Z,MERGED,True,47,26,11,https://github.com/skvl,libusermode: stop print addresses of string arguments,2,[],https://github.com/tklengyel/drakvuf/pull/999,https://github.com/skvl,2,https://github.com/tklengyel/drakvuf/pull/999#issuecomment-692642578,This unifies the output of libusermode with other plugins where we print only values but no addresses,@tklengyel @icedevml I think this makes the output of apimon more clear.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,999,2020-09-15T11:01:04Z,2020-09-22T21:10:48Z,2020-10-26T05:51:06Z,MERGED,True,47,26,11,https://github.com/skvl,libusermode: stop print addresses of string arguments,2,[],https://github.com/tklengyel/drakvuf/pull/999,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/999#issuecomment-692648204,This unifies the output of libusermode with other plugins where we print only values but no addresses,"IMHO sometimes pointers are also useful, especially when the string looks weird&corrupted.
Btw. sometimes there are some corrupted/uninitialized strings which result in printing some invalid characters, I think it would be good to change the string printing algorithm in such way that printable ASCII and basic UTF-16 would be printed literally and all the remaining characters would be printed as \x12 etc. I've seen this in some other sandboxes and I think this format is a good compromise. It's both easy readable to humans and could be easily un-escaped programatically.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,999,2020-09-15T11:01:04Z,2020-09-22T21:10:48Z,2020-10-26T05:51:06Z,MERGED,True,47,26,11,https://github.com/skvl,libusermode: stop print addresses of string arguments,2,[],https://github.com/tklengyel/drakvuf/pull/999,https://github.com/drakvuf-jenkins,4,https://github.com/tklengyel/drakvuf/pull/999#issuecomment-692648223,This unifies the output of libusermode with other plugins where we print only values but no addresses,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,999,2020-09-15T11:01:04Z,2020-09-22T21:10:48Z,2020-10-26T05:51:06Z,MERGED,True,47,26,11,https://github.com/skvl,libusermode: stop print addresses of string arguments,2,[],https://github.com/tklengyel/drakvuf/pull/999,https://github.com/skvl,5,https://github.com/tklengyel/drakvuf/pull/999#issuecomment-692683189,This unifies the output of libusermode with other plugins where we print only values but no addresses,@icedevml do you think that we should add some extra argument to drakvuf (e.g. --libusermode-print-strings-without-addresses)?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,999,2020-09-15T11:01:04Z,2020-09-22T21:10:48Z,2020-10-26T05:51:06Z,MERGED,True,47,26,11,https://github.com/skvl,libusermode: stop print addresses of string arguments,2,[],https://github.com/tklengyel/drakvuf/pull/999,https://github.com/icedevml,6,https://github.com/tklengyel/drakvuf/pull/999#issuecomment-692685258,This unifies the output of libusermode with other plugins where we print only values but no addresses,@skvl seems OK to me,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,999,2020-09-15T11:01:04Z,2020-09-22T21:10:48Z,2020-10-26T05:51:06Z,MERGED,True,47,26,11,https://github.com/skvl,libusermode: stop print addresses of string arguments,2,[],https://github.com/tklengyel/drakvuf/pull/999,https://github.com/skvl,7,https://github.com/tklengyel/drakvuf/pull/999#issuecomment-692786112,This unifies the output of libusermode with other plugins where we print only values but no addresses,@icedevml done!,True,{'THUMBS_UP': ['https://github.com/icedevml']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,999,2020-09-15T11:01:04Z,2020-09-22T21:10:48Z,2020-10-26T05:51:06Z,MERGED,True,47,26,11,https://github.com/skvl,libusermode: stop print addresses of string arguments,2,[],https://github.com/tklengyel/drakvuf/pull/999,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/999#issuecomment-692844806,This unifies the output of libusermode with other plugins where we print only values but no addresses,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,999,2020-09-15T11:01:04Z,2020-09-22T21:10:48Z,2020-10-26T05:51:06Z,MERGED,True,47,26,11,https://github.com/skvl,libusermode: stop print addresses of string arguments,2,[],https://github.com/tklengyel/drakvuf/pull/999,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/999#issuecomment-692948598,This unifies the output of libusermode with other plugins where we print only values but no addresses,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,999,2020-09-15T11:01:04Z,2020-09-22T21:10:48Z,2020-10-26T05:51:06Z,MERGED,True,47,26,11,https://github.com/skvl,libusermode: stop print addresses of string arguments,2,[],https://github.com/tklengyel/drakvuf/pull/999,https://github.com/skvl,10,https://github.com/tklengyel/drakvuf/pull/999#issuecomment-694918118,This unifies the output of libusermode with other plugins where we print only values but no addresses,@tklengyel @icedevml I've rebased the branch,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,999,2020-09-15T11:01:04Z,2020-09-22T21:10:48Z,2020-10-26T05:51:06Z,MERGED,True,47,26,11,https://github.com/skvl,libusermode: stop print addresses of string arguments,2,[],https://github.com/tklengyel/drakvuf/pull/999,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/999#issuecomment-694920723,This unifies the output of libusermode with other plugins where we print only values but no addresses,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,999,2020-09-15T11:01:04Z,2020-09-22T21:10:48Z,2020-10-26T05:51:06Z,MERGED,True,47,26,11,https://github.com/skvl,libusermode: stop print addresses of string arguments,2,[],https://github.com/tklengyel/drakvuf/pull/999,https://github.com/skvl,12,https://github.com/tklengyel/drakvuf/pull/999#issuecomment-696060937,This unifies the output of libusermode with other plugins where we print only values but no addresses,@tklengyel @icedevml I've rebased the branch,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,999,2020-09-15T11:01:04Z,2020-09-22T21:10:48Z,2020-10-26T05:51:06Z,MERGED,True,47,26,11,https://github.com/skvl,libusermode: stop print addresses of string arguments,2,[],https://github.com/tklengyel/drakvuf/pull/999,https://github.com/skvl,13,https://github.com/tklengyel/drakvuf/pull/999#issuecomment-696704474,This unifies the output of libusermode with other plugins where we print only values but no addresses,@tklengyel @icedevml what's the issue with the PR?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,999,2020-09-15T11:01:04Z,2020-09-22T21:10:48Z,2020-10-26T05:51:06Z,MERGED,True,47,26,11,https://github.com/skvl,libusermode: stop print addresses of string arguments,2,[],https://github.com/tklengyel/drakvuf/pull/999,https://github.com/tklengyel,14,https://github.com/tklengyel/drakvuf/pull/999#issuecomment-696728727,This unifies the output of libusermode with other plugins where we print only values but no addresses,"LGTM, would like a +1 from @icedevml as well since he had some requests on the PR earlier",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,999,2020-09-15T11:01:04Z,2020-09-22T21:10:48Z,2020-10-26T05:51:06Z,MERGED,True,47,26,11,https://github.com/skvl,libusermode: stop print addresses of string arguments,2,[],https://github.com/tklengyel/drakvuf/pull/999,https://github.com/skvl,15,https://github.com/tklengyel/drakvuf/pull/999#issuecomment-696761486,This unifies the output of libusermode with other plugins where we print only values but no addresses,@tklengyel I have got +1 from @icedevml already. Look comment #999 (comment),True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,999,2020-09-15T11:01:04Z,2020-09-22T21:10:48Z,2020-10-26T05:51:06Z,MERGED,True,47,26,11,https://github.com/skvl,libusermode: stop print addresses of string arguments,2,[],https://github.com/tklengyel/drakvuf/pull/999,https://github.com/tklengyel,16,https://github.com/tklengyel/drakvuf/pull/999#issuecomment-696805552,This unifies the output of libusermode with other plugins where we print only values but no addresses,"Well, a thumbs up is a bit ambiguous, I would prefer a written +1 :) I don't think there is any issue here so this is more of a formality just to make sure he is happy with all the changes.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,999,2020-09-15T11:01:04Z,2020-09-22T21:10:48Z,2020-10-26T05:51:06Z,MERGED,True,47,26,11,https://github.com/skvl,libusermode: stop print addresses of string arguments,2,[],https://github.com/tklengyel/drakvuf/pull/999,https://github.com/icedevml,17,https://github.com/tklengyel/drakvuf/pull/999#issuecomment-696944169,This unifies the output of libusermode with other plugins where we print only values but no addresses,As there is a cmd line switch which would fall back to the old behaviour I assume it's OK; LGTM,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,999,2020-09-15T11:01:04Z,2020-09-22T21:10:48Z,2020-10-26T05:51:06Z,MERGED,True,47,26,11,https://github.com/skvl,libusermode: stop print addresses of string arguments,2,[],https://github.com/tklengyel/drakvuf/pull/999,https://github.com/icedevml,18,https://github.com/tklengyel/drakvuf/pull/999#issuecomment-696944532,This unifies the output of libusermode with other plugins where we print only values but no addresses,thanks for being extra cautious about this :),True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1000,2020-09-15T11:21:38Z,2021-04-13T19:02:01Z,2021-04-13T19:02:24Z,CLOSED,False,710,6,11,https://github.com/icedevml,ipt: implement Intel Processor Trace plugin,6,[],https://github.com/tklengyel/drakvuf/pull/1000,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/1000,"Work in progress: Implement a DRAKVUF plugin to interact with Intel Processor Trace feature exposed by Xen.
As of now, requires special Xen version ( https://github.com/icedevml/xen/commits/ipt-patch-v7d ). Changes in Xen will be upstreamed in the future.","Work in progress: Implement a DRAKVUF plugin to interact with Intel Processor Trace feature exposed by Xen.
As of now, requires special Xen version ( https://github.com/icedevml/xen/commits/ipt-patch-v7d ). Changes in Xen will be upstreamed in the future.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1000,2020-09-15T11:21:38Z,2021-04-13T19:02:01Z,2021-04-13T19:02:24Z,CLOSED,False,710,6,11,https://github.com/icedevml,ipt: implement Intel Processor Trace plugin,6,[],https://github.com/tklengyel/drakvuf/pull/1000,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/1000#issuecomment-695125827,"Work in progress: Implement a DRAKVUF plugin to interact with Intel Processor Trace feature exposed by Xen.
As of now, requires special Xen version ( https://github.com/icedevml/xen/commits/ipt-patch-v7d ). Changes in Xen will be upstreamed in the future.",Btw I just noticed that this is PR #1000 ! 🥇 🍾 🎉,True,"{'HOORAY': ['https://github.com/icedevml', 'https://github.com/BonusPlay']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1000,2020-09-15T11:21:38Z,2021-04-13T19:02:01Z,2021-04-13T19:02:24Z,CLOSED,False,710,6,11,https://github.com/icedevml,ipt: implement Intel Processor Trace plugin,6,[],https://github.com/tklengyel/drakvuf/pull/1000,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/1000#issuecomment-703315969,"Work in progress: Implement a DRAKVUF plugin to interact with Intel Processor Trace feature exposed by Xen.
As of now, requires special Xen version ( https://github.com/icedevml/xen/commits/ipt-patch-v7d ). Changes in Xen will be upstreamed in the future.",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1000,2020-09-15T11:21:38Z,2021-04-13T19:02:01Z,2021-04-13T19:02:24Z,CLOSED,False,710,6,11,https://github.com/icedevml,ipt: implement Intel Processor Trace plugin,6,[],https://github.com/tklengyel/drakvuf/pull/1000,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/1000#issuecomment-712507357,"Work in progress: Implement a DRAKVUF plugin to interact with Intel Processor Trace feature exposed by Xen.
As of now, requires special Xen version ( https://github.com/icedevml/xen/commits/ipt-patch-v7d ). Changes in Xen will be upstreamed in the future.",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1000,2020-09-15T11:21:38Z,2021-04-13T19:02:01Z,2021-04-13T19:02:24Z,CLOSED,False,710,6,11,https://github.com/icedevml,ipt: implement Intel Processor Trace plugin,6,[],https://github.com/tklengyel/drakvuf/pull/1000,https://github.com/icedevml,5,https://github.com/tklengyel/drakvuf/pull/1000#issuecomment-712531072,"Work in progress: Implement a DRAKVUF plugin to interact with Intel Processor Trace feature exposed by Xen.
As of now, requires special Xen version ( https://github.com/icedevml/xen/commits/ipt-patch-v7d ). Changes in Xen will be upstreamed in the future.",@tklengyel Could you point out what is the issue with Valgrind here? I don't see Valgrind results tab which usually appeared in such situation.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1000,2020-09-15T11:21:38Z,2021-04-13T19:02:01Z,2021-04-13T19:02:24Z,CLOSED,False,710,6,11,https://github.com/icedevml,ipt: implement Intel Processor Trace plugin,6,[],https://github.com/tklengyel/drakvuf/pull/1000,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1000#issuecomment-712534887,"Work in progress: Implement a DRAKVUF plugin to interact with Intel Processor Trace feature exposed by Xen.
As of now, requires special Xen version ( https://github.com/icedevml/xen/commits/ipt-patch-v7d ). Changes in Xen will be upstreamed in the future.","Not sure, let's just re-run it.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1000,2020-09-15T11:21:38Z,2021-04-13T19:02:01Z,2021-04-13T19:02:24Z,CLOSED,False,710,6,11,https://github.com/icedevml,ipt: implement Intel Processor Trace plugin,6,[],https://github.com/tklengyel/drakvuf/pull/1000,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/1000#issuecomment-712534921,"Work in progress: Implement a DRAKVUF plugin to interact with Intel Processor Trace feature exposed by Xen.
As of now, requires special Xen version ( https://github.com/icedevml/xen/commits/ipt-patch-v7d ). Changes in Xen will be upstreamed in the future.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1000,2020-09-15T11:21:38Z,2021-04-13T19:02:01Z,2021-04-13T19:02:24Z,CLOSED,False,710,6,11,https://github.com/icedevml,ipt: implement Intel Processor Trace plugin,6,[],https://github.com/tklengyel/drakvuf/pull/1000,https://github.com/icedevml,8,https://github.com/tklengyel/drakvuf/pull/1000#issuecomment-712542356,"Work in progress: Implement a DRAKVUF plugin to interact with Intel Processor Trace feature exposed by Xen.
As of now, requires special Xen version ( https://github.com/icedevml/xen/commits/ipt-patch-v7d ). Changes in Xen will be upstreamed in the future.","hmm, I've messed sth completely, will fix tomorrow",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1000,2020-09-15T11:21:38Z,2021-04-13T19:02:01Z,2021-04-13T19:02:24Z,CLOSED,False,710,6,11,https://github.com/icedevml,ipt: implement Intel Processor Trace plugin,6,[],https://github.com/tklengyel/drakvuf/pull/1000,https://github.com/icedevml,9,https://github.com/tklengyel/drakvuf/pull/1000#issuecomment-712792080,"Work in progress: Implement a DRAKVUF plugin to interact with Intel Processor Trace feature exposed by Xen.
As of now, requires special Xen version ( https://github.com/icedevml/xen/commits/ipt-patch-v7d ). Changes in Xen will be upstreamed in the future.",@tklengyel Fixed and works locally. Could you look at Valgrind? Still no meaningful output in the logs.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1000,2020-09-15T11:21:38Z,2021-04-13T19:02:01Z,2021-04-13T19:02:24Z,CLOSED,False,710,6,11,https://github.com/icedevml,ipt: implement Intel Processor Trace plugin,6,[],https://github.com/tklengyel/drakvuf/pull/1000,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/1000#issuecomment-712800919,"Work in progress: Implement a DRAKVUF plugin to interact with Intel Processor Trace feature exposed by Xen.
As of now, requires special Xen version ( https://github.com/icedevml/xen/commits/ipt-patch-v7d ). Changes in Xen will be upstreamed in the future.",I think the problem might be that the new hypercalls for PT don't have Valgrind definitions. Will need to add those for Valgrind to be able to track those properly.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1000,2020-09-15T11:21:38Z,2021-04-13T19:02:01Z,2021-04-13T19:02:24Z,CLOSED,False,710,6,11,https://github.com/icedevml,ipt: implement Intel Processor Trace plugin,6,[],https://github.com/tklengyel/drakvuf/pull/1000,https://github.com/icedevml,11,https://github.com/tklengyel/drakvuf/pull/1000#issuecomment-712843499,"Work in progress: Implement a DRAKVUF plugin to interact with Intel Processor Trace feature exposed by Xen.
As of now, requires special Xen version ( https://github.com/icedevml/xen/commits/ipt-patch-v7d ). Changes in Xen will be upstreamed in the future.","I think the problem might be that the new hypercalls for PT don't have Valgrind definitions. Will need to add those for Valgrind to be able to track those properly.

Though these are not compiled in by default? So it shouldn't confuse Valgrind?
I've also removed Xen submodule change (guess we don't want to ship custom Xen by default), but it didn't help.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1000,2020-09-15T11:21:38Z,2021-04-13T19:02:01Z,2021-04-13T19:02:24Z,CLOSED,False,710,6,11,https://github.com/icedevml,ipt: implement Intel Processor Trace plugin,6,[],https://github.com/tklengyel/drakvuf/pull/1000,https://github.com/icedevml,12,https://github.com/tklengyel/drakvuf/pull/1000#issuecomment-715908311,"Work in progress: Implement a DRAKVUF plugin to interact with Intel Processor Trace feature exposed by Xen.
As of now, requires special Xen version ( https://github.com/icedevml/xen/commits/ipt-patch-v7d ). Changes in Xen will be upstreamed in the future.",@tklengyel do you have any error logs from Valgrind or some other clue about that the problem might be?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1000,2020-09-15T11:21:38Z,2021-04-13T19:02:01Z,2021-04-13T19:02:24Z,CLOSED,False,710,6,11,https://github.com/icedevml,ipt: implement Intel Processor Trace plugin,6,[],https://github.com/tklengyel/drakvuf/pull/1000,https://github.com/tklengyel,13,https://github.com/tklengyel/drakvuf/pull/1000#issuecomment-715962907,"Work in progress: Implement a DRAKVUF plugin to interact with Intel Processor Trace feature exposed by Xen.
As of now, requires special Xen version ( https://github.com/icedevml/xen/commits/ipt-patch-v7d ). Changes in Xen will be upstreamed in the future.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1000,2020-09-15T11:21:38Z,2021-04-13T19:02:01Z,2021-04-13T19:02:24Z,CLOSED,False,710,6,11,https://github.com/icedevml,ipt: implement Intel Processor Trace plugin,6,[],https://github.com/tklengyel/drakvuf/pull/1000,https://github.com/tklengyel,14,https://github.com/tklengyel/drakvuf/pull/1000#issuecomment-715967202,"Work in progress: Implement a DRAKVUF plugin to interact with Intel Processor Trace feature exposed by Xen.
As of now, requires special Xen version ( https://github.com/icedevml/xen/commits/ipt-patch-v7d ). Changes in Xen will be upstreamed in the future.",Looks like valgrind is running out of memory and gets killed.,True,{'CONFUSED': ['https://github.com/icedevml']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1000,2020-09-15T11:21:38Z,2021-04-13T19:02:01Z,2021-04-13T19:02:24Z,CLOSED,False,710,6,11,https://github.com/icedevml,ipt: implement Intel Processor Trace plugin,6,[],https://github.com/tklengyel/drakvuf/pull/1000,https://github.com/tklengyel,15,https://github.com/tklengyel/drakvuf/pull/1000#issuecomment-715967920,"Work in progress: Implement a DRAKVUF plugin to interact with Intel Processor Trace feature exposed by Xen.
As of now, requires special Xen version ( https://github.com/icedevml/xen/commits/ipt-patch-v7d ). Changes in Xen will be upstreamed in the future.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1000,2020-09-15T11:21:38Z,2021-04-13T19:02:01Z,2021-04-13T19:02:24Z,CLOSED,False,710,6,11,https://github.com/icedevml,ipt: implement Intel Processor Trace plugin,6,[],https://github.com/tklengyel/drakvuf/pull/1000,https://github.com/tklengyel,16,https://github.com/tklengyel/drakvuf/pull/1000#issuecomment-715972172,"Work in progress: Implement a DRAKVUF plugin to interact with Intel Processor Trace feature exposed by Xen.
As of now, requires special Xen version ( https://github.com/icedevml/xen/commits/ipt-patch-v7d ). Changes in Xen will be upstreamed in the future.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1000,2020-09-15T11:21:38Z,2021-04-13T19:02:01Z,2021-04-13T19:02:24Z,CLOSED,False,710,6,11,https://github.com/icedevml,ipt: implement Intel Processor Trace plugin,6,[],https://github.com/tklengyel/drakvuf/pull/1000,https://github.com/icedevml,17,https://github.com/tklengyel/drakvuf/pull/1000#issuecomment-715985364,"Work in progress: Implement a DRAKVUF plugin to interact with Intel Processor Trace feature exposed by Xen.
As of now, requires special Xen version ( https://github.com/icedevml/xen/commits/ipt-patch-v7d ). Changes in Xen will be upstreamed in the future.","This PR is practically a no-op without ./configure --enable-ipt, so I'm pretty confused with Valgrind running out of memory, maybe it's an unrelated problem?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1000,2020-09-15T11:21:38Z,2021-04-13T19:02:01Z,2021-04-13T19:02:24Z,CLOSED,False,710,6,11,https://github.com/icedevml,ipt: implement Intel Processor Trace plugin,6,[],https://github.com/tklengyel/drakvuf/pull/1000,https://github.com/icedevml,18,https://github.com/tklengyel/drakvuf/pull/1000#issuecomment-715995803,"Work in progress: Implement a DRAKVUF plugin to interact with Intel Processor Trace feature exposed by Xen.
As of now, requires special Xen version ( https://github.com/icedevml/xen/commits/ipt-patch-v7d ). Changes in Xen will be upstreamed in the future.",there was a possible segfault in ipt plugin destructor but it also doesn't seem to be related (I've fixed this right now),True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1000,2020-09-15T11:21:38Z,2021-04-13T19:02:01Z,2021-04-13T19:02:24Z,CLOSED,False,710,6,11,https://github.com/icedevml,ipt: implement Intel Processor Trace plugin,6,[],https://github.com/tklengyel/drakvuf/pull/1000,https://github.com/tklengyel,19,https://github.com/tklengyel/drakvuf/pull/1000#issuecomment-716073013,"Work in progress: Implement a DRAKVUF plugin to interact with Intel Processor Trace feature exposed by Xen.
As of now, requires special Xen version ( https://github.com/icedevml/xen/commits/ipt-patch-v7d ). Changes in Xen will be upstreamed in the future.","==13037== Conditional jump or move depends on uninitialised value(s)
==13037==    at 0x324685: ipt::ipt(drakvuf*, ipt_config const*, output_format_t) (in /shared/drakvuf/src/drakvuf)
==13037==    by 0x1B823A: std::_MakeUniq<ipt>::__single_object std::make_unique<ipt, drakvuf*&, ipt_config*, output_format_t&>(drakvuf*&, ipt_config*&&, output_format_t&) (in /shared/drakvuf/src/drakvuf)
==13037==    by 0x1B4D86: drakvuf_plugins::start(drakvuf_plugin, plugins_options const*) (in /shared/drakvuf/src/drakvuf)
==13037==    by 0x1A204F: drakvuf_c::start_plugins(bool const*, plugins_options const*) (in /shared/drakvuf/src/drakvuf)
==13037==    by 0x1A1D0F: main (in /shared/drakvuf/src/drakvuf)
==13037==  Uninitialised value was created by a heap allocation
==13037==    at 0x4835DB2: operator new(unsigned long) (vg_replace_malloc.c:342)
==13037==    by 0x1B81EC: std::_MakeUniq<ipt>::__single_object std::make_unique<ipt, drakvuf*&, ipt_config*, output_format_t&>(drakvuf*&, ipt_config*&&, output_format_t&) (in /shared/drakvuf/src/drakvuf)
==13037==    by 0x1B4D86: drakvuf_plugins::start(drakvuf_plugin, plugins_options const*) (in /shared/drakvuf/src/drakvuf)
==13037==    by 0x1A204F: drakvuf_c::start_plugins(bool const*, plugins_options const*) (in /shared/drakvuf/src/drakvuf)
==13037==    by 0x1A1D0F: main (in /shared/drakvuf/src/drakvuf)
==13037== 
==13037== Invalid write of size 8
==13037==    at 0x3246AA: ipt::ipt(drakvuf*, ipt_config const*, output_format_t) (in /shared/drakvuf/src/drakvuf)
==13037==    by 0x1B823A: std::_MakeUniq<ipt>::__single_object std::make_unique<ipt, drakvuf*&, ipt_config*, output_format_t&>(drakvuf*&, ipt_config*&&, output_format_t&) (in /shared/drakvuf/src/drakvuf)
==13037==    by 0x1B4D86: drakvuf_plugins::start(drakvuf_plugin, plugins_options const*) (in /shared/drakvuf/src/drakvuf)
==13037==    by 0x1A204F: drakvuf_c::start_plugins(bool const*, plugins_options const*) (in /shared/drakvuf/src/drakvuf)
==13037==    by 0x1A1D0F: main (in /shared/drakvuf/src/drakvuf)
==13037==  Address 0x54311d8 is 0 bytes after a block of size 600 alloc'd
==13037==    at 0x4835DB2: operator new(unsigned long) (vg_replace_malloc.c:342)
==13037==    by 0x1B81EC: std::_MakeUniq<ipt>::__single_object std::make_unique<ipt, drakvuf*&, ipt_config*, output_format_t&>(drakvuf*&, ipt_config*&&, output_format_t&) (in /shared/drakvuf/src/drakvuf)
==13037==    by 0x1B4D86: drakvuf_plugins::start(drakvuf_plugin, plugins_options const*) (in /shared/drakvuf/src/drakvuf)
==13037==    by 0x1A204F: drakvuf_c::start_plugins(bool const*, plugins_options const*) (in /shared/drakvuf/src/drakvuf)
==13037==    by 0x1A1D0F: main (in /shared/drakvuf/src/drakvuf)
==13037== 
==13037== 
==13037== Process terminating with default action of signal 11 (SIGSEGV)
==13037==  Bad permissions for mapped region at address 0x5B31000
==13037==    at 0x3246AA: ipt::ipt(drakvuf*, ipt_config const*, output_format_t) (in /shared/drakvuf/src/drakvuf)
==13037==    by 0x1B823A: std::_MakeUniq<ipt>::__single_object std::make_unique<ipt, drakvuf*&, ipt_config*, output_format_t&>(drakvuf*&, ipt_config*&&, output_format_t&) (in /shared/drakvuf/src/drakvuf)
==13037==    by 0x1B4D86: drakvuf_plugins::start(drakvuf_plugin, plugins_options const*) (in /shared/drakvuf/src/drakvuf)
==13037==    by 0x1A204F: drakvuf_c::start_plugins(bool const*, plugins_options const*) (in /shared/drakvuf/src/drakvuf)
==13037==    by 0x1A1D0F: main (in /shared/drakvuf/src/drakvuf)
==13037== 
==13037== HEAP SUMMARY:
==13037==     in use at exit: 61,103,657 bytes in 527,072 blocks
==13037==   total heap usage: 740,243 allocs, 213,171 frees, 98,890,587 bytes allocated",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1000,2020-09-15T11:21:38Z,2021-04-13T19:02:01Z,2021-04-13T19:02:24Z,CLOSED,False,710,6,11,https://github.com/icedevml,ipt: implement Intel Processor Trace plugin,6,[],https://github.com/tklengyel/drakvuf/pull/1000,https://github.com/tklengyel,20,https://github.com/tklengyel/drakvuf/pull/1000#issuecomment-716073303,"Work in progress: Implement a DRAKVUF plugin to interact with Intel Processor Trace feature exposed by Xen.
As of now, requires special Xen version ( https://github.com/icedevml/xen/commits/ipt-patch-v7d ). Changes in Xen will be upstreamed in the future.","The above valgrind error was easily triggered with running just the default options (-d .. -r ..), I suggest you grab a newer version of valgrind and test with it locally too.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1000,2020-09-15T11:21:38Z,2021-04-13T19:02:01Z,2021-04-13T19:02:24Z,CLOSED,False,710,6,11,https://github.com/icedevml,ipt: implement Intel Processor Trace plugin,6,[],https://github.com/tklengyel/drakvuf/pull/1000,https://github.com/drakvuf-jenkins,21,https://github.com/tklengyel/drakvuf/pull/1000#issuecomment-728916542,"Work in progress: Implement a DRAKVUF plugin to interact with Intel Processor Trace feature exposed by Xen.
As of now, requires special Xen version ( https://github.com/icedevml/xen/commits/ipt-patch-v7d ). Changes in Xen will be upstreamed in the future.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1000,2020-09-15T11:21:38Z,2021-04-13T19:02:01Z,2021-04-13T19:02:24Z,CLOSED,False,710,6,11,https://github.com/icedevml,ipt: implement Intel Processor Trace plugin,6,[],https://github.com/tklengyel/drakvuf/pull/1000,https://github.com/icedevml,22,https://github.com/tklengyel/drakvuf/pull/1000#issuecomment-818982058,"Work in progress: Implement a DRAKVUF plugin to interact with Intel Processor Trace feature exposed by Xen.
As of now, requires special Xen version ( https://github.com/icedevml/xen/commits/ipt-patch-v7d ). Changes in Xen will be upstreamed in the future.",superseded by #1156,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1001,2020-09-15T11:45:17Z,2020-09-25T10:54:43Z,2020-11-06T18:55:22Z,MERGED,True,11,1,4,https://github.com/icedevml,ipt: implement event counter,1,[],https://github.com/tklengyel/drakvuf/pull/1001,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/1001,Assign an unique sequential ID to each trap occurrence. This number will be both printed in DRAKVUF's output (implemented by this PR) and injected into IPT logs in appropriate place (further PR will implement it). This will be used to synchronize DRAKVUF with Intel Processor Trace.,Assign an unique sequential ID to each trap occurrence. This number will be both printed in DRAKVUF's output (implemented by this PR) and injected into IPT logs in appropriate place (further PR will implement it). This will be used to synchronize DRAKVUF with Intel Processor Trace.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1001,2020-09-15T11:45:17Z,2020-09-25T10:54:43Z,2020-11-06T18:55:22Z,MERGED,True,11,1,4,https://github.com/icedevml,ipt: implement event counter,1,[],https://github.com/tklengyel/drakvuf/pull/1001,https://github.com/icedevml,2,https://github.com/tklengyel/drakvuf/pull/1001#issuecomment-692666219,Assign an unique sequential ID to each trap occurrence. This number will be both printed in DRAKVUF's output (implemented by this PR) and injected into IPT logs in appropriate place (further PR will implement it). This will be used to synchronize DRAKVUF with Intel Processor Trace.,this one is ready,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1001,2020-09-15T11:45:17Z,2020-09-25T10:54:43Z,2020-11-06T18:55:22Z,MERGED,True,11,1,4,https://github.com/icedevml,ipt: implement event counter,1,[],https://github.com/tklengyel/drakvuf/pull/1001,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1001#issuecomment-698020139,Assign an unique sequential ID to each trap occurrence. This number will be both printed in DRAKVUF's output (implemented by this PR) and injected into IPT logs in appropriate place (further PR will implement it). This will be used to synchronize DRAKVUF with Intel Processor Trace.,Will need a rebase,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1001,2020-09-15T11:45:17Z,2020-09-25T10:54:43Z,2020-11-06T18:55:22Z,MERGED,True,11,1,4,https://github.com/icedevml,ipt: implement event counter,1,[],https://github.com/tklengyel/drakvuf/pull/1001,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/1001#issuecomment-698239602,Assign an unique sequential ID to each trap occurrence. This number will be both printed in DRAKVUF's output (implemented by this PR) and injected into IPT logs in appropriate place (further PR will implement it). This will be used to synchronize DRAKVUF with Intel Processor Trace.,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1001,2020-09-15T11:45:17Z,2020-09-25T10:54:43Z,2020-11-06T18:55:22Z,MERGED,True,11,1,4,https://github.com/icedevml,ipt: implement event counter,1,[],https://github.com/tklengyel/drakvuf/pull/1001,https://github.com/icedevml,5,https://github.com/tklengyel/drakvuf/pull/1001#issuecomment-698254279,Assign an unique sequential ID to each trap occurrence. This number will be both printed in DRAKVUF's output (implemented by this PR) and injected into IPT logs in appropriate place (further PR will implement it). This will be used to synchronize DRAKVUF with Intel Processor Trace.,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1001,2020-09-15T11:45:17Z,2020-09-25T10:54:43Z,2020-11-06T18:55:22Z,MERGED,True,11,1,4,https://github.com/icedevml,ipt: implement event counter,1,[],https://github.com/tklengyel/drakvuf/pull/1001,https://github.com/icedevml,6,https://github.com/tklengyel/drakvuf/pull/1001#issuecomment-698267353,Assign an unique sequential ID to each trap occurrence. This number will be both printed in DRAKVUF's output (implemented by this PR) and injected into IPT logs in appropriate place (further PR will implement it). This will be used to synchronize DRAKVUF with Intel Processor Trace.,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1001,2020-09-15T11:45:17Z,2020-09-25T10:54:43Z,2020-11-06T18:55:22Z,MERGED,True,11,1,4,https://github.com/icedevml,ipt: implement event counter,1,[],https://github.com/tklengyel/drakvuf/pull/1001,https://github.com/icedevml,7,https://github.com/tklengyel/drakvuf/pull/1001#issuecomment-698307708,Assign an unique sequential ID to each trap occurrence. This number will be both printed in DRAKVUF's output (implemented by this PR) and injected into IPT logs in appropriate place (further PR will implement it). This will be used to synchronize DRAKVUF with Intel Processor Trace.,@tklengyel Done.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1002,2020-09-15T22:22:47Z,2020-09-16T00:03:48Z,2020-11-06T18:55:25Z,CLOSED,False,35,25,1,https://github.com/icedevml,Fix Coverity,1,[],https://github.com/tklengyel/drakvuf/pull/1002,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/1002,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1002,2020-09-15T22:22:47Z,2020-09-16T00:03:48Z,2020-11-06T18:55:25Z,CLOSED,False,35,25,1,https://github.com/icedevml,Fix Coverity,1,[],https://github.com/tklengyel/drakvuf/pull/1002,https://github.com/icedevml,2,https://github.com/tklengyel/drakvuf/pull/1002#issuecomment-693092604,,"I've tried to fix something here https://github.com/icedevml/drakvuf-coverity-test
but I can't get past >78% succesfully compiled units and during some units cov-internal-emit-clang  gets SIGSEGV. Giving up for now :(",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1002,2020-09-15T22:22:47Z,2020-09-16T00:03:48Z,2020-11-06T18:55:25Z,CLOSED,False,35,25,1,https://github.com/icedevml,Fix Coverity,1,[],https://github.com/tklengyel/drakvuf/pull/1002,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1002#issuecomment-693344530,,"Yeap, thats where I got stuck too. No clue what coverity is doing..",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1002,2020-09-15T22:22:47Z,2020-09-16T00:03:48Z,2020-11-06T18:55:25Z,CLOSED,False,35,25,1,https://github.com/icedevml,Fix Coverity,1,[],https://github.com/tklengyel/drakvuf/pull/1002,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/1002#issuecomment-693349797,,"This error pattern (SIGSEGV with backtrace leading to libc) also happens in some other projects that are using clang, I think this should be reported upstream to Coverity",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1002,2020-09-15T22:22:47Z,2020-09-16T00:03:48Z,2020-11-06T18:55:25Z,CLOSED,False,35,25,1,https://github.com/icedevml,Fix Coverity,1,[],https://github.com/tklengyel/drakvuf/pull/1002,https://github.com/icedevml,5,https://github.com/tklengyel/drakvuf/pull/1002#issuecomment-693350366,,I will send a bug report to Coverity,True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1003,2020-09-16T05:10:39Z,2020-09-16T11:51:22Z,2020-10-26T05:52:28Z,MERGED,True,2,1,1,https://github.com/skvl,procmon: print new PID for NtCreateProcessEx,1,[],https://github.com/tklengyel/drakvuf/pull/1003,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1003,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1003,2020-09-16T05:10:39Z,2020-09-16T11:51:22Z,2020-10-26T05:52:28Z,MERGED,True,2,1,1,https://github.com/skvl,procmon: print new PID for NtCreateProcessEx,1,[],https://github.com/tklengyel/drakvuf/pull/1003,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1003#issuecomment-693173791,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1003,2020-09-16T05:10:39Z,2020-09-16T11:51:22Z,2020-10-26T05:52:28Z,MERGED,True,2,1,1,https://github.com/skvl,procmon: print new PID for NtCreateProcessEx,1,[],https://github.com/tklengyel/drakvuf/pull/1003,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/1003#issuecomment-693301462,,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1004,2020-09-17T00:37:46Z,2020-09-17T00:41:09Z,2020-09-17T00:41:09Z,CLOSED,False,30,27,1,https://github.com/tklengyel,Re-enable coverity and fix sonarcloud,4,[],https://github.com/tklengyel/drakvuf/pull/1004,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1004,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1005,2020-09-17T00:58:07Z,2020-09-17T12:13:10Z,2020-09-17T12:13:14Z,MERGED,True,2,0,1,https://github.com/tklengyel,Fix sonar,1,[],https://github.com/tklengyel/drakvuf/pull/1005,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1005,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1006,2020-09-18T15:02:42Z,2020-09-27T12:03:53Z,2020-10-26T05:52:47Z,MERGED,True,587,0,8,https://github.com/skvl,rpcmon: add new plug-in,1,[],https://github.com/tklengyel/drakvuf/pull/1006,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1006,"This plug-in allows to trace NdrXxx family of functions from rpcrt4.dll.
This on-going work. Though I would like to share is as soon as possible to avoid re-base conflicts in the future.
This branch depends on #999","This plug-in allows to trace NdrXxx family of functions from rpcrt4.dll.
This on-going work. Though I would like to share is as soon as possible to avoid re-base conflicts in the future.
This branch depends on #999",True,"{'THUMBS_UP': ['https://github.com/tklengyel', 'https://github.com/icedevml']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1006,2020-09-18T15:02:42Z,2020-09-27T12:03:53Z,2020-10-26T05:52:47Z,MERGED,True,587,0,8,https://github.com/skvl,rpcmon: add new plug-in,1,[],https://github.com/tklengyel/drakvuf/pull/1006,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/1006#issuecomment-694921929,"This plug-in allows to trace NdrXxx family of functions from rpcrt4.dll.
This on-going work. Though I would like to share is as soon as possible to avoid re-base conflicts in the future.
This branch depends on #999",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1006,2020-09-18T15:02:42Z,2020-09-27T12:03:53Z,2020-10-26T05:52:47Z,MERGED,True,587,0,8,https://github.com/skvl,rpcmon: add new plug-in,1,[],https://github.com/tklengyel/drakvuf/pull/1006,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/1006#issuecomment-694921956,"This plug-in allows to trace NdrXxx family of functions from rpcrt4.dll.
This on-going work. Though I would like to share is as soon as possible to avoid re-base conflicts in the future.
This branch depends on #999",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1006,2020-09-18T15:02:42Z,2020-09-27T12:03:53Z,2020-10-26T05:52:47Z,MERGED,True,587,0,8,https://github.com/skvl,rpcmon: add new plug-in,1,[],https://github.com/tklengyel/drakvuf/pull/1006,https://github.com/skvl,4,https://github.com/tklengyel/drakvuf/pull/1006#issuecomment-696061065,"This plug-in allows to trace NdrXxx family of functions from rpcrt4.dll.
This on-going work. Though I would like to share is as soon as possible to avoid re-base conflicts in the future.
This branch depends on #999",@tklengyel @icedevml I've rebased the branch,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1006,2020-09-18T15:02:42Z,2020-09-27T12:03:53Z,2020-10-26T05:52:47Z,MERGED,True,587,0,8,https://github.com/skvl,rpcmon: add new plug-in,1,[],https://github.com/tklengyel/drakvuf/pull/1006,https://github.com/skvl,5,https://github.com/tklengyel/drakvuf/pull/1006#issuecomment-698146302,"This plug-in allows to trace NdrXxx family of functions from rpcrt4.dll.
This on-going work. Though I would like to share is as soon as possible to avoid re-base conflicts in the future.
This branch depends on #999",@tklengyel @icedevml I have re-based the after #999. Let me know if there are some issues with it.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1006,2020-09-18T15:02:42Z,2020-09-27T12:03:53Z,2020-10-26T05:52:47Z,MERGED,True,587,0,8,https://github.com/skvl,rpcmon: add new plug-in,1,[],https://github.com/tklengyel/drakvuf/pull/1006,https://github.com/skvl,6,https://github.com/tklengyel/drakvuf/pull/1006#issuecomment-699009632,"This plug-in allows to trace NdrXxx family of functions from rpcrt4.dll.
This on-going work. Though I would like to share is as soon as possible to avoid re-base conflicts in the future.
This branch depends on #999",@tklengyel @icedevml what's the matter with the PR?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1007,2020-09-19T12:10:03Z,2020-09-19T13:55:20Z,2020-09-19T13:55:20Z,MERGED,True,15,15,4,https://github.com/icedevml,fix usage of signed int in vcpu arguments,1,[],https://github.com/tklengyel/drakvuf/pull/1007,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/1007,,,True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1007,2020-09-19T12:10:03Z,2020-09-19T13:55:20Z,2020-09-19T13:55:20Z,MERGED,True,15,15,4,https://github.com/icedevml,fix usage of signed int in vcpu arguments,1,[],https://github.com/tklengyel/drakvuf/pull/1007,https://github.com/icedevml,2,https://github.com/tklengyel/drakvuf/pull/1007#issuecomment-695211732,,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1008,2020-09-19T17:16:48Z,2020-09-19T17:30:55Z,2020-09-19T17:30:58Z,MERGED,True,43,76,1,https://github.com/tklengyel,Travis build caching,1,[],https://github.com/tklengyel/drakvuf/pull/1008,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1008,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1009,2020-09-21T15:14:57Z,2020-09-21T15:56:28Z,2020-09-21T15:56:31Z,MERGED,True,28,23,1,https://github.com/tklengyel,Fix coverity,1,[],https://github.com/tklengyel/drakvuf/pull/1009,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1009,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1010,2020-09-23T12:59:12Z,2020-10-05T23:47:03Z,2020-10-26T05:51:50Z,MERGED,True,2,0,1,https://github.com/skvl,procdump: fix endless loop for Windows 10,1,[],https://github.com/tklengyel/drakvuf/pull/1010,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1010,"The error has been introduced in bd35d25.
The skip variable is useless here but makes static checkers happy. The
main purpose here is changing the value of ptes_to_dump.","The error has been introduced in bd35d25.
The skip variable is useless here but makes static checkers happy. The
main purpose here is changing the value of ptes_to_dump.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1010,2020-09-23T12:59:12Z,2020-10-05T23:47:03Z,2020-10-26T05:51:50Z,MERGED,True,2,0,1,https://github.com/skvl,procdump: fix endless loop for Windows 10,1,[],https://github.com/tklengyel/drakvuf/pull/1010,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1010#issuecomment-697347890,"The error has been introduced in bd35d25.
The skip variable is useless here but makes static checkers happy. The
main purpose here is changing the value of ptes_to_dump.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1010,2020-09-23T12:59:12Z,2020-10-05T23:47:03Z,2020-10-26T05:51:50Z,MERGED,True,2,0,1,https://github.com/skvl,procdump: fix endless loop for Windows 10,1,[],https://github.com/tklengyel/drakvuf/pull/1010,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1010#issuecomment-697405339,"The error has been introduced in bd35d25.
The skip variable is useless here but makes static checkers happy. The
main purpose here is changing the value of ptes_to_dump.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1010,2020-09-23T12:59:12Z,2020-10-05T23:47:03Z,2020-10-26T05:51:50Z,MERGED,True,2,0,1,https://github.com/skvl,procdump: fix endless loop for Windows 10,1,[],https://github.com/tklengyel/drakvuf/pull/1010,https://github.com/skvl,4,https://github.com/tklengyel/drakvuf/pull/1010#issuecomment-699010183,"The error has been introduced in bd35d25.
The skip variable is useless here but makes static checkers happy. The
main purpose here is changing the value of ptes_to_dump.",@tklengyel what's the matter with the PR? I have patched the error in my repo but it persist here.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1012,2020-09-23T23:59:22Z,2020-09-24T00:34:11Z,2020-09-24T00:34:14Z,MERGED,True,36,39,6,https://github.com/tklengyel,Fix various coverity issues,6,[],https://github.com/tklengyel/drakvuf/pull/1012,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1012,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1014,2020-09-24T07:57:09Z,2020-09-25T10:51:11Z,2020-10-26T05:52:07Z,MERGED,True,1,1,1,https://github.com/skvl,procmon: fix memory corruption,1,[],https://github.com/tklengyel/drakvuf/pull/1014,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1014,Fix #1013,Fix #1013,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1014,2020-09-24T07:57:09Z,2020-09-25T10:51:11Z,2020-10-26T05:52:07Z,MERGED,True,1,1,1,https://github.com/skvl,procmon: fix memory corruption,1,[],https://github.com/tklengyel/drakvuf/pull/1014,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1014#issuecomment-698182207,Fix #1013,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1014,2020-09-24T07:57:09Z,2020-09-25T10:51:11Z,2020-10-26T05:52:07Z,MERGED,True,1,1,1,https://github.com/skvl,procmon: fix memory corruption,1,[],https://github.com/tklengyel/drakvuf/pull/1014,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1014#issuecomment-698250199,Fix #1013,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1016,2020-09-27T01:06:02Z,2020-09-27T01:10:15Z,2020-09-27T01:10:18Z,MERGED,True,29,27,1,https://github.com/tklengyel,Use build stages in Travis,1,[],https://github.com/tklengyel/drakvuf/pull/1016,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1016,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1022,2020-09-30T18:56:51Z,2020-10-03T18:01:12Z,2020-10-21T12:57:42Z,MERGED,True,2,2,1,https://github.com/chivay,"apimon: Fix ""Extra"" data output formatting",1,[],https://github.com/tklengyel/drakvuf/pull/1022,https://github.com/chivay,1,https://github.com/tklengyel/drakvuf/pull/1022,"Use std::map instead of std::vector as printing data causes
unnecessary array ([]) to be created in JSON output.","Use std::map instead of std::vector as printing data causes
unnecessary array ([]) to be created in JSON output.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1022,2020-09-30T18:56:51Z,2020-10-03T18:01:12Z,2020-10-21T12:57:42Z,MERGED,True,2,2,1,https://github.com/chivay,"apimon: Fix ""Extra"" data output formatting",1,[],https://github.com/tklengyel/drakvuf/pull/1022,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1022#issuecomment-701580638,"Use std::map instead of std::vector as printing data causes
unnecessary array ([]) to be created in JSON output.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1022,2020-09-30T18:56:51Z,2020-10-03T18:01:12Z,2020-10-21T12:57:42Z,MERGED,True,2,2,1,https://github.com/chivay,"apimon: Fix ""Extra"" data output formatting",1,[],https://github.com/tklengyel/drakvuf/pull/1022,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/1022#issuecomment-701581667,"Use std::map instead of std::vector as printing data causes
unnecessary array ([]) to be created in JSON output.",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1024,2020-10-01T00:01:33Z,2020-10-01T23:03:07Z,2020-10-01T23:03:10Z,MERGED,True,6,4,1,https://github.com/tklengyel,Deprecate WMIMon plugin,1,[],https://github.com/tklengyel/drakvuf/pull/1024,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1024,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1025,2020-10-01T17:42:36Z,2020-10-01T19:49:22Z,2020-11-06T18:55:20Z,MERGED,True,0,3,1,https://github.com/icedevml,Fix bug in CATCHALL_BREAKPOINT creation,1,[],https://github.com/tklengyel/drakvuf/pull/1025,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/1025,"This condition
    if ( !drakvuf->catchall_breakpoint )
        return 0;
was added by mistake and is causing that CATCHALL_BREAKPOINT can not be used.","This condition
    if ( !drakvuf->catchall_breakpoint )
        return 0;
was added by mistake and is causing that CATCHALL_BREAKPOINT can not be used.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1025,2020-10-01T17:42:36Z,2020-10-01T19:49:22Z,2020-11-06T18:55:20Z,MERGED,True,0,3,1,https://github.com/icedevml,Fix bug in CATCHALL_BREAKPOINT creation,1,[],https://github.com/tklengyel/drakvuf/pull/1025,https://github.com/icedevml,2,https://github.com/tklengyel/drakvuf/pull/1025#issuecomment-702330291,"This condition
    if ( !drakvuf->catchall_breakpoint )
        return 0;
was added by mistake and is causing that CATCHALL_BREAKPOINT can not be used.",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1028,2020-10-06T00:12:17Z,2020-10-06T11:29:26Z,2020-10-06T11:29:26Z,MERGED,True,7,0,1,https://github.com/icedevml,Check if drakvuf-bundle is installed before applying /etc/default/grub.d/xen.cfg,1,[],https://github.com/tklengyel/drakvuf/pull/1028,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/1028,resolve #1027,resolve #1027,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1029,2020-10-07T10:29:21Z,2020-10-08T00:28:38Z,2020-10-08T00:28:38Z,MERGED,True,6,4,1,https://github.com/kscieslinski,Check for wow64 in breakpoint searchers,2,[],https://github.com/tklengyel/drakvuf/pull/1029,https://github.com/kscieslinski,1,https://github.com/tklengyel/drakvuf/pull/1029,"Note: I'm not so sure if this is correct fix as I'm not to familiar with this part of code.
When trying to add a usermode hook on return from function I've encountered an error in register_trap. It turned out that when running 32 bit sample, the breakpoint_by_dtb_searcher was reading 8 bytes from stack instead of expected 4 bytes (pointer width for 32 bit applications). Same issue occurs in breakpoint_by_pid_searcher.","Note: I'm not so sure if this is correct fix as I'm not to familiar with this part of code.
When trying to add a usermode hook on return from function I've encountered an error in register_trap. It turned out that when running 32 bit sample, the breakpoint_by_dtb_searcher was reading 8 bytes from stack instead of expected 4 bytes (pointer width for 32 bit applications). Same issue occurs in breakpoint_by_pid_searcher.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1029,2020-10-07T10:29:21Z,2020-10-08T00:28:38Z,2020-10-08T00:28:38Z,MERGED,True,6,4,1,https://github.com/kscieslinski,Check for wow64 in breakpoint searchers,2,[],https://github.com/tklengyel/drakvuf/pull/1029,https://github.com/icedevml,2,https://github.com/tklengyel/drakvuf/pull/1029#issuecomment-704990921,"Note: I'm not so sure if this is correct fix as I'm not to familiar with this part of code.
When trying to add a usermode hook on return from function I've encountered an error in register_trap. It turned out that when running 32 bit sample, the breakpoint_by_dtb_searcher was reading 8 bytes from stack instead of expected 4 bytes (pointer width for 32 bit applications). Same issue occurs in breakpoint_by_pid_searcher.",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1029,2020-10-07T10:29:21Z,2020-10-08T00:28:38Z,2020-10-08T00:28:38Z,MERGED,True,6,4,1,https://github.com/kscieslinski,Check for wow64 in breakpoint searchers,2,[],https://github.com/tklengyel/drakvuf/pull/1029,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1029#issuecomment-705255707,"Note: I'm not so sure if this is correct fix as I'm not to familiar with this part of code.
When trying to add a usermode hook on return from function I've encountered an error in register_trap. It turned out that when running 32 bit sample, the breakpoint_by_dtb_searcher was reading 8 bytes from stack instead of expected 4 bytes (pointer width for 32 bit applications). Same issue occurs in breakpoint_by_pid_searcher.",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1029,2020-10-07T10:29:21Z,2020-10-08T00:28:38Z,2020-10-08T00:28:38Z,MERGED,True,6,4,1,https://github.com/kscieslinski,Check for wow64 in breakpoint searchers,2,[],https://github.com/tklengyel/drakvuf/pull/1029,https://github.com/drakvuf-jenkins,4,https://github.com/tklengyel/drakvuf/pull/1029#issuecomment-705255723,"Note: I'm not so sure if this is correct fix as I'm not to familiar with this part of code.
When trying to add a usermode hook on return from function I've encountered an error in register_trap. It turned out that when running 32 bit sample, the breakpoint_by_dtb_searcher was reading 8 bytes from stack instead of expected 4 bytes (pointer width for 32 bit applications). Same issue occurs in breakpoint_by_pid_searcher.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1029,2020-10-07T10:29:21Z,2020-10-08T00:28:38Z,2020-10-08T00:28:38Z,MERGED,True,6,4,1,https://github.com/kscieslinski,Check for wow64 in breakpoint searchers,2,[],https://github.com/tklengyel/drakvuf/pull/1029,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1029#issuecomment-705255979,"Note: I'm not so sure if this is correct fix as I'm not to familiar with this part of code.
When trying to add a usermode hook on return from function I've encountered an error in register_trap. It turned out that when running 32 bit sample, the breakpoint_by_dtb_searcher was reading 8 bytes from stack instead of expected 4 bytes (pointer width for 32 bit applications). Same issue occurs in breakpoint_by_pid_searcher.","Jenkins was offline for a bit as I needed the box for some other stuff, I'll merge once the tests are done.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1030,2020-10-08T23:53:51Z,2020-10-09T23:29:39Z,2020-10-09T23:29:41Z,MERGED,True,4,4,1,https://github.com/tklengyel,Init linux_wrapper in filetracer,1,[],https://github.com/tklengyel/drakvuf/pull/1030,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1030,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1031,2020-10-09T06:25:52Z,2020-10-28T23:08:22Z,2020-10-30T16:58:15Z,MERGED,True,352,20,17,https://github.com/skvl,libinjector: make dump of injected process,6,[],https://github.com/tklengyel/drakvuf/pull/1031,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1031,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1031,2020-10-09T06:25:52Z,2020-10-28T23:08:22Z,2020-10-30T16:58:15Z,MERGED,True,352,20,17,https://github.com/skvl,libinjector: make dump of injected process,6,[],https://github.com/tklengyel/drakvuf/pull/1031,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1031#issuecomment-705995137,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1031,2020-10-09T06:25:52Z,2020-10-28T23:08:22Z,2020-10-30T16:58:15Z,MERGED,True,352,20,17,https://github.com/skvl,libinjector: make dump of injected process,6,[],https://github.com/tklengyel/drakvuf/pull/1031,https://github.com/skvl,3,https://github.com/tklengyel/drakvuf/pull/1031#issuecomment-706001740,,"About the error https://travis-ci.org/github/tklengyel/drakvuf/jobs/734197704#L478
There is no such case that load_file_to_memory() would be called from injector_terminate_on_win(). Though I will add a check into load_file_to_memory()",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1031,2020-10-09T06:25:52Z,2020-10-28T23:08:22Z,2020-10-30T16:58:15Z,MERGED,True,352,20,17,https://github.com/skvl,libinjector: make dump of injected process,6,[],https://github.com/tklengyel/drakvuf/pull/1031,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1031#issuecomment-706414039,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1031,2020-10-09T06:25:52Z,2020-10-28T23:08:22Z,2020-10-30T16:58:15Z,MERGED,True,352,20,17,https://github.com/skvl,libinjector: make dump of injected process,6,[],https://github.com/tklengyel/drakvuf/pull/1031,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1031#issuecomment-706444602,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1031,2020-10-09T06:25:52Z,2020-10-28T23:08:22Z,2020-10-30T16:58:15Z,MERGED,True,352,20,17,https://github.com/skvl,libinjector: make dump of injected process,6,[],https://github.com/tklengyel/drakvuf/pull/1031,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1031#issuecomment-707343958,,@skvl This will need to be rebased,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1031,2020-10-09T06:25:52Z,2020-10-28T23:08:22Z,2020-10-30T16:58:15Z,MERGED,True,352,20,17,https://github.com/skvl,libinjector: make dump of injected process,6,[],https://github.com/tklengyel/drakvuf/pull/1031,https://github.com/BonusPlay,7,https://github.com/tklengyel/drakvuf/pull/1031#issuecomment-715275444,,"I'm not sure that std::shared_ptr was needed here, as both procdump and injector could be the owners of the std::unordered_map (unless I missed something), but I guess using std::shared_ptr doesn't hurt too much.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1031,2020-10-09T06:25:52Z,2020-10-28T23:08:22Z,2020-10-30T16:58:15Z,MERGED,True,352,20,17,https://github.com/skvl,libinjector: make dump of injected process,6,[],https://github.com/tklengyel/drakvuf/pull/1031,https://github.com/skvl,8,https://github.com/tklengyel/drakvuf/pull/1031#issuecomment-715287870,,"@tklengyel, all checks passed and I think I have fixed everything from @BonusPlay (am I right?)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1031,2020-10-09T06:25:52Z,2020-10-28T23:08:22Z,2020-10-30T16:58:15Z,MERGED,True,352,20,17,https://github.com/skvl,libinjector: make dump of injected process,6,[],https://github.com/tklengyel/drakvuf/pull/1031,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/1031#issuecomment-715625024,,"@skvl looks like since I merged another PR first this will needs a rebase. Sorry about that, I really should have merged this one first.",True,{'THUMBS_UP': ['https://github.com/skvl']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1031,2020-10-09T06:25:52Z,2020-10-28T23:08:22Z,2020-10-30T16:58:15Z,MERGED,True,352,20,17,https://github.com/skvl,libinjector: make dump of injected process,6,[],https://github.com/tklengyel/drakvuf/pull/1031,https://github.com/skvl,10,https://github.com/tklengyel/drakvuf/pull/1031#issuecomment-716313406,,"@tklengyel, done!",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1031,2020-10-09T06:25:52Z,2020-10-28T23:08:22Z,2020-10-30T16:58:15Z,MERGED,True,352,20,17,https://github.com/skvl,libinjector: make dump of injected process,6,[],https://github.com/tklengyel/drakvuf/pull/1031,https://github.com/skvl,11,https://github.com/tklengyel/drakvuf/pull/1031#issuecomment-716321467,,I have deleted the branch...,True,{'LAUGH': ['https://github.com/BonusPlay']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1031,2020-10-09T06:25:52Z,2020-10-28T23:08:22Z,2020-10-30T16:58:15Z,MERGED,True,352,20,17,https://github.com/skvl,libinjector: make dump of injected process,6,[],https://github.com/tklengyel/drakvuf/pull/1031,https://github.com/skvl,12,https://github.com/tklengyel/drakvuf/pull/1031#issuecomment-717125146,,@tklengyel I have re-based it.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1031,2020-10-09T06:25:52Z,2020-10-28T23:08:22Z,2020-10-30T16:58:15Z,MERGED,True,352,20,17,https://github.com/skvl,libinjector: make dump of injected process,6,[],https://github.com/tklengyel/drakvuf/pull/1031,https://github.com/skvl,13,https://github.com/tklengyel/drakvuf/pull/1031#issuecomment-717138677,,"@tklengyel @icedevml is CI working?
The error windows10-2004-jenkins is an invalid domain identifier (rc=-6) looks weird to me.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1031,2020-10-09T06:25:52Z,2020-10-28T23:08:22Z,2020-10-30T16:58:15Z,MERGED,True,352,20,17,https://github.com/skvl,libinjector: make dump of injected process,6,[],https://github.com/tklengyel/drakvuf/pull/1031,https://github.com/icedevml,14,https://github.com/tklengyel/drakvuf/pull/1031#issuecomment-718195880,,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1031,2020-10-09T06:25:52Z,2020-10-28T23:08:22Z,2020-10-30T16:58:15Z,MERGED,True,352,20,17,https://github.com/skvl,libinjector: make dump of injected process,6,[],https://github.com/tklengyel/drakvuf/pull/1031,https://github.com/icedevml,15,https://github.com/tklengyel/drakvuf/pull/1031#issuecomment-718209357,,"@skvl CI passed after restart 👍
However it still displays to me This branch is out-of-date with the base branch 🤔",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1031,2020-10-09T06:25:52Z,2020-10-28T23:08:22Z,2020-10-30T16:58:15Z,MERGED,True,352,20,17,https://github.com/skvl,libinjector: make dump of injected process,6,[],https://github.com/tklengyel/drakvuf/pull/1031,https://github.com/tklengyel,16,https://github.com/tklengyel/drakvuf/pull/1031#issuecomment-718258913,,Being out of date is not an issue while there is no merge conflict. Jenkins always merges to master before compiling.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1031,2020-10-09T06:25:52Z,2020-10-28T23:08:22Z,2020-10-30T16:58:15Z,MERGED,True,352,20,17,https://github.com/skvl,libinjector: make dump of injected process,6,[],https://github.com/tklengyel/drakvuf/pull/1031,https://github.com/skvl,17,https://github.com/tklengyel/drakvuf/pull/1031#issuecomment-719447878,,"@tklengyel, @icedevml, thank you very much!",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1032,2020-10-09T07:36:03Z,2020-10-12T02:08:46Z,2020-10-26T05:51:54Z,MERGED,True,21,0,1,https://github.com/skvl,procdump: don't dump process if it not going to terminate,1,[],https://github.com/tklengyel/drakvuf/pull/1032,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1032,Relates to #1023,Relates to #1023,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1032,2020-10-09T07:36:03Z,2020-10-12T02:08:46Z,2020-10-26T05:51:54Z,MERGED,True,21,0,1,https://github.com/skvl,procdump: don't dump process if it not going to terminate,1,[],https://github.com/tklengyel/drakvuf/pull/1032,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1032#issuecomment-706023305,Relates to #1023,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1032,2020-10-09T07:36:03Z,2020-10-12T02:08:46Z,2020-10-26T05:51:54Z,MERGED,True,21,0,1,https://github.com/skvl,procdump: don't dump process if it not going to terminate,1,[],https://github.com/tklengyel/drakvuf/pull/1032,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1032#issuecomment-706447344,Relates to #1023,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1034,2020-10-12T00:11:27Z,2020-10-12T00:16:44Z,2020-10-12T00:16:47Z,MERGED,True,36,0,1,https://github.com/tklengyel,Add basic PR compile check via Github Actions,1,[],https://github.com/tklengyel/drakvuf/pull/1034,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1034,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1035,2020-10-12T00:42:52Z,2020-10-12T13:24:01Z,2020-10-12T13:24:04Z,MERGED,True,6962,4789,42,https://github.com/tklengyel,Add Github Actions astyle check,4,[],https://github.com/tklengyel/drakvuf/pull/1035,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1035,,,True,{'THUMBS_UP': ['https://github.com/icedevml']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1035,2020-10-12T00:42:52Z,2020-10-12T13:24:01Z,2020-10-12T13:24:04Z,MERGED,True,6962,4789,42,https://github.com/tklengyel,Add Github Actions astyle check,4,[],https://github.com/tklengyel/drakvuf/pull/1035,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/1035#issuecomment-706808532,,Apparently the travis astyle check was buggy and it wasn't actually checking style on everything. Correcting that now.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1035,2020-10-12T00:42:52Z,2020-10-12T13:24:01Z,2020-10-12T13:24:04Z,MERGED,True,6962,4789,42,https://github.com/tklengyel,Add Github Actions astyle check,4,[],https://github.com/tklengyel/drakvuf/pull/1035,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1035#issuecomment-707079346,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1035,2020-10-12T00:42:52Z,2020-10-12T13:24:01Z,2020-10-12T13:24:04Z,MERGED,True,6962,4789,42,https://github.com/tklengyel,Add Github Actions astyle check,4,[],https://github.com/tklengyel/drakvuf/pull/1035,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1035#issuecomment-707088130,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1036,2020-10-12T02:22:45Z,2020-10-12T02:31:25Z,2020-10-12T02:31:28Z,MERGED,True,27,0,2,https://github.com/tklengyel,Add more Github Actions checks,1,[],https://github.com/tklengyel/drakvuf/pull/1036,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1036,whitespace check & cppcheck,whitespace check & cppcheck,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1037,2020-10-12T13:06:16Z,2020-10-12T14:19:51Z,2020-10-21T12:57:43Z,MERGED,True,2,1,1,https://github.com/chivay,filedelete: Fix use-after-free in close_cb,1,[],https://github.com/tklengyel/drakvuf/pull/1037,https://github.com/chivay,1,https://github.com/tklengyel/drakvuf/pull/1037,"When the key is removed from the map, iterator becomes invalid,
later access becomes use-after-free.
Fix the issue by hoisting the variable to outer scope.","When the key is removed from the map, iterator becomes invalid,
later access becomes use-after-free.
Fix the issue by hoisting the variable to outer scope.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1037,2020-10-12T13:06:16Z,2020-10-12T14:19:51Z,2020-10-21T12:57:43Z,MERGED,True,2,1,1,https://github.com/chivay,filedelete: Fix use-after-free in close_cb,1,[],https://github.com/tklengyel/drakvuf/pull/1037,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1037#issuecomment-707108441,"When the key is removed from the map, iterator becomes invalid,
later access becomes use-after-free.
Fix the issue by hoisting the variable to outer scope.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1037,2020-10-12T13:06:16Z,2020-10-12T14:19:51Z,2020-10-21T12:57:43Z,MERGED,True,2,1,1,https://github.com/chivay,filedelete: Fix use-after-free in close_cb,1,[],https://github.com/tklengyel/drakvuf/pull/1037,https://github.com/chivay,3,https://github.com/tklengyel/drakvuf/pull/1037#issuecomment-707121145,"When the key is removed from the map, iterator becomes invalid,
later access becomes use-after-free.
Fix the issue by hoisting the variable to outer scope.",🤔 any ideas why cppcheck failed in a completely different file?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1037,2020-10-12T13:06:16Z,2020-10-12T14:19:51Z,2020-10-21T12:57:43Z,MERGED,True,2,1,1,https://github.com/chivay,filedelete: Fix use-after-free in close_cb,1,[],https://github.com/tklengyel/drakvuf/pull/1037,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/1037#issuecomment-707121779,"When the key is removed from the map, iterator becomes invalid,
later access becomes use-after-free.
Fix the issue by hoisting the variable to outer scope.",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1037,2020-10-12T13:06:16Z,2020-10-12T14:19:51Z,2020-10-21T12:57:43Z,MERGED,True,2,1,1,https://github.com/chivay,filedelete: Fix use-after-free in close_cb,1,[],https://github.com/tklengyel/drakvuf/pull/1037,https://github.com/icedevml,5,https://github.com/tklengyel/drakvuf/pull/1037#issuecomment-707122207,"When the key is removed from the map, iterator becomes invalid,
later access becomes use-after-free.
Fix the issue by hoisting the variable to outer scope.","🤔 any ideas why cppcheck failed in a completely different file?

Do you have correct base for this branch?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1037,2020-10-12T13:06:16Z,2020-10-12T14:19:51Z,2020-10-21T12:57:43Z,MERGED,True,2,1,1,https://github.com/chivay,filedelete: Fix use-after-free in close_cb,1,[],https://github.com/tklengyel/drakvuf/pull/1037,https://github.com/icedevml,6,https://github.com/tklengyel/drakvuf/pull/1037#issuecomment-707123105,"When the key is removed from the map, iterator becomes invalid,
later access becomes use-after-free.
Fix the issue by hoisting the variable to outer scope.",Seems that it's correct base commit 🤔 @tklengyel could you look at this cppcheck?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1037,2020-10-12T13:06:16Z,2020-10-12T14:19:51Z,2020-10-21T12:57:43Z,MERGED,True,2,1,1,https://github.com/chivay,filedelete: Fix use-after-free in close_cb,1,[],https://github.com/tklengyel/drakvuf/pull/1037,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/1037#issuecomment-707134571,"When the key is removed from the map, iterator becomes invalid,
later access becomes use-after-free.
Fix the issue by hoisting the variable to outer scope.",I think that's a bug/change in cppcheck. We use the latest version of cppcheck from snap so if they add/change something that could trigger like this. With the cppcheck shipping on buster I don't see any issues (1.86).,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1038,2020-10-12T13:55:50Z,2020-10-12T14:12:16Z,2020-10-12T14:12:18Z,MERGED,True,5,26,3,https://github.com/tklengyel,Use cppcheck from Ubuntu repo instead of snap,2,[],https://github.com/tklengyel/drakvuf/pull/1038,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1038,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1038,2020-10-12T13:55:50Z,2020-10-12T14:12:16Z,2020-10-12T14:12:18Z,MERGED,True,5,26,3,https://github.com/tklengyel,Use cppcheck from Ubuntu repo instead of snap,2,[],https://github.com/tklengyel/drakvuf/pull/1038,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/1038#issuecomment-707145516,,"I'm just disabling cppcheck for now, for some reason it's buggy on GA.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1039,2020-10-12T14:10:24Z,2020-10-12T15:02:53Z,2020-10-21T12:57:44Z,MERGED,True,4,2,1,https://github.com/chivay,regmon: Use memcpy instead of reinterpret_cast,1,[],https://github.com/tklengyel/drakvuf/pull/1039,https://github.com/chivay,1,https://github.com/tklengyel/drakvuf/pull/1039,"Casting pointers with reinterpret_cast in some cases might violate
alignment requirements. Use memcpy to fix this issue.","Casting pointers with reinterpret_cast in some cases might violate
alignment requirements. Use memcpy to fix this issue.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1039,2020-10-12T14:10:24Z,2020-10-12T15:02:53Z,2020-10-21T12:57:44Z,MERGED,True,4,2,1,https://github.com/chivay,regmon: Use memcpy instead of reinterpret_cast,1,[],https://github.com/tklengyel/drakvuf/pull/1039,https://github.com/icedevml,2,https://github.com/tklengyel/drakvuf/pull/1039#issuecomment-707167059,"Casting pointers with reinterpret_cast in some cases might violate
alignment requirements. Use memcpy to fix this issue.",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1039,2020-10-12T14:10:24Z,2020-10-12T15:02:53Z,2020-10-21T12:57:44Z,MERGED,True,4,2,1,https://github.com/chivay,regmon: Use memcpy instead of reinterpret_cast,1,[],https://github.com/tklengyel/drakvuf/pull/1039,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/1039#issuecomment-707167075,"Casting pointers with reinterpret_cast in some cases might violate
alignment requirements. Use memcpy to fix this issue.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1040,2020-10-12T18:40:44Z,2020-10-12T19:28:53Z,2020-10-12T19:28:54Z,MERGED,True,1,1,1,https://github.com/kaganisildak,Output Scheme Fix,1,[],https://github.com/tklengyel/drakvuf/pull/1040,https://github.com/kaganisildak,1,https://github.com/tklengyel/drakvuf/pull/1040,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1040,2020-10-12T18:40:44Z,2020-10-12T19:28:53Z,2020-10-12T19:28:54Z,MERGED,True,1,1,1,https://github.com/kaganisildak,Output Scheme Fix,1,[],https://github.com/tklengyel/drakvuf/pull/1040,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1040#issuecomment-707284229,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1041,2020-10-13T00:37:50Z,2020-10-13T00:51:25Z,2020-10-13T00:59:47Z,MERGED,True,35,0,1,https://github.com/tklengyel,Github actions based scan-build,1,[],https://github.com/tklengyel/drakvuf/pull/1041,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1041,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1042,2020-10-13T00:51:47Z,2020-10-13T01:15:09Z,2020-10-13T01:15:12Z,MERGED,True,69,93,2,https://github.com/tklengyel,Add more compile tests to github actions,2,[],https://github.com/tklengyel/drakvuf/pull/1042,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1042,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1043,2020-10-13T02:15:12Z,2020-10-13T02:32:39Z,2020-10-13T13:25:26Z,MERGED,True,63,0,1,https://github.com/tklengyel,Add CodeQL Github Action,1,[],https://github.com/tklengyel/drakvuf/pull/1043,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1043,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1044,2020-10-13T12:27:34Z,2020-10-13T13:22:04Z,2020-10-21T12:57:45Z,MERGED,True,28,33,2,https://github.com/chivay,plugins: Use automatic memory management,1,[],https://github.com/tklengyel/drakvuf/pull/1044,https://github.com/chivay,1,https://github.com/tklengyel/drakvuf/pull/1044,"No functional changes.
cc @BonusPlay @icedevml","No functional changes.
cc @BonusPlay @icedevml",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1044,2020-10-13T12:27:34Z,2020-10-13T13:22:04Z,2020-10-21T12:57:45Z,MERGED,True,28,33,2,https://github.com/chivay,plugins: Use automatic memory management,1,[],https://github.com/tklengyel/drakvuf/pull/1044,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1044#issuecomment-707704542,"No functional changes.
cc @BonusPlay @icedevml",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1044,2020-10-13T12:27:34Z,2020-10-13T13:22:04Z,2020-10-21T12:57:45Z,MERGED,True,28,33,2,https://github.com/chivay,plugins: Use automatic memory management,1,[],https://github.com/tklengyel/drakvuf/pull/1044,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/1044#issuecomment-707721586,"No functional changes.
cc @BonusPlay @icedevml",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1044,2020-10-13T12:27:34Z,2020-10-13T13:22:04Z,2020-10-21T12:57:45Z,MERGED,True,28,33,2,https://github.com/chivay,plugins: Use automatic memory management,1,[],https://github.com/tklengyel/drakvuf/pull/1044,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1044#issuecomment-707734171,"No functional changes.
cc @BonusPlay @icedevml",LGTM,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1046,2020-10-13T13:26:29Z,2020-10-13T15:11:27Z,2020-10-13T15:11:30Z,MERGED,True,8,8,6,https://github.com/tklengyel,Fix some CodeQL warnings,1,[],https://github.com/tklengyel/drakvuf/pull/1046,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1046,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1047,2020-10-13T14:02:59Z,2020-10-13T14:23:52Z,2020-10-13T14:26:47Z,MERGED,True,3,2103,2,https://github.com/BonusPlay,Reveme generated file,1,[],https://github.com/tklengyel/drakvuf/pull/1047,https://github.com/BonusPlay,1,https://github.com/tklengyel/drakvuf/pull/1047,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1047,2020-10-13T14:02:59Z,2020-10-13T14:23:52Z,2020-10-13T14:26:47Z,MERGED,True,3,2103,2,https://github.com/BonusPlay,Reveme generated file,1,[],https://github.com/tklengyel/drakvuf/pull/1047,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1047#issuecomment-707760723,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1047,2020-10-13T14:02:59Z,2020-10-13T14:23:52Z,2020-10-13T14:26:47Z,MERGED,True,3,2103,2,https://github.com/BonusPlay,Reveme generated file,1,[],https://github.com/tklengyel/drakvuf/pull/1047,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/1047#issuecomment-707763291,,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1048,2020-10-13T22:39:55Z,2020-10-20T01:41:13Z,2020-10-20T08:47:32Z,MERGED,True,318,563,11,https://github.com/BonusPlay,Refactor plugins_ex class,1,[],https://github.com/tklengyel/drakvuf/pull/1048,https://github.com/BonusPlay,1,https://github.com/tklengyel/drakvuf/pull/1048,"remove allocators, as noone used them
remove a lot of templates from hook params
separate get_trap_params and get_trap_plugin
use std::unique_ptr with custom deleter for traps
minimal changes to old API

Currently WIP as this is 1st commit where ""it builds"", now it needs extended testing.","remove allocators, as noone used them
remove a lot of templates from hook params
separate get_trap_params and get_trap_plugin
use std::unique_ptr with custom deleter for traps
minimal changes to old API

Currently WIP as this is 1st commit where ""it builds"", now it needs extended testing.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1048,2020-10-13T22:39:55Z,2020-10-20T01:41:13Z,2020-10-20T08:47:32Z,MERGED,True,318,563,11,https://github.com/BonusPlay,Refactor plugins_ex class,1,[],https://github.com/tklengyel/drakvuf/pull/1048,https://github.com/icedevml,2,https://github.com/tklengyel/drakvuf/pull/1048#issuecomment-708052597,"remove allocators, as noone used them
remove a lot of templates from hook params
separate get_trap_params and get_trap_plugin
use std::unique_ptr with custom deleter for traps
minimal changes to old API

Currently WIP as this is 1st commit where ""it builds"", now it needs extended testing.","[SYSCALL] TIME:1602629641.050278 VCPU:1 CR3:0xAB349000 ""\Device\HarddiskVolume2\Windows\System32\svchost.exe"":NtOpenKeyEx SessionID:0 PID:1912 PPID:440 Module:""nt"" vCPU:1 CR3:0xAB349000 Syscall:242 NArgs:4 KeyHandle:0x6FF048 DesiredAccess:0x2000000 ObjectAttributes:""\REGISTRY\MACHINE"" OpenOptions:0x0
[SYSRET] TIME:1602629641.050394 VCPU:0 CR3:0x2B120000 ""\Device\HarddiskVolume2\Windows\System32\svchost.exe"":NtClose SessionID:0 PID:564 PPID:440 Module:""nt"" vCPU:0 CR3:0x2B120000 Syscall:12 Ret:0 Info:STATUS_SUCCESS

Program received signal SIGSEGV, Segmentation fault.
0x0000000000000000 in ?? ()
(gdb) bt
#0  0x0000000000000000 in ?? ()
#1  0x00005555555f3834 in int3_cb (vmi=<optimized out>, event=0x5555558dc7c8) at vmi.c:637
#2  0x00007ffff7d785f3 in process_software_breakpoint (vmi=0x5555558de9c0, vmec=0x7fffffffd8c0) at libvmi/driver/xen/xen_events.c:695
#3  0x00007ffff7d76db5 in process_request (vmec=0x7fffffffd8c0, vmi=0x5555558de9c0) at libvmi/driver/xen/xen_events.c:1278
#4  process_requests_6 (vmi=0x5555558de9c0, requests_processed=<optimized out>) at libvmi/driver/xen/xen_events.c:2715
#5  0x00007ffff7d77e5b in xen_events_listen (vmi=0x5555558de9c0, timeout=<optimized out>) at libvmi/driver/xen/xen_events.c:2957
#6  0x00005555555f400a in drakvuf_vmi_event_callback (fd=<optimized out>, data=<optimized out>) at vmi.c:1387
#7  0x00005555555f17ce in drakvuf_poll (drakvuf=drakvuf@entry=0x5555558dc560, timeout=timeout@entry=1000) at vmi.c:1420
#8  0x00005555555f4085 in drakvuf_loop (drakvuf=0x5555558dc560) at vmi.c:1433
#9  0x00005555555ed830 in drakvuf_c::loop(int) ()
#10 0x00005555555ed0f6 in main ()",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1048,2020-10-13T22:39:55Z,2020-10-20T01:41:13Z,2020-10-20T08:47:32Z,MERGED,True,318,563,11,https://github.com/BonusPlay,Refactor plugins_ex class,1,[],https://github.com/tklengyel/drakvuf/pull/1048,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/1048#issuecomment-708062350,"remove allocators, as noone used them
remove a lot of templates from hook params
separate get_trap_params and get_trap_plugin
use std::unique_ptr with custom deleter for traps
minimal changes to old API

Currently WIP as this is 1st commit where ""it builds"", now it needs extended testing.",reproducible with -a procmon (only enable procmon plugin),True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1048,2020-10-13T22:39:55Z,2020-10-20T01:41:13Z,2020-10-20T08:47:32Z,MERGED,True,318,563,11,https://github.com/BonusPlay,Refactor plugins_ex class,1,[],https://github.com/tklengyel/drakvuf/pull/1048,https://github.com/BonusPlay,4,https://github.com/tklengyel/drakvuf/pull/1048#issuecomment-708283395,"remove allocators, as noone used them
remove a lot of templates from hook params
separate get_trap_params and get_trap_plugin
use std::unique_ptr with custom deleter for traps
minimal changes to old API

Currently WIP as this is 1st commit where ""it builds"", now it needs extended testing.",Need to be retested - I was deleting wrong traps by mistake (thus causing the exception).,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1048,2020-10-13T22:39:55Z,2020-10-20T01:41:13Z,2020-10-20T08:47:32Z,MERGED,True,318,563,11,https://github.com/BonusPlay,Refactor plugins_ex class,1,[],https://github.com/tklengyel/drakvuf/pull/1048,https://github.com/BonusPlay,5,https://github.com/tklengyel/drakvuf/pull/1048#issuecomment-708653266,"remove allocators, as noone used them
remove a lot of templates from hook params
separate get_trap_params and get_trap_plugin
use std::unique_ptr with custom deleter for traps
minimal changes to old API

Currently WIP as this is 1st commit where ""it builds"", now it needs extended testing.","I believe this is now ready to review. I've managed to build drakvuf with all plugins & run it for 5 minutes without crashing.
Many thanks to @chivay for helping me during this adventure :)",True,{'HEART': ['https://github.com/chivay']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1048,2020-10-13T22:39:55Z,2020-10-20T01:41:13Z,2020-10-20T08:47:32Z,MERGED,True,318,563,11,https://github.com/BonusPlay,Refactor plugins_ex class,1,[],https://github.com/tklengyel/drakvuf/pull/1048,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1048#issuecomment-708744212,"remove allocators, as noone used them
remove a lot of templates from hook params
separate get_trap_params and get_trap_plugin
use std::unique_ptr with custom deleter for traps
minimal changes to old API

Currently WIP as this is 1st commit where ""it builds"", now it needs extended testing.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1048,2020-10-13T22:39:55Z,2020-10-20T01:41:13Z,2020-10-20T08:47:32Z,MERGED,True,318,563,11,https://github.com/BonusPlay,Refactor plugins_ex class,1,[],https://github.com/tklengyel/drakvuf/pull/1048,https://github.com/drakvuf-jenkins,7,https://github.com/tklengyel/drakvuf/pull/1048#issuecomment-708744274,"remove allocators, as noone used them
remove a lot of templates from hook params
separate get_trap_params and get_trap_plugin
use std::unique_ptr with custom deleter for traps
minimal changes to old API

Currently WIP as this is 1st commit where ""it builds"", now it needs extended testing.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1048,2020-10-13T22:39:55Z,2020-10-20T01:41:13Z,2020-10-20T08:47:32Z,MERGED,True,318,563,11,https://github.com/BonusPlay,Refactor plugins_ex class,1,[],https://github.com/tklengyel/drakvuf/pull/1048,https://github.com/icedevml,8,https://github.com/tklengyel/drakvuf/pull/1048#issuecomment-708782441,"remove allocators, as noone used them
remove a lot of templates from hook params
separate get_trap_params and get_trap_plugin
use std::unique_ptr with custom deleter for traps
minimal changes to old API

Currently WIP as this is 1st commit where ""it builds"", now it needs extended testing.","Some complaints from Valgrind:
https://ci.drakvuf.com/job/DRAKVUF-windows10/449/valgrindResult/pid=7374/",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1048,2020-10-13T22:39:55Z,2020-10-20T01:41:13Z,2020-10-20T08:47:32Z,MERGED,True,318,563,11,https://github.com/BonusPlay,Refactor plugins_ex class,1,[],https://github.com/tklengyel/drakvuf/pull/1048,https://github.com/icedevml,9,https://github.com/tklengyel/drakvuf/pull/1048#issuecomment-708793433,"remove allocators, as noone used them
remove a lot of templates from hook params
separate get_trap_params and get_trap_plugin
use std::unique_ptr with custom deleter for traps
minimal changes to old API

Currently WIP as this is 1st commit where ""it builds"", now it needs extended testing.","I think it complains about plugin destructors not freeing traps properly, thus the traps are leaked.
E.g. in memdump ctor there are multiple calls to register_trap but the returned pointer is immediately discarded and never freed. So either you need to destroy everything explicitly in the plugin's destructor or add sth like pluginex::destroy_all_traps(), called from plugin's destructor.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1048,2020-10-13T22:39:55Z,2020-10-20T01:41:13Z,2020-10-20T08:47:32Z,MERGED,True,318,563,11,https://github.com/BonusPlay,Refactor plugins_ex class,1,[],https://github.com/tklengyel/drakvuf/pull/1048,https://github.com/icedevml,10,https://github.com/tklengyel/drakvuf/pull/1048#issuecomment-708796811,"remove allocators, as noone used them
remove a lot of templates from hook params
separate get_trap_params and get_trap_plugin
use std::unique_ptr with custom deleter for traps
minimal changes to old API

Currently WIP as this is 1st commit where ""it builds"", now it needs extended testing.",(This PR will resolve #1045 ),True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1048,2020-10-13T22:39:55Z,2020-10-20T01:41:13Z,2020-10-20T08:47:32Z,MERGED,True,318,563,11,https://github.com/BonusPlay,Refactor plugins_ex class,1,[],https://github.com/tklengyel/drakvuf/pull/1048,https://github.com/kscieslinski,11,https://github.com/tklengyel/drakvuf/pull/1048#issuecomment-709948329,"remove allocators, as noone used them
remove a lot of templates from hook params
separate get_trap_params and get_trap_plugin
use std::unique_ptr with custom deleter for traps
minimal changes to old API

Currently WIP as this is 1st commit where ""it builds"", now it needs extended testing.","Besides wmimon which we have discussed internally, this looks good to me. I would consider FieldToString to cpp file for consistency. I've tested this on few samples.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1048,2020-10-13T22:39:55Z,2020-10-20T01:41:13Z,2020-10-20T08:47:32Z,MERGED,True,318,563,11,https://github.com/BonusPlay,Refactor plugins_ex class,1,[],https://github.com/tklengyel/drakvuf/pull/1048,https://github.com/icedevml,12,https://github.com/tklengyel/drakvuf/pull/1048#issuecomment-710015118,"remove allocators, as noone used them
remove a lot of templates from hook params
separate get_trap_params and get_trap_plugin
use std::unique_ptr with custom deleter for traps
minimal changes to old API

Currently WIP as this is 1st commit where ""it builds"", now it needs extended testing.","@BonusPlay @chivay
1602772752.818219 DRAKVUF v0.8-git20201015142735+ad1e90e-1 Copyright (C) 2014-2020 Tamas K Lengyel

(process:21036): GLib-CRITICAL **: 10:40:13.928: g_hash_table_lookup: assertion 'hash_table != NULL' failed

(process:21036): GLib-CRITICAL **: 10:40:13.928: g_hash_table_lookup: assertion 'hash_table != NULL' failed

(process:21036): GLib-CRITICAL **: 10:40:13.928: g_hash_table_lookup: assertion 'hash_table != NULL' failed
terminate called after throwing an instance of 'int'",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1048,2020-10-13T22:39:55Z,2020-10-20T01:41:13Z,2020-10-20T08:47:32Z,MERGED,True,318,563,11,https://github.com/BonusPlay,Refactor plugins_ex class,1,[],https://github.com/tklengyel/drakvuf/pull/1048,https://github.com/BonusPlay,13,https://github.com/tklengyel/drakvuf/pull/1048#issuecomment-712197679,"remove allocators, as noone used them
remove a lot of templates from hook params
separate get_trap_params and get_trap_plugin
use std::unique_ptr with custom deleter for traps
minimal changes to old API

Currently WIP as this is 1st commit where ""it builds"", now it needs extended testing.","On my local instance everything works out. 2 bugs that occured dring shutdown were:

drakvuf.cpp doing delete drakvuf before delete plugins (just why)
classic modifying collection while iterating over it

Pinging @icedevml and @kscieslinski for testing this PR :)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1048,2020-10-13T22:39:55Z,2020-10-20T01:41:13Z,2020-10-20T08:47:32Z,MERGED,True,318,563,11,https://github.com/BonusPlay,Refactor plugins_ex class,1,[],https://github.com/tklengyel/drakvuf/pull/1048,https://github.com/BonusPlay,14,https://github.com/tklengyel/drakvuf/pull/1048#issuecomment-712475741,"remove allocators, as noone used them
remove a lot of templates from hook params
separate get_trap_params and get_trap_plugin
use std::unique_ptr with custom deleter for traps
minimal changes to old API

Currently WIP as this is 1st commit where ""it builds"", now it needs extended testing.","Reverted the suggestion, as it was even more buggy than it is now",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1048,2020-10-13T22:39:55Z,2020-10-20T01:41:13Z,2020-10-20T08:47:32Z,MERGED,True,318,563,11,https://github.com/BonusPlay,Refactor plugins_ex class,1,[],https://github.com/tklengyel/drakvuf/pull/1048,https://github.com/icedevml,15,https://github.com/tklengyel/drakvuf/pull/1048#issuecomment-712496924,"remove allocators, as noone used them
remove a lot of templates from hook params
separate get_trap_params and get_trap_plugin
use std::unique_ptr with custom deleter for traps
minimal changes to old API

Currently WIP as this is 1st commit where ""it builds"", now it needs extended testing.",seems like it's fixed properly now,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1048,2020-10-13T22:39:55Z,2020-10-20T01:41:13Z,2020-10-20T08:47:32Z,MERGED,True,318,563,11,https://github.com/BonusPlay,Refactor plugins_ex class,1,[],https://github.com/tklengyel/drakvuf/pull/1048,https://github.com/icedevml,16,https://github.com/tklengyel/drakvuf/pull/1048#issuecomment-712499680,"remove allocators, as noone used them
remove a lot of templates from hook params
separate get_trap_params and get_trap_plugin
use std::unique_ptr with custom deleter for traps
minimal changes to old API

Currently WIP as this is 1st commit where ""it builds"", now it needs extended testing.",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1048,2020-10-13T22:39:55Z,2020-10-20T01:41:13Z,2020-10-20T08:47:32Z,MERGED,True,318,563,11,https://github.com/BonusPlay,Refactor plugins_ex class,1,[],https://github.com/tklengyel/drakvuf/pull/1048,https://github.com/BonusPlay,17,https://github.com/tklengyel/drakvuf/pull/1048#issuecomment-712504885,"remove allocators, as noone used them
remove a lot of templates from hook params
separate get_trap_params and get_trap_plugin
use std::unique_ptr with custom deleter for traps
minimal changes to old API

Currently WIP as this is 1st commit where ""it builds"", now it needs extended testing.",@tklengyel we believe this is now fully ready.,True,{'HOORAY': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1048,2020-10-13T22:39:55Z,2020-10-20T01:41:13Z,2020-10-20T08:47:32Z,MERGED,True,318,563,11,https://github.com/BonusPlay,Refactor plugins_ex class,1,[],https://github.com/tklengyel/drakvuf/pull/1048,https://github.com/tklengyel,18,https://github.com/tklengyel/drakvuf/pull/1048#issuecomment-712534506,"remove allocators, as noone used them
remove a lot of templates from hook params
separate get_trap_params and get_trap_plugin
use std::unique_ptr with custom deleter for traps
minimal changes to old API

Currently WIP as this is 1st commit where ""it builds"", now it needs extended testing.","LGTM, looks like this was a massive effort but the interface is now a lot cleaner.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1049,2020-10-14T00:56:36Z,2020-10-14T08:31:48Z,2020-10-14T08:31:49Z,MERGED,True,35,2,1,https://github.com/icedevml,argument printers: escape non-printable characters in strings,3,[],https://github.com/tklengyel/drakvuf/pull/1049,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/1049,"Sometimes apimon encounters an invalid string or just a byte buffer. When it tries to print it as ASCII/Unicode string, invalid characters might appear in JSON. Here we try to escape all non-printable characters with backslash sequences, to avoid producing binary output out of DRAKVUF.
/cc @BonusPlay @chivay @kscieslinski
/cc @skvl (you might be affected by this change)
related CERT-Polska/drakvuf-sandbox#270","Sometimes apimon encounters an invalid string or just a byte buffer. When it tries to print it as ASCII/Unicode string, invalid characters might appear in JSON. Here we try to escape all non-printable characters with backslash sequences, to avoid producing binary output out of DRAKVUF.
/cc @BonusPlay @chivay @kscieslinski
/cc @skvl (you might be affected by this change)
related CERT-Polska/drakvuf-sandbox#270",True,{'THUMBS_UP': ['https://github.com/skvl']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1049,2020-10-14T00:56:36Z,2020-10-14T08:31:48Z,2020-10-14T08:31:49Z,MERGED,True,35,2,1,https://github.com/icedevml,argument printers: escape non-printable characters in strings,3,[],https://github.com/tklengyel/drakvuf/pull/1049,https://github.com/icedevml,2,https://github.com/tklengyel/drakvuf/pull/1049#issuecomment-708106895,"Sometimes apimon encounters an invalid string or just a byte buffer. When it tries to print it as ASCII/Unicode string, invalid characters might appear in JSON. Here we try to escape all non-printable characters with backslash sequences, to avoid producing binary output out of DRAKVUF.
/cc @BonusPlay @chivay @kscieslinski
/cc @skvl (you might be affected by this change)
related CERT-Polska/drakvuf-sandbox#270","tested, seems to work fine",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1050,2020-10-14T16:34:58Z,2020-10-14T17:40:21Z,2020-10-14T17:43:10Z,MERGED,True,3,1,1,https://github.com/icedevml,drakvuf-bundle: fix bug in xen.cfg,1,[],https://github.com/tklengyel/drakvuf/pull/1050,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/1050,"Turns out that scripts in /etc/default/grub.d are running inside /bin/dash which works differently than bash o_O
Fix bug that was causing update-grub always saying that drakvuf-bundle is not installed.","Turns out that scripts in /etc/default/grub.d are running inside /bin/dash which works differently than bash o_O
Fix bug that was causing update-grub always saying that drakvuf-bundle is not installed.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1053,2020-10-19T00:28:31Z,2020-10-20T01:53:42Z,2020-10-20T01:53:42Z,CLOSED,False,1,0,1,https://github.com/tklengyel,Use security-and-quality in CodeQL,1,[],https://github.com/tklengyel/drakvuf/pull/1053,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1053,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1055,2020-10-21T12:41:08Z,2020-10-22T13:44:55Z,2020-10-26T17:22:43Z,MERGED,True,77,34,5,https://github.com/chivay,libusermode: refactor log strategies,2,[],https://github.com/tklengyel/drakvuf/pull/1055,https://github.com/chivay,1,https://github.com/tklengyel/drakvuf/pull/1055,"In current implementation, log strategy is implemented as a std::string.
Using an enum is both faster and less error-prone.
Additionaly, remove the concept of ""stack"" strategy as it has no sense
(doing work, without any benefit to the user).","In current implementation, log strategy is implemented as a std::string.
Using an enum is both faster and less error-prone.
Additionaly, remove the concept of ""stack"" strategy as it has no sense
(doing work, without any benefit to the user).",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1055,2020-10-21T12:41:08Z,2020-10-22T13:44:55Z,2020-10-26T17:22:43Z,MERGED,True,77,34,5,https://github.com/chivay,libusermode: refactor log strategies,2,[],https://github.com/tklengyel/drakvuf/pull/1055,https://github.com/icedevml,2,https://github.com/tklengyel/drakvuf/pull/1055#issuecomment-713557857,"In current implementation, log strategy is implemented as a std::string.
Using an enum is both faster and less error-prone.
Additionaly, remove the concept of ""stack"" strategy as it has no sense
(doing work, without any benefit to the user).",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1055,2020-10-21T12:41:08Z,2020-10-22T13:44:55Z,2020-10-26T17:22:43Z,MERGED,True,77,34,5,https://github.com/chivay,libusermode: refactor log strategies,2,[],https://github.com/tklengyel/drakvuf/pull/1055,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1055#issuecomment-714423192,"In current implementation, log strategy is implemented as a std::string.
Using an enum is both faster and less error-prone.
Additionaly, remove the concept of ""stack"" strategy as it has no sense
(doing work, without any benefit to the user).",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1055,2020-10-21T12:41:08Z,2020-10-22T13:44:55Z,2020-10-26T17:22:43Z,MERGED,True,77,34,5,https://github.com/chivay,libusermode: refactor log strategies,2,[],https://github.com/tklengyel/drakvuf/pull/1055,https://github.com/drakvuf-jenkins,4,https://github.com/tklengyel/drakvuf/pull/1055#issuecomment-714423205,"In current implementation, log strategy is implemented as a std::string.
Using an enum is both faster and less error-prone.
Additionaly, remove the concept of ""stack"" strategy as it has no sense
(doing work, without any benefit to the user).",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1057,2020-10-22T09:07:18Z,2020-10-22T13:44:07Z,2021-06-02T11:16:42Z,MERGED,True,138,20,6,https://github.com/disaykin,Add special exit code for injection timeout,1,[],https://github.com/tklengyel/drakvuf/pull/1057,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1057,This needs for automatic injection timeout detection and handling.,This needs for automatic injection timeout detection and handling.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1057,2020-10-22T09:07:18Z,2020-10-22T13:44:07Z,2021-06-02T11:16:42Z,MERGED,True,138,20,6,https://github.com/disaykin,Add special exit code for injection timeout,1,[],https://github.com/tklengyel/drakvuf/pull/1057,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1057#issuecomment-714349155,This needs for automatic injection timeout detection and handling.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1057,2020-10-22T09:07:18Z,2020-10-22T13:44:07Z,2021-06-02T11:16:42Z,MERGED,True,138,20,6,https://github.com/disaykin,Add special exit code for injection timeout,1,[],https://github.com/tklengyel/drakvuf/pull/1057,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1057#issuecomment-714422998,This needs for automatic injection timeout detection and handling.,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1057,2020-10-22T09:07:18Z,2020-10-22T13:44:07Z,2021-06-02T11:16:42Z,MERGED,True,138,20,6,https://github.com/disaykin,Add special exit code for injection timeout,1,[],https://github.com/tklengyel/drakvuf/pull/1057,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1057#issuecomment-714503042,This needs for automatic injection timeout detection and handling.,"I don't think we need a separate header for the exit codes, you should just place those into libinjector.h Never mind, the exit codes are for the main drakvuf binary. OK",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1058,2020-10-22T12:53:07Z,2020-10-22T13:44:40Z,2020-10-22T13:44:40Z,MERGED,True,1,1,1,https://github.com/icedevml,drakvuf-bundle: default to sched=credit,1,[],https://github.com/tklengyel/drakvuf/pull/1058,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/1058,"There are some scheduling issues with sched=credit2 that are becoming especially visible when machine has many PCPUs. I've confirmed with Andrew Cooper that there were some reports about credit2 recently.
I propose to default to sched=credit in drakvuf-bundle, which is a more stable choice.","There are some scheduling issues with sched=credit2 that are becoming especially visible when machine has many PCPUs. I've confirmed with Andrew Cooper that there were some reports about credit2 recently.
I propose to default to sched=credit in drakvuf-bundle, which is a more stable choice.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1060,2020-10-22T17:56:53Z,2020-11-24T00:26:24Z,2020-11-24T00:26:24Z,MERGED,True,787,66,12,https://github.com/kscieslinski,tlsmon plugin,20,[],https://github.com/tklengyel/drakvuf/pull/1060,https://github.com/kscieslinski,1,https://github.com/tklengyel/drakvuf/pull/1060,"Draft
Marked as draft. It requires adding additional features to libusermode (user-mode hooking on the existing process).
Functionality
Extracting tls master key in a format that is supported by Wireshark. It will require some work as there are different libraries.
Example
Both client_random and master_key are saved in drakmon.log file:
$ cat /tmp/drakrun/vm-1/output/drakmon.log | grep tlsmon
{""Plugin"":""tlsmon"",""TimeStamp"":""1603388506.633650"",""PID"":464,""PPID"":348,""TID"":1728,""UserName"":""SessionID"",""UserId"":0,""ProcessName"":""\\Device\\HarddiskVolume2\\Windows\\System32\\lsass.exe"",""Method"":""SslGenerateMasterKey"",""EventUID"":""0x36f5"",""client_random"":""5f8fce57f34e6bdc23ee7a09fd7074388c1a5a42d7b58d58eba8bcf074c32f83"",""master_key"":""2d2c45c2b5b01a78135935fc83386179f69032d2b0c2c3420d03cc205b4809e7a4c26d9655221dec95302dd1235c6c52""}","Draft
Marked as draft. It requires adding additional features to libusermode (user-mode hooking on the existing process).
Functionality
Extracting tls master key in a format that is supported by Wireshark. It will require some work as there are different libraries.
Example
Both client_random and master_key are saved in drakmon.log file:
$ cat /tmp/drakrun/vm-1/output/drakmon.log | grep tlsmon
{""Plugin"":""tlsmon"",""TimeStamp"":""1603388506.633650"",""PID"":464,""PPID"":348,""TID"":1728,""UserName"":""SessionID"",""UserId"":0,""ProcessName"":""\\Device\\HarddiskVolume2\\Windows\\System32\\lsass.exe"",""Method"":""SslGenerateMasterKey"",""EventUID"":""0x36f5"",""client_random"":""5f8fce57f34e6bdc23ee7a09fd7074388c1a5a42d7b58d58eba8bcf074c32f83"",""master_key"":""2d2c45c2b5b01a78135935fc83386179f69032d2b0c2c3420d03cc205b4809e7a4c26d9655221dec95302dd1235c6c52""}",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1060,2020-10-22T17:56:53Z,2020-11-24T00:26:24Z,2020-11-24T00:26:24Z,MERGED,True,787,66,12,https://github.com/kscieslinski,tlsmon plugin,20,[],https://github.com/tklengyel/drakvuf/pull/1060,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1060#issuecomment-714660385,"Draft
Marked as draft. It requires adding additional features to libusermode (user-mode hooking on the existing process).
Functionality
Extracting tls master key in a format that is supported by Wireshark. It will require some work as there are different libraries.
Example
Both client_random and master_key are saved in drakmon.log file:
$ cat /tmp/drakrun/vm-1/output/drakmon.log | grep tlsmon
{""Plugin"":""tlsmon"",""TimeStamp"":""1603388506.633650"",""PID"":464,""PPID"":348,""TID"":1728,""UserName"":""SessionID"",""UserId"":0,""ProcessName"":""\\Device\\HarddiskVolume2\\Windows\\System32\\lsass.exe"",""Method"":""SslGenerateMasterKey"",""EventUID"":""0x36f5"",""client_random"":""5f8fce57f34e6bdc23ee7a09fd7074388c1a5a42d7b58d58eba8bcf074c32f83"",""master_key"":""2d2c45c2b5b01a78135935fc83386179f69032d2b0c2c3420d03cc205b4809e7a4c26d9655221dec95302dd1235c6c52""}",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1060,2020-10-22T17:56:53Z,2020-11-24T00:26:24Z,2020-11-24T00:26:24Z,MERGED,True,787,66,12,https://github.com/kscieslinski,tlsmon plugin,20,[],https://github.com/tklengyel/drakvuf/pull/1060,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/1060#issuecomment-722459480,"Draft
Marked as draft. It requires adding additional features to libusermode (user-mode hooking on the existing process).
Functionality
Extracting tls master key in a format that is supported by Wireshark. It will require some work as there are different libraries.
Example
Both client_random and master_key are saved in drakmon.log file:
$ cat /tmp/drakrun/vm-1/output/drakmon.log | grep tlsmon
{""Plugin"":""tlsmon"",""TimeStamp"":""1603388506.633650"",""PID"":464,""PPID"":348,""TID"":1728,""UserName"":""SessionID"",""UserId"":0,""ProcessName"":""\\Device\\HarddiskVolume2\\Windows\\System32\\lsass.exe"",""Method"":""SslGenerateMasterKey"",""EventUID"":""0x36f5"",""client_random"":""5f8fce57f34e6bdc23ee7a09fd7074388c1a5a42d7b58d58eba8bcf074c32f83"",""master_key"":""2d2c45c2b5b01a78135935fc83386179f69032d2b0c2c3420d03cc205b4809e7a4c26d9655221dec95302dd1235c6c52""}",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1060,2020-10-22T17:56:53Z,2020-11-24T00:26:24Z,2020-11-24T00:26:24Z,MERGED,True,787,66,12,https://github.com/kscieslinski,tlsmon plugin,20,[],https://github.com/tklengyel/drakvuf/pull/1060,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/1060#issuecomment-722468810,"Draft
Marked as draft. It requires adding additional features to libusermode (user-mode hooking on the existing process).
Functionality
Extracting tls master key in a format that is supported by Wireshark. It will require some work as there are different libraries.
Example
Both client_random and master_key are saved in drakmon.log file:
$ cat /tmp/drakrun/vm-1/output/drakmon.log | grep tlsmon
{""Plugin"":""tlsmon"",""TimeStamp"":""1603388506.633650"",""PID"":464,""PPID"":348,""TID"":1728,""UserName"":""SessionID"",""UserId"":0,""ProcessName"":""\\Device\\HarddiskVolume2\\Windows\\System32\\lsass.exe"",""Method"":""SslGenerateMasterKey"",""EventUID"":""0x36f5"",""client_random"":""5f8fce57f34e6bdc23ee7a09fd7074388c1a5a42d7b58d58eba8bcf074c32f83"",""master_key"":""2d2c45c2b5b01a78135935fc83386179f69032d2b0c2c3420d03cc205b4809e7a4c26d9655221dec95302dd1235c6c52""}",I think its complaining about userhook singleton not deleted on de-init.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1060,2020-10-22T17:56:53Z,2020-11-24T00:26:24Z,2020-11-24T00:26:24Z,MERGED,True,787,66,12,https://github.com/kscieslinski,tlsmon plugin,20,[],https://github.com/tklengyel/drakvuf/pull/1060,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1060#issuecomment-722697991,"Draft
Marked as draft. It requires adding additional features to libusermode (user-mode hooking on the existing process).
Functionality
Extracting tls master key in a format that is supported by Wireshark. It will require some work as there are different libraries.
Example
Both client_random and master_key are saved in drakmon.log file:
$ cat /tmp/drakrun/vm-1/output/drakmon.log | grep tlsmon
{""Plugin"":""tlsmon"",""TimeStamp"":""1603388506.633650"",""PID"":464,""PPID"":348,""TID"":1728,""UserName"":""SessionID"",""UserId"":0,""ProcessName"":""\\Device\\HarddiskVolume2\\Windows\\System32\\lsass.exe"",""Method"":""SslGenerateMasterKey"",""EventUID"":""0x36f5"",""client_random"":""5f8fce57f34e6bdc23ee7a09fd7074388c1a5a42d7b58d58eba8bcf074c32f83"",""master_key"":""2d2c45c2b5b01a78135935fc83386179f69032d2b0c2c3420d03cc205b4809e7a4c26d9655221dec95302dd1235c6c52""}",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1060,2020-10-22T17:56:53Z,2020-11-24T00:26:24Z,2020-11-24T00:26:24Z,MERGED,True,787,66,12,https://github.com/kscieslinski,tlsmon plugin,20,[],https://github.com/tklengyel/drakvuf/pull/1060,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1060#issuecomment-722715296,"Draft
Marked as draft. It requires adding additional features to libusermode (user-mode hooking on the existing process).
Functionality
Extracting tls master key in a format that is supported by Wireshark. It will require some work as there are different libraries.
Example
Both client_random and master_key are saved in drakmon.log file:
$ cat /tmp/drakrun/vm-1/output/drakmon.log | grep tlsmon
{""Plugin"":""tlsmon"",""TimeStamp"":""1603388506.633650"",""PID"":464,""PPID"":348,""TID"":1728,""UserName"":""SessionID"",""UserId"":0,""ProcessName"":""\\Device\\HarddiskVolume2\\Windows\\System32\\lsass.exe"",""Method"":""SslGenerateMasterKey"",""EventUID"":""0x36f5"",""client_random"":""5f8fce57f34e6bdc23ee7a09fd7074388c1a5a42d7b58d58eba8bcf074c32f83"",""master_key"":""2d2c45c2b5b01a78135935fc83386179f69032d2b0c2c3420d03cc205b4809e7a4c26d9655221dec95302dd1235c6c52""}",Looks like valgrind is tripping,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1060,2020-10-22T17:56:53Z,2020-11-24T00:26:24Z,2020-11-24T00:26:24Z,MERGED,True,787,66,12,https://github.com/kscieslinski,tlsmon plugin,20,[],https://github.com/tklengyel/drakvuf/pull/1060,https://github.com/BonusPlay,7,https://github.com/tklengyel/drakvuf/pull/1060#issuecomment-722724399,"Draft
Marked as draft. It requires adding additional features to libusermode (user-mode hooking on the existing process).
Functionality
Extracting tls master key in a format that is supported by Wireshark. It will require some work as there are different libraries.
Example
Both client_random and master_key are saved in drakmon.log file:
$ cat /tmp/drakrun/vm-1/output/drakmon.log | grep tlsmon
{""Plugin"":""tlsmon"",""TimeStamp"":""1603388506.633650"",""PID"":464,""PPID"":348,""TID"":1728,""UserName"":""SessionID"",""UserId"":0,""ProcessName"":""\\Device\\HarddiskVolume2\\Windows\\System32\\lsass.exe"",""Method"":""SslGenerateMasterKey"",""EventUID"":""0x36f5"",""client_random"":""5f8fce57f34e6bdc23ee7a09fd7074388c1a5a42d7b58d58eba8bcf074c32f83"",""master_key"":""2d2c45c2b5b01a78135935fc83386179f69032d2b0c2c3420d03cc205b4809e7a4c26d9655221dec95302dd1235c6c52""}","I think its complaining about userhook singleton not deleted on de-init.

Also my guess. The easiest fix to this (and most correct) is to properly implement singleton.
class Singleton
{
public:
    static Singleton& getInstance() {
        static Singleton instance;
        return instance;
    }
}
will do the job.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1060,2020-10-22T17:56:53Z,2020-11-24T00:26:24Z,2020-11-24T00:26:24Z,MERGED,True,787,66,12,https://github.com/kscieslinski,tlsmon plugin,20,[],https://github.com/tklengyel/drakvuf/pull/1060,https://github.com/kscieslinski,8,https://github.com/tklengyel/drakvuf/pull/1060#issuecomment-723000716,"Draft
Marked as draft. It requires adding additional features to libusermode (user-mode hooking on the existing process).
Functionality
Extracting tls master key in a format that is supported by Wireshark. It will require some work as there are different libraries.
Example
Both client_random and master_key are saved in drakmon.log file:
$ cat /tmp/drakrun/vm-1/output/drakmon.log | grep tlsmon
{""Plugin"":""tlsmon"",""TimeStamp"":""1603388506.633650"",""PID"":464,""PPID"":348,""TID"":1728,""UserName"":""SessionID"",""UserId"":0,""ProcessName"":""\\Device\\HarddiskVolume2\\Windows\\System32\\lsass.exe"",""Method"":""SslGenerateMasterKey"",""EventUID"":""0x36f5"",""client_random"":""5f8fce57f34e6bdc23ee7a09fd7074388c1a5a42d7b58d58eba8bcf074c32f83"",""master_key"":""2d2c45c2b5b01a78135935fc83386179f69032d2b0c2c3420d03cc205b4809e7a4c26d9655221dec95302dd1235c6c52""}",I've decided to create a separate pull request (#1080) that applies these small changes to libusermode.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1060,2020-10-22T17:56:53Z,2020-11-24T00:26:24Z,2020-11-24T00:26:24Z,MERGED,True,787,66,12,https://github.com/kscieslinski,tlsmon plugin,20,[],https://github.com/tklengyel/drakvuf/pull/1060,https://github.com/icedevml,9,https://github.com/tklengyel/drakvuf/pull/1060#issuecomment-729707831,"Draft
Marked as draft. It requires adding additional features to libusermode (user-mode hooking on the existing process).
Functionality
Extracting tls master key in a format that is supported by Wireshark. It will require some work as there are different libraries.
Example
Both client_random and master_key are saved in drakmon.log file:
$ cat /tmp/drakrun/vm-1/output/drakmon.log | grep tlsmon
{""Plugin"":""tlsmon"",""TimeStamp"":""1603388506.633650"",""PID"":464,""PPID"":348,""TID"":1728,""UserName"":""SessionID"",""UserId"":0,""ProcessName"":""\\Device\\HarddiskVolume2\\Windows\\System32\\lsass.exe"",""Method"":""SslGenerateMasterKey"",""EventUID"":""0x36f5"",""client_random"":""5f8fce57f34e6bdc23ee7a09fd7074388c1a5a42d7b58d58eba8bcf074c32f83"",""master_key"":""2d2c45c2b5b01a78135935fc83386179f69032d2b0c2c3420d03cc205b4809e7a4c26d9655221dec95302dd1235c6c52""}",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1060,2020-10-22T17:56:53Z,2020-11-24T00:26:24Z,2020-11-24T00:26:24Z,MERGED,True,787,66,12,https://github.com/kscieslinski,tlsmon plugin,20,[],https://github.com/tklengyel/drakvuf/pull/1060,https://github.com/icedevml,10,https://github.com/tklengyel/drakvuf/pull/1060#issuecomment-730519842,"Draft
Marked as draft. It requires adding additional features to libusermode (user-mode hooking on the existing process).
Functionality
Extracting tls master key in a format that is supported by Wireshark. It will require some work as there are different libraries.
Example
Both client_random and master_key are saved in drakmon.log file:
$ cat /tmp/drakrun/vm-1/output/drakmon.log | grep tlsmon
{""Plugin"":""tlsmon"",""TimeStamp"":""1603388506.633650"",""PID"":464,""PPID"":348,""TID"":1728,""UserName"":""SessionID"",""UserId"":0,""ProcessName"":""\\Device\\HarddiskVolume2\\Windows\\System32\\lsass.exe"",""Method"":""SslGenerateMasterKey"",""EventUID"":""0x36f5"",""client_random"":""5f8fce57f34e6bdc23ee7a09fd7074388c1a5a42d7b58d58eba8bcf074c32f83"",""master_key"":""2d2c45c2b5b01a78135935fc83386179f69032d2b0c2c3420d03cc205b4809e7a4c26d9655221dec95302dd1235c6c52""}",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1060,2020-10-22T17:56:53Z,2020-11-24T00:26:24Z,2020-11-24T00:26:24Z,MERGED,True,787,66,12,https://github.com/kscieslinski,tlsmon plugin,20,[],https://github.com/tklengyel/drakvuf/pull/1060,https://github.com/icedevml,11,https://github.com/tklengyel/drakvuf/pull/1060#issuecomment-730540380,"Draft
Marked as draft. It requires adding additional features to libusermode (user-mode hooking on the existing process).
Functionality
Extracting tls master key in a format that is supported by Wireshark. It will require some work as there are different libraries.
Example
Both client_random and master_key are saved in drakmon.log file:
$ cat /tmp/drakrun/vm-1/output/drakmon.log | grep tlsmon
{""Plugin"":""tlsmon"",""TimeStamp"":""1603388506.633650"",""PID"":464,""PPID"":348,""TID"":1728,""UserName"":""SessionID"",""UserId"":0,""ProcessName"":""\\Device\\HarddiskVolume2\\Windows\\System32\\lsass.exe"",""Method"":""SslGenerateMasterKey"",""EventUID"":""0x36f5"",""client_random"":""5f8fce57f34e6bdc23ee7a09fd7074388c1a5a42d7b58d58eba8bcf074c32f83"",""master_key"":""2d2c45c2b5b01a78135935fc83386179f69032d2b0c2c3420d03cc205b4809e7a4c26d9655221dec95302dd1235c6c52""}",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1060,2020-10-22T17:56:53Z,2020-11-24T00:26:24Z,2020-11-24T00:26:24Z,MERGED,True,787,66,12,https://github.com/kscieslinski,tlsmon plugin,20,[],https://github.com/tklengyel/drakvuf/pull/1060,https://github.com/icedevml,12,https://github.com/tklengyel/drakvuf/pull/1060#issuecomment-730699773,"Draft
Marked as draft. It requires adding additional features to libusermode (user-mode hooking on the existing process).
Functionality
Extracting tls master key in a format that is supported by Wireshark. It will require some work as there are different libraries.
Example
Both client_random and master_key are saved in drakmon.log file:
$ cat /tmp/drakrun/vm-1/output/drakmon.log | grep tlsmon
{""Plugin"":""tlsmon"",""TimeStamp"":""1603388506.633650"",""PID"":464,""PPID"":348,""TID"":1728,""UserName"":""SessionID"",""UserId"":0,""ProcessName"":""\\Device\\HarddiskVolume2\\Windows\\System32\\lsass.exe"",""Method"":""SslGenerateMasterKey"",""EventUID"":""0x36f5"",""client_random"":""5f8fce57f34e6bdc23ee7a09fd7074388c1a5a42d7b58d58eba8bcf074c32f83"",""master_key"":""2d2c45c2b5b01a78135935fc83386179f69032d2b0c2c3420d03cc205b4809e7a4c26d9655221dec95302dd1235c6c52""}",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1061,2020-10-23T22:07:22Z,2020-10-23T23:00:38Z,2020-10-23T23:23:40Z,MERGED,True,91,9,6,https://github.com/icedevml,injector: optionally wait until injected process terminates,1,[],https://github.com/tklengyel/drakvuf/pull/1061,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/1061,Add -w command line switch in injector which blocks until the termination of injected program is observed. Program's exit code is captured and injector returns error if it's non-zero.,Add -w command line switch in injector which blocks until the termination of injected program is observed. Program's exit code is captured and injector returns error if it's non-zero.,True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1063,2020-10-24T20:59:26Z,2020-10-25T01:22:59Z,2020-11-06T18:55:44Z,MERGED,True,8,0,3,https://github.com/icedevml,ship dwarf2json with drakvuf-bundle,1,[],https://github.com/tklengyel/drakvuf/pull/1063,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/1063,drakvuf-bundle: start shiping dwarf2json tool to /usr/bin,drakvuf-bundle: start shiping dwarf2json tool to /usr/bin,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1063,2020-10-24T20:59:26Z,2020-10-25T01:22:59Z,2020-11-06T18:55:44Z,MERGED,True,8,0,3,https://github.com/icedevml,ship dwarf2json with drakvuf-bundle,1,[],https://github.com/tklengyel/drakvuf/pull/1063,https://github.com/icedevml,2,https://github.com/tklengyel/drakvuf/pull/1063#issuecomment-716075774,drakvuf-bundle: start shiping dwarf2json tool to /usr/bin,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1064,2020-10-25T17:44:21Z,2020-10-25T17:44:28Z,2020-10-25T17:44:31Z,MERGED,True,1,1,1,https://github.com/tklengyel,Add dwarf2json to package submodule update,1,[],https://github.com/tklengyel/drakvuf/pull/1064,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1064,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1065,2020-10-25T17:49:37Z,2020-10-25T17:49:51Z,2020-10-25T17:49:54Z,MERGED,True,1,1,1,https://github.com/tklengyel,Add dwarf2json to package build submodule init (again),1,[],https://github.com/tklengyel/drakvuf/pull/1065,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1065,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1066,2020-10-25T18:50:18Z,2020-10-26T01:43:47Z,2020-10-26T03:10:43Z,MERGED,True,98,26,2,https://github.com/icedevml,Build Debian packages using GitHub Actions,5,[],https://github.com/tklengyel/drakvuf/pull/1066,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/1066,"Switch from Travis to GitHub Action, it builds much much faster and we could also build for 3 distros in parallel.

When somebody makes a pull request, a dry run of package build is executed (release creation and asset upload steps are skipped).
When the PR is pushed to master, actual release is created and assets are uploaded.","Switch from Travis to GitHub Action, it builds much much faster and we could also build for 3 distros in parallel.

When somebody makes a pull request, a dry run of package build is executed (release creation and asset upload steps are skipped).
When the PR is pushed to master, actual release is created and assets are uploaded.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1066,2020-10-25T18:50:18Z,2020-10-26T01:43:47Z,2020-10-26T03:10:43Z,MERGED,True,98,26,2,https://github.com/icedevml,Build Debian packages using GitHub Actions,5,[],https://github.com/tklengyel/drakvuf/pull/1066,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/1066#issuecomment-716208870,"Switch from Travis to GitHub Action, it builds much much faster and we could also build for 3 distros in parallel.

When somebody makes a pull request, a dry run of package build is executed (release creation and asset upload steps are skipped).
When the PR is pushed to master, actual release is created and assets are uploaded.",We also want to cache Xen similarly to how we did it on Travis. Check out https://github.com/actions/cache,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1066,2020-10-25T18:50:18Z,2020-10-26T01:43:47Z,2020-10-26T03:10:43Z,MERGED,True,98,26,2,https://github.com/icedevml,Build Debian packages using GitHub Actions,5,[],https://github.com/tklengyel/drakvuf/pull/1066,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/1066#issuecomment-716221316,"Switch from Travis to GitHub Action, it builds much much faster and we could also build for 3 distros in parallel.

When somebody makes a pull request, a dry run of package build is executed (release creation and asset upload steps are skipped).
When the PR is pushed to master, actual release is created and assets are uploaded.","We also want to cache Xen similarly to how we did it on Travis. Check out https://github.com/actions/cache

done",True,{'ROCKET': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1066,2020-10-25T18:50:18Z,2020-10-26T01:43:47Z,2020-10-26T03:10:43Z,MERGED,True,98,26,2,https://github.com/icedevml,Build Debian packages using GitHub Actions,5,[],https://github.com/tklengyel/drakvuf/pull/1066,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1066#issuecomment-716256919,"Switch from Travis to GitHub Action, it builds much much faster and we could also build for 3 distros in parallel.

When somebody makes a pull request, a dry run of package build is executed (release creation and asset upload steps are skipped).
When the PR is pushed to master, actual release is created and assets are uploaded.","What does the release-url file do and how does it get set? Never mind, I see that it's set in a different job.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1066,2020-10-25T18:50:18Z,2020-10-26T01:43:47Z,2020-10-26T03:10:43Z,MERGED,True,98,26,2,https://github.com/icedevml,Build Debian packages using GitHub Actions,5,[],https://github.com/tklengyel/drakvuf/pull/1066,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1066#issuecomment-716265835,"Switch from Travis to GitHub Action, it builds much much faster and we could also build for 3 distros in parallel.

When somebody makes a pull request, a dry run of package build is executed (release creation and asset upload steps are skipped).
When the PR is pushed to master, actual release is created and assets are uploaded.",Error: Input required and not supplied: upload_url,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1066,2020-10-25T18:50:18Z,2020-10-26T01:43:47Z,2020-10-26T03:10:43Z,MERGED,True,98,26,2,https://github.com/icedevml,Build Debian packages using GitHub Actions,5,[],https://github.com/tklengyel/drakvuf/pull/1066,https://github.com/icedevml,6,https://github.com/tklengyel/drakvuf/pull/1066#issuecomment-716277866,"Switch from Travis to GitHub Action, it builds much much faster and we could also build for 3 distros in parallel.

When somebody makes a pull request, a dry run of package build is executed (release creation and asset upload steps are skipped).
When the PR is pushed to master, actual release is created and assets are uploaded.",I see you've already debugged this 👍 Sorry for leaving a bug in the original code :P,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1067,2020-10-26T02:14:15Z,2020-10-26T02:16:17Z,2020-10-26T02:16:20Z,MERGED,True,16,40,1,https://github.com/tklengyel,Simplify remaining travis tasks,1,[],https://github.com/tklengyel/drakvuf/pull/1067,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1067,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1068,2020-10-26T02:34:58Z,2020-10-26T02:35:35Z,2020-10-26T02:35:37Z,MERGED,True,7,16,2,https://github.com/tklengyel,Residual fixes after PR #1066,2,[],https://github.com/tklengyel/drakvuf/pull/1068,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1068,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1069,2020-10-26T02:44:19Z,2020-10-26T02:44:47Z,2020-10-26T02:44:50Z,MERGED,True,5,8,1,https://github.com/tklengyel, Switch checkout and artifact download in deb github action,1,[],https://github.com/tklengyel/drakvuf/pull/1069,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1069,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1070,2020-10-26T03:09:36Z,2020-10-27T12:19:08Z,2020-10-27T12:19:08Z,MERGED,True,13,18,3,https://github.com/icedevml,Fix bugs in Linux injector,2,[],https://github.com/tklengyel/drakvuf/pull/1070,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/1070,"Fix linux_eprocess_sym2va which is a dependency of Linux injector.
Tested with Debian Buster (Desktop)","Fix linux_eprocess_sym2va which is a dependency of Linux injector.
Tested with Debian Buster (Desktop)",True,"{'THUMBS_UP': ['https://github.com/Dos98', 'https://github.com/tklengyel']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1070,2020-10-26T03:09:36Z,2020-10-27T12:19:08Z,2020-10-27T12:19:08Z,MERGED,True,13,18,3,https://github.com/icedevml,Fix bugs in Linux injector,2,[],https://github.com/tklengyel/drakvuf/pull/1070,https://github.com/icedevml,2,https://github.com/tklengyel/drakvuf/pull/1070#issuecomment-716283549,"Fix linux_eprocess_sym2va which is a dependency of Linux injector.
Tested with Debian Buster (Desktop)","I've also tried to test with Ubuntu 20.04 Desktop but there is also a bug linux_eprocess_sym2va (perhaps different one). I guess this needs additional debugging turns, but at least we have something for the start.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1073,2020-10-30T12:01:10Z,2021-01-21T13:25:34Z,2021-04-08T12:36:23Z,MERGED,True,201,4,12,https://github.com/skvl,Add infrastructure to stop plugins,10,[],https://github.com/tklengyel/drakvuf/pull/1073,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1073,"This is an on-going work to add infrastructure to stop and destroy plug-ins.
For example this would allow to stop all plug-ins except procdump before starting termination loop. Thus termination loop would become more clean and simple.","This is an on-going work to add infrastructure to stop and destroy plug-ins.
For example this would allow to stop all plug-ins except procdump before starting termination loop. Thus termination loop would become more clean and simple.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1073,2020-10-30T12:01:10Z,2021-01-21T13:25:34Z,2021-04-08T12:36:23Z,MERGED,True,201,4,12,https://github.com/skvl,Add infrastructure to stop plugins,10,[],https://github.com/tklengyel/drakvuf/pull/1073,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1073#issuecomment-719512689,"This is an on-going work to add infrastructure to stop and destroy plug-ins.
For example this would allow to stop all plug-ins except procdump before starting termination loop. Thus termination loop would become more clean and simple.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1073,2020-10-30T12:01:10Z,2021-01-21T13:25:34Z,2021-04-08T12:36:23Z,MERGED,True,201,4,12,https://github.com/skvl,Add infrastructure to stop plugins,10,[],https://github.com/tklengyel/drakvuf/pull/1073,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1073#issuecomment-719543010,"This is an on-going work to add infrastructure to stop and destroy plug-ins.
For example this would allow to stop all plug-ins except procdump before starting termination loop. Thus termination loop would become more clean and simple.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1073,2020-10-30T12:01:10Z,2021-01-21T13:25:34Z,2021-04-08T12:36:23Z,MERGED,True,201,4,12,https://github.com/skvl,Add infrastructure to stop plugins,10,[],https://github.com/tklengyel/drakvuf/pull/1073,https://github.com/skvl,4,https://github.com/tklengyel/drakvuf/pull/1073#issuecomment-720494226,"This is an on-going work to add infrastructure to stop and destroy plug-ins.
For example this would allow to stop all plug-ins except procdump before starting termination loop. Thus termination loop would become more clean and simple.","@tklengyel, @BonusPlay, I have updated the infrastructure.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1073,2020-10-30T12:01:10Z,2021-01-21T13:25:34Z,2021-04-08T12:36:23Z,MERGED,True,201,4,12,https://github.com/skvl,Add infrastructure to stop plugins,10,[],https://github.com/tklengyel/drakvuf/pull/1073,https://github.com/skvl,5,https://github.com/tklengyel/drakvuf/pull/1073#issuecomment-720497571,"This is an on-going work to add infrastructure to stop and destroy plug-ins.
For example this would allow to stop all plug-ins except procdump before starting termination loop. Thus termination loop would become more clean and simple.","@icedevml first of all I try to simplify termination loop. During termination loop I would like to get procdump only. All other plugins slow down the whole process. E.g. I would like to get procdump of injected process in 10 s. But for MS Word or Chrome it could fail.
Second I would like to make drakvuf more clean and robust project. This allows to check how good we are in trap and memory manage. E.g. I have found some logical error in pluginex.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1073,2020-10-30T12:01:10Z,2021-01-21T13:25:34Z,2021-04-08T12:36:23Z,MERGED,True,201,4,12,https://github.com/skvl,Add infrastructure to stop plugins,10,[],https://github.com/tklengyel/drakvuf/pull/1073,https://github.com/skvl,6,https://github.com/tklengyel/drakvuf/pull/1073#issuecomment-720504165,"This is an on-going work to add infrastructure to stop and destroy plug-ins.
For example this would allow to stop all plug-ins except procdump before starting termination loop. Thus termination loop would become more clean and simple.","@tklengyel could you add printing stderr into CI please?
From here I don't know what is the error...",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1073,2020-10-30T12:01:10Z,2021-01-21T13:25:34Z,2021-04-08T12:36:23Z,MERGED,True,201,4,12,https://github.com/skvl,Add infrastructure to stop plugins,10,[],https://github.com/tklengyel/drakvuf/pull/1073,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/1073#issuecomment-720506869,"This is an on-going work to add infrastructure to stop and destroy plug-ins.
For example this would allow to stop all plug-ins except procdump before starting termination loop. Thus termination loop would become more clean and simple.","I don't think there would be anything on the stderr that would be of interest here, the log tells you already that DRAKVUF startup failed. It didn't even start running the second time, usually happens if the guest became unstable/crashed between the two drakvuf runs.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1073,2020-10-30T12:01:10Z,2021-01-21T13:25:34Z,2021-04-08T12:36:23Z,MERGED,True,201,4,12,https://github.com/skvl,Add infrastructure to stop plugins,10,[],https://github.com/tklengyel/drakvuf/pull/1073,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/1073#issuecomment-720507080,"This is an on-going work to add infrastructure to stop and destroy plug-ins.
For example this would allow to stop all plug-ins except procdump before starting termination loop. Thus termination loop would become more clean and simple.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1073,2020-10-30T12:01:10Z,2021-01-21T13:25:34Z,2021-04-08T12:36:23Z,MERGED,True,201,4,12,https://github.com/skvl,Add infrastructure to stop plugins,10,[],https://github.com/tklengyel/drakvuf/pull/1073,https://github.com/BonusPlay,9,https://github.com/tklengyel/drakvuf/pull/1073#issuecomment-720516540,"This is an on-going work to add infrastructure to stop and destroy plug-ins.
For example this would allow to stop all plug-ins except procdump before starting termination loop. Thus termination loop would become more clean and simple.","This allows to check how good we are in trap and memory management. E.g. I have found some logical error in pluginex.

I'm sure that writing more code in C and not using basic memory management techniques from C++ will help, as none ever managed to leak memory using malloc/new.
Reimplementing everything 5 times instead of using shared code is also a known good pattern, as person trying to fix the code has to read 5x more. I've spent past 2 weeks refactoring libusermode and I will probably spend another 2 weeks on it. The problem isn't that libusermode is poorly written (well, it kinda is). The real problem is that it uses plugin_ex (wtf?) on 2 hooks, but regular drakvuf traps on other hooks (wtf?).
If you really want to see how good are we at managing memory then you should port plugins to plugin_ex and if there is a bug in plugin_ex then it can be fixed in 1 place instead of 5.
EDIT: My friends from CERT informed me that this comment might be too offensive. It wasn't supposed to & I'm sorry if anyone felt that way. It's wasn't targeted at anyone, especially not at @skvl, as he is one of very few contributors of C++ code ❤️.",True,"{'HEART': ['https://github.com/tklengyel', 'https://github.com/disaykin'], 'LAUGH': ['https://github.com/skvl'], 'THUMBS_UP': ['https://github.com/kscieslinski', 'https://github.com/disaykin']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1073,2020-10-30T12:01:10Z,2021-01-21T13:25:34Z,2021-04-08T12:36:23Z,MERGED,True,201,4,12,https://github.com/skvl,Add infrastructure to stop plugins,10,[],https://github.com/tklengyel/drakvuf/pull/1073,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/1073#issuecomment-720810218,"This is an on-going work to add infrastructure to stop and destroy plug-ins.
For example this would allow to stop all plug-ins except procdump before starting termination loop. Thus termination loop would become more clean and simple.","@BonusPlay your comment was a bit passive-aggressive but I don't think it was offensive. Your point seems to boil down to ""we should port all plugins to use plugin_ex"". I specifically don't want to have all plugins forced to use plugin_ex as I personally consider it C++ voodoo. But if some plugin authors find good use for it I have no issue with having it. Right now as you say it's mostly just you guys and @skvl. Perhaps if we moved everything over we would get better memory management but I just don't want to have a central garbage collection system in place. If someone wants to use that though as part of plugin_ex or some other shared/sharable mechanism, great, have at it, just don't force it on every other plugin. I think there is value in making the barrier of entry to writing a plugin as low as possible and that may include stuff like doing trap management via malloc/free as I think that is easier to follow right now. That said, if you guys document the crap out of plugin_ex and make very newbie friendly templates and tutorials on how to use it, I may reconsider ;)",True,"{'THUMBS_UP': ['https://github.com/aoshiken', 'https://github.com/disaykin'], 'HEART': ['https://github.com/aoshiken', 'https://github.com/disaykin']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1073,2020-10-30T12:01:10Z,2021-01-21T13:25:34Z,2021-04-08T12:36:23Z,MERGED,True,201,4,12,https://github.com/skvl,Add infrastructure to stop plugins,10,[],https://github.com/tklengyel/drakvuf/pull/1073,https://github.com/skvl,11,https://github.com/tklengyel/drakvuf/pull/1073#issuecomment-720921002,"This is an on-going work to add infrastructure to stop and destroy plug-ins.
For example this would allow to stop all plug-ins except procdump before starting termination loop. Thus termination loop would become more clean and simple.","At the time I didn't want specifically to change plugin_ex. This is really a separate task. I re-factor a plug-in after plug-in in a part of stopping it. I think it would be great if every plug-in would be clean enough to stop and start again.
As I said at the time I use it for single purpose: shorten time for termination loop. This is my only concern right now.
As @tklengyel proposed it would be great to start and stop plug-ins in runtime based on events inside VM. I think I would use the idea in the future. Though I don't know hos yet.
What about C++ voodoo in plugin_ex I could remember first time I saw it :) It was hard time... Because I'm a C/Assembler developer in the first place. I have to spent a lot of time to read and understand all the templates staff and class hierarchies.",True,{'THUMBS_UP': ['https://github.com/aoshiken']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1073,2020-10-30T12:01:10Z,2021-01-21T13:25:34Z,2021-04-08T12:36:23Z,MERGED,True,201,4,12,https://github.com/skvl,Add infrastructure to stop plugins,10,[],https://github.com/tklengyel/drakvuf/pull/1073,https://github.com/skvl,12,https://github.com/tklengyel/drakvuf/pull/1073#issuecomment-720961510,"This is an on-going work to add infrastructure to stop and destroy plug-ins.
For example this would allow to stop all plug-ins except procdump before starting termination loop. Thus termination loop would become more clean and simple.",Though this is really weird that CI fails. This branch works for me. I have run it 1000 times with my machine. And only two BSODs in the middle of analyses (far away from stopping plug-ins).,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1073,2020-10-30T12:01:10Z,2021-01-21T13:25:34Z,2021-04-08T12:36:23Z,MERGED,True,201,4,12,https://github.com/skvl,Add infrastructure to stop plugins,10,[],https://github.com/tklengyel/drakvuf/pull/1073,https://github.com/tklengyel,13,https://github.com/tklengyel/drakvuf/pull/1073#issuecomment-721132271,"This is an on-going work to add infrastructure to stop and destroy plug-ins.
For example this would allow to stop all plug-ins except procdump before starting termination loop. Thus termination loop would become more clean and simple.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1073,2020-10-30T12:01:10Z,2021-01-21T13:25:34Z,2021-04-08T12:36:23Z,MERGED,True,201,4,12,https://github.com/skvl,Add infrastructure to stop plugins,10,[],https://github.com/tklengyel/drakvuf/pull/1073,https://github.com/tklengyel,14,https://github.com/tklengyel/drakvuf/pull/1073#issuecomment-722066460,"This is an on-going work to add infrastructure to stop and destroy plug-ins.
For example this would allow to stop all plug-ins except procdump before starting termination loop. Thus termination loop would become more clean and simple.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1073,2020-10-30T12:01:10Z,2021-01-21T13:25:34Z,2021-04-08T12:36:23Z,MERGED,True,201,4,12,https://github.com/skvl,Add infrastructure to stop plugins,10,[],https://github.com/tklengyel/drakvuf/pull/1073,https://github.com/tklengyel,15,https://github.com/tklengyel/drakvuf/pull/1073#issuecomment-722079479,"This is an on-going work to add infrastructure to stop and destroy plug-ins.
For example this would allow to stop all plug-ins except procdump before starting termination loop. Thus termination loop would become more clean and simple.","Well, the CI is pretty consistent with this one. It's always the Windows 10 VM that fails to start again after one successful run of drakvuf on it. So it is very likely that things don't close down cleanly with this PR in place that prevents the next run from starting.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1073,2020-10-30T12:01:10Z,2021-01-21T13:25:34Z,2021-04-08T12:36:23Z,MERGED,True,201,4,12,https://github.com/skvl,Add infrastructure to stop plugins,10,[],https://github.com/tklengyel/drakvuf/pull/1073,https://github.com/skvl,16,https://github.com/tklengyel/drakvuf/pull/1073#issuecomment-722346112,"This is an on-going work to add infrastructure to stop and destroy plug-ins.
For example this would allow to stop all plug-ins except procdump before starting termination loop. Thus termination loop would become more clean and simple.","Ha-ha! I'm working to stop plug-ins well. And it breaks second start of drakvuf :)
@tklengyel thank you.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1073,2020-10-30T12:01:10Z,2021-01-21T13:25:34Z,2021-04-08T12:36:23Z,MERGED,True,201,4,12,https://github.com/skvl,Add infrastructure to stop plugins,10,[],https://github.com/tklengyel/drakvuf/pull/1073,https://github.com/skvl,17,https://github.com/tklengyel/drakvuf/pull/1073#issuecomment-722357316,"This is an on-going work to add infrastructure to stop and destroy plug-ins.
For example this would allow to stop all plug-ins except procdump before starting termination loop. Thus termination loop would become more clean and simple.","@tklengyel I have removed stop plug-ins from main.cpp because this is not essential for everyone.
I would add some configuration to specify which plug-ins to stop in the future. And would try to debug why it breaks second run.
Though I would like to merge the infrastructure to avoid decay. I believe that it is useful.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1073,2020-10-30T12:01:10Z,2021-01-21T13:25:34Z,2021-04-08T12:36:23Z,MERGED,True,201,4,12,https://github.com/skvl,Add infrastructure to stop plugins,10,[],https://github.com/tklengyel/drakvuf/pull/1073,https://github.com/icedevml,18,https://github.com/tklengyel/drakvuf/pull/1073#issuecomment-722374414,"This is an on-going work to add infrastructure to stop and destroy plug-ins.
For example this would allow to stop all plug-ins except procdump before starting termination loop. Thus termination loop would become more clean and simple.","Ha-ha! I'm working to stop plug-ins well. And it breaks second start of drakvuf :)

Since this is also affecting injector (right?), please thoroughly test your changes to ensure that multiple re-runs of DRAKVUF/injector don't cause any harm. At the moment we depend on running injector multiple times for a single VM, so if it would screw up, it would be a disaster :(",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1073,2020-10-30T12:01:10Z,2021-01-21T13:25:34Z,2021-04-08T12:36:23Z,MERGED,True,201,4,12,https://github.com/skvl,Add infrastructure to stop plugins,10,[],https://github.com/tklengyel/drakvuf/pull/1073,https://github.com/skvl,19,https://github.com/tklengyel/drakvuf/pull/1073#issuecomment-722930437,"This is an on-going work to add infrastructure to stop and destroy plug-ins.
For example this would allow to stop all plug-ins except procdump before starting termination loop. Thus termination loop would become more clean and simple.",@icedevml I have removed calls to new code. So it will not disaster you.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1073,2020-10-30T12:01:10Z,2021-01-21T13:25:34Z,2021-04-08T12:36:23Z,MERGED,True,201,4,12,https://github.com/skvl,Add infrastructure to stop plugins,10,[],https://github.com/tklengyel/drakvuf/pull/1073,https://github.com/tklengyel,20,https://github.com/tklengyel/drakvuf/pull/1073#issuecomment-723364528,"This is an on-going work to add infrastructure to stop and destroy plug-ins.
For example this would allow to stop all plug-ins except procdump before starting termination loop. Thus termination loop would become more clean and simple.",I think this PR still needs some work to clarify the design around it's bits before I can merge it.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1073,2020-10-30T12:01:10Z,2021-01-21T13:25:34Z,2021-04-08T12:36:23Z,MERGED,True,201,4,12,https://github.com/skvl,Add infrastructure to stop plugins,10,[],https://github.com/tklengyel/drakvuf/pull/1073,https://github.com/tklengyel,21,https://github.com/tklengyel/drakvuf/pull/1073#issuecomment-758704028,"This is an on-going work to add infrastructure to stop and destroy plug-ins.
For example this would allow to stop all plug-ins except procdump before starting termination loop. Thus termination loop would become more clean and simple.","@skvl This is looking largely OK to me now, only bit I'm confused about is why there is a need for a drakvuf_loop to stop the plugins to begin with. You should be able to remove drakvuf_traps at any time while the VM is paused. In fact, I think that would be the preferred way of doing that. So what's the loop there for?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1073,2020-10-30T12:01:10Z,2021-01-21T13:25:34Z,2021-04-08T12:36:23Z,MERGED,True,201,4,12,https://github.com/skvl,Add infrastructure to stop plugins,10,[],https://github.com/tklengyel/drakvuf/pull/1073,https://github.com/skvl,22,https://github.com/tklengyel/drakvuf/pull/1073#issuecomment-759381031,"This is an on-going work to add infrastructure to stop and destroy plug-ins.
For example this would allow to stop all plug-ins except procdump before starting termination loop. Thus termination loop would become more clean and simple.","@tklengyel let examine some injection sequence (e.g. in filedelete plug-in).
On NtClose callback we start reading file. So we inject ZwQueryVolumeInformationFile. Then we inject ZwQueryInformationFile. And after it we inject other functions
If after we remove traps after ZwQueryVolumeInformationFile have been injected but before we complete dumping file then VM would be left with bad stack. Because there would be no trap on return from ZwQueryVolumeInformationFile to restore stack.
Am I right?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1073,2020-10-30T12:01:10Z,2021-01-21T13:25:34Z,2021-04-08T12:36:23Z,MERGED,True,201,4,12,https://github.com/skvl,Add infrastructure to stop plugins,10,[],https://github.com/tklengyel/drakvuf/pull/1073,https://github.com/tklengyel,23,https://github.com/tklengyel/drakvuf/pull/1073#issuecomment-759388920,"This is an on-going work to add infrastructure to stop and destroy plug-ins.
For example this would allow to stop all plug-ins except procdump before starting termination loop. Thus termination loop would become more clean and simple.","OK, if that's the case the plugins need to communicate whether they are in a state they can be cleanly stopped or not (ie. they are awaiting return from injected call). You shouldn't have to manually specify which plugin is like that. When stop is called they should just return an error saying give me more loop time to cleanly stop. After the first stop request though the plugin should stop continuing immediately after the in-flight injection returns, even if there would have been other injections to follow. What the user should be specifyng is how much extra loop time to give these plugins max if they say they need more.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1073,2020-10-30T12:01:10Z,2021-01-21T13:25:34Z,2021-04-08T12:36:23Z,MERGED,True,201,4,12,https://github.com/skvl,Add infrastructure to stop plugins,10,[],https://github.com/tklengyel/drakvuf/pull/1073,https://github.com/skvl,24,https://github.com/tklengyel/drakvuf/pull/1073#issuecomment-759597465,"This is an on-going work to add infrastructure to stop and destroy plug-ins.
For example this would allow to stop all plug-ins except procdump before starting termination loop. Thus termination loop would become more clean and simple.","@tklengyel if we do like you suggest then it would be possible to wast time.
E.g. a user specified to wait 10s. We stop plug-ins and filedelete returns that is it not fully stopped. So we start loop for 10s. But after 1s filedelete finished its job. So we wast 9s.
I think this is not a good solution. What do You think?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1073,2020-10-30T12:01:10Z,2021-01-21T13:25:34Z,2021-04-08T12:36:23Z,MERGED,True,201,4,12,https://github.com/skvl,Add infrastructure to stop plugins,10,[],https://github.com/tklengyel/drakvuf/pull/1073,https://github.com/tklengyel,25,https://github.com/tklengyel/drakvuf/pull/1073#issuecomment-759608650,"This is an on-going work to add infrastructure to stop and destroy plug-ins.
For example this would allow to stop all plug-ins except procdump before starting termination loop. Thus termination loop would become more clean and simple.","Well, the idea would be that the time specified as max time would be just that, a max time. Obviously if the plugin that requested more time finishes before, and no other plugins are left in non-stopped state, we would exit from the wait loop.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1073,2020-10-30T12:01:10Z,2021-01-21T13:25:34Z,2021-04-08T12:36:23Z,MERGED,True,201,4,12,https://github.com/skvl,Add infrastructure to stop plugins,10,[],https://github.com/tklengyel/drakvuf/pull/1073,https://github.com/tklengyel,26,https://github.com/tklengyel/drakvuf/pull/1073#issuecomment-759610182,"This is an on-going work to add infrastructure to stop and destroy plug-ins.
For example this would allow to stop all plug-ins except procdump before starting termination loop. Thus termination loop would become more clean and simple.","Thinking about logistics, for example the plugin that requested more time is now done, it can issue a drakvuf_interrupt with a specific signal saying it's now all set. That would break the wait loop, main drakvuf could do another swoop on the plugins to see if they are all stopped, if no, resume the wait loop with whatever time is remaining. If it runs out of time, exits as-is without waiting for the plugins.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1073,2020-10-30T12:01:10Z,2021-01-21T13:25:34Z,2021-04-08T12:36:23Z,MERGED,True,201,4,12,https://github.com/skvl,Add infrastructure to stop plugins,10,[],https://github.com/tklengyel/drakvuf/pull/1073,https://github.com/skvl,27,https://github.com/tklengyel/drakvuf/pull/1073#issuecomment-759656452,"This is an on-going work to add infrastructure to stop and destroy plug-ins.
For example this would allow to stop all plug-ins except procdump before starting termination loop. Thus termination loop would become more clean and simple.",@tklengyel do You mean something like in last commit?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1073,2020-10-30T12:01:10Z,2021-01-21T13:25:34Z,2021-04-08T12:36:23Z,MERGED,True,201,4,12,https://github.com/skvl,Add infrastructure to stop plugins,10,[],https://github.com/tklengyel/drakvuf/pull/1073,https://github.com/tklengyel,28,https://github.com/tklengyel/drakvuf/pull/1073#issuecomment-761592060,"This is an on-going work to add infrastructure to stop and destroy plug-ins.
For example this would allow to stop all plug-ins except procdump before starting termination loop. Thus termination loop would become more clean and simple.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1073,2020-10-30T12:01:10Z,2021-01-21T13:25:34Z,2021-04-08T12:36:23Z,MERGED,True,201,4,12,https://github.com/skvl,Add infrastructure to stop plugins,10,[],https://github.com/tklengyel/drakvuf/pull/1073,https://github.com/skvl,29,https://github.com/tklengyel/drakvuf/pull/1073#issuecomment-762619427,"This is an on-going work to add infrastructure to stop and destroy plug-ins.
For example this would allow to stop all plug-ins except procdump before starting termination loop. Thus termination loop would become more clean and simple.","@tklengyel, is everything right now?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1073,2020-10-30T12:01:10Z,2021-01-21T13:25:34Z,2021-04-08T12:36:23Z,MERGED,True,201,4,12,https://github.com/skvl,Add infrastructure to stop plugins,10,[],https://github.com/tklengyel/drakvuf/pull/1073,https://github.com/tklengyel,30,https://github.com/tklengyel/drakvuf/pull/1073#issuecomment-764640719,"This is an on-going work to add infrastructure to stop and destroy plug-ins.
For example this would allow to stop all plug-ins except procdump before starting termination loop. Thus termination loop would become more clean and simple.",@skvl This looks good to me. Thanks for putting in the effort and addressing all the change requests!,True,"{'THUMBS_UP': ['https://github.com/skvl'], 'LAUGH': ['https://github.com/skvl']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1074,2020-10-30T12:02:21Z,2021-01-26T14:25:54Z,2021-04-08T12:36:22Z,MERGED,True,10,6,4,https://github.com/skvl,Refactor messages,1,[],https://github.com/tklengyel/drakvuf/pull/1074,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1074,"This is already re-based on #1073
Current debug messages for different loops are rather confusing.","This is already re-based on #1073
Current debug messages for different loops are rather confusing.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1074,2020-10-30T12:02:21Z,2021-01-26T14:25:54Z,2021-04-08T12:36:22Z,MERGED,True,10,6,4,https://github.com/skvl,Refactor messages,1,[],https://github.com/tklengyel/drakvuf/pull/1074,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1074#issuecomment-719513179,"This is already re-based on #1073
Current debug messages for different loops are rather confusing.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1074,2020-10-30T12:02:21Z,2021-01-26T14:25:54Z,2021-04-08T12:36:22Z,MERGED,True,10,6,4,https://github.com/skvl,Refactor messages,1,[],https://github.com/tklengyel/drakvuf/pull/1074,https://github.com/skvl,3,https://github.com/tklengyel/drakvuf/pull/1074#issuecomment-720282234,"This is already re-based on #1073
Current debug messages for different loops are rather confusing.","@tklengyel, @icedevml, is this OK?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1074,2020-10-30T12:02:21Z,2021-01-26T14:25:54Z,2021-04-08T12:36:22Z,MERGED,True,10,6,4,https://github.com/skvl,Refactor messages,1,[],https://github.com/tklengyel/drakvuf/pull/1074,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1074#issuecomment-767533246,"This is already re-based on #1073
Current debug messages for different loops are rather confusing.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1075,2020-10-30T12:03:36Z,2020-10-30T19:39:56Z,2021-04-08T12:37:01Z,MERGED,True,40,1,3,https://github.com/skvl,libusermode: add binary16 type to dump memory regions,1,[],https://github.com/tklengyel/drakvuf/pull/1075,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1075,"This is already re-based onto #1073 and #1074 I have re-based onto master branch to simplify compare
This is a special meta type to dump memory regions.","This is already re-based onto #1073 and #1074 I have re-based onto master branch to simplify compare
This is a special meta type to dump memory regions.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1075,2020-10-30T12:03:36Z,2020-10-30T19:39:56Z,2021-04-08T12:37:01Z,MERGED,True,40,1,3,https://github.com/skvl,libusermode: add binary16 type to dump memory regions,1,[],https://github.com/tklengyel/drakvuf/pull/1075,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1075#issuecomment-719513700,"This is already re-based onto #1073 and #1074 I have re-based onto master branch to simplify compare
This is a special meta type to dump memory regions.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1075,2020-10-30T12:03:36Z,2020-10-30T19:39:56Z,2021-04-08T12:37:01Z,MERGED,True,40,1,3,https://github.com/skvl,libusermode: add binary16 type to dump memory regions,1,[],https://github.com/tklengyel/drakvuf/pull/1075,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1075#issuecomment-719543146,"This is already re-based onto #1073 and #1074 I have re-based onto master branch to simplify compare
This is a special meta type to dump memory regions.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1076,2020-10-30T12:15:00Z,2020-10-30T17:37:01Z,2021-04-08T12:37:02Z,MERGED,True,27,2,1,https://github.com/skvl,output_format: fix SIGSEGV on nullptr string,1,[],https://github.com/tklengyel/drakvuf/pull/1076,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1076,"This is already re-based onto #1075 I have re-based onto master branch to simplify compare
I have noticed that in some cases drakvuf crashes with SIGSEGV. With GDB I have found that the reason was std::string_view construction from nullptr while calculating the length of nullptr string.
After that I have carefully re-read the description:
The behavior is undefined if [s, s+Traits::length(s)) is not a valid range.","This is already re-based onto #1075 I have re-based onto master branch to simplify compare
I have noticed that in some cases drakvuf crashes with SIGSEGV. With GDB I have found that the reason was std::string_view construction from nullptr while calculating the length of nullptr string.
After that I have carefully re-read the description:
The behavior is undefined if [s, s+Traits::length(s)) is not a valid range.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1076,2020-10-30T12:15:00Z,2020-10-30T17:37:01Z,2021-04-08T12:37:02Z,MERGED,True,27,2,1,https://github.com/skvl,output_format: fix SIGSEGV on nullptr string,1,[],https://github.com/tklengyel/drakvuf/pull/1076,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1076#issuecomment-719518556,"This is already re-based onto #1075 I have re-based onto master branch to simplify compare
I have noticed that in some cases drakvuf crashes with SIGSEGV. With GDB I have found that the reason was std::string_view construction from nullptr while calculating the length of nullptr string.
After that I have carefully re-read the description:
The behavior is undefined if [s, s+Traits::length(s)) is not a valid range.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1076,2020-10-30T12:15:00Z,2020-10-30T17:37:01Z,2021-04-08T12:37:02Z,MERGED,True,27,2,1,https://github.com/skvl,output_format: fix SIGSEGV on nullptr string,1,[],https://github.com/tklengyel/drakvuf/pull/1076,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1076#issuecomment-719519187,"This is already re-based onto #1075 I have re-based onto master branch to simplify compare
I have noticed that in some cases drakvuf crashes with SIGSEGV. With GDB I have found that the reason was std::string_view construction from nullptr while calculating the length of nullptr string.
After that I have carefully re-read the description:
The behavior is undefined if [s, s+Traits::length(s)) is not a valid range.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1076,2020-10-30T12:15:00Z,2020-10-30T17:37:01Z,2021-04-08T12:37:02Z,MERGED,True,27,2,1,https://github.com/skvl,output_format: fix SIGSEGV on nullptr string,1,[],https://github.com/tklengyel/drakvuf/pull/1076,https://github.com/skvl,4,https://github.com/tklengyel/drakvuf/pull/1076#issuecomment-719539101,"This is already re-based onto #1075 I have re-based onto master branch to simplify compare
I have noticed that in some cases drakvuf crashes with SIGSEGV. With GDB I have found that the reason was std::string_view construction from nullptr while calculating the length of nullptr string.
After that I have carefully re-read the description:
The behavior is undefined if [s, s+Traits::length(s)) is not a valid range.",@tklengyel once again the CI error windows10-2004-jenkins is an invalid domain identifier (rc=-6),True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1076,2020-10-30T12:15:00Z,2020-10-30T17:37:01Z,2021-04-08T12:37:02Z,MERGED,True,27,2,1,https://github.com/skvl,output_format: fix SIGSEGV on nullptr string,1,[],https://github.com/tklengyel/drakvuf/pull/1076,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1076#issuecomment-719542209,"This is already re-based onto #1075 I have re-based onto master branch to simplify compare
I have noticed that in some cases drakvuf crashes with SIGSEGV. With GDB I have found that the reason was std::string_view construction from nullptr while calculating the length of nullptr string.
After that I have carefully re-read the description:
The behavior is undefined if [s, s+Traits::length(s)) is not a valid range.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1076,2020-10-30T12:15:00Z,2020-10-30T17:37:01Z,2021-04-08T12:37:02Z,MERGED,True,27,2,1,https://github.com/skvl,output_format: fix SIGSEGV on nullptr string,1,[],https://github.com/tklengyel/drakvuf/pull/1076,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1076#issuecomment-719542537,"This is already re-based onto #1075 I have re-based onto master branch to simplify compare
I have noticed that in some cases drakvuf crashes with SIGSEGV. With GDB I have found that the reason was std::string_view construction from nullptr while calculating the length of nullptr string.
After that I have carefully re-read the description:
The behavior is undefined if [s, s+Traits::length(s)) is not a valid range.",@skvl That error means the VM crashed and is no longer running when the cleanup script is looking for it.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1076,2020-10-30T12:15:00Z,2020-10-30T17:37:01Z,2021-04-08T12:37:02Z,MERGED,True,27,2,1,https://github.com/skvl,output_format: fix SIGSEGV on nullptr string,1,[],https://github.com/tklengyel/drakvuf/pull/1076,https://github.com/skvl,7,https://github.com/tklengyel/drakvuf/pull/1076#issuecomment-719652127,"This is already re-based onto #1075 I have re-based onto master branch to simplify compare
I have noticed that in some cases drakvuf crashes with SIGSEGV. With GDB I have found that the reason was std::string_view construction from nullptr while calculating the length of nullptr string.
After that I have carefully re-read the description:
The behavior is undefined if [s, s+Traits::length(s)) is not a valid range.","@skvl That error means the VM crashed and is no longer running when the cleanup script is looking for it.

Thank You! I didn't know. But why it crashed?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1076,2020-10-30T12:15:00Z,2020-10-30T17:37:01Z,2021-04-08T12:37:02Z,MERGED,True,27,2,1,https://github.com/skvl,output_format: fix SIGSEGV on nullptr string,1,[],https://github.com/tklengyel/drakvuf/pull/1076,https://github.com/skvl,8,https://github.com/tklengyel/drakvuf/pull/1076#issuecomment-719662586,"This is already re-based onto #1075 I have re-based onto master branch to simplify compare
I have noticed that in some cases drakvuf crashes with SIGSEGV. With GDB I have found that the reason was std::string_view construction from nullptr while calculating the length of nullptr string.
After that I have carefully re-read the description:
The behavior is undefined if [s, s+Traits::length(s)) is not a valid range.","@tklengyel, I have noticed that there is a BSOD at the end of analyses during some time in master. Could you please check logs of drakvuf for bsodmon?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1076,2020-10-30T12:15:00Z,2020-10-30T17:37:01Z,2021-04-08T12:37:02Z,MERGED,True,27,2,1,https://github.com/skvl,output_format: fix SIGSEGV on nullptr string,1,[],https://github.com/tklengyel/drakvuf/pull/1076,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/1076#issuecomment-719695819,"This is already re-based onto #1075 I have re-based onto master branch to simplify compare
I have noticed that in some cases drakvuf crashes with SIGSEGV. With GDB I have found that the reason was std::string_view construction from nullptr while calculating the length of nullptr string.
After that I have carefully re-read the description:
The behavior is undefined if [s, s+Traits::length(s)) is not a valid range.","The actual analysis logs are not kept, only grepping for specific things in the output right now. I can tune to check if there is a bsod during the test run and error out if there is.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1077,2020-10-30T16:56:59Z,2020-10-30T19:39:20Z,2021-04-08T12:37:03Z,MERGED,True,11,5,2,https://github.com/skvl,Fix logical errors in injected process termination,2,[],https://github.com/tklengyel/drakvuf/pull/1077,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1077,Thanks to @disaykin to noticed that.,Thanks to @disaykin to noticed that.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1077,2020-10-30T16:56:59Z,2020-10-30T19:39:20Z,2021-04-08T12:37:03Z,MERGED,True,11,5,2,https://github.com/skvl,Fix logical errors in injected process termination,2,[],https://github.com/tklengyel/drakvuf/pull/1077,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1077#issuecomment-719672425,Thanks to @disaykin to noticed that.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1077,2020-10-30T16:56:59Z,2020-10-30T19:39:20Z,2021-04-08T12:37:03Z,MERGED,True,11,5,2,https://github.com/skvl,Fix logical errors in injected process termination,2,[],https://github.com/tklengyel/drakvuf/pull/1077,https://github.com/skvl,3,https://github.com/tklengyel/drakvuf/pull/1077#issuecomment-719680157,Thanks to @disaykin to noticed that.,I have re-based onto master branch to simplify compare,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1077,2020-10-30T16:56:59Z,2020-10-30T19:39:20Z,2021-04-08T12:37:03Z,MERGED,True,11,5,2,https://github.com/skvl,Fix logical errors in injected process termination,2,[],https://github.com/tklengyel/drakvuf/pull/1077,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1077#issuecomment-719697712,Thanks to @disaykin to noticed that.,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1078,2020-10-31T17:08:16Z,2020-11-05T02:10:16Z,2020-11-05T02:10:16Z,MERGED,True,539,2,4,https://github.com/kscieslinski,Usermode hooks on existing processes,10,[],https://github.com/tklengyel/drakvuf/pull/1078,https://github.com/kscieslinski,1,https://github.com/tklengyel/drakvuf/pull/1078,"Description
This feature allows setting usermode hooks on processes that are already running in the system (before, the user was able only to set a usermode hook on processes that weren't yet spawned).
Example usage
addr_t  lsass_base = 0;
drakvuf_find_process(drakvuf, ~0, ""lsass.exe"", &lsass_base);
drakvuf_request_userhook_on_exisitng_process(drakvuf, lsass_base, ""ncrypt.dll"", ""SslGenerateMasterKey"", ssl_generate_master_key_cb, nullptr);","Description
This feature allows setting usermode hooks on processes that are already running in the system (before, the user was able only to set a usermode hook on processes that weren't yet spawned).
Example usage
addr_t  lsass_base = 0;
drakvuf_find_process(drakvuf, ~0, ""lsass.exe"", &lsass_base);
drakvuf_request_userhook_on_exisitng_process(drakvuf, lsass_base, ""ncrypt.dll"", ""SslGenerateMasterKey"", ssl_generate_master_key_cb, nullptr);",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1078,2020-10-31T17:08:16Z,2020-11-05T02:10:16Z,2020-11-05T02:10:16Z,MERGED,True,539,2,4,https://github.com/kscieslinski,Usermode hooks on existing processes,10,[],https://github.com/tklengyel/drakvuf/pull/1078,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1078#issuecomment-719961216,"Description
This feature allows setting usermode hooks on processes that are already running in the system (before, the user was able only to set a usermode hook on processes that weren't yet spawned).
Example usage
addr_t  lsass_base = 0;
drakvuf_find_process(drakvuf, ~0, ""lsass.exe"", &lsass_base);
drakvuf_request_userhook_on_exisitng_process(drakvuf, lsass_base, ""ncrypt.dll"", ""SslGenerateMasterKey"", ssl_generate_master_key_cb, nullptr);",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1078,2020-10-31T17:08:16Z,2020-11-05T02:10:16Z,2020-11-05T02:10:16Z,MERGED,True,539,2,4,https://github.com/kscieslinski,Usermode hooks on existing processes,10,[],https://github.com/tklengyel/drakvuf/pull/1078,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1078#issuecomment-719967373,"Description
This feature allows setting usermode hooks on processes that are already running in the system (before, the user was able only to set a usermode hook on processes that weren't yet spawned).
Example usage
addr_t  lsass_base = 0;
drakvuf_find_process(drakvuf, ~0, ""lsass.exe"", &lsass_base);
drakvuf_request_userhook_on_exisitng_process(drakvuf, lsass_base, ""ncrypt.dll"", ""SslGenerateMasterKey"", ssl_generate_master_key_cb, nullptr);",I think you misspelled existing.,True,{'LAUGH': ['https://github.com/kscieslinski']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1078,2020-10-31T17:08:16Z,2020-11-05T02:10:16Z,2020-11-05T02:10:16Z,MERGED,True,539,2,4,https://github.com/kscieslinski,Usermode hooks on existing processes,10,[],https://github.com/tklengyel/drakvuf/pull/1078,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/1078#issuecomment-719973247,"Description
This feature allows setting usermode hooks on processes that are already running in the system (before, the user was able only to set a usermode hook on processes that weren't yet spawned).
Example usage
addr_t  lsass_base = 0;
drakvuf_find_process(drakvuf, ~0, ""lsass.exe"", &lsass_base);
drakvuf_request_userhook_on_exisitng_process(drakvuf, lsass_base, ""ncrypt.dll"", ""SslGenerateMasterKey"", ssl_generate_master_key_cb, nullptr);",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1078,2020-10-31T17:08:16Z,2020-11-05T02:10:16Z,2020-11-05T02:10:16Z,MERGED,True,539,2,4,https://github.com/kscieslinski,Usermode hooks on existing processes,10,[],https://github.com/tklengyel/drakvuf/pull/1078,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1078#issuecomment-720079333,"Description
This feature allows setting usermode hooks on processes that are already running in the system (before, the user was able only to set a usermode hook on processes that weren't yet spawned).
Example usage
addr_t  lsass_base = 0;
drakvuf_find_process(drakvuf, ~0, ""lsass.exe"", &lsass_base);
drakvuf_request_userhook_on_exisitng_process(drakvuf, lsass_base, ""ncrypt.dll"", ""SslGenerateMasterKey"", ssl_generate_master_key_cb, nullptr);",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1078,2020-10-31T17:08:16Z,2020-11-05T02:10:16Z,2020-11-05T02:10:16Z,MERGED,True,539,2,4,https://github.com/kscieslinski,Usermode hooks on existing processes,10,[],https://github.com/tklengyel/drakvuf/pull/1078,https://github.com/kscieslinski,6,https://github.com/tklengyel/drakvuf/pull/1078#issuecomment-721070000,"Description
This feature allows setting usermode hooks on processes that are already running in the system (before, the user was able only to set a usermode hook on processes that weren't yet spawned).
Example usage
addr_t  lsass_base = 0;
drakvuf_find_process(drakvuf, ~0, ""lsass.exe"", &lsass_base);
drakvuf_request_userhook_on_exisitng_process(drakvuf, lsass_base, ""ncrypt.dll"", ""SslGenerateMasterKey"", ssl_generate_master_key_cb, nullptr);","After all small fixes, I've retested this feature manually and it seems to work.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1079,2020-11-01T15:18:16Z,2020-11-01T17:26:55Z,2020-11-01T17:26:57Z,MERGED,True,12,2,3,https://github.com/tklengyel,Use unsigned 64-bit support in json-c when available ,2,[],https://github.com/tklengyel/drakvuf/pull/1079,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1079,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1080,2020-11-06T10:17:49Z,2020-11-12T00:11:16Z,2020-11-12T00:11:16Z,MERGED,True,74,124,7,https://github.com/kscieslinski,Small libuserhooks refactor. Make it a proper singleton.,4,[],https://github.com/tklengyel/drakvuf/pull/1080,https://github.com/kscieslinski,1,https://github.com/tklengyel/drakvuf/pull/1080,This is just a very small refactor of libuserhook. This pr. should fix memory leak issues observed in #1060,This is just a very small refactor of libuserhook. This pr. should fix memory leak issues observed in #1060,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1080,2020-11-06T10:17:49Z,2020-11-12T00:11:16Z,2020-11-12T00:11:16Z,MERGED,True,74,124,7,https://github.com/kscieslinski,Small libuserhooks refactor. Make it a proper singleton.,4,[],https://github.com/tklengyel/drakvuf/pull/1080,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1080#issuecomment-722999389,This is just a very small refactor of libuserhook. This pr. should fix memory leak issues observed in #1060,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1080,2020-11-06T10:17:49Z,2020-11-12T00:11:16Z,2020-11-12T00:11:16Z,MERGED,True,74,124,7,https://github.com/kscieslinski,Small libuserhooks refactor. Make it a proper singleton.,4,[],https://github.com/tklengyel/drakvuf/pull/1080,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/1080#issuecomment-723018710,This is just a very small refactor of libuserhook. This pr. should fix memory leak issues observed in #1060,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1080,2020-11-06T10:17:49Z,2020-11-12T00:11:16Z,2020-11-12T00:11:16Z,MERGED,True,74,124,7,https://github.com/kscieslinski,Small libuserhooks refactor. Make it a proper singleton.,4,[],https://github.com/tklengyel/drakvuf/pull/1080,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1080#issuecomment-723047793,This is just a very small refactor of libuserhook. This pr. should fix memory leak issues observed in #1060,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1080,2020-11-06T10:17:49Z,2020-11-12T00:11:16Z,2020-11-12T00:11:16Z,MERGED,True,74,124,7,https://github.com/kscieslinski,Small libuserhooks refactor. Make it a proper singleton.,4,[],https://github.com/tklengyel/drakvuf/pull/1080,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1080#issuecomment-723048030,This is just a very small refactor of libuserhook. This pr. should fix memory leak issues observed in #1060,"Hm, got an error free(): invalid pointer on jenkins for the last run.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1080,2020-11-06T10:17:49Z,2020-11-12T00:11:16Z,2020-11-12T00:11:16Z,MERGED,True,74,124,7,https://github.com/kscieslinski,Small libuserhooks refactor. Make it a proper singleton.,4,[],https://github.com/tklengyel/drakvuf/pull/1080,https://github.com/icedevml,6,https://github.com/tklengyel/drakvuf/pull/1080#issuecomment-723066886,This is just a very small refactor of libuserhook. This pr. should fix memory leak issues observed in #1060,I've also seen something like GSlice free: invalid pointer in the manual test. I could provide more details later.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1080,2020-11-06T10:17:49Z,2020-11-12T00:11:16Z,2020-11-12T00:11:16Z,MERGED,True,74,124,7,https://github.com/kscieslinski,Small libuserhooks refactor. Make it a proper singleton.,4,[],https://github.com/tklengyel/drakvuf/pull/1080,https://github.com/kscieslinski,7,https://github.com/tklengyel/drakvuf/pull/1080#issuecomment-724570396,This is just a very small refactor of libuserhook. This pr. should fix memory leak issues observed in #1060,"I've also seen something like GSlice free: invalid pointer in the manual test. I could provide more details later.

I've found the source of the issue (~userhook::userhook()). I will try to resolve it today.",True,"{'THUMBS_UP': ['https://github.com/icedevml', 'https://github.com/tklengyel']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1081,2020-11-06T20:02:20Z,2020-11-07T03:57:22Z,2020-11-09T12:14:42Z,MERGED,True,60,8,6,https://github.com/disaykin,Fix KV-format of RunningProcess messages,1,[],https://github.com/tklengyel/drakvuf/pull/1081,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1081,"In all plugins KV format uses ""Time"" field for timestamp.","In all plugins KV format uses ""Time"" field for timestamp.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1081,2020-11-06T20:02:20Z,2020-11-07T03:57:22Z,2020-11-09T12:14:42Z,MERGED,True,60,8,6,https://github.com/disaykin,Fix KV-format of RunningProcess messages,1,[],https://github.com/tklengyel/drakvuf/pull/1081,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1081#issuecomment-723273720,"In all plugins KV format uses ""Time"" field for timestamp.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1081,2020-11-06T20:02:20Z,2020-11-07T03:57:22Z,2020-11-09T12:14:42Z,MERGED,True,60,8,6,https://github.com/disaykin,Fix KV-format of RunningProcess messages,1,[],https://github.com/tklengyel/drakvuf/pull/1081,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1081#issuecomment-723361938,"In all plugins KV format uses ""Time"" field for timestamp.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1082,2020-11-06T20:28:22Z,2020-11-10T01:19:17Z,2020-11-10T14:48:23Z,MERGED,True,68,180,2,https://github.com/disaykin,Extract common functionality for trap_info initialization,1,[],https://github.com/tklengyel/drakvuf/pull/1082,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1082,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1082,2020-11-06T20:28:22Z,2020-11-10T01:19:17Z,2020-11-10T14:48:23Z,MERGED,True,68,180,2,https://github.com/disaykin,Extract common functionality for trap_info initialization,1,[],https://github.com/tklengyel/drakvuf/pull/1082,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1082#issuecomment-723285109,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1082,2020-11-06T20:28:22Z,2020-11-10T01:19:17Z,2020-11-10T14:48:23Z,MERGED,True,68,180,2,https://github.com/disaykin,Extract common functionality for trap_info initialization,1,[],https://github.com/tklengyel/drakvuf/pull/1082,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1082#issuecomment-723362279,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1082,2020-11-06T20:28:22Z,2020-11-10T01:19:17Z,2020-11-10T14:48:23Z,MERGED,True,68,180,2,https://github.com/disaykin,Extract common functionality for trap_info initialization,1,[],https://github.com/tklengyel/drakvuf/pull/1082,https://github.com/disaykin,4,https://github.com/tklengyel/drakvuf/pull/1082#issuecomment-723423339,,"@tklengyel I have a question. I noticed that attached_proc_data and proc_data fields in drakvuf_trap_info_t structure are redundant. Windows plugins always use attached_proc_data field and does not use proc_data one. Linux plugins, on the contrary, always use proc_data field.
It would be better to leave only one fileld in the structure, proc_data. And fill it with attached process data on Windows if attached process was found. This would slightly optimize the hot path of drakvuf and remove the cause of common errors in plugins.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1082,2020-11-06T20:28:22Z,2020-11-10T01:19:17Z,2020-11-10T14:48:23Z,MERGED,True,68,180,2,https://github.com/disaykin,Extract common functionality for trap_info initialization,1,[],https://github.com/tklengyel/drakvuf/pull/1082,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1082#issuecomment-723460576,,@disaykin I checked and not all Windows plugins use attached_proc_data. I rather have both in-place for now and have each plugin decide which one is appropriate to use in its own context.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1082,2020-11-06T20:28:22Z,2020-11-10T01:19:17Z,2020-11-10T14:48:23Z,MERGED,True,68,180,2,https://github.com/disaykin,Extract common functionality for trap_info initialization,1,[],https://github.com/tklengyel/drakvuf/pull/1082,https://github.com/disaykin,6,https://github.com/tklengyel/drakvuf/pull/1082#issuecomment-723955757,,@tklengyel I think these are all wrong uses of proc_data instead of attached_proc_data. But I agree with you that it is better not to touch the excess code for now.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1083,2020-11-09T16:17:12Z,2020-11-12T16:27:32Z,2020-11-13T08:53:19Z,MERGED,True,129,109,22,https://github.com/disaykin,Unify return callback checks,1,[],https://github.com/tklengyel/drakvuf/pull/1083,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1083,"This attempt is not ideal, but it takes a step towards unifying the checks that the breakpoint was triggered at the exit from the call we need.","This attempt is not ideal, but it takes a step towards unifying the checks that the breakpoint was triggered at the exit from the call we need.",True,{'THUMBS_UP': ['https://github.com/kscieslinski']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1083,2020-11-09T16:17:12Z,2020-11-12T16:27:32Z,2020-11-13T08:53:19Z,MERGED,True,129,109,22,https://github.com/disaykin,Unify return callback checks,1,[],https://github.com/tklengyel/drakvuf/pull/1083,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1083#issuecomment-724115753,"This attempt is not ideal, but it takes a step towards unifying the checks that the breakpoint was triggered at the exit from the call we need.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1083,2020-11-09T16:17:12Z,2020-11-12T16:27:32Z,2020-11-13T08:53:19Z,MERGED,True,129,109,22,https://github.com/disaykin,Unify return callback checks,1,[],https://github.com/tklengyel/drakvuf/pull/1083,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1083#issuecomment-724386815,"This attempt is not ideal, but it takes a step towards unifying the checks that the breakpoint was triggered at the exit from the call we need.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1083,2020-11-09T16:17:12Z,2020-11-12T16:27:32Z,2020-11-13T08:53:19Z,MERGED,True,129,109,22,https://github.com/disaykin,Unify return callback checks,1,[],https://github.com/tklengyel/drakvuf/pull/1083,https://github.com/disaykin,4,https://github.com/tklengyel/drakvuf/pull/1083#issuecomment-725374149,"This attempt is not ideal, but it takes a step towards unifying the checks that the breakpoint was triggered at the exit from the call we need.","Tests failed on ""Plugin poolmon startup failed!"".
This is false positive failure, I think.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1083,2020-11-09T16:17:12Z,2020-11-12T16:27:32Z,2020-11-13T08:53:19Z,MERGED,True,129,109,22,https://github.com/disaykin,Unify return callback checks,1,[],https://github.com/tklengyel/drakvuf/pull/1083,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1083#issuecomment-725405290,"This attempt is not ideal, but it takes a step towards unifying the checks that the breakpoint was triggered at the exit from the call we need.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1083,2020-11-09T16:17:12Z,2020-11-12T16:27:32Z,2020-11-13T08:53:19Z,MERGED,True,129,109,22,https://github.com/disaykin,Unify return callback checks,1,[],https://github.com/tklengyel/drakvuf/pull/1083,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1083#issuecomment-725736976,"This attempt is not ideal, but it takes a step towards unifying the checks that the breakpoint was triggered at the exit from the call we need.",/cc @icedevml @BonusPlay libusermode changes OK from your side?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1083,2020-11-09T16:17:12Z,2020-11-12T16:27:32Z,2020-11-13T08:53:19Z,MERGED,True,129,109,22,https://github.com/disaykin,Unify return callback checks,1,[],https://github.com/tklengyel/drakvuf/pull/1083,https://github.com/icedevml,7,https://github.com/tklengyel/drakvuf/pull/1083#issuecomment-726056435,"This attempt is not ideal, but it takes a step towards unifying the checks that the breakpoint was triggered at the exit from the call we need.","I'm out of office for a few days, @BonusPlay could you review this?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1084,2020-11-11T14:21:14Z,2020-11-12T16:28:08Z,2020-11-13T08:51:32Z,MERGED,True,96,45,1,https://github.com/disaykin,rpcmon: Intercept NdrClientCall3,1,[],https://github.com/tklengyel/drakvuf/pull/1084,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1084,Intercept NdrClientCall3 and print InterfaceId and TransferSyntax extracted from it arguments.,Intercept NdrClientCall3 and print InterfaceId and TransferSyntax extracted from it arguments.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1084,2020-11-11T14:21:14Z,2020-11-12T16:28:08Z,2020-11-13T08:51:32Z,MERGED,True,96,45,1,https://github.com/disaykin,rpcmon: Intercept NdrClientCall3,1,[],https://github.com/tklengyel/drakvuf/pull/1084,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1084#issuecomment-725450116,Intercept NdrClientCall3 and print InterfaceId and TransferSyntax extracted from it arguments.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1084,2020-11-11T14:21:14Z,2020-11-12T16:28:08Z,2020-11-13T08:51:32Z,MERGED,True,96,45,1,https://github.com/disaykin,rpcmon: Intercept NdrClientCall3,1,[],https://github.com/tklengyel/drakvuf/pull/1084,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1084#issuecomment-725574854,Intercept NdrClientCall3 and print InterfaceId and TransferSyntax extracted from it arguments.,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1084,2020-11-11T14:21:14Z,2020-11-12T16:28:08Z,2020-11-13T08:51:32Z,MERGED,True,96,45,1,https://github.com/disaykin,rpcmon: Intercept NdrClientCall3,1,[],https://github.com/tklengyel/drakvuf/pull/1084,https://github.com/disaykin,4,https://github.com/tklengyel/drakvuf/pull/1084#issuecomment-725600344,Intercept NdrClientCall3 and print InterfaceId and TransferSyntax extracted from it arguments.,"Running DRAKVUF #1 for 60 seconds. Opts: -k 0x187000 -i 1568 -e calc.exe -m createproc DRAKVUF startup failed
False positive failure again.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1084,2020-11-11T14:21:14Z,2020-11-12T16:28:08Z,2020-11-13T08:51:32Z,MERGED,True,96,45,1,https://github.com/disaykin,rpcmon: Intercept NdrClientCall3,1,[],https://github.com/tklengyel/drakvuf/pull/1084,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1084#issuecomment-725739520,Intercept NdrClientCall3 and print InterfaceId and TransferSyntax extracted from it arguments.,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1084,2020-11-11T14:21:14Z,2020-11-12T16:28:08Z,2020-11-13T08:51:32Z,MERGED,True,96,45,1,https://github.com/disaykin,rpcmon: Intercept NdrClientCall3,1,[],https://github.com/tklengyel/drakvuf/pull/1084,https://github.com/disaykin,6,https://github.com/tklengyel/drakvuf/pull/1084#issuecomment-726087050,Intercept NdrClientCall3 and print InterfaceId and TransferSyntax extracted from it arguments.,I fixed merge conflicts.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1085,2020-11-13T10:21:53Z,2020-11-13T13:07:13Z,2020-11-13T13:33:48Z,MERGED,True,94,133,18,https://github.com/disaykin,Extract drakvuf_get_function_return_address,1,[],https://github.com/tklengyel/drakvuf/pull/1085,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1085,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1085,2020-11-13T10:21:53Z,2020-11-13T13:07:13Z,2020-11-13T13:33:48Z,MERGED,True,94,133,18,https://github.com/disaykin,Extract drakvuf_get_function_return_address,1,[],https://github.com/tklengyel/drakvuf/pull/1085,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1085#issuecomment-726681523,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1085,2020-11-13T10:21:53Z,2020-11-13T13:07:13Z,2020-11-13T13:33:48Z,MERGED,True,94,133,18,https://github.com/disaykin,Extract drakvuf_get_function_return_address,1,[],https://github.com/tklengyel/drakvuf/pull/1085,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1085#issuecomment-726726037,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1087,2020-11-17T11:04:53Z,2020-11-19T15:04:38Z,2020-11-22T22:03:29Z,MERGED,True,9,52,1,https://github.com/disaykin,Refactor bsodmon plugin,1,[],https://github.com/tklengyel/drakvuf/pull/1087,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1087,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1087,2020-11-17T11:04:53Z,2020-11-19T15:04:38Z,2020-11-22T22:03:29Z,MERGED,True,9,52,1,https://github.com/disaykin,Refactor bsodmon plugin,1,[],https://github.com/tklengyel/drakvuf/pull/1087,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1087#issuecomment-728916473,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1087,2020-11-17T11:04:53Z,2020-11-19T15:04:38Z,2020-11-22T22:03:29Z,MERGED,True,9,52,1,https://github.com/disaykin,Refactor bsodmon plugin,1,[],https://github.com/tklengyel/drakvuf/pull/1087,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1087#issuecomment-730412201,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1088,2020-11-18T08:18:57Z,2020-11-18T15:29:06Z,2020-11-19T09:49:30Z,MERGED,True,42,23,2,https://github.com/disaykin,fix: target_rsp checks in procmon plugin,1,[],https://github.com/tklengyel/drakvuf/pull/1088,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1088,"add target_rsp checks on exit from injected calls
extract inject_copy_memory function
fix some memory skipping in case of injection error","add target_rsp checks on exit from injected calls
extract inject_copy_memory function
fix some memory skipping in case of injection error",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1088,2020-11-18T08:18:57Z,2020-11-18T15:29:06Z,2020-11-19T09:49:30Z,MERGED,True,42,23,2,https://github.com/disaykin,fix: target_rsp checks in procmon plugin,1,[],https://github.com/tklengyel/drakvuf/pull/1088,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1088#issuecomment-729516008,"add target_rsp checks on exit from injected calls
extract inject_copy_memory function
fix some memory skipping in case of injection error",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1088,2020-11-18T08:18:57Z,2020-11-18T15:29:06Z,2020-11-19T09:49:30Z,MERGED,True,42,23,2,https://github.com/disaykin,fix: target_rsp checks in procmon plugin,1,[],https://github.com/tklengyel/drakvuf/pull/1088,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1088#issuecomment-729699167,"add target_rsp checks on exit from injected calls
extract inject_copy_memory function
fix some memory skipping in case of injection error",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1089,2020-11-18T08:30:10Z,2020-11-19T14:29:33Z,2020-11-22T22:03:29Z,MERGED,True,52,75,3,https://github.com/disaykin,fix: add target_rsp checks into filedelete plugin,1,[],https://github.com/tklengyel/drakvuf/pull/1089,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1089,"add target_rsp checks on exit from injected calls
replace manual lock management by RAII
restore RIP and PSP registers after injection","add target_rsp checks on exit from injected calls
replace manual lock management by RAII
restore RIP and PSP registers after injection",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1089,2020-11-18T08:30:10Z,2020-11-19T14:29:33Z,2020-11-22T22:03:29Z,MERGED,True,52,75,3,https://github.com/disaykin,fix: add target_rsp checks into filedelete plugin,1,[],https://github.com/tklengyel/drakvuf/pull/1089,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1089#issuecomment-729521616,"add target_rsp checks on exit from injected calls
replace manual lock management by RAII
restore RIP and PSP registers after injection",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1089,2020-11-18T08:30:10Z,2020-11-19T14:29:33Z,2020-11-22T22:03:29Z,MERGED,True,52,75,3,https://github.com/disaykin,fix: add target_rsp checks into filedelete plugin,1,[],https://github.com/tklengyel/drakvuf/pull/1089,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1089#issuecomment-729699267,"add target_rsp checks on exit from injected calls
replace manual lock management by RAII
restore RIP and PSP registers after injection",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1089,2020-11-18T08:30:10Z,2020-11-19T14:29:33Z,2020-11-22T22:03:29Z,MERGED,True,52,75,3,https://github.com/disaykin,fix: add target_rsp checks into filedelete plugin,1,[],https://github.com/tklengyel/drakvuf/pull/1089,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1089#issuecomment-729755873,"add target_rsp checks on exit from injected calls
replace manual lock management by RAII
restore RIP and PSP registers after injection",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1089,2020-11-18T08:30:10Z,2020-11-19T14:29:33Z,2020-11-22T22:03:29Z,MERGED,True,52,75,3,https://github.com/disaykin,fix: add target_rsp checks into filedelete plugin,1,[],https://github.com/tklengyel/drakvuf/pull/1089,https://github.com/disaykin,5,https://github.com/tklengyel/drakvuf/pull/1089#issuecomment-730260121,"add target_rsp checks on exit from injected calls
replace manual lock management by RAII
restore RIP and PSP registers after injection",ERROR: Couldn't find any revision to build. Verify the repository and branch configuration for this job.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1089,2020-11-18T08:30:10Z,2020-11-19T14:29:33Z,2020-11-22T22:03:29Z,MERGED,True,52,75,3,https://github.com/disaykin,fix: add target_rsp checks into filedelete plugin,1,[],https://github.com/tklengyel/drakvuf/pull/1089,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1089#issuecomment-730371270,"add target_rsp checks on exit from injected calls
replace manual lock management by RAII
restore RIP and PSP registers after injection",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1089,2020-11-18T08:30:10Z,2020-11-19T14:29:33Z,2020-11-22T22:03:29Z,MERGED,True,52,75,3,https://github.com/disaykin,fix: add target_rsp checks into filedelete plugin,1,[],https://github.com/tklengyel/drakvuf/pull/1089,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/1089#issuecomment-730379182,"add target_rsp checks on exit from injected calls
replace manual lock management by RAII
restore RIP and PSP registers after injection",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1090,2020-11-18T12:30:32Z,2020-11-18T15:28:20Z,2020-11-19T09:54:09Z,MERGED,True,18,14,3,https://github.com/disaykin,fix: Coverity Scan analysis warnings,1,[],https://github.com/tklengyel/drakvuf/pull/1090,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1090,"Analysis Summary:
   New defects found: 0
   Defects eliminated: 15","Analysis Summary:
   New defects found: 0
   Defects eliminated: 15",True,{'HEART': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1090,2020-11-18T12:30:32Z,2020-11-18T15:28:20Z,2020-11-19T09:54:09Z,MERGED,True,18,14,3,https://github.com/disaykin,fix: Coverity Scan analysis warnings,1,[],https://github.com/tklengyel/drakvuf/pull/1090,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1090#issuecomment-729647029,"Analysis Summary:
   New defects found: 0
   Defects eliminated: 15",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1090,2020-11-18T12:30:32Z,2020-11-18T15:28:20Z,2020-11-19T09:54:09Z,MERGED,True,18,14,3,https://github.com/disaykin,fix: Coverity Scan analysis warnings,1,[],https://github.com/tklengyel/drakvuf/pull/1090,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1090#issuecomment-729692191,"Analysis Summary:
   New defects found: 0
   Defects eliminated: 15",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1090,2020-11-18T12:30:32Z,2020-11-18T15:28:20Z,2020-11-19T09:54:09Z,MERGED,True,18,14,3,https://github.com/disaykin,fix: Coverity Scan analysis warnings,1,[],https://github.com/tklengyel/drakvuf/pull/1090,https://github.com/disaykin,4,https://github.com/tklengyel/drakvuf/pull/1090#issuecomment-729694543,"Analysis Summary:
   New defects found: 0
   Defects eliminated: 15",ERROR: Couldn't find any revision to build. Verify the repository and branch configuration for this job.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1090,2020-11-18T12:30:32Z,2020-11-18T15:28:20Z,2020-11-19T09:54:09Z,MERGED,True,18,14,3,https://github.com/disaykin,fix: Coverity Scan analysis warnings,1,[],https://github.com/tklengyel/drakvuf/pull/1090,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1090#issuecomment-729697130,"Analysis Summary:
   New defects found: 0
   Defects eliminated: 15","@disaykin it's running now, had to reset Jenkins the other day cause an update broke it ¯\(ツ)/¯",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1091,2020-11-19T14:16:04Z,2020-11-19T15:05:04Z,2020-11-22T22:03:30Z,MERGED,True,85,25,1,https://github.com/disaykin,rpcmon: Add support for WOW64,1,[],https://github.com/tklengyel/drakvuf/pull/1091,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1091,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1091,2020-11-19T14:16:04Z,2020-11-19T15:05:04Z,2020-11-22T22:03:30Z,MERGED,True,85,25,1,https://github.com/disaykin,rpcmon: Add support for WOW64,1,[],https://github.com/tklengyel/drakvuf/pull/1091,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1091#issuecomment-730403906,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1091,2020-11-19T14:16:04Z,2020-11-19T15:05:04Z,2020-11-22T22:03:30Z,MERGED,True,85,25,1,https://github.com/disaykin,rpcmon: Add support for WOW64,1,[],https://github.com/tklengyel/drakvuf/pull/1091,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1091#issuecomment-730412399,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1092,2020-11-22T22:11:13Z,2020-11-24T15:33:27Z,2021-06-02T11:16:02Z,MERGED,True,168,8,5,https://github.com/disaykin,Print procedure number in rpcmon,1,[],https://github.com/tklengyel/drakvuf/pull/1092,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1092,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1092,2020-11-22T22:11:13Z,2020-11-24T15:33:27Z,2021-06-02T11:16:02Z,MERGED,True,168,8,5,https://github.com/disaykin,Print procedure number in rpcmon,1,[],https://github.com/tklengyel/drakvuf/pull/1092,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1092#issuecomment-731855330,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1092,2020-11-22T22:11:13Z,2020-11-24T15:33:27Z,2021-06-02T11:16:02Z,MERGED,True,168,8,5,https://github.com/disaykin,Print procedure number in rpcmon,1,[],https://github.com/tklengyel/drakvuf/pull/1092,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/1092#issuecomment-731872494,,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1092,2020-11-22T22:11:13Z,2020-11-24T15:33:27Z,2021-06-02T11:16:02Z,MERGED,True,168,8,5,https://github.com/disaykin,Print procedure number in rpcmon,1,[],https://github.com/tklengyel/drakvuf/pull/1092,https://github.com/disaykin,4,https://github.com/tklengyel/drakvuf/pull/1092#issuecomment-732173746,,"[INJECT] TIME:1606091596.785988 STATUS:SUCCESS PID:6296 FILE:""C:\autoruns64.exe"" ARGUMENTS:"""" INJECTED_PID:5892 INJECTED_TID:2192
Process startup success

err=1
sudo -E xl destroy windows10-2004-jenkins
windows10-2004-jenkins is an invalid domain identifier (rc=-6)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1092,2020-11-22T22:11:13Z,2020-11-24T15:33:27Z,2021-06-02T11:16:02Z,MERGED,True,168,8,5,https://github.com/disaykin,Print procedure number in rpcmon,1,[],https://github.com/tklengyel/drakvuf/pull/1092,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1092#issuecomment-732175419,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1092,2020-11-22T22:11:13Z,2020-11-24T15:33:27Z,2021-06-02T11:16:02Z,MERGED,True,168,8,5,https://github.com/disaykin,Print procedure number in rpcmon,1,[],https://github.com/tklengyel/drakvuf/pull/1092,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1092#issuecomment-732176137,,@icedevml Looks like the binary injection technique is somewhat unstable.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1093,2020-11-23T19:33:43Z,2020-11-24T00:23:20Z,2020-11-24T08:18:03Z,MERGED,True,8,13,1,https://github.com/disaykin,libinjector: Initialize offsets only for x64 windows guests,1,[],https://github.com/tklengyel/drakvuf/pull/1093,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1093,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1093,2020-11-23T19:33:43Z,2020-11-24T00:23:20Z,2020-11-24T08:18:03Z,MERGED,True,8,13,1,https://github.com/disaykin,libinjector: Initialize offsets only for x64 windows guests,1,[],https://github.com/tklengyel/drakvuf/pull/1093,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1093#issuecomment-732379782,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1093,2020-11-23T19:33:43Z,2020-11-24T00:23:20Z,2020-11-24T08:18:03Z,MERGED,True,8,13,1,https://github.com/disaykin,libinjector: Initialize offsets only for x64 windows guests,1,[],https://github.com/tklengyel/drakvuf/pull/1093,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1093#issuecomment-732409336,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1094,2020-11-23T19:55:53Z,2021-12-01T14:48:42Z,2021-12-01T14:48:42Z,CLOSED,False,25,27,2,https://github.com/disaykin,feat: support for libuserhook on x86,2,[],https://github.com/tklengyel/drakvuf/pull/1094,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1094,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1094,2020-11-23T19:55:53Z,2021-12-01T14:48:42Z,2021-12-01T14:48:42Z,CLOSED,False,25,27,2,https://github.com/disaykin,feat: support for libuserhook on x86,2,[],https://github.com/tklengyel/drakvuf/pull/1094,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1094#issuecomment-732391355,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1094,2020-11-23T19:55:53Z,2021-12-01T14:48:42Z,2021-12-01T14:48:42Z,CLOSED,False,25,27,2,https://github.com/disaykin,feat: support for libuserhook on x86,2,[],https://github.com/tklengyel/drakvuf/pull/1094,https://github.com/disaykin,3,https://github.com/tklengyel/drakvuf/pull/1094#issuecomment-885463386,,@icedevml Please review the code,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1094,2020-11-23T19:55:53Z,2021-12-01T14:48:42Z,2021-12-01T14:48:42Z,CLOSED,False,25,27,2,https://github.com/disaykin,feat: support for libuserhook on x86,2,[],https://github.com/tklengyel/drakvuf/pull/1094,https://github.com/disaykin,4,https://github.com/tklengyel/drakvuf/pull/1094#issuecomment-885560922,,cc @BonusPlay,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1094,2020-11-23T19:55:53Z,2021-12-01T14:48:42Z,2021-12-01T14:48:42Z,CLOSED,False,25,27,2,https://github.com/disaykin,feat: support for libuserhook on x86,2,[],https://github.com/tklengyel/drakvuf/pull/1094,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1094#issuecomment-885629992,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1094,2020-11-23T19:55:53Z,2021-12-01T14:48:42Z,2021-12-01T14:48:42Z,CLOSED,False,25,27,2,https://github.com/disaykin,feat: support for libuserhook on x86,2,[],https://github.com/tklengyel/drakvuf/pull/1094,https://github.com/disaykin,6,https://github.com/tklengyel/drakvuf/pull/1094#issuecomment-885661728,,"CI failed on ""Plugin memdump startup failed!""",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1094,2020-11-23T19:55:53Z,2021-12-01T14:48:42Z,2021-12-01T14:48:42Z,CLOSED,False,25,27,2,https://github.com/disaykin,feat: support for libuserhook on x86,2,[],https://github.com/tklengyel/drakvuf/pull/1094,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/1094#issuecomment-885736613,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1094,2020-11-23T19:55:53Z,2021-12-01T14:48:42Z,2021-12-01T14:48:42Z,CLOSED,False,25,27,2,https://github.com/disaykin,feat: support for libuserhook on x86,2,[],https://github.com/tklengyel/drakvuf/pull/1094,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/1094#issuecomment-885864851,,"Well, the error seems to be deterministic",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1094,2020-11-23T19:55:53Z,2021-12-01T14:48:42Z,2021-12-01T14:48:42Z,CLOSED,False,25,27,2,https://github.com/disaykin,feat: support for libuserhook on x86,2,[],https://github.com/tklengyel/drakvuf/pull/1094,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/1094#issuecomment-885865040,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1094,2020-11-23T19:55:53Z,2021-12-01T14:48:42Z,2021-12-01T14:48:42Z,CLOSED,False,25,27,2,https://github.com/disaykin,feat: support for libuserhook on x86,2,[],https://github.com/tklengyel/drakvuf/pull/1094,https://github.com/disaykin,10,https://github.com/tklengyel/drakvuf/pull/1094#issuecomment-885916996,,@tklengyel I think I know what the problem is. I always ran the drakvuf with the memdump plugin disabled. I will debug.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1094,2020-11-23T19:55:53Z,2021-12-01T14:48:42Z,2021-12-01T14:48:42Z,CLOSED,False,25,27,2,https://github.com/disaykin,feat: support for libuserhook on x86,2,[],https://github.com/tklengyel/drakvuf/pull/1094,https://github.com/disaykin,11,https://github.com/tklengyel/drakvuf/pull/1094#issuecomment-886641981,,"I can't find LoadImage_1 symbol in volatility3 profiles for clr.dll and mscorwks.dll.
Because of that my memdump plugin starts without errors.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1094,2020-11-23T19:55:53Z,2021-12-01T14:48:42Z,2021-12-01T14:48:42Z,CLOSED,False,25,27,2,https://github.com/disaykin,feat: support for libuserhook on x86,2,[],https://github.com/tklengyel/drakvuf/pull/1094,https://github.com/disaykin,12,https://github.com/tklengyel/drakvuf/pull/1094#issuecomment-888887045,,"@tklengyel I can't reproduce the failure. The only scenario in which an error in the initialization of the memdump plugin, which differs from the apimon plugin, can occur, is the installation of hooks on system calls. Can you please enable debug messages in failing test?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1095,2020-11-25T14:34:11Z,2020-11-29T16:36:55Z,2020-11-29T20:13:33Z,MERGED,True,25,5,6,https://github.com/disaykin,Added special exit code for termination by BSOD,1,[],https://github.com/tklengyel/drakvuf/pull/1095,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1095,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1095,2020-11-25T14:34:11Z,2020-11-29T16:36:55Z,2020-11-29T20:13:33Z,MERGED,True,25,5,6,https://github.com/disaykin,Added special exit code for termination by BSOD,1,[],https://github.com/tklengyel/drakvuf/pull/1095,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1095#issuecomment-733743488,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1095,2020-11-25T14:34:11Z,2020-11-29T16:36:55Z,2020-11-29T20:13:33Z,MERGED,True,25,5,6,https://github.com/disaykin,Added special exit code for termination by BSOD,1,[],https://github.com/tklengyel/drakvuf/pull/1095,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1095#issuecomment-735308410,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1096,2020-11-27T13:56:40Z,2020-11-27T14:10:10Z,2020-11-27T14:32:36Z,MERGED,True,2,2,2,https://github.com/chivay,Add INJECTION_ERROR exit code,1,[],https://github.com/tklengyel/drakvuf/pull/1096,https://github.com/chivay,1,https://github.com/tklengyel/drakvuf/pull/1096,Add a new return code to indicate an injector error.,Add a new return code to indicate an injector error.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1096,2020-11-27T13:56:40Z,2020-11-27T14:10:10Z,2020-11-27T14:32:36Z,MERGED,True,2,2,2,https://github.com/chivay,Add INJECTION_ERROR exit code,1,[],https://github.com/tklengyel/drakvuf/pull/1096,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1096#issuecomment-734847211,Add a new return code to indicate an injector error.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1096,2020-11-27T13:56:40Z,2020-11-27T14:10:10Z,2020-11-27T14:32:36Z,MERGED,True,2,2,2,https://github.com/chivay,Add INJECTION_ERROR exit code,1,[],https://github.com/tklengyel/drakvuf/pull/1096,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/1096#issuecomment-734855556,Add a new return code to indicate an injector error.,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1096,2020-11-27T13:56:40Z,2020-11-27T14:10:10Z,2020-11-27T14:32:36Z,MERGED,True,2,2,2,https://github.com/chivay,Add INJECTION_ERROR exit code,1,[],https://github.com/tklengyel/drakvuf/pull/1096,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/1096#issuecomment-734855757,Add a new return code to indicate an injector error.,(I was wondering whether this works for merged PRs  ),True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1096,2020-11-27T13:56:40Z,2020-11-27T14:10:10Z,2020-11-27T14:32:36Z,MERGED,True,2,2,2,https://github.com/chivay,Add INJECTION_ERROR exit code,1,[],https://github.com/tklengyel/drakvuf/pull/1096,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1096#issuecomment-734862454,Add a new return code to indicate an injector error.,Doesn't look like ;),True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1097,2020-11-30T15:34:23Z,2020-11-30T19:33:10Z,2021-04-08T12:37:03Z,MERGED,True,1,8,1,https://github.com/skvl,libinjector: fix x64 stack alignment (#1086),1,[],https://github.com/tklengyel/drakvuf/pull/1097,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1097,"The error affects libinjector, procdump, memdump and filedelete plugins.
More about stack alignment:

x64 stack usage
In-depth: Windows x64 ABI: Stack frames
About the x64 stack Alignment
what is ""stack alignment""?","The error affects libinjector, procdump, memdump and filedelete plugins.
More about stack alignment:

x64 stack usage
In-depth: Windows x64 ABI: Stack frames
About the x64 stack Alignment
what is ""stack alignment""?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1097,2020-11-30T15:34:23Z,2020-11-30T19:33:10Z,2021-04-08T12:37:03Z,MERGED,True,1,8,1,https://github.com/skvl,libinjector: fix x64 stack alignment (#1086),1,[],https://github.com/tklengyel/drakvuf/pull/1097,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1097#issuecomment-735860048,"The error affects libinjector, procdump, memdump and filedelete plugins.
More about stack alignment:

x64 stack usage
In-depth: Windows x64 ABI: Stack frames
About the x64 stack Alignment
what is ""stack alignment""?",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1097,2020-11-30T15:34:23Z,2020-11-30T19:33:10Z,2021-04-08T12:37:03Z,MERGED,True,1,8,1,https://github.com/skvl,libinjector: fix x64 stack alignment (#1086),1,[],https://github.com/tklengyel/drakvuf/pull/1097,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1097#issuecomment-735941081,"The error affects libinjector, procdump, memdump and filedelete plugins.
More about stack alignment:

x64 stack usage
In-depth: Windows x64 ABI: Stack frames
About the x64 stack Alignment
what is ""stack alignment""?",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1097,2020-11-30T15:34:23Z,2020-11-30T19:33:10Z,2021-04-08T12:37:03Z,MERGED,True,1,8,1,https://github.com/skvl,libinjector: fix x64 stack alignment (#1086),1,[],https://github.com/tklengyel/drakvuf/pull/1097,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1097#issuecomment-735995125,"The error affects libinjector, procdump, memdump and filedelete plugins.
More about stack alignment:

x64 stack usage
In-depth: Windows x64 ABI: Stack frames
About the x64 stack Alignment
what is ""stack alignment""?",Thanks! This seems to be surprisingly hard to get just right :),True,{'THUMBS_UP': ['https://github.com/skvl']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1098,2020-11-30T22:06:39Z,2020-12-01T16:45:31Z,2021-06-02T11:16:01Z,MERGED,True,9,1,1,https://github.com/disaykin,fix(libinjector): fix x64 stack alignment for functions with 1 or 3 parameters,1,[],https://github.com/tklengyel/drakvuf/pull/1098,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1098,"I read the docs from #1097 and found yet another stack alignment bug.
The parameter area always contains at least four entries,
even if the called function has fewer arguments.
This fact must be taken into account when aligning the stack.","I read the docs from #1097 and found yet another stack alignment bug.
The parameter area always contains at least four entries,
even if the called function has fewer arguments.
This fact must be taken into account when aligning the stack.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1098,2020-11-30T22:06:39Z,2020-12-01T16:45:31Z,2021-06-02T11:16:01Z,MERGED,True,9,1,1,https://github.com/disaykin,fix(libinjector): fix x64 stack alignment for functions with 1 or 3 parameters,1,[],https://github.com/tklengyel/drakvuf/pull/1098,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1098#issuecomment-736084844,"I read the docs from #1097 and found yet another stack alignment bug.
The parameter area always contains at least four entries,
even if the called function has fewer arguments.
This fact must be taken into account when aligning the stack.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1098,2020-11-30T22:06:39Z,2020-12-01T16:45:31Z,2021-06-02T11:16:01Z,MERGED,True,9,1,1,https://github.com/disaykin,fix(libinjector): fix x64 stack alignment for functions with 1 or 3 parameters,1,[],https://github.com/tklengyel/drakvuf/pull/1098,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1098#issuecomment-736512836,"I read the docs from #1097 and found yet another stack alignment bug.
The parameter area always contains at least four entries,
even if the called function has fewer arguments.
This fact must be taken into account when aligning the stack.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1099,2020-12-01T16:26:29Z,2020-12-03T19:48:15Z,2020-12-03T20:23:25Z,MERGED,True,101,80,10,https://github.com/disaykin,Fix coverity scan issues,2,[],https://github.com/tklengyel/drakvuf/pull/1099,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1099,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1099,2020-12-01T16:26:29Z,2020-12-03T19:48:15Z,2020-12-03T20:23:25Z,MERGED,True,101,80,10,https://github.com/disaykin,Fix coverity scan issues,2,[],https://github.com/tklengyel/drakvuf/pull/1099,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1099#issuecomment-736662352,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1099,2020-12-01T16:26:29Z,2020-12-03T19:48:15Z,2020-12-03T20:23:25Z,MERGED,True,101,80,10,https://github.com/disaykin,Fix coverity scan issues,2,[],https://github.com/tklengyel/drakvuf/pull/1099,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1099#issuecomment-737231077,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1099,2020-12-01T16:26:29Z,2020-12-03T19:48:15Z,2020-12-03T20:23:25Z,MERGED,True,101,80,10,https://github.com/disaykin,Fix coverity scan issues,2,[],https://github.com/tklengyel/drakvuf/pull/1099,https://github.com/disaykin,4,https://github.com/tklengyel/drakvuf/pull/1099#issuecomment-737723202,,@tklengyel Something broke on the CI server?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1099,2020-12-01T16:26:29Z,2020-12-03T19:48:15Z,2020-12-03T20:23:25Z,MERGED,True,101,80,10,https://github.com/disaykin,Fix coverity scan issues,2,[],https://github.com/tklengyel/drakvuf/pull/1099,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1099#issuecomment-738008924,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1102,2020-12-19T20:20:44Z,2021-02-13T13:02:36Z,2021-02-13T13:02:36Z,CLOSED,False,190,5,6,https://github.com/icedevml,memdump: dump when program enters new anonymous VAD,4,[],https://github.com/tklengyel/drakvuf/pull/1102,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/1102,"New optional flag --dump-exec, dump VAD when program starts executing anonymous (not file-backed) VAD. This is a new pretty effective general purpose heuristic.
Huge part of this was taken from #1000, the IPT plugin will be made much thinner after this is merged.","New optional flag --dump-exec, dump VAD when program starts executing anonymous (not file-backed) VAD. This is a new pretty effective general purpose heuristic.
Huge part of this was taken from #1000, the IPT plugin will be made much thinner after this is merged.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1102,2020-12-19T20:20:44Z,2021-02-13T13:02:36Z,2021-02-13T13:02:36Z,CLOSED,False,190,5,6,https://github.com/icedevml,memdump: dump when program enters new anonymous VAD,4,[],https://github.com/tklengyel/drakvuf/pull/1102,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/1102#issuecomment-748612504,"New optional flag --dump-exec, dump VAD when program starts executing anonymous (not file-backed) VAD. This is a new pretty effective general purpose heuristic.
Huge part of this was taken from #1000, the IPT plugin will be made much thinner after this is merged.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1102,2020-12-19T20:20:44Z,2021-02-13T13:02:36Z,2021-02-13T13:02:36Z,CLOSED,False,190,5,6,https://github.com/icedevml,memdump: dump when program enters new anonymous VAD,4,[],https://github.com/tklengyel/drakvuf/pull/1102,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/1102#issuecomment-756077496,"New optional flag --dump-exec, dump VAD when program starts executing anonymous (not file-backed) VAD. This is a new pretty effective general purpose heuristic.
Huge part of this was taken from #1000, the IPT plugin will be made much thinner after this is merged.",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1102,2020-12-19T20:20:44Z,2021-02-13T13:02:36Z,2021-02-13T13:02:36Z,CLOSED,False,190,5,6,https://github.com/icedevml,memdump: dump when program enters new anonymous VAD,4,[],https://github.com/tklengyel/drakvuf/pull/1102,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/1102#issuecomment-756098185,"New optional flag --dump-exec, dump VAD when program starts executing anonymous (not file-backed) VAD. This is a new pretty effective general purpose heuristic.
Huge part of this was taken from #1000, the IPT plugin will be made much thinner after this is merged.","@tklengyel looks like there is some issue with windows 10
https://ci.drakvuf.com/job/DRAKVUF-windows10/44/console",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1102,2020-12-19T20:20:44Z,2021-02-13T13:02:36Z,2021-02-13T13:02:36Z,CLOSED,False,190,5,6,https://github.com/icedevml,memdump: dump when program enters new anonymous VAD,4,[],https://github.com/tklengyel/drakvuf/pull/1102,https://github.com/icedevml,5,https://github.com/tklengyel/drakvuf/pull/1102#issuecomment-757513832,"New optional flag --dump-exec, dump VAD when program starts executing anonymous (not file-backed) VAD. This is a new pretty effective general purpose heuristic.
Huge part of this was taken from #1000, the IPT plugin will be made much thinner after this is merged.",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1102,2020-12-19T20:20:44Z,2021-02-13T13:02:36Z,2021-02-13T13:02:36Z,CLOSED,False,190,5,6,https://github.com/icedevml,memdump: dump when program enters new anonymous VAD,4,[],https://github.com/tklengyel/drakvuf/pull/1102,https://github.com/icedevml,6,https://github.com/tklengyel/drakvuf/pull/1102#issuecomment-778616233,"New optional flag --dump-exec, dump VAD when program starts executing anonymous (not file-backed) VAD. This is a new pretty effective general purpose heuristic.
Huge part of this was taken from #1000, the IPT plugin will be made much thinner after this is merged.","I think this feature can be integrated into Hyperbee plugin instead, it would be just a few LOCs modification. Abandoning for now and I will probably make a PR to Hyperbee.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1103,2020-12-21T16:04:13Z,2020-12-21T22:01:26Z,2020-12-21T22:01:30Z,MERGED,True,1,1,1,https://github.com/tklengyel,Update Xen to 4.14.1,1,[],https://github.com/tklengyel/drakvuf/pull/1103,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1103,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1104,2020-12-22T01:14:49Z,2020-12-24T20:44:59Z,2020-12-24T20:45:04Z,MERGED,True,89,60,7,https://github.com/tklengyel,Update package scripts,1,[],https://github.com/tklengyel/drakvuf/pull/1104,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1104,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1104,2020-12-22T01:14:49Z,2020-12-24T20:44:59Z,2020-12-24T20:45:04Z,MERGED,True,89,60,7,https://github.com/tklengyel,Update package scripts,1,[],https://github.com/tklengyel/drakvuf/pull/1104,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/1104#issuecomment-749292122,,"I would like to at some point arrive at Xen, LibVMI & DRAKVUF all being packaged into individual deb files. That would make it easier to just grab the part you need instead of having to compile everything. For now I just added a xen debball build and caching of that deb as well in the release.",True,{'THUMBS_UP': ['https://github.com/icedevml']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1105,2020-12-30T15:15:01Z,2020-12-30T16:50:12Z,2020-12-30T16:50:15Z,MERGED,True,47,0,2,https://github.com/tklengyel,Enable queries: security-and-quality in codeql,2,[],https://github.com/tklengyel/drakvuf/pull/1105,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1105,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1106,2020-12-30T18:22:50Z,2020-12-30T18:55:02Z,2020-12-30T18:55:04Z,MERGED,True,3,3,1,https://github.com/tklengyel,Fix libinjector private header,1,[],https://github.com/tklengyel/drakvuf/pull/1106,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1106,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1107,2020-12-30T18:58:25Z,2020-12-30T23:37:39Z,2020-12-30T23:37:42Z,MERGED,True,2,0,2,https://github.com/tklengyel,Add -Wno-unknown-warning-option couple spots,1,[],https://github.com/tklengyel/drakvuf/pull/1107,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1107,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1108,2020-12-31T14:52:25Z,2020-12-31T15:30:07Z,2020-12-31T15:30:10Z,MERGED,True,10,23,5,https://github.com/tklengyel,Tune build system,2,[],https://github.com/tklengyel/drakvuf/pull/1108,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1108,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1109,2021-01-01T23:36:24Z,2021-01-01T23:57:20Z,2021-01-01T23:57:23Z,MERGED,True,194,194,189,https://github.com/tklengyel,Happy new years,1,[],https://github.com/tklengyel/drakvuf/pull/1109,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1109,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1111,2021-01-05T01:25:12Z,2021-01-05T16:40:30Z,2021-01-05T16:40:32Z,MERGED,True,6,9,2,https://github.com/tklengyel,Fix access_context_t init at various spots,1,[],https://github.com/tklengyel/drakvuf/pull/1111,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1111,"Can lead to various C++ warnings, like
error: field designator (null) does not refer to any field in type 'access_context_t'
rpcmon/rpcmon.cpp:213:18: note: in instantiation of function template specialization 'read_struct<_MIDL_STUB_DESC_32>' requested here
        auto s = read_struct<_MIDL_STUB_DESC_32>(vmi, info, arg);","Can lead to various C++ warnings, like
error: field designator (null) does not refer to any field in type 'access_context_t'
rpcmon/rpcmon.cpp:213:18: note: in instantiation of function template specialization 'read_struct<_MIDL_STUB_DESC_32>' requested here
        auto s = read_struct<_MIDL_STUB_DESC_32>(vmi, info, arg);",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1111,2021-01-05T01:25:12Z,2021-01-05T16:40:30Z,2021-01-05T16:40:32Z,MERGED,True,6,9,2,https://github.com/tklengyel,Fix access_context_t init at various spots,1,[],https://github.com/tklengyel/drakvuf/pull/1111,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/1111#issuecomment-754648456,"Can lead to various C++ warnings, like
error: field designator (null) does not refer to any field in type 'access_context_t'
rpcmon/rpcmon.cpp:213:18: note: in instantiation of function template specialization 'read_struct<_MIDL_STUB_DESC_32>' requested here
        auto s = read_struct<_MIDL_STUB_DESC_32>(vmi, info, arg);",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1111,2021-01-05T01:25:12Z,2021-01-05T16:40:30Z,2021-01-05T16:40:32Z,MERGED,True,6,9,2,https://github.com/tklengyel,Fix access_context_t init at various spots,1,[],https://github.com/tklengyel/drakvuf/pull/1111,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1111#issuecomment-754689110,"Can lead to various C++ warnings, like
error: field designator (null) does not refer to any field in type 'access_context_t'
rpcmon/rpcmon.cpp:213:18: note: in instantiation of function template specialization 'read_struct<_MIDL_STUB_DESC_32>' requested here
        auto s = read_struct<_MIDL_STUB_DESC_32>(vmi, info, arg);",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1112,2021-01-05T19:16:39Z,2021-01-26T17:45:06Z,2021-02-17T08:51:51Z,MERGED,True,210,132,7,https://github.com/chivay,libusermode: Cleanup,9,[],https://github.com/tklengyel/drakvuf/pull/1112,https://github.com/chivay,1,https://github.com/tklengyel/drakvuf/pull/1112,"Extracted numeric_format and and print_no_addr into a PrinterConfig for easier extendability
Added more error checking
Reworked parsing code for less duplication
Added UserHookException to handle parsing errors and easier debugging (line number information)","Extracted numeric_format and and print_no_addr into a PrinterConfig for easier extendability
Added more error checking
Reworked parsing code for less duplication
Added UserHookException to handle parsing errors and easier debugging (line number information)",True,{'THUMBS_UP': ['https://github.com/mwarzynski']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1112,2021-01-05T19:16:39Z,2021-01-26T17:45:06Z,2021-02-17T08:51:51Z,MERGED,True,210,132,7,https://github.com/chivay,libusermode: Cleanup,9,[],https://github.com/tklengyel/drakvuf/pull/1112,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1112#issuecomment-754842626,"Extracted numeric_format and and print_no_addr into a PrinterConfig for easier extendability
Added more error checking
Reworked parsing code for less duplication
Added UserHookException to handle parsing errors and easier debugging (line number information)",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1112,2021-01-05T19:16:39Z,2021-01-26T17:45:06Z,2021-02-17T08:51:51Z,MERGED,True,210,132,7,https://github.com/chivay,libusermode: Cleanup,9,[],https://github.com/tklengyel/drakvuf/pull/1112,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1112#issuecomment-754900743,"Extracted numeric_format and and print_no_addr into a PrinterConfig for easier extendability
Added more error checking
Reworked parsing code for less duplication
Added UserHookException to handle parsing errors and easier debugging (line number information)",@drakvuf-jenkins Test this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1112,2021-01-05T19:16:39Z,2021-01-26T17:45:06Z,2021-02-17T08:51:51Z,MERGED,True,210,132,7,https://github.com/chivay,libusermode: Cleanup,9,[],https://github.com/tklengyel/drakvuf/pull/1112,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/1112#issuecomment-767553055,"Extracted numeric_format and and print_no_addr into a PrinterConfig for easier extendability
Added more error checking
Reworked parsing code for less duplication
Added UserHookException to handle parsing errors and easier debugging (line number information)",@drakvuf-jenkins Test this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1112,2021-01-05T19:16:39Z,2021-01-26T17:45:06Z,2021-02-17T08:51:51Z,MERGED,True,210,132,7,https://github.com/chivay,libusermode: Cleanup,9,[],https://github.com/tklengyel/drakvuf/pull/1112,https://github.com/icedevml,5,https://github.com/tklengyel/drakvuf/pull/1112#issuecomment-767587217,"Extracted numeric_format and and print_no_addr into a PrinterConfig for easier extendability
Added more error checking
Reworked parsing code for less duplication
Added UserHookException to handle parsing errors and easier debugging (line number information)","🤔
Injection with createproc worked
Running DRAKVUF #1 for 60 seconds. Opts:  -k 0x185000 -i 1456 -e calc.exe -m createproc
DRAKVUF is running with PID 188141, background pid is 188127
CPU utilization average: 103
Exit status: 0
stderr line count: 4
1611670956.300828 DRAKVUF v0.8-git20210126144940+5495cd2d-1 Copyright (C) 2014-2021 Tamas K Lengyel
VMI_ERROR: --vmi_read: access context version mismatch, please update your code
VMI_ERROR: Could not find EPROCESS struct for pid = 4.
Plugin poolmon startup failed!",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1112,2021-01-05T19:16:39Z,2021-01-26T17:45:06Z,2021-02-17T08:51:51Z,MERGED,True,210,132,7,https://github.com/chivay,libusermode: Cleanup,9,[],https://github.com/tklengyel/drakvuf/pull/1112,https://github.com/icedevml,6,https://github.com/tklengyel/drakvuf/pull/1112#issuecomment-767587504,"Extracted numeric_format and and print_no_addr into a PrinterConfig for easier extendability
Added more error checking
Reworked parsing code for less duplication
Added UserHookException to handle parsing errors and easier debugging (line number information)",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1112,2021-01-05T19:16:39Z,2021-01-26T17:45:06Z,2021-02-17T08:51:51Z,MERGED,True,210,132,7,https://github.com/chivay,libusermode: Cleanup,9,[],https://github.com/tklengyel/drakvuf/pull/1112,https://github.com/icedevml,7,https://github.com/tklengyel/drakvuf/pull/1112#issuecomment-767617264,"Extracted numeric_format and and print_no_addr into a PrinterConfig for easier extendability
Added more error checking
Reworked parsing code for less duplication
Added UserHookException to handle parsing errors and easier debugging (line number information)",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1114,2021-01-12T10:39:25Z,2021-02-11T02:05:45Z,2021-02-11T02:05:45Z,MERGED,True,200,36,48,https://github.com/kscieslinski,Protection against api-hammering ,15,[],https://github.com/tklengyel/drakvuf/pull/1114,https://github.com/kscieslinski,1,https://github.com/tklengyel/drakvuf/pull/1114,"Draft
Marked as draft as it comes with small changes in drakvuf core (adds two fields to drakvuf_trap structure).
Moreover, both constants: LIMITED_TTL and TRAP_TTL_RESET_INTERVAL_SEC are currently taken from thin air.
Finally, there is still a problem with return traps which I describe below.
Functionality
Introduces very basic protection against API hammering. If a trap gets invoked in a short period of time (TRAP_TTL_RESET_INTERVAL_SEC), more than LIMITED_TTL times it gets unhooked (plugins are still responsible for destroying them).
Right now every time int3_cb gets invoked, for each trap set on that physical address, I:
i) first check if I have to reset the ttl counter (needs to be done if time passed since last reset was longer than TRAP_TTL_RESET_INTERVAL_SEC),
ii) decrease the ttl counter by one,
iii) if ttl counter drops to 0, I unhook the trap.
Example
Sample that only calls 10^6 times GetLastError() in a loop ran for 4 minutes when there was a hook set on GetLastError. With unhooking it executed nearly as fast as the analysis with no hook on GetLastError (under 0.5 sec).
Problem
It seems almost all return from syscall traps are set on the same physical address (this address does not belong to the function body). This results in unhooking the traps that were not even invoked. For now I'm solving this issue by assigning such trap UNLIMITED_TTL value. This should be fine as return traps are meant to be handled exactly once.","Draft
Marked as draft as it comes with small changes in drakvuf core (adds two fields to drakvuf_trap structure).
Moreover, both constants: LIMITED_TTL and TRAP_TTL_RESET_INTERVAL_SEC are currently taken from thin air.
Finally, there is still a problem with return traps which I describe below.
Functionality
Introduces very basic protection against API hammering. If a trap gets invoked in a short period of time (TRAP_TTL_RESET_INTERVAL_SEC), more than LIMITED_TTL times it gets unhooked (plugins are still responsible for destroying them).
Right now every time int3_cb gets invoked, for each trap set on that physical address, I:
i) first check if I have to reset the ttl counter (needs to be done if time passed since last reset was longer than TRAP_TTL_RESET_INTERVAL_SEC),
ii) decrease the ttl counter by one,
iii) if ttl counter drops to 0, I unhook the trap.
Example
Sample that only calls 10^6 times GetLastError() in a loop ran for 4 minutes when there was a hook set on GetLastError. With unhooking it executed nearly as fast as the analysis with no hook on GetLastError (under 0.5 sec).
Problem
It seems almost all return from syscall traps are set on the same physical address (this address does not belong to the function body). This results in unhooking the traps that were not even invoked. For now I'm solving this issue by assigning such trap UNLIMITED_TTL value. This should be fine as return traps are meant to be handled exactly once.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1114,2021-01-12T10:39:25Z,2021-02-11T02:05:45Z,2021-02-11T02:05:45Z,MERGED,True,200,36,48,https://github.com/kscieslinski,Protection against api-hammering ,15,[],https://github.com/tklengyel/drakvuf/pull/1114,https://github.com/icedevml,2,https://github.com/tklengyel/drakvuf/pull/1114#issuecomment-758745899,"Draft
Marked as draft as it comes with small changes in drakvuf core (adds two fields to drakvuf_trap structure).
Moreover, both constants: LIMITED_TTL and TRAP_TTL_RESET_INTERVAL_SEC are currently taken from thin air.
Finally, there is still a problem with return traps which I describe below.
Functionality
Introduces very basic protection against API hammering. If a trap gets invoked in a short period of time (TRAP_TTL_RESET_INTERVAL_SEC), more than LIMITED_TTL times it gets unhooked (plugins are still responsible for destroying them).
Right now every time int3_cb gets invoked, for each trap set on that physical address, I:
i) first check if I have to reset the ttl counter (needs to be done if time passed since last reset was longer than TRAP_TTL_RESET_INTERVAL_SEC),
ii) decrease the ttl counter by one,
iii) if ttl counter drops to 0, I unhook the trap.
Example
Sample that only calls 10^6 times GetLastError() in a loop ran for 4 minutes when there was a hook set on GetLastError. With unhooking it executed nearly as fast as the analysis with no hook on GetLastError (under 0.5 sec).
Problem
It seems almost all return from syscall traps are set on the same physical address (this address does not belong to the function body). This results in unhooking the traps that were not even invoked. For now I'm solving this issue by assigning such trap UNLIMITED_TTL value. This should be fine as return traps are meant to be handled exactly once.",@drakvuf-jenkins Test this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1114,2021-01-12T10:39:25Z,2021-02-11T02:05:45Z,2021-02-11T02:05:45Z,MERGED,True,200,36,48,https://github.com/kscieslinski,Protection against api-hammering ,15,[],https://github.com/tklengyel/drakvuf/pull/1114,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1114#issuecomment-759433479,"Draft
Marked as draft as it comes with small changes in drakvuf core (adds two fields to drakvuf_trap structure).
Moreover, both constants: LIMITED_TTL and TRAP_TTL_RESET_INTERVAL_SEC are currently taken from thin air.
Finally, there is still a problem with return traps which I describe below.
Functionality
Introduces very basic protection against API hammering. If a trap gets invoked in a short period of time (TRAP_TTL_RESET_INTERVAL_SEC), more than LIMITED_TTL times it gets unhooked (plugins are still responsible for destroying them).
Right now every time int3_cb gets invoked, for each trap set on that physical address, I:
i) first check if I have to reset the ttl counter (needs to be done if time passed since last reset was longer than TRAP_TTL_RESET_INTERVAL_SEC),
ii) decrease the ttl counter by one,
iii) if ttl counter drops to 0, I unhook the trap.
Example
Sample that only calls 10^6 times GetLastError() in a loop ran for 4 minutes when there was a hook set on GetLastError. With unhooking it executed nearly as fast as the analysis with no hook on GetLastError (under 0.5 sec).
Problem
It seems almost all return from syscall traps are set on the same physical address (this address does not belong to the function body). This results in unhooking the traps that were not even invoked. For now I'm solving this issue by assigning such trap UNLIMITED_TTL value. This should be fine as return traps are meant to be handled exactly once.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1114,2021-01-12T10:39:25Z,2021-02-11T02:05:45Z,2021-02-11T02:05:45Z,MERGED,True,200,36,48,https://github.com/kscieslinski,Protection against api-hammering ,15,[],https://github.com/tklengyel/drakvuf/pull/1114,https://github.com/drakvuf-jenkins,4,https://github.com/tklengyel/drakvuf/pull/1114#issuecomment-759433500,"Draft
Marked as draft as it comes with small changes in drakvuf core (adds two fields to drakvuf_trap structure).
Moreover, both constants: LIMITED_TTL and TRAP_TTL_RESET_INTERVAL_SEC are currently taken from thin air.
Finally, there is still a problem with return traps which I describe below.
Functionality
Introduces very basic protection against API hammering. If a trap gets invoked in a short period of time (TRAP_TTL_RESET_INTERVAL_SEC), more than LIMITED_TTL times it gets unhooked (plugins are still responsible for destroying them).
Right now every time int3_cb gets invoked, for each trap set on that physical address, I:
i) first check if I have to reset the ttl counter (needs to be done if time passed since last reset was longer than TRAP_TTL_RESET_INTERVAL_SEC),
ii) decrease the ttl counter by one,
iii) if ttl counter drops to 0, I unhook the trap.
Example
Sample that only calls 10^6 times GetLastError() in a loop ran for 4 minutes when there was a hook set on GetLastError. With unhooking it executed nearly as fast as the analysis with no hook on GetLastError (under 0.5 sec).
Problem
It seems almost all return from syscall traps are set on the same physical address (this address does not belong to the function body). This results in unhooking the traps that were not even invoked. For now I'm solving this issue by assigning such trap UNLIMITED_TTL value. This should be fine as return traps are meant to be handled exactly once.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1114,2021-01-12T10:39:25Z,2021-02-11T02:05:45Z,2021-02-11T02:05:45Z,MERGED,True,200,36,48,https://github.com/kscieslinski,Protection against api-hammering ,15,[],https://github.com/tklengyel/drakvuf/pull/1114,https://github.com/kscieslinski,5,https://github.com/tklengyel/drakvuf/pull/1114#issuecomment-760284890,"Draft
Marked as draft as it comes with small changes in drakvuf core (adds two fields to drakvuf_trap structure).
Moreover, both constants: LIMITED_TTL and TRAP_TTL_RESET_INTERVAL_SEC are currently taken from thin air.
Finally, there is still a problem with return traps which I describe below.
Functionality
Introduces very basic protection against API hammering. If a trap gets invoked in a short period of time (TRAP_TTL_RESET_INTERVAL_SEC), more than LIMITED_TTL times it gets unhooked (plugins are still responsible for destroying them).
Right now every time int3_cb gets invoked, for each trap set on that physical address, I:
i) first check if I have to reset the ttl counter (needs to be done if time passed since last reset was longer than TRAP_TTL_RESET_INTERVAL_SEC),
ii) decrease the ttl counter by one,
iii) if ttl counter drops to 0, I unhook the trap.
Example
Sample that only calls 10^6 times GetLastError() in a loop ran for 4 minutes when there was a hook set on GetLastError. With unhooking it executed nearly as fast as the analysis with no hook on GetLastError (under 0.5 sec).
Problem
It seems almost all return from syscall traps are set on the same physical address (this address does not belong to the function body). This results in unhooking the traps that were not even invoked. For now I'm solving this issue by assigning such trap UNLIMITED_TTL value. This should be fine as return traps are meant to be handled exactly once.","@tklengyel Could you please take a quick look at this pr? Does this approach make sense to you, or do you have some other idea how to solve this? The only real change is in int3_cb in vmi.c file.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1114,2021-01-12T10:39:25Z,2021-02-11T02:05:45Z,2021-02-11T02:05:45Z,MERGED,True,200,36,48,https://github.com/kscieslinski,Protection against api-hammering ,15,[],https://github.com/tklengyel/drakvuf/pull/1114,https://github.com/icedevml,6,https://github.com/tklengyel/drakvuf/pull/1114#issuecomment-760313610,"Draft
Marked as draft as it comes with small changes in drakvuf core (adds two fields to drakvuf_trap structure).
Moreover, both constants: LIMITED_TTL and TRAP_TTL_RESET_INTERVAL_SEC are currently taken from thin air.
Finally, there is still a problem with return traps which I describe below.
Functionality
Introduces very basic protection against API hammering. If a trap gets invoked in a short period of time (TRAP_TTL_RESET_INTERVAL_SEC), more than LIMITED_TTL times it gets unhooked (plugins are still responsible for destroying them).
Right now every time int3_cb gets invoked, for each trap set on that physical address, I:
i) first check if I have to reset the ttl counter (needs to be done if time passed since last reset was longer than TRAP_TTL_RESET_INTERVAL_SEC),
ii) decrease the ttl counter by one,
iii) if ttl counter drops to 0, I unhook the trap.
Example
Sample that only calls 10^6 times GetLastError() in a loop ran for 4 minutes when there was a hook set on GetLastError. With unhooking it executed nearly as fast as the analysis with no hook on GetLastError (under 0.5 sec).
Problem
It seems almost all return from syscall traps are set on the same physical address (this address does not belong to the function body). This results in unhooking the traps that were not even invoked. For now I'm solving this issue by assigning such trap UNLIMITED_TTL value. This should be fine as return traps are meant to be handled exactly once.","TLDR we have problems in our prod with malware that is trying to abuse sandbox using API hammering technique, this affects other stealth sandboxes as well (e.g. https://hatching.io/blog/tt-2020-10-15/ section ""ZLoader API Hammering""; in comparison to DRAKVUF, tria.ge is afaik a kernel mode monitor).
So we do want to resolve this systematically.
I'm generally 👍 for this approach, at least for now this seems to be the clearest idea to solve the problem.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1114,2021-01-12T10:39:25Z,2021-02-11T02:05:45Z,2021-02-11T02:05:45Z,MERGED,True,200,36,48,https://github.com/kscieslinski,Protection against api-hammering ,15,[],https://github.com/tklengyel/drakvuf/pull/1114,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/1114#issuecomment-760326638,"Draft
Marked as draft as it comes with small changes in drakvuf core (adds two fields to drakvuf_trap structure).
Moreover, both constants: LIMITED_TTL and TRAP_TTL_RESET_INTERVAL_SEC are currently taken from thin air.
Finally, there is still a problem with return traps which I describe below.
Functionality
Introduces very basic protection against API hammering. If a trap gets invoked in a short period of time (TRAP_TTL_RESET_INTERVAL_SEC), more than LIMITED_TTL times it gets unhooked (plugins are still responsible for destroying them).
Right now every time int3_cb gets invoked, for each trap set on that physical address, I:
i) first check if I have to reset the ttl counter (needs to be done if time passed since last reset was longer than TRAP_TTL_RESET_INTERVAL_SEC),
ii) decrease the ttl counter by one,
iii) if ttl counter drops to 0, I unhook the trap.
Example
Sample that only calls 10^6 times GetLastError() in a loop ran for 4 minutes when there was a hook set on GetLastError. With unhooking it executed nearly as fast as the analysis with no hook on GetLastError (under 0.5 sec).
Problem
It seems almost all return from syscall traps are set on the same physical address (this address does not belong to the function body). This results in unhooking the traps that were not even invoked. For now I'm solving this issue by assigning such trap UNLIMITED_TTL value. This should be fine as return traps are meant to be handled exactly once.",API hammering is a known technique that causes issues for all sandboxes. I've spefically called it out in presentations before as an open issue. So adding heuristic based mitigation to limit its effectiveness is very welcome. Only issue is that now malware can influence what is and isn't being monitored. It can run a hammer loop before performing some action on the now unmonitored interface. This is obviously not great. I don't have a generic solution to the problem (I don't think anyone does). So the key here is not to build in a default. The user should have to specify their hammer threashold and on what interfaces should be OK to lift monitoring temporarily. The more variance there is regarding how that is deployed the harder time malware will have to hide from all monitors running with different thresholds/policies.,True,"{'THUMBS_UP': ['https://github.com/kscieslinski', 'https://github.com/icedevml', 'https://github.com/BonusPlay']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1114,2021-01-12T10:39:25Z,2021-02-11T02:05:45Z,2021-02-11T02:05:45Z,MERGED,True,200,36,48,https://github.com/kscieslinski,Protection against api-hammering ,15,[],https://github.com/tklengyel/drakvuf/pull/1114,https://github.com/kscieslinski,8,https://github.com/tklengyel/drakvuf/pull/1114#issuecomment-764511393,"Draft
Marked as draft as it comes with small changes in drakvuf core (adds two fields to drakvuf_trap structure).
Moreover, both constants: LIMITED_TTL and TRAP_TTL_RESET_INTERVAL_SEC are currently taken from thin air.
Finally, there is still a problem with return traps which I describe below.
Functionality
Introduces very basic protection against API hammering. If a trap gets invoked in a short period of time (TRAP_TTL_RESET_INTERVAL_SEC), more than LIMITED_TTL times it gets unhooked (plugins are still responsible for destroying them).
Right now every time int3_cb gets invoked, for each trap set on that physical address, I:
i) first check if I have to reset the ttl counter (needs to be done if time passed since last reset was longer than TRAP_TTL_RESET_INTERVAL_SEC),
ii) decrease the ttl counter by one,
iii) if ttl counter drops to 0, I unhook the trap.
Example
Sample that only calls 10^6 times GetLastError() in a loop ran for 4 minutes when there was a hook set on GetLastError. With unhooking it executed nearly as fast as the analysis with no hook on GetLastError (under 0.5 sec).
Problem
It seems almost all return from syscall traps are set on the same physical address (this address does not belong to the function body). This results in unhooking the traps that were not even invoked. For now I'm solving this issue by assigning such trap UNLIMITED_TTL value. This should be fine as return traps are meant to be handled exactly once.","Thanks for reply. For now, I've added the option for a user to set ttl limit themselves. I would be able to add a per syscall limit after this issue #1117.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1114,2021-01-12T10:39:25Z,2021-02-11T02:05:45Z,2021-02-11T02:05:45Z,MERGED,True,200,36,48,https://github.com/kscieslinski,Protection against api-hammering ,15,[],https://github.com/tklengyel/drakvuf/pull/1114,https://github.com/icedevml,9,https://github.com/tklengyel/drakvuf/pull/1114#issuecomment-771643050,"Draft
Marked as draft as it comes with small changes in drakvuf core (adds two fields to drakvuf_trap structure).
Moreover, both constants: LIMITED_TTL and TRAP_TTL_RESET_INTERVAL_SEC are currently taken from thin air.
Finally, there is still a problem with return traps which I describe below.
Functionality
Introduces very basic protection against API hammering. If a trap gets invoked in a short period of time (TRAP_TTL_RESET_INTERVAL_SEC), more than LIMITED_TTL times it gets unhooked (plugins are still responsible for destroying them).
Right now every time int3_cb gets invoked, for each trap set on that physical address, I:
i) first check if I have to reset the ttl counter (needs to be done if time passed since last reset was longer than TRAP_TTL_RESET_INTERVAL_SEC),
ii) decrease the ttl counter by one,
iii) if ttl counter drops to 0, I unhook the trap.
Example
Sample that only calls 10^6 times GetLastError() in a loop ran for 4 minutes when there was a hook set on GetLastError. With unhooking it executed nearly as fast as the analysis with no hook on GetLastError (under 0.5 sec).
Problem
It seems almost all return from syscall traps are set on the same physical address (this address does not belong to the function body). This results in unhooking the traps that were not even invoked. For now I'm solving this issue by assigning such trap UNLIMITED_TTL value. This should be fine as return traps are meant to be handled exactly once.",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1114,2021-01-12T10:39:25Z,2021-02-11T02:05:45Z,2021-02-11T02:05:45Z,MERGED,True,200,36,48,https://github.com/kscieslinski,Protection against api-hammering ,15,[],https://github.com/tklengyel/drakvuf/pull/1114,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/1114#issuecomment-773736260,"Draft
Marked as draft as it comes with small changes in drakvuf core (adds two fields to drakvuf_trap structure).
Moreover, both constants: LIMITED_TTL and TRAP_TTL_RESET_INTERVAL_SEC are currently taken from thin air.
Finally, there is still a problem with return traps which I describe below.
Functionality
Introduces very basic protection against API hammering. If a trap gets invoked in a short period of time (TRAP_TTL_RESET_INTERVAL_SEC), more than LIMITED_TTL times it gets unhooked (plugins are still responsible for destroying them).
Right now every time int3_cb gets invoked, for each trap set on that physical address, I:
i) first check if I have to reset the ttl counter (needs to be done if time passed since last reset was longer than TRAP_TTL_RESET_INTERVAL_SEC),
ii) decrease the ttl counter by one,
iii) if ttl counter drops to 0, I unhook the trap.
Example
Sample that only calls 10^6 times GetLastError() in a loop ran for 4 minutes when there was a hook set on GetLastError. With unhooking it executed nearly as fast as the analysis with no hook on GetLastError (under 0.5 sec).
Problem
It seems almost all return from syscall traps are set on the same physical address (this address does not belong to the function body). This results in unhooking the traps that were not even invoked. For now I'm solving this issue by assigning such trap UNLIMITED_TTL value. This should be fine as return traps are meant to be handled exactly once.",Overall this looks good but I would really like it if the trap structures wouldn't need to specifically set fields to preserve the current default if the structure is allocated zero-initialized. Only if you want to have a trap with a limit should you have to set it to a value specific to your plugin or use the user-provided value via drakvuf_get_limited_traps_ttl.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1114,2021-01-12T10:39:25Z,2021-02-11T02:05:45Z,2021-02-11T02:05:45Z,MERGED,True,200,36,48,https://github.com/kscieslinski,Protection against api-hammering ,15,[],https://github.com/tklengyel/drakvuf/pull/1114,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/1114#issuecomment-774042796,"Draft
Marked as draft as it comes with small changes in drakvuf core (adds two fields to drakvuf_trap structure).
Moreover, both constants: LIMITED_TTL and TRAP_TTL_RESET_INTERVAL_SEC are currently taken from thin air.
Finally, there is still a problem with return traps which I describe below.
Functionality
Introduces very basic protection against API hammering. If a trap gets invoked in a short period of time (TRAP_TTL_RESET_INTERVAL_SEC), more than LIMITED_TTL times it gets unhooked (plugins are still responsible for destroying them).
Right now every time int3_cb gets invoked, for each trap set on that physical address, I:
i) first check if I have to reset the ttl counter (needs to be done if time passed since last reset was longer than TRAP_TTL_RESET_INTERVAL_SEC),
ii) decrease the ttl counter by one,
iii) if ttl counter drops to 0, I unhook the trap.
Example
Sample that only calls 10^6 times GetLastError() in a loop ran for 4 minutes when there was a hook set on GetLastError. With unhooking it executed nearly as fast as the analysis with no hook on GetLastError (under 0.5 sec).
Problem
It seems almost all return from syscall traps are set on the same physical address (this address does not belong to the function body). This results in unhooking the traps that were not even invoked. For now I'm solving this issue by assigning such trap UNLIMITED_TTL value. This should be fine as return traps are meant to be handled exactly once.",Thanks for making the change! Please just remove the unneeded inits now for cases where the base struct is known to be already 0 initialized.,True,{'THUMBS_UP': ['https://github.com/icedevml']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1114,2021-01-12T10:39:25Z,2021-02-11T02:05:45Z,2021-02-11T02:05:45Z,MERGED,True,200,36,48,https://github.com/kscieslinski,Protection against api-hammering ,15,[],https://github.com/tklengyel/drakvuf/pull/1114,https://github.com/kscieslinski,12,https://github.com/tklengyel/drakvuf/pull/1114#issuecomment-774155868,"Draft
Marked as draft as it comes with small changes in drakvuf core (adds two fields to drakvuf_trap structure).
Moreover, both constants: LIMITED_TTL and TRAP_TTL_RESET_INTERVAL_SEC are currently taken from thin air.
Finally, there is still a problem with return traps which I describe below.
Functionality
Introduces very basic protection against API hammering. If a trap gets invoked in a short period of time (TRAP_TTL_RESET_INTERVAL_SEC), more than LIMITED_TTL times it gets unhooked (plugins are still responsible for destroying them).
Right now every time int3_cb gets invoked, for each trap set on that physical address, I:
i) first check if I have to reset the ttl counter (needs to be done if time passed since last reset was longer than TRAP_TTL_RESET_INTERVAL_SEC),
ii) decrease the ttl counter by one,
iii) if ttl counter drops to 0, I unhook the trap.
Example
Sample that only calls 10^6 times GetLastError() in a loop ran for 4 minutes when there was a hook set on GetLastError. With unhooking it executed nearly as fast as the analysis with no hook on GetLastError (under 0.5 sec).
Problem
It seems almost all return from syscall traps are set on the same physical address (this address does not belong to the function body). This results in unhooking the traps that were not even invoked. For now I'm solving this issue by assigning such trap UNLIMITED_TTL value. This should be fine as return traps are meant to be handled exactly once.",I will resolve all of the above suggestions at the beginning of next week;) Thanks for through cr.,True,"{'THUMBS_UP': ['https://github.com/icedevml', 'https://github.com/tklengyel']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1115,2021-01-15T13:30:10Z,2021-03-22T13:58:18Z,2021-03-22T14:22:28Z,MERGED,True,2589,96,28,https://github.com/BonusPlay,RAII containers for hooks and hooking API unification,20,[],https://github.com/tklengyel/drakvuf/pull/1115,https://github.com/BonusPlay,1,https://github.com/tklengyel/drakvuf/pull/1115,"Hello,
I'm currently in progress of writing a pretty big PR, which aims to get done 2 things.
First of all, RAII containers for hooks. This will allow us to properly hook and unhook (for example: when plugins exit).
Second of all, hooking API unification. Currently, there are 3 different ways, to hook stuff:

raw libdrakvuf hooks
libusermode hooks
plugins_ex hook with breakpoint_initializers

This PR aims to simplify and unify them into one package and unify their API. We can see memdump and apimon (2 plugins which rely on libusermode) share code, which shouldn't be needed.
For now this PR is very WIP and I haven't even started compiling it (I'm still on ""interface design"" phase). I'm opening the draft PR to open discussion and have more input from other drakvuf users :)","Hello,
I'm currently in progress of writing a pretty big PR, which aims to get done 2 things.
First of all, RAII containers for hooks. This will allow us to properly hook and unhook (for example: when plugins exit).
Second of all, hooking API unification. Currently, there are 3 different ways, to hook stuff:

raw libdrakvuf hooks
libusermode hooks
plugins_ex hook with breakpoint_initializers

This PR aims to simplify and unify them into one package and unify their API. We can see memdump and apimon (2 plugins which rely on libusermode) share code, which shouldn't be needed.
For now this PR is very WIP and I haven't even started compiling it (I'm still on ""interface design"" phase). I'm opening the draft PR to open discussion and have more input from other drakvuf users :)",True,"{'HOORAY': ['https://github.com/kscieslinski', 'https://github.com/chivay', 'https://github.com/icedevml']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1115,2021-01-15T13:30:10Z,2021-03-22T13:58:18Z,2021-03-22T14:22:28Z,MERGED,True,2589,96,28,https://github.com/BonusPlay,RAII containers for hooks and hooking API unification,20,[],https://github.com/tklengyel/drakvuf/pull/1115,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1115#issuecomment-760942963,"Hello,
I'm currently in progress of writing a pretty big PR, which aims to get done 2 things.
First of all, RAII containers for hooks. This will allow us to properly hook and unhook (for example: when plugins exit).
Second of all, hooking API unification. Currently, there are 3 different ways, to hook stuff:

raw libdrakvuf hooks
libusermode hooks
plugins_ex hook with breakpoint_initializers

This PR aims to simplify and unify them into one package and unify their API. We can see memdump and apimon (2 plugins which rely on libusermode) share code, which shouldn't be needed.
For now this PR is very WIP and I haven't even started compiling it (I'm still on ""interface design"" phase). I'm opening the draft PR to open discussion and have more input from other drakvuf users :)",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1115,2021-01-15T13:30:10Z,2021-03-22T13:58:18Z,2021-03-22T14:22:28Z,MERGED,True,2589,96,28,https://github.com/BonusPlay,RAII containers for hooks and hooking API unification,20,[],https://github.com/tklengyel/drakvuf/pull/1115,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1115#issuecomment-761039303,"Hello,
I'm currently in progress of writing a pretty big PR, which aims to get done 2 things.
First of all, RAII containers for hooks. This will allow us to properly hook and unhook (for example: when plugins exit).
Second of all, hooking API unification. Currently, there are 3 different ways, to hook stuff:

raw libdrakvuf hooks
libusermode hooks
plugins_ex hook with breakpoint_initializers

This PR aims to simplify and unify them into one package and unify their API. We can see memdump and apimon (2 plugins which rely on libusermode) share code, which shouldn't be needed.
For now this PR is very WIP and I haven't even started compiling it (I'm still on ""interface design"" phase). I'm opening the draft PR to open discussion and have more input from other drakvuf users :)",Adding a unified API layer is most welcome. We'll still need to keep the other APIs in place but should encourage future plugins to start using this new unified layer.,True,"{'THUMBS_UP': ['https://github.com/BonusPlay', 'https://github.com/icedevml']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1115,2021-01-15T13:30:10Z,2021-03-22T13:58:18Z,2021-03-22T14:22:28Z,MERGED,True,2589,96,28,https://github.com/BonusPlay,RAII containers for hooks and hooking API unification,20,[],https://github.com/tklengyel/drakvuf/pull/1115,https://github.com/BonusPlay,4,https://github.com/tklengyel/drakvuf/pull/1115#issuecomment-792907290,"Hello,
I'm currently in progress of writing a pretty big PR, which aims to get done 2 things.
First of all, RAII containers for hooks. This will allow us to properly hook and unhook (for example: when plugins exit).
Second of all, hooking API unification. Currently, there are 3 different ways, to hook stuff:

raw libdrakvuf hooks
libusermode hooks
plugins_ex hook with breakpoint_initializers

This PR aims to simplify and unify them into one package and unify their API. We can see memdump and apimon (2 plugins which rely on libusermode) share code, which shouldn't be needed.
For now this PR is very WIP and I haven't even started compiling it (I'm still on ""interface design"" phase). I'm opening the draft PR to open discussion and have more input from other drakvuf users :)",I believe this is now ready for reviews (but please don't merge it yet).,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1115,2021-01-15T13:30:10Z,2021-03-22T13:58:18Z,2021-03-22T14:22:28Z,MERGED,True,2589,96,28,https://github.com/BonusPlay,RAII containers for hooks and hooking API unification,20,[],https://github.com/tklengyel/drakvuf/pull/1115,https://github.com/icedevml,5,https://github.com/tklengyel/drakvuf/pull/1115#issuecomment-793612774,"Hello,
I'm currently in progress of writing a pretty big PR, which aims to get done 2 things.
First of all, RAII containers for hooks. This will allow us to properly hook and unhook (for example: when plugins exit).
Second of all, hooking API unification. Currently, there are 3 different ways, to hook stuff:

raw libdrakvuf hooks
libusermode hooks
plugins_ex hook with breakpoint_initializers

This PR aims to simplify and unify them into one package and unify their API. We can see memdump and apimon (2 plugins which rely on libusermode) share code, which shouldn't be needed.
For now this PR is very WIP and I haven't even started compiling it (I'm still on ""interface design"" phase). I'm opening the draft PR to open discussion and have more input from other drakvuf users :)",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1115,2021-01-15T13:30:10Z,2021-03-22T13:58:18Z,2021-03-22T14:22:28Z,MERGED,True,2589,96,28,https://github.com/BonusPlay,RAII containers for hooks and hooking API unification,20,[],https://github.com/tklengyel/drakvuf/pull/1115,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1115#issuecomment-793940774,"Hello,
I'm currently in progress of writing a pretty big PR, which aims to get done 2 things.
First of all, RAII containers for hooks. This will allow us to properly hook and unhook (for example: when plugins exit).
Second of all, hooking API unification. Currently, there are 3 different ways, to hook stuff:

raw libdrakvuf hooks
libusermode hooks
plugins_ex hook with breakpoint_initializers

This PR aims to simplify and unify them into one package and unify their API. We can see memdump and apimon (2 plugins which rely on libusermode) share code, which shouldn't be needed.
For now this PR is very WIP and I haven't even started compiling it (I'm still on ""interface design"" phase). I'm opening the draft PR to open discussion and have more input from other drakvuf users :)",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1115,2021-01-15T13:30:10Z,2021-03-22T13:58:18Z,2021-03-22T14:22:28Z,MERGED,True,2589,96,28,https://github.com/BonusPlay,RAII containers for hooks and hooking API unification,20,[],https://github.com/tklengyel/drakvuf/pull/1115,https://github.com/icedevml,7,https://github.com/tklengyel/drakvuf/pull/1115#issuecomment-795321986,"Hello,
I'm currently in progress of writing a pretty big PR, which aims to get done 2 things.
First of all, RAII containers for hooks. This will allow us to properly hook and unhook (for example: when plugins exit).
Second of all, hooking API unification. Currently, there are 3 different ways, to hook stuff:

raw libdrakvuf hooks
libusermode hooks
plugins_ex hook with breakpoint_initializers

This PR aims to simplify and unify them into one package and unify their API. We can see memdump and apimon (2 plugins which rely on libusermode) share code, which shouldn't be needed.
For now this PR is very WIP and I haven't even started compiling it (I'm still on ""interface design"" phase). I'm opening the draft PR to open discussion and have more input from other drakvuf users :)",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1115,2021-01-15T13:30:10Z,2021-03-22T13:58:18Z,2021-03-22T14:22:28Z,MERGED,True,2589,96,28,https://github.com/BonusPlay,RAII containers for hooks and hooking API unification,20,[],https://github.com/tklengyel/drakvuf/pull/1115,https://github.com/BonusPlay,8,https://github.com/tklengyel/drakvuf/pull/1115#issuecomment-795408896,"Hello,
I'm currently in progress of writing a pretty big PR, which aims to get done 2 things.
First of all, RAII containers for hooks. This will allow us to properly hook and unhook (for example: when plugins exit).
Second of all, hooking API unification. Currently, there are 3 different ways, to hook stuff:

raw libdrakvuf hooks
libusermode hooks
plugins_ex hook with breakpoint_initializers

This PR aims to simplify and unify them into one package and unify their API. We can see memdump and apimon (2 plugins which rely on libusermode) share code, which shouldn't be needed.
For now this PR is very WIP and I haven't even started compiling it (I'm still on ""interface design"" phase). I'm opening the draft PR to open discussion and have more input from other drakvuf users :)","VMI_ERROR: --vmi_read: access context version mismatch, please update your code
VMI_ERROR: Could not find EPROCESS struct for pid = 4.
Plugin poolmon startup failed!

😠",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1115,2021-01-15T13:30:10Z,2021-03-22T13:58:18Z,2021-03-22T14:22:28Z,MERGED,True,2589,96,28,https://github.com/BonusPlay,RAII containers for hooks and hooking API unification,20,[],https://github.com/tklengyel/drakvuf/pull/1115,https://github.com/icedevml,9,https://github.com/tklengyel/drakvuf/pull/1115#issuecomment-795435253,"Hello,
I'm currently in progress of writing a pretty big PR, which aims to get done 2 things.
First of all, RAII containers for hooks. This will allow us to properly hook and unhook (for example: when plugins exit).
Second of all, hooking API unification. Currently, there are 3 different ways, to hook stuff:

raw libdrakvuf hooks
libusermode hooks
plugins_ex hook with breakpoint_initializers

This PR aims to simplify and unify them into one package and unify their API. We can see memdump and apimon (2 plugins which rely on libusermode) share code, which shouldn't be needed.
For now this PR is very WIP and I haven't even started compiling it (I'm still on ""interface design"" phase). I'm opening the draft PR to open discussion and have more input from other drakvuf users :)",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1115,2021-01-15T13:30:10Z,2021-03-22T13:58:18Z,2021-03-22T14:22:28Z,MERGED,True,2589,96,28,https://github.com/BonusPlay,RAII containers for hooks and hooking API unification,20,[],https://github.com/tklengyel/drakvuf/pull/1115,https://github.com/BonusPlay,10,https://github.com/tklengyel/drakvuf/pull/1115#issuecomment-801297245,"Hello,
I'm currently in progress of writing a pretty big PR, which aims to get done 2 things.
First of all, RAII containers for hooks. This will allow us to properly hook and unhook (for example: when plugins exit).
Second of all, hooking API unification. Currently, there are 3 different ways, to hook stuff:

raw libdrakvuf hooks
libusermode hooks
plugins_ex hook with breakpoint_initializers

This PR aims to simplify and unify them into one package and unify their API. We can see memdump and apimon (2 plugins which rely on libusermode) share code, which shouldn't be needed.
For now this PR is very WIP and I haven't even started compiling it (I'm still on ""interface design"" phase). I'm opening the draft PR to open discussion and have more input from other drakvuf users :)",@tklengyel I've re-pasted licenses (taken from master) in all new files. I've requested a code review from @chivay. if anyone else feels brave enough to review the code now would be a good time :),True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1115,2021-01-15T13:30:10Z,2021-03-22T13:58:18Z,2021-03-22T14:22:28Z,MERGED,True,2589,96,28,https://github.com/BonusPlay,RAII containers for hooks and hooking API unification,20,[],https://github.com/tklengyel/drakvuf/pull/1115,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/1115#issuecomment-801323926,"Hello,
I'm currently in progress of writing a pretty big PR, which aims to get done 2 things.
First of all, RAII containers for hooks. This will allow us to properly hook and unhook (for example: when plugins exit).
Second of all, hooking API unification. Currently, there are 3 different ways, to hook stuff:

raw libdrakvuf hooks
libusermode hooks
plugins_ex hook with breakpoint_initializers

This PR aims to simplify and unify them into one package and unify their API. We can see memdump and apimon (2 plugins which rely on libusermode) share code, which shouldn't be needed.
For now this PR is very WIP and I haven't even started compiling it (I'm still on ""interface design"" phase). I'm opening the draft PR to open discussion and have more input from other drakvuf users :)","We'll need some design document/wiki entry describing all the different moving components in this PR. It's pretty much unreviewable as-is. The C++ code is not self explanatory and there is no example plugin that would use it. I also don't understand why there would be a separate class for ""syscall hooking"", let alone that be Windows only. So just I don't see how all these things fit together and what is being accomplished.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1115,2021-01-15T13:30:10Z,2021-03-22T13:58:18Z,2021-03-22T14:22:28Z,MERGED,True,2589,96,28,https://github.com/BonusPlay,RAII containers for hooks and hooking API unification,20,[],https://github.com/tklengyel/drakvuf/pull/1115,https://github.com/BonusPlay,12,https://github.com/tklengyel/drakvuf/pull/1115#issuecomment-801327578,"Hello,
I'm currently in progress of writing a pretty big PR, which aims to get done 2 things.
First of all, RAII containers for hooks. This will allow us to properly hook and unhook (for example: when plugins exit).
Second of all, hooking API unification. Currently, there are 3 different ways, to hook stuff:

raw libdrakvuf hooks
libusermode hooks
plugins_ex hook with breakpoint_initializers

This PR aims to simplify and unify them into one package and unify their API. We can see memdump and apimon (2 plugins which rely on libusermode) share code, which shouldn't be needed.
For now this PR is very WIP and I haven't even started compiling it (I'm still on ""interface design"" phase). I'm opening the draft PR to open discussion and have more input from other drakvuf users :)","We'll need some design document/wiki entry describing all the different moving components in this PR

There are comments in libhook.h explaining more difficult parts of the PR.

there is no example plugin that would use it

I'm pretty sure dummy plugin uses it (as an example).

I also don't understand why there would be a separate class for ""syscall hooking""

For the same reason we have breakpoint_in_system_process_searcher.

let alone that be Windows only

That is oversight on my part, as I was tailoring API to be backwards-compatible with current master branch, which doesn't support linux at all (see plugins_ex.h). I think I'll add linux support in another PR (just like userhooks support), but I will add a check for VM os to this PR.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1115,2021-01-15T13:30:10Z,2021-03-22T13:58:18Z,2021-03-22T14:22:28Z,MERGED,True,2589,96,28,https://github.com/BonusPlay,RAII containers for hooks and hooking API unification,20,[],https://github.com/tklengyel/drakvuf/pull/1115,https://github.com/tklengyel,13,https://github.com/tklengyel/drakvuf/pull/1115#issuecomment-801342385,"Hello,
I'm currently in progress of writing a pretty big PR, which aims to get done 2 things.
First of all, RAII containers for hooks. This will allow us to properly hook and unhook (for example: when plugins exit).
Second of all, hooking API unification. Currently, there are 3 different ways, to hook stuff:

raw libdrakvuf hooks
libusermode hooks
plugins_ex hook with breakpoint_initializers

This PR aims to simplify and unify them into one package and unify their API. We can see memdump and apimon (2 plugins which rely on libusermode) share code, which shouldn't be needed.
For now this PR is very WIP and I haven't even started compiling it (I'm still on ""interface design"" phase). I'm opening the draft PR to open discussion and have more input from other drakvuf users :)","For the same reason we have breakpoint_in_system_process_searcher.

OK, thanks for the explanation - I'm not that intimately familiar with all the shortcuts that are part of plugins_ex :)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1115,2021-01-15T13:30:10Z,2021-03-22T13:58:18Z,2021-03-22T14:22:28Z,MERGED,True,2589,96,28,https://github.com/BonusPlay,RAII containers for hooks and hooking API unification,20,[],https://github.com/tklengyel/drakvuf/pull/1115,https://github.com/tklengyel,14,https://github.com/tklengyel/drakvuf/pull/1115#issuecomment-802866940,"Hello,
I'm currently in progress of writing a pretty big PR, which aims to get done 2 things.
First of all, RAII containers for hooks. This will allow us to properly hook and unhook (for example: when plugins exit).
Second of all, hooking API unification. Currently, there are 3 different ways, to hook stuff:

raw libdrakvuf hooks
libusermode hooks
plugins_ex hook with breakpoint_initializers

This PR aims to simplify and unify them into one package and unify their API. We can see memdump and apimon (2 plugins which rely on libusermode) share code, which shouldn't be needed.
For now this PR is very WIP and I haven't even started compiling it (I'm still on ""interface design"" phase). I'm opening the draft PR to open discussion and have more input from other drakvuf users :)","After looking through this PR again I think it's fine to largely merge as-is with a couple things fixed:

The dummy plugin should be renamed to libhooktest and I'll turn it on in the CI system to include it in the runtime verification.
Re-re-paste the license please, there was a typo that's now fixed everywhere else. Let's not reintroduce it again :)
CodeQL issues and the other comments I had above addressed

Thanks!",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1115,2021-01-15T13:30:10Z,2021-03-22T13:58:18Z,2021-03-22T14:22:28Z,MERGED,True,2589,96,28,https://github.com/BonusPlay,RAII containers for hooks and hooking API unification,20,[],https://github.com/tklengyel/drakvuf/pull/1115,https://github.com/tklengyel,15,https://github.com/tklengyel/drakvuf/pull/1115#issuecomment-803384253,"Hello,
I'm currently in progress of writing a pretty big PR, which aims to get done 2 things.
First of all, RAII containers for hooks. This will allow us to properly hook and unhook (for example: when plugins exit).
Second of all, hooking API unification. Currently, there are 3 different ways, to hook stuff:

raw libdrakvuf hooks
libusermode hooks
plugins_ex hook with breakpoint_initializers

This PR aims to simplify and unify them into one package and unify their API. We can see memdump and apimon (2 plugins which rely on libusermode) share code, which shouldn't be needed.
For now this PR is very WIP and I haven't even started compiling it (I'm still on ""interface design"" phase). I'm opening the draft PR to open discussion and have more input from other drakvuf users :)","Ignore the jenkins CI errors, I need to reinstall it cause the toolstack broke",True,{'THUMBS_UP': ['https://github.com/BonusPlay']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1115,2021-01-15T13:30:10Z,2021-03-22T13:58:18Z,2021-03-22T14:22:28Z,MERGED,True,2589,96,28,https://github.com/BonusPlay,RAII containers for hooks and hooking API unification,20,[],https://github.com/tklengyel/drakvuf/pull/1115,https://github.com/tklengyel,16,https://github.com/tklengyel/drakvuf/pull/1115#issuecomment-804044194,"Hello,
I'm currently in progress of writing a pretty big PR, which aims to get done 2 things.
First of all, RAII containers for hooks. This will allow us to properly hook and unhook (for example: when plugins exit).
Second of all, hooking API unification. Currently, there are 3 different ways, to hook stuff:

raw libdrakvuf hooks
libusermode hooks
plugins_ex hook with breakpoint_initializers

This PR aims to simplify and unify them into one package and unify their API. We can see memdump and apimon (2 plugins which rely on libusermode) share code, which shouldn't be needed.
For now this PR is very WIP and I haven't even started compiling it (I'm still on ""interface design"" phase). I'm opening the draft PR to open discussion and have more input from other drakvuf users :)",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1115,2021-01-15T13:30:10Z,2021-03-22T13:58:18Z,2021-03-22T14:22:28Z,MERGED,True,2589,96,28,https://github.com/BonusPlay,RAII containers for hooks and hooking API unification,20,[],https://github.com/tklengyel/drakvuf/pull/1115,https://github.com/tklengyel,17,https://github.com/tklengyel/drakvuf/pull/1115#issuecomment-804083639,"Hello,
I'm currently in progress of writing a pretty big PR, which aims to get done 2 things.
First of all, RAII containers for hooks. This will allow us to properly hook and unhook (for example: when plugins exit).
Second of all, hooking API unification. Currently, there are 3 different ways, to hook stuff:

raw libdrakvuf hooks
libusermode hooks
plugins_ex hook with breakpoint_initializers

This PR aims to simplify and unify them into one package and unify their API. We can see memdump and apimon (2 plugins which rely on libusermode) share code, which shouldn't be needed.
For now this PR is very WIP and I haven't even started compiling it (I'm still on ""interface design"" phase). I'm opening the draft PR to open discussion and have more input from other drakvuf users :)","Alright, looks good to me.",True,{'HOORAY': ['https://github.com/skvl']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1118,2021-01-21T12:17:56Z,2021-01-25T22:14:21Z,2021-01-27T07:37:06Z,MERGED,True,59,76,5,https://github.com/disaykin,Refactor output format printers,1,[],https://github.com/tklengyel/drakvuf/pull/1118,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1118,"Add RAII class RestoreFlags for undoing changes in stream format flags
Replace manual ""0x"" printing by std::showbase.
Rework time_val printers
Replase printing of ""\n"" + flush() by std::endl.","Add RAII class RestoreFlags for undoing changes in stream format flags
Replace manual ""0x"" printing by std::showbase.
Rework time_val printers
Replase printing of ""\n"" + flush() by std::endl.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1118,2021-01-21T12:17:56Z,2021-01-25T22:14:21Z,2021-01-27T07:37:06Z,MERGED,True,59,76,5,https://github.com/disaykin,Refactor output format printers,1,[],https://github.com/tklengyel/drakvuf/pull/1118,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1118#issuecomment-764604754,"Add RAII class RestoreFlags for undoing changes in stream format flags
Replace manual ""0x"" printing by std::showbase.
Rework time_val printers
Replase printing of ""\n"" + flush() by std::endl.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1118,2021-01-21T12:17:56Z,2021-01-25T22:14:21Z,2021-01-27T07:37:06Z,MERGED,True,59,76,5,https://github.com/disaykin,Refactor output format printers,1,[],https://github.com/tklengyel/drakvuf/pull/1118,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1118#issuecomment-764641501,"Add RAII class RestoreFlags for undoing changes in stream format flags
Replace manual ""0x"" printing by std::showbase.
Rework time_val printers
Replase printing of ""\n"" + flush() by std::endl.",@drakvuf-jenkins Test this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1118,2021-01-21T12:17:56Z,2021-01-25T22:14:21Z,2021-01-27T07:37:06Z,MERGED,True,59,76,5,https://github.com/disaykin,Refactor output format printers,1,[],https://github.com/tklengyel/drakvuf/pull/1118,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/1118#issuecomment-766725288,"Add RAII class RestoreFlags for undoing changes in stream format flags
Replace manual ""0x"" printing by std::showbase.
Rework time_val printers
Replase printing of ""\n"" + flush() by std::endl.",@drakvuf-jenkins Test this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1120,2021-01-22T16:01:21Z,2021-02-02T15:28:50Z,2021-05-21T08:38:48Z,MERGED,True,101,136,8,https://github.com/disaykin,libuserhook on_dll_discovered logic refactored,1,[],https://github.com/tklengyel/drakvuf/pull/1120,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1120,"Filter dll hook rules while config loading
Load wanted hooks into structure optimized for on_dll_discovered logic (search on dll names only)
Remove code duplication in libusermode clients (dll_name calculation and memory management)
Replace C strstr call by C++ string::find","Filter dll hook rules while config loading
Load wanted hooks into structure optimized for on_dll_discovered logic (search on dll names only)
Remove code duplication in libusermode clients (dll_name calculation and memory management)
Replace C strstr call by C++ string::find",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1120,2021-01-22T16:01:21Z,2021-02-02T15:28:50Z,2021-05-21T08:38:48Z,MERGED,True,101,136,8,https://github.com/disaykin,libuserhook on_dll_discovered logic refactored,1,[],https://github.com/tklengyel/drakvuf/pull/1120,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1120#issuecomment-765509156,"Filter dll hook rules while config loading
Load wanted hooks into structure optimized for on_dll_discovered logic (search on dll names only)
Remove code duplication in libusermode clients (dll_name calculation and memory management)
Replace C strstr call by C++ string::find",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1120,2021-01-22T16:01:21Z,2021-02-02T15:28:50Z,2021-05-21T08:38:48Z,MERGED,True,101,136,8,https://github.com/disaykin,libuserhook on_dll_discovered logic refactored,1,[],https://github.com/tklengyel/drakvuf/pull/1120,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/1120#issuecomment-766712122,"Filter dll hook rules while config loading
Load wanted hooks into structure optimized for on_dll_discovered logic (search on dll names only)
Remove code duplication in libusermode clients (dll_name calculation and memory management)
Replace C strstr call by C++ string::find",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1120,2021-01-22T16:01:21Z,2021-02-02T15:28:50Z,2021-05-21T08:38:48Z,MERGED,True,101,136,8,https://github.com/disaykin,libuserhook on_dll_discovered logic refactored,1,[],https://github.com/tklengyel/drakvuf/pull/1120,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1120#issuecomment-767611474,"Filter dll hook rules while config loading
Load wanted hooks into structure optimized for on_dll_discovered logic (search on dll names only)
Remove code duplication in libusermode clients (dll_name calculation and memory management)
Replace C strstr call by C++ string::find",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1120,2021-01-22T16:01:21Z,2021-02-02T15:28:50Z,2021-05-21T08:38:48Z,MERGED,True,101,136,8,https://github.com/disaykin,libuserhook on_dll_discovered logic refactored,1,[],https://github.com/tklengyel/drakvuf/pull/1120,https://github.com/icedevml,5,https://github.com/tklengyel/drakvuf/pull/1120#issuecomment-768198228,"Filter dll hook rules while config loading
Load wanted hooks into structure optimized for on_dll_discovered logic (search on dll names only)
Remove code duplication in libusermode clients (dll_name calculation and memory management)
Replace C strstr call by C++ string::find",@BonusPlay ack?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1120,2021-01-22T16:01:21Z,2021-02-02T15:28:50Z,2021-05-21T08:38:48Z,MERGED,True,101,136,8,https://github.com/disaykin,libuserhook on_dll_discovered logic refactored,1,[],https://github.com/tklengyel/drakvuf/pull/1120,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1120#issuecomment-771293744,"Filter dll hook rules while config loading
Load wanted hooks into structure optimized for on_dll_discovered logic (search on dll names only)
Remove code duplication in libusermode clients (dll_name calculation and memory management)
Replace C strstr call by C++ string::find",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1120,2021-01-22T16:01:21Z,2021-02-02T15:28:50Z,2021-05-21T08:38:48Z,MERGED,True,101,136,8,https://github.com/disaykin,libuserhook on_dll_discovered logic refactored,1,[],https://github.com/tklengyel/drakvuf/pull/1120,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/1120#issuecomment-771302485,"Filter dll hook rules while config loading
Load wanted hooks into structure optimized for on_dll_discovered logic (search on dll names only)
Remove code duplication in libusermode clients (dll_name calculation and memory management)
Replace C strstr call by C++ string::find",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1120,2021-01-22T16:01:21Z,2021-02-02T15:28:50Z,2021-05-21T08:38:48Z,MERGED,True,101,136,8,https://github.com/disaykin,libuserhook on_dll_discovered logic refactored,1,[],https://github.com/tklengyel/drakvuf/pull/1120,https://github.com/icedevml,8,https://github.com/tklengyel/drakvuf/pull/1120#issuecomment-771674476,"Filter dll hook rules while config loading
Load wanted hooks into structure optimized for on_dll_discovered logic (search on dll names only)
Remove code duplication in libusermode clients (dll_name calculation and memory management)
Replace C strstr call by C++ string::find",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1122,2021-01-25T14:39:24Z,2021-01-26T16:59:40Z,2021-01-27T07:36:57Z,MERGED,True,36,10,3,https://github.com/disaykin,Optimize print subsystem,3,[],https://github.com/tklengyel/drakvuf/pull/1122,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1122,"On my tests, there is a 5-15% increase in the number of events in the same time.","On my tests, there is a 5-15% increase in the number of events in the same time.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1122,2021-01-25T14:39:24Z,2021-01-26T16:59:40Z,2021-01-27T07:36:57Z,MERGED,True,36,10,3,https://github.com/disaykin,Optimize print subsystem,3,[],https://github.com/tklengyel/drakvuf/pull/1122,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1122#issuecomment-766861297,"On my tests, there is a 5-15% increase in the number of events in the same time.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1122,2021-01-25T14:39:24Z,2021-01-26T16:59:40Z,2021-01-27T07:36:57Z,MERGED,True,36,10,3,https://github.com/disaykin,Optimize print subsystem,3,[],https://github.com/tklengyel/drakvuf/pull/1122,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/1122#issuecomment-766944478,"On my tests, there is a 5-15% increase in the number of events in the same time.",@drakvuf-jenkins Test this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1122,2021-01-25T14:39:24Z,2021-01-26T16:59:40Z,2021-01-27T07:36:57Z,MERGED,True,36,10,3,https://github.com/disaykin,Optimize print subsystem,3,[],https://github.com/tklengyel/drakvuf/pull/1122,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1122#issuecomment-767147923,"On my tests, there is a 5-15% increase in the number of events in the same time.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1122,2021-01-25T14:39:24Z,2021-01-26T16:59:40Z,2021-01-27T07:36:57Z,MERGED,True,36,10,3,https://github.com/disaykin,Optimize print subsystem,3,[],https://github.com/tklengyel/drakvuf/pull/1122,https://github.com/icedevml,5,https://github.com/tklengyel/drakvuf/pull/1122#issuecomment-767639740,"On my tests, there is a 5-15% increase in the number of events in the same time.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1123,2021-01-26T01:53:25Z,2021-01-26T13:11:54Z,2021-01-26T13:11:57Z,MERGED,True,4,2,2,https://github.com/tklengyel,Address issues spotted by Coverity,1,[],https://github.com/tklengyel/drakvuf/pull/1123,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1123,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1124,2021-01-26T09:38:32Z,2021-01-26T15:16:03Z,2021-04-08T12:36:20Z,MERGED,True,12,5,1,https://github.com/skvl,procdump: fix MMPTE check for accessible pages,1,[],https://github.com/tklengyel/drakvuf/pull/1124,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1124,Unfortunately I don't fully understand the underlying structures. Though with this checks I have fixed multiple BSODs.,Unfortunately I don't fully understand the underlying structures. Though with this checks I have fixed multiple BSODs.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1124,2021-01-26T09:38:32Z,2021-01-26T15:16:03Z,2021-04-08T12:36:20Z,MERGED,True,12,5,1,https://github.com/skvl,procdump: fix MMPTE check for accessible pages,1,[],https://github.com/tklengyel/drakvuf/pull/1124,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1124#issuecomment-767422636,Unfortunately I don't fully understand the underlying structures. Though with this checks I have fixed multiple BSODs.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1124,2021-01-26T09:38:32Z,2021-01-26T15:16:03Z,2021-04-08T12:36:20Z,MERGED,True,12,5,1,https://github.com/skvl,procdump: fix MMPTE check for accessible pages,1,[],https://github.com/tklengyel/drakvuf/pull/1124,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/1124#issuecomment-767552767,Unfortunately I don't fully understand the underlying structures. Though with this checks I have fixed multiple BSODs.,@drakvuf-jenkins Test this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1125,2021-01-26T09:55:27Z,2021-01-27T19:15:52Z,2021-04-08T12:36:20Z,MERGED,True,45,7,3,https://github.com/skvl,syscalls: fix NtAllocateVirtualMemory prototype,3,[],https://github.com/tklengyel/drakvuf/pull/1125,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1125,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1125,2021-01-26T09:55:27Z,2021-01-27T19:15:52Z,2021-04-08T12:36:20Z,MERGED,True,45,7,3,https://github.com/skvl,syscalls: fix NtAllocateVirtualMemory prototype,3,[],https://github.com/tklengyel/drakvuf/pull/1125,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1125#issuecomment-767431856,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1125,2021-01-26T09:55:27Z,2021-01-27T19:15:52Z,2021-04-08T12:36:20Z,MERGED,True,45,7,3,https://github.com/skvl,syscalls: fix NtAllocateVirtualMemory prototype,3,[],https://github.com/tklengyel/drakvuf/pull/1125,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1125#issuecomment-767532922,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1125,2021-01-26T09:55:27Z,2021-01-27T19:15:52Z,2021-04-08T12:36:20Z,MERGED,True,45,7,3,https://github.com/skvl,syscalls: fix NtAllocateVirtualMemory prototype,3,[],https://github.com/tklengyel/drakvuf/pull/1125,https://github.com/skvl,4,https://github.com/tklengyel/drakvuf/pull/1125#issuecomment-768118279,,@tklengyel what's the error with Windows 7 x86? Some problem with CI?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1125,2021-01-26T09:55:27Z,2021-01-27T19:15:52Z,2021-04-08T12:36:20Z,MERGED,True,45,7,3,https://github.com/skvl,syscalls: fix NtAllocateVirtualMemory prototype,3,[],https://github.com/tklengyel/drakvuf/pull/1125,https://github.com/icedevml,5,https://github.com/tklengyel/drakvuf/pull/1125#issuecomment-768250240,,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1125,2021-01-26T09:55:27Z,2021-01-27T19:15:52Z,2021-04-08T12:36:20Z,MERGED,True,45,7,3,https://github.com/skvl,syscalls: fix NtAllocateVirtualMemory prototype,3,[],https://github.com/tklengyel/drakvuf/pull/1125,https://github.com/icedevml,6,https://github.com/tklengyel/drakvuf/pull/1125#issuecomment-768258316,,"what's the error with Windows 7 x86? Some problem with CI?

this looks like some random issue/bug that occurs sometimes",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1125,2021-01-26T09:55:27Z,2021-01-27T19:15:52Z,2021-04-08T12:36:20Z,MERGED,True,45,7,3,https://github.com/skvl,syscalls: fix NtAllocateVirtualMemory prototype,3,[],https://github.com/tklengyel/drakvuf/pull/1125,https://github.com/icedevml,7,https://github.com/tklengyel/drakvuf/pull/1125#issuecomment-768260359,,@skvl please resolve conflict with syscalls.cpp,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1125,2021-01-26T09:55:27Z,2021-01-27T19:15:52Z,2021-04-08T12:36:20Z,MERGED,True,45,7,3,https://github.com/skvl,syscalls: fix NtAllocateVirtualMemory prototype,3,[],https://github.com/tklengyel/drakvuf/pull/1125,https://github.com/skvl,8,https://github.com/tklengyel/drakvuf/pull/1125#issuecomment-768311158,,"@icedevml, done!",True,{'THUMBS_UP': ['https://github.com/icedevml']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1125,2021-01-26T09:55:27Z,2021-01-27T19:15:52Z,2021-04-08T12:36:20Z,MERGED,True,45,7,3,https://github.com/skvl,syscalls: fix NtAllocateVirtualMemory prototype,3,[],https://github.com/tklengyel/drakvuf/pull/1125,https://github.com/icedevml,9,https://github.com/tklengyel/drakvuf/pull/1125#issuecomment-768412081,,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1126,2021-01-26T11:04:27Z,2021-01-26T14:25:28Z,2021-04-08T12:36:19Z,MERGED,True,40,0,4,https://github.com/skvl,filedelete: fix handle leak,1,[],https://github.com/tklengyel/drakvuf/pull/1126,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1126,Because of the error the Windows fails to delete the file.,Because of the error the Windows fails to delete the file.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1126,2021-01-26T11:04:27Z,2021-01-26T14:25:28Z,2021-04-08T12:36:19Z,MERGED,True,40,0,4,https://github.com/skvl,filedelete: fix handle leak,1,[],https://github.com/tklengyel/drakvuf/pull/1126,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1126#issuecomment-767470065,Because of the error the Windows fails to delete the file.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1126,2021-01-26T11:04:27Z,2021-01-26T14:25:28Z,2021-04-08T12:36:19Z,MERGED,True,40,0,4,https://github.com/skvl,filedelete: fix handle leak,1,[],https://github.com/tklengyel/drakvuf/pull/1126,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1126#issuecomment-767532212,Because of the error the Windows fails to delete the file.,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1127,2021-01-26T14:38:25Z,2021-01-26T15:17:20Z,2021-01-26T15:17:23Z,MERGED,True,3,5,2,https://github.com/tklengyel,Fix more Coverity issues,1,[],https://github.com/tklengyel/drakvuf/pull/1127,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1127,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1129,2021-01-28T07:17:03Z,2021-01-28T16:30:04Z,2021-05-21T08:38:48Z,MERGED,True,5,1,1,https://github.com/disaykin,syscalls: Describe NtUnmapViewOfSectionEx prototype,1,[],https://github.com/tklengyel/drakvuf/pull/1129,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1129,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1130,2021-02-01T17:07:59Z,2021-02-02T02:06:39Z,2021-02-17T08:51:46Z,MERGED,True,0,1,1,https://github.com/chivay,memdump: Fix double free,1,[],https://github.com/tklengyel/drakvuf/pull/1130,https://github.com/chivay,1,https://github.com/tklengyel/drakvuf/pull/1130,"From the g_checksum_get_string () docs:

The returned string is owned by the checksum and should not be modified or freed.

Fix the double-free introduced by 52e93e5","From the g_checksum_get_string () docs:

The returned string is owned by the checksum and should not be modified or freed.

Fix the double-free introduced by 52e93e5",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1130,2021-02-01T17:07:59Z,2021-02-02T02:06:39Z,2021-02-17T08:51:46Z,MERGED,True,0,1,1,https://github.com/chivay,memdump: Fix double free,1,[],https://github.com/tklengyel/drakvuf/pull/1130,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1130#issuecomment-771009170,"From the g_checksum_get_string () docs:

The returned string is owned by the checksum and should not be modified or freed.

Fix the double-free introduced by 52e93e5",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1130,2021-02-01T17:07:59Z,2021-02-02T02:06:39Z,2021-02-17T08:51:46Z,MERGED,True,0,1,1,https://github.com/chivay,memdump: Fix double free,1,[],https://github.com/tklengyel/drakvuf/pull/1130,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/1130#issuecomment-771009925,"From the g_checksum_get_string () docs:

The returned string is owned by the checksum and should not be modified or freed.

Fix the double-free introduced by 52e93e5",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1130,2021-02-01T17:07:59Z,2021-02-02T02:06:39Z,2021-02-17T08:51:46Z,MERGED,True,0,1,1,https://github.com/chivay,memdump: Fix double free,1,[],https://github.com/tklengyel/drakvuf/pull/1130,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1130#issuecomment-771016983,"From the g_checksum_get_string () docs:

The returned string is owned by the checksum and should not be modified or freed.

Fix the double-free introduced by 52e93e5",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1130,2021-02-01T17:07:59Z,2021-02-02T02:06:39Z,2021-02-17T08:51:46Z,MERGED,True,0,1,1,https://github.com/chivay,memdump: Fix double free,1,[],https://github.com/tklengyel/drakvuf/pull/1130,https://github.com/icedevml,5,https://github.com/tklengyel/drakvuf/pull/1130#issuecomment-771022005,"From the g_checksum_get_string () docs:

The returned string is owned by the checksum and should not be modified or freed.

Fix the double-free introduced by 52e93e5",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1130,2021-02-01T17:07:59Z,2021-02-02T02:06:39Z,2021-02-17T08:51:46Z,MERGED,True,0,1,1,https://github.com/chivay,memdump: Fix double free,1,[],https://github.com/tklengyel/drakvuf/pull/1130,https://github.com/icedevml,6,https://github.com/tklengyel/drakvuf/pull/1130#issuecomment-771034370,"From the g_checksum_get_string () docs:

The returned string is owned by the checksum and should not be modified or freed.

Fix the double-free introduced by 52e93e5",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1130,2021-02-01T17:07:59Z,2021-02-02T02:06:39Z,2021-02-17T08:51:46Z,MERGED,True,0,1,1,https://github.com/chivay,memdump: Fix double free,1,[],https://github.com/tklengyel/drakvuf/pull/1130,https://github.com/icedevml,7,https://github.com/tklengyel/drakvuf/pull/1130#issuecomment-771057949,"From the g_checksum_get_string () docs:

The returned string is owned by the checksum and should not be modified or freed.

Fix the double-free introduced by 52e93e5",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1130,2021-02-01T17:07:59Z,2021-02-02T02:06:39Z,2021-02-17T08:51:46Z,MERGED,True,0,1,1,https://github.com/chivay,memdump: Fix double free,1,[],https://github.com/tklengyel/drakvuf/pull/1130,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/1130#issuecomment-771101834,"From the g_checksum_get_string () docs:

The returned string is owned by the checksum and should not be modified or freed.

Fix the double-free introduced by 52e93e5",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1130,2021-02-01T17:07:59Z,2021-02-02T02:06:39Z,2021-02-17T08:51:46Z,MERGED,True,0,1,1,https://github.com/chivay,memdump: Fix double free,1,[],https://github.com/tklengyel/drakvuf/pull/1130,https://github.com/chivay,9,https://github.com/tklengyel/drakvuf/pull/1130#issuecomment-771213376,"From the g_checksum_get_string () docs:

The returned string is owned by the checksum and should not be modified or freed.

Fix the double-free introduced by 52e93e5",🤔,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1130,2021-02-01T17:07:59Z,2021-02-02T02:06:39Z,2021-02-17T08:51:46Z,MERGED,True,0,1,1,https://github.com/chivay,memdump: Fix double free,1,[],https://github.com/tklengyel/drakvuf/pull/1130,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/1130#issuecomment-771219864,"From the g_checksum_get_string () docs:

The returned string is owned by the checksum and should not be modified or freed.

Fix the double-free introduced by 52e93e5",My CI box has been running on 4.15-unstable but there is an issue with restoring VMs saved on Xen 4.14.. Not an issue with the PR itself. Working on moving the VMs up to 4.15 so that it won't be an issue soon.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1130,2021-02-01T17:07:59Z,2021-02-02T02:06:39Z,2021-02-17T08:51:46Z,MERGED,True,0,1,1,https://github.com/chivay,memdump: Fix double free,1,[],https://github.com/tklengyel/drakvuf/pull/1130,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/1130#issuecomment-771286358,"From the g_checksum_get_string () docs:

The returned string is owned by the checksum and should not be modified or freed.

Fix the double-free introduced by 52e93e5",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1131,2021-02-02T12:00:32Z,2021-02-05T02:05:17Z,2021-02-05T14:35:34Z,MERGED,True,7,6,1,https://github.com/chivay,injector/win: Don't leak expanded_target,3,[],https://github.com/tklengyel/drakvuf/pull/1131,https://github.com/chivay,1,https://github.com/tklengyel/drakvuf/pull/1131,"Use a pointer to a string instead of a struct to use
vmi_free_unicode_str helper.
CC @icedevml","Use a pointer to a string instead of a struct to use
vmi_free_unicode_str helper.
CC @icedevml",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1131,2021-02-02T12:00:32Z,2021-02-05T02:05:17Z,2021-02-05T14:35:34Z,MERGED,True,7,6,1,https://github.com/chivay,injector/win: Don't leak expanded_target,3,[],https://github.com/tklengyel/drakvuf/pull/1131,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1131#issuecomment-771586920,"Use a pointer to a string instead of a struct to use
vmi_free_unicode_str helper.
CC @icedevml",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1131,2021-02-02T12:00:32Z,2021-02-05T02:05:17Z,2021-02-05T14:35:34Z,MERGED,True,7,6,1,https://github.com/chivay,injector/win: Don't leak expanded_target,3,[],https://github.com/tklengyel/drakvuf/pull/1131,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/1131#issuecomment-771624203,"Use a pointer to a string instead of a struct to use
vmi_free_unicode_str helper.
CC @icedevml",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1131,2021-02-02T12:00:32Z,2021-02-05T02:05:17Z,2021-02-05T14:35:34Z,MERGED,True,7,6,1,https://github.com/chivay,injector/win: Don't leak expanded_target,3,[],https://github.com/tklengyel/drakvuf/pull/1131,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/1131#issuecomment-771674489,"Use a pointer to a string instead of a struct to use
vmi_free_unicode_str helper.
CC @icedevml",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1131,2021-02-02T12:00:32Z,2021-02-05T02:05:17Z,2021-02-05T14:35:34Z,MERGED,True,7,6,1,https://github.com/chivay,injector/win: Don't leak expanded_target,3,[],https://github.com/tklengyel/drakvuf/pull/1131,https://github.com/icedevml,5,https://github.com/tklengyel/drakvuf/pull/1131#issuecomment-771702663,"Use a pointer to a string instead of a struct to use
vmi_free_unicode_str helper.
CC @icedevml",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1132,2021-02-02T16:48:27Z,2021-02-05T13:50:26Z,2021-02-17T08:51:44Z,MERGED,True,1,0,1,https://github.com/chivay,libusermode: Add missing include to printers,3,[],https://github.com/tklengyel/drakvuf/pull/1132,https://github.com/chivay,1,https://github.com/tklengyel/drakvuf/pull/1132,"Compilation may fail depending on the version of C++ standard library:
printers/printers.cpp:116:23: error: implicit instantiation of undefined template 'std::__1::basic_stringstream<char, std::__1::
char_traits<char>, std::__1::allocator<char>>'
    std::stringstream os;
                      ^
/snap/zig/3072/lib/libcxx/include/iosfwd:139:32: note: template is declared here
    class _LIBCPP_TEMPLATE_VIS basic_stringstream;
                               ^
printers/printers.cpp:159:23: error: implicit instantiation of undefined template 'std::__1::basic_stringstream<char, std::__1::
char_traits<char>, std::__1::allocator<char>>'
    std::stringstream stream;
                      ^
/snap/zig/3072/lib/libcxx/include/iosfwd:139:32: note: template is declared here
    class _LIBCPP_TEMPLATE_VIS basic_stringstream;
                               ^","Compilation may fail depending on the version of C++ standard library:
printers/printers.cpp:116:23: error: implicit instantiation of undefined template 'std::__1::basic_stringstream<char, std::__1::
char_traits<char>, std::__1::allocator<char>>'
    std::stringstream os;
                      ^
/snap/zig/3072/lib/libcxx/include/iosfwd:139:32: note: template is declared here
    class _LIBCPP_TEMPLATE_VIS basic_stringstream;
                               ^
printers/printers.cpp:159:23: error: implicit instantiation of undefined template 'std::__1::basic_stringstream<char, std::__1::
char_traits<char>, std::__1::allocator<char>>'
    std::stringstream stream;
                      ^
/snap/zig/3072/lib/libcxx/include/iosfwd:139:32: note: template is declared here
    class _LIBCPP_TEMPLATE_VIS basic_stringstream;
                               ^",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1132,2021-02-02T16:48:27Z,2021-02-05T13:50:26Z,2021-02-17T08:51:44Z,MERGED,True,1,0,1,https://github.com/chivay,libusermode: Add missing include to printers,3,[],https://github.com/tklengyel/drakvuf/pull/1132,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1132#issuecomment-771779312,"Compilation may fail depending on the version of C++ standard library:
printers/printers.cpp:116:23: error: implicit instantiation of undefined template 'std::__1::basic_stringstream<char, std::__1::
char_traits<char>, std::__1::allocator<char>>'
    std::stringstream os;
                      ^
/snap/zig/3072/lib/libcxx/include/iosfwd:139:32: note: template is declared here
    class _LIBCPP_TEMPLATE_VIS basic_stringstream;
                               ^
printers/printers.cpp:159:23: error: implicit instantiation of undefined template 'std::__1::basic_stringstream<char, std::__1::
char_traits<char>, std::__1::allocator<char>>'
    std::stringstream stream;
                      ^
/snap/zig/3072/lib/libcxx/include/iosfwd:139:32: note: template is declared here
    class _LIBCPP_TEMPLATE_VIS basic_stringstream;
                               ^",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1132,2021-02-02T16:48:27Z,2021-02-05T13:50:26Z,2021-02-17T08:51:44Z,MERGED,True,1,0,1,https://github.com/chivay,libusermode: Add missing include to printers,3,[],https://github.com/tklengyel/drakvuf/pull/1132,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/1132#issuecomment-771785949,"Compilation may fail depending on the version of C++ standard library:
printers/printers.cpp:116:23: error: implicit instantiation of undefined template 'std::__1::basic_stringstream<char, std::__1::
char_traits<char>, std::__1::allocator<char>>'
    std::stringstream os;
                      ^
/snap/zig/3072/lib/libcxx/include/iosfwd:139:32: note: template is declared here
    class _LIBCPP_TEMPLATE_VIS basic_stringstream;
                               ^
printers/printers.cpp:159:23: error: implicit instantiation of undefined template 'std::__1::basic_stringstream<char, std::__1::
char_traits<char>, std::__1::allocator<char>>'
    std::stringstream stream;
                      ^
/snap/zig/3072/lib/libcxx/include/iosfwd:139:32: note: template is declared here
    class _LIBCPP_TEMPLATE_VIS basic_stringstream;
                               ^",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1133,2021-02-11T15:25:16Z,2021-02-19T13:26:14Z,2021-03-10T15:43:48Z,MERGED,True,1830,1,9,https://github.com/Id3aFly,Hyperbee plugin,48,[],https://github.com/tklengyel/drakvuf/pull/1133,https://github.com/Id3aFly,1,https://github.com/tklengyel/drakvuf/pull/1133,"Hello everyone,
this is my first ever pull request so I'm very interested in your feedback! :)
Background
During my masters thesis at FAU Erlangen-Nürnberg (FAU) I created a plugin called ""hyperbee"" that is at least part of the working name. The topic of my masters thesis is to efficiently dump the content of executable pages and analyse it with a (currently still private) tool from Politecnico di Milano (IT). Based on the detected behaviour a classifier could later determine if the page contains malicious code or not.
I was talking with @icedevml about this plugin and he encouraged me to share my code within a pull request. Luckily all of my supervisors approved this idea, so I can finally share my code with you. I am just allowed to share the code regarding the monitoring/dumping of pages and cannot include the behaviour detection code. Based on what I've seen in other plugins (memdump, ipt) I created a similar plugin:
Principle of operation


At first it creates a trap at the entry of MmAccessFault


This 1st trap's callback can get hold of the virtual address MmAccessFault shall assign as new page to. Additionally the cb adds another trap when returning from MmAccessFault and continuing with the actual code.


This 2nd trap's callback intercepts right after returning from MmAccessFault and can obtain the page frame number which was assigned to the virtual address. So we know the relation of virtual page ~ physical (guest) frame number. Furthermore this adds a new trap, whenever code is executed (instructions are fetched) from this frame.
[Now we don't care about writes or reads which for example may include code unpacking, decrypting, etc. We just wait when code is executed to dump the content of the whole page.]


When this third trap (instruction fetch from a monitored page) occurs, things like hash calculation (prevents duplicates -> speedup) and dumps are induced.
[At this point (it is marked within the code) I also analyse the regarding memory for specific behaviour. Additionally a classifier could then set a malware flag if the page contains malicious behaviour or not.]
Depending on a ""malware"" flag (predetemined by MALWARE_DEFAULT or other custom set flags in hyperbee.h: LOG_ALWAYS, DUMP_ALWAYS) the subsequent behaviour is determined:

the current data gathered through the analysis can be printed to the shell
the memory dump can be stored permanently (together with a metadata file).

Additionally the exec trap is deleted and swapped for a write trap.
[Now we don't care about execs or reads as long as the page content remains unchanged since we already dumped that. We just wait when code is modified.]


When this new write trap gets active it just deletes itself and installs a new exec trap. The callback of this exec trap is what is described in step 4.
[Thus, we are able to permanently swap traps to dump the page on an instruction fetch, whenever it has been modified since the last execution].


How to use
Hyperbee uses two command line options:
--hyperbee-dump-dir : required, defines the path to store the dumps within a ""dumps"" folder
--hyperbee-filter-executable : optional, discards all pages which vad node does not belong to a binary whose absolute path does not contain this name. Therefore, you can filter for paths or filenames, etc.
sudo ./src/drakvuf -r /root/win10.json -d win10 -a hyperbee --hyperbee-dump-dir /tmp/ --hyperbee-filter-executable RandomExample
Output
Example output of the metafile:
{ ""TimeStamp"": ""1613056257.402199"", ""PID"": 5696, ""PPID"": 3032, ""TID"": 3748, ""UserID"": 1, ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""EventUID"": 43645, ""CR3"": ""0x99a65001"", ""PageVA"": ""0x7ff77176e000"", ""VADBase"": ""0x7ff771760000"", ""VADEnd"": ""0x7ff771782fff"", ""VADName"": ""\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""DumpSize"": ""0x1000"", ""DumpFile"": ""\/tmp\/dumps\/7ff77176e000_31287c55df232436.page"", ""SHA256"": ""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"", ""DumpID"": 15, ""TrapPA"": ""0x70b828a4"", ""GFN"": ""0x70b82"" }
Example output of the commandline (same analysis):
{""Plugin"":""execframe"",""TimeStamp"":""1613056257.402199"",""PID"":5696,""PPID"":3032,""TID"":3748,""UserName"":""SessionID"",""UserId"":1,""ProcessName"":""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""Method"":""execute_faulted_cb"",""EventUID"":""0xaa7d"",""CR3"":""0x99a65001"",""PageVA"":""0x7ff77176e000"",""VADBase"":""0x7ff771760000"",""VADEnd"":""0x7ff771782fff"",""VADName"":""\\Users\\master\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""DumpSize"":4096,""DumpFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.page"",""SHA256"":""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"",""DumpID"":15,""MetaFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.metafile"",""TrapPA"":""0x70b828a4"",""GFN"":""0x70b82""} 
Additional information
You may wonder why this plugin is called hyperbee. This is because of the name of the behaviour detection tool (from Politecnico di Milano) I integrated, which is referring to ""bees"". Since I call this tool for each page dump and thus, very often, it reminded me of a very diligent and busy ""bee"". Thus the name ""hyperbee"".
There are two other flags in hyperbee.h for two ideas which are rather experimental (or need refinement):

DUMP_VAD: Lets you dump the whole VAD node instead of just the page. The problem I saw with it is, that the vad content (as collection of pages) is loaded dynamically on access. On the one hand hashing of vad nodes is more or less not reasonable since whenever a new page is loaded within the vad node the whole node is dumped and leads to another hash. On the other hand by being able to see which parts within the vad are loaded/accessed/executed after another might be interesting for malware analysis. The page mode is quicker, as it just has to hash 4096 bytes each time.
IGNORE_SYSTEM_DLL If we assume that the system's integrity is ensured turning on this flags discards the dump of all pages/vads whose vad name contains either System32 and SysWOW64. This gave me a major speedup since my PC is rather old and I was not interested in calls within the common Windows libraries/executables.

Feel free to share any questions and suggestions!
Klaus
Co-authored-by: Michał Leszczyński michal.leszczynski@cert.pl","Hello everyone,
this is my first ever pull request so I'm very interested in your feedback! :)
Background
During my masters thesis at FAU Erlangen-Nürnberg (FAU) I created a plugin called ""hyperbee"" that is at least part of the working name. The topic of my masters thesis is to efficiently dump the content of executable pages and analyse it with a (currently still private) tool from Politecnico di Milano (IT). Based on the detected behaviour a classifier could later determine if the page contains malicious code or not.
I was talking with @icedevml about this plugin and he encouraged me to share my code within a pull request. Luckily all of my supervisors approved this idea, so I can finally share my code with you. I am just allowed to share the code regarding the monitoring/dumping of pages and cannot include the behaviour detection code. Based on what I've seen in other plugins (memdump, ipt) I created a similar plugin:
Principle of operation


At first it creates a trap at the entry of MmAccessFault


This 1st trap's callback can get hold of the virtual address MmAccessFault shall assign as new page to. Additionally the cb adds another trap when returning from MmAccessFault and continuing with the actual code.


This 2nd trap's callback intercepts right after returning from MmAccessFault and can obtain the page frame number which was assigned to the virtual address. So we know the relation of virtual page ~ physical (guest) frame number. Furthermore this adds a new trap, whenever code is executed (instructions are fetched) from this frame.
[Now we don't care about writes or reads which for example may include code unpacking, decrypting, etc. We just wait when code is executed to dump the content of the whole page.]


When this third trap (instruction fetch from a monitored page) occurs, things like hash calculation (prevents duplicates -> speedup) and dumps are induced.
[At this point (it is marked within the code) I also analyse the regarding memory for specific behaviour. Additionally a classifier could then set a malware flag if the page contains malicious behaviour or not.]
Depending on a ""malware"" flag (predetemined by MALWARE_DEFAULT or other custom set flags in hyperbee.h: LOG_ALWAYS, DUMP_ALWAYS) the subsequent behaviour is determined:

the current data gathered through the analysis can be printed to the shell
the memory dump can be stored permanently (together with a metadata file).

Additionally the exec trap is deleted and swapped for a write trap.
[Now we don't care about execs or reads as long as the page content remains unchanged since we already dumped that. We just wait when code is modified.]


When this new write trap gets active it just deletes itself and installs a new exec trap. The callback of this exec trap is what is described in step 4.
[Thus, we are able to permanently swap traps to dump the page on an instruction fetch, whenever it has been modified since the last execution].


How to use
Hyperbee uses two command line options:
--hyperbee-dump-dir : required, defines the path to store the dumps within a ""dumps"" folder
--hyperbee-filter-executable : optional, discards all pages which vad node does not belong to a binary whose absolute path does not contain this name. Therefore, you can filter for paths or filenames, etc.
sudo ./src/drakvuf -r /root/win10.json -d win10 -a hyperbee --hyperbee-dump-dir /tmp/ --hyperbee-filter-executable RandomExample
Output
Example output of the metafile:
{ ""TimeStamp"": ""1613056257.402199"", ""PID"": 5696, ""PPID"": 3032, ""TID"": 3748, ""UserID"": 1, ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""EventUID"": 43645, ""CR3"": ""0x99a65001"", ""PageVA"": ""0x7ff77176e000"", ""VADBase"": ""0x7ff771760000"", ""VADEnd"": ""0x7ff771782fff"", ""VADName"": ""\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""DumpSize"": ""0x1000"", ""DumpFile"": ""\/tmp\/dumps\/7ff77176e000_31287c55df232436.page"", ""SHA256"": ""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"", ""DumpID"": 15, ""TrapPA"": ""0x70b828a4"", ""GFN"": ""0x70b82"" }
Example output of the commandline (same analysis):
{""Plugin"":""execframe"",""TimeStamp"":""1613056257.402199"",""PID"":5696,""PPID"":3032,""TID"":3748,""UserName"":""SessionID"",""UserId"":1,""ProcessName"":""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""Method"":""execute_faulted_cb"",""EventUID"":""0xaa7d"",""CR3"":""0x99a65001"",""PageVA"":""0x7ff77176e000"",""VADBase"":""0x7ff771760000"",""VADEnd"":""0x7ff771782fff"",""VADName"":""\\Users\\master\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""DumpSize"":4096,""DumpFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.page"",""SHA256"":""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"",""DumpID"":15,""MetaFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.metafile"",""TrapPA"":""0x70b828a4"",""GFN"":""0x70b82""} 
Additional information
You may wonder why this plugin is called hyperbee. This is because of the name of the behaviour detection tool (from Politecnico di Milano) I integrated, which is referring to ""bees"". Since I call this tool for each page dump and thus, very often, it reminded me of a very diligent and busy ""bee"". Thus the name ""hyperbee"".
There are two other flags in hyperbee.h for two ideas which are rather experimental (or need refinement):

DUMP_VAD: Lets you dump the whole VAD node instead of just the page. The problem I saw with it is, that the vad content (as collection of pages) is loaded dynamically on access. On the one hand hashing of vad nodes is more or less not reasonable since whenever a new page is loaded within the vad node the whole node is dumped and leads to another hash. On the other hand by being able to see which parts within the vad are loaded/accessed/executed after another might be interesting for malware analysis. The page mode is quicker, as it just has to hash 4096 bytes each time.
IGNORE_SYSTEM_DLL If we assume that the system's integrity is ensured turning on this flags discards the dump of all pages/vads whose vad name contains either System32 and SysWOW64. This gave me a major speedup since my PC is rather old and I was not interested in calls within the common Windows libraries/executables.

Feel free to share any questions and suggestions!
Klaus
Co-authored-by: Michał Leszczyński michal.leszczynski@cert.pl",True,"{'ROCKET': ['https://github.com/tklengyel', 'https://github.com/BonusPlay', 'https://github.com/icedevml']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1133,2021-02-11T15:25:16Z,2021-02-19T13:26:14Z,2021-03-10T15:43:48Z,MERGED,True,1830,1,9,https://github.com/Id3aFly,Hyperbee plugin,48,[],https://github.com/tklengyel/drakvuf/pull/1133,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1133#issuecomment-777574352,"Hello everyone,
this is my first ever pull request so I'm very interested in your feedback! :)
Background
During my masters thesis at FAU Erlangen-Nürnberg (FAU) I created a plugin called ""hyperbee"" that is at least part of the working name. The topic of my masters thesis is to efficiently dump the content of executable pages and analyse it with a (currently still private) tool from Politecnico di Milano (IT). Based on the detected behaviour a classifier could later determine if the page contains malicious code or not.
I was talking with @icedevml about this plugin and he encouraged me to share my code within a pull request. Luckily all of my supervisors approved this idea, so I can finally share my code with you. I am just allowed to share the code regarding the monitoring/dumping of pages and cannot include the behaviour detection code. Based on what I've seen in other plugins (memdump, ipt) I created a similar plugin:
Principle of operation


At first it creates a trap at the entry of MmAccessFault


This 1st trap's callback can get hold of the virtual address MmAccessFault shall assign as new page to. Additionally the cb adds another trap when returning from MmAccessFault and continuing with the actual code.


This 2nd trap's callback intercepts right after returning from MmAccessFault and can obtain the page frame number which was assigned to the virtual address. So we know the relation of virtual page ~ physical (guest) frame number. Furthermore this adds a new trap, whenever code is executed (instructions are fetched) from this frame.
[Now we don't care about writes or reads which for example may include code unpacking, decrypting, etc. We just wait when code is executed to dump the content of the whole page.]


When this third trap (instruction fetch from a monitored page) occurs, things like hash calculation (prevents duplicates -> speedup) and dumps are induced.
[At this point (it is marked within the code) I also analyse the regarding memory for specific behaviour. Additionally a classifier could then set a malware flag if the page contains malicious behaviour or not.]
Depending on a ""malware"" flag (predetemined by MALWARE_DEFAULT or other custom set flags in hyperbee.h: LOG_ALWAYS, DUMP_ALWAYS) the subsequent behaviour is determined:

the current data gathered through the analysis can be printed to the shell
the memory dump can be stored permanently (together with a metadata file).

Additionally the exec trap is deleted and swapped for a write trap.
[Now we don't care about execs or reads as long as the page content remains unchanged since we already dumped that. We just wait when code is modified.]


When this new write trap gets active it just deletes itself and installs a new exec trap. The callback of this exec trap is what is described in step 4.
[Thus, we are able to permanently swap traps to dump the page on an instruction fetch, whenever it has been modified since the last execution].


How to use
Hyperbee uses two command line options:
--hyperbee-dump-dir : required, defines the path to store the dumps within a ""dumps"" folder
--hyperbee-filter-executable : optional, discards all pages which vad node does not belong to a binary whose absolute path does not contain this name. Therefore, you can filter for paths or filenames, etc.
sudo ./src/drakvuf -r /root/win10.json -d win10 -a hyperbee --hyperbee-dump-dir /tmp/ --hyperbee-filter-executable RandomExample
Output
Example output of the metafile:
{ ""TimeStamp"": ""1613056257.402199"", ""PID"": 5696, ""PPID"": 3032, ""TID"": 3748, ""UserID"": 1, ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""EventUID"": 43645, ""CR3"": ""0x99a65001"", ""PageVA"": ""0x7ff77176e000"", ""VADBase"": ""0x7ff771760000"", ""VADEnd"": ""0x7ff771782fff"", ""VADName"": ""\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""DumpSize"": ""0x1000"", ""DumpFile"": ""\/tmp\/dumps\/7ff77176e000_31287c55df232436.page"", ""SHA256"": ""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"", ""DumpID"": 15, ""TrapPA"": ""0x70b828a4"", ""GFN"": ""0x70b82"" }
Example output of the commandline (same analysis):
{""Plugin"":""execframe"",""TimeStamp"":""1613056257.402199"",""PID"":5696,""PPID"":3032,""TID"":3748,""UserName"":""SessionID"",""UserId"":1,""ProcessName"":""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""Method"":""execute_faulted_cb"",""EventUID"":""0xaa7d"",""CR3"":""0x99a65001"",""PageVA"":""0x7ff77176e000"",""VADBase"":""0x7ff771760000"",""VADEnd"":""0x7ff771782fff"",""VADName"":""\\Users\\master\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""DumpSize"":4096,""DumpFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.page"",""SHA256"":""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"",""DumpID"":15,""MetaFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.metafile"",""TrapPA"":""0x70b828a4"",""GFN"":""0x70b82""} 
Additional information
You may wonder why this plugin is called hyperbee. This is because of the name of the behaviour detection tool (from Politecnico di Milano) I integrated, which is referring to ""bees"". Since I call this tool for each page dump and thus, very often, it reminded me of a very diligent and busy ""bee"". Thus the name ""hyperbee"".
There are two other flags in hyperbee.h for two ideas which are rather experimental (or need refinement):

DUMP_VAD: Lets you dump the whole VAD node instead of just the page. The problem I saw with it is, that the vad content (as collection of pages) is loaded dynamically on access. On the one hand hashing of vad nodes is more or less not reasonable since whenever a new page is loaded within the vad node the whole node is dumped and leads to another hash. On the other hand by being able to see which parts within the vad are loaded/accessed/executed after another might be interesting for malware analysis. The page mode is quicker, as it just has to hash 4096 bytes each time.
IGNORE_SYSTEM_DLL If we assume that the system's integrity is ensured turning on this flags discards the dump of all pages/vads whose vad name contains either System32 and SysWOW64. This gave me a major speedup since my PC is rather old and I was not interested in calls within the common Windows libraries/executables.

Feel free to share any questions and suggestions!
Klaus
Co-authored-by: Michał Leszczyński michal.leszczynski@cert.pl",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1133,2021-02-11T15:25:16Z,2021-02-19T13:26:14Z,2021-03-10T15:43:48Z,MERGED,True,1830,1,9,https://github.com/Id3aFly,Hyperbee plugin,48,[],https://github.com/tklengyel/drakvuf/pull/1133,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/1133#issuecomment-777659528,"Hello everyone,
this is my first ever pull request so I'm very interested in your feedback! :)
Background
During my masters thesis at FAU Erlangen-Nürnberg (FAU) I created a plugin called ""hyperbee"" that is at least part of the working name. The topic of my masters thesis is to efficiently dump the content of executable pages and analyse it with a (currently still private) tool from Politecnico di Milano (IT). Based on the detected behaviour a classifier could later determine if the page contains malicious code or not.
I was talking with @icedevml about this plugin and he encouraged me to share my code within a pull request. Luckily all of my supervisors approved this idea, so I can finally share my code with you. I am just allowed to share the code regarding the monitoring/dumping of pages and cannot include the behaviour detection code. Based on what I've seen in other plugins (memdump, ipt) I created a similar plugin:
Principle of operation


At first it creates a trap at the entry of MmAccessFault


This 1st trap's callback can get hold of the virtual address MmAccessFault shall assign as new page to. Additionally the cb adds another trap when returning from MmAccessFault and continuing with the actual code.


This 2nd trap's callback intercepts right after returning from MmAccessFault and can obtain the page frame number which was assigned to the virtual address. So we know the relation of virtual page ~ physical (guest) frame number. Furthermore this adds a new trap, whenever code is executed (instructions are fetched) from this frame.
[Now we don't care about writes or reads which for example may include code unpacking, decrypting, etc. We just wait when code is executed to dump the content of the whole page.]


When this third trap (instruction fetch from a monitored page) occurs, things like hash calculation (prevents duplicates -> speedup) and dumps are induced.
[At this point (it is marked within the code) I also analyse the regarding memory for specific behaviour. Additionally a classifier could then set a malware flag if the page contains malicious behaviour or not.]
Depending on a ""malware"" flag (predetemined by MALWARE_DEFAULT or other custom set flags in hyperbee.h: LOG_ALWAYS, DUMP_ALWAYS) the subsequent behaviour is determined:

the current data gathered through the analysis can be printed to the shell
the memory dump can be stored permanently (together with a metadata file).

Additionally the exec trap is deleted and swapped for a write trap.
[Now we don't care about execs or reads as long as the page content remains unchanged since we already dumped that. We just wait when code is modified.]


When this new write trap gets active it just deletes itself and installs a new exec trap. The callback of this exec trap is what is described in step 4.
[Thus, we are able to permanently swap traps to dump the page on an instruction fetch, whenever it has been modified since the last execution].


How to use
Hyperbee uses two command line options:
--hyperbee-dump-dir : required, defines the path to store the dumps within a ""dumps"" folder
--hyperbee-filter-executable : optional, discards all pages which vad node does not belong to a binary whose absolute path does not contain this name. Therefore, you can filter for paths or filenames, etc.
sudo ./src/drakvuf -r /root/win10.json -d win10 -a hyperbee --hyperbee-dump-dir /tmp/ --hyperbee-filter-executable RandomExample
Output
Example output of the metafile:
{ ""TimeStamp"": ""1613056257.402199"", ""PID"": 5696, ""PPID"": 3032, ""TID"": 3748, ""UserID"": 1, ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""EventUID"": 43645, ""CR3"": ""0x99a65001"", ""PageVA"": ""0x7ff77176e000"", ""VADBase"": ""0x7ff771760000"", ""VADEnd"": ""0x7ff771782fff"", ""VADName"": ""\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""DumpSize"": ""0x1000"", ""DumpFile"": ""\/tmp\/dumps\/7ff77176e000_31287c55df232436.page"", ""SHA256"": ""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"", ""DumpID"": 15, ""TrapPA"": ""0x70b828a4"", ""GFN"": ""0x70b82"" }
Example output of the commandline (same analysis):
{""Plugin"":""execframe"",""TimeStamp"":""1613056257.402199"",""PID"":5696,""PPID"":3032,""TID"":3748,""UserName"":""SessionID"",""UserId"":1,""ProcessName"":""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""Method"":""execute_faulted_cb"",""EventUID"":""0xaa7d"",""CR3"":""0x99a65001"",""PageVA"":""0x7ff77176e000"",""VADBase"":""0x7ff771760000"",""VADEnd"":""0x7ff771782fff"",""VADName"":""\\Users\\master\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""DumpSize"":4096,""DumpFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.page"",""SHA256"":""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"",""DumpID"":15,""MetaFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.metafile"",""TrapPA"":""0x70b828a4"",""GFN"":""0x70b82""} 
Additional information
You may wonder why this plugin is called hyperbee. This is because of the name of the behaviour detection tool (from Politecnico di Milano) I integrated, which is referring to ""bees"". Since I call this tool for each page dump and thus, very often, it reminded me of a very diligent and busy ""bee"". Thus the name ""hyperbee"".
There are two other flags in hyperbee.h for two ideas which are rather experimental (or need refinement):

DUMP_VAD: Lets you dump the whole VAD node instead of just the page. The problem I saw with it is, that the vad content (as collection of pages) is loaded dynamically on access. On the one hand hashing of vad nodes is more or less not reasonable since whenever a new page is loaded within the vad node the whole node is dumped and leads to another hash. On the other hand by being able to see which parts within the vad are loaded/accessed/executed after another might be interesting for malware analysis. The page mode is quicker, as it just has to hash 4096 bytes each time.
IGNORE_SYSTEM_DLL If we assume that the system's integrity is ensured turning on this flags discards the dump of all pages/vads whose vad name contains either System32 and SysWOW64. This gave me a major speedup since my PC is rather old and I was not interested in calls within the common Windows libraries/executables.

Feel free to share any questions and suggestions!
Klaus
Co-authored-by: Michał Leszczyński michal.leszczynski@cert.pl",@drakvuf-jenkins Test this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1133,2021-02-11T15:25:16Z,2021-02-19T13:26:14Z,2021-03-10T15:43:48Z,MERGED,True,1830,1,9,https://github.com/Id3aFly,Hyperbee plugin,48,[],https://github.com/tklengyel/drakvuf/pull/1133,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1133#issuecomment-777904883,"Hello everyone,
this is my first ever pull request so I'm very interested in your feedback! :)
Background
During my masters thesis at FAU Erlangen-Nürnberg (FAU) I created a plugin called ""hyperbee"" that is at least part of the working name. The topic of my masters thesis is to efficiently dump the content of executable pages and analyse it with a (currently still private) tool from Politecnico di Milano (IT). Based on the detected behaviour a classifier could later determine if the page contains malicious code or not.
I was talking with @icedevml about this plugin and he encouraged me to share my code within a pull request. Luckily all of my supervisors approved this idea, so I can finally share my code with you. I am just allowed to share the code regarding the monitoring/dumping of pages and cannot include the behaviour detection code. Based on what I've seen in other plugins (memdump, ipt) I created a similar plugin:
Principle of operation


At first it creates a trap at the entry of MmAccessFault


This 1st trap's callback can get hold of the virtual address MmAccessFault shall assign as new page to. Additionally the cb adds another trap when returning from MmAccessFault and continuing with the actual code.


This 2nd trap's callback intercepts right after returning from MmAccessFault and can obtain the page frame number which was assigned to the virtual address. So we know the relation of virtual page ~ physical (guest) frame number. Furthermore this adds a new trap, whenever code is executed (instructions are fetched) from this frame.
[Now we don't care about writes or reads which for example may include code unpacking, decrypting, etc. We just wait when code is executed to dump the content of the whole page.]


When this third trap (instruction fetch from a monitored page) occurs, things like hash calculation (prevents duplicates -> speedup) and dumps are induced.
[At this point (it is marked within the code) I also analyse the regarding memory for specific behaviour. Additionally a classifier could then set a malware flag if the page contains malicious behaviour or not.]
Depending on a ""malware"" flag (predetemined by MALWARE_DEFAULT or other custom set flags in hyperbee.h: LOG_ALWAYS, DUMP_ALWAYS) the subsequent behaviour is determined:

the current data gathered through the analysis can be printed to the shell
the memory dump can be stored permanently (together with a metadata file).

Additionally the exec trap is deleted and swapped for a write trap.
[Now we don't care about execs or reads as long as the page content remains unchanged since we already dumped that. We just wait when code is modified.]


When this new write trap gets active it just deletes itself and installs a new exec trap. The callback of this exec trap is what is described in step 4.
[Thus, we are able to permanently swap traps to dump the page on an instruction fetch, whenever it has been modified since the last execution].


How to use
Hyperbee uses two command line options:
--hyperbee-dump-dir : required, defines the path to store the dumps within a ""dumps"" folder
--hyperbee-filter-executable : optional, discards all pages which vad node does not belong to a binary whose absolute path does not contain this name. Therefore, you can filter for paths or filenames, etc.
sudo ./src/drakvuf -r /root/win10.json -d win10 -a hyperbee --hyperbee-dump-dir /tmp/ --hyperbee-filter-executable RandomExample
Output
Example output of the metafile:
{ ""TimeStamp"": ""1613056257.402199"", ""PID"": 5696, ""PPID"": 3032, ""TID"": 3748, ""UserID"": 1, ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""EventUID"": 43645, ""CR3"": ""0x99a65001"", ""PageVA"": ""0x7ff77176e000"", ""VADBase"": ""0x7ff771760000"", ""VADEnd"": ""0x7ff771782fff"", ""VADName"": ""\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""DumpSize"": ""0x1000"", ""DumpFile"": ""\/tmp\/dumps\/7ff77176e000_31287c55df232436.page"", ""SHA256"": ""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"", ""DumpID"": 15, ""TrapPA"": ""0x70b828a4"", ""GFN"": ""0x70b82"" }
Example output of the commandline (same analysis):
{""Plugin"":""execframe"",""TimeStamp"":""1613056257.402199"",""PID"":5696,""PPID"":3032,""TID"":3748,""UserName"":""SessionID"",""UserId"":1,""ProcessName"":""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""Method"":""execute_faulted_cb"",""EventUID"":""0xaa7d"",""CR3"":""0x99a65001"",""PageVA"":""0x7ff77176e000"",""VADBase"":""0x7ff771760000"",""VADEnd"":""0x7ff771782fff"",""VADName"":""\\Users\\master\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""DumpSize"":4096,""DumpFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.page"",""SHA256"":""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"",""DumpID"":15,""MetaFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.metafile"",""TrapPA"":""0x70b828a4"",""GFN"":""0x70b82""} 
Additional information
You may wonder why this plugin is called hyperbee. This is because of the name of the behaviour detection tool (from Politecnico di Milano) I integrated, which is referring to ""bees"". Since I call this tool for each page dump and thus, very often, it reminded me of a very diligent and busy ""bee"". Thus the name ""hyperbee"".
There are two other flags in hyperbee.h for two ideas which are rather experimental (or need refinement):

DUMP_VAD: Lets you dump the whole VAD node instead of just the page. The problem I saw with it is, that the vad content (as collection of pages) is loaded dynamically on access. On the one hand hashing of vad nodes is more or less not reasonable since whenever a new page is loaded within the vad node the whole node is dumped and leads to another hash. On the other hand by being able to see which parts within the vad are loaded/accessed/executed after another might be interesting for malware analysis. The page mode is quicker, as it just has to hash 4096 bytes each time.
IGNORE_SYSTEM_DLL If we assume that the system's integrity is ensured turning on this flags discards the dump of all pages/vads whose vad name contains either System32 and SysWOW64. This gave me a major speedup since my PC is rather old and I was not interested in calls within the common Windows libraries/executables.

Feel free to share any questions and suggestions!
Klaus
Co-authored-by: Michał Leszczyński michal.leszczynski@cert.pl",This is a really cool plugin. Actually reminds me a lot to Patagonix - Hypervisor Support for Identifying Covertly Executing Binaries: https://www.usenix.org/legacy/events/sec08/tech/full_papers/litty/litty_html/index.html. How would you compare the two projects? I assume the main difference is in the secret sauce that's not being open-sourced yet ;),True,{'EYES': ['https://github.com/Id3aFly']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1133,2021-02-11T15:25:16Z,2021-02-19T13:26:14Z,2021-03-10T15:43:48Z,MERGED,True,1830,1,9,https://github.com/Id3aFly,Hyperbee plugin,48,[],https://github.com/tklengyel/drakvuf/pull/1133,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1133#issuecomment-777908396,"Hello everyone,
this is my first ever pull request so I'm very interested in your feedback! :)
Background
During my masters thesis at FAU Erlangen-Nürnberg (FAU) I created a plugin called ""hyperbee"" that is at least part of the working name. The topic of my masters thesis is to efficiently dump the content of executable pages and analyse it with a (currently still private) tool from Politecnico di Milano (IT). Based on the detected behaviour a classifier could later determine if the page contains malicious code or not.
I was talking with @icedevml about this plugin and he encouraged me to share my code within a pull request. Luckily all of my supervisors approved this idea, so I can finally share my code with you. I am just allowed to share the code regarding the monitoring/dumping of pages and cannot include the behaviour detection code. Based on what I've seen in other plugins (memdump, ipt) I created a similar plugin:
Principle of operation


At first it creates a trap at the entry of MmAccessFault


This 1st trap's callback can get hold of the virtual address MmAccessFault shall assign as new page to. Additionally the cb adds another trap when returning from MmAccessFault and continuing with the actual code.


This 2nd trap's callback intercepts right after returning from MmAccessFault and can obtain the page frame number which was assigned to the virtual address. So we know the relation of virtual page ~ physical (guest) frame number. Furthermore this adds a new trap, whenever code is executed (instructions are fetched) from this frame.
[Now we don't care about writes or reads which for example may include code unpacking, decrypting, etc. We just wait when code is executed to dump the content of the whole page.]


When this third trap (instruction fetch from a monitored page) occurs, things like hash calculation (prevents duplicates -> speedup) and dumps are induced.
[At this point (it is marked within the code) I also analyse the regarding memory for specific behaviour. Additionally a classifier could then set a malware flag if the page contains malicious behaviour or not.]
Depending on a ""malware"" flag (predetemined by MALWARE_DEFAULT or other custom set flags in hyperbee.h: LOG_ALWAYS, DUMP_ALWAYS) the subsequent behaviour is determined:

the current data gathered through the analysis can be printed to the shell
the memory dump can be stored permanently (together with a metadata file).

Additionally the exec trap is deleted and swapped for a write trap.
[Now we don't care about execs or reads as long as the page content remains unchanged since we already dumped that. We just wait when code is modified.]


When this new write trap gets active it just deletes itself and installs a new exec trap. The callback of this exec trap is what is described in step 4.
[Thus, we are able to permanently swap traps to dump the page on an instruction fetch, whenever it has been modified since the last execution].


How to use
Hyperbee uses two command line options:
--hyperbee-dump-dir : required, defines the path to store the dumps within a ""dumps"" folder
--hyperbee-filter-executable : optional, discards all pages which vad node does not belong to a binary whose absolute path does not contain this name. Therefore, you can filter for paths or filenames, etc.
sudo ./src/drakvuf -r /root/win10.json -d win10 -a hyperbee --hyperbee-dump-dir /tmp/ --hyperbee-filter-executable RandomExample
Output
Example output of the metafile:
{ ""TimeStamp"": ""1613056257.402199"", ""PID"": 5696, ""PPID"": 3032, ""TID"": 3748, ""UserID"": 1, ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""EventUID"": 43645, ""CR3"": ""0x99a65001"", ""PageVA"": ""0x7ff77176e000"", ""VADBase"": ""0x7ff771760000"", ""VADEnd"": ""0x7ff771782fff"", ""VADName"": ""\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""DumpSize"": ""0x1000"", ""DumpFile"": ""\/tmp\/dumps\/7ff77176e000_31287c55df232436.page"", ""SHA256"": ""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"", ""DumpID"": 15, ""TrapPA"": ""0x70b828a4"", ""GFN"": ""0x70b82"" }
Example output of the commandline (same analysis):
{""Plugin"":""execframe"",""TimeStamp"":""1613056257.402199"",""PID"":5696,""PPID"":3032,""TID"":3748,""UserName"":""SessionID"",""UserId"":1,""ProcessName"":""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""Method"":""execute_faulted_cb"",""EventUID"":""0xaa7d"",""CR3"":""0x99a65001"",""PageVA"":""0x7ff77176e000"",""VADBase"":""0x7ff771760000"",""VADEnd"":""0x7ff771782fff"",""VADName"":""\\Users\\master\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""DumpSize"":4096,""DumpFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.page"",""SHA256"":""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"",""DumpID"":15,""MetaFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.metafile"",""TrapPA"":""0x70b828a4"",""GFN"":""0x70b82""} 
Additional information
You may wonder why this plugin is called hyperbee. This is because of the name of the behaviour detection tool (from Politecnico di Milano) I integrated, which is referring to ""bees"". Since I call this tool for each page dump and thus, very often, it reminded me of a very diligent and busy ""bee"". Thus the name ""hyperbee"".
There are two other flags in hyperbee.h for two ideas which are rather experimental (or need refinement):

DUMP_VAD: Lets you dump the whole VAD node instead of just the page. The problem I saw with it is, that the vad content (as collection of pages) is loaded dynamically on access. On the one hand hashing of vad nodes is more or less not reasonable since whenever a new page is loaded within the vad node the whole node is dumped and leads to another hash. On the other hand by being able to see which parts within the vad are loaded/accessed/executed after another might be interesting for malware analysis. The page mode is quicker, as it just has to hash 4096 bytes each time.
IGNORE_SYSTEM_DLL If we assume that the system's integrity is ensured turning on this flags discards the dump of all pages/vads whose vad name contains either System32 and SysWOW64. This gave me a major speedup since my PC is rather old and I was not interested in calls within the common Windows libraries/executables.

Feel free to share any questions and suggestions!
Klaus
Co-authored-by: Michał Leszczyński michal.leszczynski@cert.pl","It reminds me, there is actually logic left over from Patagonix in Xen in the form of p2m_access_rx2rw, you can ask Xen to automatically convert the page permissions for you if a readable-executable page gets written. You get an event that the write was about to happen, but then you don't have to do anything in terms of changing permissions. The page gets converted to writeable but not executable. Then if you get an execute violation you switch the page back to rx2rw (calculate hash/dump page/etc before you let the vCPU actually execute). This was put in place pretty much for exactly the use-case you do :) In the grand scheme of things its a minor optimization but still nice ;) It's exposed via LibVMI as VMI_MEMACCESS_W2X in vmi_mem_access_t.",True,{'THUMBS_UP': ['https://github.com/icedevml']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1133,2021-02-11T15:25:16Z,2021-02-19T13:26:14Z,2021-03-10T15:43:48Z,MERGED,True,1830,1,9,https://github.com/Id3aFly,Hyperbee plugin,48,[],https://github.com/tklengyel/drakvuf/pull/1133,https://github.com/Id3aFly,6,https://github.com/tklengyel/drakvuf/pull/1133#issuecomment-778134913,"Hello everyone,
this is my first ever pull request so I'm very interested in your feedback! :)
Background
During my masters thesis at FAU Erlangen-Nürnberg (FAU) I created a plugin called ""hyperbee"" that is at least part of the working name. The topic of my masters thesis is to efficiently dump the content of executable pages and analyse it with a (currently still private) tool from Politecnico di Milano (IT). Based on the detected behaviour a classifier could later determine if the page contains malicious code or not.
I was talking with @icedevml about this plugin and he encouraged me to share my code within a pull request. Luckily all of my supervisors approved this idea, so I can finally share my code with you. I am just allowed to share the code regarding the monitoring/dumping of pages and cannot include the behaviour detection code. Based on what I've seen in other plugins (memdump, ipt) I created a similar plugin:
Principle of operation


At first it creates a trap at the entry of MmAccessFault


This 1st trap's callback can get hold of the virtual address MmAccessFault shall assign as new page to. Additionally the cb adds another trap when returning from MmAccessFault and continuing with the actual code.


This 2nd trap's callback intercepts right after returning from MmAccessFault and can obtain the page frame number which was assigned to the virtual address. So we know the relation of virtual page ~ physical (guest) frame number. Furthermore this adds a new trap, whenever code is executed (instructions are fetched) from this frame.
[Now we don't care about writes or reads which for example may include code unpacking, decrypting, etc. We just wait when code is executed to dump the content of the whole page.]


When this third trap (instruction fetch from a monitored page) occurs, things like hash calculation (prevents duplicates -> speedup) and dumps are induced.
[At this point (it is marked within the code) I also analyse the regarding memory for specific behaviour. Additionally a classifier could then set a malware flag if the page contains malicious behaviour or not.]
Depending on a ""malware"" flag (predetemined by MALWARE_DEFAULT or other custom set flags in hyperbee.h: LOG_ALWAYS, DUMP_ALWAYS) the subsequent behaviour is determined:

the current data gathered through the analysis can be printed to the shell
the memory dump can be stored permanently (together with a metadata file).

Additionally the exec trap is deleted and swapped for a write trap.
[Now we don't care about execs or reads as long as the page content remains unchanged since we already dumped that. We just wait when code is modified.]


When this new write trap gets active it just deletes itself and installs a new exec trap. The callback of this exec trap is what is described in step 4.
[Thus, we are able to permanently swap traps to dump the page on an instruction fetch, whenever it has been modified since the last execution].


How to use
Hyperbee uses two command line options:
--hyperbee-dump-dir : required, defines the path to store the dumps within a ""dumps"" folder
--hyperbee-filter-executable : optional, discards all pages which vad node does not belong to a binary whose absolute path does not contain this name. Therefore, you can filter for paths or filenames, etc.
sudo ./src/drakvuf -r /root/win10.json -d win10 -a hyperbee --hyperbee-dump-dir /tmp/ --hyperbee-filter-executable RandomExample
Output
Example output of the metafile:
{ ""TimeStamp"": ""1613056257.402199"", ""PID"": 5696, ""PPID"": 3032, ""TID"": 3748, ""UserID"": 1, ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""EventUID"": 43645, ""CR3"": ""0x99a65001"", ""PageVA"": ""0x7ff77176e000"", ""VADBase"": ""0x7ff771760000"", ""VADEnd"": ""0x7ff771782fff"", ""VADName"": ""\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""DumpSize"": ""0x1000"", ""DumpFile"": ""\/tmp\/dumps\/7ff77176e000_31287c55df232436.page"", ""SHA256"": ""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"", ""DumpID"": 15, ""TrapPA"": ""0x70b828a4"", ""GFN"": ""0x70b82"" }
Example output of the commandline (same analysis):
{""Plugin"":""execframe"",""TimeStamp"":""1613056257.402199"",""PID"":5696,""PPID"":3032,""TID"":3748,""UserName"":""SessionID"",""UserId"":1,""ProcessName"":""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""Method"":""execute_faulted_cb"",""EventUID"":""0xaa7d"",""CR3"":""0x99a65001"",""PageVA"":""0x7ff77176e000"",""VADBase"":""0x7ff771760000"",""VADEnd"":""0x7ff771782fff"",""VADName"":""\\Users\\master\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""DumpSize"":4096,""DumpFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.page"",""SHA256"":""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"",""DumpID"":15,""MetaFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.metafile"",""TrapPA"":""0x70b828a4"",""GFN"":""0x70b82""} 
Additional information
You may wonder why this plugin is called hyperbee. This is because of the name of the behaviour detection tool (from Politecnico di Milano) I integrated, which is referring to ""bees"". Since I call this tool for each page dump and thus, very often, it reminded me of a very diligent and busy ""bee"". Thus the name ""hyperbee"".
There are two other flags in hyperbee.h for two ideas which are rather experimental (or need refinement):

DUMP_VAD: Lets you dump the whole VAD node instead of just the page. The problem I saw with it is, that the vad content (as collection of pages) is loaded dynamically on access. On the one hand hashing of vad nodes is more or less not reasonable since whenever a new page is loaded within the vad node the whole node is dumped and leads to another hash. On the other hand by being able to see which parts within the vad are loaded/accessed/executed after another might be interesting for malware analysis. The page mode is quicker, as it just has to hash 4096 bytes each time.
IGNORE_SYSTEM_DLL If we assume that the system's integrity is ensured turning on this flags discards the dump of all pages/vads whose vad name contains either System32 and SysWOW64. This gave me a major speedup since my PC is rather old and I was not interested in calls within the common Windows libraries/executables.

Feel free to share any questions and suggestions!
Klaus
Co-authored-by: Michał Leszczyński michal.leszczynski@cert.pl","It reminds me, there is actually logic left over from Patagonix in Xen in the form of p2m_access_rx2rw, you can ask Xen to automatically convert the page permissions for you if a readable-executable page gets written. You get an event that the write was about to happen, but then you don't have to do anything in terms of changing permissions. The page gets converted to writeable but not executable. Then if you get an execute violation you switch the page back to rx2rw (calculate hash/dump page/etc before you let the vCPU actually execute). This was put in place pretty much for exactly the use-case you do :) In the grand scheme of things its a minor optimization but still nice ;) It's exposed via LibVMI as VMI_MEMACCESS_W2X in vmi_mem_access_t.

Thanks for your answer, this sounds very interesting! I wanna give this a try. What you mean is, that I could get rid of the trap swapping and just use a single trap? Is this the actual improvement or did I get you wrong?
I guess I need a bit more understanding of how this works. When I set the memaccess.access of a trap to VMI_MEMACCESS_W2X when does the Callback happen? On a write or a execute?
And how I can switch the page back to rx2rw?
-- Update
For testing purposes I just replaced my VMI_MEMACCESS_W and VMI_MEMACCESS_X both with VMI_MEMACCESS_W2X. And neither callback was executed. So I might be doing something wrong. Maybe some of you can help me. :)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1133,2021-02-11T15:25:16Z,2021-02-19T13:26:14Z,2021-03-10T15:43:48Z,MERGED,True,1830,1,9,https://github.com/Id3aFly,Hyperbee plugin,48,[],https://github.com/tklengyel/drakvuf/pull/1133,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/1133#issuecomment-778180888,"Hello everyone,
this is my first ever pull request so I'm very interested in your feedback! :)
Background
During my masters thesis at FAU Erlangen-Nürnberg (FAU) I created a plugin called ""hyperbee"" that is at least part of the working name. The topic of my masters thesis is to efficiently dump the content of executable pages and analyse it with a (currently still private) tool from Politecnico di Milano (IT). Based on the detected behaviour a classifier could later determine if the page contains malicious code or not.
I was talking with @icedevml about this plugin and he encouraged me to share my code within a pull request. Luckily all of my supervisors approved this idea, so I can finally share my code with you. I am just allowed to share the code regarding the monitoring/dumping of pages and cannot include the behaviour detection code. Based on what I've seen in other plugins (memdump, ipt) I created a similar plugin:
Principle of operation


At first it creates a trap at the entry of MmAccessFault


This 1st trap's callback can get hold of the virtual address MmAccessFault shall assign as new page to. Additionally the cb adds another trap when returning from MmAccessFault and continuing with the actual code.


This 2nd trap's callback intercepts right after returning from MmAccessFault and can obtain the page frame number which was assigned to the virtual address. So we know the relation of virtual page ~ physical (guest) frame number. Furthermore this adds a new trap, whenever code is executed (instructions are fetched) from this frame.
[Now we don't care about writes or reads which for example may include code unpacking, decrypting, etc. We just wait when code is executed to dump the content of the whole page.]


When this third trap (instruction fetch from a monitored page) occurs, things like hash calculation (prevents duplicates -> speedup) and dumps are induced.
[At this point (it is marked within the code) I also analyse the regarding memory for specific behaviour. Additionally a classifier could then set a malware flag if the page contains malicious behaviour or not.]
Depending on a ""malware"" flag (predetemined by MALWARE_DEFAULT or other custom set flags in hyperbee.h: LOG_ALWAYS, DUMP_ALWAYS) the subsequent behaviour is determined:

the current data gathered through the analysis can be printed to the shell
the memory dump can be stored permanently (together with a metadata file).

Additionally the exec trap is deleted and swapped for a write trap.
[Now we don't care about execs or reads as long as the page content remains unchanged since we already dumped that. We just wait when code is modified.]


When this new write trap gets active it just deletes itself and installs a new exec trap. The callback of this exec trap is what is described in step 4.
[Thus, we are able to permanently swap traps to dump the page on an instruction fetch, whenever it has been modified since the last execution].


How to use
Hyperbee uses two command line options:
--hyperbee-dump-dir : required, defines the path to store the dumps within a ""dumps"" folder
--hyperbee-filter-executable : optional, discards all pages which vad node does not belong to a binary whose absolute path does not contain this name. Therefore, you can filter for paths or filenames, etc.
sudo ./src/drakvuf -r /root/win10.json -d win10 -a hyperbee --hyperbee-dump-dir /tmp/ --hyperbee-filter-executable RandomExample
Output
Example output of the metafile:
{ ""TimeStamp"": ""1613056257.402199"", ""PID"": 5696, ""PPID"": 3032, ""TID"": 3748, ""UserID"": 1, ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""EventUID"": 43645, ""CR3"": ""0x99a65001"", ""PageVA"": ""0x7ff77176e000"", ""VADBase"": ""0x7ff771760000"", ""VADEnd"": ""0x7ff771782fff"", ""VADName"": ""\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""DumpSize"": ""0x1000"", ""DumpFile"": ""\/tmp\/dumps\/7ff77176e000_31287c55df232436.page"", ""SHA256"": ""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"", ""DumpID"": 15, ""TrapPA"": ""0x70b828a4"", ""GFN"": ""0x70b82"" }
Example output of the commandline (same analysis):
{""Plugin"":""execframe"",""TimeStamp"":""1613056257.402199"",""PID"":5696,""PPID"":3032,""TID"":3748,""UserName"":""SessionID"",""UserId"":1,""ProcessName"":""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""Method"":""execute_faulted_cb"",""EventUID"":""0xaa7d"",""CR3"":""0x99a65001"",""PageVA"":""0x7ff77176e000"",""VADBase"":""0x7ff771760000"",""VADEnd"":""0x7ff771782fff"",""VADName"":""\\Users\\master\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""DumpSize"":4096,""DumpFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.page"",""SHA256"":""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"",""DumpID"":15,""MetaFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.metafile"",""TrapPA"":""0x70b828a4"",""GFN"":""0x70b82""} 
Additional information
You may wonder why this plugin is called hyperbee. This is because of the name of the behaviour detection tool (from Politecnico di Milano) I integrated, which is referring to ""bees"". Since I call this tool for each page dump and thus, very often, it reminded me of a very diligent and busy ""bee"". Thus the name ""hyperbee"".
There are two other flags in hyperbee.h for two ideas which are rather experimental (or need refinement):

DUMP_VAD: Lets you dump the whole VAD node instead of just the page. The problem I saw with it is, that the vad content (as collection of pages) is loaded dynamically on access. On the one hand hashing of vad nodes is more or less not reasonable since whenever a new page is loaded within the vad node the whole node is dumped and leads to another hash. On the other hand by being able to see which parts within the vad are loaded/accessed/executed after another might be interesting for malware analysis. The page mode is quicker, as it just has to hash 4096 bytes each time.
IGNORE_SYSTEM_DLL If we assume that the system's integrity is ensured turning on this flags discards the dump of all pages/vads whose vad name contains either System32 and SysWOW64. This gave me a major speedup since my PC is rather old and I was not interested in calls within the common Windows libraries/executables.

Feel free to share any questions and suggestions!
Klaus
Co-authored-by: Michał Leszczyński michal.leszczynski@cert.pl","Yea, I don't think VMI_MEMACCESS_W2X/p2m_access_rx2rw was ever tested. It probably hasn't been used in over a decade so wouldn't be surprised to hear there is bitrot. This day and age we accomplish similar optimizations using event response flags anyway, so I wouldn't bother debugging this further. It would be conceptually easier to just set a flag saying ""set access permission on this page to <RX/RW>"" when the event returns. I'll add it to my TODO and just remove the bitrotted rx2rw bits in Xen when I get to it.",True,{'THUMBS_UP': ['https://github.com/Id3aFly']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1133,2021-02-11T15:25:16Z,2021-02-19T13:26:14Z,2021-03-10T15:43:48Z,MERGED,True,1830,1,9,https://github.com/Id3aFly,Hyperbee plugin,48,[],https://github.com/tklengyel/drakvuf/pull/1133,https://github.com/Id3aFly,8,https://github.com/tklengyel/drakvuf/pull/1133#issuecomment-778197198,"Hello everyone,
this is my first ever pull request so I'm very interested in your feedback! :)
Background
During my masters thesis at FAU Erlangen-Nürnberg (FAU) I created a plugin called ""hyperbee"" that is at least part of the working name. The topic of my masters thesis is to efficiently dump the content of executable pages and analyse it with a (currently still private) tool from Politecnico di Milano (IT). Based on the detected behaviour a classifier could later determine if the page contains malicious code or not.
I was talking with @icedevml about this plugin and he encouraged me to share my code within a pull request. Luckily all of my supervisors approved this idea, so I can finally share my code with you. I am just allowed to share the code regarding the monitoring/dumping of pages and cannot include the behaviour detection code. Based on what I've seen in other plugins (memdump, ipt) I created a similar plugin:
Principle of operation


At first it creates a trap at the entry of MmAccessFault


This 1st trap's callback can get hold of the virtual address MmAccessFault shall assign as new page to. Additionally the cb adds another trap when returning from MmAccessFault and continuing with the actual code.


This 2nd trap's callback intercepts right after returning from MmAccessFault and can obtain the page frame number which was assigned to the virtual address. So we know the relation of virtual page ~ physical (guest) frame number. Furthermore this adds a new trap, whenever code is executed (instructions are fetched) from this frame.
[Now we don't care about writes or reads which for example may include code unpacking, decrypting, etc. We just wait when code is executed to dump the content of the whole page.]


When this third trap (instruction fetch from a monitored page) occurs, things like hash calculation (prevents duplicates -> speedup) and dumps are induced.
[At this point (it is marked within the code) I also analyse the regarding memory for specific behaviour. Additionally a classifier could then set a malware flag if the page contains malicious behaviour or not.]
Depending on a ""malware"" flag (predetemined by MALWARE_DEFAULT or other custom set flags in hyperbee.h: LOG_ALWAYS, DUMP_ALWAYS) the subsequent behaviour is determined:

the current data gathered through the analysis can be printed to the shell
the memory dump can be stored permanently (together with a metadata file).

Additionally the exec trap is deleted and swapped for a write trap.
[Now we don't care about execs or reads as long as the page content remains unchanged since we already dumped that. We just wait when code is modified.]


When this new write trap gets active it just deletes itself and installs a new exec trap. The callback of this exec trap is what is described in step 4.
[Thus, we are able to permanently swap traps to dump the page on an instruction fetch, whenever it has been modified since the last execution].


How to use
Hyperbee uses two command line options:
--hyperbee-dump-dir : required, defines the path to store the dumps within a ""dumps"" folder
--hyperbee-filter-executable : optional, discards all pages which vad node does not belong to a binary whose absolute path does not contain this name. Therefore, you can filter for paths or filenames, etc.
sudo ./src/drakvuf -r /root/win10.json -d win10 -a hyperbee --hyperbee-dump-dir /tmp/ --hyperbee-filter-executable RandomExample
Output
Example output of the metafile:
{ ""TimeStamp"": ""1613056257.402199"", ""PID"": 5696, ""PPID"": 3032, ""TID"": 3748, ""UserID"": 1, ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""EventUID"": 43645, ""CR3"": ""0x99a65001"", ""PageVA"": ""0x7ff77176e000"", ""VADBase"": ""0x7ff771760000"", ""VADEnd"": ""0x7ff771782fff"", ""VADName"": ""\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""DumpSize"": ""0x1000"", ""DumpFile"": ""\/tmp\/dumps\/7ff77176e000_31287c55df232436.page"", ""SHA256"": ""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"", ""DumpID"": 15, ""TrapPA"": ""0x70b828a4"", ""GFN"": ""0x70b82"" }
Example output of the commandline (same analysis):
{""Plugin"":""execframe"",""TimeStamp"":""1613056257.402199"",""PID"":5696,""PPID"":3032,""TID"":3748,""UserName"":""SessionID"",""UserId"":1,""ProcessName"":""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""Method"":""execute_faulted_cb"",""EventUID"":""0xaa7d"",""CR3"":""0x99a65001"",""PageVA"":""0x7ff77176e000"",""VADBase"":""0x7ff771760000"",""VADEnd"":""0x7ff771782fff"",""VADName"":""\\Users\\master\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""DumpSize"":4096,""DumpFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.page"",""SHA256"":""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"",""DumpID"":15,""MetaFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.metafile"",""TrapPA"":""0x70b828a4"",""GFN"":""0x70b82""} 
Additional information
You may wonder why this plugin is called hyperbee. This is because of the name of the behaviour detection tool (from Politecnico di Milano) I integrated, which is referring to ""bees"". Since I call this tool for each page dump and thus, very often, it reminded me of a very diligent and busy ""bee"". Thus the name ""hyperbee"".
There are two other flags in hyperbee.h for two ideas which are rather experimental (or need refinement):

DUMP_VAD: Lets you dump the whole VAD node instead of just the page. The problem I saw with it is, that the vad content (as collection of pages) is loaded dynamically on access. On the one hand hashing of vad nodes is more or less not reasonable since whenever a new page is loaded within the vad node the whole node is dumped and leads to another hash. On the other hand by being able to see which parts within the vad are loaded/accessed/executed after another might be interesting for malware analysis. The page mode is quicker, as it just has to hash 4096 bytes each time.
IGNORE_SYSTEM_DLL If we assume that the system's integrity is ensured turning on this flags discards the dump of all pages/vads whose vad name contains either System32 and SysWOW64. This gave me a major speedup since my PC is rather old and I was not interested in calls within the common Windows libraries/executables.

Feel free to share any questions and suggestions!
Klaus
Co-authored-by: Michał Leszczyński michal.leszczynski@cert.pl","Yea, I don't think VMI_MEMACCESS_W2X/p2m_access_rx2rw was ever tested. It probably hasn't been used in over a decade so wouldn't be surprised to hear there is bitrot. This day and age we accomplish similar optimizations using event response flags anyway, so I wouldn't bother debugging this further. It would be conceptually easier to just set a flag saying ""set access permission on this page to <RX/RW>"" when the event returns. I'll add it to my TODO and just remove the bitrotted rx2rw bits in Xen when I get to it.

Thanks for the response. Ok, then I guess a main refactor of this pull request is set to halt until this feature is bugfixed (no hurry). I am really interested in possible speed improvements! And I guess this would make the code a lot less complex.
If you or anybody has further ideas, just tell me.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1133,2021-02-11T15:25:16Z,2021-02-19T13:26:14Z,2021-03-10T15:43:48Z,MERGED,True,1830,1,9,https://github.com/Id3aFly,Hyperbee plugin,48,[],https://github.com/tklengyel/drakvuf/pull/1133,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/1133#issuecomment-778200174,"Hello everyone,
this is my first ever pull request so I'm very interested in your feedback! :)
Background
During my masters thesis at FAU Erlangen-Nürnberg (FAU) I created a plugin called ""hyperbee"" that is at least part of the working name. The topic of my masters thesis is to efficiently dump the content of executable pages and analyse it with a (currently still private) tool from Politecnico di Milano (IT). Based on the detected behaviour a classifier could later determine if the page contains malicious code or not.
I was talking with @icedevml about this plugin and he encouraged me to share my code within a pull request. Luckily all of my supervisors approved this idea, so I can finally share my code with you. I am just allowed to share the code regarding the monitoring/dumping of pages and cannot include the behaviour detection code. Based on what I've seen in other plugins (memdump, ipt) I created a similar plugin:
Principle of operation


At first it creates a trap at the entry of MmAccessFault


This 1st trap's callback can get hold of the virtual address MmAccessFault shall assign as new page to. Additionally the cb adds another trap when returning from MmAccessFault and continuing with the actual code.


This 2nd trap's callback intercepts right after returning from MmAccessFault and can obtain the page frame number which was assigned to the virtual address. So we know the relation of virtual page ~ physical (guest) frame number. Furthermore this adds a new trap, whenever code is executed (instructions are fetched) from this frame.
[Now we don't care about writes or reads which for example may include code unpacking, decrypting, etc. We just wait when code is executed to dump the content of the whole page.]


When this third trap (instruction fetch from a monitored page) occurs, things like hash calculation (prevents duplicates -> speedup) and dumps are induced.
[At this point (it is marked within the code) I also analyse the regarding memory for specific behaviour. Additionally a classifier could then set a malware flag if the page contains malicious behaviour or not.]
Depending on a ""malware"" flag (predetemined by MALWARE_DEFAULT or other custom set flags in hyperbee.h: LOG_ALWAYS, DUMP_ALWAYS) the subsequent behaviour is determined:

the current data gathered through the analysis can be printed to the shell
the memory dump can be stored permanently (together with a metadata file).

Additionally the exec trap is deleted and swapped for a write trap.
[Now we don't care about execs or reads as long as the page content remains unchanged since we already dumped that. We just wait when code is modified.]


When this new write trap gets active it just deletes itself and installs a new exec trap. The callback of this exec trap is what is described in step 4.
[Thus, we are able to permanently swap traps to dump the page on an instruction fetch, whenever it has been modified since the last execution].


How to use
Hyperbee uses two command line options:
--hyperbee-dump-dir : required, defines the path to store the dumps within a ""dumps"" folder
--hyperbee-filter-executable : optional, discards all pages which vad node does not belong to a binary whose absolute path does not contain this name. Therefore, you can filter for paths or filenames, etc.
sudo ./src/drakvuf -r /root/win10.json -d win10 -a hyperbee --hyperbee-dump-dir /tmp/ --hyperbee-filter-executable RandomExample
Output
Example output of the metafile:
{ ""TimeStamp"": ""1613056257.402199"", ""PID"": 5696, ""PPID"": 3032, ""TID"": 3748, ""UserID"": 1, ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""EventUID"": 43645, ""CR3"": ""0x99a65001"", ""PageVA"": ""0x7ff77176e000"", ""VADBase"": ""0x7ff771760000"", ""VADEnd"": ""0x7ff771782fff"", ""VADName"": ""\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""DumpSize"": ""0x1000"", ""DumpFile"": ""\/tmp\/dumps\/7ff77176e000_31287c55df232436.page"", ""SHA256"": ""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"", ""DumpID"": 15, ""TrapPA"": ""0x70b828a4"", ""GFN"": ""0x70b82"" }
Example output of the commandline (same analysis):
{""Plugin"":""execframe"",""TimeStamp"":""1613056257.402199"",""PID"":5696,""PPID"":3032,""TID"":3748,""UserName"":""SessionID"",""UserId"":1,""ProcessName"":""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""Method"":""execute_faulted_cb"",""EventUID"":""0xaa7d"",""CR3"":""0x99a65001"",""PageVA"":""0x7ff77176e000"",""VADBase"":""0x7ff771760000"",""VADEnd"":""0x7ff771782fff"",""VADName"":""\\Users\\master\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""DumpSize"":4096,""DumpFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.page"",""SHA256"":""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"",""DumpID"":15,""MetaFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.metafile"",""TrapPA"":""0x70b828a4"",""GFN"":""0x70b82""} 
Additional information
You may wonder why this plugin is called hyperbee. This is because of the name of the behaviour detection tool (from Politecnico di Milano) I integrated, which is referring to ""bees"". Since I call this tool for each page dump and thus, very often, it reminded me of a very diligent and busy ""bee"". Thus the name ""hyperbee"".
There are two other flags in hyperbee.h for two ideas which are rather experimental (or need refinement):

DUMP_VAD: Lets you dump the whole VAD node instead of just the page. The problem I saw with it is, that the vad content (as collection of pages) is loaded dynamically on access. On the one hand hashing of vad nodes is more or less not reasonable since whenever a new page is loaded within the vad node the whole node is dumped and leads to another hash. On the other hand by being able to see which parts within the vad are loaded/accessed/executed after another might be interesting for malware analysis. The page mode is quicker, as it just has to hash 4096 bytes each time.
IGNORE_SYSTEM_DLL If we assume that the system's integrity is ensured turning on this flags discards the dump of all pages/vads whose vad name contains either System32 and SysWOW64. This gave me a major speedup since my PC is rather old and I was not interested in calls within the common Windows libraries/executables.

Feel free to share any questions and suggestions!
Klaus
Co-authored-by: Michał Leszczyński michal.leszczynski@cert.pl",The improvements are not a showstopper for this plugin as what I mentioned is considered only an optimization.,True,{'THUMBS_UP': ['https://github.com/Id3aFly']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1133,2021-02-11T15:25:16Z,2021-02-19T13:26:14Z,2021-03-10T15:43:48Z,MERGED,True,1830,1,9,https://github.com/Id3aFly,Hyperbee plugin,48,[],https://github.com/tklengyel/drakvuf/pull/1133,https://github.com/Id3aFly,10,https://github.com/tklengyel/drakvuf/pull/1133#issuecomment-778203204,"Hello everyone,
this is my first ever pull request so I'm very interested in your feedback! :)
Background
During my masters thesis at FAU Erlangen-Nürnberg (FAU) I created a plugin called ""hyperbee"" that is at least part of the working name. The topic of my masters thesis is to efficiently dump the content of executable pages and analyse it with a (currently still private) tool from Politecnico di Milano (IT). Based on the detected behaviour a classifier could later determine if the page contains malicious code or not.
I was talking with @icedevml about this plugin and he encouraged me to share my code within a pull request. Luckily all of my supervisors approved this idea, so I can finally share my code with you. I am just allowed to share the code regarding the monitoring/dumping of pages and cannot include the behaviour detection code. Based on what I've seen in other plugins (memdump, ipt) I created a similar plugin:
Principle of operation


At first it creates a trap at the entry of MmAccessFault


This 1st trap's callback can get hold of the virtual address MmAccessFault shall assign as new page to. Additionally the cb adds another trap when returning from MmAccessFault and continuing with the actual code.


This 2nd trap's callback intercepts right after returning from MmAccessFault and can obtain the page frame number which was assigned to the virtual address. So we know the relation of virtual page ~ physical (guest) frame number. Furthermore this adds a new trap, whenever code is executed (instructions are fetched) from this frame.
[Now we don't care about writes or reads which for example may include code unpacking, decrypting, etc. We just wait when code is executed to dump the content of the whole page.]


When this third trap (instruction fetch from a monitored page) occurs, things like hash calculation (prevents duplicates -> speedup) and dumps are induced.
[At this point (it is marked within the code) I also analyse the regarding memory for specific behaviour. Additionally a classifier could then set a malware flag if the page contains malicious behaviour or not.]
Depending on a ""malware"" flag (predetemined by MALWARE_DEFAULT or other custom set flags in hyperbee.h: LOG_ALWAYS, DUMP_ALWAYS) the subsequent behaviour is determined:

the current data gathered through the analysis can be printed to the shell
the memory dump can be stored permanently (together with a metadata file).

Additionally the exec trap is deleted and swapped for a write trap.
[Now we don't care about execs or reads as long as the page content remains unchanged since we already dumped that. We just wait when code is modified.]


When this new write trap gets active it just deletes itself and installs a new exec trap. The callback of this exec trap is what is described in step 4.
[Thus, we are able to permanently swap traps to dump the page on an instruction fetch, whenever it has been modified since the last execution].


How to use
Hyperbee uses two command line options:
--hyperbee-dump-dir : required, defines the path to store the dumps within a ""dumps"" folder
--hyperbee-filter-executable : optional, discards all pages which vad node does not belong to a binary whose absolute path does not contain this name. Therefore, you can filter for paths or filenames, etc.
sudo ./src/drakvuf -r /root/win10.json -d win10 -a hyperbee --hyperbee-dump-dir /tmp/ --hyperbee-filter-executable RandomExample
Output
Example output of the metafile:
{ ""TimeStamp"": ""1613056257.402199"", ""PID"": 5696, ""PPID"": 3032, ""TID"": 3748, ""UserID"": 1, ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""EventUID"": 43645, ""CR3"": ""0x99a65001"", ""PageVA"": ""0x7ff77176e000"", ""VADBase"": ""0x7ff771760000"", ""VADEnd"": ""0x7ff771782fff"", ""VADName"": ""\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""DumpSize"": ""0x1000"", ""DumpFile"": ""\/tmp\/dumps\/7ff77176e000_31287c55df232436.page"", ""SHA256"": ""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"", ""DumpID"": 15, ""TrapPA"": ""0x70b828a4"", ""GFN"": ""0x70b82"" }
Example output of the commandline (same analysis):
{""Plugin"":""execframe"",""TimeStamp"":""1613056257.402199"",""PID"":5696,""PPID"":3032,""TID"":3748,""UserName"":""SessionID"",""UserId"":1,""ProcessName"":""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""Method"":""execute_faulted_cb"",""EventUID"":""0xaa7d"",""CR3"":""0x99a65001"",""PageVA"":""0x7ff77176e000"",""VADBase"":""0x7ff771760000"",""VADEnd"":""0x7ff771782fff"",""VADName"":""\\Users\\master\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""DumpSize"":4096,""DumpFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.page"",""SHA256"":""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"",""DumpID"":15,""MetaFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.metafile"",""TrapPA"":""0x70b828a4"",""GFN"":""0x70b82""} 
Additional information
You may wonder why this plugin is called hyperbee. This is because of the name of the behaviour detection tool (from Politecnico di Milano) I integrated, which is referring to ""bees"". Since I call this tool for each page dump and thus, very often, it reminded me of a very diligent and busy ""bee"". Thus the name ""hyperbee"".
There are two other flags in hyperbee.h for two ideas which are rather experimental (or need refinement):

DUMP_VAD: Lets you dump the whole VAD node instead of just the page. The problem I saw with it is, that the vad content (as collection of pages) is loaded dynamically on access. On the one hand hashing of vad nodes is more or less not reasonable since whenever a new page is loaded within the vad node the whole node is dumped and leads to another hash. On the other hand by being able to see which parts within the vad are loaded/accessed/executed after another might be interesting for malware analysis. The page mode is quicker, as it just has to hash 4096 bytes each time.
IGNORE_SYSTEM_DLL If we assume that the system's integrity is ensured turning on this flags discards the dump of all pages/vads whose vad name contains either System32 and SysWOW64. This gave me a major speedup since my PC is rather old and I was not interested in calls within the common Windows libraries/executables.

Feel free to share any questions and suggestions!
Klaus
Co-authored-by: Michał Leszczyński michal.leszczynski@cert.pl","The improvements are not a showstopper for this plugin as what I mentioned is considered only an optimization.

So it would be possible to add it already to drakvuf if it is examined by you or other experienced contributors?
I have a question: some of the tests are failing. One has to do with std::filesystem. I didn't change any of the build commands at my side and it compiles perfectly. And std::filesystem is included in C++17. Do you have an idea, why this fails?
Right now I'm fixing the astyle problem.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1133,2021-02-11T15:25:16Z,2021-02-19T13:26:14Z,2021-03-10T15:43:48Z,MERGED,True,1830,1,9,https://github.com/Id3aFly,Hyperbee plugin,48,[],https://github.com/tklengyel/drakvuf/pull/1133,https://github.com/icedevml,11,https://github.com/tklengyel/drakvuf/pull/1133#issuecomment-778291779,"Hello everyone,
this is my first ever pull request so I'm very interested in your feedback! :)
Background
During my masters thesis at FAU Erlangen-Nürnberg (FAU) I created a plugin called ""hyperbee"" that is at least part of the working name. The topic of my masters thesis is to efficiently dump the content of executable pages and analyse it with a (currently still private) tool from Politecnico di Milano (IT). Based on the detected behaviour a classifier could later determine if the page contains malicious code or not.
I was talking with @icedevml about this plugin and he encouraged me to share my code within a pull request. Luckily all of my supervisors approved this idea, so I can finally share my code with you. I am just allowed to share the code regarding the monitoring/dumping of pages and cannot include the behaviour detection code. Based on what I've seen in other plugins (memdump, ipt) I created a similar plugin:
Principle of operation


At first it creates a trap at the entry of MmAccessFault


This 1st trap's callback can get hold of the virtual address MmAccessFault shall assign as new page to. Additionally the cb adds another trap when returning from MmAccessFault and continuing with the actual code.


This 2nd trap's callback intercepts right after returning from MmAccessFault and can obtain the page frame number which was assigned to the virtual address. So we know the relation of virtual page ~ physical (guest) frame number. Furthermore this adds a new trap, whenever code is executed (instructions are fetched) from this frame.
[Now we don't care about writes or reads which for example may include code unpacking, decrypting, etc. We just wait when code is executed to dump the content of the whole page.]


When this third trap (instruction fetch from a monitored page) occurs, things like hash calculation (prevents duplicates -> speedup) and dumps are induced.
[At this point (it is marked within the code) I also analyse the regarding memory for specific behaviour. Additionally a classifier could then set a malware flag if the page contains malicious behaviour or not.]
Depending on a ""malware"" flag (predetemined by MALWARE_DEFAULT or other custom set flags in hyperbee.h: LOG_ALWAYS, DUMP_ALWAYS) the subsequent behaviour is determined:

the current data gathered through the analysis can be printed to the shell
the memory dump can be stored permanently (together with a metadata file).

Additionally the exec trap is deleted and swapped for a write trap.
[Now we don't care about execs or reads as long as the page content remains unchanged since we already dumped that. We just wait when code is modified.]


When this new write trap gets active it just deletes itself and installs a new exec trap. The callback of this exec trap is what is described in step 4.
[Thus, we are able to permanently swap traps to dump the page on an instruction fetch, whenever it has been modified since the last execution].


How to use
Hyperbee uses two command line options:
--hyperbee-dump-dir : required, defines the path to store the dumps within a ""dumps"" folder
--hyperbee-filter-executable : optional, discards all pages which vad node does not belong to a binary whose absolute path does not contain this name. Therefore, you can filter for paths or filenames, etc.
sudo ./src/drakvuf -r /root/win10.json -d win10 -a hyperbee --hyperbee-dump-dir /tmp/ --hyperbee-filter-executable RandomExample
Output
Example output of the metafile:
{ ""TimeStamp"": ""1613056257.402199"", ""PID"": 5696, ""PPID"": 3032, ""TID"": 3748, ""UserID"": 1, ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""EventUID"": 43645, ""CR3"": ""0x99a65001"", ""PageVA"": ""0x7ff77176e000"", ""VADBase"": ""0x7ff771760000"", ""VADEnd"": ""0x7ff771782fff"", ""VADName"": ""\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""DumpSize"": ""0x1000"", ""DumpFile"": ""\/tmp\/dumps\/7ff77176e000_31287c55df232436.page"", ""SHA256"": ""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"", ""DumpID"": 15, ""TrapPA"": ""0x70b828a4"", ""GFN"": ""0x70b82"" }
Example output of the commandline (same analysis):
{""Plugin"":""execframe"",""TimeStamp"":""1613056257.402199"",""PID"":5696,""PPID"":3032,""TID"":3748,""UserName"":""SessionID"",""UserId"":1,""ProcessName"":""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""Method"":""execute_faulted_cb"",""EventUID"":""0xaa7d"",""CR3"":""0x99a65001"",""PageVA"":""0x7ff77176e000"",""VADBase"":""0x7ff771760000"",""VADEnd"":""0x7ff771782fff"",""VADName"":""\\Users\\master\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""DumpSize"":4096,""DumpFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.page"",""SHA256"":""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"",""DumpID"":15,""MetaFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.metafile"",""TrapPA"":""0x70b828a4"",""GFN"":""0x70b82""} 
Additional information
You may wonder why this plugin is called hyperbee. This is because of the name of the behaviour detection tool (from Politecnico di Milano) I integrated, which is referring to ""bees"". Since I call this tool for each page dump and thus, very often, it reminded me of a very diligent and busy ""bee"". Thus the name ""hyperbee"".
There are two other flags in hyperbee.h for two ideas which are rather experimental (or need refinement):

DUMP_VAD: Lets you dump the whole VAD node instead of just the page. The problem I saw with it is, that the vad content (as collection of pages) is loaded dynamically on access. On the one hand hashing of vad nodes is more or less not reasonable since whenever a new page is loaded within the vad node the whole node is dumped and leads to another hash. On the other hand by being able to see which parts within the vad are loaded/accessed/executed after another might be interesting for malware analysis. The page mode is quicker, as it just has to hash 4096 bytes each time.
IGNORE_SYSTEM_DLL If we assume that the system's integrity is ensured turning on this flags discards the dump of all pages/vads whose vad name contains either System32 and SysWOW64. This gave me a major speedup since my PC is rather old and I was not interested in calls within the common Windows libraries/executables.

Feel free to share any questions and suggestions!
Klaus
Co-authored-by: Michał Leszczyński michal.leszczynski@cert.pl","So it would be possible to add it already to drakvuf if it is examined by you or other experienced contributors?

I think just ignore this rx2rw thing for now, and once Tamas finds some time to make appropriate fixes in Xen, it will be later possible to add some optimizations to your plugin, but that's 100% optional and perhaps even outside of this pull request.

I have a question: some of the tests are failing. One has to do with std::filesystem. I didn't change any of the build commands at my side and it compiles perfectly. And std::filesystem is included in C++17. Do you have an idea, why this fails?

Seems like you've included <filesystem> but the build process on Ubuntu Bionic doesn't recognize this:
In file included from plugins.cpp:133:
./hyperbee/hyperbee.h:110:10: fatal error: 'filesystem' file not found
#include <filesystem>
         ^~~~~~~~~~~~
1 error generated.

see: https://github.com/tklengyel/drakvuf/pull/1133/checks?check_run_id=1882584550#step:6:890",True,"{'THUMBS_UP': ['https://github.com/tklengyel', 'https://github.com/Id3aFly']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1133,2021-02-11T15:25:16Z,2021-02-19T13:26:14Z,2021-03-10T15:43:48Z,MERGED,True,1830,1,9,https://github.com/Id3aFly,Hyperbee plugin,48,[],https://github.com/tklengyel/drakvuf/pull/1133,https://github.com/icedevml,12,https://github.com/tklengyel/drakvuf/pull/1133#issuecomment-778297689,"Hello everyone,
this is my first ever pull request so I'm very interested in your feedback! :)
Background
During my masters thesis at FAU Erlangen-Nürnberg (FAU) I created a plugin called ""hyperbee"" that is at least part of the working name. The topic of my masters thesis is to efficiently dump the content of executable pages and analyse it with a (currently still private) tool from Politecnico di Milano (IT). Based on the detected behaviour a classifier could later determine if the page contains malicious code or not.
I was talking with @icedevml about this plugin and he encouraged me to share my code within a pull request. Luckily all of my supervisors approved this idea, so I can finally share my code with you. I am just allowed to share the code regarding the monitoring/dumping of pages and cannot include the behaviour detection code. Based on what I've seen in other plugins (memdump, ipt) I created a similar plugin:
Principle of operation


At first it creates a trap at the entry of MmAccessFault


This 1st trap's callback can get hold of the virtual address MmAccessFault shall assign as new page to. Additionally the cb adds another trap when returning from MmAccessFault and continuing with the actual code.


This 2nd trap's callback intercepts right after returning from MmAccessFault and can obtain the page frame number which was assigned to the virtual address. So we know the relation of virtual page ~ physical (guest) frame number. Furthermore this adds a new trap, whenever code is executed (instructions are fetched) from this frame.
[Now we don't care about writes or reads which for example may include code unpacking, decrypting, etc. We just wait when code is executed to dump the content of the whole page.]


When this third trap (instruction fetch from a monitored page) occurs, things like hash calculation (prevents duplicates -> speedup) and dumps are induced.
[At this point (it is marked within the code) I also analyse the regarding memory for specific behaviour. Additionally a classifier could then set a malware flag if the page contains malicious behaviour or not.]
Depending on a ""malware"" flag (predetemined by MALWARE_DEFAULT or other custom set flags in hyperbee.h: LOG_ALWAYS, DUMP_ALWAYS) the subsequent behaviour is determined:

the current data gathered through the analysis can be printed to the shell
the memory dump can be stored permanently (together with a metadata file).

Additionally the exec trap is deleted and swapped for a write trap.
[Now we don't care about execs or reads as long as the page content remains unchanged since we already dumped that. We just wait when code is modified.]


When this new write trap gets active it just deletes itself and installs a new exec trap. The callback of this exec trap is what is described in step 4.
[Thus, we are able to permanently swap traps to dump the page on an instruction fetch, whenever it has been modified since the last execution].


How to use
Hyperbee uses two command line options:
--hyperbee-dump-dir : required, defines the path to store the dumps within a ""dumps"" folder
--hyperbee-filter-executable : optional, discards all pages which vad node does not belong to a binary whose absolute path does not contain this name. Therefore, you can filter for paths or filenames, etc.
sudo ./src/drakvuf -r /root/win10.json -d win10 -a hyperbee --hyperbee-dump-dir /tmp/ --hyperbee-filter-executable RandomExample
Output
Example output of the metafile:
{ ""TimeStamp"": ""1613056257.402199"", ""PID"": 5696, ""PPID"": 3032, ""TID"": 3748, ""UserID"": 1, ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""EventUID"": 43645, ""CR3"": ""0x99a65001"", ""PageVA"": ""0x7ff77176e000"", ""VADBase"": ""0x7ff771760000"", ""VADEnd"": ""0x7ff771782fff"", ""VADName"": ""\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""DumpSize"": ""0x1000"", ""DumpFile"": ""\/tmp\/dumps\/7ff77176e000_31287c55df232436.page"", ""SHA256"": ""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"", ""DumpID"": 15, ""TrapPA"": ""0x70b828a4"", ""GFN"": ""0x70b82"" }
Example output of the commandline (same analysis):
{""Plugin"":""execframe"",""TimeStamp"":""1613056257.402199"",""PID"":5696,""PPID"":3032,""TID"":3748,""UserName"":""SessionID"",""UserId"":1,""ProcessName"":""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""Method"":""execute_faulted_cb"",""EventUID"":""0xaa7d"",""CR3"":""0x99a65001"",""PageVA"":""0x7ff77176e000"",""VADBase"":""0x7ff771760000"",""VADEnd"":""0x7ff771782fff"",""VADName"":""\\Users\\master\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""DumpSize"":4096,""DumpFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.page"",""SHA256"":""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"",""DumpID"":15,""MetaFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.metafile"",""TrapPA"":""0x70b828a4"",""GFN"":""0x70b82""} 
Additional information
You may wonder why this plugin is called hyperbee. This is because of the name of the behaviour detection tool (from Politecnico di Milano) I integrated, which is referring to ""bees"". Since I call this tool for each page dump and thus, very often, it reminded me of a very diligent and busy ""bee"". Thus the name ""hyperbee"".
There are two other flags in hyperbee.h for two ideas which are rather experimental (or need refinement):

DUMP_VAD: Lets you dump the whole VAD node instead of just the page. The problem I saw with it is, that the vad content (as collection of pages) is loaded dynamically on access. On the one hand hashing of vad nodes is more or less not reasonable since whenever a new page is loaded within the vad node the whole node is dumped and leads to another hash. On the other hand by being able to see which parts within the vad are loaded/accessed/executed after another might be interesting for malware analysis. The page mode is quicker, as it just has to hash 4096 bytes each time.
IGNORE_SYSTEM_DLL If we assume that the system's integrity is ensured turning on this flags discards the dump of all pages/vads whose vad name contains either System32 and SysWOW64. This gave me a major speedup since my PC is rather old and I was not interested in calls within the common Windows libraries/executables.

Feel free to share any questions and suggestions!
Klaus
Co-authored-by: Michał Leszczyński michal.leszczynski@cert.pl","The CI requires your code to compile succesfully on Debian Buster, Ubuntu Bionic and Ubuntu Focal all at the same time.
I think you need to use something like that in order to make it possible: https://stackoverflow.com/a/53365539",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1133,2021-02-11T15:25:16Z,2021-02-19T13:26:14Z,2021-03-10T15:43:48Z,MERGED,True,1830,1,9,https://github.com/Id3aFly,Hyperbee plugin,48,[],https://github.com/tklengyel/drakvuf/pull/1133,https://github.com/icedevml,13,https://github.com/tklengyel/drakvuf/pull/1133#issuecomment-778392747,"Hello everyone,
this is my first ever pull request so I'm very interested in your feedback! :)
Background
During my masters thesis at FAU Erlangen-Nürnberg (FAU) I created a plugin called ""hyperbee"" that is at least part of the working name. The topic of my masters thesis is to efficiently dump the content of executable pages and analyse it with a (currently still private) tool from Politecnico di Milano (IT). Based on the detected behaviour a classifier could later determine if the page contains malicious code or not.
I was talking with @icedevml about this plugin and he encouraged me to share my code within a pull request. Luckily all of my supervisors approved this idea, so I can finally share my code with you. I am just allowed to share the code regarding the monitoring/dumping of pages and cannot include the behaviour detection code. Based on what I've seen in other plugins (memdump, ipt) I created a similar plugin:
Principle of operation


At first it creates a trap at the entry of MmAccessFault


This 1st trap's callback can get hold of the virtual address MmAccessFault shall assign as new page to. Additionally the cb adds another trap when returning from MmAccessFault and continuing with the actual code.


This 2nd trap's callback intercepts right after returning from MmAccessFault and can obtain the page frame number which was assigned to the virtual address. So we know the relation of virtual page ~ physical (guest) frame number. Furthermore this adds a new trap, whenever code is executed (instructions are fetched) from this frame.
[Now we don't care about writes or reads which for example may include code unpacking, decrypting, etc. We just wait when code is executed to dump the content of the whole page.]


When this third trap (instruction fetch from a monitored page) occurs, things like hash calculation (prevents duplicates -> speedup) and dumps are induced.
[At this point (it is marked within the code) I also analyse the regarding memory for specific behaviour. Additionally a classifier could then set a malware flag if the page contains malicious behaviour or not.]
Depending on a ""malware"" flag (predetemined by MALWARE_DEFAULT or other custom set flags in hyperbee.h: LOG_ALWAYS, DUMP_ALWAYS) the subsequent behaviour is determined:

the current data gathered through the analysis can be printed to the shell
the memory dump can be stored permanently (together with a metadata file).

Additionally the exec trap is deleted and swapped for a write trap.
[Now we don't care about execs or reads as long as the page content remains unchanged since we already dumped that. We just wait when code is modified.]


When this new write trap gets active it just deletes itself and installs a new exec trap. The callback of this exec trap is what is described in step 4.
[Thus, we are able to permanently swap traps to dump the page on an instruction fetch, whenever it has been modified since the last execution].


How to use
Hyperbee uses two command line options:
--hyperbee-dump-dir : required, defines the path to store the dumps within a ""dumps"" folder
--hyperbee-filter-executable : optional, discards all pages which vad node does not belong to a binary whose absolute path does not contain this name. Therefore, you can filter for paths or filenames, etc.
sudo ./src/drakvuf -r /root/win10.json -d win10 -a hyperbee --hyperbee-dump-dir /tmp/ --hyperbee-filter-executable RandomExample
Output
Example output of the metafile:
{ ""TimeStamp"": ""1613056257.402199"", ""PID"": 5696, ""PPID"": 3032, ""TID"": 3748, ""UserID"": 1, ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""EventUID"": 43645, ""CR3"": ""0x99a65001"", ""PageVA"": ""0x7ff77176e000"", ""VADBase"": ""0x7ff771760000"", ""VADEnd"": ""0x7ff771782fff"", ""VADName"": ""\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""DumpSize"": ""0x1000"", ""DumpFile"": ""\/tmp\/dumps\/7ff77176e000_31287c55df232436.page"", ""SHA256"": ""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"", ""DumpID"": 15, ""TrapPA"": ""0x70b828a4"", ""GFN"": ""0x70b82"" }
Example output of the commandline (same analysis):
{""Plugin"":""execframe"",""TimeStamp"":""1613056257.402199"",""PID"":5696,""PPID"":3032,""TID"":3748,""UserName"":""SessionID"",""UserId"":1,""ProcessName"":""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""Method"":""execute_faulted_cb"",""EventUID"":""0xaa7d"",""CR3"":""0x99a65001"",""PageVA"":""0x7ff77176e000"",""VADBase"":""0x7ff771760000"",""VADEnd"":""0x7ff771782fff"",""VADName"":""\\Users\\master\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""DumpSize"":4096,""DumpFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.page"",""SHA256"":""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"",""DumpID"":15,""MetaFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.metafile"",""TrapPA"":""0x70b828a4"",""GFN"":""0x70b82""} 
Additional information
You may wonder why this plugin is called hyperbee. This is because of the name of the behaviour detection tool (from Politecnico di Milano) I integrated, which is referring to ""bees"". Since I call this tool for each page dump and thus, very often, it reminded me of a very diligent and busy ""bee"". Thus the name ""hyperbee"".
There are two other flags in hyperbee.h for two ideas which are rather experimental (or need refinement):

DUMP_VAD: Lets you dump the whole VAD node instead of just the page. The problem I saw with it is, that the vad content (as collection of pages) is loaded dynamically on access. On the one hand hashing of vad nodes is more or less not reasonable since whenever a new page is loaded within the vad node the whole node is dumped and leads to another hash. On the other hand by being able to see which parts within the vad are loaded/accessed/executed after another might be interesting for malware analysis. The page mode is quicker, as it just has to hash 4096 bytes each time.
IGNORE_SYSTEM_DLL If we assume that the system's integrity is ensured turning on this flags discards the dump of all pages/vads whose vad name contains either System32 and SysWOW64. This gave me a major speedup since my PC is rather old and I was not interested in calls within the common Windows libraries/executables.

Feel free to share any questions and suggestions!
Klaus
Co-authored-by: Michał Leszczyński michal.leszczynski@cert.pl","@Id3aFly I would like to play a little bit with this PR. Maybe I would be able to solve the filesystem error in the meantime (I have Buster test machines so anyway I need to apply some fixes to be able to test it). So if you haven't started fixing yet, please hold on for a day or two :)",True,{'THUMBS_UP': ['https://github.com/Id3aFly']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1133,2021-02-11T15:25:16Z,2021-02-19T13:26:14Z,2021-03-10T15:43:48Z,MERGED,True,1830,1,9,https://github.com/Id3aFly,Hyperbee plugin,48,[],https://github.com/tklengyel/drakvuf/pull/1133,https://github.com/icedevml,14,https://github.com/tklengyel/drakvuf/pull/1133#issuecomment-778436158,"Hello everyone,
this is my first ever pull request so I'm very interested in your feedback! :)
Background
During my masters thesis at FAU Erlangen-Nürnberg (FAU) I created a plugin called ""hyperbee"" that is at least part of the working name. The topic of my masters thesis is to efficiently dump the content of executable pages and analyse it with a (currently still private) tool from Politecnico di Milano (IT). Based on the detected behaviour a classifier could later determine if the page contains malicious code or not.
I was talking with @icedevml about this plugin and he encouraged me to share my code within a pull request. Luckily all of my supervisors approved this idea, so I can finally share my code with you. I am just allowed to share the code regarding the monitoring/dumping of pages and cannot include the behaviour detection code. Based on what I've seen in other plugins (memdump, ipt) I created a similar plugin:
Principle of operation


At first it creates a trap at the entry of MmAccessFault


This 1st trap's callback can get hold of the virtual address MmAccessFault shall assign as new page to. Additionally the cb adds another trap when returning from MmAccessFault and continuing with the actual code.


This 2nd trap's callback intercepts right after returning from MmAccessFault and can obtain the page frame number which was assigned to the virtual address. So we know the relation of virtual page ~ physical (guest) frame number. Furthermore this adds a new trap, whenever code is executed (instructions are fetched) from this frame.
[Now we don't care about writes or reads which for example may include code unpacking, decrypting, etc. We just wait when code is executed to dump the content of the whole page.]


When this third trap (instruction fetch from a monitored page) occurs, things like hash calculation (prevents duplicates -> speedup) and dumps are induced.
[At this point (it is marked within the code) I also analyse the regarding memory for specific behaviour. Additionally a classifier could then set a malware flag if the page contains malicious behaviour or not.]
Depending on a ""malware"" flag (predetemined by MALWARE_DEFAULT or other custom set flags in hyperbee.h: LOG_ALWAYS, DUMP_ALWAYS) the subsequent behaviour is determined:

the current data gathered through the analysis can be printed to the shell
the memory dump can be stored permanently (together with a metadata file).

Additionally the exec trap is deleted and swapped for a write trap.
[Now we don't care about execs or reads as long as the page content remains unchanged since we already dumped that. We just wait when code is modified.]


When this new write trap gets active it just deletes itself and installs a new exec trap. The callback of this exec trap is what is described in step 4.
[Thus, we are able to permanently swap traps to dump the page on an instruction fetch, whenever it has been modified since the last execution].


How to use
Hyperbee uses two command line options:
--hyperbee-dump-dir : required, defines the path to store the dumps within a ""dumps"" folder
--hyperbee-filter-executable : optional, discards all pages which vad node does not belong to a binary whose absolute path does not contain this name. Therefore, you can filter for paths or filenames, etc.
sudo ./src/drakvuf -r /root/win10.json -d win10 -a hyperbee --hyperbee-dump-dir /tmp/ --hyperbee-filter-executable RandomExample
Output
Example output of the metafile:
{ ""TimeStamp"": ""1613056257.402199"", ""PID"": 5696, ""PPID"": 3032, ""TID"": 3748, ""UserID"": 1, ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""EventUID"": 43645, ""CR3"": ""0x99a65001"", ""PageVA"": ""0x7ff77176e000"", ""VADBase"": ""0x7ff771760000"", ""VADEnd"": ""0x7ff771782fff"", ""VADName"": ""\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""DumpSize"": ""0x1000"", ""DumpFile"": ""\/tmp\/dumps\/7ff77176e000_31287c55df232436.page"", ""SHA256"": ""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"", ""DumpID"": 15, ""TrapPA"": ""0x70b828a4"", ""GFN"": ""0x70b82"" }
Example output of the commandline (same analysis):
{""Plugin"":""execframe"",""TimeStamp"":""1613056257.402199"",""PID"":5696,""PPID"":3032,""TID"":3748,""UserName"":""SessionID"",""UserId"":1,""ProcessName"":""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""Method"":""execute_faulted_cb"",""EventUID"":""0xaa7d"",""CR3"":""0x99a65001"",""PageVA"":""0x7ff77176e000"",""VADBase"":""0x7ff771760000"",""VADEnd"":""0x7ff771782fff"",""VADName"":""\\Users\\master\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""DumpSize"":4096,""DumpFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.page"",""SHA256"":""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"",""DumpID"":15,""MetaFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.metafile"",""TrapPA"":""0x70b828a4"",""GFN"":""0x70b82""} 
Additional information
You may wonder why this plugin is called hyperbee. This is because of the name of the behaviour detection tool (from Politecnico di Milano) I integrated, which is referring to ""bees"". Since I call this tool for each page dump and thus, very often, it reminded me of a very diligent and busy ""bee"". Thus the name ""hyperbee"".
There are two other flags in hyperbee.h for two ideas which are rather experimental (or need refinement):

DUMP_VAD: Lets you dump the whole VAD node instead of just the page. The problem I saw with it is, that the vad content (as collection of pages) is loaded dynamically on access. On the one hand hashing of vad nodes is more or less not reasonable since whenever a new page is loaded within the vad node the whole node is dumped and leads to another hash. On the other hand by being able to see which parts within the vad are loaded/accessed/executed after another might be interesting for malware analysis. The page mode is quicker, as it just has to hash 4096 bytes each time.
IGNORE_SYSTEM_DLL If we assume that the system's integrity is ensured turning on this flags discards the dump of all pages/vads whose vad name contains either System32 and SysWOW64. This gave me a major speedup since my PC is rather old and I was not interested in calls within the common Windows libraries/executables.

Feel free to share any questions and suggestions!
Klaus
Co-authored-by: Michał Leszczyński michal.leszczynski@cert.pl","@Id3aFly I've sent you a PR to your PR, please take a look at Id3aFly#1 . You can merge this and your PR should fix automatically (I hope).",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1133,2021-02-11T15:25:16Z,2021-02-19T13:26:14Z,2021-03-10T15:43:48Z,MERGED,True,1830,1,9,https://github.com/Id3aFly,Hyperbee plugin,48,[],https://github.com/tklengyel/drakvuf/pull/1133,https://github.com/Id3aFly,15,https://github.com/tklengyel/drakvuf/pull/1133#issuecomment-778443346,"Hello everyone,
this is my first ever pull request so I'm very interested in your feedback! :)
Background
During my masters thesis at FAU Erlangen-Nürnberg (FAU) I created a plugin called ""hyperbee"" that is at least part of the working name. The topic of my masters thesis is to efficiently dump the content of executable pages and analyse it with a (currently still private) tool from Politecnico di Milano (IT). Based on the detected behaviour a classifier could later determine if the page contains malicious code or not.
I was talking with @icedevml about this plugin and he encouraged me to share my code within a pull request. Luckily all of my supervisors approved this idea, so I can finally share my code with you. I am just allowed to share the code regarding the monitoring/dumping of pages and cannot include the behaviour detection code. Based on what I've seen in other plugins (memdump, ipt) I created a similar plugin:
Principle of operation


At first it creates a trap at the entry of MmAccessFault


This 1st trap's callback can get hold of the virtual address MmAccessFault shall assign as new page to. Additionally the cb adds another trap when returning from MmAccessFault and continuing with the actual code.


This 2nd trap's callback intercepts right after returning from MmAccessFault and can obtain the page frame number which was assigned to the virtual address. So we know the relation of virtual page ~ physical (guest) frame number. Furthermore this adds a new trap, whenever code is executed (instructions are fetched) from this frame.
[Now we don't care about writes or reads which for example may include code unpacking, decrypting, etc. We just wait when code is executed to dump the content of the whole page.]


When this third trap (instruction fetch from a monitored page) occurs, things like hash calculation (prevents duplicates -> speedup) and dumps are induced.
[At this point (it is marked within the code) I also analyse the regarding memory for specific behaviour. Additionally a classifier could then set a malware flag if the page contains malicious behaviour or not.]
Depending on a ""malware"" flag (predetemined by MALWARE_DEFAULT or other custom set flags in hyperbee.h: LOG_ALWAYS, DUMP_ALWAYS) the subsequent behaviour is determined:

the current data gathered through the analysis can be printed to the shell
the memory dump can be stored permanently (together with a metadata file).

Additionally the exec trap is deleted and swapped for a write trap.
[Now we don't care about execs or reads as long as the page content remains unchanged since we already dumped that. We just wait when code is modified.]


When this new write trap gets active it just deletes itself and installs a new exec trap. The callback of this exec trap is what is described in step 4.
[Thus, we are able to permanently swap traps to dump the page on an instruction fetch, whenever it has been modified since the last execution].


How to use
Hyperbee uses two command line options:
--hyperbee-dump-dir : required, defines the path to store the dumps within a ""dumps"" folder
--hyperbee-filter-executable : optional, discards all pages which vad node does not belong to a binary whose absolute path does not contain this name. Therefore, you can filter for paths or filenames, etc.
sudo ./src/drakvuf -r /root/win10.json -d win10 -a hyperbee --hyperbee-dump-dir /tmp/ --hyperbee-filter-executable RandomExample
Output
Example output of the metafile:
{ ""TimeStamp"": ""1613056257.402199"", ""PID"": 5696, ""PPID"": 3032, ""TID"": 3748, ""UserID"": 1, ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""EventUID"": 43645, ""CR3"": ""0x99a65001"", ""PageVA"": ""0x7ff77176e000"", ""VADBase"": ""0x7ff771760000"", ""VADEnd"": ""0x7ff771782fff"", ""VADName"": ""\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""DumpSize"": ""0x1000"", ""DumpFile"": ""\/tmp\/dumps\/7ff77176e000_31287c55df232436.page"", ""SHA256"": ""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"", ""DumpID"": 15, ""TrapPA"": ""0x70b828a4"", ""GFN"": ""0x70b82"" }
Example output of the commandline (same analysis):
{""Plugin"":""execframe"",""TimeStamp"":""1613056257.402199"",""PID"":5696,""PPID"":3032,""TID"":3748,""UserName"":""SessionID"",""UserId"":1,""ProcessName"":""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""Method"":""execute_faulted_cb"",""EventUID"":""0xaa7d"",""CR3"":""0x99a65001"",""PageVA"":""0x7ff77176e000"",""VADBase"":""0x7ff771760000"",""VADEnd"":""0x7ff771782fff"",""VADName"":""\\Users\\master\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""DumpSize"":4096,""DumpFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.page"",""SHA256"":""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"",""DumpID"":15,""MetaFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.metafile"",""TrapPA"":""0x70b828a4"",""GFN"":""0x70b82""} 
Additional information
You may wonder why this plugin is called hyperbee. This is because of the name of the behaviour detection tool (from Politecnico di Milano) I integrated, which is referring to ""bees"". Since I call this tool for each page dump and thus, very often, it reminded me of a very diligent and busy ""bee"". Thus the name ""hyperbee"".
There are two other flags in hyperbee.h for two ideas which are rather experimental (or need refinement):

DUMP_VAD: Lets you dump the whole VAD node instead of just the page. The problem I saw with it is, that the vad content (as collection of pages) is loaded dynamically on access. On the one hand hashing of vad nodes is more or less not reasonable since whenever a new page is loaded within the vad node the whole node is dumped and leads to another hash. On the other hand by being able to see which parts within the vad are loaded/accessed/executed after another might be interesting for malware analysis. The page mode is quicker, as it just has to hash 4096 bytes each time.
IGNORE_SYSTEM_DLL If we assume that the system's integrity is ensured turning on this flags discards the dump of all pages/vads whose vad name contains either System32 and SysWOW64. This gave me a major speedup since my PC is rather old and I was not interested in calls within the common Windows libraries/executables.

Feel free to share any questions and suggestions!
Klaus
Co-authored-by: Michał Leszczyński michal.leszczynski@cert.pl","So it would be possible to add it already to drakvuf if it is examined by you or other experienced contributors?

I think just ignore this rx2rw thing for now, and once Tamas finds some time to make appropriate fixes in Xen, it will be later possible to add some optimizations to your plugin, but that's 100% optional and perhaps even outside of this pull request.

I have a question: some of the tests are failing. One has to do with std::filesystem. I didn't change any of the build commands at my side and it compiles perfectly. And std::filesystem is included in C++17. Do you have an idea, why this fails?

Seems like you've included <filesystem> but the build process on Ubuntu Bionic doesn't recognize this:
In file included from plugins.cpp:133:
./hyperbee/hyperbee.h:110:10: fatal error: 'filesystem' file not found
#include <filesystem>
         ^~~~~~~~~~~~
1 error generated.

see: https://github.com/tklengyel/drakvuf/pull/1133/checks?check_run_id=1882584550#step:6:890

Thanks for the hint. I did not know that there are such differences between the Ubuntu versions, when compiling cpp.
I looked it up, if someone is reading this in the future this is some background information about the relation with libstdc++.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1133,2021-02-11T15:25:16Z,2021-02-19T13:26:14Z,2021-03-10T15:43:48Z,MERGED,True,1830,1,9,https://github.com/Id3aFly,Hyperbee plugin,48,[],https://github.com/tklengyel/drakvuf/pull/1133,https://github.com/Id3aFly,16,https://github.com/tklengyel/drakvuf/pull/1133#issuecomment-778444330,"Hello everyone,
this is my first ever pull request so I'm very interested in your feedback! :)
Background
During my masters thesis at FAU Erlangen-Nürnberg (FAU) I created a plugin called ""hyperbee"" that is at least part of the working name. The topic of my masters thesis is to efficiently dump the content of executable pages and analyse it with a (currently still private) tool from Politecnico di Milano (IT). Based on the detected behaviour a classifier could later determine if the page contains malicious code or not.
I was talking with @icedevml about this plugin and he encouraged me to share my code within a pull request. Luckily all of my supervisors approved this idea, so I can finally share my code with you. I am just allowed to share the code regarding the monitoring/dumping of pages and cannot include the behaviour detection code. Based on what I've seen in other plugins (memdump, ipt) I created a similar plugin:
Principle of operation


At first it creates a trap at the entry of MmAccessFault


This 1st trap's callback can get hold of the virtual address MmAccessFault shall assign as new page to. Additionally the cb adds another trap when returning from MmAccessFault and continuing with the actual code.


This 2nd trap's callback intercepts right after returning from MmAccessFault and can obtain the page frame number which was assigned to the virtual address. So we know the relation of virtual page ~ physical (guest) frame number. Furthermore this adds a new trap, whenever code is executed (instructions are fetched) from this frame.
[Now we don't care about writes or reads which for example may include code unpacking, decrypting, etc. We just wait when code is executed to dump the content of the whole page.]


When this third trap (instruction fetch from a monitored page) occurs, things like hash calculation (prevents duplicates -> speedup) and dumps are induced.
[At this point (it is marked within the code) I also analyse the regarding memory for specific behaviour. Additionally a classifier could then set a malware flag if the page contains malicious behaviour or not.]
Depending on a ""malware"" flag (predetemined by MALWARE_DEFAULT or other custom set flags in hyperbee.h: LOG_ALWAYS, DUMP_ALWAYS) the subsequent behaviour is determined:

the current data gathered through the analysis can be printed to the shell
the memory dump can be stored permanently (together with a metadata file).

Additionally the exec trap is deleted and swapped for a write trap.
[Now we don't care about execs or reads as long as the page content remains unchanged since we already dumped that. We just wait when code is modified.]


When this new write trap gets active it just deletes itself and installs a new exec trap. The callback of this exec trap is what is described in step 4.
[Thus, we are able to permanently swap traps to dump the page on an instruction fetch, whenever it has been modified since the last execution].


How to use
Hyperbee uses two command line options:
--hyperbee-dump-dir : required, defines the path to store the dumps within a ""dumps"" folder
--hyperbee-filter-executable : optional, discards all pages which vad node does not belong to a binary whose absolute path does not contain this name. Therefore, you can filter for paths or filenames, etc.
sudo ./src/drakvuf -r /root/win10.json -d win10 -a hyperbee --hyperbee-dump-dir /tmp/ --hyperbee-filter-executable RandomExample
Output
Example output of the metafile:
{ ""TimeStamp"": ""1613056257.402199"", ""PID"": 5696, ""PPID"": 3032, ""TID"": 3748, ""UserID"": 1, ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""EventUID"": 43645, ""CR3"": ""0x99a65001"", ""PageVA"": ""0x7ff77176e000"", ""VADBase"": ""0x7ff771760000"", ""VADEnd"": ""0x7ff771782fff"", ""VADName"": ""\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""DumpSize"": ""0x1000"", ""DumpFile"": ""\/tmp\/dumps\/7ff77176e000_31287c55df232436.page"", ""SHA256"": ""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"", ""DumpID"": 15, ""TrapPA"": ""0x70b828a4"", ""GFN"": ""0x70b82"" }
Example output of the commandline (same analysis):
{""Plugin"":""execframe"",""TimeStamp"":""1613056257.402199"",""PID"":5696,""PPID"":3032,""TID"":3748,""UserName"":""SessionID"",""UserId"":1,""ProcessName"":""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""Method"":""execute_faulted_cb"",""EventUID"":""0xaa7d"",""CR3"":""0x99a65001"",""PageVA"":""0x7ff77176e000"",""VADBase"":""0x7ff771760000"",""VADEnd"":""0x7ff771782fff"",""VADName"":""\\Users\\master\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""DumpSize"":4096,""DumpFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.page"",""SHA256"":""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"",""DumpID"":15,""MetaFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.metafile"",""TrapPA"":""0x70b828a4"",""GFN"":""0x70b82""} 
Additional information
You may wonder why this plugin is called hyperbee. This is because of the name of the behaviour detection tool (from Politecnico di Milano) I integrated, which is referring to ""bees"". Since I call this tool for each page dump and thus, very often, it reminded me of a very diligent and busy ""bee"". Thus the name ""hyperbee"".
There are two other flags in hyperbee.h for two ideas which are rather experimental (or need refinement):

DUMP_VAD: Lets you dump the whole VAD node instead of just the page. The problem I saw with it is, that the vad content (as collection of pages) is loaded dynamically on access. On the one hand hashing of vad nodes is more or less not reasonable since whenever a new page is loaded within the vad node the whole node is dumped and leads to another hash. On the other hand by being able to see which parts within the vad are loaded/accessed/executed after another might be interesting for malware analysis. The page mode is quicker, as it just has to hash 4096 bytes each time.
IGNORE_SYSTEM_DLL If we assume that the system's integrity is ensured turning on this flags discards the dump of all pages/vads whose vad name contains either System32 and SysWOW64. This gave me a major speedup since my PC is rather old and I was not interested in calls within the common Windows libraries/executables.

Feel free to share any questions and suggestions!
Klaus
Co-authored-by: Michał Leszczyński michal.leszczynski@cert.pl","@Id3aFly I've sent you a PR to your PR, please take a look at Id3aFly#1 . You can merge this and your PR should fix automatically (I hope).

Sounds awesome. Thank you! So I am going to find out how to merge a pull request and reply later on.",True,{'THUMBS_UP': ['https://github.com/icedevml']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1133,2021-02-11T15:25:16Z,2021-02-19T13:26:14Z,2021-03-10T15:43:48Z,MERGED,True,1830,1,9,https://github.com/Id3aFly,Hyperbee plugin,48,[],https://github.com/tklengyel/drakvuf/pull/1133,https://github.com/icedevml,17,https://github.com/tklengyel/drakvuf/pull/1133#issuecomment-778514747,"Hello everyone,
this is my first ever pull request so I'm very interested in your feedback! :)
Background
During my masters thesis at FAU Erlangen-Nürnberg (FAU) I created a plugin called ""hyperbee"" that is at least part of the working name. The topic of my masters thesis is to efficiently dump the content of executable pages and analyse it with a (currently still private) tool from Politecnico di Milano (IT). Based on the detected behaviour a classifier could later determine if the page contains malicious code or not.
I was talking with @icedevml about this plugin and he encouraged me to share my code within a pull request. Luckily all of my supervisors approved this idea, so I can finally share my code with you. I am just allowed to share the code regarding the monitoring/dumping of pages and cannot include the behaviour detection code. Based on what I've seen in other plugins (memdump, ipt) I created a similar plugin:
Principle of operation


At first it creates a trap at the entry of MmAccessFault


This 1st trap's callback can get hold of the virtual address MmAccessFault shall assign as new page to. Additionally the cb adds another trap when returning from MmAccessFault and continuing with the actual code.


This 2nd trap's callback intercepts right after returning from MmAccessFault and can obtain the page frame number which was assigned to the virtual address. So we know the relation of virtual page ~ physical (guest) frame number. Furthermore this adds a new trap, whenever code is executed (instructions are fetched) from this frame.
[Now we don't care about writes or reads which for example may include code unpacking, decrypting, etc. We just wait when code is executed to dump the content of the whole page.]


When this third trap (instruction fetch from a monitored page) occurs, things like hash calculation (prevents duplicates -> speedup) and dumps are induced.
[At this point (it is marked within the code) I also analyse the regarding memory for specific behaviour. Additionally a classifier could then set a malware flag if the page contains malicious behaviour or not.]
Depending on a ""malware"" flag (predetemined by MALWARE_DEFAULT or other custom set flags in hyperbee.h: LOG_ALWAYS, DUMP_ALWAYS) the subsequent behaviour is determined:

the current data gathered through the analysis can be printed to the shell
the memory dump can be stored permanently (together with a metadata file).

Additionally the exec trap is deleted and swapped for a write trap.
[Now we don't care about execs or reads as long as the page content remains unchanged since we already dumped that. We just wait when code is modified.]


When this new write trap gets active it just deletes itself and installs a new exec trap. The callback of this exec trap is what is described in step 4.
[Thus, we are able to permanently swap traps to dump the page on an instruction fetch, whenever it has been modified since the last execution].


How to use
Hyperbee uses two command line options:
--hyperbee-dump-dir : required, defines the path to store the dumps within a ""dumps"" folder
--hyperbee-filter-executable : optional, discards all pages which vad node does not belong to a binary whose absolute path does not contain this name. Therefore, you can filter for paths or filenames, etc.
sudo ./src/drakvuf -r /root/win10.json -d win10 -a hyperbee --hyperbee-dump-dir /tmp/ --hyperbee-filter-executable RandomExample
Output
Example output of the metafile:
{ ""TimeStamp"": ""1613056257.402199"", ""PID"": 5696, ""PPID"": 3032, ""TID"": 3748, ""UserID"": 1, ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""EventUID"": 43645, ""CR3"": ""0x99a65001"", ""PageVA"": ""0x7ff77176e000"", ""VADBase"": ""0x7ff771760000"", ""VADEnd"": ""0x7ff771782fff"", ""VADName"": ""\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""DumpSize"": ""0x1000"", ""DumpFile"": ""\/tmp\/dumps\/7ff77176e000_31287c55df232436.page"", ""SHA256"": ""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"", ""DumpID"": 15, ""TrapPA"": ""0x70b828a4"", ""GFN"": ""0x70b82"" }
Example output of the commandline (same analysis):
{""Plugin"":""execframe"",""TimeStamp"":""1613056257.402199"",""PID"":5696,""PPID"":3032,""TID"":3748,""UserName"":""SessionID"",""UserId"":1,""ProcessName"":""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""Method"":""execute_faulted_cb"",""EventUID"":""0xaa7d"",""CR3"":""0x99a65001"",""PageVA"":""0x7ff77176e000"",""VADBase"":""0x7ff771760000"",""VADEnd"":""0x7ff771782fff"",""VADName"":""\\Users\\master\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""DumpSize"":4096,""DumpFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.page"",""SHA256"":""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"",""DumpID"":15,""MetaFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.metafile"",""TrapPA"":""0x70b828a4"",""GFN"":""0x70b82""} 
Additional information
You may wonder why this plugin is called hyperbee. This is because of the name of the behaviour detection tool (from Politecnico di Milano) I integrated, which is referring to ""bees"". Since I call this tool for each page dump and thus, very often, it reminded me of a very diligent and busy ""bee"". Thus the name ""hyperbee"".
There are two other flags in hyperbee.h for two ideas which are rather experimental (or need refinement):

DUMP_VAD: Lets you dump the whole VAD node instead of just the page. The problem I saw with it is, that the vad content (as collection of pages) is loaded dynamically on access. On the one hand hashing of vad nodes is more or less not reasonable since whenever a new page is loaded within the vad node the whole node is dumped and leads to another hash. On the other hand by being able to see which parts within the vad are loaded/accessed/executed after another might be interesting for malware analysis. The page mode is quicker, as it just has to hash 4096 bytes each time.
IGNORE_SYSTEM_DLL If we assume that the system's integrity is ensured turning on this flags discards the dump of all pages/vads whose vad name contains either System32 and SysWOW64. This gave me a major speedup since my PC is rather old and I was not interested in calls within the common Windows libraries/executables.

Feel free to share any questions and suggestions!
Klaus
Co-authored-by: Michał Leszczyński michal.leszczynski@cert.pl","@Id3aFly I think at Id3aFly#1 you have a green button to merge. Then your branch will be automatically updated. To have these changes in your working copy on your computer, you just need to git pull to download these changes.",True,{'THUMBS_UP': ['https://github.com/Id3aFly']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1133,2021-02-11T15:25:16Z,2021-02-19T13:26:14Z,2021-03-10T15:43:48Z,MERGED,True,1830,1,9,https://github.com/Id3aFly,Hyperbee plugin,48,[],https://github.com/tklengyel/drakvuf/pull/1133,https://github.com/icedevml,18,https://github.com/tklengyel/drakvuf/pull/1133#issuecomment-778613250,"Hello everyone,
this is my first ever pull request so I'm very interested in your feedback! :)
Background
During my masters thesis at FAU Erlangen-Nürnberg (FAU) I created a plugin called ""hyperbee"" that is at least part of the working name. The topic of my masters thesis is to efficiently dump the content of executable pages and analyse it with a (currently still private) tool from Politecnico di Milano (IT). Based on the detected behaviour a classifier could later determine if the page contains malicious code or not.
I was talking with @icedevml about this plugin and he encouraged me to share my code within a pull request. Luckily all of my supervisors approved this idea, so I can finally share my code with you. I am just allowed to share the code regarding the monitoring/dumping of pages and cannot include the behaviour detection code. Based on what I've seen in other plugins (memdump, ipt) I created a similar plugin:
Principle of operation


At first it creates a trap at the entry of MmAccessFault


This 1st trap's callback can get hold of the virtual address MmAccessFault shall assign as new page to. Additionally the cb adds another trap when returning from MmAccessFault and continuing with the actual code.


This 2nd trap's callback intercepts right after returning from MmAccessFault and can obtain the page frame number which was assigned to the virtual address. So we know the relation of virtual page ~ physical (guest) frame number. Furthermore this adds a new trap, whenever code is executed (instructions are fetched) from this frame.
[Now we don't care about writes or reads which for example may include code unpacking, decrypting, etc. We just wait when code is executed to dump the content of the whole page.]


When this third trap (instruction fetch from a monitored page) occurs, things like hash calculation (prevents duplicates -> speedup) and dumps are induced.
[At this point (it is marked within the code) I also analyse the regarding memory for specific behaviour. Additionally a classifier could then set a malware flag if the page contains malicious behaviour or not.]
Depending on a ""malware"" flag (predetemined by MALWARE_DEFAULT or other custom set flags in hyperbee.h: LOG_ALWAYS, DUMP_ALWAYS) the subsequent behaviour is determined:

the current data gathered through the analysis can be printed to the shell
the memory dump can be stored permanently (together with a metadata file).

Additionally the exec trap is deleted and swapped for a write trap.
[Now we don't care about execs or reads as long as the page content remains unchanged since we already dumped that. We just wait when code is modified.]


When this new write trap gets active it just deletes itself and installs a new exec trap. The callback of this exec trap is what is described in step 4.
[Thus, we are able to permanently swap traps to dump the page on an instruction fetch, whenever it has been modified since the last execution].


How to use
Hyperbee uses two command line options:
--hyperbee-dump-dir : required, defines the path to store the dumps within a ""dumps"" folder
--hyperbee-filter-executable : optional, discards all pages which vad node does not belong to a binary whose absolute path does not contain this name. Therefore, you can filter for paths or filenames, etc.
sudo ./src/drakvuf -r /root/win10.json -d win10 -a hyperbee --hyperbee-dump-dir /tmp/ --hyperbee-filter-executable RandomExample
Output
Example output of the metafile:
{ ""TimeStamp"": ""1613056257.402199"", ""PID"": 5696, ""PPID"": 3032, ""TID"": 3748, ""UserID"": 1, ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""EventUID"": 43645, ""CR3"": ""0x99a65001"", ""PageVA"": ""0x7ff77176e000"", ""VADBase"": ""0x7ff771760000"", ""VADEnd"": ""0x7ff771782fff"", ""VADName"": ""\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""DumpSize"": ""0x1000"", ""DumpFile"": ""\/tmp\/dumps\/7ff77176e000_31287c55df232436.page"", ""SHA256"": ""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"", ""DumpID"": 15, ""TrapPA"": ""0x70b828a4"", ""GFN"": ""0x70b82"" }
Example output of the commandline (same analysis):
{""Plugin"":""execframe"",""TimeStamp"":""1613056257.402199"",""PID"":5696,""PPID"":3032,""TID"":3748,""UserName"":""SessionID"",""UserId"":1,""ProcessName"":""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""Method"":""execute_faulted_cb"",""EventUID"":""0xaa7d"",""CR3"":""0x99a65001"",""PageVA"":""0x7ff77176e000"",""VADBase"":""0x7ff771760000"",""VADEnd"":""0x7ff771782fff"",""VADName"":""\\Users\\master\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""DumpSize"":4096,""DumpFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.page"",""SHA256"":""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"",""DumpID"":15,""MetaFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.metafile"",""TrapPA"":""0x70b828a4"",""GFN"":""0x70b82""} 
Additional information
You may wonder why this plugin is called hyperbee. This is because of the name of the behaviour detection tool (from Politecnico di Milano) I integrated, which is referring to ""bees"". Since I call this tool for each page dump and thus, very often, it reminded me of a very diligent and busy ""bee"". Thus the name ""hyperbee"".
There are two other flags in hyperbee.h for two ideas which are rather experimental (or need refinement):

DUMP_VAD: Lets you dump the whole VAD node instead of just the page. The problem I saw with it is, that the vad content (as collection of pages) is loaded dynamically on access. On the one hand hashing of vad nodes is more or less not reasonable since whenever a new page is loaded within the vad node the whole node is dumped and leads to another hash. On the other hand by being able to see which parts within the vad are loaded/accessed/executed after another might be interesting for malware analysis. The page mode is quicker, as it just has to hash 4096 bytes each time.
IGNORE_SYSTEM_DLL If we assume that the system's integrity is ensured turning on this flags discards the dump of all pages/vads whose vad name contains either System32 and SysWOW64. This gave me a major speedup since my PC is rather old and I was not interested in calls within the common Windows libraries/executables.

Feel free to share any questions and suggestions!
Klaus
Co-authored-by: Michał Leszczyński michal.leszczynski@cert.pl","@Id3aFly
Here you need to add filesystem.hpp to the list of headers:

  
    
      drakvuf/src/libdrakvuf/Makefile.am
    
    
         Line 109
      in
      eb1b775
    
  
  
    

        
          
           linux.h linux-exports.h linux-offsets.h linux-offsets-map.h 
        
    
  


this is ought to fix compile CI step failing.

One more hint about astyle. If you click Details for astyle / astyle (pull_request) step and then expand Show required astyle changes, you will get a patch which should automatically fix all the issues, e.g.:
diff --git a/src/plugins/hyperbee/hyperbee.cpp b/src/plugins/hyperbee/hyperbee.cpp
index 2b19a29..97319fe 100644
--- a/src/plugins/hyperbee/hyperbee.cpp
+++ b/src/plugins/hyperbee/hyperbee.cpp
@@ -621,22 +621,22 @@ static event_response_t execute_faulted_cb(drakvuf_t drakvuf, drakvuf_trap_info_
 
         //Set the area to dump for vad or page (below-else)
         ctx_memory_dump =
-            {
-                .translate_mechanism = VMI_TM_PROCESS_DTB,
-                .dtb = info->regs->cr3,
-                //Calculate the dump_size
-                .addr = mmvad.starting_vpn * VMI_PS_4KB
-            };
+        {
+            .translate_mechanism = VMI_TM_PROCESS_DTB,
+            .dtb = info->regs->cr3,
+            //Calculate the dump_size
+            .addr = mmvad.starting_vpn * VMI_PS_4KB
+        };
         memory_size = (mmvad.ending_vpn - mmvad.starting_vpn + 1) * VMI_PS_4KB;
     }
     else
     {
         ctx_memory_dump =
-            {
-                .translate_mechanism = VMI_TM_PROCESS_DTB, /**see Libvmi.h < Translate addr via specified directory table base. */
-                .dtb = info->regs->cr3, //The directory table base
-                .addr = ef_data->page_va //The address to lookup.
-            };
+        {
+            .translate_mechanism = VMI_TM_PROCESS_DTB, /**see Libvmi.h < Translate addr via specified directory table base. */
+            .dtb = info->regs->cr3, //The directory table base
+            .addr = ef_data->page_va //The address to lookup.
+        };
         memory_size = VMI_PS_4KB;
     }
 
@@ -775,7 +775,8 @@ static event_response_t execute_faulted_cb(drakvuf_t drakvuf, drakvuf_trap_info_
 
 log:
     if (LOG_ALWAYS || malware)
-    { //LOG the retrieved data to the console
+    {
+        //LOG the retrieved data to the console
 
         char* actual_dump_file_path;
         const char* actual_checksum;
@@ -1013,9 +1014,9 @@ static event_response_t mm_access_fault_hook_cb(drakvuf_t drakvuf, drakvuf_trap_
     //Adds a return hook, a hook which will be called after function completes and returns.
     //Each time registers a trap, which is just for the process at the current step -> specific for the RIP
     auto trap = plugin->register_trap<access_fault_result_t>(
-        info,
-        mm_access_fault_return_hook_cb,
-        breakpoint_by_pid_searcher());
+                    info,
+                    mm_access_fault_return_hook_cb,
+                    breakpoint_by_pid_searcher());
 
     //If trap creation failed
     if (!trap)
diff --git a/src/plugins/hyperbee/hyperbee.h b/src/plugins/hyperbee/hyperbee.h
index 3074242..7439045 100644
--- a/src/plugins/hyperbee/hyperbee.h
+++ b/src/plugins/hyperbee/hyperbee.h
@@ -141,43 +141,43 @@
 //Struct to pass the parameters
 struct hyperbee_config_struct
 {
-  //Dir to save extracted frames to
-  const char* hyperbee_dump_dir;
-  //Executable to filter
-  const char* hyperbee_filter_executable;
+    //Dir to save extracted frames to
+    const char* hyperbee_dump_dir;
+    //Executable to filter
+    const char* hyperbee_filter_executable;
 };
 
 class hyperbee : public pluginex
 {
 
- public:
-  //Dir to save extracted frames to
-  std::filesystem::path hyperbee_dump_dir;
+public:
+    //Dir to save extracted frames to
+    std::filesystem::path hyperbee_dump_dir;
 
-  //Executable to filter for
-  const char* hyperbee_filter_executable = """";
+    //Executable to filter for
+    const char* hyperbee_filter_executable = """";
 
-  /**
-   * a temporary  dump file
-   */
-  char* tmp_file_path = nullptr;
+    /**
+     * a temporary  dump file
+     */
+    char* tmp_file_path = nullptr;
 
-  //Counts how often an actual dump occured
-  unsigned int dump_id = 0;
+    //Counts how often an actual dump occured
+    unsigned int dump_id = 0;
 
-  //Set to store all traps so they can be deleted in the end
-  std::set<drakvuf_trap*> traps;
+    //Set to store all traps so they can be deleted in the end
+    std::set<drakvuf_trap*> traps;
 
-  //Keeps track of monitored pages. Prevents duplicate traps.
-  std::set<std::pair<addr_t, addr_t>> monitored_pages;
+    //Keeps track of monitored pages. Prevents duplicate traps.
+    std::set<std::pair<addr_t, addr_t>> monitored_pages;
 
-  //Keeps track of the data which was already dumped, used to prevent duplicate dump files.
-  // Uses the hash as key and the dumped file stem (without extension) as value.
-  std::unordered_map<std::string, std::string> hashed_dumped_data_map;
+    //Keeps track of the data which was already dumped, used to prevent duplicate dump files.
+    // Uses the hash as key and the dumped file stem (without extension) as value.
+    std::unordered_map<std::string, std::string> hashed_dumped_data_map;
 
-  hyperbee(drakvuf_t drakvuf, const hyperbee_config_struct* config, output_format_t output);
+    hyperbee(drakvuf_t drakvuf, const hyperbee_config_struct* config, output_format_t output);
 
-  ~hyperbee();
+    ~hyperbee();
 };
 
 #endif
you can copy this to your working directory, save under some name (e.g. astyle.patch) and then git apply astyle.patch. Should do the job automatically for you.",True,"{'LAUGH': ['https://github.com/Id3aFly'], 'THUMBS_UP': ['https://github.com/Id3aFly']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1133,2021-02-11T15:25:16Z,2021-02-19T13:26:14Z,2021-03-10T15:43:48Z,MERGED,True,1830,1,9,https://github.com/Id3aFly,Hyperbee plugin,48,[],https://github.com/tklengyel/drakvuf/pull/1133,https://github.com/icedevml,19,https://github.com/tklengyel/drakvuf/pull/1133#issuecomment-778613339,"Hello everyone,
this is my first ever pull request so I'm very interested in your feedback! :)
Background
During my masters thesis at FAU Erlangen-Nürnberg (FAU) I created a plugin called ""hyperbee"" that is at least part of the working name. The topic of my masters thesis is to efficiently dump the content of executable pages and analyse it with a (currently still private) tool from Politecnico di Milano (IT). Based on the detected behaviour a classifier could later determine if the page contains malicious code or not.
I was talking with @icedevml about this plugin and he encouraged me to share my code within a pull request. Luckily all of my supervisors approved this idea, so I can finally share my code with you. I am just allowed to share the code regarding the monitoring/dumping of pages and cannot include the behaviour detection code. Based on what I've seen in other plugins (memdump, ipt) I created a similar plugin:
Principle of operation


At first it creates a trap at the entry of MmAccessFault


This 1st trap's callback can get hold of the virtual address MmAccessFault shall assign as new page to. Additionally the cb adds another trap when returning from MmAccessFault and continuing with the actual code.


This 2nd trap's callback intercepts right after returning from MmAccessFault and can obtain the page frame number which was assigned to the virtual address. So we know the relation of virtual page ~ physical (guest) frame number. Furthermore this adds a new trap, whenever code is executed (instructions are fetched) from this frame.
[Now we don't care about writes or reads which for example may include code unpacking, decrypting, etc. We just wait when code is executed to dump the content of the whole page.]


When this third trap (instruction fetch from a monitored page) occurs, things like hash calculation (prevents duplicates -> speedup) and dumps are induced.
[At this point (it is marked within the code) I also analyse the regarding memory for specific behaviour. Additionally a classifier could then set a malware flag if the page contains malicious behaviour or not.]
Depending on a ""malware"" flag (predetemined by MALWARE_DEFAULT or other custom set flags in hyperbee.h: LOG_ALWAYS, DUMP_ALWAYS) the subsequent behaviour is determined:

the current data gathered through the analysis can be printed to the shell
the memory dump can be stored permanently (together with a metadata file).

Additionally the exec trap is deleted and swapped for a write trap.
[Now we don't care about execs or reads as long as the page content remains unchanged since we already dumped that. We just wait when code is modified.]


When this new write trap gets active it just deletes itself and installs a new exec trap. The callback of this exec trap is what is described in step 4.
[Thus, we are able to permanently swap traps to dump the page on an instruction fetch, whenever it has been modified since the last execution].


How to use
Hyperbee uses two command line options:
--hyperbee-dump-dir : required, defines the path to store the dumps within a ""dumps"" folder
--hyperbee-filter-executable : optional, discards all pages which vad node does not belong to a binary whose absolute path does not contain this name. Therefore, you can filter for paths or filenames, etc.
sudo ./src/drakvuf -r /root/win10.json -d win10 -a hyperbee --hyperbee-dump-dir /tmp/ --hyperbee-filter-executable RandomExample
Output
Example output of the metafile:
{ ""TimeStamp"": ""1613056257.402199"", ""PID"": 5696, ""PPID"": 3032, ""TID"": 3748, ""UserID"": 1, ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""EventUID"": 43645, ""CR3"": ""0x99a65001"", ""PageVA"": ""0x7ff77176e000"", ""VADBase"": ""0x7ff771760000"", ""VADEnd"": ""0x7ff771782fff"", ""VADName"": ""\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""DumpSize"": ""0x1000"", ""DumpFile"": ""\/tmp\/dumps\/7ff77176e000_31287c55df232436.page"", ""SHA256"": ""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"", ""DumpID"": 15, ""TrapPA"": ""0x70b828a4"", ""GFN"": ""0x70b82"" }
Example output of the commandline (same analysis):
{""Plugin"":""execframe"",""TimeStamp"":""1613056257.402199"",""PID"":5696,""PPID"":3032,""TID"":3748,""UserName"":""SessionID"",""UserId"":1,""ProcessName"":""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""Method"":""execute_faulted_cb"",""EventUID"":""0xaa7d"",""CR3"":""0x99a65001"",""PageVA"":""0x7ff77176e000"",""VADBase"":""0x7ff771760000"",""VADEnd"":""0x7ff771782fff"",""VADName"":""\\Users\\master\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""DumpSize"":4096,""DumpFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.page"",""SHA256"":""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"",""DumpID"":15,""MetaFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.metafile"",""TrapPA"":""0x70b828a4"",""GFN"":""0x70b82""} 
Additional information
You may wonder why this plugin is called hyperbee. This is because of the name of the behaviour detection tool (from Politecnico di Milano) I integrated, which is referring to ""bees"". Since I call this tool for each page dump and thus, very often, it reminded me of a very diligent and busy ""bee"". Thus the name ""hyperbee"".
There are two other flags in hyperbee.h for two ideas which are rather experimental (or need refinement):

DUMP_VAD: Lets you dump the whole VAD node instead of just the page. The problem I saw with it is, that the vad content (as collection of pages) is loaded dynamically on access. On the one hand hashing of vad nodes is more or less not reasonable since whenever a new page is loaded within the vad node the whole node is dumped and leads to another hash. On the other hand by being able to see which parts within the vad are loaded/accessed/executed after another might be interesting for malware analysis. The page mode is quicker, as it just has to hash 4096 bytes each time.
IGNORE_SYSTEM_DLL If we assume that the system's integrity is ensured turning on this flags discards the dump of all pages/vads whose vad name contains either System32 and SysWOW64. This gave me a major speedup since my PC is rather old and I was not interested in calls within the common Windows libraries/executables.

Feel free to share any questions and suggestions!
Klaus
Co-authored-by: Michał Leszczyński michal.leszczynski@cert.pl",@drakvuf-jenkins Test this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1133,2021-02-11T15:25:16Z,2021-02-19T13:26:14Z,2021-03-10T15:43:48Z,MERGED,True,1830,1,9,https://github.com/Id3aFly,Hyperbee plugin,48,[],https://github.com/tklengyel/drakvuf/pull/1133,https://github.com/Id3aFly,20,https://github.com/tklengyel/drakvuf/pull/1133#issuecomment-778624246,"Hello everyone,
this is my first ever pull request so I'm very interested in your feedback! :)
Background
During my masters thesis at FAU Erlangen-Nürnberg (FAU) I created a plugin called ""hyperbee"" that is at least part of the working name. The topic of my masters thesis is to efficiently dump the content of executable pages and analyse it with a (currently still private) tool from Politecnico di Milano (IT). Based on the detected behaviour a classifier could later determine if the page contains malicious code or not.
I was talking with @icedevml about this plugin and he encouraged me to share my code within a pull request. Luckily all of my supervisors approved this idea, so I can finally share my code with you. I am just allowed to share the code regarding the monitoring/dumping of pages and cannot include the behaviour detection code. Based on what I've seen in other plugins (memdump, ipt) I created a similar plugin:
Principle of operation


At first it creates a trap at the entry of MmAccessFault


This 1st trap's callback can get hold of the virtual address MmAccessFault shall assign as new page to. Additionally the cb adds another trap when returning from MmAccessFault and continuing with the actual code.


This 2nd trap's callback intercepts right after returning from MmAccessFault and can obtain the page frame number which was assigned to the virtual address. So we know the relation of virtual page ~ physical (guest) frame number. Furthermore this adds a new trap, whenever code is executed (instructions are fetched) from this frame.
[Now we don't care about writes or reads which for example may include code unpacking, decrypting, etc. We just wait when code is executed to dump the content of the whole page.]


When this third trap (instruction fetch from a monitored page) occurs, things like hash calculation (prevents duplicates -> speedup) and dumps are induced.
[At this point (it is marked within the code) I also analyse the regarding memory for specific behaviour. Additionally a classifier could then set a malware flag if the page contains malicious behaviour or not.]
Depending on a ""malware"" flag (predetemined by MALWARE_DEFAULT or other custom set flags in hyperbee.h: LOG_ALWAYS, DUMP_ALWAYS) the subsequent behaviour is determined:

the current data gathered through the analysis can be printed to the shell
the memory dump can be stored permanently (together with a metadata file).

Additionally the exec trap is deleted and swapped for a write trap.
[Now we don't care about execs or reads as long as the page content remains unchanged since we already dumped that. We just wait when code is modified.]


When this new write trap gets active it just deletes itself and installs a new exec trap. The callback of this exec trap is what is described in step 4.
[Thus, we are able to permanently swap traps to dump the page on an instruction fetch, whenever it has been modified since the last execution].


How to use
Hyperbee uses two command line options:
--hyperbee-dump-dir : required, defines the path to store the dumps within a ""dumps"" folder
--hyperbee-filter-executable : optional, discards all pages which vad node does not belong to a binary whose absolute path does not contain this name. Therefore, you can filter for paths or filenames, etc.
sudo ./src/drakvuf -r /root/win10.json -d win10 -a hyperbee --hyperbee-dump-dir /tmp/ --hyperbee-filter-executable RandomExample
Output
Example output of the metafile:
{ ""TimeStamp"": ""1613056257.402199"", ""PID"": 5696, ""PPID"": 3032, ""TID"": 3748, ""UserID"": 1, ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""EventUID"": 43645, ""CR3"": ""0x99a65001"", ""PageVA"": ""0x7ff77176e000"", ""VADBase"": ""0x7ff771760000"", ""VADEnd"": ""0x7ff771782fff"", ""VADName"": ""\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""DumpSize"": ""0x1000"", ""DumpFile"": ""\/tmp\/dumps\/7ff77176e000_31287c55df232436.page"", ""SHA256"": ""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"", ""DumpID"": 15, ""TrapPA"": ""0x70b828a4"", ""GFN"": ""0x70b82"" }
Example output of the commandline (same analysis):
{""Plugin"":""execframe"",""TimeStamp"":""1613056257.402199"",""PID"":5696,""PPID"":3032,""TID"":3748,""UserName"":""SessionID"",""UserId"":1,""ProcessName"":""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""Method"":""execute_faulted_cb"",""EventUID"":""0xaa7d"",""CR3"":""0x99a65001"",""PageVA"":""0x7ff77176e000"",""VADBase"":""0x7ff771760000"",""VADEnd"":""0x7ff771782fff"",""VADName"":""\\Users\\master\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""DumpSize"":4096,""DumpFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.page"",""SHA256"":""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"",""DumpID"":15,""MetaFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.metafile"",""TrapPA"":""0x70b828a4"",""GFN"":""0x70b82""} 
Additional information
You may wonder why this plugin is called hyperbee. This is because of the name of the behaviour detection tool (from Politecnico di Milano) I integrated, which is referring to ""bees"". Since I call this tool for each page dump and thus, very often, it reminded me of a very diligent and busy ""bee"". Thus the name ""hyperbee"".
There are two other flags in hyperbee.h for two ideas which are rather experimental (or need refinement):

DUMP_VAD: Lets you dump the whole VAD node instead of just the page. The problem I saw with it is, that the vad content (as collection of pages) is loaded dynamically on access. On the one hand hashing of vad nodes is more or less not reasonable since whenever a new page is loaded within the vad node the whole node is dumped and leads to another hash. On the other hand by being able to see which parts within the vad are loaded/accessed/executed after another might be interesting for malware analysis. The page mode is quicker, as it just has to hash 4096 bytes each time.
IGNORE_SYSTEM_DLL If we assume that the system's integrity is ensured turning on this flags discards the dump of all pages/vads whose vad name contains either System32 and SysWOW64. This gave me a major speedup since my PC is rather old and I was not interested in calls within the common Windows libraries/executables.

Feel free to share any questions and suggestions!
Klaus
Co-authored-by: Michał Leszczyński michal.leszczynski@cert.pl","@Id3aFly


One more hint about astyle. If you click Details for astyle / astyle (pull_request) step and then expand Show required astyle changes, you will get a patch which should automatically fix all the issues, e.g.:
...
you can copy this to your working directory, save under some name (e.g. astyle.patch) and then git apply astyle.patch. Should do the job automatically for you.

Awesome. Did not know about that possibility yet. Thank you for the advise! That makes future problems a lot easier! Anyways I was able to adapt my CLion autoformat settings to comply to the requirements except one thing. But I'm going to patch it the way you told me. It is way easier! Big thanks!",True,{'THUMBS_UP': ['https://github.com/icedevml']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1133,2021-02-11T15:25:16Z,2021-02-19T13:26:14Z,2021-03-10T15:43:48Z,MERGED,True,1830,1,9,https://github.com/Id3aFly,Hyperbee plugin,48,[],https://github.com/tklengyel/drakvuf/pull/1133,https://github.com/icedevml,21,https://github.com/tklengyel/drakvuf/pull/1133#issuecomment-778876603,"Hello everyone,
this is my first ever pull request so I'm very interested in your feedback! :)
Background
During my masters thesis at FAU Erlangen-Nürnberg (FAU) I created a plugin called ""hyperbee"" that is at least part of the working name. The topic of my masters thesis is to efficiently dump the content of executable pages and analyse it with a (currently still private) tool from Politecnico di Milano (IT). Based on the detected behaviour a classifier could later determine if the page contains malicious code or not.
I was talking with @icedevml about this plugin and he encouraged me to share my code within a pull request. Luckily all of my supervisors approved this idea, so I can finally share my code with you. I am just allowed to share the code regarding the monitoring/dumping of pages and cannot include the behaviour detection code. Based on what I've seen in other plugins (memdump, ipt) I created a similar plugin:
Principle of operation


At first it creates a trap at the entry of MmAccessFault


This 1st trap's callback can get hold of the virtual address MmAccessFault shall assign as new page to. Additionally the cb adds another trap when returning from MmAccessFault and continuing with the actual code.


This 2nd trap's callback intercepts right after returning from MmAccessFault and can obtain the page frame number which was assigned to the virtual address. So we know the relation of virtual page ~ physical (guest) frame number. Furthermore this adds a new trap, whenever code is executed (instructions are fetched) from this frame.
[Now we don't care about writes or reads which for example may include code unpacking, decrypting, etc. We just wait when code is executed to dump the content of the whole page.]


When this third trap (instruction fetch from a monitored page) occurs, things like hash calculation (prevents duplicates -> speedup) and dumps are induced.
[At this point (it is marked within the code) I also analyse the regarding memory for specific behaviour. Additionally a classifier could then set a malware flag if the page contains malicious behaviour or not.]
Depending on a ""malware"" flag (predetemined by MALWARE_DEFAULT or other custom set flags in hyperbee.h: LOG_ALWAYS, DUMP_ALWAYS) the subsequent behaviour is determined:

the current data gathered through the analysis can be printed to the shell
the memory dump can be stored permanently (together with a metadata file).

Additionally the exec trap is deleted and swapped for a write trap.
[Now we don't care about execs or reads as long as the page content remains unchanged since we already dumped that. We just wait when code is modified.]


When this new write trap gets active it just deletes itself and installs a new exec trap. The callback of this exec trap is what is described in step 4.
[Thus, we are able to permanently swap traps to dump the page on an instruction fetch, whenever it has been modified since the last execution].


How to use
Hyperbee uses two command line options:
--hyperbee-dump-dir : required, defines the path to store the dumps within a ""dumps"" folder
--hyperbee-filter-executable : optional, discards all pages which vad node does not belong to a binary whose absolute path does not contain this name. Therefore, you can filter for paths or filenames, etc.
sudo ./src/drakvuf -r /root/win10.json -d win10 -a hyperbee --hyperbee-dump-dir /tmp/ --hyperbee-filter-executable RandomExample
Output
Example output of the metafile:
{ ""TimeStamp"": ""1613056257.402199"", ""PID"": 5696, ""PPID"": 3032, ""TID"": 3748, ""UserID"": 1, ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""EventUID"": 43645, ""CR3"": ""0x99a65001"", ""PageVA"": ""0x7ff77176e000"", ""VADBase"": ""0x7ff771760000"", ""VADEnd"": ""0x7ff771782fff"", ""VADName"": ""\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""DumpSize"": ""0x1000"", ""DumpFile"": ""\/tmp\/dumps\/7ff77176e000_31287c55df232436.page"", ""SHA256"": ""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"", ""DumpID"": 15, ""TrapPA"": ""0x70b828a4"", ""GFN"": ""0x70b82"" }
Example output of the commandline (same analysis):
{""Plugin"":""execframe"",""TimeStamp"":""1613056257.402199"",""PID"":5696,""PPID"":3032,""TID"":3748,""UserName"":""SessionID"",""UserId"":1,""ProcessName"":""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""Method"":""execute_faulted_cb"",""EventUID"":""0xaa7d"",""CR3"":""0x99a65001"",""PageVA"":""0x7ff77176e000"",""VADBase"":""0x7ff771760000"",""VADEnd"":""0x7ff771782fff"",""VADName"":""\\Users\\master\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""DumpSize"":4096,""DumpFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.page"",""SHA256"":""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"",""DumpID"":15,""MetaFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.metafile"",""TrapPA"":""0x70b828a4"",""GFN"":""0x70b82""} 
Additional information
You may wonder why this plugin is called hyperbee. This is because of the name of the behaviour detection tool (from Politecnico di Milano) I integrated, which is referring to ""bees"". Since I call this tool for each page dump and thus, very often, it reminded me of a very diligent and busy ""bee"". Thus the name ""hyperbee"".
There are two other flags in hyperbee.h for two ideas which are rather experimental (or need refinement):

DUMP_VAD: Lets you dump the whole VAD node instead of just the page. The problem I saw with it is, that the vad content (as collection of pages) is loaded dynamically on access. On the one hand hashing of vad nodes is more or less not reasonable since whenever a new page is loaded within the vad node the whole node is dumped and leads to another hash. On the other hand by being able to see which parts within the vad are loaded/accessed/executed after another might be interesting for malware analysis. The page mode is quicker, as it just has to hash 4096 bytes each time.
IGNORE_SYSTEM_DLL If we assume that the system's integrity is ensured turning on this flags discards the dump of all pages/vads whose vad name contains either System32 and SysWOW64. This gave me a major speedup since my PC is rather old and I was not interested in calls within the common Windows libraries/executables.

Feel free to share any questions and suggestions!
Klaus
Co-authored-by: Michał Leszczyński michal.leszczynski@cert.pl",@drakvuf-jenkins Test this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1133,2021-02-11T15:25:16Z,2021-02-19T13:26:14Z,2021-03-10T15:43:48Z,MERGED,True,1830,1,9,https://github.com/Id3aFly,Hyperbee plugin,48,[],https://github.com/tklengyel/drakvuf/pull/1133,https://github.com/tklengyel,22,https://github.com/tklengyel/drakvuf/pull/1133#issuecomment-778890244,"Hello everyone,
this is my first ever pull request so I'm very interested in your feedback! :)
Background
During my masters thesis at FAU Erlangen-Nürnberg (FAU) I created a plugin called ""hyperbee"" that is at least part of the working name. The topic of my masters thesis is to efficiently dump the content of executable pages and analyse it with a (currently still private) tool from Politecnico di Milano (IT). Based on the detected behaviour a classifier could later determine if the page contains malicious code or not.
I was talking with @icedevml about this plugin and he encouraged me to share my code within a pull request. Luckily all of my supervisors approved this idea, so I can finally share my code with you. I am just allowed to share the code regarding the monitoring/dumping of pages and cannot include the behaviour detection code. Based on what I've seen in other plugins (memdump, ipt) I created a similar plugin:
Principle of operation


At first it creates a trap at the entry of MmAccessFault


This 1st trap's callback can get hold of the virtual address MmAccessFault shall assign as new page to. Additionally the cb adds another trap when returning from MmAccessFault and continuing with the actual code.


This 2nd trap's callback intercepts right after returning from MmAccessFault and can obtain the page frame number which was assigned to the virtual address. So we know the relation of virtual page ~ physical (guest) frame number. Furthermore this adds a new trap, whenever code is executed (instructions are fetched) from this frame.
[Now we don't care about writes or reads which for example may include code unpacking, decrypting, etc. We just wait when code is executed to dump the content of the whole page.]


When this third trap (instruction fetch from a monitored page) occurs, things like hash calculation (prevents duplicates -> speedup) and dumps are induced.
[At this point (it is marked within the code) I also analyse the regarding memory for specific behaviour. Additionally a classifier could then set a malware flag if the page contains malicious behaviour or not.]
Depending on a ""malware"" flag (predetemined by MALWARE_DEFAULT or other custom set flags in hyperbee.h: LOG_ALWAYS, DUMP_ALWAYS) the subsequent behaviour is determined:

the current data gathered through the analysis can be printed to the shell
the memory dump can be stored permanently (together with a metadata file).

Additionally the exec trap is deleted and swapped for a write trap.
[Now we don't care about execs or reads as long as the page content remains unchanged since we already dumped that. We just wait when code is modified.]


When this new write trap gets active it just deletes itself and installs a new exec trap. The callback of this exec trap is what is described in step 4.
[Thus, we are able to permanently swap traps to dump the page on an instruction fetch, whenever it has been modified since the last execution].


How to use
Hyperbee uses two command line options:
--hyperbee-dump-dir : required, defines the path to store the dumps within a ""dumps"" folder
--hyperbee-filter-executable : optional, discards all pages which vad node does not belong to a binary whose absolute path does not contain this name. Therefore, you can filter for paths or filenames, etc.
sudo ./src/drakvuf -r /root/win10.json -d win10 -a hyperbee --hyperbee-dump-dir /tmp/ --hyperbee-filter-executable RandomExample
Output
Example output of the metafile:
{ ""TimeStamp"": ""1613056257.402199"", ""PID"": 5696, ""PPID"": 3032, ""TID"": 3748, ""UserID"": 1, ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""EventUID"": 43645, ""CR3"": ""0x99a65001"", ""PageVA"": ""0x7ff77176e000"", ""VADBase"": ""0x7ff771760000"", ""VADEnd"": ""0x7ff771782fff"", ""VADName"": ""\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""DumpSize"": ""0x1000"", ""DumpFile"": ""\/tmp\/dumps\/7ff77176e000_31287c55df232436.page"", ""SHA256"": ""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"", ""DumpID"": 15, ""TrapPA"": ""0x70b828a4"", ""GFN"": ""0x70b82"" }
Example output of the commandline (same analysis):
{""Plugin"":""execframe"",""TimeStamp"":""1613056257.402199"",""PID"":5696,""PPID"":3032,""TID"":3748,""UserName"":""SessionID"",""UserId"":1,""ProcessName"":""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""Method"":""execute_faulted_cb"",""EventUID"":""0xaa7d"",""CR3"":""0x99a65001"",""PageVA"":""0x7ff77176e000"",""VADBase"":""0x7ff771760000"",""VADEnd"":""0x7ff771782fff"",""VADName"":""\\Users\\master\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""DumpSize"":4096,""DumpFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.page"",""SHA256"":""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"",""DumpID"":15,""MetaFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.metafile"",""TrapPA"":""0x70b828a4"",""GFN"":""0x70b82""} 
Additional information
You may wonder why this plugin is called hyperbee. This is because of the name of the behaviour detection tool (from Politecnico di Milano) I integrated, which is referring to ""bees"". Since I call this tool for each page dump and thus, very often, it reminded me of a very diligent and busy ""bee"". Thus the name ""hyperbee"".
There are two other flags in hyperbee.h for two ideas which are rather experimental (or need refinement):

DUMP_VAD: Lets you dump the whole VAD node instead of just the page. The problem I saw with it is, that the vad content (as collection of pages) is loaded dynamically on access. On the one hand hashing of vad nodes is more or less not reasonable since whenever a new page is loaded within the vad node the whole node is dumped and leads to another hash. On the other hand by being able to see which parts within the vad are loaded/accessed/executed after another might be interesting for malware analysis. The page mode is quicker, as it just has to hash 4096 bytes each time.
IGNORE_SYSTEM_DLL If we assume that the system's integrity is ensured turning on this flags discards the dump of all pages/vads whose vad name contains either System32 and SysWOW64. This gave me a major speedup since my PC is rather old and I was not interested in calls within the common Windows libraries/executables.

Feel free to share any questions and suggestions!
Klaus
Co-authored-by: Michał Leszczyński michal.leszczynski@cert.pl",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1133,2021-02-11T15:25:16Z,2021-02-19T13:26:14Z,2021-03-10T15:43:48Z,MERGED,True,1830,1,9,https://github.com/Id3aFly,Hyperbee plugin,48,[],https://github.com/tklengyel/drakvuf/pull/1133,https://github.com/Id3aFly,23,https://github.com/tklengyel/drakvuf/pull/1133#issuecomment-779018260,"Hello everyone,
this is my first ever pull request so I'm very interested in your feedback! :)
Background
During my masters thesis at FAU Erlangen-Nürnberg (FAU) I created a plugin called ""hyperbee"" that is at least part of the working name. The topic of my masters thesis is to efficiently dump the content of executable pages and analyse it with a (currently still private) tool from Politecnico di Milano (IT). Based on the detected behaviour a classifier could later determine if the page contains malicious code or not.
I was talking with @icedevml about this plugin and he encouraged me to share my code within a pull request. Luckily all of my supervisors approved this idea, so I can finally share my code with you. I am just allowed to share the code regarding the monitoring/dumping of pages and cannot include the behaviour detection code. Based on what I've seen in other plugins (memdump, ipt) I created a similar plugin:
Principle of operation


At first it creates a trap at the entry of MmAccessFault


This 1st trap's callback can get hold of the virtual address MmAccessFault shall assign as new page to. Additionally the cb adds another trap when returning from MmAccessFault and continuing with the actual code.


This 2nd trap's callback intercepts right after returning from MmAccessFault and can obtain the page frame number which was assigned to the virtual address. So we know the relation of virtual page ~ physical (guest) frame number. Furthermore this adds a new trap, whenever code is executed (instructions are fetched) from this frame.
[Now we don't care about writes or reads which for example may include code unpacking, decrypting, etc. We just wait when code is executed to dump the content of the whole page.]


When this third trap (instruction fetch from a monitored page) occurs, things like hash calculation (prevents duplicates -> speedup) and dumps are induced.
[At this point (it is marked within the code) I also analyse the regarding memory for specific behaviour. Additionally a classifier could then set a malware flag if the page contains malicious behaviour or not.]
Depending on a ""malware"" flag (predetemined by MALWARE_DEFAULT or other custom set flags in hyperbee.h: LOG_ALWAYS, DUMP_ALWAYS) the subsequent behaviour is determined:

the current data gathered through the analysis can be printed to the shell
the memory dump can be stored permanently (together with a metadata file).

Additionally the exec trap is deleted and swapped for a write trap.
[Now we don't care about execs or reads as long as the page content remains unchanged since we already dumped that. We just wait when code is modified.]


When this new write trap gets active it just deletes itself and installs a new exec trap. The callback of this exec trap is what is described in step 4.
[Thus, we are able to permanently swap traps to dump the page on an instruction fetch, whenever it has been modified since the last execution].


How to use
Hyperbee uses two command line options:
--hyperbee-dump-dir : required, defines the path to store the dumps within a ""dumps"" folder
--hyperbee-filter-executable : optional, discards all pages which vad node does not belong to a binary whose absolute path does not contain this name. Therefore, you can filter for paths or filenames, etc.
sudo ./src/drakvuf -r /root/win10.json -d win10 -a hyperbee --hyperbee-dump-dir /tmp/ --hyperbee-filter-executable RandomExample
Output
Example output of the metafile:
{ ""TimeStamp"": ""1613056257.402199"", ""PID"": 5696, ""PPID"": 3032, ""TID"": 3748, ""UserID"": 1, ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""EventUID"": 43645, ""CR3"": ""0x99a65001"", ""PageVA"": ""0x7ff77176e000"", ""VADBase"": ""0x7ff771760000"", ""VADEnd"": ""0x7ff771782fff"", ""VADName"": ""\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""DumpSize"": ""0x1000"", ""DumpFile"": ""\/tmp\/dumps\/7ff77176e000_31287c55df232436.page"", ""SHA256"": ""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"", ""DumpID"": 15, ""TrapPA"": ""0x70b828a4"", ""GFN"": ""0x70b82"" }
Example output of the commandline (same analysis):
{""Plugin"":""execframe"",""TimeStamp"":""1613056257.402199"",""PID"":5696,""PPID"":3032,""TID"":3748,""UserName"":""SessionID"",""UserId"":1,""ProcessName"":""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""Method"":""execute_faulted_cb"",""EventUID"":""0xaa7d"",""CR3"":""0x99a65001"",""PageVA"":""0x7ff77176e000"",""VADBase"":""0x7ff771760000"",""VADEnd"":""0x7ff771782fff"",""VADName"":""\\Users\\master\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""DumpSize"":4096,""DumpFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.page"",""SHA256"":""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"",""DumpID"":15,""MetaFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.metafile"",""TrapPA"":""0x70b828a4"",""GFN"":""0x70b82""} 
Additional information
You may wonder why this plugin is called hyperbee. This is because of the name of the behaviour detection tool (from Politecnico di Milano) I integrated, which is referring to ""bees"". Since I call this tool for each page dump and thus, very often, it reminded me of a very diligent and busy ""bee"". Thus the name ""hyperbee"".
There are two other flags in hyperbee.h for two ideas which are rather experimental (or need refinement):

DUMP_VAD: Lets you dump the whole VAD node instead of just the page. The problem I saw with it is, that the vad content (as collection of pages) is loaded dynamically on access. On the one hand hashing of vad nodes is more or less not reasonable since whenever a new page is loaded within the vad node the whole node is dumped and leads to another hash. On the other hand by being able to see which parts within the vad are loaded/accessed/executed after another might be interesting for malware analysis. The page mode is quicker, as it just has to hash 4096 bytes each time.
IGNORE_SYSTEM_DLL If we assume that the system's integrity is ensured turning on this flags discards the dump of all pages/vads whose vad name contains either System32 and SysWOW64. This gave me a major speedup since my PC is rather old and I was not interested in calls within the common Windows libraries/executables.

Feel free to share any questions and suggestions!
Klaus
Co-authored-by: Michał Leszczyński michal.leszczynski@cert.pl",What is the problem with the default check? I don't see any problems within Windows10-2004 there.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1133,2021-02-11T15:25:16Z,2021-02-19T13:26:14Z,2021-03-10T15:43:48Z,MERGED,True,1830,1,9,https://github.com/Id3aFly,Hyperbee plugin,48,[],https://github.com/tklengyel/drakvuf/pull/1133,https://github.com/icedevml,24,https://github.com/tklengyel/drakvuf/pull/1133#issuecomment-779112809,"Hello everyone,
this is my first ever pull request so I'm very interested in your feedback! :)
Background
During my masters thesis at FAU Erlangen-Nürnberg (FAU) I created a plugin called ""hyperbee"" that is at least part of the working name. The topic of my masters thesis is to efficiently dump the content of executable pages and analyse it with a (currently still private) tool from Politecnico di Milano (IT). Based on the detected behaviour a classifier could later determine if the page contains malicious code or not.
I was talking with @icedevml about this plugin and he encouraged me to share my code within a pull request. Luckily all of my supervisors approved this idea, so I can finally share my code with you. I am just allowed to share the code regarding the monitoring/dumping of pages and cannot include the behaviour detection code. Based on what I've seen in other plugins (memdump, ipt) I created a similar plugin:
Principle of operation


At first it creates a trap at the entry of MmAccessFault


This 1st trap's callback can get hold of the virtual address MmAccessFault shall assign as new page to. Additionally the cb adds another trap when returning from MmAccessFault and continuing with the actual code.


This 2nd trap's callback intercepts right after returning from MmAccessFault and can obtain the page frame number which was assigned to the virtual address. So we know the relation of virtual page ~ physical (guest) frame number. Furthermore this adds a new trap, whenever code is executed (instructions are fetched) from this frame.
[Now we don't care about writes or reads which for example may include code unpacking, decrypting, etc. We just wait when code is executed to dump the content of the whole page.]


When this third trap (instruction fetch from a monitored page) occurs, things like hash calculation (prevents duplicates -> speedup) and dumps are induced.
[At this point (it is marked within the code) I also analyse the regarding memory for specific behaviour. Additionally a classifier could then set a malware flag if the page contains malicious behaviour or not.]
Depending on a ""malware"" flag (predetemined by MALWARE_DEFAULT or other custom set flags in hyperbee.h: LOG_ALWAYS, DUMP_ALWAYS) the subsequent behaviour is determined:

the current data gathered through the analysis can be printed to the shell
the memory dump can be stored permanently (together with a metadata file).

Additionally the exec trap is deleted and swapped for a write trap.
[Now we don't care about execs or reads as long as the page content remains unchanged since we already dumped that. We just wait when code is modified.]


When this new write trap gets active it just deletes itself and installs a new exec trap. The callback of this exec trap is what is described in step 4.
[Thus, we are able to permanently swap traps to dump the page on an instruction fetch, whenever it has been modified since the last execution].


How to use
Hyperbee uses two command line options:
--hyperbee-dump-dir : required, defines the path to store the dumps within a ""dumps"" folder
--hyperbee-filter-executable : optional, discards all pages which vad node does not belong to a binary whose absolute path does not contain this name. Therefore, you can filter for paths or filenames, etc.
sudo ./src/drakvuf -r /root/win10.json -d win10 -a hyperbee --hyperbee-dump-dir /tmp/ --hyperbee-filter-executable RandomExample
Output
Example output of the metafile:
{ ""TimeStamp"": ""1613056257.402199"", ""PID"": 5696, ""PPID"": 3032, ""TID"": 3748, ""UserID"": 1, ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""EventUID"": 43645, ""CR3"": ""0x99a65001"", ""PageVA"": ""0x7ff77176e000"", ""VADBase"": ""0x7ff771760000"", ""VADEnd"": ""0x7ff771782fff"", ""VADName"": ""\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""DumpSize"": ""0x1000"", ""DumpFile"": ""\/tmp\/dumps\/7ff77176e000_31287c55df232436.page"", ""SHA256"": ""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"", ""DumpID"": 15, ""TrapPA"": ""0x70b828a4"", ""GFN"": ""0x70b82"" }
Example output of the commandline (same analysis):
{""Plugin"":""execframe"",""TimeStamp"":""1613056257.402199"",""PID"":5696,""PPID"":3032,""TID"":3748,""UserName"":""SessionID"",""UserId"":1,""ProcessName"":""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""Method"":""execute_faulted_cb"",""EventUID"":""0xaa7d"",""CR3"":""0x99a65001"",""PageVA"":""0x7ff77176e000"",""VADBase"":""0x7ff771760000"",""VADEnd"":""0x7ff771782fff"",""VADName"":""\\Users\\master\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""DumpSize"":4096,""DumpFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.page"",""SHA256"":""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"",""DumpID"":15,""MetaFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.metafile"",""TrapPA"":""0x70b828a4"",""GFN"":""0x70b82""} 
Additional information
You may wonder why this plugin is called hyperbee. This is because of the name of the behaviour detection tool (from Politecnico di Milano) I integrated, which is referring to ""bees"". Since I call this tool for each page dump and thus, very often, it reminded me of a very diligent and busy ""bee"". Thus the name ""hyperbee"".
There are two other flags in hyperbee.h for two ideas which are rather experimental (or need refinement):

DUMP_VAD: Lets you dump the whole VAD node instead of just the page. The problem I saw with it is, that the vad content (as collection of pages) is loaded dynamically on access. On the one hand hashing of vad nodes is more or less not reasonable since whenever a new page is loaded within the vad node the whole node is dumped and leads to another hash. On the other hand by being able to see which parts within the vad are loaded/accessed/executed after another might be interesting for malware analysis. The page mode is quicker, as it just has to hash 4096 bytes each time.
IGNORE_SYSTEM_DLL If we assume that the system's integrity is ensured turning on this flags discards the dump of all pages/vads whose vad name contains either System32 and SysWOW64. This gave me a major speedup since my PC is rather old and I was not interested in calls within the common Windows libraries/executables.

Feel free to share any questions and suggestions!
Klaus
Co-authored-by: Michał Leszczyński michal.leszczynski@cert.pl",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1133,2021-02-11T15:25:16Z,2021-02-19T13:26:14Z,2021-03-10T15:43:48Z,MERGED,True,1830,1,9,https://github.com/Id3aFly,Hyperbee plugin,48,[],https://github.com/tklengyel/drakvuf/pull/1133,https://github.com/Id3aFly,25,https://github.com/tklengyel/drakvuf/pull/1133#issuecomment-779136243,"Hello everyone,
this is my first ever pull request so I'm very interested in your feedback! :)
Background
During my masters thesis at FAU Erlangen-Nürnberg (FAU) I created a plugin called ""hyperbee"" that is at least part of the working name. The topic of my masters thesis is to efficiently dump the content of executable pages and analyse it with a (currently still private) tool from Politecnico di Milano (IT). Based on the detected behaviour a classifier could later determine if the page contains malicious code or not.
I was talking with @icedevml about this plugin and he encouraged me to share my code within a pull request. Luckily all of my supervisors approved this idea, so I can finally share my code with you. I am just allowed to share the code regarding the monitoring/dumping of pages and cannot include the behaviour detection code. Based on what I've seen in other plugins (memdump, ipt) I created a similar plugin:
Principle of operation


At first it creates a trap at the entry of MmAccessFault


This 1st trap's callback can get hold of the virtual address MmAccessFault shall assign as new page to. Additionally the cb adds another trap when returning from MmAccessFault and continuing with the actual code.


This 2nd trap's callback intercepts right after returning from MmAccessFault and can obtain the page frame number which was assigned to the virtual address. So we know the relation of virtual page ~ physical (guest) frame number. Furthermore this adds a new trap, whenever code is executed (instructions are fetched) from this frame.
[Now we don't care about writes or reads which for example may include code unpacking, decrypting, etc. We just wait when code is executed to dump the content of the whole page.]


When this third trap (instruction fetch from a monitored page) occurs, things like hash calculation (prevents duplicates -> speedup) and dumps are induced.
[At this point (it is marked within the code) I also analyse the regarding memory for specific behaviour. Additionally a classifier could then set a malware flag if the page contains malicious behaviour or not.]
Depending on a ""malware"" flag (predetemined by MALWARE_DEFAULT or other custom set flags in hyperbee.h: LOG_ALWAYS, DUMP_ALWAYS) the subsequent behaviour is determined:

the current data gathered through the analysis can be printed to the shell
the memory dump can be stored permanently (together with a metadata file).

Additionally the exec trap is deleted and swapped for a write trap.
[Now we don't care about execs or reads as long as the page content remains unchanged since we already dumped that. We just wait when code is modified.]


When this new write trap gets active it just deletes itself and installs a new exec trap. The callback of this exec trap is what is described in step 4.
[Thus, we are able to permanently swap traps to dump the page on an instruction fetch, whenever it has been modified since the last execution].


How to use
Hyperbee uses two command line options:
--hyperbee-dump-dir : required, defines the path to store the dumps within a ""dumps"" folder
--hyperbee-filter-executable : optional, discards all pages which vad node does not belong to a binary whose absolute path does not contain this name. Therefore, you can filter for paths or filenames, etc.
sudo ./src/drakvuf -r /root/win10.json -d win10 -a hyperbee --hyperbee-dump-dir /tmp/ --hyperbee-filter-executable RandomExample
Output
Example output of the metafile:
{ ""TimeStamp"": ""1613056257.402199"", ""PID"": 5696, ""PPID"": 3032, ""TID"": 3748, ""UserID"": 1, ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""EventUID"": 43645, ""CR3"": ""0x99a65001"", ""PageVA"": ""0x7ff77176e000"", ""VADBase"": ""0x7ff771760000"", ""VADEnd"": ""0x7ff771782fff"", ""VADName"": ""\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""DumpSize"": ""0x1000"", ""DumpFile"": ""\/tmp\/dumps\/7ff77176e000_31287c55df232436.page"", ""SHA256"": ""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"", ""DumpID"": 15, ""TrapPA"": ""0x70b828a4"", ""GFN"": ""0x70b82"" }
Example output of the commandline (same analysis):
{""Plugin"":""execframe"",""TimeStamp"":""1613056257.402199"",""PID"":5696,""PPID"":3032,""TID"":3748,""UserName"":""SessionID"",""UserId"":1,""ProcessName"":""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""Method"":""execute_faulted_cb"",""EventUID"":""0xaa7d"",""CR3"":""0x99a65001"",""PageVA"":""0x7ff77176e000"",""VADBase"":""0x7ff771760000"",""VADEnd"":""0x7ff771782fff"",""VADName"":""\\Users\\master\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""DumpSize"":4096,""DumpFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.page"",""SHA256"":""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"",""DumpID"":15,""MetaFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.metafile"",""TrapPA"":""0x70b828a4"",""GFN"":""0x70b82""} 
Additional information
You may wonder why this plugin is called hyperbee. This is because of the name of the behaviour detection tool (from Politecnico di Milano) I integrated, which is referring to ""bees"". Since I call this tool for each page dump and thus, very often, it reminded me of a very diligent and busy ""bee"". Thus the name ""hyperbee"".
There are two other flags in hyperbee.h for two ideas which are rather experimental (or need refinement):

DUMP_VAD: Lets you dump the whole VAD node instead of just the page. The problem I saw with it is, that the vad content (as collection of pages) is loaded dynamically on access. On the one hand hashing of vad nodes is more or less not reasonable since whenever a new page is loaded within the vad node the whole node is dumped and leads to another hash. On the other hand by being able to see which parts within the vad are loaded/accessed/executed after another might be interesting for malware analysis. The page mode is quicker, as it just has to hash 4096 bytes each time.
IGNORE_SYSTEM_DLL If we assume that the system's integrity is ensured turning on this flags discards the dump of all pages/vads whose vad name contains either System32 and SysWOW64. This gave me a major speedup since my PC is rather old and I was not interested in calls within the common Windows libraries/executables.

Feel free to share any questions and suggestions!
Klaus
Co-authored-by: Michał Leszczyński michal.leszczynski@cert.pl","Since all test seem to work now (thank you @icedevml  for retesting) I was thinking of next steps:
Do you want me to rename this plugin? The name ""hyperbee"" arises from my masterthesis but might be not that meaningful within the typical drakvuf context. It might be named:

execmon
executingmonitor
exectracer
execdetector
execpagedump

What do you think?
And what else has to be done prior to merging?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1133,2021-02-11T15:25:16Z,2021-02-19T13:26:14Z,2021-03-10T15:43:48Z,MERGED,True,1830,1,9,https://github.com/Id3aFly,Hyperbee plugin,48,[],https://github.com/tklengyel/drakvuf/pull/1133,https://github.com/icedevml,26,https://github.com/tklengyel/drakvuf/pull/1133#issuecomment-779170187,"Hello everyone,
this is my first ever pull request so I'm very interested in your feedback! :)
Background
During my masters thesis at FAU Erlangen-Nürnberg (FAU) I created a plugin called ""hyperbee"" that is at least part of the working name. The topic of my masters thesis is to efficiently dump the content of executable pages and analyse it with a (currently still private) tool from Politecnico di Milano (IT). Based on the detected behaviour a classifier could later determine if the page contains malicious code or not.
I was talking with @icedevml about this plugin and he encouraged me to share my code within a pull request. Luckily all of my supervisors approved this idea, so I can finally share my code with you. I am just allowed to share the code regarding the monitoring/dumping of pages and cannot include the behaviour detection code. Based on what I've seen in other plugins (memdump, ipt) I created a similar plugin:
Principle of operation


At first it creates a trap at the entry of MmAccessFault


This 1st trap's callback can get hold of the virtual address MmAccessFault shall assign as new page to. Additionally the cb adds another trap when returning from MmAccessFault and continuing with the actual code.


This 2nd trap's callback intercepts right after returning from MmAccessFault and can obtain the page frame number which was assigned to the virtual address. So we know the relation of virtual page ~ physical (guest) frame number. Furthermore this adds a new trap, whenever code is executed (instructions are fetched) from this frame.
[Now we don't care about writes or reads which for example may include code unpacking, decrypting, etc. We just wait when code is executed to dump the content of the whole page.]


When this third trap (instruction fetch from a monitored page) occurs, things like hash calculation (prevents duplicates -> speedup) and dumps are induced.
[At this point (it is marked within the code) I also analyse the regarding memory for specific behaviour. Additionally a classifier could then set a malware flag if the page contains malicious behaviour or not.]
Depending on a ""malware"" flag (predetemined by MALWARE_DEFAULT or other custom set flags in hyperbee.h: LOG_ALWAYS, DUMP_ALWAYS) the subsequent behaviour is determined:

the current data gathered through the analysis can be printed to the shell
the memory dump can be stored permanently (together with a metadata file).

Additionally the exec trap is deleted and swapped for a write trap.
[Now we don't care about execs or reads as long as the page content remains unchanged since we already dumped that. We just wait when code is modified.]


When this new write trap gets active it just deletes itself and installs a new exec trap. The callback of this exec trap is what is described in step 4.
[Thus, we are able to permanently swap traps to dump the page on an instruction fetch, whenever it has been modified since the last execution].


How to use
Hyperbee uses two command line options:
--hyperbee-dump-dir : required, defines the path to store the dumps within a ""dumps"" folder
--hyperbee-filter-executable : optional, discards all pages which vad node does not belong to a binary whose absolute path does not contain this name. Therefore, you can filter for paths or filenames, etc.
sudo ./src/drakvuf -r /root/win10.json -d win10 -a hyperbee --hyperbee-dump-dir /tmp/ --hyperbee-filter-executable RandomExample
Output
Example output of the metafile:
{ ""TimeStamp"": ""1613056257.402199"", ""PID"": 5696, ""PPID"": 3032, ""TID"": 3748, ""UserID"": 1, ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""EventUID"": 43645, ""CR3"": ""0x99a65001"", ""PageVA"": ""0x7ff77176e000"", ""VADBase"": ""0x7ff771760000"", ""VADEnd"": ""0x7ff771782fff"", ""VADName"": ""\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""DumpSize"": ""0x1000"", ""DumpFile"": ""\/tmp\/dumps\/7ff77176e000_31287c55df232436.page"", ""SHA256"": ""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"", ""DumpID"": 15, ""TrapPA"": ""0x70b828a4"", ""GFN"": ""0x70b82"" }
Example output of the commandline (same analysis):
{""Plugin"":""execframe"",""TimeStamp"":""1613056257.402199"",""PID"":5696,""PPID"":3032,""TID"":3748,""UserName"":""SessionID"",""UserId"":1,""ProcessName"":""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""Method"":""execute_faulted_cb"",""EventUID"":""0xaa7d"",""CR3"":""0x99a65001"",""PageVA"":""0x7ff77176e000"",""VADBase"":""0x7ff771760000"",""VADEnd"":""0x7ff771782fff"",""VADName"":""\\Users\\master\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""DumpSize"":4096,""DumpFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.page"",""SHA256"":""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"",""DumpID"":15,""MetaFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.metafile"",""TrapPA"":""0x70b828a4"",""GFN"":""0x70b82""} 
Additional information
You may wonder why this plugin is called hyperbee. This is because of the name of the behaviour detection tool (from Politecnico di Milano) I integrated, which is referring to ""bees"". Since I call this tool for each page dump and thus, very often, it reminded me of a very diligent and busy ""bee"". Thus the name ""hyperbee"".
There are two other flags in hyperbee.h for two ideas which are rather experimental (or need refinement):

DUMP_VAD: Lets you dump the whole VAD node instead of just the page. The problem I saw with it is, that the vad content (as collection of pages) is loaded dynamically on access. On the one hand hashing of vad nodes is more or less not reasonable since whenever a new page is loaded within the vad node the whole node is dumped and leads to another hash. On the other hand by being able to see which parts within the vad are loaded/accessed/executed after another might be interesting for malware analysis. The page mode is quicker, as it just has to hash 4096 bytes each time.
IGNORE_SYSTEM_DLL If we assume that the system's integrity is ensured turning on this flags discards the dump of all pages/vads whose vad name contains either System32 and SysWOW64. This gave me a major speedup since my PC is rather old and I was not interested in calls within the common Windows libraries/executables.

Feel free to share any questions and suggestions!
Klaus
Co-authored-by: Michał Leszczyński michal.leszczynski@cert.pl","I want to check one more thing, hold on.
Regarding hyperbee, personally I think the name is cool and I don't have objections :P",True,{'THUMBS_UP': ['https://github.com/Id3aFly']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1133,2021-02-11T15:25:16Z,2021-02-19T13:26:14Z,2021-03-10T15:43:48Z,MERGED,True,1830,1,9,https://github.com/Id3aFly,Hyperbee plugin,48,[],https://github.com/tklengyel/drakvuf/pull/1133,https://github.com/icedevml,27,https://github.com/tklengyel/drakvuf/pull/1133#issuecomment-779182743,"Hello everyone,
this is my first ever pull request so I'm very interested in your feedback! :)
Background
During my masters thesis at FAU Erlangen-Nürnberg (FAU) I created a plugin called ""hyperbee"" that is at least part of the working name. The topic of my masters thesis is to efficiently dump the content of executable pages and analyse it with a (currently still private) tool from Politecnico di Milano (IT). Based on the detected behaviour a classifier could later determine if the page contains malicious code or not.
I was talking with @icedevml about this plugin and he encouraged me to share my code within a pull request. Luckily all of my supervisors approved this idea, so I can finally share my code with you. I am just allowed to share the code regarding the monitoring/dumping of pages and cannot include the behaviour detection code. Based on what I've seen in other plugins (memdump, ipt) I created a similar plugin:
Principle of operation


At first it creates a trap at the entry of MmAccessFault


This 1st trap's callback can get hold of the virtual address MmAccessFault shall assign as new page to. Additionally the cb adds another trap when returning from MmAccessFault and continuing with the actual code.


This 2nd trap's callback intercepts right after returning from MmAccessFault and can obtain the page frame number which was assigned to the virtual address. So we know the relation of virtual page ~ physical (guest) frame number. Furthermore this adds a new trap, whenever code is executed (instructions are fetched) from this frame.
[Now we don't care about writes or reads which for example may include code unpacking, decrypting, etc. We just wait when code is executed to dump the content of the whole page.]


When this third trap (instruction fetch from a monitored page) occurs, things like hash calculation (prevents duplicates -> speedup) and dumps are induced.
[At this point (it is marked within the code) I also analyse the regarding memory for specific behaviour. Additionally a classifier could then set a malware flag if the page contains malicious behaviour or not.]
Depending on a ""malware"" flag (predetemined by MALWARE_DEFAULT or other custom set flags in hyperbee.h: LOG_ALWAYS, DUMP_ALWAYS) the subsequent behaviour is determined:

the current data gathered through the analysis can be printed to the shell
the memory dump can be stored permanently (together with a metadata file).

Additionally the exec trap is deleted and swapped for a write trap.
[Now we don't care about execs or reads as long as the page content remains unchanged since we already dumped that. We just wait when code is modified.]


When this new write trap gets active it just deletes itself and installs a new exec trap. The callback of this exec trap is what is described in step 4.
[Thus, we are able to permanently swap traps to dump the page on an instruction fetch, whenever it has been modified since the last execution].


How to use
Hyperbee uses two command line options:
--hyperbee-dump-dir : required, defines the path to store the dumps within a ""dumps"" folder
--hyperbee-filter-executable : optional, discards all pages which vad node does not belong to a binary whose absolute path does not contain this name. Therefore, you can filter for paths or filenames, etc.
sudo ./src/drakvuf -r /root/win10.json -d win10 -a hyperbee --hyperbee-dump-dir /tmp/ --hyperbee-filter-executable RandomExample
Output
Example output of the metafile:
{ ""TimeStamp"": ""1613056257.402199"", ""PID"": 5696, ""PPID"": 3032, ""TID"": 3748, ""UserID"": 1, ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""EventUID"": 43645, ""CR3"": ""0x99a65001"", ""PageVA"": ""0x7ff77176e000"", ""VADBase"": ""0x7ff771760000"", ""VADEnd"": ""0x7ff771782fff"", ""VADName"": ""\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""DumpSize"": ""0x1000"", ""DumpFile"": ""\/tmp\/dumps\/7ff77176e000_31287c55df232436.page"", ""SHA256"": ""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"", ""DumpID"": 15, ""TrapPA"": ""0x70b828a4"", ""GFN"": ""0x70b82"" }
Example output of the commandline (same analysis):
{""Plugin"":""execframe"",""TimeStamp"":""1613056257.402199"",""PID"":5696,""PPID"":3032,""TID"":3748,""UserName"":""SessionID"",""UserId"":1,""ProcessName"":""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""Method"":""execute_faulted_cb"",""EventUID"":""0xaa7d"",""CR3"":""0x99a65001"",""PageVA"":""0x7ff77176e000"",""VADBase"":""0x7ff771760000"",""VADEnd"":""0x7ff771782fff"",""VADName"":""\\Users\\master\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""DumpSize"":4096,""DumpFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.page"",""SHA256"":""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"",""DumpID"":15,""MetaFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.metafile"",""TrapPA"":""0x70b828a4"",""GFN"":""0x70b82""} 
Additional information
You may wonder why this plugin is called hyperbee. This is because of the name of the behaviour detection tool (from Politecnico di Milano) I integrated, which is referring to ""bees"". Since I call this tool for each page dump and thus, very often, it reminded me of a very diligent and busy ""bee"". Thus the name ""hyperbee"".
There are two other flags in hyperbee.h for two ideas which are rather experimental (or need refinement):

DUMP_VAD: Lets you dump the whole VAD node instead of just the page. The problem I saw with it is, that the vad content (as collection of pages) is loaded dynamically on access. On the one hand hashing of vad nodes is more or less not reasonable since whenever a new page is loaded within the vad node the whole node is dumped and leads to another hash. On the other hand by being able to see which parts within the vad are loaded/accessed/executed after another might be interesting for malware analysis. The page mode is quicker, as it just has to hash 4096 bytes each time.
IGNORE_SYSTEM_DLL If we assume that the system's integrity is ensured turning on this flags discards the dump of all pages/vads whose vad name contains either System32 and SysWOW64. This gave me a major speedup since my PC is rather old and I was not interested in calls within the common Windows libraries/executables.

Feel free to share any questions and suggestions!
Klaus
Co-authored-by: Michał Leszczyński michal.leszczynski@cert.pl","Ok. I wanted to run the plugin through DRAKVUF CI with such patch:
ea4825f
because by default the plugin is practically no-op, so I wanted to make this extra run to actually let it execute on DRAKVUF CI.
Seems like all tests passed, Valgrind no longer finds any issues:
https://ci.drakvuf.com/job/DRAKVUF-PR/146/console",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1133,2021-02-11T15:25:16Z,2021-02-19T13:26:14Z,2021-03-10T15:43:48Z,MERGED,True,1830,1,9,https://github.com/Id3aFly,Hyperbee plugin,48,[],https://github.com/tklengyel/drakvuf/pull/1133,https://github.com/icedevml,28,https://github.com/tklengyel/drakvuf/pull/1133#issuecomment-779195779,"Hello everyone,
this is my first ever pull request so I'm very interested in your feedback! :)
Background
During my masters thesis at FAU Erlangen-Nürnberg (FAU) I created a plugin called ""hyperbee"" that is at least part of the working name. The topic of my masters thesis is to efficiently dump the content of executable pages and analyse it with a (currently still private) tool from Politecnico di Milano (IT). Based on the detected behaviour a classifier could later determine if the page contains malicious code or not.
I was talking with @icedevml about this plugin and he encouraged me to share my code within a pull request. Luckily all of my supervisors approved this idea, so I can finally share my code with you. I am just allowed to share the code regarding the monitoring/dumping of pages and cannot include the behaviour detection code. Based on what I've seen in other plugins (memdump, ipt) I created a similar plugin:
Principle of operation


At first it creates a trap at the entry of MmAccessFault


This 1st trap's callback can get hold of the virtual address MmAccessFault shall assign as new page to. Additionally the cb adds another trap when returning from MmAccessFault and continuing with the actual code.


This 2nd trap's callback intercepts right after returning from MmAccessFault and can obtain the page frame number which was assigned to the virtual address. So we know the relation of virtual page ~ physical (guest) frame number. Furthermore this adds a new trap, whenever code is executed (instructions are fetched) from this frame.
[Now we don't care about writes or reads which for example may include code unpacking, decrypting, etc. We just wait when code is executed to dump the content of the whole page.]


When this third trap (instruction fetch from a monitored page) occurs, things like hash calculation (prevents duplicates -> speedup) and dumps are induced.
[At this point (it is marked within the code) I also analyse the regarding memory for specific behaviour. Additionally a classifier could then set a malware flag if the page contains malicious behaviour or not.]
Depending on a ""malware"" flag (predetemined by MALWARE_DEFAULT or other custom set flags in hyperbee.h: LOG_ALWAYS, DUMP_ALWAYS) the subsequent behaviour is determined:

the current data gathered through the analysis can be printed to the shell
the memory dump can be stored permanently (together with a metadata file).

Additionally the exec trap is deleted and swapped for a write trap.
[Now we don't care about execs or reads as long as the page content remains unchanged since we already dumped that. We just wait when code is modified.]


When this new write trap gets active it just deletes itself and installs a new exec trap. The callback of this exec trap is what is described in step 4.
[Thus, we are able to permanently swap traps to dump the page on an instruction fetch, whenever it has been modified since the last execution].


How to use
Hyperbee uses two command line options:
--hyperbee-dump-dir : required, defines the path to store the dumps within a ""dumps"" folder
--hyperbee-filter-executable : optional, discards all pages which vad node does not belong to a binary whose absolute path does not contain this name. Therefore, you can filter for paths or filenames, etc.
sudo ./src/drakvuf -r /root/win10.json -d win10 -a hyperbee --hyperbee-dump-dir /tmp/ --hyperbee-filter-executable RandomExample
Output
Example output of the metafile:
{ ""TimeStamp"": ""1613056257.402199"", ""PID"": 5696, ""PPID"": 3032, ""TID"": 3748, ""UserID"": 1, ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""EventUID"": 43645, ""CR3"": ""0x99a65001"", ""PageVA"": ""0x7ff77176e000"", ""VADBase"": ""0x7ff771760000"", ""VADEnd"": ""0x7ff771782fff"", ""VADName"": ""\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""DumpSize"": ""0x1000"", ""DumpFile"": ""\/tmp\/dumps\/7ff77176e000_31287c55df232436.page"", ""SHA256"": ""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"", ""DumpID"": 15, ""TrapPA"": ""0x70b828a4"", ""GFN"": ""0x70b82"" }
Example output of the commandline (same analysis):
{""Plugin"":""execframe"",""TimeStamp"":""1613056257.402199"",""PID"":5696,""PPID"":3032,""TID"":3748,""UserName"":""SessionID"",""UserId"":1,""ProcessName"":""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""Method"":""execute_faulted_cb"",""EventUID"":""0xaa7d"",""CR3"":""0x99a65001"",""PageVA"":""0x7ff77176e000"",""VADBase"":""0x7ff771760000"",""VADEnd"":""0x7ff771782fff"",""VADName"":""\\Users\\master\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""DumpSize"":4096,""DumpFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.page"",""SHA256"":""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"",""DumpID"":15,""MetaFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.metafile"",""TrapPA"":""0x70b828a4"",""GFN"":""0x70b82""} 
Additional information
You may wonder why this plugin is called hyperbee. This is because of the name of the behaviour detection tool (from Politecnico di Milano) I integrated, which is referring to ""bees"". Since I call this tool for each page dump and thus, very often, it reminded me of a very diligent and busy ""bee"". Thus the name ""hyperbee"".
There are two other flags in hyperbee.h for two ideas which are rather experimental (or need refinement):

DUMP_VAD: Lets you dump the whole VAD node instead of just the page. The problem I saw with it is, that the vad content (as collection of pages) is loaded dynamically on access. On the one hand hashing of vad nodes is more or less not reasonable since whenever a new page is loaded within the vad node the whole node is dumped and leads to another hash. On the other hand by being able to see which parts within the vad are loaded/accessed/executed after another might be interesting for malware analysis. The page mode is quicker, as it just has to hash 4096 bytes each time.
IGNORE_SYSTEM_DLL If we assume that the system's integrity is ensured turning on this flags discards the dump of all pages/vads whose vad name contains either System32 and SysWOW64. This gave me a major speedup since my PC is rather old and I was not interested in calls within the common Windows libraries/executables.

Feel free to share any questions and suggestions!
Klaus
Co-authored-by: Michał Leszczyński michal.leszczynski@cert.pl","@tklengyel When merging, please add
Co-authored-by: Michał Leszczyński <michal.leszczynski@cert.pl>

badge to the PR commit message. This was agreed with @Id3aFly due to the fact this PR is an iterative improvement originally based on #1000.",True,"{'THUMBS_UP': ['https://github.com/Id3aFly', 'https://github.com/tklengyel']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1133,2021-02-11T15:25:16Z,2021-02-19T13:26:14Z,2021-03-10T15:43:48Z,MERGED,True,1830,1,9,https://github.com/Id3aFly,Hyperbee plugin,48,[],https://github.com/tklengyel/drakvuf/pull/1133,https://github.com/icedevml,29,https://github.com/tklengyel/drakvuf/pull/1133#issuecomment-781563010,"Hello everyone,
this is my first ever pull request so I'm very interested in your feedback! :)
Background
During my masters thesis at FAU Erlangen-Nürnberg (FAU) I created a plugin called ""hyperbee"" that is at least part of the working name. The topic of my masters thesis is to efficiently dump the content of executable pages and analyse it with a (currently still private) tool from Politecnico di Milano (IT). Based on the detected behaviour a classifier could later determine if the page contains malicious code or not.
I was talking with @icedevml about this plugin and he encouraged me to share my code within a pull request. Luckily all of my supervisors approved this idea, so I can finally share my code with you. I am just allowed to share the code regarding the monitoring/dumping of pages and cannot include the behaviour detection code. Based on what I've seen in other plugins (memdump, ipt) I created a similar plugin:
Principle of operation


At first it creates a trap at the entry of MmAccessFault


This 1st trap's callback can get hold of the virtual address MmAccessFault shall assign as new page to. Additionally the cb adds another trap when returning from MmAccessFault and continuing with the actual code.


This 2nd trap's callback intercepts right after returning from MmAccessFault and can obtain the page frame number which was assigned to the virtual address. So we know the relation of virtual page ~ physical (guest) frame number. Furthermore this adds a new trap, whenever code is executed (instructions are fetched) from this frame.
[Now we don't care about writes or reads which for example may include code unpacking, decrypting, etc. We just wait when code is executed to dump the content of the whole page.]


When this third trap (instruction fetch from a monitored page) occurs, things like hash calculation (prevents duplicates -> speedup) and dumps are induced.
[At this point (it is marked within the code) I also analyse the regarding memory for specific behaviour. Additionally a classifier could then set a malware flag if the page contains malicious behaviour or not.]
Depending on a ""malware"" flag (predetemined by MALWARE_DEFAULT or other custom set flags in hyperbee.h: LOG_ALWAYS, DUMP_ALWAYS) the subsequent behaviour is determined:

the current data gathered through the analysis can be printed to the shell
the memory dump can be stored permanently (together with a metadata file).

Additionally the exec trap is deleted and swapped for a write trap.
[Now we don't care about execs or reads as long as the page content remains unchanged since we already dumped that. We just wait when code is modified.]


When this new write trap gets active it just deletes itself and installs a new exec trap. The callback of this exec trap is what is described in step 4.
[Thus, we are able to permanently swap traps to dump the page on an instruction fetch, whenever it has been modified since the last execution].


How to use
Hyperbee uses two command line options:
--hyperbee-dump-dir : required, defines the path to store the dumps within a ""dumps"" folder
--hyperbee-filter-executable : optional, discards all pages which vad node does not belong to a binary whose absolute path does not contain this name. Therefore, you can filter for paths or filenames, etc.
sudo ./src/drakvuf -r /root/win10.json -d win10 -a hyperbee --hyperbee-dump-dir /tmp/ --hyperbee-filter-executable RandomExample
Output
Example output of the metafile:
{ ""TimeStamp"": ""1613056257.402199"", ""PID"": 5696, ""PPID"": 3032, ""TID"": 3748, ""UserID"": 1, ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""EventUID"": 43645, ""CR3"": ""0x99a65001"", ""PageVA"": ""0x7ff77176e000"", ""VADBase"": ""0x7ff771760000"", ""VADEnd"": ""0x7ff771782fff"", ""VADName"": ""\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""DumpSize"": ""0x1000"", ""DumpFile"": ""\/tmp\/dumps\/7ff77176e000_31287c55df232436.page"", ""SHA256"": ""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"", ""DumpID"": 15, ""TrapPA"": ""0x70b828a4"", ""GFN"": ""0x70b82"" }
Example output of the commandline (same analysis):
{""Plugin"":""execframe"",""TimeStamp"":""1613056257.402199"",""PID"":5696,""PPID"":3032,""TID"":3748,""UserName"":""SessionID"",""UserId"":1,""ProcessName"":""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""Method"":""execute_faulted_cb"",""EventUID"":""0xaa7d"",""CR3"":""0x99a65001"",""PageVA"":""0x7ff77176e000"",""VADBase"":""0x7ff771760000"",""VADEnd"":""0x7ff771782fff"",""VADName"":""\\Users\\master\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""DumpSize"":4096,""DumpFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.page"",""SHA256"":""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"",""DumpID"":15,""MetaFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.metafile"",""TrapPA"":""0x70b828a4"",""GFN"":""0x70b82""} 
Additional information
You may wonder why this plugin is called hyperbee. This is because of the name of the behaviour detection tool (from Politecnico di Milano) I integrated, which is referring to ""bees"". Since I call this tool for each page dump and thus, very often, it reminded me of a very diligent and busy ""bee"". Thus the name ""hyperbee"".
There are two other flags in hyperbee.h for two ideas which are rather experimental (or need refinement):

DUMP_VAD: Lets you dump the whole VAD node instead of just the page. The problem I saw with it is, that the vad content (as collection of pages) is loaded dynamically on access. On the one hand hashing of vad nodes is more or less not reasonable since whenever a new page is loaded within the vad node the whole node is dumped and leads to another hash. On the other hand by being able to see which parts within the vad are loaded/accessed/executed after another might be interesting for malware analysis. The page mode is quicker, as it just has to hash 4096 bytes each time.
IGNORE_SYSTEM_DLL If we assume that the system's integrity is ensured turning on this flags discards the dump of all pages/vads whose vad name contains either System32 and SysWOW64. This gave me a major speedup since my PC is rather old and I was not interested in calls within the common Windows libraries/executables.

Feel free to share any questions and suggestions!
Klaus
Co-authored-by: Michał Leszczyński michal.leszczynski@cert.pl",@drakvuf-jenkins Test this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1133,2021-02-11T15:25:16Z,2021-02-19T13:26:14Z,2021-03-10T15:43:48Z,MERGED,True,1830,1,9,https://github.com/Id3aFly,Hyperbee plugin,48,[],https://github.com/tklengyel/drakvuf/pull/1133,https://github.com/Id3aFly,30,https://github.com/tklengyel/drakvuf/pull/1133#issuecomment-781635780,"Hello everyone,
this is my first ever pull request so I'm very interested in your feedback! :)
Background
During my masters thesis at FAU Erlangen-Nürnberg (FAU) I created a plugin called ""hyperbee"" that is at least part of the working name. The topic of my masters thesis is to efficiently dump the content of executable pages and analyse it with a (currently still private) tool from Politecnico di Milano (IT). Based on the detected behaviour a classifier could later determine if the page contains malicious code or not.
I was talking with @icedevml about this plugin and he encouraged me to share my code within a pull request. Luckily all of my supervisors approved this idea, so I can finally share my code with you. I am just allowed to share the code regarding the monitoring/dumping of pages and cannot include the behaviour detection code. Based on what I've seen in other plugins (memdump, ipt) I created a similar plugin:
Principle of operation


At first it creates a trap at the entry of MmAccessFault


This 1st trap's callback can get hold of the virtual address MmAccessFault shall assign as new page to. Additionally the cb adds another trap when returning from MmAccessFault and continuing with the actual code.


This 2nd trap's callback intercepts right after returning from MmAccessFault and can obtain the page frame number which was assigned to the virtual address. So we know the relation of virtual page ~ physical (guest) frame number. Furthermore this adds a new trap, whenever code is executed (instructions are fetched) from this frame.
[Now we don't care about writes or reads which for example may include code unpacking, decrypting, etc. We just wait when code is executed to dump the content of the whole page.]


When this third trap (instruction fetch from a monitored page) occurs, things like hash calculation (prevents duplicates -> speedup) and dumps are induced.
[At this point (it is marked within the code) I also analyse the regarding memory for specific behaviour. Additionally a classifier could then set a malware flag if the page contains malicious behaviour or not.]
Depending on a ""malware"" flag (predetemined by MALWARE_DEFAULT or other custom set flags in hyperbee.h: LOG_ALWAYS, DUMP_ALWAYS) the subsequent behaviour is determined:

the current data gathered through the analysis can be printed to the shell
the memory dump can be stored permanently (together with a metadata file).

Additionally the exec trap is deleted and swapped for a write trap.
[Now we don't care about execs or reads as long as the page content remains unchanged since we already dumped that. We just wait when code is modified.]


When this new write trap gets active it just deletes itself and installs a new exec trap. The callback of this exec trap is what is described in step 4.
[Thus, we are able to permanently swap traps to dump the page on an instruction fetch, whenever it has been modified since the last execution].


How to use
Hyperbee uses two command line options:
--hyperbee-dump-dir : required, defines the path to store the dumps within a ""dumps"" folder
--hyperbee-filter-executable : optional, discards all pages which vad node does not belong to a binary whose absolute path does not contain this name. Therefore, you can filter for paths or filenames, etc.
sudo ./src/drakvuf -r /root/win10.json -d win10 -a hyperbee --hyperbee-dump-dir /tmp/ --hyperbee-filter-executable RandomExample
Output
Example output of the metafile:
{ ""TimeStamp"": ""1613056257.402199"", ""PID"": 5696, ""PPID"": 3032, ""TID"": 3748, ""UserID"": 1, ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""EventUID"": 43645, ""CR3"": ""0x99a65001"", ""PageVA"": ""0x7ff77176e000"", ""VADBase"": ""0x7ff771760000"", ""VADEnd"": ""0x7ff771782fff"", ""VADName"": ""\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""DumpSize"": ""0x1000"", ""DumpFile"": ""\/tmp\/dumps\/7ff77176e000_31287c55df232436.page"", ""SHA256"": ""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"", ""DumpID"": 15, ""TrapPA"": ""0x70b828a4"", ""GFN"": ""0x70b82"" }
Example output of the commandline (same analysis):
{""Plugin"":""execframe"",""TimeStamp"":""1613056257.402199"",""PID"":5696,""PPID"":3032,""TID"":3748,""UserName"":""SessionID"",""UserId"":1,""ProcessName"":""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""Method"":""execute_faulted_cb"",""EventUID"":""0xaa7d"",""CR3"":""0x99a65001"",""PageVA"":""0x7ff77176e000"",""VADBase"":""0x7ff771760000"",""VADEnd"":""0x7ff771782fff"",""VADName"":""\\Users\\master\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""DumpSize"":4096,""DumpFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.page"",""SHA256"":""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"",""DumpID"":15,""MetaFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.metafile"",""TrapPA"":""0x70b828a4"",""GFN"":""0x70b82""} 
Additional information
You may wonder why this plugin is called hyperbee. This is because of the name of the behaviour detection tool (from Politecnico di Milano) I integrated, which is referring to ""bees"". Since I call this tool for each page dump and thus, very often, it reminded me of a very diligent and busy ""bee"". Thus the name ""hyperbee"".
There are two other flags in hyperbee.h for two ideas which are rather experimental (or need refinement):

DUMP_VAD: Lets you dump the whole VAD node instead of just the page. The problem I saw with it is, that the vad content (as collection of pages) is loaded dynamically on access. On the one hand hashing of vad nodes is more or less not reasonable since whenever a new page is loaded within the vad node the whole node is dumped and leads to another hash. On the other hand by being able to see which parts within the vad are loaded/accessed/executed after another might be interesting for malware analysis. The page mode is quicker, as it just has to hash 4096 bytes each time.
IGNORE_SYSTEM_DLL If we assume that the system's integrity is ensured turning on this flags discards the dump of all pages/vads whose vad name contains either System32 and SysWOW64. This gave me a major speedup since my PC is rather old and I was not interested in calls within the common Windows libraries/executables.

Feel free to share any questions and suggestions!
Klaus
Co-authored-by: Michał Leszczyński michal.leszczynski@cert.pl","// wearing my ""C++ drakvuf"" hat
I'd love to purge all the goto and glib usages and replace them with stdlib to introduce static types & stuff.
// wearing my ""fellow drakvuf plugin creator"" hat
This PR already has 116 comments and all the things I've noted from me are small stylistic changes, so +1 from me.

If you are interested in you can of course modify that. I don't mind and if the code is more stable / better, etc why not! :) Thanks for your advises! It was quite good and I learned new stuff.",True,{'HEART': ['https://github.com/BonusPlay']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1133,2021-02-11T15:25:16Z,2021-02-19T13:26:14Z,2021-03-10T15:43:48Z,MERGED,True,1830,1,9,https://github.com/Id3aFly,Hyperbee plugin,48,[],https://github.com/tklengyel/drakvuf/pull/1133,https://github.com/tklengyel,31,https://github.com/tklengyel/drakvuf/pull/1133#issuecomment-781722309,"Hello everyone,
this is my first ever pull request so I'm very interested in your feedback! :)
Background
During my masters thesis at FAU Erlangen-Nürnberg (FAU) I created a plugin called ""hyperbee"" that is at least part of the working name. The topic of my masters thesis is to efficiently dump the content of executable pages and analyse it with a (currently still private) tool from Politecnico di Milano (IT). Based on the detected behaviour a classifier could later determine if the page contains malicious code or not.
I was talking with @icedevml about this plugin and he encouraged me to share my code within a pull request. Luckily all of my supervisors approved this idea, so I can finally share my code with you. I am just allowed to share the code regarding the monitoring/dumping of pages and cannot include the behaviour detection code. Based on what I've seen in other plugins (memdump, ipt) I created a similar plugin:
Principle of operation


At first it creates a trap at the entry of MmAccessFault


This 1st trap's callback can get hold of the virtual address MmAccessFault shall assign as new page to. Additionally the cb adds another trap when returning from MmAccessFault and continuing with the actual code.


This 2nd trap's callback intercepts right after returning from MmAccessFault and can obtain the page frame number which was assigned to the virtual address. So we know the relation of virtual page ~ physical (guest) frame number. Furthermore this adds a new trap, whenever code is executed (instructions are fetched) from this frame.
[Now we don't care about writes or reads which for example may include code unpacking, decrypting, etc. We just wait when code is executed to dump the content of the whole page.]


When this third trap (instruction fetch from a monitored page) occurs, things like hash calculation (prevents duplicates -> speedup) and dumps are induced.
[At this point (it is marked within the code) I also analyse the regarding memory for specific behaviour. Additionally a classifier could then set a malware flag if the page contains malicious behaviour or not.]
Depending on a ""malware"" flag (predetemined by MALWARE_DEFAULT or other custom set flags in hyperbee.h: LOG_ALWAYS, DUMP_ALWAYS) the subsequent behaviour is determined:

the current data gathered through the analysis can be printed to the shell
the memory dump can be stored permanently (together with a metadata file).

Additionally the exec trap is deleted and swapped for a write trap.
[Now we don't care about execs or reads as long as the page content remains unchanged since we already dumped that. We just wait when code is modified.]


When this new write trap gets active it just deletes itself and installs a new exec trap. The callback of this exec trap is what is described in step 4.
[Thus, we are able to permanently swap traps to dump the page on an instruction fetch, whenever it has been modified since the last execution].


How to use
Hyperbee uses two command line options:
--hyperbee-dump-dir : required, defines the path to store the dumps within a ""dumps"" folder
--hyperbee-filter-executable : optional, discards all pages which vad node does not belong to a binary whose absolute path does not contain this name. Therefore, you can filter for paths or filenames, etc.
sudo ./src/drakvuf -r /root/win10.json -d win10 -a hyperbee --hyperbee-dump-dir /tmp/ --hyperbee-filter-executable RandomExample
Output
Example output of the metafile:
{ ""TimeStamp"": ""1613056257.402199"", ""PID"": 5696, ""PPID"": 3032, ""TID"": 3748, ""UserID"": 1, ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""EventUID"": 43645, ""CR3"": ""0x99a65001"", ""PageVA"": ""0x7ff77176e000"", ""VADBase"": ""0x7ff771760000"", ""VADEnd"": ""0x7ff771782fff"", ""VADName"": ""\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""DumpSize"": ""0x1000"", ""DumpFile"": ""\/tmp\/dumps\/7ff77176e000_31287c55df232436.page"", ""SHA256"": ""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"", ""DumpID"": 15, ""TrapPA"": ""0x70b828a4"", ""GFN"": ""0x70b82"" }
Example output of the commandline (same analysis):
{""Plugin"":""execframe"",""TimeStamp"":""1613056257.402199"",""PID"":5696,""PPID"":3032,""TID"":3748,""UserName"":""SessionID"",""UserId"":1,""ProcessName"":""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""Method"":""execute_faulted_cb"",""EventUID"":""0xaa7d"",""CR3"":""0x99a65001"",""PageVA"":""0x7ff77176e000"",""VADBase"":""0x7ff771760000"",""VADEnd"":""0x7ff771782fff"",""VADName"":""\\Users\\master\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""DumpSize"":4096,""DumpFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.page"",""SHA256"":""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"",""DumpID"":15,""MetaFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.metafile"",""TrapPA"":""0x70b828a4"",""GFN"":""0x70b82""} 
Additional information
You may wonder why this plugin is called hyperbee. This is because of the name of the behaviour detection tool (from Politecnico di Milano) I integrated, which is referring to ""bees"". Since I call this tool for each page dump and thus, very often, it reminded me of a very diligent and busy ""bee"". Thus the name ""hyperbee"".
There are two other flags in hyperbee.h for two ideas which are rather experimental (or need refinement):

DUMP_VAD: Lets you dump the whole VAD node instead of just the page. The problem I saw with it is, that the vad content (as collection of pages) is loaded dynamically on access. On the one hand hashing of vad nodes is more or less not reasonable since whenever a new page is loaded within the vad node the whole node is dumped and leads to another hash. On the other hand by being able to see which parts within the vad are loaded/accessed/executed after another might be interesting for malware analysis. The page mode is quicker, as it just has to hash 4096 bytes each time.
IGNORE_SYSTEM_DLL If we assume that the system's integrity is ensured turning on this flags discards the dump of all pages/vads whose vad name contains either System32 and SysWOW64. This gave me a major speedup since my PC is rather old and I was not interested in calls within the common Windows libraries/executables.

Feel free to share any questions and suggestions!
Klaus
Co-authored-by: Michał Leszczyński michal.leszczynski@cert.pl",@drakvuf-jenkins Test this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1133,2021-02-11T15:25:16Z,2021-02-19T13:26:14Z,2021-03-10T15:43:48Z,MERGED,True,1830,1,9,https://github.com/Id3aFly,Hyperbee plugin,48,[],https://github.com/tklengyel/drakvuf/pull/1133,https://github.com/tklengyel,32,https://github.com/tklengyel/drakvuf/pull/1133#issuecomment-781724267,"Hello everyone,
this is my first ever pull request so I'm very interested in your feedback! :)
Background
During my masters thesis at FAU Erlangen-Nürnberg (FAU) I created a plugin called ""hyperbee"" that is at least part of the working name. The topic of my masters thesis is to efficiently dump the content of executable pages and analyse it with a (currently still private) tool from Politecnico di Milano (IT). Based on the detected behaviour a classifier could later determine if the page contains malicious code or not.
I was talking with @icedevml about this plugin and he encouraged me to share my code within a pull request. Luckily all of my supervisors approved this idea, so I can finally share my code with you. I am just allowed to share the code regarding the monitoring/dumping of pages and cannot include the behaviour detection code. Based on what I've seen in other plugins (memdump, ipt) I created a similar plugin:
Principle of operation


At first it creates a trap at the entry of MmAccessFault


This 1st trap's callback can get hold of the virtual address MmAccessFault shall assign as new page to. Additionally the cb adds another trap when returning from MmAccessFault and continuing with the actual code.


This 2nd trap's callback intercepts right after returning from MmAccessFault and can obtain the page frame number which was assigned to the virtual address. So we know the relation of virtual page ~ physical (guest) frame number. Furthermore this adds a new trap, whenever code is executed (instructions are fetched) from this frame.
[Now we don't care about writes or reads which for example may include code unpacking, decrypting, etc. We just wait when code is executed to dump the content of the whole page.]


When this third trap (instruction fetch from a monitored page) occurs, things like hash calculation (prevents duplicates -> speedup) and dumps are induced.
[At this point (it is marked within the code) I also analyse the regarding memory for specific behaviour. Additionally a classifier could then set a malware flag if the page contains malicious behaviour or not.]
Depending on a ""malware"" flag (predetemined by MALWARE_DEFAULT or other custom set flags in hyperbee.h: LOG_ALWAYS, DUMP_ALWAYS) the subsequent behaviour is determined:

the current data gathered through the analysis can be printed to the shell
the memory dump can be stored permanently (together with a metadata file).

Additionally the exec trap is deleted and swapped for a write trap.
[Now we don't care about execs or reads as long as the page content remains unchanged since we already dumped that. We just wait when code is modified.]


When this new write trap gets active it just deletes itself and installs a new exec trap. The callback of this exec trap is what is described in step 4.
[Thus, we are able to permanently swap traps to dump the page on an instruction fetch, whenever it has been modified since the last execution].


How to use
Hyperbee uses two command line options:
--hyperbee-dump-dir : required, defines the path to store the dumps within a ""dumps"" folder
--hyperbee-filter-executable : optional, discards all pages which vad node does not belong to a binary whose absolute path does not contain this name. Therefore, you can filter for paths or filenames, etc.
sudo ./src/drakvuf -r /root/win10.json -d win10 -a hyperbee --hyperbee-dump-dir /tmp/ --hyperbee-filter-executable RandomExample
Output
Example output of the metafile:
{ ""TimeStamp"": ""1613056257.402199"", ""PID"": 5696, ""PPID"": 3032, ""TID"": 3748, ""UserID"": 1, ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""EventUID"": 43645, ""CR3"": ""0x99a65001"", ""PageVA"": ""0x7ff77176e000"", ""VADBase"": ""0x7ff771760000"", ""VADEnd"": ""0x7ff771782fff"", ""VADName"": ""\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""DumpSize"": ""0x1000"", ""DumpFile"": ""\/tmp\/dumps\/7ff77176e000_31287c55df232436.page"", ""SHA256"": ""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"", ""DumpID"": 15, ""TrapPA"": ""0x70b828a4"", ""GFN"": ""0x70b82"" }
Example output of the commandline (same analysis):
{""Plugin"":""execframe"",""TimeStamp"":""1613056257.402199"",""PID"":5696,""PPID"":3032,""TID"":3748,""UserName"":""SessionID"",""UserId"":1,""ProcessName"":""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""Method"":""execute_faulted_cb"",""EventUID"":""0xaa7d"",""CR3"":""0x99a65001"",""PageVA"":""0x7ff77176e000"",""VADBase"":""0x7ff771760000"",""VADEnd"":""0x7ff771782fff"",""VADName"":""\\Users\\master\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""DumpSize"":4096,""DumpFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.page"",""SHA256"":""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"",""DumpID"":15,""MetaFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.metafile"",""TrapPA"":""0x70b828a4"",""GFN"":""0x70b82""} 
Additional information
You may wonder why this plugin is called hyperbee. This is because of the name of the behaviour detection tool (from Politecnico di Milano) I integrated, which is referring to ""bees"". Since I call this tool for each page dump and thus, very often, it reminded me of a very diligent and busy ""bee"". Thus the name ""hyperbee"".
There are two other flags in hyperbee.h for two ideas which are rather experimental (or need refinement):

DUMP_VAD: Lets you dump the whole VAD node instead of just the page. The problem I saw with it is, that the vad content (as collection of pages) is loaded dynamically on access. On the one hand hashing of vad nodes is more or less not reasonable since whenever a new page is loaded within the vad node the whole node is dumped and leads to another hash. On the other hand by being able to see which parts within the vad are loaded/accessed/executed after another might be interesting for malware analysis. The page mode is quicker, as it just has to hash 4096 bytes each time.
IGNORE_SYSTEM_DLL If we assume that the system's integrity is ensured turning on this flags discards the dump of all pages/vads whose vad name contains either System32 and SysWOW64. This gave me a major speedup since my PC is rather old and I was not interested in calls within the common Windows libraries/executables.

Feel free to share any questions and suggestions!
Klaus
Co-authored-by: Michał Leszczyński michal.leszczynski@cert.pl","Looks good to me, we can merge and then if needed do more stylistic fixups as we move ahead. Thanks for putting in the effort for making a great PR! Cheers! 🍻",True,"{'HOORAY': ['https://github.com/Id3aFly', 'https://github.com/BonusPlay']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1133,2021-02-11T15:25:16Z,2021-02-19T13:26:14Z,2021-03-10T15:43:48Z,MERGED,True,1830,1,9,https://github.com/Id3aFly,Hyperbee plugin,48,[],https://github.com/tklengyel/drakvuf/pull/1133,https://github.com/Id3aFly,33,https://github.com/tklengyel/drakvuf/pull/1133#issuecomment-781968198,"Hello everyone,
this is my first ever pull request so I'm very interested in your feedback! :)
Background
During my masters thesis at FAU Erlangen-Nürnberg (FAU) I created a plugin called ""hyperbee"" that is at least part of the working name. The topic of my masters thesis is to efficiently dump the content of executable pages and analyse it with a (currently still private) tool from Politecnico di Milano (IT). Based on the detected behaviour a classifier could later determine if the page contains malicious code or not.
I was talking with @icedevml about this plugin and he encouraged me to share my code within a pull request. Luckily all of my supervisors approved this idea, so I can finally share my code with you. I am just allowed to share the code regarding the monitoring/dumping of pages and cannot include the behaviour detection code. Based on what I've seen in other plugins (memdump, ipt) I created a similar plugin:
Principle of operation


At first it creates a trap at the entry of MmAccessFault


This 1st trap's callback can get hold of the virtual address MmAccessFault shall assign as new page to. Additionally the cb adds another trap when returning from MmAccessFault and continuing with the actual code.


This 2nd trap's callback intercepts right after returning from MmAccessFault and can obtain the page frame number which was assigned to the virtual address. So we know the relation of virtual page ~ physical (guest) frame number. Furthermore this adds a new trap, whenever code is executed (instructions are fetched) from this frame.
[Now we don't care about writes or reads which for example may include code unpacking, decrypting, etc. We just wait when code is executed to dump the content of the whole page.]


When this third trap (instruction fetch from a monitored page) occurs, things like hash calculation (prevents duplicates -> speedup) and dumps are induced.
[At this point (it is marked within the code) I also analyse the regarding memory for specific behaviour. Additionally a classifier could then set a malware flag if the page contains malicious behaviour or not.]
Depending on a ""malware"" flag (predetemined by MALWARE_DEFAULT or other custom set flags in hyperbee.h: LOG_ALWAYS, DUMP_ALWAYS) the subsequent behaviour is determined:

the current data gathered through the analysis can be printed to the shell
the memory dump can be stored permanently (together with a metadata file).

Additionally the exec trap is deleted and swapped for a write trap.
[Now we don't care about execs or reads as long as the page content remains unchanged since we already dumped that. We just wait when code is modified.]


When this new write trap gets active it just deletes itself and installs a new exec trap. The callback of this exec trap is what is described in step 4.
[Thus, we are able to permanently swap traps to dump the page on an instruction fetch, whenever it has been modified since the last execution].


How to use
Hyperbee uses two command line options:
--hyperbee-dump-dir : required, defines the path to store the dumps within a ""dumps"" folder
--hyperbee-filter-executable : optional, discards all pages which vad node does not belong to a binary whose absolute path does not contain this name. Therefore, you can filter for paths or filenames, etc.
sudo ./src/drakvuf -r /root/win10.json -d win10 -a hyperbee --hyperbee-dump-dir /tmp/ --hyperbee-filter-executable RandomExample
Output
Example output of the metafile:
{ ""TimeStamp"": ""1613056257.402199"", ""PID"": 5696, ""PPID"": 3032, ""TID"": 3748, ""UserID"": 1, ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""EventUID"": 43645, ""CR3"": ""0x99a65001"", ""PageVA"": ""0x7ff77176e000"", ""VADBase"": ""0x7ff771760000"", ""VADEnd"": ""0x7ff771782fff"", ""VADName"": ""\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""DumpSize"": ""0x1000"", ""DumpFile"": ""\/tmp\/dumps\/7ff77176e000_31287c55df232436.page"", ""SHA256"": ""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"", ""DumpID"": 15, ""TrapPA"": ""0x70b828a4"", ""GFN"": ""0x70b82"" }
Example output of the commandline (same analysis):
{""Plugin"":""execframe"",""TimeStamp"":""1613056257.402199"",""PID"":5696,""PPID"":3032,""TID"":3748,""UserName"":""SessionID"",""UserId"":1,""ProcessName"":""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""Method"":""execute_faulted_cb"",""EventUID"":""0xaa7d"",""CR3"":""0x99a65001"",""PageVA"":""0x7ff77176e000"",""VADBase"":""0x7ff771760000"",""VADEnd"":""0x7ff771782fff"",""VADName"":""\\Users\\master\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""DumpSize"":4096,""DumpFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.page"",""SHA256"":""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"",""DumpID"":15,""MetaFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.metafile"",""TrapPA"":""0x70b828a4"",""GFN"":""0x70b82""} 
Additional information
You may wonder why this plugin is called hyperbee. This is because of the name of the behaviour detection tool (from Politecnico di Milano) I integrated, which is referring to ""bees"". Since I call this tool for each page dump and thus, very often, it reminded me of a very diligent and busy ""bee"". Thus the name ""hyperbee"".
There are two other flags in hyperbee.h for two ideas which are rather experimental (or need refinement):

DUMP_VAD: Lets you dump the whole VAD node instead of just the page. The problem I saw with it is, that the vad content (as collection of pages) is loaded dynamically on access. On the one hand hashing of vad nodes is more or less not reasonable since whenever a new page is loaded within the vad node the whole node is dumped and leads to another hash. On the other hand by being able to see which parts within the vad are loaded/accessed/executed after another might be interesting for malware analysis. The page mode is quicker, as it just has to hash 4096 bytes each time.
IGNORE_SYSTEM_DLL If we assume that the system's integrity is ensured turning on this flags discards the dump of all pages/vads whose vad name contains either System32 and SysWOW64. This gave me a major speedup since my PC is rather old and I was not interested in calls within the common Windows libraries/executables.

Feel free to share any questions and suggestions!
Klaus
Co-authored-by: Michał Leszczyński michal.leszczynski@cert.pl","Looks good to me, we can merge and then if needed do more stylistic fixups as we move ahead. Thanks for putting in the effort for making a great PR! Cheers! beers

Thank you for the positive feedback Tamas! A big thanks to you, @icedevml, @BonusPlay and @kscieslinski for improving and reviewing this code!
By receiving that lot of suggestions, advises and requirements of you I have learned many things along the way.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1133,2021-02-11T15:25:16Z,2021-02-19T13:26:14Z,2021-03-10T15:43:48Z,MERGED,True,1830,1,9,https://github.com/Id3aFly,Hyperbee plugin,48,[],https://github.com/tklengyel/drakvuf/pull/1133,https://github.com/icedevml,34,https://github.com/tklengyel/drakvuf/pull/1133#issuecomment-781998851,"Hello everyone,
this is my first ever pull request so I'm very interested in your feedback! :)
Background
During my masters thesis at FAU Erlangen-Nürnberg (FAU) I created a plugin called ""hyperbee"" that is at least part of the working name. The topic of my masters thesis is to efficiently dump the content of executable pages and analyse it with a (currently still private) tool from Politecnico di Milano (IT). Based on the detected behaviour a classifier could later determine if the page contains malicious code or not.
I was talking with @icedevml about this plugin and he encouraged me to share my code within a pull request. Luckily all of my supervisors approved this idea, so I can finally share my code with you. I am just allowed to share the code regarding the monitoring/dumping of pages and cannot include the behaviour detection code. Based on what I've seen in other plugins (memdump, ipt) I created a similar plugin:
Principle of operation


At first it creates a trap at the entry of MmAccessFault


This 1st trap's callback can get hold of the virtual address MmAccessFault shall assign as new page to. Additionally the cb adds another trap when returning from MmAccessFault and continuing with the actual code.


This 2nd trap's callback intercepts right after returning from MmAccessFault and can obtain the page frame number which was assigned to the virtual address. So we know the relation of virtual page ~ physical (guest) frame number. Furthermore this adds a new trap, whenever code is executed (instructions are fetched) from this frame.
[Now we don't care about writes or reads which for example may include code unpacking, decrypting, etc. We just wait when code is executed to dump the content of the whole page.]


When this third trap (instruction fetch from a monitored page) occurs, things like hash calculation (prevents duplicates -> speedup) and dumps are induced.
[At this point (it is marked within the code) I also analyse the regarding memory for specific behaviour. Additionally a classifier could then set a malware flag if the page contains malicious behaviour or not.]
Depending on a ""malware"" flag (predetemined by MALWARE_DEFAULT or other custom set flags in hyperbee.h: LOG_ALWAYS, DUMP_ALWAYS) the subsequent behaviour is determined:

the current data gathered through the analysis can be printed to the shell
the memory dump can be stored permanently (together with a metadata file).

Additionally the exec trap is deleted and swapped for a write trap.
[Now we don't care about execs or reads as long as the page content remains unchanged since we already dumped that. We just wait when code is modified.]


When this new write trap gets active it just deletes itself and installs a new exec trap. The callback of this exec trap is what is described in step 4.
[Thus, we are able to permanently swap traps to dump the page on an instruction fetch, whenever it has been modified since the last execution].


How to use
Hyperbee uses two command line options:
--hyperbee-dump-dir : required, defines the path to store the dumps within a ""dumps"" folder
--hyperbee-filter-executable : optional, discards all pages which vad node does not belong to a binary whose absolute path does not contain this name. Therefore, you can filter for paths or filenames, etc.
sudo ./src/drakvuf -r /root/win10.json -d win10 -a hyperbee --hyperbee-dump-dir /tmp/ --hyperbee-filter-executable RandomExample
Output
Example output of the metafile:
{ ""TimeStamp"": ""1613056257.402199"", ""PID"": 5696, ""PPID"": 3032, ""TID"": 3748, ""UserID"": 1, ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""EventUID"": 43645, ""CR3"": ""0x99a65001"", ""PageVA"": ""0x7ff77176e000"", ""VADBase"": ""0x7ff771760000"", ""VADEnd"": ""0x7ff771782fff"", ""VADName"": ""\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""DumpSize"": ""0x1000"", ""DumpFile"": ""\/tmp\/dumps\/7ff77176e000_31287c55df232436.page"", ""SHA256"": ""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"", ""DumpID"": 15, ""TrapPA"": ""0x70b828a4"", ""GFN"": ""0x70b82"" }
Example output of the commandline (same analysis):
{""Plugin"":""execframe"",""TimeStamp"":""1613056257.402199"",""PID"":5696,""PPID"":3032,""TID"":3748,""UserName"":""SessionID"",""UserId"":1,""ProcessName"":""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""Method"":""execute_faulted_cb"",""EventUID"":""0xaa7d"",""CR3"":""0x99a65001"",""PageVA"":""0x7ff77176e000"",""VADBase"":""0x7ff771760000"",""VADEnd"":""0x7ff771782fff"",""VADName"":""\\Users\\master\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""DumpSize"":4096,""DumpFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.page"",""SHA256"":""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"",""DumpID"":15,""MetaFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.metafile"",""TrapPA"":""0x70b828a4"",""GFN"":""0x70b82""} 
Additional information
You may wonder why this plugin is called hyperbee. This is because of the name of the behaviour detection tool (from Politecnico di Milano) I integrated, which is referring to ""bees"". Since I call this tool for each page dump and thus, very often, it reminded me of a very diligent and busy ""bee"". Thus the name ""hyperbee"".
There are two other flags in hyperbee.h for two ideas which are rather experimental (or need refinement):

DUMP_VAD: Lets you dump the whole VAD node instead of just the page. The problem I saw with it is, that the vad content (as collection of pages) is loaded dynamically on access. On the one hand hashing of vad nodes is more or less not reasonable since whenever a new page is loaded within the vad node the whole node is dumped and leads to another hash. On the other hand by being able to see which parts within the vad are loaded/accessed/executed after another might be interesting for malware analysis. The page mode is quicker, as it just has to hash 4096 bytes each time.
IGNORE_SYSTEM_DLL If we assume that the system's integrity is ensured turning on this flags discards the dump of all pages/vads whose vad name contains either System32 and SysWOW64. This gave me a major speedup since my PC is rather old and I was not interested in calls within the common Windows libraries/executables.

Feel free to share any questions and suggestions!
Klaus
Co-authored-by: Michał Leszczyński michal.leszczynski@cert.pl",@drakvuf-jenkins Test this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1133,2021-02-11T15:25:16Z,2021-02-19T13:26:14Z,2021-03-10T15:43:48Z,MERGED,True,1830,1,9,https://github.com/Id3aFly,Hyperbee plugin,48,[],https://github.com/tklengyel/drakvuf/pull/1133,https://github.com/icedevml,35,https://github.com/tklengyel/drakvuf/pull/1133#issuecomment-781999803,"Hello everyone,
this is my first ever pull request so I'm very interested in your feedback! :)
Background
During my masters thesis at FAU Erlangen-Nürnberg (FAU) I created a plugin called ""hyperbee"" that is at least part of the working name. The topic of my masters thesis is to efficiently dump the content of executable pages and analyse it with a (currently still private) tool from Politecnico di Milano (IT). Based on the detected behaviour a classifier could later determine if the page contains malicious code or not.
I was talking with @icedevml about this plugin and he encouraged me to share my code within a pull request. Luckily all of my supervisors approved this idea, so I can finally share my code with you. I am just allowed to share the code regarding the monitoring/dumping of pages and cannot include the behaviour detection code. Based on what I've seen in other plugins (memdump, ipt) I created a similar plugin:
Principle of operation


At first it creates a trap at the entry of MmAccessFault


This 1st trap's callback can get hold of the virtual address MmAccessFault shall assign as new page to. Additionally the cb adds another trap when returning from MmAccessFault and continuing with the actual code.


This 2nd trap's callback intercepts right after returning from MmAccessFault and can obtain the page frame number which was assigned to the virtual address. So we know the relation of virtual page ~ physical (guest) frame number. Furthermore this adds a new trap, whenever code is executed (instructions are fetched) from this frame.
[Now we don't care about writes or reads which for example may include code unpacking, decrypting, etc. We just wait when code is executed to dump the content of the whole page.]


When this third trap (instruction fetch from a monitored page) occurs, things like hash calculation (prevents duplicates -> speedup) and dumps are induced.
[At this point (it is marked within the code) I also analyse the regarding memory for specific behaviour. Additionally a classifier could then set a malware flag if the page contains malicious behaviour or not.]
Depending on a ""malware"" flag (predetemined by MALWARE_DEFAULT or other custom set flags in hyperbee.h: LOG_ALWAYS, DUMP_ALWAYS) the subsequent behaviour is determined:

the current data gathered through the analysis can be printed to the shell
the memory dump can be stored permanently (together with a metadata file).

Additionally the exec trap is deleted and swapped for a write trap.
[Now we don't care about execs or reads as long as the page content remains unchanged since we already dumped that. We just wait when code is modified.]


When this new write trap gets active it just deletes itself and installs a new exec trap. The callback of this exec trap is what is described in step 4.
[Thus, we are able to permanently swap traps to dump the page on an instruction fetch, whenever it has been modified since the last execution].


How to use
Hyperbee uses two command line options:
--hyperbee-dump-dir : required, defines the path to store the dumps within a ""dumps"" folder
--hyperbee-filter-executable : optional, discards all pages which vad node does not belong to a binary whose absolute path does not contain this name. Therefore, you can filter for paths or filenames, etc.
sudo ./src/drakvuf -r /root/win10.json -d win10 -a hyperbee --hyperbee-dump-dir /tmp/ --hyperbee-filter-executable RandomExample
Output
Example output of the metafile:
{ ""TimeStamp"": ""1613056257.402199"", ""PID"": 5696, ""PPID"": 3032, ""TID"": 3748, ""UserID"": 1, ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""EventUID"": 43645, ""CR3"": ""0x99a65001"", ""PageVA"": ""0x7ff77176e000"", ""VADBase"": ""0x7ff771760000"", ""VADEnd"": ""0x7ff771782fff"", ""VADName"": ""\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""DumpSize"": ""0x1000"", ""DumpFile"": ""\/tmp\/dumps\/7ff77176e000_31287c55df232436.page"", ""SHA256"": ""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"", ""DumpID"": 15, ""TrapPA"": ""0x70b828a4"", ""GFN"": ""0x70b82"" }
Example output of the commandline (same analysis):
{""Plugin"":""execframe"",""TimeStamp"":""1613056257.402199"",""PID"":5696,""PPID"":3032,""TID"":3748,""UserName"":""SessionID"",""UserId"":1,""ProcessName"":""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""Method"":""execute_faulted_cb"",""EventUID"":""0xaa7d"",""CR3"":""0x99a65001"",""PageVA"":""0x7ff77176e000"",""VADBase"":""0x7ff771760000"",""VADEnd"":""0x7ff771782fff"",""VADName"":""\\Users\\master\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""DumpSize"":4096,""DumpFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.page"",""SHA256"":""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"",""DumpID"":15,""MetaFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.metafile"",""TrapPA"":""0x70b828a4"",""GFN"":""0x70b82""} 
Additional information
You may wonder why this plugin is called hyperbee. This is because of the name of the behaviour detection tool (from Politecnico di Milano) I integrated, which is referring to ""bees"". Since I call this tool for each page dump and thus, very often, it reminded me of a very diligent and busy ""bee"". Thus the name ""hyperbee"".
There are two other flags in hyperbee.h for two ideas which are rather experimental (or need refinement):

DUMP_VAD: Lets you dump the whole VAD node instead of just the page. The problem I saw with it is, that the vad content (as collection of pages) is loaded dynamically on access. On the one hand hashing of vad nodes is more or less not reasonable since whenever a new page is loaded within the vad node the whole node is dumped and leads to another hash. On the other hand by being able to see which parts within the vad are loaded/accessed/executed after another might be interesting for malware analysis. The page mode is quicker, as it just has to hash 4096 bytes each time.
IGNORE_SYSTEM_DLL If we assume that the system's integrity is ensured turning on this flags discards the dump of all pages/vads whose vad name contains either System32 and SysWOW64. This gave me a major speedup since my PC is rather old and I was not interested in calls within the common Windows libraries/executables.

Feel free to share any questions and suggestions!
Klaus
Co-authored-by: Michał Leszczyński michal.leszczynski@cert.pl",@tklengyel Remembering about this when merging #1133 (comment),True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1133,2021-02-11T15:25:16Z,2021-02-19T13:26:14Z,2021-03-10T15:43:48Z,MERGED,True,1830,1,9,https://github.com/Id3aFly,Hyperbee plugin,48,[],https://github.com/tklengyel/drakvuf/pull/1133,https://github.com/tklengyel,36,https://github.com/tklengyel/drakvuf/pull/1133#issuecomment-782063327,"Hello everyone,
this is my first ever pull request so I'm very interested in your feedback! :)
Background
During my masters thesis at FAU Erlangen-Nürnberg (FAU) I created a plugin called ""hyperbee"" that is at least part of the working name. The topic of my masters thesis is to efficiently dump the content of executable pages and analyse it with a (currently still private) tool from Politecnico di Milano (IT). Based on the detected behaviour a classifier could later determine if the page contains malicious code or not.
I was talking with @icedevml about this plugin and he encouraged me to share my code within a pull request. Luckily all of my supervisors approved this idea, so I can finally share my code with you. I am just allowed to share the code regarding the monitoring/dumping of pages and cannot include the behaviour detection code. Based on what I've seen in other plugins (memdump, ipt) I created a similar plugin:
Principle of operation


At first it creates a trap at the entry of MmAccessFault


This 1st trap's callback can get hold of the virtual address MmAccessFault shall assign as new page to. Additionally the cb adds another trap when returning from MmAccessFault and continuing with the actual code.


This 2nd trap's callback intercepts right after returning from MmAccessFault and can obtain the page frame number which was assigned to the virtual address. So we know the relation of virtual page ~ physical (guest) frame number. Furthermore this adds a new trap, whenever code is executed (instructions are fetched) from this frame.
[Now we don't care about writes or reads which for example may include code unpacking, decrypting, etc. We just wait when code is executed to dump the content of the whole page.]


When this third trap (instruction fetch from a monitored page) occurs, things like hash calculation (prevents duplicates -> speedup) and dumps are induced.
[At this point (it is marked within the code) I also analyse the regarding memory for specific behaviour. Additionally a classifier could then set a malware flag if the page contains malicious behaviour or not.]
Depending on a ""malware"" flag (predetemined by MALWARE_DEFAULT or other custom set flags in hyperbee.h: LOG_ALWAYS, DUMP_ALWAYS) the subsequent behaviour is determined:

the current data gathered through the analysis can be printed to the shell
the memory dump can be stored permanently (together with a metadata file).

Additionally the exec trap is deleted and swapped for a write trap.
[Now we don't care about execs or reads as long as the page content remains unchanged since we already dumped that. We just wait when code is modified.]


When this new write trap gets active it just deletes itself and installs a new exec trap. The callback of this exec trap is what is described in step 4.
[Thus, we are able to permanently swap traps to dump the page on an instruction fetch, whenever it has been modified since the last execution].


How to use
Hyperbee uses two command line options:
--hyperbee-dump-dir : required, defines the path to store the dumps within a ""dumps"" folder
--hyperbee-filter-executable : optional, discards all pages which vad node does not belong to a binary whose absolute path does not contain this name. Therefore, you can filter for paths or filenames, etc.
sudo ./src/drakvuf -r /root/win10.json -d win10 -a hyperbee --hyperbee-dump-dir /tmp/ --hyperbee-filter-executable RandomExample
Output
Example output of the metafile:
{ ""TimeStamp"": ""1613056257.402199"", ""PID"": 5696, ""PPID"": 3032, ""TID"": 3748, ""UserID"": 1, ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""EventUID"": 43645, ""CR3"": ""0x99a65001"", ""PageVA"": ""0x7ff77176e000"", ""VADBase"": ""0x7ff771760000"", ""VADEnd"": ""0x7ff771782fff"", ""VADName"": ""\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""DumpSize"": ""0x1000"", ""DumpFile"": ""\/tmp\/dumps\/7ff77176e000_31287c55df232436.page"", ""SHA256"": ""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"", ""DumpID"": 15, ""TrapPA"": ""0x70b828a4"", ""GFN"": ""0x70b82"" }
Example output of the commandline (same analysis):
{""Plugin"":""execframe"",""TimeStamp"":""1613056257.402199"",""PID"":5696,""PPID"":3032,""TID"":3748,""UserName"":""SessionID"",""UserId"":1,""ProcessName"":""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""Method"":""execute_faulted_cb"",""EventUID"":""0xaa7d"",""CR3"":""0x99a65001"",""PageVA"":""0x7ff77176e000"",""VADBase"":""0x7ff771760000"",""VADEnd"":""0x7ff771782fff"",""VADName"":""\\Users\\master\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""DumpSize"":4096,""DumpFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.page"",""SHA256"":""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"",""DumpID"":15,""MetaFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.metafile"",""TrapPA"":""0x70b828a4"",""GFN"":""0x70b82""} 
Additional information
You may wonder why this plugin is called hyperbee. This is because of the name of the behaviour detection tool (from Politecnico di Milano) I integrated, which is referring to ""bees"". Since I call this tool for each page dump and thus, very often, it reminded me of a very diligent and busy ""bee"". Thus the name ""hyperbee"".
There are two other flags in hyperbee.h for two ideas which are rather experimental (or need refinement):

DUMP_VAD: Lets you dump the whole VAD node instead of just the page. The problem I saw with it is, that the vad content (as collection of pages) is loaded dynamically on access. On the one hand hashing of vad nodes is more or less not reasonable since whenever a new page is loaded within the vad node the whole node is dumped and leads to another hash. On the other hand by being able to see which parts within the vad are loaded/accessed/executed after another might be interesting for malware analysis. The page mode is quicker, as it just has to hash 4096 bytes each time.
IGNORE_SYSTEM_DLL If we assume that the system's integrity is ensured turning on this flags discards the dump of all pages/vads whose vad name contains either System32 and SysWOW64. This gave me a major speedup since my PC is rather old and I was not interested in calls within the common Windows libraries/executables.

Feel free to share any questions and suggestions!
Klaus
Co-authored-by: Michał Leszczyński michal.leszczynski@cert.pl",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1133,2021-02-11T15:25:16Z,2021-02-19T13:26:14Z,2021-03-10T15:43:48Z,MERGED,True,1830,1,9,https://github.com/Id3aFly,Hyperbee plugin,48,[],https://github.com/tklengyel/drakvuf/pull/1133,https://github.com/tklengyel,37,https://github.com/tklengyel/drakvuf/pull/1133#issuecomment-782063777,"Hello everyone,
this is my first ever pull request so I'm very interested in your feedback! :)
Background
During my masters thesis at FAU Erlangen-Nürnberg (FAU) I created a plugin called ""hyperbee"" that is at least part of the working name. The topic of my masters thesis is to efficiently dump the content of executable pages and analyse it with a (currently still private) tool from Politecnico di Milano (IT). Based on the detected behaviour a classifier could later determine if the page contains malicious code or not.
I was talking with @icedevml about this plugin and he encouraged me to share my code within a pull request. Luckily all of my supervisors approved this idea, so I can finally share my code with you. I am just allowed to share the code regarding the monitoring/dumping of pages and cannot include the behaviour detection code. Based on what I've seen in other plugins (memdump, ipt) I created a similar plugin:
Principle of operation


At first it creates a trap at the entry of MmAccessFault


This 1st trap's callback can get hold of the virtual address MmAccessFault shall assign as new page to. Additionally the cb adds another trap when returning from MmAccessFault and continuing with the actual code.


This 2nd trap's callback intercepts right after returning from MmAccessFault and can obtain the page frame number which was assigned to the virtual address. So we know the relation of virtual page ~ physical (guest) frame number. Furthermore this adds a new trap, whenever code is executed (instructions are fetched) from this frame.
[Now we don't care about writes or reads which for example may include code unpacking, decrypting, etc. We just wait when code is executed to dump the content of the whole page.]


When this third trap (instruction fetch from a monitored page) occurs, things like hash calculation (prevents duplicates -> speedup) and dumps are induced.
[At this point (it is marked within the code) I also analyse the regarding memory for specific behaviour. Additionally a classifier could then set a malware flag if the page contains malicious behaviour or not.]
Depending on a ""malware"" flag (predetemined by MALWARE_DEFAULT or other custom set flags in hyperbee.h: LOG_ALWAYS, DUMP_ALWAYS) the subsequent behaviour is determined:

the current data gathered through the analysis can be printed to the shell
the memory dump can be stored permanently (together with a metadata file).

Additionally the exec trap is deleted and swapped for a write trap.
[Now we don't care about execs or reads as long as the page content remains unchanged since we already dumped that. We just wait when code is modified.]


When this new write trap gets active it just deletes itself and installs a new exec trap. The callback of this exec trap is what is described in step 4.
[Thus, we are able to permanently swap traps to dump the page on an instruction fetch, whenever it has been modified since the last execution].


How to use
Hyperbee uses two command line options:
--hyperbee-dump-dir : required, defines the path to store the dumps within a ""dumps"" folder
--hyperbee-filter-executable : optional, discards all pages which vad node does not belong to a binary whose absolute path does not contain this name. Therefore, you can filter for paths or filenames, etc.
sudo ./src/drakvuf -r /root/win10.json -d win10 -a hyperbee --hyperbee-dump-dir /tmp/ --hyperbee-filter-executable RandomExample
Output
Example output of the metafile:
{ ""TimeStamp"": ""1613056257.402199"", ""PID"": 5696, ""PPID"": 3032, ""TID"": 3748, ""UserID"": 1, ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""EventUID"": 43645, ""CR3"": ""0x99a65001"", ""PageVA"": ""0x7ff77176e000"", ""VADBase"": ""0x7ff771760000"", ""VADEnd"": ""0x7ff771782fff"", ""VADName"": ""\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""DumpSize"": ""0x1000"", ""DumpFile"": ""\/tmp\/dumps\/7ff77176e000_31287c55df232436.page"", ""SHA256"": ""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"", ""DumpID"": 15, ""TrapPA"": ""0x70b828a4"", ""GFN"": ""0x70b82"" }
Example output of the commandline (same analysis):
{""Plugin"":""execframe"",""TimeStamp"":""1613056257.402199"",""PID"":5696,""PPID"":3032,""TID"":3748,""UserName"":""SessionID"",""UserId"":1,""ProcessName"":""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""Method"":""execute_faulted_cb"",""EventUID"":""0xaa7d"",""CR3"":""0x99a65001"",""PageVA"":""0x7ff77176e000"",""VADBase"":""0x7ff771760000"",""VADEnd"":""0x7ff771782fff"",""VADName"":""\\Users\\master\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""DumpSize"":4096,""DumpFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.page"",""SHA256"":""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"",""DumpID"":15,""MetaFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.metafile"",""TrapPA"":""0x70b828a4"",""GFN"":""0x70b82""} 
Additional information
You may wonder why this plugin is called hyperbee. This is because of the name of the behaviour detection tool (from Politecnico di Milano) I integrated, which is referring to ""bees"". Since I call this tool for each page dump and thus, very often, it reminded me of a very diligent and busy ""bee"". Thus the name ""hyperbee"".
There are two other flags in hyperbee.h for two ideas which are rather experimental (or need refinement):

DUMP_VAD: Lets you dump the whole VAD node instead of just the page. The problem I saw with it is, that the vad content (as collection of pages) is loaded dynamically on access. On the one hand hashing of vad nodes is more or less not reasonable since whenever a new page is loaded within the vad node the whole node is dumped and leads to another hash. On the other hand by being able to see which parts within the vad are loaded/accessed/executed after another might be interesting for malware analysis. The page mode is quicker, as it just has to hash 4096 bytes each time.
IGNORE_SYSTEM_DLL If we assume that the system's integrity is ensured turning on this flags discards the dump of all pages/vads whose vad name contains either System32 and SysWOW64. This gave me a major speedup since my PC is rather old and I was not interested in calls within the common Windows libraries/executables.

Feel free to share any questions and suggestions!
Klaus
Co-authored-by: Michał Leszczyński michal.leszczynski@cert.pl","@tklengyel Remembering about this when merging #1133 (comment)

I've added that to the PR description, not sure where else you want it added o.O",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1133,2021-02-11T15:25:16Z,2021-02-19T13:26:14Z,2021-03-10T15:43:48Z,MERGED,True,1830,1,9,https://github.com/Id3aFly,Hyperbee plugin,48,[],https://github.com/tklengyel/drakvuf/pull/1133,https://github.com/icedevml,38,https://github.com/tklengyel/drakvuf/pull/1133#issuecomment-782167368,"Hello everyone,
this is my first ever pull request so I'm very interested in your feedback! :)
Background
During my masters thesis at FAU Erlangen-Nürnberg (FAU) I created a plugin called ""hyperbee"" that is at least part of the working name. The topic of my masters thesis is to efficiently dump the content of executable pages and analyse it with a (currently still private) tool from Politecnico di Milano (IT). Based on the detected behaviour a classifier could later determine if the page contains malicious code or not.
I was talking with @icedevml about this plugin and he encouraged me to share my code within a pull request. Luckily all of my supervisors approved this idea, so I can finally share my code with you. I am just allowed to share the code regarding the monitoring/dumping of pages and cannot include the behaviour detection code. Based on what I've seen in other plugins (memdump, ipt) I created a similar plugin:
Principle of operation


At first it creates a trap at the entry of MmAccessFault


This 1st trap's callback can get hold of the virtual address MmAccessFault shall assign as new page to. Additionally the cb adds another trap when returning from MmAccessFault and continuing with the actual code.


This 2nd trap's callback intercepts right after returning from MmAccessFault and can obtain the page frame number which was assigned to the virtual address. So we know the relation of virtual page ~ physical (guest) frame number. Furthermore this adds a new trap, whenever code is executed (instructions are fetched) from this frame.
[Now we don't care about writes or reads which for example may include code unpacking, decrypting, etc. We just wait when code is executed to dump the content of the whole page.]


When this third trap (instruction fetch from a monitored page) occurs, things like hash calculation (prevents duplicates -> speedup) and dumps are induced.
[At this point (it is marked within the code) I also analyse the regarding memory for specific behaviour. Additionally a classifier could then set a malware flag if the page contains malicious behaviour or not.]
Depending on a ""malware"" flag (predetemined by MALWARE_DEFAULT or other custom set flags in hyperbee.h: LOG_ALWAYS, DUMP_ALWAYS) the subsequent behaviour is determined:

the current data gathered through the analysis can be printed to the shell
the memory dump can be stored permanently (together with a metadata file).

Additionally the exec trap is deleted and swapped for a write trap.
[Now we don't care about execs or reads as long as the page content remains unchanged since we already dumped that. We just wait when code is modified.]


When this new write trap gets active it just deletes itself and installs a new exec trap. The callback of this exec trap is what is described in step 4.
[Thus, we are able to permanently swap traps to dump the page on an instruction fetch, whenever it has been modified since the last execution].


How to use
Hyperbee uses two command line options:
--hyperbee-dump-dir : required, defines the path to store the dumps within a ""dumps"" folder
--hyperbee-filter-executable : optional, discards all pages which vad node does not belong to a binary whose absolute path does not contain this name. Therefore, you can filter for paths or filenames, etc.
sudo ./src/drakvuf -r /root/win10.json -d win10 -a hyperbee --hyperbee-dump-dir /tmp/ --hyperbee-filter-executable RandomExample
Output
Example output of the metafile:
{ ""TimeStamp"": ""1613056257.402199"", ""PID"": 5696, ""PPID"": 3032, ""TID"": 3748, ""UserID"": 1, ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""EventUID"": 43645, ""CR3"": ""0x99a65001"", ""PageVA"": ""0x7ff77176e000"", ""VADBase"": ""0x7ff771760000"", ""VADEnd"": ""0x7ff771782fff"", ""VADName"": ""\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""DumpSize"": ""0x1000"", ""DumpFile"": ""\/tmp\/dumps\/7ff77176e000_31287c55df232436.page"", ""SHA256"": ""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"", ""DumpID"": 15, ""TrapPA"": ""0x70b828a4"", ""GFN"": ""0x70b82"" }
Example output of the commandline (same analysis):
{""Plugin"":""execframe"",""TimeStamp"":""1613056257.402199"",""PID"":5696,""PPID"":3032,""TID"":3748,""UserName"":""SessionID"",""UserId"":1,""ProcessName"":""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""Method"":""execute_faulted_cb"",""EventUID"":""0xaa7d"",""CR3"":""0x99a65001"",""PageVA"":""0x7ff77176e000"",""VADBase"":""0x7ff771760000"",""VADEnd"":""0x7ff771782fff"",""VADName"":""\\Users\\master\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""DumpSize"":4096,""DumpFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.page"",""SHA256"":""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"",""DumpID"":15,""MetaFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.metafile"",""TrapPA"":""0x70b828a4"",""GFN"":""0x70b82""} 
Additional information
You may wonder why this plugin is called hyperbee. This is because of the name of the behaviour detection tool (from Politecnico di Milano) I integrated, which is referring to ""bees"". Since I call this tool for each page dump and thus, very often, it reminded me of a very diligent and busy ""bee"". Thus the name ""hyperbee"".
There are two other flags in hyperbee.h for two ideas which are rather experimental (or need refinement):

DUMP_VAD: Lets you dump the whole VAD node instead of just the page. The problem I saw with it is, that the vad content (as collection of pages) is loaded dynamically on access. On the one hand hashing of vad nodes is more or less not reasonable since whenever a new page is loaded within the vad node the whole node is dumped and leads to another hash. On the other hand by being able to see which parts within the vad are loaded/accessed/executed after another might be interesting for malware analysis. The page mode is quicker, as it just has to hash 4096 bytes each time.
IGNORE_SYSTEM_DLL If we assume that the system's integrity is ensured turning on this flags discards the dump of all pages/vads whose vad name contains either System32 and SysWOW64. This gave me a major speedup since my PC is rather old and I was not interested in calls within the common Windows libraries/executables.

Feel free to share any questions and suggestions!
Klaus
Co-authored-by: Michał Leszczyński michal.leszczynski@cert.pl","I've added that to the PR description, not sure where else you want it added o.O

GitHub shows mutliple authors if this badge is in the commit message. Looks OK though 👍",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1133,2021-02-11T15:25:16Z,2021-02-19T13:26:14Z,2021-03-10T15:43:48Z,MERGED,True,1830,1,9,https://github.com/Id3aFly,Hyperbee plugin,48,[],https://github.com/tklengyel/drakvuf/pull/1133,https://github.com/Id3aFly,39,https://github.com/tklengyel/drakvuf/pull/1133#issuecomment-783400395,"Hello everyone,
this is my first ever pull request so I'm very interested in your feedback! :)
Background
During my masters thesis at FAU Erlangen-Nürnberg (FAU) I created a plugin called ""hyperbee"" that is at least part of the working name. The topic of my masters thesis is to efficiently dump the content of executable pages and analyse it with a (currently still private) tool from Politecnico di Milano (IT). Based on the detected behaviour a classifier could later determine if the page contains malicious code or not.
I was talking with @icedevml about this plugin and he encouraged me to share my code within a pull request. Luckily all of my supervisors approved this idea, so I can finally share my code with you. I am just allowed to share the code regarding the monitoring/dumping of pages and cannot include the behaviour detection code. Based on what I've seen in other plugins (memdump, ipt) I created a similar plugin:
Principle of operation


At first it creates a trap at the entry of MmAccessFault


This 1st trap's callback can get hold of the virtual address MmAccessFault shall assign as new page to. Additionally the cb adds another trap when returning from MmAccessFault and continuing with the actual code.


This 2nd trap's callback intercepts right after returning from MmAccessFault and can obtain the page frame number which was assigned to the virtual address. So we know the relation of virtual page ~ physical (guest) frame number. Furthermore this adds a new trap, whenever code is executed (instructions are fetched) from this frame.
[Now we don't care about writes or reads which for example may include code unpacking, decrypting, etc. We just wait when code is executed to dump the content of the whole page.]


When this third trap (instruction fetch from a monitored page) occurs, things like hash calculation (prevents duplicates -> speedup) and dumps are induced.
[At this point (it is marked within the code) I also analyse the regarding memory for specific behaviour. Additionally a classifier could then set a malware flag if the page contains malicious behaviour or not.]
Depending on a ""malware"" flag (predetemined by MALWARE_DEFAULT or other custom set flags in hyperbee.h: LOG_ALWAYS, DUMP_ALWAYS) the subsequent behaviour is determined:

the current data gathered through the analysis can be printed to the shell
the memory dump can be stored permanently (together with a metadata file).

Additionally the exec trap is deleted and swapped for a write trap.
[Now we don't care about execs or reads as long as the page content remains unchanged since we already dumped that. We just wait when code is modified.]


When this new write trap gets active it just deletes itself and installs a new exec trap. The callback of this exec trap is what is described in step 4.
[Thus, we are able to permanently swap traps to dump the page on an instruction fetch, whenever it has been modified since the last execution].


How to use
Hyperbee uses two command line options:
--hyperbee-dump-dir : required, defines the path to store the dumps within a ""dumps"" folder
--hyperbee-filter-executable : optional, discards all pages which vad node does not belong to a binary whose absolute path does not contain this name. Therefore, you can filter for paths or filenames, etc.
sudo ./src/drakvuf -r /root/win10.json -d win10 -a hyperbee --hyperbee-dump-dir /tmp/ --hyperbee-filter-executable RandomExample
Output
Example output of the metafile:
{ ""TimeStamp"": ""1613056257.402199"", ""PID"": 5696, ""PPID"": 3032, ""TID"": 3748, ""UserID"": 1, ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""EventUID"": 43645, ""CR3"": ""0x99a65001"", ""PageVA"": ""0x7ff77176e000"", ""VADBase"": ""0x7ff771760000"", ""VADEnd"": ""0x7ff771782fff"", ""VADName"": ""\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""DumpSize"": ""0x1000"", ""DumpFile"": ""\/tmp\/dumps\/7ff77176e000_31287c55df232436.page"", ""SHA256"": ""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"", ""DumpID"": 15, ""TrapPA"": ""0x70b828a4"", ""GFN"": ""0x70b82"" }
Example output of the commandline (same analysis):
{""Plugin"":""execframe"",""TimeStamp"":""1613056257.402199"",""PID"":5696,""PPID"":3032,""TID"":3748,""UserName"":""SessionID"",""UserId"":1,""ProcessName"":""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""Method"":""execute_faulted_cb"",""EventUID"":""0xaa7d"",""CR3"":""0x99a65001"",""PageVA"":""0x7ff77176e000"",""VADBase"":""0x7ff771760000"",""VADEnd"":""0x7ff771782fff"",""VADName"":""\\Users\\master\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""DumpSize"":4096,""DumpFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.page"",""SHA256"":""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"",""DumpID"":15,""MetaFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.metafile"",""TrapPA"":""0x70b828a4"",""GFN"":""0x70b82""} 
Additional information
You may wonder why this plugin is called hyperbee. This is because of the name of the behaviour detection tool (from Politecnico di Milano) I integrated, which is referring to ""bees"". Since I call this tool for each page dump and thus, very often, it reminded me of a very diligent and busy ""bee"". Thus the name ""hyperbee"".
There are two other flags in hyperbee.h for two ideas which are rather experimental (or need refinement):

DUMP_VAD: Lets you dump the whole VAD node instead of just the page. The problem I saw with it is, that the vad content (as collection of pages) is loaded dynamically on access. On the one hand hashing of vad nodes is more or less not reasonable since whenever a new page is loaded within the vad node the whole node is dumped and leads to another hash. On the other hand by being able to see which parts within the vad are loaded/accessed/executed after another might be interesting for malware analysis. The page mode is quicker, as it just has to hash 4096 bytes each time.
IGNORE_SYSTEM_DLL If we assume that the system's integrity is ensured turning on this flags discards the dump of all pages/vads whose vad name contains either System32 and SysWOW64. This gave me a major speedup since my PC is rather old and I was not interested in calls within the common Windows libraries/executables.

Feel free to share any questions and suggestions!
Klaus
Co-authored-by: Michał Leszczyński michal.leszczynski@cert.pl","@tklengyel Do you think it would be possible to rename this plugin to ""hypermonitor"" or something else?
The name ""HyperBee"" originates from the combination of this plugin and some unpublished tools (which are included in my thesis, but not part of this PR).
Since my whole thesis is named ""HyperBee"" and the code in this PR is just a part of the original code, it would lead to some confusion I guess. Therefore, I would like to rename the plugin here.
Do you think that would be ok? Then I would create a PR for that.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1133,2021-02-11T15:25:16Z,2021-02-19T13:26:14Z,2021-03-10T15:43:48Z,MERGED,True,1830,1,9,https://github.com/Id3aFly,Hyperbee plugin,48,[],https://github.com/tklengyel/drakvuf/pull/1133,https://github.com/tklengyel,40,https://github.com/tklengyel/drakvuf/pull/1133#issuecomment-783460379,"Hello everyone,
this is my first ever pull request so I'm very interested in your feedback! :)
Background
During my masters thesis at FAU Erlangen-Nürnberg (FAU) I created a plugin called ""hyperbee"" that is at least part of the working name. The topic of my masters thesis is to efficiently dump the content of executable pages and analyse it with a (currently still private) tool from Politecnico di Milano (IT). Based on the detected behaviour a classifier could later determine if the page contains malicious code or not.
I was talking with @icedevml about this plugin and he encouraged me to share my code within a pull request. Luckily all of my supervisors approved this idea, so I can finally share my code with you. I am just allowed to share the code regarding the monitoring/dumping of pages and cannot include the behaviour detection code. Based on what I've seen in other plugins (memdump, ipt) I created a similar plugin:
Principle of operation


At first it creates a trap at the entry of MmAccessFault


This 1st trap's callback can get hold of the virtual address MmAccessFault shall assign as new page to. Additionally the cb adds another trap when returning from MmAccessFault and continuing with the actual code.


This 2nd trap's callback intercepts right after returning from MmAccessFault and can obtain the page frame number which was assigned to the virtual address. So we know the relation of virtual page ~ physical (guest) frame number. Furthermore this adds a new trap, whenever code is executed (instructions are fetched) from this frame.
[Now we don't care about writes or reads which for example may include code unpacking, decrypting, etc. We just wait when code is executed to dump the content of the whole page.]


When this third trap (instruction fetch from a monitored page) occurs, things like hash calculation (prevents duplicates -> speedup) and dumps are induced.
[At this point (it is marked within the code) I also analyse the regarding memory for specific behaviour. Additionally a classifier could then set a malware flag if the page contains malicious behaviour or not.]
Depending on a ""malware"" flag (predetemined by MALWARE_DEFAULT or other custom set flags in hyperbee.h: LOG_ALWAYS, DUMP_ALWAYS) the subsequent behaviour is determined:

the current data gathered through the analysis can be printed to the shell
the memory dump can be stored permanently (together with a metadata file).

Additionally the exec trap is deleted and swapped for a write trap.
[Now we don't care about execs or reads as long as the page content remains unchanged since we already dumped that. We just wait when code is modified.]


When this new write trap gets active it just deletes itself and installs a new exec trap. The callback of this exec trap is what is described in step 4.
[Thus, we are able to permanently swap traps to dump the page on an instruction fetch, whenever it has been modified since the last execution].


How to use
Hyperbee uses two command line options:
--hyperbee-dump-dir : required, defines the path to store the dumps within a ""dumps"" folder
--hyperbee-filter-executable : optional, discards all pages which vad node does not belong to a binary whose absolute path does not contain this name. Therefore, you can filter for paths or filenames, etc.
sudo ./src/drakvuf -r /root/win10.json -d win10 -a hyperbee --hyperbee-dump-dir /tmp/ --hyperbee-filter-executable RandomExample
Output
Example output of the metafile:
{ ""TimeStamp"": ""1613056257.402199"", ""PID"": 5696, ""PPID"": 3032, ""TID"": 3748, ""UserID"": 1, ""ProcessName"": ""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""EventUID"": 43645, ""CR3"": ""0x99a65001"", ""PageVA"": ""0x7ff77176e000"", ""VADBase"": ""0x7ff771760000"", ""VADEnd"": ""0x7ff771782fff"", ""VADName"": ""\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"", ""DumpSize"": ""0x1000"", ""DumpFile"": ""\/tmp\/dumps\/7ff77176e000_31287c55df232436.page"", ""SHA256"": ""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"", ""DumpID"": 15, ""TrapPA"": ""0x70b828a4"", ""GFN"": ""0x70b82"" }
Example output of the commandline (same analysis):
{""Plugin"":""execframe"",""TimeStamp"":""1613056257.402199"",""PID"":5696,""PPID"":3032,""TID"":3748,""UserName"":""SessionID"",""UserId"":1,""ProcessName"":""\\Device\\HarddiskVolume2\\Users\\master\\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""Method"":""execute_faulted_cb"",""EventUID"":""0xaa7d"",""CR3"":""0x99a65001"",""PageVA"":""0x7ff77176e000"",""VADBase"":""0x7ff771760000"",""VADEnd"":""0x7ff771782fff"",""VADName"":""\\Users\\master\Downloads\\randomFiles\\randomFiles\\1\\RandomExample_001_clO1.exe"",""DumpSize"":4096,""DumpFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.page"",""SHA256"":""31287c55df23243634c56aa75aed1241d9c3055518b17e8695c7a1f0cefa1615"",""DumpID"":15,""MetaFile"":""/tmp/dumps/7ff77176e000_31287c55df232436.metafile"",""TrapPA"":""0x70b828a4"",""GFN"":""0x70b82""} 
Additional information
You may wonder why this plugin is called hyperbee. This is because of the name of the behaviour detection tool (from Politecnico di Milano) I integrated, which is referring to ""bees"". Since I call this tool for each page dump and thus, very often, it reminded me of a very diligent and busy ""bee"". Thus the name ""hyperbee"".
There are two other flags in hyperbee.h for two ideas which are rather experimental (or need refinement):

DUMP_VAD: Lets you dump the whole VAD node instead of just the page. The problem I saw with it is, that the vad content (as collection of pages) is loaded dynamically on access. On the one hand hashing of vad nodes is more or less not reasonable since whenever a new page is loaded within the vad node the whole node is dumped and leads to another hash. On the other hand by being able to see which parts within the vad are loaded/accessed/executed after another might be interesting for malware analysis. The page mode is quicker, as it just has to hash 4096 bytes each time.
IGNORE_SYSTEM_DLL If we assume that the system's integrity is ensured turning on this flags discards the dump of all pages/vads whose vad name contains either System32 and SysWOW64. This gave me a major speedup since my PC is rather old and I was not interested in calls within the common Windows libraries/executables.

Feel free to share any questions and suggestions!
Klaus
Co-authored-by: Michał Leszczyński michal.leszczynski@cert.pl","I don't mind, feel free to open a PR renaming it.",True,{'THUMBS_UP': ['https://github.com/Id3aFly']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1134,2021-02-11T22:41:08Z,2021-02-12T01:02:27Z,2021-02-12T09:51:38Z,MERGED,True,174,174,174,https://github.com/Id3aFly,fixed spelling in drakvuf license terms,1,[],https://github.com/tklengyel/drakvuf/pull/1134,https://github.com/Id3aFly,1,https://github.com/tklengyel/drakvuf/pull/1134,"Just found a spelling mistake in the drakvuf license terms.
Since they are commonly used and as license terms more or less important, I thought I would fix all those mistakes at once.
I did change it programmatically and not by hand, so all the changes are the same.","Just found a spelling mistake in the drakvuf license terms.
Since they are commonly used and as license terms more or less important, I thought I would fix all those mistakes at once.
I did change it programmatically and not by hand, so all the changes are the same.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1134,2021-02-11T22:41:08Z,2021-02-12T01:02:27Z,2021-02-12T09:51:38Z,MERGED,True,174,174,174,https://github.com/Id3aFly,fixed spelling in drakvuf license terms,1,[],https://github.com/tklengyel/drakvuf/pull/1134,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1134#issuecomment-777840780,"Just found a spelling mistake in the drakvuf license terms.
Since they are commonly used and as license terms more or less important, I thought I would fix all those mistakes at once.
I did change it programmatically and not by hand, so all the changes are the same.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1134,2021-02-11T22:41:08Z,2021-02-12T01:02:27Z,2021-02-12T09:51:38Z,MERGED,True,174,174,174,https://github.com/Id3aFly,fixed spelling in drakvuf license terms,1,[],https://github.com/tklengyel/drakvuf/pull/1134,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1134#issuecomment-777898482,"Just found a spelling mistake in the drakvuf license terms.
Since they are commonly used and as license terms more or less important, I thought I would fix all those mistakes at once.
I did change it programmatically and not by hand, so all the changes are the same.",Thanks! :) The one sentence where I diverge from the nmap license of course has a typo. Go figure :),True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1134,2021-02-11T22:41:08Z,2021-02-12T01:02:27Z,2021-02-12T09:51:38Z,MERGED,True,174,174,174,https://github.com/Id3aFly,fixed spelling in drakvuf license terms,1,[],https://github.com/tklengyel/drakvuf/pull/1134,https://github.com/Id3aFly,4,https://github.com/tklengyel/drakvuf/pull/1134#issuecomment-778093283,"Just found a spelling mistake in the drakvuf license terms.
Since they are commonly used and as license terms more or less important, I thought I would fix all those mistakes at once.
I did change it programmatically and not by hand, so all the changes are the same.",Thanks for merging that so quickly! Should / Can I now delete this branch at my fork?,True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1135,2021-02-13T15:10:52Z,2021-02-13T15:20:48Z,2021-02-13T15:20:48Z,CLOSED,False,1422,0,8,https://github.com/icedevml,[do not merge] hyperbee plugin CI tests,14,[],https://github.com/tklengyel/drakvuf/pull/1135,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/1135,This is a dummy PR to test Hyperbee plugin with DRAKVUF CI.,This is a dummy PR to test Hyperbee plugin with DRAKVUF CI.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1137,2021-02-13T16:49:12Z,2021-02-13T16:49:20Z,2021-02-13T16:49:23Z,MERGED,True,28,0,1,https://github.com/tklengyel,Add snapcraft.yaml,1,[],https://github.com/tklengyel/drakvuf/pull/1137,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1137,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1138,2021-02-13T17:20:06Z,2021-02-13T17:20:13Z,2021-02-13T17:20:16Z,MERGED,True,11,2,1,https://github.com/tklengyel,Update snapcraft.yaml,1,[],https://github.com/tklengyel/drakvuf/pull/1138,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1138,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1139,2021-02-13T17:36:48Z,2021-02-13T17:36:54Z,2021-02-13T17:36:57Z,MERGED,True,1,4,1,https://github.com/tklengyel,Install libvmi snap manually,1,[],https://github.com/tklengyel/drakvuf/pull/1139,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1139,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1140,2021-02-15T11:54:03Z,2021-02-15T12:10:00Z,2021-02-15T12:10:00Z,CLOSED,False,1557,1,9,https://github.com/icedevml,[do not merge] Hyperbee plugin,27,[],https://github.com/tklengyel/drakvuf/pull/1140,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/1140,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1141,2021-02-18T14:42:09Z,2021-02-19T15:23:50Z,2021-04-08T12:36:21Z,CLOSED,False,246,22,6,https://github.com/skvl,memdump: hook MmAccessFault and dump executable regions,2,[],https://github.com/tklengyel/drakvuf/pull/1141,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1141,"The new hook dumps those memory regions that not belongs to any loaded module.
This a work in progress. Though I would like to share it to avoid merge conflicts in the future.","The new hook dumps those memory regions that not belongs to any loaded module.
This a work in progress. Though I would like to share it to avoid merge conflicts in the future.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1141,2021-02-18T14:42:09Z,2021-02-19T15:23:50Z,2021-04-08T12:36:21Z,CLOSED,False,246,22,6,https://github.com/skvl,memdump: hook MmAccessFault and dump executable regions,2,[],https://github.com/tklengyel/drakvuf/pull/1141,https://github.com/icedevml,2,https://github.com/tklengyel/drakvuf/pull/1141#issuecomment-781469089,"The new hook dumps those memory regions that not belongs to any loaded module.
This a work in progress. Though I would like to share it to avoid merge conflicts in the future.","Hi, have you checked Hyperbee plugin? I think it at least partially overlaps with this PR.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1141,2021-02-18T14:42:09Z,2021-02-19T15:23:50Z,2021-04-08T12:36:21Z,CLOSED,False,246,22,6,https://github.com/skvl,memdump: hook MmAccessFault and dump executable regions,2,[],https://github.com/tklengyel/drakvuf/pull/1141,https://github.com/skvl,3,https://github.com/tklengyel/drakvuf/pull/1141#issuecomment-781980360,"The new hook dumps those memory regions that not belongs to any loaded module.
This a work in progress. Though I would like to share it to avoid merge conflicts in the future.",The performance degradation have been noticed about 15%. Though as I have mentioned this is a work in progress. And this method is optional.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1141,2021-02-18T14:42:09Z,2021-02-19T15:23:50Z,2021-04-08T12:36:21Z,CLOSED,False,246,22,6,https://github.com/skvl,memdump: hook MmAccessFault and dump executable regions,2,[],https://github.com/tklengyel/drakvuf/pull/1141,https://github.com/drakvuf-jenkins,4,https://github.com/tklengyel/drakvuf/pull/1141#issuecomment-781980381,"The new hook dumps those memory regions that not belongs to any loaded module.
This a work in progress. Though I would like to share it to avoid merge conflicts in the future.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1141,2021-02-18T14:42:09Z,2021-02-19T15:23:50Z,2021-04-08T12:36:21Z,CLOSED,False,246,22,6,https://github.com/skvl,memdump: hook MmAccessFault and dump executable regions,2,[],https://github.com/tklengyel/drakvuf/pull/1141,https://github.com/skvl,5,https://github.com/tklengyel/drakvuf/pull/1141#issuecomment-781980882,"The new hook dumps those memory regions that not belongs to any loaded module.
This a work in progress. Though I would like to share it to avoid merge conflicts in the future.",@icedevml thanks. I will check it.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1141,2021-02-18T14:42:09Z,2021-02-19T15:23:50Z,2021-04-08T12:36:21Z,CLOSED,False,246,22,6,https://github.com/skvl,memdump: hook MmAccessFault and dump executable regions,2,[],https://github.com/tklengyel/drakvuf/pull/1141,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1141#issuecomment-782076897,"The new hook dumps those memory regions that not belongs to any loaded module.
This a work in progress. Though I would like to share it to avoid merge conflicts in the future.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1141,2021-02-18T14:42:09Z,2021-02-19T15:23:50Z,2021-04-08T12:36:21Z,CLOSED,False,246,22,6,https://github.com/skvl,memdump: hook MmAccessFault and dump executable regions,2,[],https://github.com/tklengyel/drakvuf/pull/1141,https://github.com/skvl,7,https://github.com/tklengyel/drakvuf/pull/1141#issuecomment-782145141,"The new hook dumps those memory regions that not belongs to any loaded module.
This a work in progress. Though I would like to share it to avoid merge conflicts in the future.",Close in flavor of #1133,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1142,2021-02-19T10:32:50Z,2021-02-19T13:29:58Z,2021-04-08T12:36:24Z,MERGED,True,13,2,1,https://github.com/skvl,syscalls: describe new functions,1,[],https://github.com/tklengyel/drakvuf/pull/1142,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1142,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1142,2021-02-19T10:32:50Z,2021-02-19T13:29:58Z,2021-04-08T12:36:24Z,MERGED,True,13,2,1,https://github.com/skvl,syscalls: describe new functions,1,[],https://github.com/tklengyel/drakvuf/pull/1142,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1142#issuecomment-781988268,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1143,2021-02-19T10:35:39Z,2021-02-20T00:12:06Z,2021-04-08T12:36:23Z,MERGED,True,57,3,2,https://github.com/skvl,rpcmon: intercept I_RpcXxx methods,1,[],https://github.com/tklengyel/drakvuf/pull/1143,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1143,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1143,2021-02-19T10:35:39Z,2021-02-20T00:12:06Z,2021-04-08T12:36:23Z,MERGED,True,57,3,2,https://github.com/skvl,rpcmon: intercept I_RpcXxx methods,1,[],https://github.com/tklengyel/drakvuf/pull/1143,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1143#issuecomment-781989886,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1143,2021-02-19T10:35:39Z,2021-02-20T00:12:06Z,2021-04-08T12:36:23Z,MERGED,True,57,3,2,https://github.com/skvl,rpcmon: intercept I_RpcXxx methods,1,[],https://github.com/tklengyel/drakvuf/pull/1143,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1143#issuecomment-782076652,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1144,2021-02-19T10:36:34Z,2021-02-19T13:32:53Z,2021-04-08T12:36:22Z,MERGED,True,2,0,1,https://github.com/skvl,procdump: refactor,1,[],https://github.com/tklengyel/drakvuf/pull/1144,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1144,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1144,2021-02-19T10:36:34Z,2021-02-19T13:32:53Z,2021-04-08T12:36:22Z,MERGED,True,2,0,1,https://github.com/skvl,procdump: refactor,1,[],https://github.com/tklengyel/drakvuf/pull/1144,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1144#issuecomment-781990363,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1145,2021-02-19T10:37:58Z,2021-02-20T00:14:07Z,2021-04-08T12:36:19Z,MERGED,True,27,2,2,https://github.com/skvl,filedelete: fix stop plugin; extra fixes,1,[],https://github.com/tklengyel/drakvuf/pull/1145,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1145,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1145,2021-02-19T10:37:58Z,2021-02-20T00:14:07Z,2021-04-08T12:36:19Z,MERGED,True,27,2,2,https://github.com/skvl,filedelete: fix stop plugin; extra fixes,1,[],https://github.com/tklengyel/drakvuf/pull/1145,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1145#issuecomment-781991033,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1145,2021-02-19T10:37:58Z,2021-02-20T00:14:07Z,2021-04-08T12:36:19Z,MERGED,True,27,2,2,https://github.com/skvl,filedelete: fix stop plugin; extra fixes,1,[],https://github.com/tklengyel/drakvuf/pull/1145,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1145#issuecomment-782078208,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1146,2021-02-19T11:34:57Z,2021-02-20T00:17:12Z,2021-02-20T00:17:13Z,MERGED,True,25,4,1,https://github.com/chivay,Validate plugin names passed by user,2,[],https://github.com/tklengyel/drakvuf/pull/1146,https://github.com/chivay,1,https://github.com/tklengyel/drakvuf/pull/1146,Fail when user tries to enable or disable plugin that doesn't exist.,Fail when user tries to enable or disable plugin that doesn't exist.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1146,2021-02-19T11:34:57Z,2021-02-20T00:17:12Z,2021-02-20T00:17:13Z,MERGED,True,25,4,1,https://github.com/chivay,Validate plugin names passed by user,2,[],https://github.com/tklengyel/drakvuf/pull/1146,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1146#issuecomment-782019965,Fail when user tries to enable or disable plugin that doesn't exist.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1146,2021-02-19T11:34:57Z,2021-02-20T00:17:12Z,2021-02-20T00:17:13Z,MERGED,True,25,4,1,https://github.com/chivay,Validate plugin names passed by user,2,[],https://github.com/tklengyel/drakvuf/pull/1146,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/1146#issuecomment-782051994,Fail when user tries to enable or disable plugin that doesn't exist.,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1146,2021-02-19T11:34:57Z,2021-02-20T00:17:12Z,2021-02-20T00:17:13Z,MERGED,True,25,4,1,https://github.com/chivay,Validate plugin names passed by user,2,[],https://github.com/tklengyel/drakvuf/pull/1146,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/1146#issuecomment-782063402,Fail when user tries to enable or disable plugin that doesn't exist.,@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1147,2021-02-19T14:04:57Z,2021-02-20T00:36:15Z,2021-02-24T02:28:52Z,MERGED,True,5,1,2,https://github.com/tklengyel,Fix issue spotted by coverity,2,[],https://github.com/tklengyel/drakvuf/pull/1147,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1147,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1148,2021-02-19T15:26:36Z,2021-02-20T00:16:39Z,2021-04-08T12:36:21Z,MERGED,True,90,22,5,https://github.com/skvl,memdump: add options to disable hooks,1,[],https://github.com/tklengyel/drakvuf/pull/1148,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1148,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1148,2021-02-19T15:26:36Z,2021-02-20T00:16:39Z,2021-04-08T12:36:21Z,MERGED,True,90,22,5,https://github.com/skvl,memdump: add options to disable hooks,1,[],https://github.com/tklengyel/drakvuf/pull/1148,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1148#issuecomment-782146866,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1149,2021-02-20T13:30:39Z,2021-02-20T14:25:23Z,2021-04-08T12:36:22Z,MERGED,True,11,11,1,https://github.com/skvl,procdump: fix SIGSEGV on uninitilized pointer,1,[],https://github.com/tklengyel/drakvuf/pull/1149,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1149,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1149,2021-02-20T13:30:39Z,2021-02-20T14:25:23Z,2021-04-08T12:36:22Z,MERGED,True,11,11,1,https://github.com/skvl,procdump: fix SIGSEGV on uninitilized pointer,1,[],https://github.com/tklengyel/drakvuf/pull/1149,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1149#issuecomment-782657124,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1149,2021-02-20T13:30:39Z,2021-02-20T14:25:23Z,2021-04-08T12:36:22Z,MERGED,True,11,11,1,https://github.com/skvl,procdump: fix SIGSEGV on uninitilized pointer,1,[],https://github.com/tklengyel/drakvuf/pull/1149,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1149#issuecomment-782659813,,Wouldn't it be simpler to just memset the structure to zero when allocating it?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1149,2021-02-20T13:30:39Z,2021-02-20T14:25:23Z,2021-04-08T12:36:22Z,MERGED,True,11,11,1,https://github.com/skvl,procdump: fix SIGSEGV on uninitilized pointer,1,[],https://github.com/tklengyel/drakvuf/pull/1149,https://github.com/skvl,4,https://github.com/tklengyel/drakvuf/pull/1149#issuecomment-782661706,,This would not be C++ way.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1149,2021-02-20T13:30:39Z,2021-02-20T14:25:23Z,2021-04-08T12:36:22Z,MERGED,True,11,11,1,https://github.com/skvl,procdump: fix SIGSEGV on uninitilized pointer,1,[],https://github.com/tklengyel/drakvuf/pull/1149,https://github.com/skvl,5,https://github.com/tklengyel/drakvuf/pull/1149#issuecomment-782663108,,And thus we avoid future errors when somebody forget to memset it.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1150,2021-02-23T12:45:03Z,2021-02-23T17:03:24Z,2021-02-23T17:03:24Z,MERGED,True,77,38,2,https://github.com/chivay,xen_helper: Fix vmtrace interface,5,[],https://github.com/tklengyel/drakvuf/pull/1150,https://github.com/chivay,1,https://github.com/tklengyel/drakvuf/pull/1150,"Reworked xen_helper to make it compile with the final interface that landed in Xen.
Replaced xc_vmtrace_enable with xc_vmtrace_reset_and_enable to allow tracing VM multiple times.
Added xen_set/get_ipt_option to control MSRs

I have some doubts about error codes returned by IPT-related functions. All of them return ints, however
the values are negated  - the convention is to return 0 in case of success and non-zero in case of failure.
Additionaly, @tklengyel said that he prefers returning bools instead, so I think that return values should also be changed.
CC @icedevml","Reworked xen_helper to make it compile with the final interface that landed in Xen.
Replaced xc_vmtrace_enable with xc_vmtrace_reset_and_enable to allow tracing VM multiple times.
Added xen_set/get_ipt_option to control MSRs

I have some doubts about error codes returned by IPT-related functions. All of them return ints, however
the values are negated  - the convention is to return 0 in case of success and non-zero in case of failure.
Additionaly, @tklengyel said that he prefers returning bools instead, so I think that return values should also be changed.
CC @icedevml",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1150,2021-02-23T12:45:03Z,2021-02-23T17:03:24Z,2021-02-23T17:03:24Z,MERGED,True,77,38,2,https://github.com/chivay,xen_helper: Fix vmtrace interface,5,[],https://github.com/tklengyel/drakvuf/pull/1150,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1150#issuecomment-784175801,"Reworked xen_helper to make it compile with the final interface that landed in Xen.
Replaced xc_vmtrace_enable with xc_vmtrace_reset_and_enable to allow tracing VM multiple times.
Added xen_set/get_ipt_option to control MSRs

I have some doubts about error codes returned by IPT-related functions. All of them return ints, however
the values are negated  - the convention is to return 0 in case of success and non-zero in case of failure.
Additionaly, @tklengyel said that he prefers returning bools instead, so I think that return values should also be changed.
CC @icedevml",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1150,2021-02-23T12:45:03Z,2021-02-23T17:03:24Z,2021-02-23T17:03:24Z,MERGED,True,77,38,2,https://github.com/chivay,xen_helper: Fix vmtrace interface,5,[],https://github.com/tklengyel/drakvuf/pull/1150,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/1150#issuecomment-784205401,"Reworked xen_helper to make it compile with the final interface that landed in Xen.
Replaced xc_vmtrace_enable with xc_vmtrace_reset_and_enable to allow tracing VM multiple times.
Added xen_set/get_ipt_option to control MSRs

I have some doubts about error codes returned by IPT-related functions. All of them return ints, however
the values are negated  - the convention is to return 0 in case of success and non-zero in case of failure.
Additionaly, @tklengyel said that he prefers returning bools instead, so I think that return values should also be changed.
CC @icedevml",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1150,2021-02-23T12:45:03Z,2021-02-23T17:03:24Z,2021-02-23T17:03:24Z,MERGED,True,77,38,2,https://github.com/chivay,xen_helper: Fix vmtrace interface,5,[],https://github.com/tklengyel/drakvuf/pull/1150,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/1150#issuecomment-784207715,"Reworked xen_helper to make it compile with the final interface that landed in Xen.
Replaced xc_vmtrace_enable with xc_vmtrace_reset_and_enable to allow tracing VM multiple times.
Added xen_set/get_ipt_option to control MSRs

I have some doubts about error codes returned by IPT-related functions. All of them return ints, however
the values are negated  - the convention is to return 0 in case of success and non-zero in case of failure.
Additionaly, @tklengyel said that he prefers returning bools instead, so I think that return values should also be changed.
CC @icedevml","Additionaly, @tklengyel said that he prefers returning bools instead, so I think that return values should also be changed.

I'm also for having this as bool, this is more logical that true means success, contradictory to the ""return code"" format.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1150,2021-02-23T12:45:03Z,2021-02-23T17:03:24Z,2021-02-23T17:03:24Z,MERGED,True,77,38,2,https://github.com/chivay,xen_helper: Fix vmtrace interface,5,[],https://github.com/tklengyel/drakvuf/pull/1150,https://github.com/chivay,5,https://github.com/tklengyel/drakvuf/pull/1150#issuecomment-784228669,"Reworked xen_helper to make it compile with the final interface that landed in Xen.
Replaced xc_vmtrace_enable with xc_vmtrace_reset_and_enable to allow tracing VM multiple times.
Added xen_set/get_ipt_option to control MSRs

I have some doubts about error codes returned by IPT-related functions. All of them return ints, however
the values are negated  - the convention is to return 0 in case of success and non-zero in case of failure.
Additionaly, @tklengyel said that he prefers returning bools instead, so I think that return values should also be changed.
CC @icedevml",OK 👍,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1151,2021-02-24T02:30:52Z,2021-02-24T20:16:31Z,2021-02-24T20:16:33Z,MERGED,True,4,2,1,https://github.com/tklengyel,Fix coverity issue,1,[],https://github.com/tklengyel/drakvuf/pull/1151,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1151,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1151,2021-02-24T02:30:52Z,2021-02-24T20:16:31Z,2021-02-24T20:16:33Z,MERGED,True,4,2,1,https://github.com/tklengyel,Fix coverity issue,1,[],https://github.com/tklengyel/drakvuf/pull/1151,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/1151#issuecomment-785320633,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1152,2021-02-24T10:30:28Z,2021-02-24T19:32:01Z,2021-02-25T08:08:26Z,MERGED,True,6,2,1,https://github.com/chivay,Don't buffer output when printing to terminal,1,[],https://github.com/tklengyel/drakvuf/pull/1152,https://github.com/chivay,1,https://github.com/tklengyel/drakvuf/pull/1152,Should fix #1136,Should fix #1136,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1152,2021-02-24T10:30:28Z,2021-02-24T19:32:01Z,2021-02-25T08:08:26Z,MERGED,True,6,2,1,https://github.com/chivay,Don't buffer output when printing to terminal,1,[],https://github.com/tklengyel/drakvuf/pull/1152,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1152#issuecomment-784976811,Should fix #1136,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1152,2021-02-24T10:30:28Z,2021-02-24T19:32:01Z,2021-02-25T08:08:26Z,MERGED,True,6,2,1,https://github.com/chivay,Don't buffer output when printing to terminal,1,[],https://github.com/tklengyel/drakvuf/pull/1152,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1152#issuecomment-785081783,Should fix #1136,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1153,2021-02-26T14:55:32Z,2021-02-26T17:02:05Z,2021-02-27T12:16:56Z,MERGED,True,0,8,1,https://github.com/chivay,xen_helper: Fix broken IPT shutdown,1,[],https://github.com/tklengyel/drakvuf/pull/1153,https://github.com/chivay,1,https://github.com/tklengyel/drakvuf/pull/1153,"OK, I'm dumb. Doing this for each vCPU does bad(tm) things to the heap.","OK, I'm dumb. Doing this for each vCPU does bad(tm) things to the heap.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1153,2021-02-26T14:55:32Z,2021-02-26T17:02:05Z,2021-02-27T12:16:56Z,MERGED,True,0,8,1,https://github.com/chivay,xen_helper: Fix broken IPT shutdown,1,[],https://github.com/tklengyel/drakvuf/pull/1153,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1153#issuecomment-786696514,"OK, I'm dumb. Doing this for each vCPU does bad(tm) things to the heap.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1154,2021-03-01T18:39:36Z,2021-03-03T02:12:42Z,2021-03-10T15:36:31Z,MERGED,True,146,144,8,https://github.com/Id3aFly,Rename hyperbee plugin to codemon,5,[],https://github.com/tklengyel/drakvuf/pull/1154,https://github.com/Id3aFly,1,https://github.com/tklengyel/drakvuf/pull/1154,"This PR follows the PR #1133 and just changes the name of the plugin.
Since the name ""HyperBee"" originates from the combination of this plugin and some unpublished tools (which are included in my thesis, but not part of this PR), it is necessary to rename this drakvuf plugin to better differentiate between the parts of my thesis work.
My whole thesis is named ""HyperBee"" and the code of PR #1133  is just a part of the original code. Therefore, I would like to rename the plugin here.","This PR follows the PR #1133 and just changes the name of the plugin.
Since the name ""HyperBee"" originates from the combination of this plugin and some unpublished tools (which are included in my thesis, but not part of this PR), it is necessary to rename this drakvuf plugin to better differentiate between the parts of my thesis work.
My whole thesis is named ""HyperBee"" and the code of PR #1133  is just a part of the original code. Therefore, I would like to rename the plugin here.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1154,2021-03-01T18:39:36Z,2021-03-03T02:12:42Z,2021-03-10T15:36:31Z,MERGED,True,146,144,8,https://github.com/Id3aFly,Rename hyperbee plugin to codemon,5,[],https://github.com/tklengyel/drakvuf/pull/1154,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1154#issuecomment-788177351,"This PR follows the PR #1133 and just changes the name of the plugin.
Since the name ""HyperBee"" originates from the combination of this plugin and some unpublished tools (which are included in my thesis, but not part of this PR), it is necessary to rename this drakvuf plugin to better differentiate between the parts of my thesis work.
My whole thesis is named ""HyperBee"" and the code of PR #1133  is just a part of the original code. Therefore, I would like to rename the plugin here.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1154,2021-03-01T18:39:36Z,2021-03-03T02:12:42Z,2021-03-10T15:36:31Z,MERGED,True,146,144,8,https://github.com/Id3aFly,Rename hyperbee plugin to codemon,5,[],https://github.com/tklengyel/drakvuf/pull/1154,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1154#issuecomment-788238012,"This PR follows the PR #1133 and just changes the name of the plugin.
Since the name ""HyperBee"" originates from the combination of this plugin and some unpublished tools (which are included in my thesis, but not part of this PR), it is necessary to rename this drakvuf plugin to better differentiate between the parts of my thesis work.
My whole thesis is named ""HyperBee"" and the code of PR #1133  is just a part of the original code. Therefore, I would like to rename the plugin here.","May I suggest the name HyperMon instead? Most of the ""monitor"" plugins are just called ""mon"", so that would make this one consistent with the naming scheme.",True,{'THUMBS_UP': ['https://github.com/Id3aFly']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1154,2021-03-01T18:39:36Z,2021-03-03T02:12:42Z,2021-03-10T15:36:31Z,MERGED,True,146,144,8,https://github.com/Id3aFly,Rename hyperbee plugin to codemon,5,[],https://github.com/tklengyel/drakvuf/pull/1154,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/1154#issuecomment-788242191,"This PR follows the PR #1133 and just changes the name of the plugin.
Since the name ""HyperBee"" originates from the combination of this plugin and some unpublished tools (which are included in my thesis, but not part of this PR), it is necessary to rename this drakvuf plugin to better differentiate between the parts of my thesis work.
My whole thesis is named ""HyperBee"" and the code of PR #1133  is just a part of the original code. Therefore, I would like to rename the plugin here.","I think hyper doesn't bring any insight here because everything is hyper in DRAKVUF. Since it monitors code/execution, maybe execmon? This might sound too similar to exmon though.",True,{'THUMBS_UP': ['https://github.com/Id3aFly']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1154,2021-03-01T18:39:36Z,2021-03-03T02:12:42Z,2021-03-10T15:36:31Z,MERGED,True,146,144,8,https://github.com/Id3aFly,Rename hyperbee plugin to codemon,5,[],https://github.com/tklengyel/drakvuf/pull/1154,https://github.com/icedevml,5,https://github.com/tklengyel/drakvuf/pull/1154#issuecomment-788242890,"This PR follows the PR #1133 and just changes the name of the plugin.
Since the name ""HyperBee"" originates from the combination of this plugin and some unpublished tools (which are included in my thesis, but not part of this PR), it is necessary to rename this drakvuf plugin to better differentiate between the parts of my thesis work.
My whole thesis is named ""HyperBee"" and the code of PR #1133  is just a part of the original code. Therefore, I would like to rename the plugin here.",And generally I would say don't rename until it's really necessary.,True,"{'THUMBS_UP': ['https://github.com/chivay', 'https://github.com/BonusPlay', 'https://github.com/Id3aFly']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1154,2021-03-01T18:39:36Z,2021-03-03T02:12:42Z,2021-03-10T15:36:31Z,MERGED,True,146,144,8,https://github.com/Id3aFly,Rename hyperbee plugin to codemon,5,[],https://github.com/tklengyel/drakvuf/pull/1154,https://github.com/Id3aFly,6,https://github.com/tklengyel/drakvuf/pull/1154#issuecomment-788710641,"This PR follows the PR #1133 and just changes the name of the plugin.
Since the name ""HyperBee"" originates from the combination of this plugin and some unpublished tools (which are included in my thesis, but not part of this PR), it is necessary to rename this drakvuf plugin to better differentiate between the parts of my thesis work.
My whole thesis is named ""HyperBee"" and the code of PR #1133  is just a part of the original code. Therefore, I would like to rename the plugin here.","For my thesis it is required to rename it, that's why I'd like to do.
What do you think of ""PageExecMon""?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1154,2021-03-01T18:39:36Z,2021-03-03T02:12:42Z,2021-03-10T15:36:31Z,MERGED,True,146,144,8,https://github.com/Id3aFly,Rename hyperbee plugin to codemon,5,[],https://github.com/tklengyel/drakvuf/pull/1154,https://github.com/icedevml,7,https://github.com/tklengyel/drakvuf/pull/1154#issuecomment-788831288,"This PR follows the PR #1133 and just changes the name of the plugin.
Since the name ""HyperBee"" originates from the combination of this plugin and some unpublished tools (which are included in my thesis, but not part of this PR), it is necessary to rename this drakvuf plugin to better differentiate between the parts of my thesis work.
My whole thesis is named ""HyperBee"" and the code of PR #1133  is just a part of the original code. Therefore, I would like to rename the plugin here.",Or maybe codemon? [Machine] Code Mon[itor],True,"{'THUMBS_UP': ['https://github.com/Id3aFly', 'https://github.com/chivay', 'https://github.com/tklengyel', 'https://github.com/BonusPlay']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1154,2021-03-01T18:39:36Z,2021-03-03T02:12:42Z,2021-03-10T15:36:31Z,MERGED,True,146,144,8,https://github.com/Id3aFly,Rename hyperbee plugin to codemon,5,[],https://github.com/tklengyel/drakvuf/pull/1154,https://github.com/Id3aFly,8,https://github.com/tklengyel/drakvuf/pull/1154#issuecomment-788840303,"This PR follows the PR #1133 and just changes the name of the plugin.
Since the name ""HyperBee"" originates from the combination of this plugin and some unpublished tools (which are included in my thesis, but not part of this PR), it is necessary to rename this drakvuf plugin to better differentiate between the parts of my thesis work.
My whole thesis is named ""HyperBee"" and the code of PR #1133  is just a part of the original code. Therefore, I would like to rename the plugin here.","Hmm, I get your point and like the idea of machine code, but I guess codemon sounds very generic when read first. What do you think of modCodeMon? mod[ified machine] Code Mon[itor]?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1154,2021-03-01T18:39:36Z,2021-03-03T02:12:42Z,2021-03-10T15:36:31Z,MERGED,True,146,144,8,https://github.com/Id3aFly,Rename hyperbee plugin to codemon,5,[],https://github.com/tklengyel/drakvuf/pull/1154,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/1154#issuecomment-788898106,"This PR follows the PR #1133 and just changes the name of the plugin.
Since the name ""HyperBee"" originates from the combination of this plugin and some unpublished tools (which are included in my thesis, but not part of this PR), it is necessary to rename this drakvuf plugin to better differentiate between the parts of my thesis work.
My whole thesis is named ""HyperBee"" and the code of PR #1133  is just a part of the original code. Therefore, I would like to rename the plugin here.",I think codemon is fine,True,{'THUMBS_UP': ['https://github.com/Id3aFly']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1154,2021-03-01T18:39:36Z,2021-03-03T02:12:42Z,2021-03-10T15:36:31Z,MERGED,True,146,144,8,https://github.com/Id3aFly,Rename hyperbee plugin to codemon,5,[],https://github.com/tklengyel/drakvuf/pull/1154,https://github.com/Id3aFly,10,https://github.com/tklengyel/drakvuf/pull/1154#issuecomment-788933835,"This PR follows the PR #1133 and just changes the name of the plugin.
Since the name ""HyperBee"" originates from the combination of this plugin and some unpublished tools (which are included in my thesis, but not part of this PR), it is necessary to rename this drakvuf plugin to better differentiate between the parts of my thesis work.
My whole thesis is named ""HyperBee"" and the code of PR #1133  is just a part of the original code. Therefore, I would like to rename the plugin here.","I think codemon is fine

Ok, renaming right now.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1154,2021-03-01T18:39:36Z,2021-03-03T02:12:42Z,2021-03-10T15:36:31Z,MERGED,True,146,144,8,https://github.com/Id3aFly,Rename hyperbee plugin to codemon,5,[],https://github.com/tklengyel/drakvuf/pull/1154,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/1154#issuecomment-789095791,"This PR follows the PR #1133 and just changes the name of the plugin.
Since the name ""HyperBee"" originates from the combination of this plugin and some unpublished tools (which are included in my thesis, but not part of this PR), it is necessary to rename this drakvuf plugin to better differentiate between the parts of my thesis work.
My whole thesis is named ""HyperBee"" and the code of PR #1133  is just a part of the original code. Therefore, I would like to rename the plugin here.",@drakvuf-jenkins This is OK to test,True,{'THUMBS_UP': ['https://github.com/Id3aFly']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1155,2021-03-04T20:34:31Z,2021-03-04T20:42:54Z,2021-03-04T20:42:55Z,MERGED,True,1,1,1,https://github.com/pwnosaur,Fixing typo in vmi_slat_change,1,[],https://github.com/tklengyel/drakvuf/pull/1155,https://github.com/pwnosaur,1,https://github.com/tklengyel/drakvuf/pull/1155,"Reading through the code I came across a typo in the activation of remapped GFNs
the second part of the activation, it is changing REMAPPED_GFN->R to SINK_PAGE_GFN on drakvuf->altp2m_idx
vmi_slat_change_gfn( drakvuf->vmi, drakvuf->altp2m_idx, remapped_gfn->r, drakvuf->sink_page_gfn)
and as I can see when the slat change was previously made through XEN API  instead of VMI , it was drakvuf->altp2m_idr not idx as I expected
 xc_altp2m_change_gfn(drakvuf->xen->xc, drakvuf->domID,
                             drakvuf->altp2m_idr, remapped_gfn->r, drakvuf->zero_page_gfn);","Reading through the code I came across a typo in the activation of remapped GFNs
the second part of the activation, it is changing REMAPPED_GFN->R to SINK_PAGE_GFN on drakvuf->altp2m_idx
vmi_slat_change_gfn( drakvuf->vmi, drakvuf->altp2m_idx, remapped_gfn->r, drakvuf->sink_page_gfn)
and as I can see when the slat change was previously made through XEN API  instead of VMI , it was drakvuf->altp2m_idr not idx as I expected
 xc_altp2m_change_gfn(drakvuf->xen->xc, drakvuf->domID,
                             drakvuf->altp2m_idr, remapped_gfn->r, drakvuf->zero_page_gfn);",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1155,2021-03-04T20:34:31Z,2021-03-04T20:42:54Z,2021-03-04T20:42:55Z,MERGED,True,1,1,1,https://github.com/pwnosaur,Fixing typo in vmi_slat_change,1,[],https://github.com/tklengyel/drakvuf/pull/1155,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1155#issuecomment-790922967,"Reading through the code I came across a typo in the activation of remapped GFNs
the second part of the activation, it is changing REMAPPED_GFN->R to SINK_PAGE_GFN on drakvuf->altp2m_idx
vmi_slat_change_gfn( drakvuf->vmi, drakvuf->altp2m_idx, remapped_gfn->r, drakvuf->sink_page_gfn)
and as I can see when the slat change was previously made through XEN API  instead of VMI , it was drakvuf->altp2m_idr not idx as I expected
 xc_altp2m_change_gfn(drakvuf->xen->xc, drakvuf->domID,
                             drakvuf->altp2m_idr, remapped_gfn->r, drakvuf->zero_page_gfn);",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1155,2021-03-04T20:34:31Z,2021-03-04T20:42:54Z,2021-03-04T20:42:55Z,MERGED,True,1,1,1,https://github.com/pwnosaur,Fixing typo in vmi_slat_change,1,[],https://github.com/tklengyel/drakvuf/pull/1155,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1155#issuecomment-790927389,"Reading through the code I came across a typo in the activation of remapped GFNs
the second part of the activation, it is changing REMAPPED_GFN->R to SINK_PAGE_GFN on drakvuf->altp2m_idx
vmi_slat_change_gfn( drakvuf->vmi, drakvuf->altp2m_idx, remapped_gfn->r, drakvuf->sink_page_gfn)
and as I can see when the slat change was previously made through XEN API  instead of VMI , it was drakvuf->altp2m_idr not idx as I expected
 xc_altp2m_change_gfn(drakvuf->xen->xc, drakvuf->domID,
                             drakvuf->altp2m_idr, remapped_gfn->r, drakvuf->zero_page_gfn);","Indeed, thanks for spotting it!",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1156,2021-03-05T17:03:47Z,2021-04-13T20:59:36Z,2021-04-13T20:59:36Z,MERGED,True,682,17,15,https://github.com/chivay,Intel PT plugin v2,2,[],https://github.com/tklengyel/drakvuf/pull/1156,https://github.com/chivay,1,https://github.com/tklengyel/drakvuf/pull/1156,"This is a stripped-down version of the original IPT plugin. Most of the complex code has been
moved to hyperbee / codemon. This is just the core that controls tracing and dumps acquired
data to local files.
Plugin enhances acquired data streams with PTWRITE packets that contain information about
current CR3, thread ID and DRAKVUF event IDs.
Using the plugin is quite simple, user has to provide a directory to store the traces and pass flags
to enable tracing interesting code (--ipt-trace-os / --ipt-trace-user).
Since this functionality depends on Xen 4.15 which is currently in RC stage, plugin is disabled by default.
This changes require newer LibVMI version which includes vmtrace_pos in vCPU registers.
I'm not sure if we want to bump LibVMI at the same time as adding new plugin but I've included it nonetheless.","This is a stripped-down version of the original IPT plugin. Most of the complex code has been
moved to hyperbee / codemon. This is just the core that controls tracing and dumps acquired
data to local files.
Plugin enhances acquired data streams with PTWRITE packets that contain information about
current CR3, thread ID and DRAKVUF event IDs.
Using the plugin is quite simple, user has to provide a directory to store the traces and pass flags
to enable tracing interesting code (--ipt-trace-os / --ipt-trace-user).
Since this functionality depends on Xen 4.15 which is currently in RC stage, plugin is disabled by default.
This changes require newer LibVMI version which includes vmtrace_pos in vCPU registers.
I'm not sure if we want to bump LibVMI at the same time as adding new plugin but I've included it nonetheless.",True,"{'ROCKET': ['https://github.com/icedevml', 'https://github.com/kscieslinski', 'https://github.com/chivay']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1156,2021-03-05T17:03:47Z,2021-04-13T20:59:36Z,2021-04-13T20:59:36Z,MERGED,True,682,17,15,https://github.com/chivay,Intel PT plugin v2,2,[],https://github.com/tklengyel/drakvuf/pull/1156,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1156#issuecomment-791552475,"This is a stripped-down version of the original IPT plugin. Most of the complex code has been
moved to hyperbee / codemon. This is just the core that controls tracing and dumps acquired
data to local files.
Plugin enhances acquired data streams with PTWRITE packets that contain information about
current CR3, thread ID and DRAKVUF event IDs.
Using the plugin is quite simple, user has to provide a directory to store the traces and pass flags
to enable tracing interesting code (--ipt-trace-os / --ipt-trace-user).
Since this functionality depends on Xen 4.15 which is currently in RC stage, plugin is disabled by default.
This changes require newer LibVMI version which includes vmtrace_pos in vCPU registers.
I'm not sure if we want to bump LibVMI at the same time as adding new plugin but I've included it nonetheless.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1156,2021-03-05T17:03:47Z,2021-04-13T20:59:36Z,2021-04-13T20:59:36Z,MERGED,True,682,17,15,https://github.com/chivay,Intel PT plugin v2,2,[],https://github.com/tklengyel/drakvuf/pull/1156,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1156#issuecomment-791608766,"This is a stripped-down version of the original IPT plugin. Most of the complex code has been
moved to hyperbee / codemon. This is just the core that controls tracing and dumps acquired
data to local files.
Plugin enhances acquired data streams with PTWRITE packets that contain information about
current CR3, thread ID and DRAKVUF event IDs.
Using the plugin is quite simple, user has to provide a directory to store the traces and pass flags
to enable tracing interesting code (--ipt-trace-os / --ipt-trace-user).
Since this functionality depends on Xen 4.15 which is currently in RC stage, plugin is disabled by default.
This changes require newer LibVMI version which includes vmtrace_pos in vCPU registers.
I'm not sure if we want to bump LibVMI at the same time as adding new plugin but I've included it nonetheless.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1156,2021-03-05T17:03:47Z,2021-04-13T20:59:36Z,2021-04-13T20:59:36Z,MERGED,True,682,17,15,https://github.com/chivay,Intel PT plugin v2,2,[],https://github.com/tklengyel/drakvuf/pull/1156,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1156#issuecomment-791716727,"This is a stripped-down version of the original IPT plugin. Most of the complex code has been
moved to hyperbee / codemon. This is just the core that controls tracing and dumps acquired
data to local files.
Plugin enhances acquired data streams with PTWRITE packets that contain information about
current CR3, thread ID and DRAKVUF event IDs.
Using the plugin is quite simple, user has to provide a directory to store the traces and pass flags
to enable tracing interesting code (--ipt-trace-os / --ipt-trace-user).
Since this functionality depends on Xen 4.15 which is currently in RC stage, plugin is disabled by default.
This changes require newer LibVMI version which includes vmtrace_pos in vCPU registers.
I'm not sure if we want to bump LibVMI at the same time as adding new plugin but I've included it nonetheless.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1156,2021-03-05T17:03:47Z,2021-04-13T20:59:36Z,2021-04-13T20:59:36Z,MERGED,True,682,17,15,https://github.com/chivay,Intel PT plugin v2,2,[],https://github.com/tklengyel/drakvuf/pull/1156,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1156#issuecomment-791717536,"This is a stripped-down version of the original IPT plugin. Most of the complex code has been
moved to hyperbee / codemon. This is just the core that controls tracing and dumps acquired
data to local files.
Plugin enhances acquired data streams with PTWRITE packets that contain information about
current CR3, thread ID and DRAKVUF event IDs.
Using the plugin is quite simple, user has to provide a directory to store the traces and pass flags
to enable tracing interesting code (--ipt-trace-os / --ipt-trace-user).
Since this functionality depends on Xen 4.15 which is currently in RC stage, plugin is disabled by default.
This changes require newer LibVMI version which includes vmtrace_pos in vCPU registers.
I'm not sure if we want to bump LibVMI at the same time as adding new plugin but I've included it nonetheless.",Btw the CI system is already running on 4.15-rc2 with a new LibVMI so you should be able to enable this plugin,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1156,2021-03-05T17:03:47Z,2021-04-13T20:59:36Z,2021-04-13T20:59:36Z,MERGED,True,682,17,15,https://github.com/chivay,Intel PT plugin v2,2,[],https://github.com/tklengyel/drakvuf/pull/1156,https://github.com/icedevml,6,https://github.com/tklengyel/drakvuf/pull/1156#issuecomment-791736590,"This is a stripped-down version of the original IPT plugin. Most of the complex code has been
moved to hyperbee / codemon. This is just the core that controls tracing and dumps acquired
data to local files.
Plugin enhances acquired data streams with PTWRITE packets that contain information about
current CR3, thread ID and DRAKVUF event IDs.
Using the plugin is quite simple, user has to provide a directory to store the traces and pass flags
to enable tracing interesting code (--ipt-trace-os / --ipt-trace-user).
Since this functionality depends on Xen 4.15 which is currently in RC stage, plugin is disabled by default.
This changes require newer LibVMI version which includes vmtrace_pos in vCPU registers.
I'm not sure if we want to bump LibVMI at the same time as adding new plugin but I've included it nonetheless.",Can you add sth like --ipt-dir /tmp --ipt-trace-user to the commandline and --enable-ipt to ./configure or can we add it on our own somehow?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1156,2021-03-05T17:03:47Z,2021-04-13T20:59:36Z,2021-04-13T20:59:36Z,MERGED,True,682,17,15,https://github.com/chivay,Intel PT plugin v2,2,[],https://github.com/tklengyel/drakvuf/pull/1156,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/1156#issuecomment-791921206,"This is a stripped-down version of the original IPT plugin. Most of the complex code has been
moved to hyperbee / codemon. This is just the core that controls tracing and dumps acquired
data to local files.
Plugin enhances acquired data streams with PTWRITE packets that contain information about
current CR3, thread ID and DRAKVUF event IDs.
Using the plugin is quite simple, user has to provide a directory to store the traces and pass flags
to enable tracing interesting code (--ipt-trace-os / --ipt-trace-user).
Since this functionality depends on Xen 4.15 which is currently in RC stage, plugin is disabled by default.
This changes require newer LibVMI version which includes vmtrace_pos in vCPU registers.
I'm not sure if we want to bump LibVMI at the same time as adding new plugin but I've included it nonetheless.","You should turn the plugin to on to compile by default, I can add --ipt-dir /tmp --ipt-trace-user to the run script, sure.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1156,2021-03-05T17:03:47Z,2021-04-13T20:59:36Z,2021-04-13T20:59:36Z,MERGED,True,682,17,15,https://github.com/chivay,Intel PT plugin v2,2,[],https://github.com/tklengyel/drakvuf/pull/1156,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/1156#issuecomment-794134170,"This is a stripped-down version of the original IPT plugin. Most of the complex code has been
moved to hyperbee / codemon. This is just the core that controls tracing and dumps acquired
data to local files.
Plugin enhances acquired data streams with PTWRITE packets that contain information about
current CR3, thread ID and DRAKVUF event IDs.
Using the plugin is quite simple, user has to provide a directory to store the traces and pass flags
to enable tracing interesting code (--ipt-trace-os / --ipt-trace-user).
Since this functionality depends on Xen 4.15 which is currently in RC stage, plugin is disabled by default.
This changes require newer LibVMI version which includes vmtrace_pos in vCPU registers.
I'm not sure if we want to bump LibVMI at the same time as adding new plugin but I've included it nonetheless.","@icedevml I would prefer not building all the Xen tools from scratch for every CI test. Use actions/cache@v2 to save the Xen deb-file after building it with make debball, use hash=$(git describe --always) as the cache key. Only build it if the hash changes, otherwise just install it from the cached deb.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1156,2021-03-05T17:03:47Z,2021-04-13T20:59:36Z,2021-04-13T20:59:36Z,MERGED,True,682,17,15,https://github.com/chivay,Intel PT plugin v2,2,[],https://github.com/tklengyel/drakvuf/pull/1156,https://github.com/icedevml,9,https://github.com/tklengyel/drakvuf/pull/1156#issuecomment-794139294,"This is a stripped-down version of the original IPT plugin. Most of the complex code has been
moved to hyperbee / codemon. This is just the core that controls tracing and dumps acquired
data to local files.
Plugin enhances acquired data streams with PTWRITE packets that contain information about
current CR3, thread ID and DRAKVUF event IDs.
Using the plugin is quite simple, user has to provide a directory to store the traces and pass flags
to enable tracing interesting code (--ipt-trace-os / --ipt-trace-user).
Since this functionality depends on Xen 4.15 which is currently in RC stage, plugin is disabled by default.
This changes require newer LibVMI version which includes vmtrace_pos in vCPU registers.
I'm not sure if we want to bump LibVMI at the same time as adding new plugin but I've included it nonetheless.","@tklengyel Is there any way to skip this? Right now we use libxen-dev but it's too old :( I've tried to make some ""micro build"", I mean to install only libxenctrl&co, but it looks like Makefile doesn't really support building individual libs manually :(
Building the whole Xen and caching it would be yet another huge step in the CI.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1156,2021-03-05T17:03:47Z,2021-04-13T20:59:36Z,2021-04-13T20:59:36Z,MERGED,True,682,17,15,https://github.com/chivay,Intel PT plugin v2,2,[],https://github.com/tklengyel/drakvuf/pull/1156,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/1156#issuecomment-794143401,"This is a stripped-down version of the original IPT plugin. Most of the complex code has been
moved to hyperbee / codemon. This is just the core that controls tracing and dumps acquired
data to local files.
Plugin enhances acquired data streams with PTWRITE packets that contain information about
current CR3, thread ID and DRAKVUF event IDs.
Using the plugin is quite simple, user has to provide a directory to store the traces and pass flags
to enable tracing interesting code (--ipt-trace-os / --ipt-trace-user).
Since this functionality depends on Xen 4.15 which is currently in RC stage, plugin is disabled by default.
This changes require newer LibVMI version which includes vmtrace_pos in vCPU registers.
I'm not sure if we want to bump LibVMI at the same time as adding new plugin but I've included it nonetheless.",@icedevml Hop on slack,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1156,2021-03-05T17:03:47Z,2021-04-13T20:59:36Z,2021-04-13T20:59:36Z,MERGED,True,682,17,15,https://github.com/chivay,Intel PT plugin v2,2,[],https://github.com/tklengyel/drakvuf/pull/1156,https://github.com/icedevml,11,https://github.com/tklengyel/drakvuf/pull/1156#issuecomment-796771676,"This is a stripped-down version of the original IPT plugin. Most of the complex code has been
moved to hyperbee / codemon. This is just the core that controls tracing and dumps acquired
data to local files.
Plugin enhances acquired data streams with PTWRITE packets that contain information about
current CR3, thread ID and DRAKVUF event IDs.
Using the plugin is quite simple, user has to provide a directory to store the traces and pass flags
to enable tracing interesting code (--ipt-trace-os / --ipt-trace-user).
Since this functionality depends on Xen 4.15 which is currently in RC stage, plugin is disabled by default.
This changes require newer LibVMI version which includes vmtrace_pos in vCPU registers.
I'm not sure if we want to bump LibVMI at the same time as adding new plugin but I've included it nonetheless.","The CI seems to be fixed now and the review comments above are resolved.
drakvuf-jenkins said:
1615471248.462886 DRAKVUF v0.8-git20210311135706+f14109fd-1 Copyright (C) 2014-2021 Tamas K Lengyel
Failed to get trace buffer size
Plugin ipt startup failed!

I think we are missing vmtrace_buf_kb = 8192 in VM config right now.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1156,2021-03-05T17:03:47Z,2021-04-13T20:59:36Z,2021-04-13T20:59:36Z,MERGED,True,682,17,15,https://github.com/chivay,Intel PT plugin v2,2,[],https://github.com/tklengyel/drakvuf/pull/1156,https://github.com/tklengyel,12,https://github.com/tklengyel/drakvuf/pull/1156#issuecomment-796788517,"This is a stripped-down version of the original IPT plugin. Most of the complex code has been
moved to hyperbee / codemon. This is just the core that controls tracing and dumps acquired
data to local files.
Plugin enhances acquired data streams with PTWRITE packets that contain information about
current CR3, thread ID and DRAKVUF event IDs.
Using the plugin is quite simple, user has to provide a directory to store the traces and pass flags
to enable tracing interesting code (--ipt-trace-os / --ipt-trace-user).
Since this functionality depends on Xen 4.15 which is currently in RC stage, plugin is disabled by default.
This changes require newer LibVMI version which includes vmtrace_pos in vCPU registers.
I'm not sure if we want to bump LibVMI at the same time as adding new plugin but I've included it nonetheless.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1156,2021-03-05T17:03:47Z,2021-04-13T20:59:36Z,2021-04-13T20:59:36Z,MERGED,True,682,17,15,https://github.com/chivay,Intel PT plugin v2,2,[],https://github.com/tklengyel/drakvuf/pull/1156,https://github.com/tklengyel,13,https://github.com/tklengyel/drakvuf/pull/1156#issuecomment-796796559,"This is a stripped-down version of the original IPT plugin. Most of the complex code has been
moved to hyperbee / codemon. This is just the core that controls tracing and dumps acquired
data to local files.
Plugin enhances acquired data streams with PTWRITE packets that contain information about
current CR3, thread ID and DRAKVUF event IDs.
Using the plugin is quite simple, user has to provide a directory to store the traces and pass flags
to enable tracing interesting code (--ipt-trace-os / --ipt-trace-user).
Since this functionality depends on Xen 4.15 which is currently in RC stage, plugin is disabled by default.
This changes require newer LibVMI version which includes vmtrace_pos in vCPU registers.
I'm not sure if we want to bump LibVMI at the same time as adding new plugin but I've included it nonetheless.","The domain configs have the required bits for vmtrace, yet the plugin fails to start up. I don't see where Failed to get trace buffer size comes form.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1156,2021-03-05T17:03:47Z,2021-04-13T20:59:36Z,2021-04-13T20:59:36Z,MERGED,True,682,17,15,https://github.com/chivay,Intel PT plugin v2,2,[],https://github.com/tklengyel/drakvuf/pull/1156,https://github.com/icedevml,14,https://github.com/tklengyel/drakvuf/pull/1156#issuecomment-796797804,"This is a stripped-down version of the original IPT plugin. Most of the complex code has been
moved to hyperbee / codemon. This is just the core that controls tracing and dumps acquired
data to local files.
Plugin enhances acquired data streams with PTWRITE packets that contain information about
current CR3, thread ID and DRAKVUF event IDs.
Using the plugin is quite simple, user has to provide a directory to store the traces and pass flags
to enable tracing interesting code (--ipt-trace-os / --ipt-trace-user).
Since this functionality depends on Xen 4.15 which is currently in RC stage, plugin is disabled by default.
This changes require newer LibVMI version which includes vmtrace_pos in vCPU registers.
I'm not sure if we want to bump LibVMI at the same time as adding new plugin but I've included it nonetheless.",Is it effective when you add vmtrace_buf_size to the existing VM config that is restored? It might be required to recreate domain from scratch for this to work.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1156,2021-03-05T17:03:47Z,2021-04-13T20:59:36Z,2021-04-13T20:59:36Z,MERGED,True,682,17,15,https://github.com/chivay,Intel PT plugin v2,2,[],https://github.com/tklengyel/drakvuf/pull/1156,https://github.com/icedevml,15,https://github.com/tklengyel/drakvuf/pull/1156#issuecomment-796798097,"This is a stripped-down version of the original IPT plugin. Most of the complex code has been
moved to hyperbee / codemon. This is just the core that controls tracing and dumps acquired
data to local files.
Plugin enhances acquired data streams with PTWRITE packets that contain information about
current CR3, thread ID and DRAKVUF event IDs.
Using the plugin is quite simple, user has to provide a directory to store the traces and pass flags
to enable tracing interesting code (--ipt-trace-os / --ipt-trace-user).
Since this functionality depends on Xen 4.15 which is currently in RC stage, plugin is disabled by default.
This changes require newer LibVMI version which includes vmtrace_pos in vCPU registers.
I'm not sure if we want to bump LibVMI at the same time as adding new plugin but I've included it nonetheless.","drakvuf/src/xen_helper/xen_helper.c
    
    
        Lines 339 to 345
      in
      72154c8
    
  
  
    

        
          
           rc = xenforeignmemory_resource_size( 
        

        
          
                    xen->fmem, domID, XENMEM_resource_vmtrace_buf, vcpu, &ipt_state->size); 
        

        
          
           if (rc) 
        

        
          
           { 
        

        
          
               fprintf(stderr, ""Failed to get trace buffer size\n""); 
        

        
          
               return false; 
        

        
          
           }",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1156,2021-03-05T17:03:47Z,2021-04-13T20:59:36Z,2021-04-13T20:59:36Z,MERGED,True,682,17,15,https://github.com/chivay,Intel PT plugin v2,2,[],https://github.com/tklengyel/drakvuf/pull/1156,https://github.com/icedevml,16,https://github.com/tklengyel/drakvuf/pull/1156#issuecomment-796798486,"This is a stripped-down version of the original IPT plugin. Most of the complex code has been
moved to hyperbee / codemon. This is just the core that controls tracing and dumps acquired
data to local files.
Plugin enhances acquired data streams with PTWRITE packets that contain information about
current CR3, thread ID and DRAKVUF event IDs.
Using the plugin is quite simple, user has to provide a directory to store the traces and pass flags
to enable tracing interesting code (--ipt-trace-os / --ipt-trace-user).
Since this functionality depends on Xen 4.15 which is currently in RC stage, plugin is disabled by default.
This changes require newer LibVMI version which includes vmtrace_pos in vCPU registers.
I'm not sure if we want to bump LibVMI at the same time as adding new plugin but I've included it nonetheless.",🤔 Unpatched kernel?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1156,2021-03-05T17:03:47Z,2021-04-13T20:59:36Z,2021-04-13T20:59:36Z,MERGED,True,682,17,15,https://github.com/chivay,Intel PT plugin v2,2,[],https://github.com/tklengyel/drakvuf/pull/1156,https://github.com/tklengyel,17,https://github.com/tklengyel/drakvuf/pull/1156#issuecomment-796812058,"This is a stripped-down version of the original IPT plugin. Most of the complex code has been
moved to hyperbee / codemon. This is just the core that controls tracing and dumps acquired
data to local files.
Plugin enhances acquired data streams with PTWRITE packets that contain information about
current CR3, thread ID and DRAKVUF event IDs.
Using the plugin is quite simple, user has to provide a directory to store the traces and pass flags
to enable tracing interesting code (--ipt-trace-os / --ipt-trace-user).
Since this functionality depends on Xen 4.15 which is currently in RC stage, plugin is disabled by default.
This changes require newer LibVMI version which includes vmtrace_pos in vCPU registers.
I'm not sure if we want to bump LibVMI at the same time as adding new plugin but I've included it nonetheless.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1156,2021-03-05T17:03:47Z,2021-04-13T20:59:36Z,2021-04-13T20:59:36Z,MERGED,True,682,17,15,https://github.com/chivay,Intel PT plugin v2,2,[],https://github.com/tklengyel/drakvuf/pull/1156,https://github.com/icedevml,18,https://github.com/tklengyel/drakvuf/pull/1156#issuecomment-796817330,"This is a stripped-down version of the original IPT plugin. Most of the complex code has been
moved to hyperbee / codemon. This is just the core that controls tracing and dumps acquired
data to local files.
Plugin enhances acquired data streams with PTWRITE packets that contain information about
current CR3, thread ID and DRAKVUF event IDs.
Using the plugin is quite simple, user has to provide a directory to store the traces and pass flags
to enable tracing interesting code (--ipt-trace-os / --ipt-trace-user).
Since this functionality depends on Xen 4.15 which is currently in RC stage, plugin is disabled by default.
This changes require newer LibVMI version which includes vmtrace_pos in vCPU registers.
I'm not sure if we want to bump LibVMI at the same time as adding new plugin but I've included it nonetheless.","Ok so now we are here:

  
    
      drakvuf/src/xen_helper/xen_helper.c
    
    
        Lines 361 to 367
      in
      72154c8
    
  
  
    

        
          
           rc = xc_vmtrace_reset_and_enable(xen->xc, domID, vcpu); 
        

        
          
            
        

        
          
           if (rc) 
        

        
          
           { 
        

        
          
               fprintf(stderr, ""Failed to enable tracing\n""); 
        

        
          
               goto unmap; 
        

        
          
           }",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1156,2021-03-05T17:03:47Z,2021-04-13T20:59:36Z,2021-04-13T20:59:36Z,MERGED,True,682,17,15,https://github.com/chivay,Intel PT plugin v2,2,[],https://github.com/tklengyel/drakvuf/pull/1156,https://github.com/tklengyel,19,https://github.com/tklengyel/drakvuf/pull/1156#issuecomment-796819146,"This is a stripped-down version of the original IPT plugin. Most of the complex code has been
moved to hyperbee / codemon. This is just the core that controls tracing and dumps acquired
data to local files.
Plugin enhances acquired data streams with PTWRITE packets that contain information about
current CR3, thread ID and DRAKVUF event IDs.
Using the plugin is quite simple, user has to provide a directory to store the traces and pass flags
to enable tracing interesting code (--ipt-trace-os / --ipt-trace-user).
Since this functionality depends on Xen 4.15 which is currently in RC stage, plugin is disabled by default.
This changes require newer LibVMI version which includes vmtrace_pos in vCPU registers.
I'm not sure if we want to bump LibVMI at the same time as adding new plugin but I've included it nonetheless.",Test passed on Debian jessie VM but failed on Windows 7.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1156,2021-03-05T17:03:47Z,2021-04-13T20:59:36Z,2021-04-13T20:59:36Z,MERGED,True,682,17,15,https://github.com/chivay,Intel PT plugin v2,2,[],https://github.com/tklengyel/drakvuf/pull/1156,https://github.com/icedevml,20,https://github.com/tklengyel/drakvuf/pull/1156#issuecomment-796835457,"This is a stripped-down version of the original IPT plugin. Most of the complex code has been
moved to hyperbee / codemon. This is just the core that controls tracing and dumps acquired
data to local files.
Plugin enhances acquired data streams with PTWRITE packets that contain information about
current CR3, thread ID and DRAKVUF event IDs.
Using the plugin is quite simple, user has to provide a directory to store the traces and pass flags
to enable tracing interesting code (--ipt-trace-os / --ipt-trace-user).
Since this functionality depends on Xen 4.15 which is currently in RC stage, plugin is disabled by default.
This changes require newer LibVMI version which includes vmtrace_pos in vCPU registers.
I'm not sure if we want to bump LibVMI at the same time as adding new plugin but I've included it nonetheless.","Failed to enable tracing, vcpu=0, rc=-1

🤔",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1156,2021-03-05T17:03:47Z,2021-04-13T20:59:36Z,2021-04-13T20:59:36Z,MERGED,True,682,17,15,https://github.com/chivay,Intel PT plugin v2,2,[],https://github.com/tklengyel/drakvuf/pull/1156,https://github.com/icedevml,21,https://github.com/tklengyel/drakvuf/pull/1156#issuecomment-796839194,"This is a stripped-down version of the original IPT plugin. Most of the complex code has been
moved to hyperbee / codemon. This is just the core that controls tracing and dumps acquired
data to local files.
Plugin enhances acquired data streams with PTWRITE packets that contain information about
current CR3, thread ID and DRAKVUF event IDs.
Using the plugin is quite simple, user has to provide a directory to store the traces and pass flags
to enable tracing interesting code (--ipt-trace-os / --ipt-trace-user).
Since this functionality depends on Xen 4.15 which is currently in RC stage, plugin is disabled by default.
This changes require newer LibVMI version which includes vmtrace_pos in vCPU registers.
I'm not sure if we want to bump LibVMI at the same time as adding new plugin but I've included it nonetheless.",This exit code doesn't really give much insight about what actually happened here :|,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1156,2021-03-05T17:03:47Z,2021-04-13T20:59:36Z,2021-04-13T20:59:36Z,MERGED,True,682,17,15,https://github.com/chivay,Intel PT plugin v2,2,[],https://github.com/tklengyel/drakvuf/pull/1156,https://github.com/icedevml,22,https://github.com/tklengyel/drakvuf/pull/1156#issuecomment-797100934,"This is a stripped-down version of the original IPT plugin. Most of the complex code has been
moved to hyperbee / codemon. This is just the core that controls tracing and dumps acquired
data to local files.
Plugin enhances acquired data streams with PTWRITE packets that contain information about
current CR3, thread ID and DRAKVUF event IDs.
Using the plugin is quite simple, user has to provide a directory to store the traces and pass flags
to enable tracing interesting code (--ipt-trace-os / --ipt-trace-user).
Since this functionality depends on Xen 4.15 which is currently in RC stage, plugin is disabled by default.
This changes require newer LibVMI version which includes vmtrace_pos in vCPU registers.
I'm not sure if we want to bump LibVMI at the same time as adding new plugin but I've included it nonetheless.",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1156,2021-03-05T17:03:47Z,2021-04-13T20:59:36Z,2021-04-13T20:59:36Z,MERGED,True,682,17,15,https://github.com/chivay,Intel PT plugin v2,2,[],https://github.com/tklengyel/drakvuf/pull/1156,https://github.com/icedevml,23,https://github.com/tklengyel/drakvuf/pull/1156#issuecomment-797108613,"This is a stripped-down version of the original IPT plugin. Most of the complex code has been
moved to hyperbee / codemon. This is just the core that controls tracing and dumps acquired
data to local files.
Plugin enhances acquired data streams with PTWRITE packets that contain information about
current CR3, thread ID and DRAKVUF event IDs.
Using the plugin is quite simple, user has to provide a directory to store the traces and pass flags
to enable tracing interesting code (--ipt-trace-os / --ipt-trace-user).
Since this functionality depends on Xen 4.15 which is currently in RC stage, plugin is disabled by default.
This changes require newer LibVMI version which includes vmtrace_pos in vCPU registers.
I'm not sure if we want to bump LibVMI at the same time as adding new plugin but I've included it nonetheless.",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1156,2021-03-05T17:03:47Z,2021-04-13T20:59:36Z,2021-04-13T20:59:36Z,MERGED,True,682,17,15,https://github.com/chivay,Intel PT plugin v2,2,[],https://github.com/tklengyel/drakvuf/pull/1156,https://github.com/icedevml,24,https://github.com/tklengyel/drakvuf/pull/1156#issuecomment-797117105,"This is a stripped-down version of the original IPT plugin. Most of the complex code has been
moved to hyperbee / codemon. This is just the core that controls tracing and dumps acquired
data to local files.
Plugin enhances acquired data streams with PTWRITE packets that contain information about
current CR3, thread ID and DRAKVUF event IDs.
Using the plugin is quite simple, user has to provide a directory to store the traces and pass flags
to enable tracing interesting code (--ipt-trace-os / --ipt-trace-user).
Since this functionality depends on Xen 4.15 which is currently in RC stage, plugin is disabled by default.
This changes require newer LibVMI version which includes vmtrace_pos in vCPU registers.
I'm not sure if we want to bump LibVMI at the same time as adding new plugin but I've included it nonetheless.","CI for Windows 7 is now passing, but for Win 10 we do have an error:
DRAKVUF /shared/jenkins/workspace/DRAKVUF-windows10-2004/src/injector v0.8-git20210311223328+a84bc59b-1 Copyright (C) 2014-2021 Tamas K Lengyel
VMI_ERROR: --vmi_read: access context version mismatch, please update your code
Injector starting C:\\autoruns64.exe through PID 5820 TID: 0
[INJECT] TIME:1615504786.118242 STATUS:SUCCESS PID:5820 FILE:"""" ARGUMENTS:"""" INJECTED_PID:6096 INJECTED_TID:6088
Process startup success
+ err=1
+ sudo -E xl destroy windows10-2004-jenkins
windows10-2004-jenkins is an invalid domain identifier (rc=-6)

vm crash?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1156,2021-03-05T17:03:47Z,2021-04-13T20:59:36Z,2021-04-13T20:59:36Z,MERGED,True,682,17,15,https://github.com/chivay,Intel PT plugin v2,2,[],https://github.com/tklengyel/drakvuf/pull/1156,https://github.com/icedevml,25,https://github.com/tklengyel/drakvuf/pull/1156#issuecomment-797156201,"This is a stripped-down version of the original IPT plugin. Most of the complex code has been
moved to hyperbee / codemon. This is just the core that controls tracing and dumps acquired
data to local files.
Plugin enhances acquired data streams with PTWRITE packets that contain information about
current CR3, thread ID and DRAKVUF event IDs.
Using the plugin is quite simple, user has to provide a directory to store the traces and pass flags
to enable tracing interesting code (--ipt-trace-os / --ipt-trace-user).
Since this functionality depends on Xen 4.15 which is currently in RC stage, plugin is disabled by default.
This changes require newer LibVMI version which includes vmtrace_pos in vCPU registers.
I'm not sure if we want to bump LibVMI at the same time as adding new plugin but I've included it nonetheless.",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1156,2021-03-05T17:03:47Z,2021-04-13T20:59:36Z,2021-04-13T20:59:36Z,MERGED,True,682,17,15,https://github.com/chivay,Intel PT plugin v2,2,[],https://github.com/tklengyel/drakvuf/pull/1156,https://github.com/chivay,26,https://github.com/tklengyel/drakvuf/pull/1156#issuecomment-797504017,"This is a stripped-down version of the original IPT plugin. Most of the complex code has been
moved to hyperbee / codemon. This is just the core that controls tracing and dumps acquired
data to local files.
Plugin enhances acquired data streams with PTWRITE packets that contain information about
current CR3, thread ID and DRAKVUF event IDs.
Using the plugin is quite simple, user has to provide a directory to store the traces and pass flags
to enable tracing interesting code (--ipt-trace-os / --ipt-trace-user).
Since this functionality depends on Xen 4.15 which is currently in RC stage, plugin is disabled by default.
This changes require newer LibVMI version which includes vmtrace_pos in vCPU registers.
I'm not sure if we want to bump LibVMI at the same time as adding new plugin but I've included it nonetheless.","@tklengyel I've added the documentation. You can pull the wiki changes from:
https://github.com/chivay/drakvuf-wiki.git on branch ipt-docs",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1156,2021-03-05T17:03:47Z,2021-04-13T20:59:36Z,2021-04-13T20:59:36Z,MERGED,True,682,17,15,https://github.com/chivay,Intel PT plugin v2,2,[],https://github.com/tklengyel/drakvuf/pull/1156,https://github.com/tklengyel,27,https://github.com/tklengyel/drakvuf/pull/1156#issuecomment-797515799,"This is a stripped-down version of the original IPT plugin. Most of the complex code has been
moved to hyperbee / codemon. This is just the core that controls tracing and dumps acquired
data to local files.
Plugin enhances acquired data streams with PTWRITE packets that contain information about
current CR3, thread ID and DRAKVUF event IDs.
Using the plugin is quite simple, user has to provide a directory to store the traces and pass flags
to enable tracing interesting code (--ipt-trace-os / --ipt-trace-user).
Since this functionality depends on Xen 4.15 which is currently in RC stage, plugin is disabled by default.
This changes require newer LibVMI version which includes vmtrace_pos in vCPU registers.
I'm not sure if we want to bump LibVMI at the same time as adding new plugin but I've included it nonetheless.","@chivay Thanks, pushed",True,{'THUMBS_UP': ['https://github.com/chivay']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1156,2021-03-05T17:03:47Z,2021-04-13T20:59:36Z,2021-04-13T20:59:36Z,MERGED,True,682,17,15,https://github.com/chivay,Intel PT plugin v2,2,[],https://github.com/tklengyel/drakvuf/pull/1156,https://github.com/icedevml,28,https://github.com/tklengyel/drakvuf/pull/1156#issuecomment-798390998,"This is a stripped-down version of the original IPT plugin. Most of the complex code has been
moved to hyperbee / codemon. This is just the core that controls tracing and dumps acquired
data to local files.
Plugin enhances acquired data streams with PTWRITE packets that contain information about
current CR3, thread ID and DRAKVUF event IDs.
Using the plugin is quite simple, user has to provide a directory to store the traces and pass flags
to enable tracing interesting code (--ipt-trace-os / --ipt-trace-user).
Since this functionality depends on Xen 4.15 which is currently in RC stage, plugin is disabled by default.
This changes require newer LibVMI version which includes vmtrace_pos in vCPU registers.
I'm not sure if we want to bump LibVMI at the same time as adding new plugin but I've included it nonetheless.",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1156,2021-03-05T17:03:47Z,2021-04-13T20:59:36Z,2021-04-13T20:59:36Z,MERGED,True,682,17,15,https://github.com/chivay,Intel PT plugin v2,2,[],https://github.com/tklengyel/drakvuf/pull/1156,https://github.com/icedevml,29,https://github.com/tklengyel/drakvuf/pull/1156#issuecomment-818825920,"This is a stripped-down version of the original IPT plugin. Most of the complex code has been
moved to hyperbee / codemon. This is just the core that controls tracing and dumps acquired
data to local files.
Plugin enhances acquired data streams with PTWRITE packets that contain information about
current CR3, thread ID and DRAKVUF event IDs.
Using the plugin is quite simple, user has to provide a directory to store the traces and pass flags
to enable tracing interesting code (--ipt-trace-os / --ipt-trace-user).
Since this functionality depends on Xen 4.15 which is currently in RC stage, plugin is disabled by default.
This changes require newer LibVMI version which includes vmtrace_pos in vCPU registers.
I'm not sure if we want to bump LibVMI at the same time as adding new plugin but I've included it nonetheless.",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1156,2021-03-05T17:03:47Z,2021-04-13T20:59:36Z,2021-04-13T20:59:36Z,MERGED,True,682,17,15,https://github.com/chivay,Intel PT plugin v2,2,[],https://github.com/tklengyel/drakvuf/pull/1156,https://github.com/icedevml,30,https://github.com/tklengyel/drakvuf/pull/1156#issuecomment-818901797,"This is a stripped-down version of the original IPT plugin. Most of the complex code has been
moved to hyperbee / codemon. This is just the core that controls tracing and dumps acquired
data to local files.
Plugin enhances acquired data streams with PTWRITE packets that contain information about
current CR3, thread ID and DRAKVUF event IDs.
Using the plugin is quite simple, user has to provide a directory to store the traces and pass flags
to enable tracing interesting code (--ipt-trace-os / --ipt-trace-user).
Since this functionality depends on Xen 4.15 which is currently in RC stage, plugin is disabled by default.
This changes require newer LibVMI version which includes vmtrace_pos in vCPU registers.
I'm not sure if we want to bump LibVMI at the same time as adding new plugin but I've included it nonetheless.",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1156,2021-03-05T17:03:47Z,2021-04-13T20:59:36Z,2021-04-13T20:59:36Z,MERGED,True,682,17,15,https://github.com/chivay,Intel PT plugin v2,2,[],https://github.com/tklengyel/drakvuf/pull/1156,https://github.com/icedevml,31,https://github.com/tklengyel/drakvuf/pull/1156#issuecomment-818915131,"This is a stripped-down version of the original IPT plugin. Most of the complex code has been
moved to hyperbee / codemon. This is just the core that controls tracing and dumps acquired
data to local files.
Plugin enhances acquired data streams with PTWRITE packets that contain information about
current CR3, thread ID and DRAKVUF event IDs.
Using the plugin is quite simple, user has to provide a directory to store the traces and pass flags
to enable tracing interesting code (--ipt-trace-os / --ipt-trace-user).
Since this functionality depends on Xen 4.15 which is currently in RC stage, plugin is disabled by default.
This changes require newer LibVMI version which includes vmtrace_pos in vCPU registers.
I'm not sure if we want to bump LibVMI at the same time as adding new plugin but I've included it nonetheless.",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1156,2021-03-05T17:03:47Z,2021-04-13T20:59:36Z,2021-04-13T20:59:36Z,MERGED,True,682,17,15,https://github.com/chivay,Intel PT plugin v2,2,[],https://github.com/tklengyel/drakvuf/pull/1156,https://github.com/icedevml,32,https://github.com/tklengyel/drakvuf/pull/1156#issuecomment-818982251,"This is a stripped-down version of the original IPT plugin. Most of the complex code has been
moved to hyperbee / codemon. This is just the core that controls tracing and dumps acquired
data to local files.
Plugin enhances acquired data streams with PTWRITE packets that contain information about
current CR3, thread ID and DRAKVUF event IDs.
Using the plugin is quite simple, user has to provide a directory to store the traces and pass flags
to enable tracing interesting code (--ipt-trace-os / --ipt-trace-user).
Since this functionality depends on Xen 4.15 which is currently in RC stage, plugin is disabled by default.
This changes require newer LibVMI version which includes vmtrace_pos in vCPU registers.
I'm not sure if we want to bump LibVMI at the same time as adding new plugin but I've included it nonetheless.",@tklengyel finally ready to merge,True,"{'HOORAY': ['https://github.com/tklengyel', 'https://github.com/Id3aFly']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1159,2021-03-11T21:08:59Z,2021-03-11T22:31:40Z,2021-03-11T22:35:30Z,MERGED,True,5,2,2,https://github.com/icedevml,Add missing break for PLUGIN_CODEMON,2,[],https://github.com/tklengyel/drakvuf/pull/1159,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/1159,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1159,2021-03-11T21:08:59Z,2021-03-11T22:31:40Z,2021-03-11T22:35:30Z,MERGED,True,5,2,2,https://github.com/icedevml,Add missing break for PLUGIN_CODEMON,2,[],https://github.com/tklengyel/drakvuf/pull/1159,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/1159#issuecomment-797055280,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1160,2021-03-12T10:33:06Z,2021-03-12T12:52:24Z,2021-03-12T13:14:32Z,MERGED,True,2,1,1,https://github.com/icedevml,Fix missing Xen toolstack in drakvuf-bundle,2,[],https://github.com/tklengyel/drakvuf/pull/1160,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/1160,"Semantics of make dist has changed, now it doesn't build the whole toolstack and the drakvuf-bundle is broken since some time. It doesn't contain the required Xen toolstack binaries.","Semantics of make dist has changed, now it doesn't build the whole toolstack and the drakvuf-bundle is broken since some time. It doesn't contain the required Xen toolstack binaries.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1160,2021-03-12T10:33:06Z,2021-03-12T12:52:24Z,2021-03-12T13:14:32Z,MERGED,True,2,1,1,https://github.com/icedevml,Fix missing Xen toolstack in drakvuf-bundle,2,[],https://github.com/tklengyel/drakvuf/pull/1160,https://github.com/icedevml,2,https://github.com/tklengyel/drakvuf/pull/1160#issuecomment-797452615,"Semantics of make dist has changed, now it doesn't build the whole toolstack and the drakvuf-bundle is broken since some time. It doesn't contain the required Xen toolstack binaries.",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1160,2021-03-12T10:33:06Z,2021-03-12T12:52:24Z,2021-03-12T13:14:32Z,MERGED,True,2,1,1,https://github.com/icedevml,Fix missing Xen toolstack in drakvuf-bundle,2,[],https://github.com/tklengyel/drakvuf/pull/1160,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/1160#issuecomment-797461091,"Semantics of make dist has changed, now it doesn't build the whole toolstack and the drakvuf-bundle is broken since some time. It doesn't contain the required Xen toolstack binaries.",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1162,2021-03-13T13:18:10Z,2021-03-13T13:41:24Z,2021-03-13T13:41:24Z,MERGED,True,1,0,1,https://github.com/icedevml,drakvuf-bundle: add required xen-gntdev module,1,[],https://github.com/tklengyel/drakvuf/pull/1162,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/1162,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1163,2021-03-13T15:59:35Z,2021-03-13T16:33:37Z,2021-03-13T16:33:39Z,MERGED,True,80,70,2,https://github.com/tklengyel,Add Coverity scan to Github Actions,2,[],https://github.com/tklengyel/drakvuf/pull/1163,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1163,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1164,2021-03-13T16:42:01Z,2021-03-13T17:19:20Z,2021-03-13T19:46:42Z,MERGED,True,7,5,2,https://github.com/tklengyel,Proper catching of plugin start fall-through,1,[],https://github.com/tklengyel/drakvuf/pull/1164,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1164,There is no such option as -Wimplicit-fallthrough=n and -Wextra already enables -Wimplicit-fallthrough=3. It evidently didn't catch the previous error. Adding a more explicit throw -1 in case the default switch case is reached.,There is no such option as -Wimplicit-fallthrough=n and -Wextra already enables -Wimplicit-fallthrough=3. It evidently didn't catch the previous error. Adding a more explicit throw -1 in case the default switch case is reached.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1164,2021-03-13T16:42:01Z,2021-03-13T17:19:20Z,2021-03-13T19:46:42Z,MERGED,True,7,5,2,https://github.com/tklengyel,Proper catching of plugin start fall-through,1,[],https://github.com/tklengyel/drakvuf/pull/1164,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/1164#issuecomment-798619464,There is no such option as -Wimplicit-fallthrough=n and -Wextra already enables -Wimplicit-fallthrough=3. It evidently didn't catch the previous error. Adding a more explicit throw -1 in case the default switch case is reached.,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1164,2021-03-13T16:42:01Z,2021-03-13T17:19:20Z,2021-03-13T19:46:42Z,MERGED,True,7,5,2,https://github.com/tklengyel,Proper catching of plugin start fall-through,1,[],https://github.com/tklengyel/drakvuf/pull/1164,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/1164#issuecomment-798736540,There is no such option as -Wimplicit-fallthrough=n and -Wextra already enables -Wimplicit-fallthrough=3. It evidently didn't catch the previous error. Adding a more explicit throw -1 in case the default switch case is reached.,"It evidently didn't catch the previous error.

Huh, I've tested and it worked on my compiler o_O",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1164,2021-03-13T16:42:01Z,2021-03-13T17:19:20Z,2021-03-13T19:46:42Z,MERGED,True,7,5,2,https://github.com/tklengyel,Proper catching of plugin start fall-through,1,[],https://github.com/tklengyel/drakvuf/pull/1164,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1164#issuecomment-798774766,There is no such option as -Wimplicit-fallthrough=n and -Wextra already enables -Wimplicit-fallthrough=3. It evidently didn't catch the previous error. Adding a more explicit throw -1 in case the default switch case is reached.,"Not sure how because the CFLAGS you added didn't really enable any additional checks. I tested manually with a bogus switch case with no /* fall-through */ and the compiler didn't throw an error (clang-10). Anyway, this should work now irrespective of the compiler.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1165,2021-03-13T17:27:02Z,2021-03-13T19:40:01Z,2021-03-13T19:40:03Z,MERGED,True,4,3,2,https://github.com/tklengyel,Couple Coverity fixes,2,[],https://github.com/tklengyel/drakvuf/pull/1165,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1165,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1166,2021-03-14T01:26:01Z,2021-03-14T01:26:11Z,2021-03-14T01:26:13Z,MERGED,True,14,4,1,https://github.com/tklengyel,Remove old builds from drakvuf-builds,1,[],https://github.com/tklengyel/drakvuf/pull/1166,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1166,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1167,2021-03-14T02:12:34Z,2021-03-14T03:08:31Z,2021-03-14T03:08:33Z,MERGED,True,3923,4019,90,https://github.com/tklengyel,Update LibVMI & tune formatting,2,[],https://github.com/tklengyel/drakvuf/pull/1167,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1167,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1167,2021-03-14T02:12:34Z,2021-03-14T03:08:31Z,2021-03-14T03:08:33Z,MERGED,True,3923,4019,90,https://github.com/tklengyel,Update LibVMI & tune formatting,2,[],https://github.com/tklengyel/drakvuf/pull/1167,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/1167#issuecomment-798822288,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1168,2021-03-14T03:43:12Z,2021-03-14T20:39:19Z,2021-03-14T20:39:21Z,MERGED,True,25,1,2,https://github.com/tklengyel,Add cpplint github action,2,[],https://github.com/tklengyel/drakvuf/pull/1168,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1168,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1169,2021-03-15T00:06:32Z,2021-03-15T00:14:45Z,2021-03-15T00:14:48Z,MERGED,True,0,5,1,https://github.com/tklengyel,Tune CodeQL,1,[],https://github.com/tklengyel/drakvuf/pull/1169,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1169,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1171,2021-03-16T18:44:32Z,2021-03-17T02:38:22Z,2021-03-17T02:38:22Z,MERGED,True,81,75,1,https://github.com/icedevml,injector: improve logging and error handling,2,[],https://github.com/tklengyel/drakvuf/pull/1171,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/1171,"make a printout when there is a LibVMI initialization problem (currently there is an exit_code = 1 with empty output);
report actual error codes to allow distinguish if the file doesn't exist, there is some a permission problem or different cause;
properly handle problems with file open on the host side;","make a printout when there is a LibVMI initialization problem (currently there is an exit_code = 1 with empty output);
report actual error codes to allow distinguish if the file doesn't exist, there is some a permission problem or different cause;
properly handle problems with file open on the host side;",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1171,2021-03-16T18:44:32Z,2021-03-17T02:38:22Z,2021-03-17T02:38:22Z,MERGED,True,81,75,1,https://github.com/icedevml,injector: improve logging and error handling,2,[],https://github.com/tklengyel/drakvuf/pull/1171,https://github.com/icedevml,2,https://github.com/tklengyel/drakvuf/pull/1171#issuecomment-800544922,"make a printout when there is a LibVMI initialization problem (currently there is an exit_code = 1 with empty output);
report actual error codes to allow distinguish if the file doesn't exist, there is some a permission problem or different cause;
properly handle problems with file open on the host side;",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1171,2021-03-16T18:44:32Z,2021-03-17T02:38:22Z,2021-03-17T02:38:22Z,MERGED,True,81,75,1,https://github.com/icedevml,injector: improve logging and error handling,2,[],https://github.com/tklengyel/drakvuf/pull/1171,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/1171#issuecomment-800573571,"make a printout when there is a LibVMI initialization problem (currently there is an exit_code = 1 with empty output);
report actual error codes to allow distinguish if the file doesn't exist, there is some a permission problem or different cause;
properly handle problems with file open on the host side;",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1171,2021-03-16T18:44:32Z,2021-03-17T02:38:22Z,2021-03-17T02:38:22Z,MERGED,True,81,75,1,https://github.com/icedevml,injector: improve logging and error handling,2,[],https://github.com/tklengyel/drakvuf/pull/1171,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/1171#issuecomment-800588867,"make a printout when there is a LibVMI initialization problem (currently there is an exit_code = 1 with empty output);
report actual error codes to allow distinguish if the file doesn't exist, there is some a permission problem or different cause;
properly handle problems with file open on the host side;",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1171,2021-03-16T18:44:32Z,2021-03-17T02:38:22Z,2021-03-17T02:38:22Z,MERGED,True,81,75,1,https://github.com/icedevml,injector: improve logging and error handling,2,[],https://github.com/tklengyel/drakvuf/pull/1171,https://github.com/icedevml,5,https://github.com/tklengyel/drakvuf/pull/1171#issuecomment-800603263,"make a printout when there is a LibVMI initialization problem (currently there is an exit_code = 1 with empty output);
report actual error codes to allow distinguish if the file doesn't exist, there is some a permission problem or different cause;
properly handle problems with file open on the host side;",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1171,2021-03-16T18:44:32Z,2021-03-17T02:38:22Z,2021-03-17T02:38:22Z,MERGED,True,81,75,1,https://github.com/icedevml,injector: improve logging and error handling,2,[],https://github.com/tklengyel/drakvuf/pull/1171,https://github.com/icedevml,6,https://github.com/tklengyel/drakvuf/pull/1171#issuecomment-800657704,"make a printout when there is a LibVMI initialization problem (currently there is an exit_code = 1 with empty output);
report actual error codes to allow distinguish if the file doesn't exist, there is some a permission problem or different cause;
properly handle problems with file open on the host side;",@tklengyel could you confirm this CI error is related to the CI itself or actually this PR?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1171,2021-03-16T18:44:32Z,2021-03-17T02:38:22Z,2021-03-17T02:38:22Z,MERGED,True,81,75,1,https://github.com/icedevml,injector: improve logging and error handling,2,[],https://github.com/tklengyel/drakvuf/pull/1171,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/1171#issuecomment-800676861,"make a printout when there is a LibVMI initialization problem (currently there is an exit_code = 1 with empty output);
report actual error codes to allow distinguish if the file doesn't exist, there is some a permission problem or different cause;
properly handle problems with file open on the host side;",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1171,2021-03-16T18:44:32Z,2021-03-17T02:38:22Z,2021-03-17T02:38:22Z,MERGED,True,81,75,1,https://github.com/icedevml,injector: improve logging and error handling,2,[],https://github.com/tklengyel/drakvuf/pull/1171,https://github.com/icedevml,8,https://github.com/tklengyel/drakvuf/pull/1171#issuecomment-800681794,"make a printout when there is a LibVMI initialization problem (currently there is an exit_code = 1 with empty output);
report actual error codes to allow distinguish if the file doesn't exist, there is some a permission problem or different cause;
properly handle problems with file open on the host side;",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1171,2021-03-16T18:44:32Z,2021-03-17T02:38:22Z,2021-03-17T02:38:22Z,MERGED,True,81,75,1,https://github.com/icedevml,injector: improve logging and error handling,2,[],https://github.com/tklengyel/drakvuf/pull/1171,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/1171#issuecomment-800689416,"make a printout when there is a LibVMI initialization problem (currently there is an exit_code = 1 with empty output);
report actual error codes to allow distinguish if the file doesn't exist, there is some a permission problem or different cause;
properly handle problems with file open on the host side;","Well, it's sometimes the win7 x86 can't find pid4 error, which has happened before so it's likely unrelated, but sometimes Win10 2004 test fails, which is new. I'll check how it behaves with master.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1171,2021-03-16T18:44:32Z,2021-03-17T02:38:22Z,2021-03-17T02:38:22Z,MERGED,True,81,75,1,https://github.com/icedevml,injector: improve logging and error handling,2,[],https://github.com/tklengyel/drakvuf/pull/1171,https://github.com/icedevml,10,https://github.com/tklengyel/drakvuf/pull/1171#issuecomment-800694665,"make a printout when there is a LibVMI initialization problem (currently there is an exit_code = 1 with empty output);
report actual error codes to allow distinguish if the file doesn't exist, there is some a permission problem or different cause;
properly handle problems with file open on the host side;",95% this PR only touches -m readfile/writefile so the CI regression went from somewhere else,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1171,2021-03-16T18:44:32Z,2021-03-17T02:38:22Z,2021-03-17T02:38:22Z,MERGED,True,81,75,1,https://github.com/icedevml,injector: improve logging and error handling,2,[],https://github.com/tklengyel/drakvuf/pull/1171,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/1171#issuecomment-800696214,"make a printout when there is a LibVMI initialization problem (currently there is an exit_code = 1 with empty output);
report actual error codes to allow distinguish if the file doesn't exist, there is some a permission problem or different cause;
properly handle problems with file open on the host side;",I moved Xen to 4.15-rc3 recently and upped the dom0 kernel. May just need to restart and resave the VMs.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1171,2021-03-16T18:44:32Z,2021-03-17T02:38:22Z,2021-03-17T02:38:22Z,MERGED,True,81,75,1,https://github.com/icedevml,injector: improve logging and error handling,2,[],https://github.com/tklengyel/drakvuf/pull/1171,https://github.com/tklengyel,12,https://github.com/tklengyel/drakvuf/pull/1171#issuecomment-800722735,"make a printout when there is a LibVMI initialization problem (currently there is an exit_code = 1 with empty output);
report actual error codes to allow distinguish if the file doesn't exist, there is some a permission problem or different cause;
properly handle problems with file open on the host side;",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1172,2021-03-17T00:25:43Z,2021-03-17T01:23:18Z,2021-03-17T01:23:21Z,MERGED,True,1,1,1,https://github.com/tklengyel,Fix leak in apimon,1,[],https://github.com/tklengyel/drakvuf/pull/1172,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1172,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1172,2021-03-17T00:25:43Z,2021-03-17T01:23:18Z,2021-03-17T01:23:21Z,MERGED,True,1,1,1,https://github.com/tklengyel,Fix leak in apimon,1,[],https://github.com/tklengyel/drakvuf/pull/1172,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/1172#issuecomment-800704470,,Interesting that valgrind doesn't catch this.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1172,2021-03-17T00:25:43Z,2021-03-17T01:23:18Z,2021-03-17T01:23:21Z,MERGED,True,1,1,1,https://github.com/tklengyel,Fix leak in apimon,1,[],https://github.com/tklengyel/drakvuf/pull/1172,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1172#issuecomment-800714446,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1172,2021-03-17T00:25:43Z,2021-03-17T01:23:18Z,2021-03-17T01:23:21Z,MERGED,True,1,1,1,https://github.com/tklengyel,Fix leak in apimon,1,[],https://github.com/tklengyel/drakvuf/pull/1172,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/1172#issuecomment-800715135,,🙉,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1173,2021-03-18T13:01:13Z,2021-03-18T13:06:58Z,2021-03-18T13:07:01Z,MERGED,True,4,4,4,https://github.com/tklengyel,Fix typo in license text of some remaining files,1,[],https://github.com/tklengyel/drakvuf/pull/1173,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1173,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1175,2021-03-23T10:19:50Z,2021-03-30T05:45:45Z,2021-04-08T12:36:20Z,MERGED,True,63,15,4,https://github.com/skvl,"libusermode, rpcmon: fix various errors",6,[],https://github.com/tklengyel/drakvuf/pull/1175,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1175,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1175,2021-03-23T10:19:50Z,2021-03-30T05:45:45Z,2021-04-08T12:36:20Z,MERGED,True,63,15,4,https://github.com/skvl,"libusermode, rpcmon: fix various errors",6,[],https://github.com/tklengyel/drakvuf/pull/1175,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1175#issuecomment-804785900,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1175,2021-03-23T10:19:50Z,2021-03-30T05:45:45Z,2021-04-08T12:36:20Z,MERGED,True,63,15,4,https://github.com/skvl,"libusermode, rpcmon: fix various errors",6,[],https://github.com/tklengyel/drakvuf/pull/1175,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1175#issuecomment-804801704,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1175,2021-03-23T10:19:50Z,2021-03-30T05:45:45Z,2021-04-08T12:36:20Z,MERGED,True,63,15,4,https://github.com/skvl,"libusermode, rpcmon: fix various errors",6,[],https://github.com/tklengyel/drakvuf/pull/1175,https://github.com/skvl,4,https://github.com/tklengyel/drakvuf/pull/1175#issuecomment-806721548,,"@tklengyel, is everything OK with this PR?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1175,2021-03-23T10:19:50Z,2021-03-30T05:45:45Z,2021-04-08T12:36:20Z,MERGED,True,63,15,4,https://github.com/skvl,"libusermode, rpcmon: fix various errors",6,[],https://github.com/tklengyel/drakvuf/pull/1175,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1175#issuecomment-806740566,,Largely looks fine. It's unclear to me whether libusermode is explicitly Windows-only right now or not. I think it shouldn't be so you should not add code that clearly will only work just with Windows.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1175,2021-03-23T10:19:50Z,2021-03-30T05:45:45Z,2021-04-08T12:36:20Z,MERGED,True,63,15,4,https://github.com/skvl,"libusermode, rpcmon: fix various errors",6,[],https://github.com/tklengyel/drakvuf/pull/1175,https://github.com/skvl,6,https://github.com/tklengyel/drakvuf/pull/1175#issuecomment-808094551,,@tklengyel what's the error?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1175,2021-03-23T10:19:50Z,2021-03-30T05:45:45Z,2021-04-08T12:36:20Z,MERGED,True,63,15,4,https://github.com/skvl,"libusermode, rpcmon: fix various errors",6,[],https://github.com/tklengyel/drakvuf/pull/1175,https://github.com/skvl,7,https://github.com/tklengyel/drakvuf/pull/1175#issuecomment-808098177,,@tklengyel I have found other places in libusermode related to process information. So I've added checks there too.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1175,2021-03-23T10:19:50Z,2021-03-30T05:45:45Z,2021-04-08T12:36:20Z,MERGED,True,63,15,4,https://github.com/skvl,"libusermode, rpcmon: fix various errors",6,[],https://github.com/tklengyel/drakvuf/pull/1175,https://github.com/skvl,8,https://github.com/tklengyel/drakvuf/pull/1175#issuecomment-808098399,,The PR relates to #1177,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1175,2021-03-23T10:19:50Z,2021-03-30T05:45:45Z,2021-04-08T12:36:20Z,MERGED,True,63,15,4,https://github.com/skvl,"libusermode, rpcmon: fix various errors",6,[],https://github.com/tklengyel/drakvuf/pull/1175,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/1175#issuecomment-808176429,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1175,2021-03-23T10:19:50Z,2021-03-30T05:45:45Z,2021-04-08T12:36:20Z,MERGED,True,63,15,4,https://github.com/skvl,"libusermode, rpcmon: fix various errors",6,[],https://github.com/tklengyel/drakvuf/pull/1175,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/1175#issuecomment-808334773,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1175,2021-03-23T10:19:50Z,2021-03-30T05:45:45Z,2021-04-08T12:36:20Z,MERGED,True,63,15,4,https://github.com/skvl,"libusermode, rpcmon: fix various errors",6,[],https://github.com/tklengyel/drakvuf/pull/1175,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/1175#issuecomment-808340781,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1179,2021-03-26T14:41:05Z,2021-03-26T16:03:12Z,2021-07-23T13:18:39Z,CLOSED,False,1,1,1,https://github.com/tklengyel,Don't enable libhooktest plugin for Linux VMs,1,[],https://github.com/tklengyel/drakvuf/pull/1179,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1179,Related to #1178,Related to #1178,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1180,2021-03-31T12:15:35Z,2021-04-01T11:47:16Z,2021-04-08T12:36:21Z,MERGED,True,1,0,1,https://github.com/skvl,libdrakvuf: fix memory leak on WoW offsets,1,[],https://github.com/tklengyel/drakvuf/pull/1180,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1180,Relates to #1174,Relates to #1174,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1180,2021-03-31T12:15:35Z,2021-04-01T11:47:16Z,2021-04-08T12:36:21Z,MERGED,True,1,0,1,https://github.com/skvl,libdrakvuf: fix memory leak on WoW offsets,1,[],https://github.com/tklengyel/drakvuf/pull/1180,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1180#issuecomment-811022333,Relates to #1174,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1180,2021-03-31T12:15:35Z,2021-04-01T11:47:16Z,2021-04-08T12:36:21Z,MERGED,True,1,0,1,https://github.com/skvl,libdrakvuf: fix memory leak on WoW offsets,1,[],https://github.com/tklengyel/drakvuf/pull/1180,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1180#issuecomment-811024536,Relates to #1174,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1180,2021-03-31T12:15:35Z,2021-04-01T11:47:16Z,2021-04-08T12:36:21Z,MERGED,True,1,0,1,https://github.com/skvl,libdrakvuf: fix memory leak on WoW offsets,1,[],https://github.com/tklengyel/drakvuf/pull/1180,https://github.com/skvl,4,https://github.com/tklengyel/drakvuf/pull/1180#issuecomment-811062322,Relates to #1174,@tklengyel is there some error on CI? As far as I understand it fails to create a VM.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1180,2021-03-31T12:15:35Z,2021-04-01T11:47:16Z,2021-04-08T12:36:21Z,MERGED,True,1,0,1,https://github.com/skvl,libdrakvuf: fix memory leak on WoW offsets,1,[],https://github.com/tklengyel/drakvuf/pull/1180,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1180#issuecomment-811538674,Relates to #1174,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1180,2021-03-31T12:15:35Z,2021-04-01T11:47:16Z,2021-04-08T12:36:21Z,MERGED,True,1,0,1,https://github.com/skvl,libdrakvuf: fix memory leak on WoW offsets,1,[],https://github.com/tklengyel/drakvuf/pull/1180,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1180#issuecomment-811538924,Relates to #1174,"@skvl Yea, the win10 vm failed to restore from the savefile for some reason. I just resaved it and now its back to normal ¯\_(ツ)_/¯",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1180,2021-03-31T12:15:35Z,2021-04-01T11:47:16Z,2021-04-08T12:36:21Z,MERGED,True,1,0,1,https://github.com/skvl,libdrakvuf: fix memory leak on WoW offsets,1,[],https://github.com/tklengyel/drakvuf/pull/1180,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/1180#issuecomment-811576453,Relates to #1174,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1180,2021-03-31T12:15:35Z,2021-04-01T11:47:16Z,2021-04-08T12:36:21Z,MERGED,True,1,0,1,https://github.com/skvl,libdrakvuf: fix memory leak on WoW offsets,1,[],https://github.com/tklengyel/drakvuf/pull/1180,https://github.com/skvl,8,https://github.com/tklengyel/drakvuf/pull/1180#issuecomment-811756676,Relates to #1174,"Thank You.
Waiting for results...",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1180,2021-03-31T12:15:35Z,2021-04-01T11:47:16Z,2021-04-08T12:36:21Z,MERGED,True,1,0,1,https://github.com/skvl,libdrakvuf: fix memory leak on WoW offsets,1,[],https://github.com/tklengyel/drakvuf/pull/1180,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/1180#issuecomment-811831328,Relates to #1174,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1182,2021-04-02T07:13:19Z,2021-04-07T00:04:53Z,2021-04-10T00:13:54Z,MERGED,True,252,19,8,https://github.com/pwnosaur,Context based views,16,[],https://github.com/tklengyel/drakvuf/pull/1182,https://github.com/pwnosaur,1,https://github.com/tklengyel/drakvuf/pull/1182,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1182,2021-04-02T07:13:19Z,2021-04-07T00:04:53Z,2021-04-10T00:13:54Z,MERGED,True,252,19,8,https://github.com/pwnosaur,Context based views,16,[],https://github.com/tklengyel/drakvuf/pull/1182,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1182#issuecomment-812369873,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1182,2021-04-02T07:13:19Z,2021-04-07T00:04:53Z,2021-04-10T00:13:54Z,MERGED,True,252,19,8,https://github.com/pwnosaur,Context based views,16,[],https://github.com/tklengyel/drakvuf/pull/1182,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1182#issuecomment-812744008,,"I gave this PR a spin and after starting/stopping it a couple times the VM crashed. This suggest to me that the memory gets desynchronized and certain memory write events are not processed correctly. That would be a design issue with how the altp2m views are setup.
Never mind, looks like my VM just ran out of shadow memory. With that increased it works pretty well.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1182,2021-04-02T07:13:19Z,2021-04-07T00:04:53Z,2021-04-10T00:13:54Z,MERGED,True,252,19,8,https://github.com/pwnosaur,Context based views,16,[],https://github.com/tklengyel/drakvuf/pull/1182,https://github.com/pwnosaur,4,https://github.com/tklengyel/drakvuf/pull/1182#issuecomment-812817640,,"Never mind, looks like my VM just ran out of shadow memory. With that increased it works pretty well.

Great, I have marked it as ready.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1182,2021-04-02T07:13:19Z,2021-04-07T00:04:53Z,2021-04-10T00:13:54Z,MERGED,True,252,19,8,https://github.com/pwnosaur,Context based views,16,[],https://github.com/tklengyel/drakvuf/pull/1182,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1182#issuecomment-812857278,,@pwnosaur You still have ci checks failing,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1182,2021-04-02T07:13:19Z,2021-04-07T00:04:53Z,2021-04-10T00:13:54Z,MERGED,True,252,19,8,https://github.com/pwnosaur,Context based views,16,[],https://github.com/tklengyel/drakvuf/pull/1182,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1182#issuecomment-812857326,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1182,2021-04-02T07:13:19Z,2021-04-07T00:04:53Z,2021-04-10T00:13:54Z,MERGED,True,252,19,8,https://github.com/pwnosaur,Context based views,16,[],https://github.com/tklengyel/drakvuf/pull/1182,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/1182#issuecomment-813082398,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1182,2021-04-02T07:13:19Z,2021-04-07T00:04:53Z,2021-04-10T00:13:54Z,MERGED,True,252,19,8,https://github.com/pwnosaur,Context based views,16,[],https://github.com/tklengyel/drakvuf/pull/1182,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/1182#issuecomment-813096886,,Valgrind is spotting some errors now,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1182,2021-04-02T07:13:19Z,2021-04-07T00:04:53Z,2021-04-10T00:13:54Z,MERGED,True,252,19,8,https://github.com/pwnosaur,Context based views,16,[],https://github.com/tklengyel/drakvuf/pull/1182,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/1182#issuecomment-813335170,,I'll add a test to Jenkins to exercise this new mode and rerun the tests shortly,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1182,2021-04-02T07:13:19Z,2021-04-07T00:04:53Z,2021-04-10T00:13:54Z,MERGED,True,252,19,8,https://github.com/pwnosaur,Context based views,16,[],https://github.com/tklengyel/drakvuf/pull/1182,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/1182#issuecomment-814509209,,"Thank you, this looks good! Much appreciated and very handy feature to have.",True,{'THUMBS_UP': ['https://github.com/pwnosaur']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1184,2021-04-05T09:56:17Z,2021-04-09T01:23:06Z,2021-04-09T15:48:32Z,MERGED,True,134,0,7,https://github.com/skvl,memdump: add shellcode detect,2,[],https://github.com/tklengyel/drakvuf/pull/1184,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1184,"A message like this should appear (with -o kv option):
memdump Time=1617703930.430326,PID=3036,PPID=2992,TID=3040,ProcessName=""\Device\HarddiskVolume2\Users\John\Desktop\sample.exe"",Method=NtFreeVirtualMemory,DumpReason=""Possible shellcode detected"",DumpPID=3036,DumpAddr=C0000,DumpSize=0x1000,DumpFilename=""c0000_7265fc3339a44c62"",SN=19","A message like this should appear (with -o kv option):
memdump Time=1617703930.430326,PID=3036,PPID=2992,TID=3040,ProcessName=""\Device\HarddiskVolume2\Users\John\Desktop\sample.exe"",Method=NtFreeVirtualMemory,DumpReason=""Possible shellcode detected"",DumpPID=3036,DumpAddr=C0000,DumpSize=0x1000,DumpFilename=""c0000_7265fc3339a44c62"",SN=19",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1184,2021-04-05T09:56:17Z,2021-04-09T01:23:06Z,2021-04-09T15:48:32Z,MERGED,True,134,0,7,https://github.com/skvl,memdump: add shellcode detect,2,[],https://github.com/tklengyel/drakvuf/pull/1184,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1184#issuecomment-813313809,"A message like this should appear (with -o kv option):
memdump Time=1617703930.430326,PID=3036,PPID=2992,TID=3040,ProcessName=""\Device\HarddiskVolume2\Users\John\Desktop\sample.exe"",Method=NtFreeVirtualMemory,DumpReason=""Possible shellcode detected"",DumpPID=3036,DumpAddr=C0000,DumpSize=0x1000,DumpFilename=""c0000_7265fc3339a44c62"",SN=19",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1184,2021-04-05T09:56:17Z,2021-04-09T01:23:06Z,2021-04-09T15:48:32Z,MERGED,True,134,0,7,https://github.com/skvl,memdump: add shellcode detect,2,[],https://github.com/tklengyel/drakvuf/pull/1184,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1184#issuecomment-813364781,"A message like this should appear (with -o kv option):
memdump Time=1617703930.430326,PID=3036,PPID=2992,TID=3040,ProcessName=""\Device\HarddiskVolume2\Users\John\Desktop\sample.exe"",Method=NtFreeVirtualMemory,DumpReason=""Possible shellcode detected"",DumpPID=3036,DumpAddr=C0000,DumpSize=0x1000,DumpFilename=""c0000_7265fc3339a44c62"",SN=19",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1184,2021-04-05T09:56:17Z,2021-04-09T01:23:06Z,2021-04-09T15:48:32Z,MERGED,True,134,0,7,https://github.com/skvl,memdump: add shellcode detect,2,[],https://github.com/tklengyel/drakvuf/pull/1184,https://github.com/skvl,4,https://github.com/tklengyel/drakvuf/pull/1184#issuecomment-814022974,"A message like this should appear (with -o kv option):
memdump Time=1617703930.430326,PID=3036,PPID=2992,TID=3040,ProcessName=""\Device\HarddiskVolume2\Users\John\Desktop\sample.exe"",Method=NtFreeVirtualMemory,DumpReason=""Possible shellcode detected"",DumpPID=3036,DumpAddr=C0000,DumpSize=0x1000,DumpFilename=""c0000_7265fc3339a44c62"",SN=19",@tklengyel what is the error with Windows 10 test?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1184,2021-04-05T09:56:17Z,2021-04-09T01:23:06Z,2021-04-09T15:48:32Z,MERGED,True,134,0,7,https://github.com/skvl,memdump: add shellcode detect,2,[],https://github.com/tklengyel/drakvuf/pull/1184,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1184#issuecomment-814144352,"A message like this should appear (with -o kv option):
memdump Time=1617703930.430326,PID=3036,PPID=2992,TID=3040,ProcessName=""\Device\HarddiskVolume2\Users\John\Desktop\sample.exe"",Method=NtFreeVirtualMemory,DumpReason=""Possible shellcode detected"",DumpPID=3036,DumpAddr=C0000,DumpSize=0x1000,DumpFilename=""c0000_7265fc3339a44c62"",SN=19",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1184,2021-04-05T09:56:17Z,2021-04-09T01:23:06Z,2021-04-09T15:48:32Z,MERGED,True,134,0,7,https://github.com/skvl,memdump: add shellcode detect,2,[],https://github.com/tklengyel/drakvuf/pull/1184,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1184#issuecomment-814857562,"A message like this should appear (with -o kv option):
memdump Time=1617703930.430326,PID=3036,PPID=2992,TID=3040,ProcessName=""\Device\HarddiskVolume2\Users\John\Desktop\sample.exe"",Method=NtFreeVirtualMemory,DumpReason=""Possible shellcode detected"",DumpPID=3036,DumpAddr=C0000,DumpSize=0x1000,DumpFilename=""c0000_7265fc3339a44c62"",SN=19",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1184,2021-04-05T09:56:17Z,2021-04-09T01:23:06Z,2021-04-09T15:48:32Z,MERGED,True,134,0,7,https://github.com/skvl,memdump: add shellcode detect,2,[],https://github.com/tklengyel/drakvuf/pull/1184,https://github.com/skvl,7,https://github.com/tklengyel/drakvuf/pull/1184#issuecomment-814872624,"A message like this should appear (with -o kv option):
memdump Time=1617703930.430326,PID=3036,PPID=2992,TID=3040,ProcessName=""\Device\HarddiskVolume2\Users\John\Desktop\sample.exe"",Method=NtFreeVirtualMemory,DumpReason=""Possible shellcode detected"",DumpPID=3036,DumpAddr=C0000,DumpSize=0x1000,DumpFilename=""c0000_7265fc3339a44c62"",SN=19","@tklengyel, I have re-based the branch",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1184,2021-04-05T09:56:17Z,2021-04-09T01:23:06Z,2021-04-09T15:48:32Z,MERGED,True,134,0,7,https://github.com/skvl,memdump: add shellcode detect,2,[],https://github.com/tklengyel/drakvuf/pull/1184,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/1184#issuecomment-815377394,"A message like this should appear (with -o kv option):
memdump Time=1617703930.430326,PID=3036,PPID=2992,TID=3040,ProcessName=""\Device\HarddiskVolume2\Users\John\Desktop\sample.exe"",Method=NtFreeVirtualMemory,DumpReason=""Possible shellcode detected"",DumpPID=3036,DumpAddr=C0000,DumpSize=0x1000,DumpFilename=""c0000_7265fc3339a44c62"",SN=19",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1184,2021-04-05T09:56:17Z,2021-04-09T01:23:06Z,2021-04-09T15:48:32Z,MERGED,True,134,0,7,https://github.com/skvl,memdump: add shellcode detect,2,[],https://github.com/tklengyel/drakvuf/pull/1184,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/1184#issuecomment-815685529,"A message like this should appear (with -o kv option):
memdump Time=1617703930.430326,PID=3036,PPID=2992,TID=3040,ProcessName=""\Device\HarddiskVolume2\Users\John\Desktop\sample.exe"",Method=NtFreeVirtualMemory,DumpReason=""Possible shellcode detected"",DumpPID=3036,DumpAddr=C0000,DumpSize=0x1000,DumpFilename=""c0000_7265fc3339a44c62"",SN=19",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1184,2021-04-05T09:56:17Z,2021-04-09T01:23:06Z,2021-04-09T15:48:32Z,MERGED,True,134,0,7,https://github.com/skvl,memdump: add shellcode detect,2,[],https://github.com/tklengyel/drakvuf/pull/1184,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/1184#issuecomment-816313588,"A message like this should appear (with -o kv option):
memdump Time=1617703930.430326,PID=3036,PPID=2992,TID=3040,ProcessName=""\Device\HarddiskVolume2\Users\John\Desktop\sample.exe"",Method=NtFreeVirtualMemory,DumpReason=""Possible shellcode detected"",DumpPID=3036,DumpAddr=C0000,DumpSize=0x1000,DumpFilename=""c0000_7265fc3339a44c62"",SN=19",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1184,2021-04-05T09:56:17Z,2021-04-09T01:23:06Z,2021-04-09T15:48:32Z,MERGED,True,134,0,7,https://github.com/skvl,memdump: add shellcode detect,2,[],https://github.com/tklengyel/drakvuf/pull/1184,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/1184#issuecomment-816324836,"A message like this should appear (with -o kv option):
memdump Time=1617703930.430326,PID=3036,PPID=2992,TID=3040,ProcessName=""\Device\HarddiskVolume2\Users\John\Desktop\sample.exe"",Method=NtFreeVirtualMemory,DumpReason=""Possible shellcode detected"",DumpPID=3036,DumpAddr=C0000,DumpSize=0x1000,DumpFilename=""c0000_7265fc3339a44c62"",SN=19",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1185,2021-04-05T10:22:06Z,2021-04-08T11:26:03Z,2021-04-08T12:36:19Z,MERGED,True,730,1,9,https://github.com/skvl,exploitmon: add new plugin,3,[],https://github.com/tklengyel/drakvuf/pull/1185,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1185,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1185,2021-04-05T10:22:06Z,2021-04-08T11:26:03Z,2021-04-08T12:36:19Z,MERGED,True,730,1,9,https://github.com/skvl,exploitmon: add new plugin,3,[],https://github.com/tklengyel/drakvuf/pull/1185,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1185#issuecomment-813324790,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1185,2021-04-05T10:22:06Z,2021-04-08T11:26:03Z,2021-04-08T12:36:19Z,MERGED,True,730,1,9,https://github.com/skvl,exploitmon: add new plugin,3,[],https://github.com/tklengyel/drakvuf/pull/1185,https://github.com/skvl,3,https://github.com/tklengyel/drakvuf/pull/1185#issuecomment-813870364,,I will fix this as soon as possible.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1185,2021-04-05T10:22:06Z,2021-04-08T11:26:03Z,2021-04-08T12:36:19Z,MERGED,True,730,1,9,https://github.com/skvl,exploitmon: add new plugin,3,[],https://github.com/tklengyel/drakvuf/pull/1185,https://github.com/skvl,4,https://github.com/tklengyel/drakvuf/pull/1185#issuecomment-813992215,,"Fixed.
One could catch event like this (with -o kv option):
exploitmon Time=1617702275.324506,PID=2836,PPID=2788,TID=2840,ProcessName=""\Device\HarddiskVolume2\Users\John\Desktop\share\example.exe"",Method=NtTerminateProcess,Method=""Token modification detected""",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1185,2021-04-05T10:22:06Z,2021-04-08T11:26:03Z,2021-04-08T12:36:19Z,MERGED,True,730,1,9,https://github.com/skvl,exploitmon: add new plugin,3,[],https://github.com/tklengyel/drakvuf/pull/1185,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1185#issuecomment-814002636,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1185,2021-04-05T10:22:06Z,2021-04-08T11:26:03Z,2021-04-08T12:36:19Z,MERGED,True,730,1,9,https://github.com/skvl,exploitmon: add new plugin,3,[],https://github.com/tklengyel/drakvuf/pull/1185,https://github.com/skvl,6,https://github.com/tklengyel/drakvuf/pull/1185#issuecomment-814008052,,@tklengyel what's the error with debian test?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1185,2021-04-05T10:22:06Z,2021-04-08T11:26:03Z,2021-04-08T12:36:19Z,MERGED,True,730,1,9,https://github.com/skvl,exploitmon: add new plugin,3,[],https://github.com/tklengyel/drakvuf/pull/1185,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/1185#issuecomment-814092405,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1185,2021-04-05T10:22:06Z,2021-04-08T11:26:03Z,2021-04-08T12:36:19Z,MERGED,True,730,1,9,https://github.com/skvl,exploitmon: add new plugin,3,[],https://github.com/tklengyel/drakvuf/pull/1185,https://github.com/skvl,8,https://github.com/tklengyel/drakvuf/pull/1185#issuecomment-814872759,,"@tklengyel, I have re-based the branch",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1185,2021-04-05T10:22:06Z,2021-04-08T11:26:03Z,2021-04-08T12:36:19Z,MERGED,True,730,1,9,https://github.com/skvl,exploitmon: add new plugin,3,[],https://github.com/tklengyel/drakvuf/pull/1185,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/1185#issuecomment-815156726,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1185,2021-04-05T10:22:06Z,2021-04-08T11:26:03Z,2021-04-08T12:36:19Z,MERGED,True,730,1,9,https://github.com/skvl,exploitmon: add new plugin,3,[],https://github.com/tklengyel/drakvuf/pull/1185,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/1185#issuecomment-815377543,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1186,2021-04-06T14:39:00Z,2021-04-06T15:04:50Z,2021-04-06T15:09:09Z,MERGED,True,2,0,2,https://github.com/BonusPlay,fix libhook when using api hammering changes,1,[],https://github.com/tklengyel/drakvuf/pull/1186,https://github.com/BonusPlay,1,https://github.com/tklengyel/drakvuf/pull/1186,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1186,2021-04-06T14:39:00Z,2021-04-06T15:04:50Z,2021-04-06T15:09:09Z,MERGED,True,2,0,2,https://github.com/BonusPlay,fix libhook when using api hammering changes,1,[],https://github.com/tklengyel/drakvuf/pull/1186,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1186#issuecomment-814174807,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1186,2021-04-06T14:39:00Z,2021-04-06T15:04:50Z,2021-04-06T15:09:09Z,MERGED,True,2,0,2,https://github.com/BonusPlay,fix libhook when using api hammering changes,1,[],https://github.com/tklengyel/drakvuf/pull/1186,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/1186#issuecomment-814177051,,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1187,2021-04-06T16:55:12Z,2021-04-06T23:26:29Z,2021-04-06T23:26:29Z,MERGED,True,27,7,4,https://github.com/BonusPlay,fixes to double-free and use-after-free,1,[],https://github.com/tklengyel/drakvuf/pull/1187,https://github.com/BonusPlay,1,https://github.com/tklengyel/drakvuf/pull/1187,hopefully closes #1178,hopefully closes #1178,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1187,2021-04-06T16:55:12Z,2021-04-06T23:26:29Z,2021-04-06T23:26:29Z,MERGED,True,27,7,4,https://github.com/BonusPlay,fixes to double-free and use-after-free,1,[],https://github.com/tklengyel/drakvuf/pull/1187,https://github.com/icedevml,2,https://github.com/tklengyel/drakvuf/pull/1187#issuecomment-814288295,hopefully closes #1178,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1187,2021-04-06T16:55:12Z,2021-04-06T23:26:29Z,2021-04-06T23:26:29Z,MERGED,True,27,7,4,https://github.com/BonusPlay,fixes to double-free and use-after-free,1,[],https://github.com/tklengyel/drakvuf/pull/1187,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1187#issuecomment-814304183,hopefully closes #1178,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1189,2021-04-07T22:15:33Z,2021-04-10T00:49:58Z,2021-04-10T00:49:58Z,MERGED,True,27,13,1,https://github.com/pwnosaur,Refactor win_get_process_name : ImageFileName length varies,4,[],https://github.com/tklengyel/drakvuf/pull/1189,https://github.com/pwnosaur,1,https://github.com/tklengyel/drakvuf/pull/1189,"win_get_process_name uses two different approaches to yield the process name, one of which is not reliable when it comes to lengthy process names ImageFileName as it is a char array limited to 0x0F (number varies between kernel versions/builds), thus if the process name is longer it may return incomplete name. To solve this, I used string splitting on the full path and took the last token which points to the process name.
The vmi_read_str_va is kept in the return as fallback option in case the other method fails.","win_get_process_name uses two different approaches to yield the process name, one of which is not reliable when it comes to lengthy process names ImageFileName as it is a char array limited to 0x0F (number varies between kernel versions/builds), thus if the process name is longer it may return incomplete name. To solve this, I used string splitting on the full path and took the last token which points to the process name.
The vmi_read_str_va is kept in the return as fallback option in case the other method fails.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1189,2021-04-07T22:15:33Z,2021-04-10T00:49:58Z,2021-04-10T00:49:58Z,MERGED,True,27,13,1,https://github.com/pwnosaur,Refactor win_get_process_name : ImageFileName length varies,4,[],https://github.com/tklengyel/drakvuf/pull/1189,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1189#issuecomment-815298308,"win_get_process_name uses two different approaches to yield the process name, one of which is not reliable when it comes to lengthy process names ImageFileName as it is a char array limited to 0x0F (number varies between kernel versions/builds), thus if the process name is longer it may return incomplete name. To solve this, I used string splitting on the full path and took the last token which points to the process name.
The vmi_read_str_va is kept in the return as fallback option in case the other method fails.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1189,2021-04-07T22:15:33Z,2021-04-10T00:49:58Z,2021-04-10T00:49:58Z,MERGED,True,27,13,1,https://github.com/pwnosaur,Refactor win_get_process_name : ImageFileName length varies,4,[],https://github.com/tklengyel/drakvuf/pull/1189,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1189#issuecomment-815679664,"win_get_process_name uses two different approaches to yield the process name, one of which is not reliable when it comes to lengthy process names ImageFileName as it is a char array limited to 0x0F (number varies between kernel versions/builds), thus if the process name is longer it may return incomplete name. To solve this, I used string splitting on the full path and took the last token which points to the process name.
The vmi_read_str_va is kept in the return as fallback option in case the other method fails.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1189,2021-04-07T22:15:33Z,2021-04-10T00:49:58Z,2021-04-10T00:49:58Z,MERGED,True,27,13,1,https://github.com/pwnosaur,Refactor win_get_process_name : ImageFileName length varies,4,[],https://github.com/tklengyel/drakvuf/pull/1189,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1189#issuecomment-815688232,"win_get_process_name uses two different approaches to yield the process name, one of which is not reliable when it comes to lengthy process names ImageFileName as it is a char array limited to 0x0F (number varies between kernel versions/builds), thus if the process name is longer it may return incomplete name. To solve this, I used string splitting on the full path and took the last token which points to the process name.
The vmi_read_str_va is kept in the return as fallback option in case the other method fails.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1189,2021-04-07T22:15:33Z,2021-04-10T00:49:58Z,2021-04-10T00:49:58Z,MERGED,True,27,13,1,https://github.com/pwnosaur,Refactor win_get_process_name : ImageFileName length varies,4,[],https://github.com/tklengyel/drakvuf/pull/1189,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1189#issuecomment-816152884,"win_get_process_name uses two different approaches to yield the process name, one of which is not reliable when it comes to lengthy process names ImageFileName as it is a char array limited to 0x0F (number varies between kernel versions/builds), thus if the process name is longer it may return incomplete name. To solve this, I used string splitting on the full path and took the last token which points to the process name.
The vmi_read_str_va is kept in the return as fallback option in case the other method fails.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1189,2021-04-07T22:15:33Z,2021-04-10T00:49:58Z,2021-04-10T00:49:58Z,MERGED,True,27,13,1,https://github.com/pwnosaur,Refactor win_get_process_name : ImageFileName length varies,4,[],https://github.com/tklengyel/drakvuf/pull/1189,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1189#issuecomment-816336568,"win_get_process_name uses two different approaches to yield the process name, one of which is not reliable when it comes to lengthy process names ImageFileName as it is a char array limited to 0x0F (number varies between kernel versions/builds), thus if the process name is longer it may return incomplete name. To solve this, I used string splitting on the full path and took the last token which points to the process name.
The vmi_read_str_va is kept in the return as fallback option in case the other method fails.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1190,2021-04-08T00:34:25Z,2021-04-08T00:57:06Z,2021-04-08T00:57:10Z,MERGED,True,2,0,1,https://github.com/tklengyel,Destroy altp2m idrx on shutdown,1,[],https://github.com/tklengyel/drakvuf/pull/1190,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1190,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1191,2021-04-08T15:32:10Z,2021-04-09T00:08:58Z,2021-04-09T08:11:08Z,MERGED,True,50,8,3,https://github.com/BonusPlay,Fix uninitialized variables in libhook,2,[],https://github.com/tklengyel/drakvuf/pull/1191,https://github.com/BonusPlay,1,https://github.com/tklengyel/drakvuf/pull/1191,closes #1188,closes #1188,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1191,2021-04-08T15:32:10Z,2021-04-09T00:08:58Z,2021-04-09T08:11:08Z,MERGED,True,50,8,3,https://github.com/BonusPlay,Fix uninitialized variables in libhook,2,[],https://github.com/tklengyel/drakvuf/pull/1191,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/1191#issuecomment-815930217,closes #1188,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1191,2021-04-08T15:32:10Z,2021-04-09T00:08:58Z,2021-04-09T08:11:08Z,MERGED,True,50,8,3,https://github.com/BonusPlay,Fix uninitialized variables in libhook,2,[],https://github.com/tklengyel/drakvuf/pull/1191,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1191#issuecomment-815978466,closes #1188,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1191,2021-04-08T15:32:10Z,2021-04-09T00:08:58Z,2021-04-09T08:11:08Z,MERGED,True,50,8,3,https://github.com/BonusPlay,Fix uninitialized variables in libhook,2,[],https://github.com/tklengyel/drakvuf/pull/1191,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1191#issuecomment-816302919,closes #1188,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1192,2021-04-08T22:39:06Z,2021-04-08T23:30:03Z,2021-04-08T23:30:06Z,MERGED,True,6,7,3,https://github.com/tklengyel,Update Xen to 4.15,2,[],https://github.com/tklengyel/drakvuf/pull/1192,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1192,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1192,2021-04-08T22:39:06Z,2021-04-08T23:30:03Z,2021-04-08T23:30:06Z,MERGED,True,6,7,3,https://github.com/tklengyel,Update Xen to 4.15,2,[],https://github.com/tklengyel/drakvuf/pull/1192,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/1192#issuecomment-816285655,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1193,2021-04-10T12:55:25Z,2021-04-11T00:16:30Z,2021-04-11T00:16:33Z,MERGED,True,44,12,5,https://github.com/tklengyel,Add LOOKUP_KERNEL and ADDR_SYMBOL trap mode,2,[],https://github.com/tklengyel/drakvuf/pull/1193,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1193,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1193,2021-04-10T12:55:25Z,2021-04-11T00:16:30Z,2021-04-11T00:16:33Z,MERGED,True,44,12,5,https://github.com/tklengyel,Add LOOKUP_KERNEL and ADDR_SYMBOL trap mode,2,[],https://github.com/tklengyel/drakvuf/pull/1193,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/1193#issuecomment-817203884,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1194,2021-04-11T01:23:15Z,2021-04-11T02:44:41Z,2021-04-11T02:44:44Z,MERGED,True,16,20,7,https://github.com/tklengyel,Update plugins to LOOKUP_KERNEL and some misc fixes,4,[],https://github.com/tklengyel/drakvuf/pull/1194,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1194,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1194,2021-04-11T01:23:15Z,2021-04-11T02:44:41Z,2021-04-11T02:44:44Z,MERGED,True,16,20,7,https://github.com/tklengyel,Update plugins to LOOKUP_KERNEL and some misc fixes,4,[],https://github.com/tklengyel/drakvuf/pull/1194,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/1194#issuecomment-817234389,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1196,2021-04-11T21:16:42Z,2021-04-12T01:30:41Z,2021-04-12T01:30:43Z,MERGED,True,165,89,4,https://github.com/tklengyel,Context based view fixes,1,[],https://github.com/tklengyel/drakvuf/pull/1196,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1196,"For idrx guard3 and guard4 we shouldn't be using inject_trap_mem because there the assumption is that it can share space with traps requested by plugins. But the idrx view is only for internal use, so we reduce the complexity of the code by special casing handling of the idrx W trap.
Fixes #1195","For idrx guard3 and guard4 we shouldn't be using inject_trap_mem because there the assumption is that it can share space with traps requested by plugins. But the idrx view is only for internal use, so we reduce the complexity of the code by special casing handling of the idrx W trap.
Fixes #1195",True,{'THUMBS_UP': ['https://github.com/pwnosaur']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1196,2021-04-11T21:16:42Z,2021-04-12T01:30:41Z,2021-04-12T01:30:43Z,MERGED,True,165,89,4,https://github.com/tklengyel,Context based view fixes,1,[],https://github.com/tklengyel/drakvuf/pull/1196,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/1196#issuecomment-817402504,"For idrx guard3 and guard4 we shouldn't be using inject_trap_mem because there the assumption is that it can share space with traps requested by plugins. But the idrx view is only for internal use, so we reduce the complexity of the code by special casing handling of the idrx W trap.
Fixes #1195",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1197,2021-04-12T00:39:56Z,2021-04-12T14:25:16Z,2021-07-23T13:18:27Z,MERGED,True,62,69,13,https://github.com/tklengyel,Add unique trap id to avoid relying on pointers as keys,3,[],https://github.com/tklengyel/drakvuf/pull/1197,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1197,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1198,2021-04-12T11:32:30Z,2021-04-12T14:26:14Z,2021-04-13T06:57:45Z,MERGED,True,2,1,1,https://github.com/skvl,libusermode: fix DLL target traverse error,1,[],https://github.com/tklengyel/drakvuf/pull/1198,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1198,If vmi_translate_sym2v fails while traversing list of targets in internal_perform_hooking then cycle breaks and not all requested hooks are set.,If vmi_translate_sym2v fails while traversing list of targets in internal_perform_hooking then cycle breaks and not all requested hooks are set.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1198,2021-04-12T11:32:30Z,2021-04-12T14:26:14Z,2021-04-13T06:57:45Z,MERGED,True,2,1,1,https://github.com/skvl,libusermode: fix DLL target traverse error,1,[],https://github.com/tklengyel/drakvuf/pull/1198,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1198#issuecomment-817734718,If vmi_translate_sym2v fails while traversing list of targets in internal_perform_hooking then cycle breaks and not all requested hooks are set.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1198,2021-04-12T11:32:30Z,2021-04-12T14:26:14Z,2021-04-13T06:57:45Z,MERGED,True,2,1,1,https://github.com/skvl,libusermode: fix DLL target traverse error,1,[],https://github.com/tklengyel/drakvuf/pull/1198,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1198#issuecomment-817751270,If vmi_translate_sym2v fails while traversing list of targets in internal_perform_hooking then cycle breaks and not all requested hooks are set.,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1198,2021-04-12T11:32:30Z,2021-04-12T14:26:14Z,2021-04-13T06:57:45Z,MERGED,True,2,1,1,https://github.com/skvl,libusermode: fix DLL target traverse error,1,[],https://github.com/tklengyel/drakvuf/pull/1198,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/1198#issuecomment-818295816,If vmi_translate_sym2v fails while traversing list of targets in internal_perform_hooking then cycle breaks and not all requested hooks are set.,@skvl Thanks for spotting this!,True,{'THUMBS_UP': ['https://github.com/skvl']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1199,2021-04-12T12:32:34Z,2021-04-12T14:25:54Z,2021-04-12T14:25:56Z,CLOSED,False,1,1,1,https://github.com/tklengyel,Add explicit 'no' to libhooktest in configure.ac,1,[],https://github.com/tklengyel/drakvuf/pull/1199,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1199,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1200,2021-04-13T00:22:15Z,2021-04-13T01:16:32Z,2021-04-13T01:16:35Z,MERGED,True,42,40,2,https://github.com/tklengyel,Use SIGALRM for timeout instead of thread,1,[],https://github.com/tklengyel/drakvuf/pull/1200,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1200,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1201,2021-04-13T23:08:50Z,2021-04-13T23:08:58Z,2021-04-13T23:09:01Z,MERGED,True,32,1,1,https://github.com/tklengyel,Update covierty github action,1,[],https://github.com/tklengyel/drakvuf/pull/1201,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1201,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1202,2021-04-13T23:39:35Z,2021-04-14T00:02:15Z,2021-04-14T00:02:17Z,MERGED,True,1,0,1,https://github.com/tklengyel,Add missing break in main,1,[],https://github.com/tklengyel/drakvuf/pull/1202,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1202,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1203,2021-04-14T16:59:25Z,2021-04-14T18:01:57Z,2021-04-14T18:01:59Z,MERGED,True,268,13,6,https://github.com/tklengyel,Add XTF test tool,1,[],https://github.com/tklengyel/drakvuf/pull/1203,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1203,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1203,2021-04-14T16:59:25Z,2021-04-14T18:01:57Z,2021-04-14T18:01:59Z,MERGED,True,268,13,6,https://github.com/tklengyel,Add XTF test tool,1,[],https://github.com/tklengyel/drakvuf/pull/1203,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/1203#issuecomment-819696170,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1204,2021-04-15T00:42:18Z,2021-04-15T20:27:52Z,2021-04-15T20:27:55Z,CLOSED,False,62,71,4,https://github.com/tklengyel,Add unique trap id and use g_direct for key management,1,[],https://github.com/tklengyel/drakvuf/pull/1204,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1204,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1205,2021-04-15T05:49:36Z,2021-04-15T06:12:05Z,2021-04-15T06:12:10Z,MERGED,True,69,62,13,https://github.com/tklengyel,"Revert ""Add unique trap id to avoid relying on pointers as keys""",1,[],https://github.com/tklengyel/drakvuf/pull/1205,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1205,"Reverts #1197, regressions","Reverts #1197, regressions",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1206,2021-04-15T11:29:00Z,2021-04-15T11:54:34Z,2021-07-23T13:18:28Z,MERGED,True,10,10,9,https://github.com/tklengyel,Misc fixes,2,[],https://github.com/tklengyel/drakvuf/pull/1206,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1206,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1207,2021-04-15T16:07:46Z,2021-04-15T16:37:37Z,2021-04-15T16:37:37Z,MERGED,True,0,3,1,https://github.com/icedevml,codemon: fix bug with memory dumps,1,[],https://github.com/tklengyel/drakvuf/pull/1207,https://github.com/icedevml,1,https://github.com/tklengyel/drakvuf/pull/1207,"At the moment codemon doesn't make any dumps because setup_dump_context is accessing the access_context_t union in a wrong way.
https://github.com/libvmi/libvmi/blob/582fc95d8c412148114e158c6f090e85f04f335d/libvmi/libvmi.h#L730-L735","At the moment codemon doesn't make any dumps because setup_dump_context is accessing the access_context_t union in a wrong way.
https://github.com/libvmi/libvmi/blob/582fc95d8c412148114e158c6f090e85f04f335d/libvmi/libvmi.h#L730-L735",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1207,2021-04-15T16:07:46Z,2021-04-15T16:37:37Z,2021-04-15T16:37:37Z,MERGED,True,0,3,1,https://github.com/icedevml,codemon: fix bug with memory dumps,1,[],https://github.com/tklengyel/drakvuf/pull/1207,https://github.com/icedevml,2,https://github.com/tklengyel/drakvuf/pull/1207#issuecomment-820549956,"At the moment codemon doesn't make any dumps because setup_dump_context is accessing the access_context_t union in a wrong way.
https://github.com/libvmi/libvmi/blob/582fc95d8c412148114e158c6f090e85f04f335d/libvmi/libvmi.h#L730-L735",/cc @Id3aFly,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1208,2021-04-15T20:27:45Z,2021-04-15T21:08:10Z,2021-04-15T21:08:14Z,MERGED,True,10,10,1,https://github.com/tklengyel,Use g_direct for trap lookup,1,[],https://github.com/tklengyel/drakvuf/pull/1208,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1208,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1209,2021-04-16T22:45:34Z,2021-04-16T23:14:00Z,2021-04-16T23:14:04Z,MERGED,True,10,5,2,https://github.com/tklengyel,Tweak the XTF test,1,[],https://github.com/tklengyel/drakvuf/pull/1209,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1209,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1210,2021-04-17T12:19:10Z,2021-04-17T12:51:47Z,2021-04-17T12:51:48Z,MERGED,True,21,18,1,https://github.com/tklengyel,Clear LibVMI early in shutdown,1,[],https://github.com/tklengyel/drakvuf/pull/1210,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1210,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1210,2021-04-17T12:19:10Z,2021-04-17T12:51:47Z,2021-04-17T12:51:48Z,MERGED,True,21,18,1,https://github.com/tklengyel,Clear LibVMI early in shutdown,1,[],https://github.com/tklengyel/drakvuf/pull/1210,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/1210#issuecomment-821815204,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1211,2021-04-18T01:00:32Z,2021-04-19T00:08:42Z,2021-04-19T00:08:44Z,MERGED,True,69,59,9,https://github.com/tklengyel,Allow initializing OS bits independent of main init,2,[],https://github.com/tklengyel/drakvuf/pull/1211,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1211,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1211,2021-04-18T01:00:32Z,2021-04-19T00:08:42Z,2021-04-19T00:08:44Z,MERGED,True,69,59,9,https://github.com/tklengyel,Allow initializing OS bits independent of main init,2,[],https://github.com/tklengyel/drakvuf/pull/1211,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/1211#issuecomment-822082342,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1212,2021-04-19T00:47:17Z,2021-05-05T14:27:53Z,2021-07-23T13:18:33Z,CLOSED,False,86,0,1,https://github.com/tklengyel,Add lgtm.yml,1,[],https://github.com/tklengyel/drakvuf/pull/1212,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1212,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1213,2021-04-19T08:01:58Z,2021-07-09T10:28:36Z,2021-12-15T09:27:58Z,MERGED,True,165,110,7,https://github.com/skvl,"libuserhook, syscalls: fix possible segmentation fault",6,[],https://github.com/tklengyel/drakvuf/pull/1213,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1213,"I have noticed occasional segmentation faults while traversing int3 hooks due to jump into null page. The relative code is:
        GSList* loop = lists[i];
        while (loop)
        {
            trap_info.trap = (drakvuf_trap_t*)loop->data;
            rsp |= trap_info.trap->cb(drakvuf, &trap_info);
            loop = loop->next;
        }
In GDB I get context:
(gdb) i r
rax            0xb06aef0        184987376
rbx            0x0      0
rcx            0x7ffeb589a870   140731944118384
rdx            0xb05f560        184939872
rsi            0x7ffeb589a918   140731944118552
rdi            0x1040e20        17042976
rbp            0x7ffeb589a9f0   0x7ffeb589a9f0
rsp            0x7ffeb589a8c0   0x7ffeb589a8c0
r8             0x6      6
r9             0x0      0
r10            0xb066fc0        184971200
r11            0x0      0
r12            0x1040e20        17042976
r13            0x1      1
r14            0xb050150        184877392
r15            0x7ffeb589a918   140731944118552
rip            0x4292c0 0x4292c0 <int3_cb+384>
eflags         0x10206  [ PF IF RF ]
cs             0xe033   57395
ss             0xe02b   57387
ds             0x0      0
es             0x0      0
fs             0x0      0
gs             0x0      0
(gdb) p /x *(drakvuf_trap_info_t*)0x7ffeb589a918
$3 = {timestamp = 0x5c0137c4da0d0, vcpu = 0x1, altp2m_idx = 0x0, proc_data = {name = 0xb0629e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, attached_proc_data = {
    name = 0xb0674e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, trap_pa = 0x5f2291d9, regs = 0x7ffeb589aa98, trap = 0xb06aef0, event_uid = 0x6196, {cpuid = 0x0, 
    debug = 0x0}}
(gdb) printf ""%s\n"", 0xb0629e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) printf ""%s\n"", 0xb0674e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) p /x *(drakvuf_trap_t*)0xb06aef0
$4 = {type = 0xb066070, id = 0x1015010, cb = 0x18, data = 0x206d6172676f7250, {name = 0xb069f20, _name = 0xb069f20}, {breakpoint = {lookup_type = 0x12, {pid = 0x12, proc = 0x12, dtb = 0x12}, 
      module = 0x78652e6570796b53, addr_type = 0x790065, {rva = 0x31, addr = 0x31, symbol = 0x31}}, memaccess = {gfn = 0x12, access = 0x12, type = 0x0}, reg = 0x12}, ttl = 0xb060c00, last_ttl_rst = 0x0, 
  ah_cb = 0x0}
One could notice that drakvuf_trap_t is trashed. I believe that this is a sort of use-after-free error. Though I failed to catch the error after building with sanitizers.
After digging into the code I have found two suspicious places. I have noticed with additional debug messages and checks that at least libusermode and syscalls plug-ins remove traps still in a list.
I propose to use common drakvuf_remove_trap instead of manually free the memory.","I have noticed occasional segmentation faults while traversing int3 hooks due to jump into null page. The relative code is:
        GSList* loop = lists[i];
        while (loop)
        {
            trap_info.trap = (drakvuf_trap_t*)loop->data;
            rsp |= trap_info.trap->cb(drakvuf, &trap_info);
            loop = loop->next;
        }
In GDB I get context:
(gdb) i r
rax            0xb06aef0        184987376
rbx            0x0      0
rcx            0x7ffeb589a870   140731944118384
rdx            0xb05f560        184939872
rsi            0x7ffeb589a918   140731944118552
rdi            0x1040e20        17042976
rbp            0x7ffeb589a9f0   0x7ffeb589a9f0
rsp            0x7ffeb589a8c0   0x7ffeb589a8c0
r8             0x6      6
r9             0x0      0
r10            0xb066fc0        184971200
r11            0x0      0
r12            0x1040e20        17042976
r13            0x1      1
r14            0xb050150        184877392
r15            0x7ffeb589a918   140731944118552
rip            0x4292c0 0x4292c0 <int3_cb+384>
eflags         0x10206  [ PF IF RF ]
cs             0xe033   57395
ss             0xe02b   57387
ds             0x0      0
es             0x0      0
fs             0x0      0
gs             0x0      0
(gdb) p /x *(drakvuf_trap_info_t*)0x7ffeb589a918
$3 = {timestamp = 0x5c0137c4da0d0, vcpu = 0x1, altp2m_idx = 0x0, proc_data = {name = 0xb0629e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, attached_proc_data = {
    name = 0xb0674e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, trap_pa = 0x5f2291d9, regs = 0x7ffeb589aa98, trap = 0xb06aef0, event_uid = 0x6196, {cpuid = 0x0, 
    debug = 0x0}}
(gdb) printf ""%s\n"", 0xb0629e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) printf ""%s\n"", 0xb0674e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) p /x *(drakvuf_trap_t*)0xb06aef0
$4 = {type = 0xb066070, id = 0x1015010, cb = 0x18, data = 0x206d6172676f7250, {name = 0xb069f20, _name = 0xb069f20}, {breakpoint = {lookup_type = 0x12, {pid = 0x12, proc = 0x12, dtb = 0x12}, 
      module = 0x78652e6570796b53, addr_type = 0x790065, {rva = 0x31, addr = 0x31, symbol = 0x31}}, memaccess = {gfn = 0x12, access = 0x12, type = 0x0}, reg = 0x12}, ttl = 0xb060c00, last_ttl_rst = 0x0, 
  ah_cb = 0x0}
One could notice that drakvuf_trap_t is trashed. I believe that this is a sort of use-after-free error. Though I failed to catch the error after building with sanitizers.
After digging into the code I have found two suspicious places. I have noticed with additional debug messages and checks that at least libusermode and syscalls plug-ins remove traps still in a list.
I propose to use common drakvuf_remove_trap instead of manually free the memory.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1213,2021-04-19T08:01:58Z,2021-07-09T10:28:36Z,2021-12-15T09:27:58Z,MERGED,True,165,110,7,https://github.com/skvl,"libuserhook, syscalls: fix possible segmentation fault",6,[],https://github.com/tklengyel/drakvuf/pull/1213,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1213#issuecomment-822261575,"I have noticed occasional segmentation faults while traversing int3 hooks due to jump into null page. The relative code is:
        GSList* loop = lists[i];
        while (loop)
        {
            trap_info.trap = (drakvuf_trap_t*)loop->data;
            rsp |= trap_info.trap->cb(drakvuf, &trap_info);
            loop = loop->next;
        }
In GDB I get context:
(gdb) i r
rax            0xb06aef0        184987376
rbx            0x0      0
rcx            0x7ffeb589a870   140731944118384
rdx            0xb05f560        184939872
rsi            0x7ffeb589a918   140731944118552
rdi            0x1040e20        17042976
rbp            0x7ffeb589a9f0   0x7ffeb589a9f0
rsp            0x7ffeb589a8c0   0x7ffeb589a8c0
r8             0x6      6
r9             0x0      0
r10            0xb066fc0        184971200
r11            0x0      0
r12            0x1040e20        17042976
r13            0x1      1
r14            0xb050150        184877392
r15            0x7ffeb589a918   140731944118552
rip            0x4292c0 0x4292c0 <int3_cb+384>
eflags         0x10206  [ PF IF RF ]
cs             0xe033   57395
ss             0xe02b   57387
ds             0x0      0
es             0x0      0
fs             0x0      0
gs             0x0      0
(gdb) p /x *(drakvuf_trap_info_t*)0x7ffeb589a918
$3 = {timestamp = 0x5c0137c4da0d0, vcpu = 0x1, altp2m_idx = 0x0, proc_data = {name = 0xb0629e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, attached_proc_data = {
    name = 0xb0674e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, trap_pa = 0x5f2291d9, regs = 0x7ffeb589aa98, trap = 0xb06aef0, event_uid = 0x6196, {cpuid = 0x0, 
    debug = 0x0}}
(gdb) printf ""%s\n"", 0xb0629e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) printf ""%s\n"", 0xb0674e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) p /x *(drakvuf_trap_t*)0xb06aef0
$4 = {type = 0xb066070, id = 0x1015010, cb = 0x18, data = 0x206d6172676f7250, {name = 0xb069f20, _name = 0xb069f20}, {breakpoint = {lookup_type = 0x12, {pid = 0x12, proc = 0x12, dtb = 0x12}, 
      module = 0x78652e6570796b53, addr_type = 0x790065, {rva = 0x31, addr = 0x31, symbol = 0x31}}, memaccess = {gfn = 0x12, access = 0x12, type = 0x0}, reg = 0x12}, ttl = 0xb060c00, last_ttl_rst = 0x0, 
  ah_cb = 0x0}
One could notice that drakvuf_trap_t is trashed. I believe that this is a sort of use-after-free error. Though I failed to catch the error after building with sanitizers.
After digging into the code I have found two suspicious places. I have noticed with additional debug messages and checks that at least libusermode and syscalls plug-ins remove traps still in a list.
I propose to use common drakvuf_remove_trap instead of manually free the memory.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1213,2021-04-19T08:01:58Z,2021-07-09T10:28:36Z,2021-12-15T09:27:58Z,MERGED,True,165,110,7,https://github.com/skvl,"libuserhook, syscalls: fix possible segmentation fault",6,[],https://github.com/tklengyel/drakvuf/pull/1213,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1213#issuecomment-822389282,"I have noticed occasional segmentation faults while traversing int3 hooks due to jump into null page. The relative code is:
        GSList* loop = lists[i];
        while (loop)
        {
            trap_info.trap = (drakvuf_trap_t*)loop->data;
            rsp |= trap_info.trap->cb(drakvuf, &trap_info);
            loop = loop->next;
        }
In GDB I get context:
(gdb) i r
rax            0xb06aef0        184987376
rbx            0x0      0
rcx            0x7ffeb589a870   140731944118384
rdx            0xb05f560        184939872
rsi            0x7ffeb589a918   140731944118552
rdi            0x1040e20        17042976
rbp            0x7ffeb589a9f0   0x7ffeb589a9f0
rsp            0x7ffeb589a8c0   0x7ffeb589a8c0
r8             0x6      6
r9             0x0      0
r10            0xb066fc0        184971200
r11            0x0      0
r12            0x1040e20        17042976
r13            0x1      1
r14            0xb050150        184877392
r15            0x7ffeb589a918   140731944118552
rip            0x4292c0 0x4292c0 <int3_cb+384>
eflags         0x10206  [ PF IF RF ]
cs             0xe033   57395
ss             0xe02b   57387
ds             0x0      0
es             0x0      0
fs             0x0      0
gs             0x0      0
(gdb) p /x *(drakvuf_trap_info_t*)0x7ffeb589a918
$3 = {timestamp = 0x5c0137c4da0d0, vcpu = 0x1, altp2m_idx = 0x0, proc_data = {name = 0xb0629e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, attached_proc_data = {
    name = 0xb0674e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, trap_pa = 0x5f2291d9, regs = 0x7ffeb589aa98, trap = 0xb06aef0, event_uid = 0x6196, {cpuid = 0x0, 
    debug = 0x0}}
(gdb) printf ""%s\n"", 0xb0629e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) printf ""%s\n"", 0xb0674e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) p /x *(drakvuf_trap_t*)0xb06aef0
$4 = {type = 0xb066070, id = 0x1015010, cb = 0x18, data = 0x206d6172676f7250, {name = 0xb069f20, _name = 0xb069f20}, {breakpoint = {lookup_type = 0x12, {pid = 0x12, proc = 0x12, dtb = 0x12}, 
      module = 0x78652e6570796b53, addr_type = 0x790065, {rva = 0x31, addr = 0x31, symbol = 0x31}}, memaccess = {gfn = 0x12, access = 0x12, type = 0x0}, reg = 0x12}, ttl = 0xb060c00, last_ttl_rst = 0x0, 
  ah_cb = 0x0}
One could notice that drakvuf_trap_t is trashed. I believe that this is a sort of use-after-free error. Though I failed to catch the error after building with sanitizers.
After digging into the code I have found two suspicious places. I have noticed with additional debug messages and checks that at least libusermode and syscalls plug-ins remove traps still in a list.
I propose to use common drakvuf_remove_trap instead of manually free the memory.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1213,2021-04-19T08:01:58Z,2021-07-09T10:28:36Z,2021-12-15T09:27:58Z,MERGED,True,165,110,7,https://github.com/skvl,"libuserhook, syscalls: fix possible segmentation fault",6,[],https://github.com/tklengyel/drakvuf/pull/1213,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1213#issuecomment-822406622,"I have noticed occasional segmentation faults while traversing int3 hooks due to jump into null page. The relative code is:
        GSList* loop = lists[i];
        while (loop)
        {
            trap_info.trap = (drakvuf_trap_t*)loop->data;
            rsp |= trap_info.trap->cb(drakvuf, &trap_info);
            loop = loop->next;
        }
In GDB I get context:
(gdb) i r
rax            0xb06aef0        184987376
rbx            0x0      0
rcx            0x7ffeb589a870   140731944118384
rdx            0xb05f560        184939872
rsi            0x7ffeb589a918   140731944118552
rdi            0x1040e20        17042976
rbp            0x7ffeb589a9f0   0x7ffeb589a9f0
rsp            0x7ffeb589a8c0   0x7ffeb589a8c0
r8             0x6      6
r9             0x0      0
r10            0xb066fc0        184971200
r11            0x0      0
r12            0x1040e20        17042976
r13            0x1      1
r14            0xb050150        184877392
r15            0x7ffeb589a918   140731944118552
rip            0x4292c0 0x4292c0 <int3_cb+384>
eflags         0x10206  [ PF IF RF ]
cs             0xe033   57395
ss             0xe02b   57387
ds             0x0      0
es             0x0      0
fs             0x0      0
gs             0x0      0
(gdb) p /x *(drakvuf_trap_info_t*)0x7ffeb589a918
$3 = {timestamp = 0x5c0137c4da0d0, vcpu = 0x1, altp2m_idx = 0x0, proc_data = {name = 0xb0629e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, attached_proc_data = {
    name = 0xb0674e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, trap_pa = 0x5f2291d9, regs = 0x7ffeb589aa98, trap = 0xb06aef0, event_uid = 0x6196, {cpuid = 0x0, 
    debug = 0x0}}
(gdb) printf ""%s\n"", 0xb0629e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) printf ""%s\n"", 0xb0674e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) p /x *(drakvuf_trap_t*)0xb06aef0
$4 = {type = 0xb066070, id = 0x1015010, cb = 0x18, data = 0x206d6172676f7250, {name = 0xb069f20, _name = 0xb069f20}, {breakpoint = {lookup_type = 0x12, {pid = 0x12, proc = 0x12, dtb = 0x12}, 
      module = 0x78652e6570796b53, addr_type = 0x790065, {rva = 0x31, addr = 0x31, symbol = 0x31}}, memaccess = {gfn = 0x12, access = 0x12, type = 0x0}, reg = 0x12}, ttl = 0xb060c00, last_ttl_rst = 0x0, 
  ah_cb = 0x0}
One could notice that drakvuf_trap_t is trashed. I believe that this is a sort of use-after-free error. Though I failed to catch the error after building with sanitizers.
After digging into the code I have found two suspicious places. I have noticed with additional debug messages and checks that at least libusermode and syscalls plug-ins remove traps still in a list.
I propose to use common drakvuf_remove_trap instead of manually free the memory.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1213,2021-04-19T08:01:58Z,2021-07-09T10:28:36Z,2021-12-15T09:27:58Z,MERGED,True,165,110,7,https://github.com/skvl,"libuserhook, syscalls: fix possible segmentation fault",6,[],https://github.com/tklengyel/drakvuf/pull/1213,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1213#issuecomment-822427802,"I have noticed occasional segmentation faults while traversing int3 hooks due to jump into null page. The relative code is:
        GSList* loop = lists[i];
        while (loop)
        {
            trap_info.trap = (drakvuf_trap_t*)loop->data;
            rsp |= trap_info.trap->cb(drakvuf, &trap_info);
            loop = loop->next;
        }
In GDB I get context:
(gdb) i r
rax            0xb06aef0        184987376
rbx            0x0      0
rcx            0x7ffeb589a870   140731944118384
rdx            0xb05f560        184939872
rsi            0x7ffeb589a918   140731944118552
rdi            0x1040e20        17042976
rbp            0x7ffeb589a9f0   0x7ffeb589a9f0
rsp            0x7ffeb589a8c0   0x7ffeb589a8c0
r8             0x6      6
r9             0x0      0
r10            0xb066fc0        184971200
r11            0x0      0
r12            0x1040e20        17042976
r13            0x1      1
r14            0xb050150        184877392
r15            0x7ffeb589a918   140731944118552
rip            0x4292c0 0x4292c0 <int3_cb+384>
eflags         0x10206  [ PF IF RF ]
cs             0xe033   57395
ss             0xe02b   57387
ds             0x0      0
es             0x0      0
fs             0x0      0
gs             0x0      0
(gdb) p /x *(drakvuf_trap_info_t*)0x7ffeb589a918
$3 = {timestamp = 0x5c0137c4da0d0, vcpu = 0x1, altp2m_idx = 0x0, proc_data = {name = 0xb0629e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, attached_proc_data = {
    name = 0xb0674e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, trap_pa = 0x5f2291d9, regs = 0x7ffeb589aa98, trap = 0xb06aef0, event_uid = 0x6196, {cpuid = 0x0, 
    debug = 0x0}}
(gdb) printf ""%s\n"", 0xb0629e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) printf ""%s\n"", 0xb0674e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) p /x *(drakvuf_trap_t*)0xb06aef0
$4 = {type = 0xb066070, id = 0x1015010, cb = 0x18, data = 0x206d6172676f7250, {name = 0xb069f20, _name = 0xb069f20}, {breakpoint = {lookup_type = 0x12, {pid = 0x12, proc = 0x12, dtb = 0x12}, 
      module = 0x78652e6570796b53, addr_type = 0x790065, {rva = 0x31, addr = 0x31, symbol = 0x31}}, memaccess = {gfn = 0x12, access = 0x12, type = 0x0}, reg = 0x12}, ttl = 0xb060c00, last_ttl_rst = 0x0, 
  ah_cb = 0x0}
One could notice that drakvuf_trap_t is trashed. I believe that this is a sort of use-after-free error. Though I failed to catch the error after building with sanitizers.
After digging into the code I have found two suspicious places. I have noticed with additional debug messages and checks that at least libusermode and syscalls plug-ins remove traps still in a list.
I propose to use common drakvuf_remove_trap instead of manually free the memory.",So this is now causing Valgrind to spot some weird issue (use-after-free) that I can't really make sense of.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1213,2021-04-19T08:01:58Z,2021-07-09T10:28:36Z,2021-12-15T09:27:58Z,MERGED,True,165,110,7,https://github.com/skvl,"libuserhook, syscalls: fix possible segmentation fault",6,[],https://github.com/tklengyel/drakvuf/pull/1213,https://github.com/skvl,6,https://github.com/tklengyel/drakvuf/pull/1213#issuecomment-822428219,"I have noticed occasional segmentation faults while traversing int3 hooks due to jump into null page. The relative code is:
        GSList* loop = lists[i];
        while (loop)
        {
            trap_info.trap = (drakvuf_trap_t*)loop->data;
            rsp |= trap_info.trap->cb(drakvuf, &trap_info);
            loop = loop->next;
        }
In GDB I get context:
(gdb) i r
rax            0xb06aef0        184987376
rbx            0x0      0
rcx            0x7ffeb589a870   140731944118384
rdx            0xb05f560        184939872
rsi            0x7ffeb589a918   140731944118552
rdi            0x1040e20        17042976
rbp            0x7ffeb589a9f0   0x7ffeb589a9f0
rsp            0x7ffeb589a8c0   0x7ffeb589a8c0
r8             0x6      6
r9             0x0      0
r10            0xb066fc0        184971200
r11            0x0      0
r12            0x1040e20        17042976
r13            0x1      1
r14            0xb050150        184877392
r15            0x7ffeb589a918   140731944118552
rip            0x4292c0 0x4292c0 <int3_cb+384>
eflags         0x10206  [ PF IF RF ]
cs             0xe033   57395
ss             0xe02b   57387
ds             0x0      0
es             0x0      0
fs             0x0      0
gs             0x0      0
(gdb) p /x *(drakvuf_trap_info_t*)0x7ffeb589a918
$3 = {timestamp = 0x5c0137c4da0d0, vcpu = 0x1, altp2m_idx = 0x0, proc_data = {name = 0xb0629e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, attached_proc_data = {
    name = 0xb0674e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, trap_pa = 0x5f2291d9, regs = 0x7ffeb589aa98, trap = 0xb06aef0, event_uid = 0x6196, {cpuid = 0x0, 
    debug = 0x0}}
(gdb) printf ""%s\n"", 0xb0629e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) printf ""%s\n"", 0xb0674e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) p /x *(drakvuf_trap_t*)0xb06aef0
$4 = {type = 0xb066070, id = 0x1015010, cb = 0x18, data = 0x206d6172676f7250, {name = 0xb069f20, _name = 0xb069f20}, {breakpoint = {lookup_type = 0x12, {pid = 0x12, proc = 0x12, dtb = 0x12}, 
      module = 0x78652e6570796b53, addr_type = 0x790065, {rva = 0x31, addr = 0x31, symbol = 0x31}}, memaccess = {gfn = 0x12, access = 0x12, type = 0x0}, reg = 0x12}, ttl = 0xb060c00, last_ttl_rst = 0x0, 
  ah_cb = 0x0}
One could notice that drakvuf_trap_t is trashed. I believe that this is a sort of use-after-free error. Though I failed to catch the error after building with sanitizers.
After digging into the code I have found two suspicious places. I have noticed with additional debug messages and checks that at least libusermode and syscalls plug-ins remove traps still in a list.
I propose to use common drakvuf_remove_trap instead of manually free the memory.",Though I think the PR not the cause of the error. It just spots out some error.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1213,2021-04-19T08:01:58Z,2021-07-09T10:28:36Z,2021-12-15T09:27:58Z,MERGED,True,165,110,7,https://github.com/skvl,"libuserhook, syscalls: fix possible segmentation fault",6,[],https://github.com/tklengyel/drakvuf/pull/1213,https://github.com/skvl,7,https://github.com/tklengyel/drakvuf/pull/1213#issuecomment-822428630,"I have noticed occasional segmentation faults while traversing int3 hooks due to jump into null page. The relative code is:
        GSList* loop = lists[i];
        while (loop)
        {
            trap_info.trap = (drakvuf_trap_t*)loop->data;
            rsp |= trap_info.trap->cb(drakvuf, &trap_info);
            loop = loop->next;
        }
In GDB I get context:
(gdb) i r
rax            0xb06aef0        184987376
rbx            0x0      0
rcx            0x7ffeb589a870   140731944118384
rdx            0xb05f560        184939872
rsi            0x7ffeb589a918   140731944118552
rdi            0x1040e20        17042976
rbp            0x7ffeb589a9f0   0x7ffeb589a9f0
rsp            0x7ffeb589a8c0   0x7ffeb589a8c0
r8             0x6      6
r9             0x0      0
r10            0xb066fc0        184971200
r11            0x0      0
r12            0x1040e20        17042976
r13            0x1      1
r14            0xb050150        184877392
r15            0x7ffeb589a918   140731944118552
rip            0x4292c0 0x4292c0 <int3_cb+384>
eflags         0x10206  [ PF IF RF ]
cs             0xe033   57395
ss             0xe02b   57387
ds             0x0      0
es             0x0      0
fs             0x0      0
gs             0x0      0
(gdb) p /x *(drakvuf_trap_info_t*)0x7ffeb589a918
$3 = {timestamp = 0x5c0137c4da0d0, vcpu = 0x1, altp2m_idx = 0x0, proc_data = {name = 0xb0629e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, attached_proc_data = {
    name = 0xb0674e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, trap_pa = 0x5f2291d9, regs = 0x7ffeb589aa98, trap = 0xb06aef0, event_uid = 0x6196, {cpuid = 0x0, 
    debug = 0x0}}
(gdb) printf ""%s\n"", 0xb0629e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) printf ""%s\n"", 0xb0674e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) p /x *(drakvuf_trap_t*)0xb06aef0
$4 = {type = 0xb066070, id = 0x1015010, cb = 0x18, data = 0x206d6172676f7250, {name = 0xb069f20, _name = 0xb069f20}, {breakpoint = {lookup_type = 0x12, {pid = 0x12, proc = 0x12, dtb = 0x12}, 
      module = 0x78652e6570796b53, addr_type = 0x790065, {rva = 0x31, addr = 0x31, symbol = 0x31}}, memaccess = {gfn = 0x12, access = 0x12, type = 0x0}, reg = 0x12}, ttl = 0xb060c00, last_ttl_rst = 0x0, 
  ah_cb = 0x0}
One could notice that drakvuf_trap_t is trashed. I believe that this is a sort of use-after-free error. Though I failed to catch the error after building with sanitizers.
After digging into the code I have found two suspicious places. I have noticed with additional debug messages and checks that at least libusermode and syscalls plug-ins remove traps still in a list.
I propose to use common drakvuf_remove_trap instead of manually free the memory.",It's very interesting why only x86 affected? I didn't test the particular system.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1213,2021-04-19T08:01:58Z,2021-07-09T10:28:36Z,2021-12-15T09:27:58Z,MERGED,True,165,110,7,https://github.com/skvl,"libuserhook, syscalls: fix possible segmentation fault",6,[],https://github.com/tklengyel/drakvuf/pull/1213,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/1213#issuecomment-822429927,"I have noticed occasional segmentation faults while traversing int3 hooks due to jump into null page. The relative code is:
        GSList* loop = lists[i];
        while (loop)
        {
            trap_info.trap = (drakvuf_trap_t*)loop->data;
            rsp |= trap_info.trap->cb(drakvuf, &trap_info);
            loop = loop->next;
        }
In GDB I get context:
(gdb) i r
rax            0xb06aef0        184987376
rbx            0x0      0
rcx            0x7ffeb589a870   140731944118384
rdx            0xb05f560        184939872
rsi            0x7ffeb589a918   140731944118552
rdi            0x1040e20        17042976
rbp            0x7ffeb589a9f0   0x7ffeb589a9f0
rsp            0x7ffeb589a8c0   0x7ffeb589a8c0
r8             0x6      6
r9             0x0      0
r10            0xb066fc0        184971200
r11            0x0      0
r12            0x1040e20        17042976
r13            0x1      1
r14            0xb050150        184877392
r15            0x7ffeb589a918   140731944118552
rip            0x4292c0 0x4292c0 <int3_cb+384>
eflags         0x10206  [ PF IF RF ]
cs             0xe033   57395
ss             0xe02b   57387
ds             0x0      0
es             0x0      0
fs             0x0      0
gs             0x0      0
(gdb) p /x *(drakvuf_trap_info_t*)0x7ffeb589a918
$3 = {timestamp = 0x5c0137c4da0d0, vcpu = 0x1, altp2m_idx = 0x0, proc_data = {name = 0xb0629e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, attached_proc_data = {
    name = 0xb0674e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, trap_pa = 0x5f2291d9, regs = 0x7ffeb589aa98, trap = 0xb06aef0, event_uid = 0x6196, {cpuid = 0x0, 
    debug = 0x0}}
(gdb) printf ""%s\n"", 0xb0629e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) printf ""%s\n"", 0xb0674e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) p /x *(drakvuf_trap_t*)0xb06aef0
$4 = {type = 0xb066070, id = 0x1015010, cb = 0x18, data = 0x206d6172676f7250, {name = 0xb069f20, _name = 0xb069f20}, {breakpoint = {lookup_type = 0x12, {pid = 0x12, proc = 0x12, dtb = 0x12}, 
      module = 0x78652e6570796b53, addr_type = 0x790065, {rva = 0x31, addr = 0x31, symbol = 0x31}}, memaccess = {gfn = 0x12, access = 0x12, type = 0x0}, reg = 0x12}, ttl = 0xb060c00, last_ttl_rst = 0x0, 
  ah_cb = 0x0}
One could notice that drakvuf_trap_t is trashed. I believe that this is a sort of use-after-free error. Though I failed to catch the error after building with sanitizers.
After digging into the code I have found two suspicious places. I have noticed with additional debug messages and checks that at least libusermode and syscalls plug-ins remove traps still in a list.
I propose to use common drakvuf_remove_trap instead of manually free the memory.","Right, likely a preexisting bug pops out with Valgrind now.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1213,2021-04-19T08:01:58Z,2021-07-09T10:28:36Z,2021-12-15T09:27:58Z,MERGED,True,165,110,7,https://github.com/skvl,"libuserhook, syscalls: fix possible segmentation fault",6,[],https://github.com/tklengyel/drakvuf/pull/1213,https://github.com/skvl,9,https://github.com/tklengyel/drakvuf/pull/1213#issuecomment-822436691,"I have noticed occasional segmentation faults while traversing int3 hooks due to jump into null page. The relative code is:
        GSList* loop = lists[i];
        while (loop)
        {
            trap_info.trap = (drakvuf_trap_t*)loop->data;
            rsp |= trap_info.trap->cb(drakvuf, &trap_info);
            loop = loop->next;
        }
In GDB I get context:
(gdb) i r
rax            0xb06aef0        184987376
rbx            0x0      0
rcx            0x7ffeb589a870   140731944118384
rdx            0xb05f560        184939872
rsi            0x7ffeb589a918   140731944118552
rdi            0x1040e20        17042976
rbp            0x7ffeb589a9f0   0x7ffeb589a9f0
rsp            0x7ffeb589a8c0   0x7ffeb589a8c0
r8             0x6      6
r9             0x0      0
r10            0xb066fc0        184971200
r11            0x0      0
r12            0x1040e20        17042976
r13            0x1      1
r14            0xb050150        184877392
r15            0x7ffeb589a918   140731944118552
rip            0x4292c0 0x4292c0 <int3_cb+384>
eflags         0x10206  [ PF IF RF ]
cs             0xe033   57395
ss             0xe02b   57387
ds             0x0      0
es             0x0      0
fs             0x0      0
gs             0x0      0
(gdb) p /x *(drakvuf_trap_info_t*)0x7ffeb589a918
$3 = {timestamp = 0x5c0137c4da0d0, vcpu = 0x1, altp2m_idx = 0x0, proc_data = {name = 0xb0629e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, attached_proc_data = {
    name = 0xb0674e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, trap_pa = 0x5f2291d9, regs = 0x7ffeb589aa98, trap = 0xb06aef0, event_uid = 0x6196, {cpuid = 0x0, 
    debug = 0x0}}
(gdb) printf ""%s\n"", 0xb0629e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) printf ""%s\n"", 0xb0674e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) p /x *(drakvuf_trap_t*)0xb06aef0
$4 = {type = 0xb066070, id = 0x1015010, cb = 0x18, data = 0x206d6172676f7250, {name = 0xb069f20, _name = 0xb069f20}, {breakpoint = {lookup_type = 0x12, {pid = 0x12, proc = 0x12, dtb = 0x12}, 
      module = 0x78652e6570796b53, addr_type = 0x790065, {rva = 0x31, addr = 0x31, symbol = 0x31}}, memaccess = {gfn = 0x12, access = 0x12, type = 0x0}, reg = 0x12}, ttl = 0xb060c00, last_ttl_rst = 0x0, 
  ah_cb = 0x0}
One could notice that drakvuf_trap_t is trashed. I believe that this is a sort of use-after-free error. Though I failed to catch the error after building with sanitizers.
After digging into the code I have found two suspicious places. I have noticed with additional debug messages and checks that at least libusermode and syscalls plug-ins remove traps still in a list.
I propose to use common drakvuf_remove_trap instead of manually free the memory.",I can catch the same error with ASan. I would try to explorer it.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1213,2021-04-19T08:01:58Z,2021-07-09T10:28:36Z,2021-12-15T09:27:58Z,MERGED,True,165,110,7,https://github.com/skvl,"libuserhook, syscalls: fix possible segmentation fault",6,[],https://github.com/tklengyel/drakvuf/pull/1213,https://github.com/skvl,10,https://github.com/tklengyel/drakvuf/pull/1213#issuecomment-822541751,"I have noticed occasional segmentation faults while traversing int3 hooks due to jump into null page. The relative code is:
        GSList* loop = lists[i];
        while (loop)
        {
            trap_info.trap = (drakvuf_trap_t*)loop->data;
            rsp |= trap_info.trap->cb(drakvuf, &trap_info);
            loop = loop->next;
        }
In GDB I get context:
(gdb) i r
rax            0xb06aef0        184987376
rbx            0x0      0
rcx            0x7ffeb589a870   140731944118384
rdx            0xb05f560        184939872
rsi            0x7ffeb589a918   140731944118552
rdi            0x1040e20        17042976
rbp            0x7ffeb589a9f0   0x7ffeb589a9f0
rsp            0x7ffeb589a8c0   0x7ffeb589a8c0
r8             0x6      6
r9             0x0      0
r10            0xb066fc0        184971200
r11            0x0      0
r12            0x1040e20        17042976
r13            0x1      1
r14            0xb050150        184877392
r15            0x7ffeb589a918   140731944118552
rip            0x4292c0 0x4292c0 <int3_cb+384>
eflags         0x10206  [ PF IF RF ]
cs             0xe033   57395
ss             0xe02b   57387
ds             0x0      0
es             0x0      0
fs             0x0      0
gs             0x0      0
(gdb) p /x *(drakvuf_trap_info_t*)0x7ffeb589a918
$3 = {timestamp = 0x5c0137c4da0d0, vcpu = 0x1, altp2m_idx = 0x0, proc_data = {name = 0xb0629e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, attached_proc_data = {
    name = 0xb0674e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, trap_pa = 0x5f2291d9, regs = 0x7ffeb589aa98, trap = 0xb06aef0, event_uid = 0x6196, {cpuid = 0x0, 
    debug = 0x0}}
(gdb) printf ""%s\n"", 0xb0629e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) printf ""%s\n"", 0xb0674e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) p /x *(drakvuf_trap_t*)0xb06aef0
$4 = {type = 0xb066070, id = 0x1015010, cb = 0x18, data = 0x206d6172676f7250, {name = 0xb069f20, _name = 0xb069f20}, {breakpoint = {lookup_type = 0x12, {pid = 0x12, proc = 0x12, dtb = 0x12}, 
      module = 0x78652e6570796b53, addr_type = 0x790065, {rva = 0x31, addr = 0x31, symbol = 0x31}}, memaccess = {gfn = 0x12, access = 0x12, type = 0x0}, reg = 0x12}, ttl = 0xb060c00, last_ttl_rst = 0x0, 
  ah_cb = 0x0}
One could notice that drakvuf_trap_t is trashed. I believe that this is a sort of use-after-free error. Though I failed to catch the error after building with sanitizers.
After digging into the code I have found two suspicious places. I have noticed with additional debug messages and checks that at least libusermode and syscalls plug-ins remove traps still in a list.
I propose to use common drakvuf_remove_trap instead of manually free the memory.",The error is not stable. I have reproduced it once. Unfortunately without symbols in ASan stack trace (the machine misconfiguration) or gdb. After that I failed to reproduce it.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1213,2021-04-19T08:01:58Z,2021-07-09T10:28:36Z,2021-12-15T09:27:58Z,MERGED,True,165,110,7,https://github.com/skvl,"libuserhook, syscalls: fix possible segmentation fault",6,[],https://github.com/tklengyel/drakvuf/pull/1213,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/1213#issuecomment-828399869,"I have noticed occasional segmentation faults while traversing int3 hooks due to jump into null page. The relative code is:
        GSList* loop = lists[i];
        while (loop)
        {
            trap_info.trap = (drakvuf_trap_t*)loop->data;
            rsp |= trap_info.trap->cb(drakvuf, &trap_info);
            loop = loop->next;
        }
In GDB I get context:
(gdb) i r
rax            0xb06aef0        184987376
rbx            0x0      0
rcx            0x7ffeb589a870   140731944118384
rdx            0xb05f560        184939872
rsi            0x7ffeb589a918   140731944118552
rdi            0x1040e20        17042976
rbp            0x7ffeb589a9f0   0x7ffeb589a9f0
rsp            0x7ffeb589a8c0   0x7ffeb589a8c0
r8             0x6      6
r9             0x0      0
r10            0xb066fc0        184971200
r11            0x0      0
r12            0x1040e20        17042976
r13            0x1      1
r14            0xb050150        184877392
r15            0x7ffeb589a918   140731944118552
rip            0x4292c0 0x4292c0 <int3_cb+384>
eflags         0x10206  [ PF IF RF ]
cs             0xe033   57395
ss             0xe02b   57387
ds             0x0      0
es             0x0      0
fs             0x0      0
gs             0x0      0
(gdb) p /x *(drakvuf_trap_info_t*)0x7ffeb589a918
$3 = {timestamp = 0x5c0137c4da0d0, vcpu = 0x1, altp2m_idx = 0x0, proc_data = {name = 0xb0629e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, attached_proc_data = {
    name = 0xb0674e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, trap_pa = 0x5f2291d9, regs = 0x7ffeb589aa98, trap = 0xb06aef0, event_uid = 0x6196, {cpuid = 0x0, 
    debug = 0x0}}
(gdb) printf ""%s\n"", 0xb0629e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) printf ""%s\n"", 0xb0674e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) p /x *(drakvuf_trap_t*)0xb06aef0
$4 = {type = 0xb066070, id = 0x1015010, cb = 0x18, data = 0x206d6172676f7250, {name = 0xb069f20, _name = 0xb069f20}, {breakpoint = {lookup_type = 0x12, {pid = 0x12, proc = 0x12, dtb = 0x12}, 
      module = 0x78652e6570796b53, addr_type = 0x790065, {rva = 0x31, addr = 0x31, symbol = 0x31}}, memaccess = {gfn = 0x12, access = 0x12, type = 0x0}, reg = 0x12}, ttl = 0xb060c00, last_ttl_rst = 0x0, 
  ah_cb = 0x0}
One could notice that drakvuf_trap_t is trashed. I believe that this is a sort of use-after-free error. Though I failed to catch the error after building with sanitizers.
After digging into the code I have found two suspicious places. I have noticed with additional debug messages and checks that at least libusermode and syscalls plug-ins remove traps still in a list.
I propose to use common drakvuf_remove_trap instead of manually free the memory.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1213,2021-04-19T08:01:58Z,2021-07-09T10:28:36Z,2021-12-15T09:27:58Z,MERGED,True,165,110,7,https://github.com/skvl,"libuserhook, syscalls: fix possible segmentation fault",6,[],https://github.com/tklengyel/drakvuf/pull/1213,https://github.com/chivay,12,https://github.com/tklengyel/drakvuf/pull/1213#issuecomment-828405919,"I have noticed occasional segmentation faults while traversing int3 hooks due to jump into null page. The relative code is:
        GSList* loop = lists[i];
        while (loop)
        {
            trap_info.trap = (drakvuf_trap_t*)loop->data;
            rsp |= trap_info.trap->cb(drakvuf, &trap_info);
            loop = loop->next;
        }
In GDB I get context:
(gdb) i r
rax            0xb06aef0        184987376
rbx            0x0      0
rcx            0x7ffeb589a870   140731944118384
rdx            0xb05f560        184939872
rsi            0x7ffeb589a918   140731944118552
rdi            0x1040e20        17042976
rbp            0x7ffeb589a9f0   0x7ffeb589a9f0
rsp            0x7ffeb589a8c0   0x7ffeb589a8c0
r8             0x6      6
r9             0x0      0
r10            0xb066fc0        184971200
r11            0x0      0
r12            0x1040e20        17042976
r13            0x1      1
r14            0xb050150        184877392
r15            0x7ffeb589a918   140731944118552
rip            0x4292c0 0x4292c0 <int3_cb+384>
eflags         0x10206  [ PF IF RF ]
cs             0xe033   57395
ss             0xe02b   57387
ds             0x0      0
es             0x0      0
fs             0x0      0
gs             0x0      0
(gdb) p /x *(drakvuf_trap_info_t*)0x7ffeb589a918
$3 = {timestamp = 0x5c0137c4da0d0, vcpu = 0x1, altp2m_idx = 0x0, proc_data = {name = 0xb0629e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, attached_proc_data = {
    name = 0xb0674e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, trap_pa = 0x5f2291d9, regs = 0x7ffeb589aa98, trap = 0xb06aef0, event_uid = 0x6196, {cpuid = 0x0, 
    debug = 0x0}}
(gdb) printf ""%s\n"", 0xb0629e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) printf ""%s\n"", 0xb0674e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) p /x *(drakvuf_trap_t*)0xb06aef0
$4 = {type = 0xb066070, id = 0x1015010, cb = 0x18, data = 0x206d6172676f7250, {name = 0xb069f20, _name = 0xb069f20}, {breakpoint = {lookup_type = 0x12, {pid = 0x12, proc = 0x12, dtb = 0x12}, 
      module = 0x78652e6570796b53, addr_type = 0x790065, {rva = 0x31, addr = 0x31, symbol = 0x31}}, memaccess = {gfn = 0x12, access = 0x12, type = 0x0}, reg = 0x12}, ttl = 0xb060c00, last_ttl_rst = 0x0, 
  ah_cb = 0x0}
One could notice that drakvuf_trap_t is trashed. I believe that this is a sort of use-after-free error. Though I failed to catch the error after building with sanitizers.
After digging into the code I have found two suspicious places. I have noticed with additional debug messages and checks that at least libusermode and syscalls plug-ins remove traps still in a list.
I propose to use common drakvuf_remove_trap instead of manually free the memory.","Hi, I have a small suggestion.
Wouldn't it make more sense to move the drakvuf pointer to class plugin and make it protected so that subclasses can access it?
We already have a private field in class pluginex and now we're adding the same fields all over the place.",True,"{'THUMBS_UP': ['https://github.com/icedevml', 'https://github.com/skvl', 'https://github.com/disaykin']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1213,2021-04-19T08:01:58Z,2021-07-09T10:28:36Z,2021-12-15T09:27:58Z,MERGED,True,165,110,7,https://github.com/skvl,"libuserhook, syscalls: fix possible segmentation fault",6,[],https://github.com/tklengyel/drakvuf/pull/1213,https://github.com/tklengyel,13,https://github.com/tklengyel/drakvuf/pull/1213#issuecomment-828407571,"I have noticed occasional segmentation faults while traversing int3 hooks due to jump into null page. The relative code is:
        GSList* loop = lists[i];
        while (loop)
        {
            trap_info.trap = (drakvuf_trap_t*)loop->data;
            rsp |= trap_info.trap->cb(drakvuf, &trap_info);
            loop = loop->next;
        }
In GDB I get context:
(gdb) i r
rax            0xb06aef0        184987376
rbx            0x0      0
rcx            0x7ffeb589a870   140731944118384
rdx            0xb05f560        184939872
rsi            0x7ffeb589a918   140731944118552
rdi            0x1040e20        17042976
rbp            0x7ffeb589a9f0   0x7ffeb589a9f0
rsp            0x7ffeb589a8c0   0x7ffeb589a8c0
r8             0x6      6
r9             0x0      0
r10            0xb066fc0        184971200
r11            0x0      0
r12            0x1040e20        17042976
r13            0x1      1
r14            0xb050150        184877392
r15            0x7ffeb589a918   140731944118552
rip            0x4292c0 0x4292c0 <int3_cb+384>
eflags         0x10206  [ PF IF RF ]
cs             0xe033   57395
ss             0xe02b   57387
ds             0x0      0
es             0x0      0
fs             0x0      0
gs             0x0      0
(gdb) p /x *(drakvuf_trap_info_t*)0x7ffeb589a918
$3 = {timestamp = 0x5c0137c4da0d0, vcpu = 0x1, altp2m_idx = 0x0, proc_data = {name = 0xb0629e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, attached_proc_data = {
    name = 0xb0674e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, trap_pa = 0x5f2291d9, regs = 0x7ffeb589aa98, trap = 0xb06aef0, event_uid = 0x6196, {cpuid = 0x0, 
    debug = 0x0}}
(gdb) printf ""%s\n"", 0xb0629e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) printf ""%s\n"", 0xb0674e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) p /x *(drakvuf_trap_t*)0xb06aef0
$4 = {type = 0xb066070, id = 0x1015010, cb = 0x18, data = 0x206d6172676f7250, {name = 0xb069f20, _name = 0xb069f20}, {breakpoint = {lookup_type = 0x12, {pid = 0x12, proc = 0x12, dtb = 0x12}, 
      module = 0x78652e6570796b53, addr_type = 0x790065, {rva = 0x31, addr = 0x31, symbol = 0x31}}, memaccess = {gfn = 0x12, access = 0x12, type = 0x0}, reg = 0x12}, ttl = 0xb060c00, last_ttl_rst = 0x0, 
  ah_cb = 0x0}
One could notice that drakvuf_trap_t is trashed. I believe that this is a sort of use-after-free error. Though I failed to catch the error after building with sanitizers.
After digging into the code I have found two suspicious places. I have noticed with additional debug messages and checks that at least libusermode and syscalls plug-ins remove traps still in a list.
I propose to use common drakvuf_remove_trap instead of manually free the memory.",@chivay SGTM,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1213,2021-04-19T08:01:58Z,2021-07-09T10:28:36Z,2021-12-15T09:27:58Z,MERGED,True,165,110,7,https://github.com/skvl,"libuserhook, syscalls: fix possible segmentation fault",6,[],https://github.com/tklengyel/drakvuf/pull/1213,https://github.com/skvl,14,https://github.com/tklengyel/drakvuf/pull/1213#issuecomment-832463730,"I have noticed occasional segmentation faults while traversing int3 hooks due to jump into null page. The relative code is:
        GSList* loop = lists[i];
        while (loop)
        {
            trap_info.trap = (drakvuf_trap_t*)loop->data;
            rsp |= trap_info.trap->cb(drakvuf, &trap_info);
            loop = loop->next;
        }
In GDB I get context:
(gdb) i r
rax            0xb06aef0        184987376
rbx            0x0      0
rcx            0x7ffeb589a870   140731944118384
rdx            0xb05f560        184939872
rsi            0x7ffeb589a918   140731944118552
rdi            0x1040e20        17042976
rbp            0x7ffeb589a9f0   0x7ffeb589a9f0
rsp            0x7ffeb589a8c0   0x7ffeb589a8c0
r8             0x6      6
r9             0x0      0
r10            0xb066fc0        184971200
r11            0x0      0
r12            0x1040e20        17042976
r13            0x1      1
r14            0xb050150        184877392
r15            0x7ffeb589a918   140731944118552
rip            0x4292c0 0x4292c0 <int3_cb+384>
eflags         0x10206  [ PF IF RF ]
cs             0xe033   57395
ss             0xe02b   57387
ds             0x0      0
es             0x0      0
fs             0x0      0
gs             0x0      0
(gdb) p /x *(drakvuf_trap_info_t*)0x7ffeb589a918
$3 = {timestamp = 0x5c0137c4da0d0, vcpu = 0x1, altp2m_idx = 0x0, proc_data = {name = 0xb0629e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, attached_proc_data = {
    name = 0xb0674e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, trap_pa = 0x5f2291d9, regs = 0x7ffeb589aa98, trap = 0xb06aef0, event_uid = 0x6196, {cpuid = 0x0, 
    debug = 0x0}}
(gdb) printf ""%s\n"", 0xb0629e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) printf ""%s\n"", 0xb0674e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) p /x *(drakvuf_trap_t*)0xb06aef0
$4 = {type = 0xb066070, id = 0x1015010, cb = 0x18, data = 0x206d6172676f7250, {name = 0xb069f20, _name = 0xb069f20}, {breakpoint = {lookup_type = 0x12, {pid = 0x12, proc = 0x12, dtb = 0x12}, 
      module = 0x78652e6570796b53, addr_type = 0x790065, {rva = 0x31, addr = 0x31, symbol = 0x31}}, memaccess = {gfn = 0x12, access = 0x12, type = 0x0}, reg = 0x12}, ttl = 0xb060c00, last_ttl_rst = 0x0, 
  ah_cb = 0x0}
One could notice that drakvuf_trap_t is trashed. I believe that this is a sort of use-after-free error. Though I failed to catch the error after building with sanitizers.
After digging into the code I have found two suspicious places. I have noticed with additional debug messages and checks that at least libusermode and syscalls plug-ins remove traps still in a list.
I propose to use common drakvuf_remove_trap instead of manually free the memory.",@tklengyel I can't see the Valgrind results (https://ci.drakvuf.com/job/DRAKVUF-windows7-sp1-x86/328/console). Is this the same error as previous?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1213,2021-04-19T08:01:58Z,2021-07-09T10:28:36Z,2021-12-15T09:27:58Z,MERGED,True,165,110,7,https://github.com/skvl,"libuserhook, syscalls: fix possible segmentation fault",6,[],https://github.com/tklengyel/drakvuf/pull/1213,https://github.com/tklengyel,15,https://github.com/tklengyel/drakvuf/pull/1213#issuecomment-832580822,"I have noticed occasional segmentation faults while traversing int3 hooks due to jump into null page. The relative code is:
        GSList* loop = lists[i];
        while (loop)
        {
            trap_info.trap = (drakvuf_trap_t*)loop->data;
            rsp |= trap_info.trap->cb(drakvuf, &trap_info);
            loop = loop->next;
        }
In GDB I get context:
(gdb) i r
rax            0xb06aef0        184987376
rbx            0x0      0
rcx            0x7ffeb589a870   140731944118384
rdx            0xb05f560        184939872
rsi            0x7ffeb589a918   140731944118552
rdi            0x1040e20        17042976
rbp            0x7ffeb589a9f0   0x7ffeb589a9f0
rsp            0x7ffeb589a8c0   0x7ffeb589a8c0
r8             0x6      6
r9             0x0      0
r10            0xb066fc0        184971200
r11            0x0      0
r12            0x1040e20        17042976
r13            0x1      1
r14            0xb050150        184877392
r15            0x7ffeb589a918   140731944118552
rip            0x4292c0 0x4292c0 <int3_cb+384>
eflags         0x10206  [ PF IF RF ]
cs             0xe033   57395
ss             0xe02b   57387
ds             0x0      0
es             0x0      0
fs             0x0      0
gs             0x0      0
(gdb) p /x *(drakvuf_trap_info_t*)0x7ffeb589a918
$3 = {timestamp = 0x5c0137c4da0d0, vcpu = 0x1, altp2m_idx = 0x0, proc_data = {name = 0xb0629e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, attached_proc_data = {
    name = 0xb0674e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, trap_pa = 0x5f2291d9, regs = 0x7ffeb589aa98, trap = 0xb06aef0, event_uid = 0x6196, {cpuid = 0x0, 
    debug = 0x0}}
(gdb) printf ""%s\n"", 0xb0629e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) printf ""%s\n"", 0xb0674e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) p /x *(drakvuf_trap_t*)0xb06aef0
$4 = {type = 0xb066070, id = 0x1015010, cb = 0x18, data = 0x206d6172676f7250, {name = 0xb069f20, _name = 0xb069f20}, {breakpoint = {lookup_type = 0x12, {pid = 0x12, proc = 0x12, dtb = 0x12}, 
      module = 0x78652e6570796b53, addr_type = 0x790065, {rva = 0x31, addr = 0x31, symbol = 0x31}}, memaccess = {gfn = 0x12, access = 0x12, type = 0x0}, reg = 0x12}, ttl = 0xb060c00, last_ttl_rst = 0x0, 
  ah_cb = 0x0}
One could notice that drakvuf_trap_t is trashed. I believe that this is a sort of use-after-free error. Though I failed to catch the error after building with sanitizers.
After digging into the code I have found two suspicious places. I have noticed with additional debug messages and checks that at least libusermode and syscalls plug-ins remove traps still in a list.
I propose to use common drakvuf_remove_trap instead of manually free the memory.","Yes, same issue",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1213,2021-04-19T08:01:58Z,2021-07-09T10:28:36Z,2021-12-15T09:27:58Z,MERGED,True,165,110,7,https://github.com/skvl,"libuserhook, syscalls: fix possible segmentation fault",6,[],https://github.com/tklengyel/drakvuf/pull/1213,https://github.com/skvl,16,https://github.com/tklengyel/drakvuf/pull/1213#issuecomment-874594730,"I have noticed occasional segmentation faults while traversing int3 hooks due to jump into null page. The relative code is:
        GSList* loop = lists[i];
        while (loop)
        {
            trap_info.trap = (drakvuf_trap_t*)loop->data;
            rsp |= trap_info.trap->cb(drakvuf, &trap_info);
            loop = loop->next;
        }
In GDB I get context:
(gdb) i r
rax            0xb06aef0        184987376
rbx            0x0      0
rcx            0x7ffeb589a870   140731944118384
rdx            0xb05f560        184939872
rsi            0x7ffeb589a918   140731944118552
rdi            0x1040e20        17042976
rbp            0x7ffeb589a9f0   0x7ffeb589a9f0
rsp            0x7ffeb589a8c0   0x7ffeb589a8c0
r8             0x6      6
r9             0x0      0
r10            0xb066fc0        184971200
r11            0x0      0
r12            0x1040e20        17042976
r13            0x1      1
r14            0xb050150        184877392
r15            0x7ffeb589a918   140731944118552
rip            0x4292c0 0x4292c0 <int3_cb+384>
eflags         0x10206  [ PF IF RF ]
cs             0xe033   57395
ss             0xe02b   57387
ds             0x0      0
es             0x0      0
fs             0x0      0
gs             0x0      0
(gdb) p /x *(drakvuf_trap_info_t*)0x7ffeb589a918
$3 = {timestamp = 0x5c0137c4da0d0, vcpu = 0x1, altp2m_idx = 0x0, proc_data = {name = 0xb0629e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, attached_proc_data = {
    name = 0xb0674e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, trap_pa = 0x5f2291d9, regs = 0x7ffeb589aa98, trap = 0xb06aef0, event_uid = 0x6196, {cpuid = 0x0, 
    debug = 0x0}}
(gdb) printf ""%s\n"", 0xb0629e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) printf ""%s\n"", 0xb0674e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) p /x *(drakvuf_trap_t*)0xb06aef0
$4 = {type = 0xb066070, id = 0x1015010, cb = 0x18, data = 0x206d6172676f7250, {name = 0xb069f20, _name = 0xb069f20}, {breakpoint = {lookup_type = 0x12, {pid = 0x12, proc = 0x12, dtb = 0x12}, 
      module = 0x78652e6570796b53, addr_type = 0x790065, {rva = 0x31, addr = 0x31, symbol = 0x31}}, memaccess = {gfn = 0x12, access = 0x12, type = 0x0}, reg = 0x12}, ttl = 0xb060c00, last_ttl_rst = 0x0, 
  ah_cb = 0x0}
One could notice that drakvuf_trap_t is trashed. I believe that this is a sort of use-after-free error. Though I failed to catch the error after building with sanitizers.
After digging into the code I have found two suspicious places. I have noticed with additional debug messages and checks that at least libusermode and syscalls plug-ins remove traps still in a list.
I propose to use common drakvuf_remove_trap instead of manually free the memory.","Finally I've reproduced the error with Windows 7 SP1 x64:
==50651==ERROR: AddressSanitizer: heap-use-after-free on address 0x61100002d438 at pc 0x0000005ea92a bp 0x7ffd5ef97310 sp 0x7ffd5ef97308                                                     
READ of size 1 at 0x61100002d438 thread T0                                                                                                                                                   
    #0 0x5ea929 in remove_trap /home/skovalev/src/drakvuf-gh/src/libdrakvuf/vmi.c:1063:51                                                                                                    
    #1 0x5e8a08 in remove_trap /home/skovalev/src/drakvuf-gh/src/libdrakvuf/vmi.c:1001:17                                                                                                    
    #2 0x5b0f93 in drakvuf_remove_trap /home/skovalev/src/drakvuf-gh/src/libdrakvuf/drakvuf.c:535:9
    #3 0x6a06dc in syscalls::~syscalls() /home/skovalev/src/drakvuf-gh/src/plugins/syscalls/syscalls.cpp:292:9
    #4 0x6a0e6e in syscalls::~syscalls() /home/skovalev/src/drakvuf-gh/src/plugins/syscalls/syscalls.cpp:288:1
    #5 0x5a0f64 in std::default_delete<plugin>::operator()(plugin*) const /usr/bin/../lib/gcc/x86_64-linux-gnu/8/../../../../include/c++/8/bits/unique_ptr.h:81:2
    #6 0x5a0ba5 in std::unique_ptr<plugin, std::default_delete<plugin> >::~unique_ptr() /usr/bin/../lib/gcc/x86_64-linux-gnu/8/../../../../include/c++/8/bits/unique_ptr.h:277:4
    #7 0x5a0a0a in std::array<std::unique_ptr<plugin, std::default_delete<plugin> >, 30ul>::~array() /usr/bin/../lib/gcc/x86_64-linux-gnu/8/../../../../include/c++/8/array:94:12
    #8 0x59ffe8 in drakvuf_plugins::~drakvuf_plugins() /home/skovalev/src/drakvuf-gh/src/./plugins/plugins.h:289:7
    #9 0x59d9ef in drakvuf_c::~drakvuf_c() /home/skovalev/src/drakvuf-gh/src/drakvuf.cpp:237:5
    #10 0x587d6e in std::default_delete<drakvuf_c>::operator()(drakvuf_c*) const /usr/bin/../lib/gcc/x86_64-linux-gnu/8/../../../../include/c++/8/bits/unique_ptr.h:81:2
    #11 0x5818a5 in std::unique_ptr<drakvuf_c, std::default_delete<drakvuf_c> >::~unique_ptr() /usr/bin/../lib/gcc/x86_64-linux-gnu/8/../../../../include/c++/8/bits/unique_ptr.h:277:4
    #12 0x7fdac9c9a160 in __run_exit_handlers /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:108
    #13 0x7fdac9c9a259 in exit /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:139
    #14 0x7fdac9c78bfd in __libc_start_main /build/glibc-S9d2JN/glibc-2.27/csu/../csu/libc-start.c:344
    #15 0x47aff9 in _start (/usr/local/bin/drakvuf+0x47aff9)
                             
0x61100002d438 is located 56 bytes inside of 224-byte region [0x61100002d400,0x61100002d4e0)
freed by thread T0 here:     
    #0 0x574228 in operator delete(void*) (/usr/local/bin/drakvuf+0x574228)
    #1 0x8db6e7 in ssdtmon::~ssdtmon() /home/skovalev/src/drakvuf-gh/src/plugins/ssdtmon/ssdtmon.cpp:218:21
    #2 0x5a0f64 in std::default_delete<plugin>::operator()(plugin*) const /usr/bin/../lib/gcc/x86_64-linux-gnu/8/../../../../include/c++/8/bits/unique_ptr.h:81:2
    #3 0x5a0ba5 in std::unique_ptr<plugin, std::default_delete<plugin> >::~unique_ptr() /usr/bin/../lib/gcc/x86_64-linux-gnu/8/../../../../include/c++/8/bits/unique_ptr.h:277:4
    #4 0x5a0a0a in std::array<std::unique_ptr<plugin, std::default_delete<plugin> >, 30ul>::~array() /usr/bin/../lib/gcc/x86_64-linux-gnu/8/../../../../include/c++/8/array:94:12
    #5 0x59ffe8 in drakvuf_plugins::~drakvuf_plugins() /home/skovalev/src/drakvuf-gh/src/./plugins/plugins.h:289:7
    #6 0x59d9ef in drakvuf_c::~drakvuf_c() /home/skovalev/src/drakvuf-gh/src/drakvuf.cpp:237:5
    #7 0x587d6e in std::default_delete<drakvuf_c>::operator()(drakvuf_c*) const /usr/bin/../lib/gcc/x86_64-linux-gnu/8/../../../../include/c++/8/bits/unique_ptr.h:81:2
    #8 0x5818a5 in std::unique_ptr<drakvuf_c, std::default_delete<drakvuf_c> >::~unique_ptr() /usr/bin/../lib/gcc/x86_64-linux-gnu/8/../../../../include/c++/8/bits/unique_ptr.h:277:4
    #9 0x7fdac9c9a160 in __run_exit_handlers /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:108

previously allocated by thread T0 here:
    #0 0x5734b0 in operator new(unsigned long) (/usr/local/bin/drakvuf+0x5734b0)
    #1 0x667126 in std::_MakeUniq<ssdtmon>::__single_object std::make_unique<ssdtmon, drakvuf*&, output_format_t&>(drakvuf*&, output_format_t&) /usr/bin/../lib/gcc/x86_64-linux-gnu/8/../..$
../../include/c++/8/bits/unique_ptr.h:835:30
    #2 0x65e133 in drakvuf_plugins::start(drakvuf_plugin, plugins_options const*) /home/skovalev/src/drakvuf-gh/src/plugins/plugins.cpp:206:48
    #3 0x59bba7 in drakvuf_c::start_plugins(bool const*, plugins_options const*) /home/skovalev/src/drakvuf-gh/src/drakvuf.cpp:140:31
    #4 0x57ebb1 in main /home/skovalev/src/drakvuf-gh/src/main.cpp:869:18
    #5 0x7fdac9c78bf6 in __libc_start_main /build/glibc-S9d2JN/glibc-2.27/csu/../csu/libc-start.c:310

It looks like while removing the guard page for trap from syscalls (see vmi.c):
remove_trap(drakvuf, &container->breakpoint.guard);

, it hits the memory from ssdtmon.
Though I don't understand how this happens!",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1213,2021-04-19T08:01:58Z,2021-07-09T10:28:36Z,2021-12-15T09:27:58Z,MERGED,True,165,110,7,https://github.com/skvl,"libuserhook, syscalls: fix possible segmentation fault",6,[],https://github.com/tklengyel/drakvuf/pull/1213,https://github.com/skvl,17,https://github.com/tklengyel/drakvuf/pull/1213#issuecomment-874617791,"I have noticed occasional segmentation faults while traversing int3 hooks due to jump into null page. The relative code is:
        GSList* loop = lists[i];
        while (loop)
        {
            trap_info.trap = (drakvuf_trap_t*)loop->data;
            rsp |= trap_info.trap->cb(drakvuf, &trap_info);
            loop = loop->next;
        }
In GDB I get context:
(gdb) i r
rax            0xb06aef0        184987376
rbx            0x0      0
rcx            0x7ffeb589a870   140731944118384
rdx            0xb05f560        184939872
rsi            0x7ffeb589a918   140731944118552
rdi            0x1040e20        17042976
rbp            0x7ffeb589a9f0   0x7ffeb589a9f0
rsp            0x7ffeb589a8c0   0x7ffeb589a8c0
r8             0x6      6
r9             0x0      0
r10            0xb066fc0        184971200
r11            0x0      0
r12            0x1040e20        17042976
r13            0x1      1
r14            0xb050150        184877392
r15            0x7ffeb589a918   140731944118552
rip            0x4292c0 0x4292c0 <int3_cb+384>
eflags         0x10206  [ PF IF RF ]
cs             0xe033   57395
ss             0xe02b   57387
ds             0x0      0
es             0x0      0
fs             0x0      0
gs             0x0      0
(gdb) p /x *(drakvuf_trap_info_t*)0x7ffeb589a918
$3 = {timestamp = 0x5c0137c4da0d0, vcpu = 0x1, altp2m_idx = 0x0, proc_data = {name = 0xb0629e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, attached_proc_data = {
    name = 0xb0674e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, trap_pa = 0x5f2291d9, regs = 0x7ffeb589aa98, trap = 0xb06aef0, event_uid = 0x6196, {cpuid = 0x0, 
    debug = 0x0}}
(gdb) printf ""%s\n"", 0xb0629e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) printf ""%s\n"", 0xb0674e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) p /x *(drakvuf_trap_t*)0xb06aef0
$4 = {type = 0xb066070, id = 0x1015010, cb = 0x18, data = 0x206d6172676f7250, {name = 0xb069f20, _name = 0xb069f20}, {breakpoint = {lookup_type = 0x12, {pid = 0x12, proc = 0x12, dtb = 0x12}, 
      module = 0x78652e6570796b53, addr_type = 0x790065, {rva = 0x31, addr = 0x31, symbol = 0x31}}, memaccess = {gfn = 0x12, access = 0x12, type = 0x0}, reg = 0x12}, ttl = 0xb060c00, last_ttl_rst = 0x0, 
  ah_cb = 0x0}
One could notice that drakvuf_trap_t is trashed. I believe that this is a sort of use-after-free error. Though I failed to catch the error after building with sanitizers.
After digging into the code I have found two suspicious places. I have noticed with additional debug messages and checks that at least libusermode and syscalls plug-ins remove traps still in a list.
I propose to use common drakvuf_remove_trap instead of manually free the memory.",Is it possible that some collision occurred between GLibs's alloc & free and new & delete?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1213,2021-04-19T08:01:58Z,2021-07-09T10:28:36Z,2021-12-15T09:27:58Z,MERGED,True,165,110,7,https://github.com/skvl,"libuserhook, syscalls: fix possible segmentation fault",6,[],https://github.com/tklengyel/drakvuf/pull/1213,https://github.com/skvl,18,https://github.com/tklengyel/drakvuf/pull/1213#issuecomment-875426807,"I have noticed occasional segmentation faults while traversing int3 hooks due to jump into null page. The relative code is:
        GSList* loop = lists[i];
        while (loop)
        {
            trap_info.trap = (drakvuf_trap_t*)loop->data;
            rsp |= trap_info.trap->cb(drakvuf, &trap_info);
            loop = loop->next;
        }
In GDB I get context:
(gdb) i r
rax            0xb06aef0        184987376
rbx            0x0      0
rcx            0x7ffeb589a870   140731944118384
rdx            0xb05f560        184939872
rsi            0x7ffeb589a918   140731944118552
rdi            0x1040e20        17042976
rbp            0x7ffeb589a9f0   0x7ffeb589a9f0
rsp            0x7ffeb589a8c0   0x7ffeb589a8c0
r8             0x6      6
r9             0x0      0
r10            0xb066fc0        184971200
r11            0x0      0
r12            0x1040e20        17042976
r13            0x1      1
r14            0xb050150        184877392
r15            0x7ffeb589a918   140731944118552
rip            0x4292c0 0x4292c0 <int3_cb+384>
eflags         0x10206  [ PF IF RF ]
cs             0xe033   57395
ss             0xe02b   57387
ds             0x0      0
es             0x0      0
fs             0x0      0
gs             0x0      0
(gdb) p /x *(drakvuf_trap_info_t*)0x7ffeb589a918
$3 = {timestamp = 0x5c0137c4da0d0, vcpu = 0x1, altp2m_idx = 0x0, proc_data = {name = 0xb0629e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, attached_proc_data = {
    name = 0xb0674e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, trap_pa = 0x5f2291d9, regs = 0x7ffeb589aa98, trap = 0xb06aef0, event_uid = 0x6196, {cpuid = 0x0, 
    debug = 0x0}}
(gdb) printf ""%s\n"", 0xb0629e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) printf ""%s\n"", 0xb0674e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) p /x *(drakvuf_trap_t*)0xb06aef0
$4 = {type = 0xb066070, id = 0x1015010, cb = 0x18, data = 0x206d6172676f7250, {name = 0xb069f20, _name = 0xb069f20}, {breakpoint = {lookup_type = 0x12, {pid = 0x12, proc = 0x12, dtb = 0x12}, 
      module = 0x78652e6570796b53, addr_type = 0x790065, {rva = 0x31, addr = 0x31, symbol = 0x31}}, memaccess = {gfn = 0x12, access = 0x12, type = 0x0}, reg = 0x12}, ttl = 0xb060c00, last_ttl_rst = 0x0, 
  ah_cb = 0x0}
One could notice that drakvuf_trap_t is trashed. I believe that this is a sort of use-after-free error. Though I failed to catch the error after building with sanitizers.
After digging into the code I have found two suspicious places. I have noticed with additional debug messages and checks that at least libusermode and syscalls plug-ins remove traps still in a list.
I propose to use common drakvuf_remove_trap instead of manually free the memory.","@tklengyel , I believe that there is a logical error while stopping the syscalls plug-in.
In current implementation:

~syscalls calls free_trap which in turn frees the drakvuf_trap_t while not calling drakvuf_remove_trap.
Thus remove_trap is not called resulting in dangling pointer in drakvuf->breakpoint_lookup_trap.
If drakvuf->terminate is called then new drakvuf_loop started.
On next system call hooked (trap is still there because drakvuf_remove_trap have not been called, see above) we get segmentation fault.

But if I call drakvuf_remove_trap instead of free_trap inside syscalls:~syscalls (or syscalls::stop) I get memory leak. Though I don't understand why.
I have suspected lazy remove. But this is not the issue.
Do You have any suggestions?
P.S. I can't reproduce it with address sanitizer. Is it the issue with Valgrind?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1213,2021-04-19T08:01:58Z,2021-07-09T10:28:36Z,2021-12-15T09:27:58Z,MERGED,True,165,110,7,https://github.com/skvl,"libuserhook, syscalls: fix possible segmentation fault",6,[],https://github.com/tklengyel/drakvuf/pull/1213,https://github.com/skvl,19,https://github.com/tklengyel/drakvuf/pull/1213#issuecomment-876341735,"I have noticed occasional segmentation faults while traversing int3 hooks due to jump into null page. The relative code is:
        GSList* loop = lists[i];
        while (loop)
        {
            trap_info.trap = (drakvuf_trap_t*)loop->data;
            rsp |= trap_info.trap->cb(drakvuf, &trap_info);
            loop = loop->next;
        }
In GDB I get context:
(gdb) i r
rax            0xb06aef0        184987376
rbx            0x0      0
rcx            0x7ffeb589a870   140731944118384
rdx            0xb05f560        184939872
rsi            0x7ffeb589a918   140731944118552
rdi            0x1040e20        17042976
rbp            0x7ffeb589a9f0   0x7ffeb589a9f0
rsp            0x7ffeb589a8c0   0x7ffeb589a8c0
r8             0x6      6
r9             0x0      0
r10            0xb066fc0        184971200
r11            0x0      0
r12            0x1040e20        17042976
r13            0x1      1
r14            0xb050150        184877392
r15            0x7ffeb589a918   140731944118552
rip            0x4292c0 0x4292c0 <int3_cb+384>
eflags         0x10206  [ PF IF RF ]
cs             0xe033   57395
ss             0xe02b   57387
ds             0x0      0
es             0x0      0
fs             0x0      0
gs             0x0      0
(gdb) p /x *(drakvuf_trap_info_t*)0x7ffeb589a918
$3 = {timestamp = 0x5c0137c4da0d0, vcpu = 0x1, altp2m_idx = 0x0, proc_data = {name = 0xb0629e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, attached_proc_data = {
    name = 0xb0674e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, trap_pa = 0x5f2291d9, regs = 0x7ffeb589aa98, trap = 0xb06aef0, event_uid = 0x6196, {cpuid = 0x0, 
    debug = 0x0}}
(gdb) printf ""%s\n"", 0xb0629e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) printf ""%s\n"", 0xb0674e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) p /x *(drakvuf_trap_t*)0xb06aef0
$4 = {type = 0xb066070, id = 0x1015010, cb = 0x18, data = 0x206d6172676f7250, {name = 0xb069f20, _name = 0xb069f20}, {breakpoint = {lookup_type = 0x12, {pid = 0x12, proc = 0x12, dtb = 0x12}, 
      module = 0x78652e6570796b53, addr_type = 0x790065, {rva = 0x31, addr = 0x31, symbol = 0x31}}, memaccess = {gfn = 0x12, access = 0x12, type = 0x0}, reg = 0x12}, ttl = 0xb060c00, last_ttl_rst = 0x0, 
  ah_cb = 0x0}
One could notice that drakvuf_trap_t is trashed. I believe that this is a sort of use-after-free error. Though I failed to catch the error after building with sanitizers.
After digging into the code I have found two suspicious places. I have noticed with additional debug messages and checks that at least libusermode and syscalls plug-ins remove traps still in a list.
I propose to use common drakvuf_remove_trap instead of manually free the memory.","@tklengyel , I have rewrite syscalls with pluginex interface (for Windows part only). And most of the tests have passed now!
Thow for DRAKVUF-windows10-2004 (https://ci.drakvuf.com/job/DRAKVUF-PR/483/console) target it fails with now useful information:
Started by upstream project ""DRAKVUF-PR"" build number 483
originally caused by:
 GitHub pull request #1213 of commit ad4ae659536b864305dc16e7a8edde083f298b91, no merge conflicts.
Running as SYSTEM
Building in workspace /shared/jenkins/workspace/DRAKVUF-windows10-2004
Copied 4 artifacts from ""DRAKVUF-build"" build number 644
[DRAKVUF-windows10-2004] $ /bin/sh -xe /tmp/jenkins9299504120497915957.sh
+ sudo -E /shared/drakvuf-ci/run.sh windows10-2004 /shared/jenkins/workspace/DRAKVUF-windows10-2004 /opt/libvmi RESET
Running environment reset..
Reset result: 338:600:3668:0x1aa002
Received Windows 10 x64 Test VM ID: 338 600 3668
Running Injector to write autoruns into guest through PID 600
Placed /shared/sysinternals/Autoruns64.exe into VM, now executing
autoruns process found: 0
DRAKVUF /shared/jenkins/workspace/DRAKVUF-windows10-2004/src/injector v0.8-git20210708103055+fcb98f3e-1 Copyright (C) 2014-2021 Tamas K Lengyel
Injector starting C:\\autoruns64.exe through PID 600 TID: 0
[INJECT] TIME:1625741421.591292 STATUS:SUCCESS PID:600 FILE:"""" ARGUMENTS:"""" INJECTED_PID:6512 INJECTED_TID:6036
Process startup success
+ err=1
+ sudo -E xl destroy windows10-2004-jenkins
+ sudo -E lvremove -f /dev/t1vg/windows10-2004-jenkins
  Logical volume ""windows10-2004-jenkins"" successfully removed
+ exit 1
Build step 'Execute shell' marked build as failure
Finished: FAILURE

What's the matter?
Thanks!",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1213,2021-04-19T08:01:58Z,2021-07-09T10:28:36Z,2021-12-15T09:27:58Z,MERGED,True,165,110,7,https://github.com/skvl,"libuserhook, syscalls: fix possible segmentation fault",6,[],https://github.com/tklengyel/drakvuf/pull/1213,https://github.com/tklengyel,20,https://github.com/tklengyel/drakvuf/pull/1213#issuecomment-876391479,"I have noticed occasional segmentation faults while traversing int3 hooks due to jump into null page. The relative code is:
        GSList* loop = lists[i];
        while (loop)
        {
            trap_info.trap = (drakvuf_trap_t*)loop->data;
            rsp |= trap_info.trap->cb(drakvuf, &trap_info);
            loop = loop->next;
        }
In GDB I get context:
(gdb) i r
rax            0xb06aef0        184987376
rbx            0x0      0
rcx            0x7ffeb589a870   140731944118384
rdx            0xb05f560        184939872
rsi            0x7ffeb589a918   140731944118552
rdi            0x1040e20        17042976
rbp            0x7ffeb589a9f0   0x7ffeb589a9f0
rsp            0x7ffeb589a8c0   0x7ffeb589a8c0
r8             0x6      6
r9             0x0      0
r10            0xb066fc0        184971200
r11            0x0      0
r12            0x1040e20        17042976
r13            0x1      1
r14            0xb050150        184877392
r15            0x7ffeb589a918   140731944118552
rip            0x4292c0 0x4292c0 <int3_cb+384>
eflags         0x10206  [ PF IF RF ]
cs             0xe033   57395
ss             0xe02b   57387
ds             0x0      0
es             0x0      0
fs             0x0      0
gs             0x0      0
(gdb) p /x *(drakvuf_trap_info_t*)0x7ffeb589a918
$3 = {timestamp = 0x5c0137c4da0d0, vcpu = 0x1, altp2m_idx = 0x0, proc_data = {name = 0xb0629e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, attached_proc_data = {
    name = 0xb0674e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, trap_pa = 0x5f2291d9, regs = 0x7ffeb589aa98, trap = 0xb06aef0, event_uid = 0x6196, {cpuid = 0x0, 
    debug = 0x0}}
(gdb) printf ""%s\n"", 0xb0629e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) printf ""%s\n"", 0xb0674e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) p /x *(drakvuf_trap_t*)0xb06aef0
$4 = {type = 0xb066070, id = 0x1015010, cb = 0x18, data = 0x206d6172676f7250, {name = 0xb069f20, _name = 0xb069f20}, {breakpoint = {lookup_type = 0x12, {pid = 0x12, proc = 0x12, dtb = 0x12}, 
      module = 0x78652e6570796b53, addr_type = 0x790065, {rva = 0x31, addr = 0x31, symbol = 0x31}}, memaccess = {gfn = 0x12, access = 0x12, type = 0x0}, reg = 0x12}, ttl = 0xb060c00, last_ttl_rst = 0x0, 
  ah_cb = 0x0}
One could notice that drakvuf_trap_t is trashed. I believe that this is a sort of use-after-free error. Though I failed to catch the error after building with sanitizers.
After digging into the code I have found two suspicious places. I have noticed with additional debug messages and checks that at least libusermode and syscalls plug-ins remove traps still in a list.
I propose to use common drakvuf_remove_trap instead of manually free the memory.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1213,2021-04-19T08:01:58Z,2021-07-09T10:28:36Z,2021-12-15T09:27:58Z,MERGED,True,165,110,7,https://github.com/skvl,"libuserhook, syscalls: fix possible segmentation fault",6,[],https://github.com/tklengyel/drakvuf/pull/1213,https://github.com/tklengyel,21,https://github.com/tklengyel/drakvuf/pull/1213#issuecomment-876391974,"I have noticed occasional segmentation faults while traversing int3 hooks due to jump into null page. The relative code is:
        GSList* loop = lists[i];
        while (loop)
        {
            trap_info.trap = (drakvuf_trap_t*)loop->data;
            rsp |= trap_info.trap->cb(drakvuf, &trap_info);
            loop = loop->next;
        }
In GDB I get context:
(gdb) i r
rax            0xb06aef0        184987376
rbx            0x0      0
rcx            0x7ffeb589a870   140731944118384
rdx            0xb05f560        184939872
rsi            0x7ffeb589a918   140731944118552
rdi            0x1040e20        17042976
rbp            0x7ffeb589a9f0   0x7ffeb589a9f0
rsp            0x7ffeb589a8c0   0x7ffeb589a8c0
r8             0x6      6
r9             0x0      0
r10            0xb066fc0        184971200
r11            0x0      0
r12            0x1040e20        17042976
r13            0x1      1
r14            0xb050150        184877392
r15            0x7ffeb589a918   140731944118552
rip            0x4292c0 0x4292c0 <int3_cb+384>
eflags         0x10206  [ PF IF RF ]
cs             0xe033   57395
ss             0xe02b   57387
ds             0x0      0
es             0x0      0
fs             0x0      0
gs             0x0      0
(gdb) p /x *(drakvuf_trap_info_t*)0x7ffeb589a918
$3 = {timestamp = 0x5c0137c4da0d0, vcpu = 0x1, altp2m_idx = 0x0, proc_data = {name = 0xb0629e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, attached_proc_data = {
    name = 0xb0674e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, trap_pa = 0x5f2291d9, regs = 0x7ffeb589aa98, trap = 0xb06aef0, event_uid = 0x6196, {cpuid = 0x0, 
    debug = 0x0}}
(gdb) printf ""%s\n"", 0xb0629e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) printf ""%s\n"", 0xb0674e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) p /x *(drakvuf_trap_t*)0xb06aef0
$4 = {type = 0xb066070, id = 0x1015010, cb = 0x18, data = 0x206d6172676f7250, {name = 0xb069f20, _name = 0xb069f20}, {breakpoint = {lookup_type = 0x12, {pid = 0x12, proc = 0x12, dtb = 0x12}, 
      module = 0x78652e6570796b53, addr_type = 0x790065, {rva = 0x31, addr = 0x31, symbol = 0x31}}, memaccess = {gfn = 0x12, access = 0x12, type = 0x0}, reg = 0x12}, ttl = 0xb060c00, last_ttl_rst = 0x0, 
  ah_cb = 0x0}
One could notice that drakvuf_trap_t is trashed. I believe that this is a sort of use-after-free error. Though I failed to catch the error after building with sanitizers.
After digging into the code I have found two suspicious places. I have noticed with additional debug messages and checks that at least libusermode and syscalls plug-ins remove traps still in a list.
I propose to use common drakvuf_remove_trap instead of manually free the memory.",That's an error that happens occasionally but it's not deterministic and happens with other PRs as well. If we get the CI to pass once I'm OK with ignoring that one.,True,{'THUMBS_UP': ['https://github.com/skvl']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1213,2021-04-19T08:01:58Z,2021-07-09T10:28:36Z,2021-12-15T09:27:58Z,MERGED,True,165,110,7,https://github.com/skvl,"libuserhook, syscalls: fix possible segmentation fault",6,[],https://github.com/tklengyel/drakvuf/pull/1213,https://github.com/tklengyel,22,https://github.com/tklengyel/drakvuf/pull/1213#issuecomment-876674470,"I have noticed occasional segmentation faults while traversing int3 hooks due to jump into null page. The relative code is:
        GSList* loop = lists[i];
        while (loop)
        {
            trap_info.trap = (drakvuf_trap_t*)loop->data;
            rsp |= trap_info.trap->cb(drakvuf, &trap_info);
            loop = loop->next;
        }
In GDB I get context:
(gdb) i r
rax            0xb06aef0        184987376
rbx            0x0      0
rcx            0x7ffeb589a870   140731944118384
rdx            0xb05f560        184939872
rsi            0x7ffeb589a918   140731944118552
rdi            0x1040e20        17042976
rbp            0x7ffeb589a9f0   0x7ffeb589a9f0
rsp            0x7ffeb589a8c0   0x7ffeb589a8c0
r8             0x6      6
r9             0x0      0
r10            0xb066fc0        184971200
r11            0x0      0
r12            0x1040e20        17042976
r13            0x1      1
r14            0xb050150        184877392
r15            0x7ffeb589a918   140731944118552
rip            0x4292c0 0x4292c0 <int3_cb+384>
eflags         0x10206  [ PF IF RF ]
cs             0xe033   57395
ss             0xe02b   57387
ds             0x0      0
es             0x0      0
fs             0x0      0
gs             0x0      0
(gdb) p /x *(drakvuf_trap_info_t*)0x7ffeb589a918
$3 = {timestamp = 0x5c0137c4da0d0, vcpu = 0x1, altp2m_idx = 0x0, proc_data = {name = 0xb0629e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, attached_proc_data = {
    name = 0xb0674e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, trap_pa = 0x5f2291d9, regs = 0x7ffeb589aa98, trap = 0xb06aef0, event_uid = 0x6196, {cpuid = 0x0, 
    debug = 0x0}}
(gdb) printf ""%s\n"", 0xb0629e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) printf ""%s\n"", 0xb0674e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) p /x *(drakvuf_trap_t*)0xb06aef0
$4 = {type = 0xb066070, id = 0x1015010, cb = 0x18, data = 0x206d6172676f7250, {name = 0xb069f20, _name = 0xb069f20}, {breakpoint = {lookup_type = 0x12, {pid = 0x12, proc = 0x12, dtb = 0x12}, 
      module = 0x78652e6570796b53, addr_type = 0x790065, {rva = 0x31, addr = 0x31, symbol = 0x31}}, memaccess = {gfn = 0x12, access = 0x12, type = 0x0}, reg = 0x12}, ttl = 0xb060c00, last_ttl_rst = 0x0, 
  ah_cb = 0x0}
One could notice that drakvuf_trap_t is trashed. I believe that this is a sort of use-after-free error. Though I failed to catch the error after building with sanitizers.
After digging into the code I have found two suspicious places. I have noticed with additional debug messages and checks that at least libusermode and syscalls plug-ins remove traps still in a list.
I propose to use common drakvuf_remove_trap instead of manually free the memory.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1213,2021-04-19T08:01:58Z,2021-07-09T10:28:36Z,2021-12-15T09:27:58Z,MERGED,True,165,110,7,https://github.com/skvl,"libuserhook, syscalls: fix possible segmentation fault",6,[],https://github.com/tklengyel/drakvuf/pull/1213,https://github.com/skvl,23,https://github.com/tklengyel/drakvuf/pull/1213#issuecomment-876948022,"I have noticed occasional segmentation faults while traversing int3 hooks due to jump into null page. The relative code is:
        GSList* loop = lists[i];
        while (loop)
        {
            trap_info.trap = (drakvuf_trap_t*)loop->data;
            rsp |= trap_info.trap->cb(drakvuf, &trap_info);
            loop = loop->next;
        }
In GDB I get context:
(gdb) i r
rax            0xb06aef0        184987376
rbx            0x0      0
rcx            0x7ffeb589a870   140731944118384
rdx            0xb05f560        184939872
rsi            0x7ffeb589a918   140731944118552
rdi            0x1040e20        17042976
rbp            0x7ffeb589a9f0   0x7ffeb589a9f0
rsp            0x7ffeb589a8c0   0x7ffeb589a8c0
r8             0x6      6
r9             0x0      0
r10            0xb066fc0        184971200
r11            0x0      0
r12            0x1040e20        17042976
r13            0x1      1
r14            0xb050150        184877392
r15            0x7ffeb589a918   140731944118552
rip            0x4292c0 0x4292c0 <int3_cb+384>
eflags         0x10206  [ PF IF RF ]
cs             0xe033   57395
ss             0xe02b   57387
ds             0x0      0
es             0x0      0
fs             0x0      0
gs             0x0      0
(gdb) p /x *(drakvuf_trap_info_t*)0x7ffeb589a918
$3 = {timestamp = 0x5c0137c4da0d0, vcpu = 0x1, altp2m_idx = 0x0, proc_data = {name = 0xb0629e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, attached_proc_data = {
    name = 0xb0674e0, pid = 0x770, ppid = 0x514, base_addr = 0xfffffa80039b3b30, userid = 0x1, tid = 0xa58}, trap_pa = 0x5f2291d9, regs = 0x7ffeb589aa98, trap = 0xb06aef0, event_uid = 0x6196, {cpuid = 0x0, 
    debug = 0x0}}
(gdb) printf ""%s\n"", 0xb0629e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) printf ""%s\n"", 0xb0674e0
\Device\HarddiskVolume2\Program Files\Microsoft Office\Office14\POWERPNT.EXE
(gdb) p /x *(drakvuf_trap_t*)0xb06aef0
$4 = {type = 0xb066070, id = 0x1015010, cb = 0x18, data = 0x206d6172676f7250, {name = 0xb069f20, _name = 0xb069f20}, {breakpoint = {lookup_type = 0x12, {pid = 0x12, proc = 0x12, dtb = 0x12}, 
      module = 0x78652e6570796b53, addr_type = 0x790065, {rva = 0x31, addr = 0x31, symbol = 0x31}}, memaccess = {gfn = 0x12, access = 0x12, type = 0x0}, reg = 0x12}, ttl = 0xb060c00, last_ttl_rst = 0x0, 
  ah_cb = 0x0}
One could notice that drakvuf_trap_t is trashed. I believe that this is a sort of use-after-free error. Though I failed to catch the error after building with sanitizers.
After digging into the code I have found two suspicious places. I have noticed with additional debug messages and checks that at least libusermode and syscalls plug-ins remove traps still in a list.
I propose to use common drakvuf_remove_trap instead of manually free the memory.",@tklengyel is this OK now?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1214,2021-04-19T08:07:00Z,2021-04-19T11:55:54Z,2021-04-21T13:40:15Z,MERGED,True,7,3,2,https://github.com/skvl,exploitmon: fix EX_FAST_REF for x64,1,[],https://github.com/tklengyel/drakvuf/pull/1214,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1214,A little fix in bit mask,A little fix in bit mask,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1214,2021-04-19T08:07:00Z,2021-04-19T11:55:54Z,2021-04-21T13:40:15Z,MERGED,True,7,3,2,https://github.com/skvl,exploitmon: fix EX_FAST_REF for x64,1,[],https://github.com/tklengyel/drakvuf/pull/1214,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1214#issuecomment-822264906,A little fix in bit mask,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1214,2021-04-19T08:07:00Z,2021-04-19T11:55:54Z,2021-04-21T13:40:15Z,MERGED,True,7,3,2,https://github.com/skvl,exploitmon: fix EX_FAST_REF for x64,1,[],https://github.com/tklengyel/drakvuf/pull/1214,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1214#issuecomment-822390121,A little fix in bit mask,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1215,2021-04-20T15:01:56Z,2021-04-27T23:21:46Z,2021-05-06T18:32:15Z,MERGED,True,128,361,13,https://github.com/manorit2001,refactor plugins: output related codes,16,[],https://github.com/tklengyel/drakvuf/pull/1215,https://github.com/manorit2001,1,https://github.com/tklengyel/drakvuf/pull/1215,fixes #832,fixes #832,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1215,2021-04-20T15:01:56Z,2021-04-27T23:21:46Z,2021-05-06T18:32:15Z,MERGED,True,128,361,13,https://github.com/manorit2001,refactor plugins: output related codes,16,[],https://github.com/tklengyel/drakvuf/pull/1215,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1215#issuecomment-823347079,fixes #832,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1215,2021-04-20T15:01:56Z,2021-04-27T23:21:46Z,2021-05-06T18:32:15Z,MERGED,True,128,361,13,https://github.com/manorit2001,refactor plugins: output related codes,16,[],https://github.com/tklengyel/drakvuf/pull/1215,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1215#issuecomment-823631153,fixes #832,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1215,2021-04-20T15:01:56Z,2021-04-27T23:21:46Z,2021-05-06T18:32:15Z,MERGED,True,128,361,13,https://github.com/manorit2001,refactor plugins: output related codes,16,[],https://github.com/tklengyel/drakvuf/pull/1215,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1215#issuecomment-828014586,fixes #832,Thanks!,True,{'HOORAY': ['https://github.com/manorit2001']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1216,2021-04-21T12:53:54Z,2021-04-21T14:07:24Z,2021-04-22T18:37:01Z,MERGED,True,2,2,1,https://github.com/chivay,Add missing newlines in usage,1,[],https://github.com/tklengyel/drakvuf/pull/1216,https://github.com/chivay,1,https://github.com/tklengyel/drakvuf/pull/1216,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1216,2021-04-21T12:53:54Z,2021-04-21T14:07:24Z,2021-04-22T18:37:01Z,MERGED,True,2,2,1,https://github.com/chivay,Add missing newlines in usage,1,[],https://github.com/tklengyel/drakvuf/pull/1216,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1216#issuecomment-824036266,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1216,2021-04-21T12:53:54Z,2021-04-21T14:07:24Z,2021-04-22T18:37:01Z,MERGED,True,2,2,1,https://github.com/chivay,Add missing newlines in usage,1,[],https://github.com/tklengyel/drakvuf/pull/1216,https://github.com/icedevml,3,https://github.com/tklengyel/drakvuf/pull/1216#issuecomment-824038856,,@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1217,2021-04-21T13:59:05Z,2021-04-26T13:47:59Z,2021-06-16T06:42:36Z,MERGED,True,1,1,1,https://github.com/skvl,libdrakvuf: fix check return context,2,[],https://github.com/tklengyel/drakvuf/pull/1217,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1217,For issues #1218,For issues #1218,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1217,2021-04-21T13:59:05Z,2021-04-26T13:47:59Z,2021-06-16T06:42:36Z,MERGED,True,1,1,1,https://github.com/skvl,libdrakvuf: fix check return context,2,[],https://github.com/tklengyel/drakvuf/pull/1217,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1217#issuecomment-824084138,For issues #1218,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1217,2021-04-21T13:59:05Z,2021-04-26T13:47:59Z,2021-06-16T06:42:36Z,MERGED,True,1,1,1,https://github.com/skvl,libdrakvuf: fix check return context,2,[],https://github.com/tklengyel/drakvuf/pull/1217,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1217#issuecomment-824111058,For issues #1218,"@skvl Interesting case, not sure what's going on. If the RSP is truly off-by-8 after the ret I would expect there would be crashes in the guest. Do you have more info about how to reproduce this? What OS version did you observe it on? Did you observe it on multiple versions?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1217,2021-04-21T13:59:05Z,2021-04-26T13:47:59Z,2021-06-16T06:42:36Z,MERGED,True,1,1,1,https://github.com/skvl,libdrakvuf: fix check return context,2,[],https://github.com/tklengyel/drakvuf/pull/1217,https://github.com/manorit2001,4,https://github.com/tklengyel/drakvuf/pull/1217#issuecomment-824123819,For issues #1218,"@skvl Interesting case, not sure what's going on. If the RSP is truly off-by-8 after the ret I would expect there would be crashes in the guest. Do you have more info about how to reproduce this? What OS version did you observe it on? Did you observe it on multiple versions?

I have noticed crashes on Windows 7 SP1 x64 with procmon plugin. Mostly, whenever I exit drakvuf the VM gets frozen. Don't know if it is related to this case but worth the mention ig",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1217,2021-04-21T13:59:05Z,2021-04-26T13:47:59Z,2021-06-16T06:42:36Z,MERGED,True,1,1,1,https://github.com/skvl,libdrakvuf: fix check return context,2,[],https://github.com/tklengyel/drakvuf/pull/1217,https://github.com/skvl,5,https://github.com/tklengyel/drakvuf/pull/1217#issuecomment-824123900,For issues #1218,"What OS version did you observe it on?

I have reproduced this on Windows 7 SP1 x64. Though I think it should be the same on other versions because Windows should not affect how RET behaves.

If the RSP is truly off-by-8 after the ret I would expect there would be crashes in the gues

I'm not sure that I understand You - my English is far from ideal :)
On function enter one could see the stack like this:
+0x10 | home space |
+0x08 | home space |
+0x00 | ret addr   | <- RSP

After RET execution RSP would pop the ret addr from stack. In such a way the new value would become 8 bytes above the old one for x64 and 4 bytes above for x86.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1217,2021-04-21T13:59:05Z,2021-04-26T13:47:59Z,2021-06-16T06:42:36Z,MERGED,True,1,1,1,https://github.com/skvl,libdrakvuf: fix check return context,2,[],https://github.com/tklengyel/drakvuf/pull/1217,https://github.com/skvl,6,https://github.com/tklengyel/drakvuf/pull/1217#issuecomment-824132768,For issues #1218,"@manorit2001 thanks.
This could be related. If procmon setup some return hook and doesn't handle it this could lead to BSOD on INT3 re-injection. Though I'm not sure about this.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1217,2021-04-21T13:59:05Z,2021-04-26T13:47:59Z,2021-06-16T06:42:36Z,MERGED,True,1,1,1,https://github.com/skvl,libdrakvuf: fix check return context,2,[],https://github.com/tklengyel/drakvuf/pull/1217,https://github.com/manorit2001,7,https://github.com/tklengyel/drakvuf/pull/1217#issuecomment-824151566,For issues #1218,"This could be related. If procmon setup some return hook and doesn't handle it this could lead to BSOD on INT3 re-injection. Though I'm not sure about this.

ah, glad to be of help :)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1217,2021-04-21T13:59:05Z,2021-04-26T13:47:59Z,2021-06-16T06:42:36Z,MERGED,True,1,1,1,https://github.com/skvl,libdrakvuf: fix check return context,2,[],https://github.com/tklengyel/drakvuf/pull/1217,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/1217#issuecomment-824743084,For issues #1218,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1217,2021-04-21T13:59:05Z,2021-04-26T13:47:59Z,2021-06-16T06:42:36Z,MERGED,True,1,1,1,https://github.com/skvl,libdrakvuf: fix check return context,2,[],https://github.com/tklengyel/drakvuf/pull/1217,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/1217#issuecomment-824743586,For issues #1218,@skvl Could you remove that comment and open an issue instead so we can track it? In the interim I think merging the small change would likely be fine.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1217,2021-04-21T13:59:05Z,2021-04-26T13:47:59Z,2021-06-16T06:42:36Z,MERGED,True,1,1,1,https://github.com/skvl,libdrakvuf: fix check return context,2,[],https://github.com/tklengyel/drakvuf/pull/1217,https://github.com/skvl,10,https://github.com/tklengyel/drakvuf/pull/1217#issuecomment-825486030,For issues #1218,@tklengyel do you mean the whole comment on lines 464-477? Or do you mean the last lines of the comment on lines 474-476?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1217,2021-04-21T13:59:05Z,2021-04-26T13:47:59Z,2021-06-16T06:42:36Z,MERGED,True,1,1,1,https://github.com/skvl,libdrakvuf: fix check return context,2,[],https://github.com/tklengyel/drakvuf/pull/1217,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/1217#issuecomment-826013352,For issues #1218,The whole comment block in 464-477,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1217,2021-04-21T13:59:05Z,2021-04-26T13:47:59Z,2021-06-16T06:42:36Z,MERGED,True,1,1,1,https://github.com/skvl,libdrakvuf: fix check return context,2,[],https://github.com/tklengyel/drakvuf/pull/1217,https://github.com/skvl,12,https://github.com/tklengyel/drakvuf/pull/1217#issuecomment-826571100,For issues #1218,Done,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1217,2021-04-21T13:59:05Z,2021-04-26T13:47:59Z,2021-06-16T06:42:36Z,MERGED,True,1,1,1,https://github.com/skvl,libdrakvuf: fix check return context,2,[],https://github.com/tklengyel/drakvuf/pull/1217,https://github.com/tklengyel,13,https://github.com/tklengyel/drakvuf/pull/1217#issuecomment-826805907,For issues #1218,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1220,2021-05-11T16:42:16Z,2021-05-11T16:44:49Z,2021-05-11T16:55:28Z,MERGED,True,1,1,1,https://github.com/chivay,package: Update Xen command line,1,[],https://github.com/tklengyel/drakvuf/pull/1220,https://github.com/chivay,1,https://github.com/tklengyel/drakvuf/pull/1220,Update Xen command line to match the one used on GitHub pages.,Update Xen command line to match the one used on GitHub pages.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1220,2021-05-11T16:42:16Z,2021-05-11T16:44:49Z,2021-05-11T16:55:28Z,MERGED,True,1,1,1,https://github.com/chivay,package: Update Xen command line,1,[],https://github.com/tklengyel/drakvuf/pull/1220,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1220#issuecomment-838806947,Update Xen command line to match the one used on GitHub pages.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1222,2021-05-20T13:11:10Z,2021-05-20T16:26:36Z,2021-05-20T16:26:38Z,MERGED,True,2,3,1,https://github.com/tklengyel,Use ACCESS_CONTEXT in memdump,1,[],https://github.com/tklengyel/drakvuf/pull/1222,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1222,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1223,2021-05-21T08:49:14Z,2021-05-21T14:03:54Z,2021-05-21T14:13:40Z,CLOSED,False,24,45,1,https://github.com/disaykin,Deduplicate some usermode hooking code,1,[],https://github.com/tklengyel/drakvuf/pull/1223,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1223,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1223,2021-05-21T08:49:14Z,2021-05-21T14:03:54Z,2021-05-21T14:13:40Z,CLOSED,False,24,45,1,https://github.com/disaykin,Deduplicate some usermode hooking code,1,[],https://github.com/tklengyel/drakvuf/pull/1223,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1223#issuecomment-845790378,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1223,2021-05-21T08:49:14Z,2021-05-21T14:03:54Z,2021-05-21T14:13:40Z,CLOSED,False,24,45,1,https://github.com/disaykin,Deduplicate some usermode hooking code,1,[],https://github.com/tklengyel/drakvuf/pull/1223,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1223#issuecomment-845851907,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1223,2021-05-21T08:49:14Z,2021-05-21T14:03:54Z,2021-05-21T14:13:40Z,CLOSED,False,24,45,1,https://github.com/disaykin,Deduplicate some usermode hooking code,1,[],https://github.com/tklengyel/drakvuf/pull/1223,https://github.com/BonusPlay,4,https://github.com/tklengyel/drakvuf/pull/1223#issuecomment-845922597,,I don't like the fact that in this pr we have perform_hooking and do_hooking functions. Something has to give in.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1223,2021-05-21T08:49:14Z,2021-05-21T14:03:54Z,2021-05-21T14:13:40Z,CLOSED,False,24,45,1,https://github.com/disaykin,Deduplicate some usermode hooking code,1,[],https://github.com/tklengyel/drakvuf/pull/1223,https://github.com/disaykin,5,https://github.com/tklengyel/drakvuf/pull/1223#issuecomment-845979706,,I unintentionaly closes this PR and can not reopen it. I create #1224 instead.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1224,2021-05-21T14:12:39Z,2021-05-25T11:46:00Z,2021-05-25T14:28:01Z,MERGED,True,26,45,2,https://github.com/disaykin,Deduplicate dll hooking code,2,[],https://github.com/tklengyel/drakvuf/pull/1224,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1224,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1224,2021-05-21T14:12:39Z,2021-05-25T11:46:00Z,2021-05-25T14:28:01Z,MERGED,True,26,45,2,https://github.com/disaykin,Deduplicate dll hooking code,2,[],https://github.com/tklengyel/drakvuf/pull/1224,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1224#issuecomment-845979045,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1224,2021-05-21T14:12:39Z,2021-05-25T11:46:00Z,2021-05-25T14:28:01Z,MERGED,True,26,45,2,https://github.com/disaykin,Deduplicate dll hooking code,2,[],https://github.com/tklengyel/drakvuf/pull/1224,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1224#issuecomment-845998770,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1224,2021-05-21T14:12:39Z,2021-05-25T11:46:00Z,2021-05-25T14:28:01Z,MERGED,True,26,45,2,https://github.com/disaykin,Deduplicate dll hooking code,2,[],https://github.com/tklengyel/drakvuf/pull/1224,https://github.com/disaykin,4,https://github.com/tklengyel/drakvuf/pull/1224#issuecomment-846821339,,@tklengyel I fixed the installation of the dependencies when building the container-compile stage.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1224,2021-05-21T14:12:39Z,2021-05-25T11:46:00Z,2021-05-25T14:28:01Z,MERGED,True,26,45,2,https://github.com/disaykin,Deduplicate dll hooking code,2,[],https://github.com/tklengyel/drakvuf/pull/1224,https://github.com/disaykin,5,https://github.com/tklengyel/drakvuf/pull/1224#issuecomment-846865517,,CC      pc-bios/optionrom/pvh_main.o BUILD   pc-bios/optionrom/multiboot.img ld: Error: unable to disambiguate: -no-pie (did you mean --no-pie ?) make[1]: *** [Makefile:53: multiboot.img] Error 1 make: *** [Makefile:576: pc-bios/optionrom/all] Error 2 make: *** Waiting for unfinished jobs.... make: Leaving directory '/__w/drakvuf/drakvuf/xen/tools/qemu-xen-build',True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1224,2021-05-21T14:12:39Z,2021-05-25T11:46:00Z,2021-05-25T14:28:01Z,MERGED,True,26,45,2,https://github.com/disaykin,Deduplicate dll hooking code,2,[],https://github.com/tklengyel/drakvuf/pull/1224,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1224#issuecomment-847009767,,"@disaykin That's safe to ignore, probably just a compiler update that broke the Xen build in the rolling Ubuntu image.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1224,2021-05-21T14:12:39Z,2021-05-25T11:46:00Z,2021-05-25T14:28:01Z,MERGED,True,26,45,2,https://github.com/disaykin,Deduplicate dll hooking code,2,[],https://github.com/tklengyel/drakvuf/pull/1224,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/1224#issuecomment-847009920,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1224,2021-05-21T14:12:39Z,2021-05-25T11:46:00Z,2021-05-25T14:28:01Z,MERGED,True,26,45,2,https://github.com/disaykin,Deduplicate dll hooking code,2,[],https://github.com/tklengyel/drakvuf/pull/1224,https://github.com/disaykin,8,https://github.com/tklengyel/drakvuf/pull/1224#issuecomment-847671705,,"@tklengyel Can you merge this request, or do I need to do something extra?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1224,2021-05-21T14:12:39Z,2021-05-25T11:46:00Z,2021-05-25T14:28:01Z,MERGED,True,26,45,2,https://github.com/disaykin,Deduplicate dll hooking code,2,[],https://github.com/tklengyel/drakvuf/pull/1224,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/1224#issuecomment-847779701,,"LGTM but would like a +1 from the libusermode authors too
/cc @icedevml @chivay @BonusPlay",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1225,2021-05-21T14:34:10Z,2021-05-27T16:41:42Z,2021-06-02T11:16:01Z,MERGED,True,43,24,2,https://github.com/disaykin,Fix libusermode trap removing on process termination,1,[],https://github.com/tklengyel/drakvuf/pull/1225,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1225,"Fixed a bug with removing usermode hooks from a process, which calls a termination of another process.","Fixed a bug with removing usermode hooks from a process, which calls a termination of another process.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1225,2021-05-21T14:34:10Z,2021-05-27T16:41:42Z,2021-06-02T11:16:01Z,MERGED,True,43,24,2,https://github.com/disaykin,Fix libusermode trap removing on process termination,1,[],https://github.com/tklengyel/drakvuf/pull/1225,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1225#issuecomment-845993442,"Fixed a bug with removing usermode hooks from a process, which calls a termination of another process.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1225,2021-05-21T14:34:10Z,2021-05-27T16:41:42Z,2021-06-02T11:16:01Z,MERGED,True,43,24,2,https://github.com/disaykin,Fix libusermode trap removing on process termination,1,[],https://github.com/tklengyel/drakvuf/pull/1225,https://github.com/disaykin,3,https://github.com/tklengyel/drakvuf/pull/1225#issuecomment-849630454,"Fixed a bug with removing usermode hooks from a process, which calls a termination of another process.",@BonusPlay @icedevml Please review the code,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1225,2021-05-21T14:34:10Z,2021-05-27T16:41:42Z,2021-06-02T11:16:01Z,MERGED,True,43,24,2,https://github.com/disaykin,Fix libusermode trap removing on process termination,1,[],https://github.com/tklengyel/drakvuf/pull/1225,https://github.com/BonusPlay,4,https://github.com/tklengyel/drakvuf/pull/1225#issuecomment-849659203,"Fixed a bug with removing usermode hooks from a process, which calls a termination of another process.","This shares plenty of changes with #1226, could you either split them entierly or merge them together?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1225,2021-05-21T14:34:10Z,2021-05-27T16:41:42Z,2021-06-02T11:16:01Z,MERGED,True,43,24,2,https://github.com/disaykin,Fix libusermode trap removing on process termination,1,[],https://github.com/tklengyel/drakvuf/pull/1225,https://github.com/disaykin,5,https://github.com/tklengyel/drakvuf/pull/1225#issuecomment-849709657,"Fixed a bug with removing usermode hooks from a process, which calls a termination of another process.",@BonusPlay I rebase MR #1226 on top of master after merging this PR.,True,{'THUMBS_UP': ['https://github.com/BonusPlay']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1225,2021-05-21T14:34:10Z,2021-05-27T16:41:42Z,2021-06-02T11:16:01Z,MERGED,True,43,24,2,https://github.com/disaykin,Fix libusermode trap removing on process termination,1,[],https://github.com/tklengyel/drakvuf/pull/1225,https://github.com/BonusPlay,6,https://github.com/tklengyel/drakvuf/pull/1225#issuecomment-849746081,"Fixed a bug with removing usermode hooks from a process, which calls a termination of another process.","The code looks good, question is why doing it by PID is better than by CR3? Does it fix some multi-threaded black magic?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1225,2021-05-21T14:34:10Z,2021-05-27T16:41:42Z,2021-06-02T11:16:01Z,MERGED,True,43,24,2,https://github.com/disaykin,Fix libusermode trap removing on process termination,1,[],https://github.com/tklengyel/drakvuf/pull/1225,https://github.com/disaykin,7,https://github.com/tklengyel/drakvuf/pull/1225#issuecomment-849757307,"Fixed a bug with removing usermode hooks from a process, which calls a termination of another process.",The only reason for this change is that I need the PID to glue the installed hooks with the NtTerminateProcess argument.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1225,2021-05-21T14:34:10Z,2021-05-27T16:41:42Z,2021-06-02T11:16:01Z,MERGED,True,43,24,2,https://github.com/disaykin,Fix libusermode trap removing on process termination,1,[],https://github.com/tklengyel/drakvuf/pull/1225,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/1225#issuecomment-849764865,"Fixed a bug with removing usermode hooks from a process, which calls a termination of another process.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1226,2021-05-21T14:39:27Z,2021-05-28T22:21:52Z,2021-06-02T11:13:55Z,MERGED,True,24,26,1,https://github.com/disaykin,Unify use of vmi_lock_guard in libusermode,1,[],https://github.com/tklengyel/drakvuf/pull/1226,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1226,Unify the use of vmi_lock_guard in libusermode,Unify the use of vmi_lock_guard in libusermode,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1226,2021-05-21T14:39:27Z,2021-05-28T22:21:52Z,2021-06-02T11:13:55Z,MERGED,True,24,26,1,https://github.com/disaykin,Unify use of vmi_lock_guard in libusermode,1,[],https://github.com/tklengyel/drakvuf/pull/1226,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1226#issuecomment-845998566,Unify the use of vmi_lock_guard in libusermode,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1226,2021-05-21T14:39:27Z,2021-05-28T22:21:52Z,2021-06-02T11:13:55Z,MERGED,True,24,26,1,https://github.com/disaykin,Unify use of vmi_lock_guard in libusermode,1,[],https://github.com/tklengyel/drakvuf/pull/1226,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1226#issuecomment-850415926,Unify the use of vmi_lock_guard in libusermode,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1226,2021-05-21T14:39:27Z,2021-05-28T22:21:52Z,2021-06-02T11:13:55Z,MERGED,True,24,26,1,https://github.com/disaykin,Unify use of vmi_lock_guard in libusermode,1,[],https://github.com/tklengyel/drakvuf/pull/1226,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1226#issuecomment-850523521,Unify the use of vmi_lock_guard in libusermode,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1227,2021-05-24T12:35:15Z,2021-05-24T16:37:54Z,2021-05-24T16:37:56Z,CLOSED,False,2,1,1,https://github.com/tklengyel,Specify ubuntu versions in container-compile ci script,1,[],https://github.com/tklengyel/drakvuf/pull/1227,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1227,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1228,2021-05-28T20:17:40Z,2021-05-29T11:12:55Z,2021-06-02T11:16:02Z,MERGED,True,3,13,2,https://github.com/disaykin,Do not use plugin_target_config_entry_t outside of the libusermode,1,[],https://github.com/tklengyel/drakvuf/pull/1228,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1228,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1228,2021-05-28T20:17:40Z,2021-05-29T11:12:55Z,2021-06-02T11:16:02Z,MERGED,True,3,13,2,https://github.com/disaykin,Do not use plugin_target_config_entry_t outside of the libusermode,1,[],https://github.com/tklengyel/drakvuf/pull/1228,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1228#issuecomment-850649751,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1228,2021-05-28T20:17:40Z,2021-05-29T11:12:55Z,2021-06-02T11:16:02Z,MERGED,True,3,13,2,https://github.com/disaykin,Do not use plugin_target_config_entry_t outside of the libusermode,1,[],https://github.com/tklengyel/drakvuf/pull/1228,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1228#issuecomment-850702445,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1229,2021-05-31T16:00:45Z,2021-06-01T11:55:10Z,2021-06-03T11:11:33Z,MERGED,True,27,0,4,https://github.com/jgru,Add the ability to access qemu monitor from drakvuf's core,1,[],https://github.com/tklengyel/drakvuf/pull/1229,https://github.com/jgru,1,https://github.com/tklengyel/drakvuf/pull/1229,"Dear Tamas,
I want to ask for incorporating this pull request to drakvuf. The changes were made in order to enable access to qemu's monitor interface by utilizing human-monitor-commands via the function libxl_qemu_monitor_command(...) of <libxl.h> , which can be accessed directly from drakvuf's core now, so that the aforementioned HMP-commands can be transferred to a specific Xen-guest by utilizing its xen_interface_t and domID.
This addition might be useful for future plugins to interact with the guests. (It might be especially useful for performing HID simulation, which is the task I currently work on.)
If you want to test the code by yourself, you could use the following snippet:
const char* in = ""info version""; 
char* out = NULL;
/* 
 * The following code effectively executes the command
 * { ""execute"": ""human-monitor-command"", ""arguments"": { ""command-line"": ""info version"" } }
 *  on the guest specified by the variable of type drakvuf_t.
 */
drakvuf_send_qemu_monitor_command(drakvuf, in, &out); // drakvuf has to be of type drakvuf_t
PRINT_DEBUG(""[QMPTEST] Result: %s"", out);
The following files were modified to accomplish the access of qemu's monitor:

src/libdrakvuf/drakvuf.c
src/libdrakvuf/libdrakvuf.h
src/xen_helper/xen_helper.c
src/xen_helper/xen_helper.h

Thanks already in advance for reviewing this PR.
Best regards
Jan","Dear Tamas,
I want to ask for incorporating this pull request to drakvuf. The changes were made in order to enable access to qemu's monitor interface by utilizing human-monitor-commands via the function libxl_qemu_monitor_command(...) of <libxl.h> , which can be accessed directly from drakvuf's core now, so that the aforementioned HMP-commands can be transferred to a specific Xen-guest by utilizing its xen_interface_t and domID.
This addition might be useful for future plugins to interact with the guests. (It might be especially useful for performing HID simulation, which is the task I currently work on.)
If you want to test the code by yourself, you could use the following snippet:
const char* in = ""info version""; 
char* out = NULL;
/* 
 * The following code effectively executes the command
 * { ""execute"": ""human-monitor-command"", ""arguments"": { ""command-line"": ""info version"" } }
 *  on the guest specified by the variable of type drakvuf_t.
 */
drakvuf_send_qemu_monitor_command(drakvuf, in, &out); // drakvuf has to be of type drakvuf_t
PRINT_DEBUG(""[QMPTEST] Result: %s"", out);
The following files were modified to accomplish the access of qemu's monitor:

src/libdrakvuf/drakvuf.c
src/libdrakvuf/libdrakvuf.h
src/xen_helper/xen_helper.c
src/xen_helper/xen_helper.h

Thanks already in advance for reviewing this PR.
Best regards
Jan",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1229,2021-05-31T16:00:45Z,2021-06-01T11:55:10Z,2021-06-03T11:11:33Z,MERGED,True,27,0,4,https://github.com/jgru,Add the ability to access qemu monitor from drakvuf's core,1,[],https://github.com/tklengyel/drakvuf/pull/1229,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1229#issuecomment-851575640,"Dear Tamas,
I want to ask for incorporating this pull request to drakvuf. The changes were made in order to enable access to qemu's monitor interface by utilizing human-monitor-commands via the function libxl_qemu_monitor_command(...) of <libxl.h> , which can be accessed directly from drakvuf's core now, so that the aforementioned HMP-commands can be transferred to a specific Xen-guest by utilizing its xen_interface_t and domID.
This addition might be useful for future plugins to interact with the guests. (It might be especially useful for performing HID simulation, which is the task I currently work on.)
If you want to test the code by yourself, you could use the following snippet:
const char* in = ""info version""; 
char* out = NULL;
/* 
 * The following code effectively executes the command
 * { ""execute"": ""human-monitor-command"", ""arguments"": { ""command-line"": ""info version"" } }
 *  on the guest specified by the variable of type drakvuf_t.
 */
drakvuf_send_qemu_monitor_command(drakvuf, in, &out); // drakvuf has to be of type drakvuf_t
PRINT_DEBUG(""[QMPTEST] Result: %s"", out);
The following files were modified to accomplish the access of qemu's monitor:

src/libdrakvuf/drakvuf.c
src/libdrakvuf/libdrakvuf.h
src/xen_helper/xen_helper.c
src/xen_helper/xen_helper.h

Thanks already in advance for reviewing this PR.
Best regards
Jan",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1229,2021-05-31T16:00:45Z,2021-06-01T11:55:10Z,2021-06-03T11:11:33Z,MERGED,True,27,0,4,https://github.com/jgru,Add the ability to access qemu monitor from drakvuf's core,1,[],https://github.com/tklengyel/drakvuf/pull/1229,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1229#issuecomment-851592253,"Dear Tamas,
I want to ask for incorporating this pull request to drakvuf. The changes were made in order to enable access to qemu's monitor interface by utilizing human-monitor-commands via the function libxl_qemu_monitor_command(...) of <libxl.h> , which can be accessed directly from drakvuf's core now, so that the aforementioned HMP-commands can be transferred to a specific Xen-guest by utilizing its xen_interface_t and domID.
This addition might be useful for future plugins to interact with the guests. (It might be especially useful for performing HID simulation, which is the task I currently work on.)
If you want to test the code by yourself, you could use the following snippet:
const char* in = ""info version""; 
char* out = NULL;
/* 
 * The following code effectively executes the command
 * { ""execute"": ""human-monitor-command"", ""arguments"": { ""command-line"": ""info version"" } }
 *  on the guest specified by the variable of type drakvuf_t.
 */
drakvuf_send_qemu_monitor_command(drakvuf, in, &out); // drakvuf has to be of type drakvuf_t
PRINT_DEBUG(""[QMPTEST] Result: %s"", out);
The following files were modified to accomplish the access of qemu's monitor:

src/libdrakvuf/drakvuf.c
src/libdrakvuf/libdrakvuf.h
src/xen_helper/xen_helper.c
src/xen_helper/xen_helper.h

Thanks already in advance for reviewing this PR.
Best regards
Jan","LGTM, just correct the issues spotted by CI and we can merge",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1229,2021-05-31T16:00:45Z,2021-06-01T11:55:10Z,2021-06-03T11:11:33Z,MERGED,True,27,0,4,https://github.com/jgru,Add the ability to access qemu monitor from drakvuf's core,1,[],https://github.com/tklengyel/drakvuf/pull/1229,https://github.com/jgru,4,https://github.com/tklengyel/drakvuf/pull/1229#issuecomment-851607688,"Dear Tamas,
I want to ask for incorporating this pull request to drakvuf. The changes were made in order to enable access to qemu's monitor interface by utilizing human-monitor-commands via the function libxl_qemu_monitor_command(...) of <libxl.h> , which can be accessed directly from drakvuf's core now, so that the aforementioned HMP-commands can be transferred to a specific Xen-guest by utilizing its xen_interface_t and domID.
This addition might be useful for future plugins to interact with the guests. (It might be especially useful for performing HID simulation, which is the task I currently work on.)
If you want to test the code by yourself, you could use the following snippet:
const char* in = ""info version""; 
char* out = NULL;
/* 
 * The following code effectively executes the command
 * { ""execute"": ""human-monitor-command"", ""arguments"": { ""command-line"": ""info version"" } }
 *  on the guest specified by the variable of type drakvuf_t.
 */
drakvuf_send_qemu_monitor_command(drakvuf, in, &out); // drakvuf has to be of type drakvuf_t
PRINT_DEBUG(""[QMPTEST] Result: %s"", out);
The following files were modified to accomplish the access of qemu's monitor:

src/libdrakvuf/drakvuf.c
src/libdrakvuf/libdrakvuf.h
src/xen_helper/xen_helper.c
src/xen_helper/xen_helper.h

Thanks already in advance for reviewing this PR.
Best regards
Jan","LGTM, just correct the issues spotted by CI and we can merge

Thanks for reviewing. I corrected the style-issues identified by CI, updated my PR and hope, that it builds now without any flaws.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1229,2021-05-31T16:00:45Z,2021-06-01T11:55:10Z,2021-06-03T11:11:33Z,MERGED,True,27,0,4,https://github.com/jgru,Add the ability to access qemu monitor from drakvuf's core,1,[],https://github.com/tklengyel/drakvuf/pull/1229,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1229#issuecomment-851620583,"Dear Tamas,
I want to ask for incorporating this pull request to drakvuf. The changes were made in order to enable access to qemu's monitor interface by utilizing human-monitor-commands via the function libxl_qemu_monitor_command(...) of <libxl.h> , which can be accessed directly from drakvuf's core now, so that the aforementioned HMP-commands can be transferred to a specific Xen-guest by utilizing its xen_interface_t and domID.
This addition might be useful for future plugins to interact with the guests. (It might be especially useful for performing HID simulation, which is the task I currently work on.)
If you want to test the code by yourself, you could use the following snippet:
const char* in = ""info version""; 
char* out = NULL;
/* 
 * The following code effectively executes the command
 * { ""execute"": ""human-monitor-command"", ""arguments"": { ""command-line"": ""info version"" } }
 *  on the guest specified by the variable of type drakvuf_t.
 */
drakvuf_send_qemu_monitor_command(drakvuf, in, &out); // drakvuf has to be of type drakvuf_t
PRINT_DEBUG(""[QMPTEST] Result: %s"", out);
The following files were modified to accomplish the access of qemu's monitor:

src/libdrakvuf/drakvuf.c
src/libdrakvuf/libdrakvuf.h
src/xen_helper/xen_helper.c
src/xen_helper/xen_helper.h

Thanks already in advance for reviewing this PR.
Best regards
Jan",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1230,2021-06-02T11:29:52Z,2021-06-02T22:33:00Z,2021-06-03T07:16:02Z,MERGED,True,5,13,1,https://github.com/disaykin,Remove user mode hooks on MmCleanProcessAddressSpace,1,[],https://github.com/tklengyel/drakvuf/pull/1230,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1230,"Remove user mode hooks on MmCleanProcessAddressSpace call instead of NtTerminateProcess

Eliminated race condition while terminating multi-threaded applications.
Fixed case when NtTerminateProcess fails (i.e. with not enough permissions),
and we already removed the hooks from actually non-terminated process.","Remove user mode hooks on MmCleanProcessAddressSpace call instead of NtTerminateProcess

Eliminated race condition while terminating multi-threaded applications.
Fixed case when NtTerminateProcess fails (i.e. with not enough permissions),
and we already removed the hooks from actually non-terminated process.",True,"{'THUMBS_UP': ['https://github.com/kscieslinski', 'https://github.com/tklengyel']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1230,2021-06-02T11:29:52Z,2021-06-02T22:33:00Z,2021-06-03T07:16:02Z,MERGED,True,5,13,1,https://github.com/disaykin,Remove user mode hooks on MmCleanProcessAddressSpace,1,[],https://github.com/tklengyel/drakvuf/pull/1230,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1230#issuecomment-852949343,"Remove user mode hooks on MmCleanProcessAddressSpace call instead of NtTerminateProcess

Eliminated race condition while terminating multi-threaded applications.
Fixed case when NtTerminateProcess fails (i.e. with not enough permissions),
and we already removed the hooks from actually non-terminated process.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1230,2021-06-02T11:29:52Z,2021-06-02T22:33:00Z,2021-06-03T07:16:02Z,MERGED,True,5,13,1,https://github.com/disaykin,Remove user mode hooks on MmCleanProcessAddressSpace,1,[],https://github.com/tklengyel/drakvuf/pull/1230,https://github.com/disaykin,3,https://github.com/tklengyel/drakvuf/pull/1230#issuecomment-853007042,"Remove user mode hooks on MmCleanProcessAddressSpace call instead of NtTerminateProcess

Eliminated race condition while terminating multi-threaded applications.
Fixed case when NtTerminateProcess fails (i.e. with not enough permissions),
and we already removed the hooks from actually non-terminated process.",@BonusPlay @icedevml FYI,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1230,2021-06-02T11:29:52Z,2021-06-02T22:33:00Z,2021-06-03T07:16:02Z,MERGED,True,5,13,1,https://github.com/disaykin,Remove user mode hooks on MmCleanProcessAddressSpace,1,[],https://github.com/tklengyel/drakvuf/pull/1230,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1230#issuecomment-853017951,"Remove user mode hooks on MmCleanProcessAddressSpace call instead of NtTerminateProcess

Eliminated race condition while terminating multi-threaded applications.
Fixed case when NtTerminateProcess fails (i.e. with not enough permissions),
and we already removed the hooks from actually non-terminated process.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1231,2021-06-08T07:27:59Z,2021-06-08T19:02:22Z,2021-06-08T19:02:23Z,MERGED,True,7,0,2,https://github.com/jgru,Add function to expose drakvuf_t's domID in libdrakvuf.h,1,[],https://github.com/tklengyel/drakvuf/pull/1231,https://github.com/jgru,1,https://github.com/tklengyel/drakvuf/pull/1231,"Dear Tamas,
this patch exposes drakvuf_t's member variable  domID by introducing a getter-function named drakvuf_get_dom_id(...) in libdrakvuf.h. The addition of this getter-function enables plugins to
retrieve the ID of the Xen guest of interest in a convenient way.
Diverging from my initial statement to use libvmi's vmi_get_vmid(...) I decided to expose the domID directly in libdrakvuf.h, since this seems to me to be a cleaner way than calling drakvuf_lock_and_get_vmi(..) and releasing it  afterwards.
To accomplish exposing the domID, I decided to typedef domid_t inside libdrakvuf.h, which is originally typedef'ed inside xen.h but not exposed anywhere. If you think, the getter-function should return a plain uint16_t to omit this repeated typedef, please let me know.
If there are any issues with the patch or if you disagree on this decision, please let me know.
Thanks already in advance for considering the patch and merging it eventually.
Best regards,
Jan
P.S.: Please excuse the temporary closure and reopening of this PR due to a compilation error, that I oversaw.","Dear Tamas,
this patch exposes drakvuf_t's member variable  domID by introducing a getter-function named drakvuf_get_dom_id(...) in libdrakvuf.h. The addition of this getter-function enables plugins to
retrieve the ID of the Xen guest of interest in a convenient way.
Diverging from my initial statement to use libvmi's vmi_get_vmid(...) I decided to expose the domID directly in libdrakvuf.h, since this seems to me to be a cleaner way than calling drakvuf_lock_and_get_vmi(..) and releasing it  afterwards.
To accomplish exposing the domID, I decided to typedef domid_t inside libdrakvuf.h, which is originally typedef'ed inside xen.h but not exposed anywhere. If you think, the getter-function should return a plain uint16_t to omit this repeated typedef, please let me know.
If there are any issues with the patch or if you disagree on this decision, please let me know.
Thanks already in advance for considering the patch and merging it eventually.
Best regards,
Jan
P.S.: Please excuse the temporary closure and reopening of this PR due to a compilation error, that I oversaw.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1231,2021-06-08T07:27:59Z,2021-06-08T19:02:22Z,2021-06-08T19:02:23Z,MERGED,True,7,0,2,https://github.com/jgru,Add function to expose drakvuf_t's domID in libdrakvuf.h,1,[],https://github.com/tklengyel/drakvuf/pull/1231,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1231#issuecomment-856528199,"Dear Tamas,
this patch exposes drakvuf_t's member variable  domID by introducing a getter-function named drakvuf_get_dom_id(...) in libdrakvuf.h. The addition of this getter-function enables plugins to
retrieve the ID of the Xen guest of interest in a convenient way.
Diverging from my initial statement to use libvmi's vmi_get_vmid(...) I decided to expose the domID directly in libdrakvuf.h, since this seems to me to be a cleaner way than calling drakvuf_lock_and_get_vmi(..) and releasing it  afterwards.
To accomplish exposing the domID, I decided to typedef domid_t inside libdrakvuf.h, which is originally typedef'ed inside xen.h but not exposed anywhere. If you think, the getter-function should return a plain uint16_t to omit this repeated typedef, please let me know.
If there are any issues with the patch or if you disagree on this decision, please let me know.
Thanks already in advance for considering the patch and merging it eventually.
Best regards,
Jan
P.S.: Please excuse the temporary closure and reopening of this PR due to a compilation error, that I oversaw.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1233,2021-06-10T22:52:46Z,2021-06-11T01:25:38Z,2021-06-11T01:25:39Z,MERGED,True,4,2,2,https://github.com/exescript,libinjector: fix potential null pointer dereferences,1,[],https://github.com/tklengyel/drakvuf/pull/1233,https://github.com/exescript,1,https://github.com/tklengyel/drakvuf/pull/1233,libinjector: fix potential null pointer dereferences of injected_pid parameter,libinjector: fix potential null pointer dereferences of injected_pid parameter,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1233,2021-06-10T22:52:46Z,2021-06-11T01:25:38Z,2021-06-11T01:25:39Z,MERGED,True,4,2,2,https://github.com/exescript,libinjector: fix potential null pointer dereferences,1,[],https://github.com/tklengyel/drakvuf/pull/1233,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1233#issuecomment-859136048,libinjector: fix potential null pointer dereferences of injected_pid parameter,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1233,2021-06-10T22:52:46Z,2021-06-11T01:25:38Z,2021-06-11T01:25:39Z,MERGED,True,4,2,2,https://github.com/exescript,libinjector: fix potential null pointer dereferences,1,[],https://github.com/tklengyel/drakvuf/pull/1233,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1233#issuecomment-859193272,libinjector: fix potential null pointer dereferences of injected_pid parameter,Thanks!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1234,2021-06-11T11:00:12Z,2021-06-13T18:51:25Z,2021-06-13T18:51:31Z,MERGED,True,83,3,5,https://github.com/archercreat,added msr trap support,2,[],https://github.com/tklengyel/drakvuf/pull/1234,https://github.com/archercreat,1,https://github.com/tklengyel/drakvuf/pull/1234,"Hello! I was surprised there were no MSR traps, so I added them :)","Hello! I was surprised there were no MSR traps, so I added them :)",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1234,2021-06-11T11:00:12Z,2021-06-13T18:51:25Z,2021-06-13T18:51:31Z,MERGED,True,83,3,5,https://github.com/archercreat,added msr trap support,2,[],https://github.com/tklengyel/drakvuf/pull/1234,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1234#issuecomment-859500308,"Hello! I was surprised there were no MSR traps, so I added them :)",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1234,2021-06-11T11:00:12Z,2021-06-13T18:51:25Z,2021-06-13T18:51:31Z,MERGED,True,83,3,5,https://github.com/archercreat,added msr trap support,2,[],https://github.com/tklengyel/drakvuf/pull/1234,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1234#issuecomment-859502300,"Hello! I was surprised there were no MSR traps, so I added them :)",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1234,2021-06-11T11:00:12Z,2021-06-13T18:51:25Z,2021-06-13T18:51:31Z,MERGED,True,83,3,5,https://github.com/archercreat,added msr trap support,2,[],https://github.com/tklengyel/drakvuf/pull/1234,https://github.com/archercreat,4,https://github.com/tklengyel/drakvuf/pull/1234#issuecomment-859546852,"Hello! I was surprised there were no MSR traps, so I added them :)",@tklengyel Fixed style issue.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1234,2021-06-11T11:00:12Z,2021-06-13T18:51:25Z,2021-06-13T18:51:31Z,MERGED,True,83,3,5,https://github.com/archercreat,added msr trap support,2,[],https://github.com/tklengyel/drakvuf/pull/1234,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1234#issuecomment-859708763,"Hello! I was surprised there were no MSR traps, so I added them :)",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1234,2021-06-11T11:00:12Z,2021-06-13T18:51:25Z,2021-06-13T18:51:31Z,MERGED,True,83,3,5,https://github.com/archercreat,added msr trap support,2,[],https://github.com/tklengyel/drakvuf/pull/1234,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1234#issuecomment-860254467,"Hello! I was surprised there were no MSR traps, so I added them :)",Thanks!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1235,2021-06-11T14:59:22Z,2021-06-11T23:35:40Z,2021-06-16T11:29:36Z,MERGED,True,39,0,2,https://github.com/exescript,Drakvuf write-file option,4,[],https://github.com/tklengyel/drakvuf/pull/1235,https://github.com/exescript,1,https://github.com/tklengyel/drakvuf/pull/1235,"Add --write-file command line option to inject a file into the running VM by using INJECT_METHOD_WRITE_FILE libinjector method.
Can be used multiple times to copy multiple files.
Syntax: drakvuf --writefile [src] [dst]
Copying is done earlier than -m method injection so you can write file into the VM before injecting it with createproc or others","Add --write-file command line option to inject a file into the running VM by using INJECT_METHOD_WRITE_FILE libinjector method.
Can be used multiple times to copy multiple files.
Syntax: drakvuf --writefile [src] [dst]
Copying is done earlier than -m method injection so you can write file into the VM before injecting it with createproc or others",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1235,2021-06-11T14:59:22Z,2021-06-11T23:35:40Z,2021-06-16T11:29:36Z,MERGED,True,39,0,2,https://github.com/exescript,Drakvuf write-file option,4,[],https://github.com/tklengyel/drakvuf/pull/1235,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1235#issuecomment-859642479,"Add --write-file command line option to inject a file into the running VM by using INJECT_METHOD_WRITE_FILE libinjector method.
Can be used multiple times to copy multiple files.
Syntax: drakvuf --writefile [src] [dst]
Copying is done earlier than -m method injection so you can write file into the VM before injecting it with createproc or others",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1235,2021-06-11T14:59:22Z,2021-06-11T23:35:40Z,2021-06-16T11:29:36Z,MERGED,True,39,0,2,https://github.com/exescript,Drakvuf write-file option,4,[],https://github.com/tklengyel/drakvuf/pull/1235,https://github.com/exescript,3,https://github.com/tklengyel/drakvuf/pull/1235#issuecomment-859648671,"Add --write-file command line option to inject a file into the running VM by using INJECT_METHOD_WRITE_FILE libinjector method.
Can be used multiple times to copy multiple files.
Syntax: drakvuf --writefile [src] [dst]
Copying is done earlier than -m method injection so you can write file into the VM before injecting it with createproc or others",It's a little strange that your ubuntu:bionic pipeline doesn't have c++17 std::filesystem. Why? :),True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1235,2021-06-11T14:59:22Z,2021-06-11T23:35:40Z,2021-06-16T11:29:36Z,MERGED,True,39,0,2,https://github.com/exescript,Drakvuf write-file option,4,[],https://github.com/tklengyel/drakvuf/pull/1235,https://github.com/BonusPlay,4,https://github.com/tklengyel/drakvuf/pull/1235#issuecomment-859676934,"Add --write-file command line option to inject a file into the running VM by using INJECT_METHOD_WRITE_FILE libinjector method.
Can be used multiple times to copy multiple files.
Syntax: drakvuf --writefile [src] [dst]
Copying is done earlier than -m method injection so you can write file into the VM before injecting it with createproc or others",Isn't this already implemented in injector?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1235,2021-06-11T14:59:22Z,2021-06-11T23:35:40Z,2021-06-16T11:29:36Z,MERGED,True,39,0,2,https://github.com/exescript,Drakvuf write-file option,4,[],https://github.com/tklengyel/drakvuf/pull/1235,https://github.com/exescript,5,https://github.com/tklengyel/drakvuf/pull/1235#issuecomment-859691169,"Add --write-file command line option to inject a file into the running VM by using INJECT_METHOD_WRITE_FILE libinjector method.
Can be used multiple times to copy multiple files.
Syntax: drakvuf --writefile [src] [dst]
Copying is done earlier than -m method injection so you can write file into the VM before injecting it with createproc or others","Isn't this already implemented in injector?

First of all yes, it is implemented inside injector that is the separate binary file.
But...

It is much more comfortable to use one binary to make injection of some host sample file.
There will be no dublicate libvmi initialization and other overheads while using it.
The most important: it can be modified in future (and it will be) to use the only one libinjector chain to write the file and to inject it's execution. I think it's important.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1235,2021-06-11T14:59:22Z,2021-06-11T23:35:40Z,2021-06-16T11:29:36Z,MERGED,True,39,0,2,https://github.com/exescript,Drakvuf write-file option,4,[],https://github.com/tklengyel/drakvuf/pull/1235,https://github.com/BonusPlay,6,https://github.com/tklengyel/drakvuf/pull/1235#issuecomment-859707340,"Add --write-file command line option to inject a file into the running VM by using INJECT_METHOD_WRITE_FILE libinjector method.
Can be used multiple times to copy multiple files.
Syntax: drakvuf --writefile [src] [dst]
Copying is done earlier than -m method injection so you can write file into the VM before injecting it with createproc or others","I believe that separating injector and drakvuf is a good idea:

creating one massive all-knowing binary results in longer build times, since building one part of the project takes less than building everything (well, maybe it's not the best argument since drakvuf uses autotools, but in theory it could be done)
too many cmdline arguments for one binary
regarding ""double libvmi init"" - pass kgpd to speed it up greatly
regarding one libinjector chain - I'm all for it. Current libinjector isn't perfect and needs a lot of love. You can modify it directly there :)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1235,2021-06-11T14:59:22Z,2021-06-11T23:35:40Z,2021-06-16T11:29:36Z,MERGED,True,39,0,2,https://github.com/exescript,Drakvuf write-file option,4,[],https://github.com/tklengyel/drakvuf/pull/1235,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/1235#issuecomment-859711578,"Add --write-file command line option to inject a file into the running VM by using INJECT_METHOD_WRITE_FILE libinjector method.
Can be used multiple times to copy multiple files.
Syntax: drakvuf --writefile [src] [dst]
Copying is done earlier than -m method injection so you can write file into the VM before injecting it with createproc or others",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1235,2021-06-11T14:59:22Z,2021-06-11T23:35:40Z,2021-06-16T11:29:36Z,MERGED,True,39,0,2,https://github.com/exescript,Drakvuf write-file option,4,[],https://github.com/tklengyel/drakvuf/pull/1235,https://github.com/exescript,8,https://github.com/tklengyel/drakvuf/pull/1235#issuecomment-859714784,"Add --write-file command line option to inject a file into the running VM by using INJECT_METHOD_WRITE_FILE libinjector method.
Can be used multiple times to copy multiple files.
Syntax: drakvuf --writefile [src] [dst]
Copying is done earlier than -m method injection so you can write file into the VM before injecting it with createproc or others","I believe that separating injector and drakvuf is a good idea:
1. creating one massive all-knowing binary results in longer build times, since building one part of the project takes less than building everything (well, maybe it's not the best argument since drakvuf uses autotools, but in theory it could be done)

2. too many cmdline arguments for one binary

3. regarding ""double libvmi init"" - pass kgpd to speed it up greatly

4. regarding one libinjector chain - I'm all for it. Current libinjector isn't perfect and needs a lot of love. You can modify it directly there :)


I agree with almost everything you say. But we can do it without serious complications at this time. Don't think we make it longer to build and we use only one command line argument.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1235,2021-06-11T14:59:22Z,2021-06-11T23:35:40Z,2021-06-16T11:29:36Z,MERGED,True,39,0,2,https://github.com/exescript,Drakvuf write-file option,4,[],https://github.com/tklengyel/drakvuf/pull/1235,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/1235#issuecomment-859717753,"Add --write-file command line option to inject a file into the running VM by using INJECT_METHOD_WRITE_FILE libinjector method.
Can be used multiple times to copy multiple files.
Syntax: drakvuf --writefile [src] [dst]
Copying is done earlier than -m method injection so you can write file into the VM before injecting it with createproc or others",I think it's fine to expose the same options via the drakvuf binary that the injector one has. Just use whichever makes sense for your setup.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1235,2021-06-11T14:59:22Z,2021-06-11T23:35:40Z,2021-06-16T11:29:36Z,MERGED,True,39,0,2,https://github.com/exescript,Drakvuf write-file option,4,[],https://github.com/tklengyel/drakvuf/pull/1235,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/1235#issuecomment-859957450,"Add --write-file command line option to inject a file into the running VM by using INJECT_METHOD_WRITE_FILE libinjector method.
Can be used multiple times to copy multiple files.
Syntax: drakvuf --writefile [src] [dst]
Copying is done earlier than -m method injection so you can write file into the VM before injecting it with createproc or others","LGTM, I'm just going to remove the Bionic deb build test as Bionic is quite old at this point.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1235,2021-06-11T14:59:22Z,2021-06-11T23:35:40Z,2021-06-16T11:29:36Z,MERGED,True,39,0,2,https://github.com/exescript,Drakvuf write-file option,4,[],https://github.com/tklengyel/drakvuf/pull/1235,https://github.com/exescript,11,https://github.com/tklengyel/drakvuf/pull/1235#issuecomment-862291826,"Add --write-file command line option to inject a file into the running VM by using INJECT_METHOD_WRITE_FILE libinjector method.
Can be used multiple times to copy multiple files.
Syntax: drakvuf --writefile [src] [dst]
Copying is done earlier than -m method injection so you can write file into the VM before injecting it with createproc or others","https://askubuntu.com/questions/1256440/how-to-get-libstdc-with-c17-filesystem-headers-on-ubuntu-18-bionic
That's about filesystem stdc++17 header in Bionic
You can install this on bionic for the pipeline:
sudo add-apt-repository ppa:ubuntu-toolchain-r/test
sudo apt update
sudo apt install gcc-9 g++-9

(not sure if it works with clang++)
Or alternatively I can add ifdef's inside the code and then you'll have to add -lstdc++fs as the last compiler flag",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1235,2021-06-11T14:59:22Z,2021-06-11T23:35:40Z,2021-06-16T11:29:36Z,MERGED,True,39,0,2,https://github.com/exescript,Drakvuf write-file option,4,[],https://github.com/tklengyel/drakvuf/pull/1235,https://github.com/tklengyel,12,https://github.com/tklengyel/drakvuf/pull/1235#issuecomment-862301375,"Add --write-file command line option to inject a file into the running VM by using INJECT_METHOD_WRITE_FILE libinjector method.
Can be used multiple times to copy multiple files.
Syntax: drakvuf --writefile [src] [dst]
Copying is done earlier than -m method injection so you can write file into the VM before injecting it with createproc or others","Not really important now, deprecating bionic tests was in order anyway since its an old distro with only a year of support left.",True,{'THUMBS_UP': ['https://github.com/exescript']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1236,2021-06-11T23:28:46Z,2021-06-11T23:36:07Z,2021-06-11T23:36:10Z,MERGED,True,0,1,1,https://github.com/tklengyel,Remove bionic from deb build matrix ci,1,[],https://github.com/tklengyel/drakvuf/pull/1236,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1236,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1237,2021-06-12T13:09:15Z,2021-06-14T15:25:38Z,2021-06-14T15:25:53Z,MERGED,True,845,2,8,https://github.com/jgru,Add `hiddump` - a utility to record HID events ,1,[],https://github.com/tklengyel/drakvuf/pull/1237,https://github.com/jgru,1,https://github.com/tklengyel/drakvuf/pull/1237,"Dear Tamas,
this PR adds a utility program named hiddump to the tools-directory. hiddump captures HID events and stores relative and normalized versions of those events in a file, which can then serve later as a template for sending HID events to an analysis guest.
Inner working of the tool
To record those events, the input subsystem of the Linux kernel is utilized. The hiddump reads input_event-structs from one or multiple event files under /dev/input/, which are continuosly polled during the recording period. The timing information, which is provided in the form of timeval-structs, is converted to a relative timestamp starting at the beginning of the recording. If the event houses coordinates, those are mapped to a value range, which qemu uses in its monitor protocol. Afterwards the events are dumped to stdout or written to a specified file in binary representation. By using the input event format of the Linux input subsystem the tool builds upon a proven format and a stable interface.
Usage
The tool can be build with the command
gcc -o hiddump hiddump.c -lX11.
Edit: The compilation of the tool is now hooked into the automake-system. It is performed, if the X11-library (-lX11) is available.
hiddump can then be used as follows:
    usage: ./hiddump [-h] [-e /dev/input/eventX] [file]

    A utility to record HID events

    positional arguments:
      file          binary file to store events

    optional arguments:
      -h                    show this help message and exit
      -e <eventfile>        event file to read events from;
                multiple event files can be specifed -e file1 -e file2 (max. 3)
      -d <seconds>          time frame in seconds to record events

    examples:
      # capture mouse events infinitely
      ./hiddump > events.in

      # read from specified event files for 20 secs
      ./hiddump -e /dev/input/event7 -e /dev/input/event16 -d 20 events.bin

    If no output file is specified as a positional argument, all events will be sent to stdout.
    If no event file is specified via '-e', the default event file for mouse events will be used.
    To capture events of a specific input device, use '-e' after retrieving the relevant event file via

        ls -l /dev/input/by-id | grep -E ""mouse|kbd""

    or alternatively

        cat /proc/bus/input/devices | grep -E ""mouse|kdb""

File format
To preserve the relative and normalized HID events for later use, the input_event-structs are stored sequentially in a binary file, whereas each entry consists of the following fields:
struct input_event {
	struct timeval time;     // relative to the start
	unsigned short type;     // EV_REL, EV_KEY, etc.
	unsigned short code;     // REL_X, BTN_LEFT, etc.
	unsigned int value;      // Coordinates, button down, etc.
};
In order to be able to identify a file as a valid HID template file, which was created by hiddump and contains HID events in the specified format, a short header is prepended at the beginning of the file. The header consists of 12 bytes in total. The magic number is derived from the string 'DRAK'.
| Symbol                    | Size  | Content             |
|---------------------------+-------+---------------------|
| Magic number              | DWORD | 0xCB 0xC1 0xD2 0xC4 |
| ASCII identifier ('DRAK') | DWORD | 0x44 0x52 0x41 0x4b |
| Version information       | DWORD | 0x01 0x00 0x00 0x00 |

I am planning to feed the output of the newly added tool hiddump, which follows the a/m file format, into the plugin for simulating human interaction, on which I am working actively.
Thank you already in advance for considering this pull request.
If you see any general issues with the concept or the code, please let me know.
Best regards,
Jan","Dear Tamas,
this PR adds a utility program named hiddump to the tools-directory. hiddump captures HID events and stores relative and normalized versions of those events in a file, which can then serve later as a template for sending HID events to an analysis guest.
Inner working of the tool
To record those events, the input subsystem of the Linux kernel is utilized. The hiddump reads input_event-structs from one or multiple event files under /dev/input/, which are continuosly polled during the recording period. The timing information, which is provided in the form of timeval-structs, is converted to a relative timestamp starting at the beginning of the recording. If the event houses coordinates, those are mapped to a value range, which qemu uses in its monitor protocol. Afterwards the events are dumped to stdout or written to a specified file in binary representation. By using the input event format of the Linux input subsystem the tool builds upon a proven format and a stable interface.
Usage
The tool can be build with the command
gcc -o hiddump hiddump.c -lX11.
Edit: The compilation of the tool is now hooked into the automake-system. It is performed, if the X11-library (-lX11) is available.
hiddump can then be used as follows:
    usage: ./hiddump [-h] [-e /dev/input/eventX] [file]

    A utility to record HID events

    positional arguments:
      file          binary file to store events

    optional arguments:
      -h                    show this help message and exit
      -e <eventfile>        event file to read events from;
                multiple event files can be specifed -e file1 -e file2 (max. 3)
      -d <seconds>          time frame in seconds to record events

    examples:
      # capture mouse events infinitely
      ./hiddump > events.in

      # read from specified event files for 20 secs
      ./hiddump -e /dev/input/event7 -e /dev/input/event16 -d 20 events.bin

    If no output file is specified as a positional argument, all events will be sent to stdout.
    If no event file is specified via '-e', the default event file for mouse events will be used.
    To capture events of a specific input device, use '-e' after retrieving the relevant event file via

        ls -l /dev/input/by-id | grep -E ""mouse|kbd""

    or alternatively

        cat /proc/bus/input/devices | grep -E ""mouse|kdb""

File format
To preserve the relative and normalized HID events for later use, the input_event-structs are stored sequentially in a binary file, whereas each entry consists of the following fields:
struct input_event {
	struct timeval time;     // relative to the start
	unsigned short type;     // EV_REL, EV_KEY, etc.
	unsigned short code;     // REL_X, BTN_LEFT, etc.
	unsigned int value;      // Coordinates, button down, etc.
};
In order to be able to identify a file as a valid HID template file, which was created by hiddump and contains HID events in the specified format, a short header is prepended at the beginning of the file. The header consists of 12 bytes in total. The magic number is derived from the string 'DRAK'.
| Symbol                    | Size  | Content             |
|---------------------------+-------+---------------------|
| Magic number              | DWORD | 0xCB 0xC1 0xD2 0xC4 |
| ASCII identifier ('DRAK') | DWORD | 0x44 0x52 0x41 0x4b |
| Version information       | DWORD | 0x01 0x00 0x00 0x00 |

I am planning to feed the output of the newly added tool hiddump, which follows the a/m file format, into the plugin for simulating human interaction, on which I am working actively.
Thank you already in advance for considering this pull request.
If you see any general issues with the concept or the code, please let me know.
Best regards,
Jan",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1237,2021-06-12T13:09:15Z,2021-06-14T15:25:38Z,2021-06-14T15:25:53Z,MERGED,True,845,2,8,https://github.com/jgru,Add `hiddump` - a utility to record HID events ,1,[],https://github.com/tklengyel/drakvuf/pull/1237,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1237#issuecomment-860051389,"Dear Tamas,
this PR adds a utility program named hiddump to the tools-directory. hiddump captures HID events and stores relative and normalized versions of those events in a file, which can then serve later as a template for sending HID events to an analysis guest.
Inner working of the tool
To record those events, the input subsystem of the Linux kernel is utilized. The hiddump reads input_event-structs from one or multiple event files under /dev/input/, which are continuosly polled during the recording period. The timing information, which is provided in the form of timeval-structs, is converted to a relative timestamp starting at the beginning of the recording. If the event houses coordinates, those are mapped to a value range, which qemu uses in its monitor protocol. Afterwards the events are dumped to stdout or written to a specified file in binary representation. By using the input event format of the Linux input subsystem the tool builds upon a proven format and a stable interface.
Usage
The tool can be build with the command
gcc -o hiddump hiddump.c -lX11.
Edit: The compilation of the tool is now hooked into the automake-system. It is performed, if the X11-library (-lX11) is available.
hiddump can then be used as follows:
    usage: ./hiddump [-h] [-e /dev/input/eventX] [file]

    A utility to record HID events

    positional arguments:
      file          binary file to store events

    optional arguments:
      -h                    show this help message and exit
      -e <eventfile>        event file to read events from;
                multiple event files can be specifed -e file1 -e file2 (max. 3)
      -d <seconds>          time frame in seconds to record events

    examples:
      # capture mouse events infinitely
      ./hiddump > events.in

      # read from specified event files for 20 secs
      ./hiddump -e /dev/input/event7 -e /dev/input/event16 -d 20 events.bin

    If no output file is specified as a positional argument, all events will be sent to stdout.
    If no event file is specified via '-e', the default event file for mouse events will be used.
    To capture events of a specific input device, use '-e' after retrieving the relevant event file via

        ls -l /dev/input/by-id | grep -E ""mouse|kbd""

    or alternatively

        cat /proc/bus/input/devices | grep -E ""mouse|kdb""

File format
To preserve the relative and normalized HID events for later use, the input_event-structs are stored sequentially in a binary file, whereas each entry consists of the following fields:
struct input_event {
	struct timeval time;     // relative to the start
	unsigned short type;     // EV_REL, EV_KEY, etc.
	unsigned short code;     // REL_X, BTN_LEFT, etc.
	unsigned int value;      // Coordinates, button down, etc.
};
In order to be able to identify a file as a valid HID template file, which was created by hiddump and contains HID events in the specified format, a short header is prepended at the beginning of the file. The header consists of 12 bytes in total. The magic number is derived from the string 'DRAK'.
| Symbol                    | Size  | Content             |
|---------------------------+-------+---------------------|
| Magic number              | DWORD | 0xCB 0xC1 0xD2 0xC4 |
| ASCII identifier ('DRAK') | DWORD | 0x44 0x52 0x41 0x4b |
| Version information       | DWORD | 0x01 0x00 0x00 0x00 |

I am planning to feed the output of the newly added tool hiddump, which follows the a/m file format, into the plugin for simulating human interaction, on which I am working actively.
Thank you already in advance for considering this pull request.
If you see any general issues with the concept or the code, please let me know.
Best regards,
Jan",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1237,2021-06-12T13:09:15Z,2021-06-14T15:25:38Z,2021-06-14T15:25:53Z,MERGED,True,845,2,8,https://github.com/jgru,Add `hiddump` - a utility to record HID events ,1,[],https://github.com/tklengyel/drakvuf/pull/1237,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1237#issuecomment-860077388,"Dear Tamas,
this PR adds a utility program named hiddump to the tools-directory. hiddump captures HID events and stores relative and normalized versions of those events in a file, which can then serve later as a template for sending HID events to an analysis guest.
Inner working of the tool
To record those events, the input subsystem of the Linux kernel is utilized. The hiddump reads input_event-structs from one or multiple event files under /dev/input/, which are continuosly polled during the recording period. The timing information, which is provided in the form of timeval-structs, is converted to a relative timestamp starting at the beginning of the recording. If the event houses coordinates, those are mapped to a value range, which qemu uses in its monitor protocol. Afterwards the events are dumped to stdout or written to a specified file in binary representation. By using the input event format of the Linux input subsystem the tool builds upon a proven format and a stable interface.
Usage
The tool can be build with the command
gcc -o hiddump hiddump.c -lX11.
Edit: The compilation of the tool is now hooked into the automake-system. It is performed, if the X11-library (-lX11) is available.
hiddump can then be used as follows:
    usage: ./hiddump [-h] [-e /dev/input/eventX] [file]

    A utility to record HID events

    positional arguments:
      file          binary file to store events

    optional arguments:
      -h                    show this help message and exit
      -e <eventfile>        event file to read events from;
                multiple event files can be specifed -e file1 -e file2 (max. 3)
      -d <seconds>          time frame in seconds to record events

    examples:
      # capture mouse events infinitely
      ./hiddump > events.in

      # read from specified event files for 20 secs
      ./hiddump -e /dev/input/event7 -e /dev/input/event16 -d 20 events.bin

    If no output file is specified as a positional argument, all events will be sent to stdout.
    If no event file is specified via '-e', the default event file for mouse events will be used.
    To capture events of a specific input device, use '-e' after retrieving the relevant event file via

        ls -l /dev/input/by-id | grep -E ""mouse|kbd""

    or alternatively

        cat /proc/bus/input/devices | grep -E ""mouse|kdb""

File format
To preserve the relative and normalized HID events for later use, the input_event-structs are stored sequentially in a binary file, whereas each entry consists of the following fields:
struct input_event {
	struct timeval time;     // relative to the start
	unsigned short type;     // EV_REL, EV_KEY, etc.
	unsigned short code;     // REL_X, BTN_LEFT, etc.
	unsigned int value;      // Coordinates, button down, etc.
};
In order to be able to identify a file as a valid HID template file, which was created by hiddump and contains HID events in the specified format, a short header is prepended at the beginning of the file. The header consists of 12 bytes in total. The magic number is derived from the string 'DRAK'.
| Symbol                    | Size  | Content             |
|---------------------------+-------+---------------------|
| Magic number              | DWORD | 0xCB 0xC1 0xD2 0xC4 |
| ASCII identifier ('DRAK') | DWORD | 0x44 0x52 0x41 0x4b |
| Version information       | DWORD | 0x01 0x00 0x00 0x00 |

I am planning to feed the output of the newly added tool hiddump, which follows the a/m file format, into the plugin for simulating human interaction, on which I am working actively.
Thank you already in advance for considering this pull request.
If you see any general issues with the concept or the code, please let me know.
Best regards,
Jan",I think this would be better located in its own folder under src and hooked into the configure/make system so you don't need to compile it separately.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1237,2021-06-12T13:09:15Z,2021-06-14T15:25:38Z,2021-06-14T15:25:53Z,MERGED,True,845,2,8,https://github.com/jgru,Add `hiddump` - a utility to record HID events ,1,[],https://github.com/tklengyel/drakvuf/pull/1237,https://github.com/jgru,4,https://github.com/tklengyel/drakvuf/pull/1237#issuecomment-860166917,"Dear Tamas,
this PR adds a utility program named hiddump to the tools-directory. hiddump captures HID events and stores relative and normalized versions of those events in a file, which can then serve later as a template for sending HID events to an analysis guest.
Inner working of the tool
To record those events, the input subsystem of the Linux kernel is utilized. The hiddump reads input_event-structs from one or multiple event files under /dev/input/, which are continuosly polled during the recording period. The timing information, which is provided in the form of timeval-structs, is converted to a relative timestamp starting at the beginning of the recording. If the event houses coordinates, those are mapped to a value range, which qemu uses in its monitor protocol. Afterwards the events are dumped to stdout or written to a specified file in binary representation. By using the input event format of the Linux input subsystem the tool builds upon a proven format and a stable interface.
Usage
The tool can be build with the command
gcc -o hiddump hiddump.c -lX11.
Edit: The compilation of the tool is now hooked into the automake-system. It is performed, if the X11-library (-lX11) is available.
hiddump can then be used as follows:
    usage: ./hiddump [-h] [-e /dev/input/eventX] [file]

    A utility to record HID events

    positional arguments:
      file          binary file to store events

    optional arguments:
      -h                    show this help message and exit
      -e <eventfile>        event file to read events from;
                multiple event files can be specifed -e file1 -e file2 (max. 3)
      -d <seconds>          time frame in seconds to record events

    examples:
      # capture mouse events infinitely
      ./hiddump > events.in

      # read from specified event files for 20 secs
      ./hiddump -e /dev/input/event7 -e /dev/input/event16 -d 20 events.bin

    If no output file is specified as a positional argument, all events will be sent to stdout.
    If no event file is specified via '-e', the default event file for mouse events will be used.
    To capture events of a specific input device, use '-e' after retrieving the relevant event file via

        ls -l /dev/input/by-id | grep -E ""mouse|kbd""

    or alternatively

        cat /proc/bus/input/devices | grep -E ""mouse|kdb""

File format
To preserve the relative and normalized HID events for later use, the input_event-structs are stored sequentially in a binary file, whereas each entry consists of the following fields:
struct input_event {
	struct timeval time;     // relative to the start
	unsigned short type;     // EV_REL, EV_KEY, etc.
	unsigned short code;     // REL_X, BTN_LEFT, etc.
	unsigned int value;      // Coordinates, button down, etc.
};
In order to be able to identify a file as a valid HID template file, which was created by hiddump and contains HID events in the specified format, a short header is prepended at the beginning of the file. The header consists of 12 bytes in total. The magic number is derived from the string 'DRAK'.
| Symbol                    | Size  | Content             |
|---------------------------+-------+---------------------|
| Magic number              | DWORD | 0xCB 0xC1 0xD2 0xC4 |
| ASCII identifier ('DRAK') | DWORD | 0x44 0x52 0x41 0x4b |
| Version information       | DWORD | 0x01 0x00 0x00 0x00 |

I am planning to feed the output of the newly added tool hiddump, which follows the a/m file format, into the plugin for simulating human interaction, on which I am working actively.
Thank you already in advance for considering this pull request.
If you see any general issues with the concept or the code, please let me know.
Best regards,
Jan","I think this would be better located in its own folder under src and hooked into the configure/make system so you don't need to compile it separately.

Okay, I added the code now to src/helpers/hiddump and hooked it into the automake-system as requested.
I decided to introduce a directory called helpers, because I did not want to clutter the top level src-dir. (Maybe this would be a good place for dirwatch as well?)
Furthermore, I added libx11-dev to snapcraft.yml and package/depends.sh, since CI's compilation fails, if X11 is not available. But this was not enough obviously. Could you give me a hint, where to add the libx11-dev dependency, so that Jenkins successfully compiles, as it does on my development machine?
FYI, hiddump depends on the X Window System to retrieve the screen dimensions, which are needed to map the mouse movements to qemu's resolution independent value range.
Please let me know, if these changes are insufficient or even unwanted.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1237,2021-06-12T13:09:15Z,2021-06-14T15:25:38Z,2021-06-14T15:25:53Z,MERGED,True,845,2,8,https://github.com/jgru,Add `hiddump` - a utility to record HID events ,1,[],https://github.com/tklengyel/drakvuf/pull/1237,https://github.com/jgru,5,https://github.com/tklengyel/drakvuf/pull/1237#issuecomment-860172157,"Dear Tamas,
this PR adds a utility program named hiddump to the tools-directory. hiddump captures HID events and stores relative and normalized versions of those events in a file, which can then serve later as a template for sending HID events to an analysis guest.
Inner working of the tool
To record those events, the input subsystem of the Linux kernel is utilized. The hiddump reads input_event-structs from one or multiple event files under /dev/input/, which are continuosly polled during the recording period. The timing information, which is provided in the form of timeval-structs, is converted to a relative timestamp starting at the beginning of the recording. If the event houses coordinates, those are mapped to a value range, which qemu uses in its monitor protocol. Afterwards the events are dumped to stdout or written to a specified file in binary representation. By using the input event format of the Linux input subsystem the tool builds upon a proven format and a stable interface.
Usage
The tool can be build with the command
gcc -o hiddump hiddump.c -lX11.
Edit: The compilation of the tool is now hooked into the automake-system. It is performed, if the X11-library (-lX11) is available.
hiddump can then be used as follows:
    usage: ./hiddump [-h] [-e /dev/input/eventX] [file]

    A utility to record HID events

    positional arguments:
      file          binary file to store events

    optional arguments:
      -h                    show this help message and exit
      -e <eventfile>        event file to read events from;
                multiple event files can be specifed -e file1 -e file2 (max. 3)
      -d <seconds>          time frame in seconds to record events

    examples:
      # capture mouse events infinitely
      ./hiddump > events.in

      # read from specified event files for 20 secs
      ./hiddump -e /dev/input/event7 -e /dev/input/event16 -d 20 events.bin

    If no output file is specified as a positional argument, all events will be sent to stdout.
    If no event file is specified via '-e', the default event file for mouse events will be used.
    To capture events of a specific input device, use '-e' after retrieving the relevant event file via

        ls -l /dev/input/by-id | grep -E ""mouse|kbd""

    or alternatively

        cat /proc/bus/input/devices | grep -E ""mouse|kdb""

File format
To preserve the relative and normalized HID events for later use, the input_event-structs are stored sequentially in a binary file, whereas each entry consists of the following fields:
struct input_event {
	struct timeval time;     // relative to the start
	unsigned short type;     // EV_REL, EV_KEY, etc.
	unsigned short code;     // REL_X, BTN_LEFT, etc.
	unsigned int value;      // Coordinates, button down, etc.
};
In order to be able to identify a file as a valid HID template file, which was created by hiddump and contains HID events in the specified format, a short header is prepended at the beginning of the file. The header consists of 12 bytes in total. The magic number is derived from the string 'DRAK'.
| Symbol                    | Size  | Content             |
|---------------------------+-------+---------------------|
| Magic number              | DWORD | 0xCB 0xC1 0xD2 0xC4 |
| ASCII identifier ('DRAK') | DWORD | 0x44 0x52 0x41 0x4b |
| Version information       | DWORD | 0x01 0x00 0x00 0x00 |

I am planning to feed the output of the newly added tool hiddump, which follows the a/m file format, into the plugin for simulating human interaction, on which I am working actively.
Thank you already in advance for considering this pull request.
If you see any general issues with the concept or the code, please let me know.
Best regards,
Jan","Could you give me a hint, why ""Build package / deb"" fails , although I modified package/depends.sh, which is used in Docker-xen?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1237,2021-06-12T13:09:15Z,2021-06-14T15:25:38Z,2021-06-14T15:25:53Z,MERGED,True,845,2,8,https://github.com/jgru,Add `hiddump` - a utility to record HID events ,1,[],https://github.com/tklengyel/drakvuf/pull/1237,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1237#issuecomment-860598815,"Dear Tamas,
this PR adds a utility program named hiddump to the tools-directory. hiddump captures HID events and stores relative and normalized versions of those events in a file, which can then serve later as a template for sending HID events to an analysis guest.
Inner working of the tool
To record those events, the input subsystem of the Linux kernel is utilized. The hiddump reads input_event-structs from one or multiple event files under /dev/input/, which are continuosly polled during the recording period. The timing information, which is provided in the form of timeval-structs, is converted to a relative timestamp starting at the beginning of the recording. If the event houses coordinates, those are mapped to a value range, which qemu uses in its monitor protocol. Afterwards the events are dumped to stdout or written to a specified file in binary representation. By using the input event format of the Linux input subsystem the tool builds upon a proven format and a stable interface.
Usage
The tool can be build with the command
gcc -o hiddump hiddump.c -lX11.
Edit: The compilation of the tool is now hooked into the automake-system. It is performed, if the X11-library (-lX11) is available.
hiddump can then be used as follows:
    usage: ./hiddump [-h] [-e /dev/input/eventX] [file]

    A utility to record HID events

    positional arguments:
      file          binary file to store events

    optional arguments:
      -h                    show this help message and exit
      -e <eventfile>        event file to read events from;
                multiple event files can be specifed -e file1 -e file2 (max. 3)
      -d <seconds>          time frame in seconds to record events

    examples:
      # capture mouse events infinitely
      ./hiddump > events.in

      # read from specified event files for 20 secs
      ./hiddump -e /dev/input/event7 -e /dev/input/event16 -d 20 events.bin

    If no output file is specified as a positional argument, all events will be sent to stdout.
    If no event file is specified via '-e', the default event file for mouse events will be used.
    To capture events of a specific input device, use '-e' after retrieving the relevant event file via

        ls -l /dev/input/by-id | grep -E ""mouse|kbd""

    or alternatively

        cat /proc/bus/input/devices | grep -E ""mouse|kdb""

File format
To preserve the relative and normalized HID events for later use, the input_event-structs are stored sequentially in a binary file, whereas each entry consists of the following fields:
struct input_event {
	struct timeval time;     // relative to the start
	unsigned short type;     // EV_REL, EV_KEY, etc.
	unsigned short code;     // REL_X, BTN_LEFT, etc.
	unsigned int value;      // Coordinates, button down, etc.
};
In order to be able to identify a file as a valid HID template file, which was created by hiddump and contains HID events in the specified format, a short header is prepended at the beginning of the file. The header consists of 12 bytes in total. The magic number is derived from the string 'DRAK'.
| Symbol                    | Size  | Content             |
|---------------------------+-------+---------------------|
| Magic number              | DWORD | 0xCB 0xC1 0xD2 0xC4 |
| ASCII identifier ('DRAK') | DWORD | 0x44 0x52 0x41 0x4b |
| Version information       | DWORD | 0x01 0x00 0x00 0x00 |

I am planning to feed the output of the newly added tool hiddump, which follows the a/m file format, into the plugin for simulating human interaction, on which I am working actively.
Thank you already in advance for considering this pull request.
If you see any general issues with the concept or the code, please let me know.
Best regards,
Jan","LGTM, could you add a README.md to the folder describing the tool a bit? Like what you have in the PR text would be fine. Thanks!",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1237,2021-06-12T13:09:15Z,2021-06-14T15:25:38Z,2021-06-14T15:25:53Z,MERGED,True,845,2,8,https://github.com/jgru,Add `hiddump` - a utility to record HID events ,1,[],https://github.com/tklengyel/drakvuf/pull/1237,https://github.com/jgru,7,https://github.com/tklengyel/drakvuf/pull/1237#issuecomment-860602181,"Dear Tamas,
this PR adds a utility program named hiddump to the tools-directory. hiddump captures HID events and stores relative and normalized versions of those events in a file, which can then serve later as a template for sending HID events to an analysis guest.
Inner working of the tool
To record those events, the input subsystem of the Linux kernel is utilized. The hiddump reads input_event-structs from one or multiple event files under /dev/input/, which are continuosly polled during the recording period. The timing information, which is provided in the form of timeval-structs, is converted to a relative timestamp starting at the beginning of the recording. If the event houses coordinates, those are mapped to a value range, which qemu uses in its monitor protocol. Afterwards the events are dumped to stdout or written to a specified file in binary representation. By using the input event format of the Linux input subsystem the tool builds upon a proven format and a stable interface.
Usage
The tool can be build with the command
gcc -o hiddump hiddump.c -lX11.
Edit: The compilation of the tool is now hooked into the automake-system. It is performed, if the X11-library (-lX11) is available.
hiddump can then be used as follows:
    usage: ./hiddump [-h] [-e /dev/input/eventX] [file]

    A utility to record HID events

    positional arguments:
      file          binary file to store events

    optional arguments:
      -h                    show this help message and exit
      -e <eventfile>        event file to read events from;
                multiple event files can be specifed -e file1 -e file2 (max. 3)
      -d <seconds>          time frame in seconds to record events

    examples:
      # capture mouse events infinitely
      ./hiddump > events.in

      # read from specified event files for 20 secs
      ./hiddump -e /dev/input/event7 -e /dev/input/event16 -d 20 events.bin

    If no output file is specified as a positional argument, all events will be sent to stdout.
    If no event file is specified via '-e', the default event file for mouse events will be used.
    To capture events of a specific input device, use '-e' after retrieving the relevant event file via

        ls -l /dev/input/by-id | grep -E ""mouse|kbd""

    or alternatively

        cat /proc/bus/input/devices | grep -E ""mouse|kdb""

File format
To preserve the relative and normalized HID events for later use, the input_event-structs are stored sequentially in a binary file, whereas each entry consists of the following fields:
struct input_event {
	struct timeval time;     // relative to the start
	unsigned short type;     // EV_REL, EV_KEY, etc.
	unsigned short code;     // REL_X, BTN_LEFT, etc.
	unsigned int value;      // Coordinates, button down, etc.
};
In order to be able to identify a file as a valid HID template file, which was created by hiddump and contains HID events in the specified format, a short header is prepended at the beginning of the file. The header consists of 12 bytes in total. The magic number is derived from the string 'DRAK'.
| Symbol                    | Size  | Content             |
|---------------------------+-------+---------------------|
| Magic number              | DWORD | 0xCB 0xC1 0xD2 0xC4 |
| ASCII identifier ('DRAK') | DWORD | 0x44 0x52 0x41 0x4b |
| Version information       | DWORD | 0x01 0x00 0x00 0x00 |

I am planning to feed the output of the newly added tool hiddump, which follows the a/m file format, into the plugin for simulating human interaction, on which I am working actively.
Thank you already in advance for considering this pull request.
If you see any general issues with the concept or the code, please let me know.
Best regards,
Jan","LGTM, could you add a README.md to the folder describing the tool a bit? Like what you have in the PR text would be fine. Thanks!

Of course, I will add it until this evening and dispatch a message within here, when I forcely pushed it.
I thought about adding a readme.md-file initially, when you proposed to move hiddump  in a separate directory, but I lost it out of  sight, while working on the automake-integration. Thanks for the reminder and especially for your review and the help!",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1237,2021-06-12T13:09:15Z,2021-06-14T15:25:38Z,2021-06-14T15:25:53Z,MERGED,True,845,2,8,https://github.com/jgru,Add `hiddump` - a utility to record HID events ,1,[],https://github.com/tklengyel/drakvuf/pull/1237,https://github.com/jgru,8,https://github.com/tklengyel/drakvuf/pull/1237#issuecomment-860730033,"Dear Tamas,
this PR adds a utility program named hiddump to the tools-directory. hiddump captures HID events and stores relative and normalized versions of those events in a file, which can then serve later as a template for sending HID events to an analysis guest.
Inner working of the tool
To record those events, the input subsystem of the Linux kernel is utilized. The hiddump reads input_event-structs from one or multiple event files under /dev/input/, which are continuosly polled during the recording period. The timing information, which is provided in the form of timeval-structs, is converted to a relative timestamp starting at the beginning of the recording. If the event houses coordinates, those are mapped to a value range, which qemu uses in its monitor protocol. Afterwards the events are dumped to stdout or written to a specified file in binary representation. By using the input event format of the Linux input subsystem the tool builds upon a proven format and a stable interface.
Usage
The tool can be build with the command
gcc -o hiddump hiddump.c -lX11.
Edit: The compilation of the tool is now hooked into the automake-system. It is performed, if the X11-library (-lX11) is available.
hiddump can then be used as follows:
    usage: ./hiddump [-h] [-e /dev/input/eventX] [file]

    A utility to record HID events

    positional arguments:
      file          binary file to store events

    optional arguments:
      -h                    show this help message and exit
      -e <eventfile>        event file to read events from;
                multiple event files can be specifed -e file1 -e file2 (max. 3)
      -d <seconds>          time frame in seconds to record events

    examples:
      # capture mouse events infinitely
      ./hiddump > events.in

      # read from specified event files for 20 secs
      ./hiddump -e /dev/input/event7 -e /dev/input/event16 -d 20 events.bin

    If no output file is specified as a positional argument, all events will be sent to stdout.
    If no event file is specified via '-e', the default event file for mouse events will be used.
    To capture events of a specific input device, use '-e' after retrieving the relevant event file via

        ls -l /dev/input/by-id | grep -E ""mouse|kbd""

    or alternatively

        cat /proc/bus/input/devices | grep -E ""mouse|kdb""

File format
To preserve the relative and normalized HID events for later use, the input_event-structs are stored sequentially in a binary file, whereas each entry consists of the following fields:
struct input_event {
	struct timeval time;     // relative to the start
	unsigned short type;     // EV_REL, EV_KEY, etc.
	unsigned short code;     // REL_X, BTN_LEFT, etc.
	unsigned int value;      // Coordinates, button down, etc.
};
In order to be able to identify a file as a valid HID template file, which was created by hiddump and contains HID events in the specified format, a short header is prepended at the beginning of the file. The header consists of 12 bytes in total. The magic number is derived from the string 'DRAK'.
| Symbol                    | Size  | Content             |
|---------------------------+-------+---------------------|
| Magic number              | DWORD | 0xCB 0xC1 0xD2 0xC4 |
| ASCII identifier ('DRAK') | DWORD | 0x44 0x52 0x41 0x4b |
| Version information       | DWORD | 0x01 0x00 0x00 0x00 |

I am planning to feed the output of the newly added tool hiddump, which follows the a/m file format, into the plugin for simulating human interaction, on which I am working actively.
Thank you already in advance for considering this pull request.
If you see any general issues with the concept or the code, please let me know.
Best regards,
Jan","LGTM, could you add a README.md to the folder describing the tool a bit? Like what you have in the PR text would be fine. Thanks!

Of course, I will add it until this evening and dispatch a message within here, when I forcely pushed it.

I just added the requested readme, containing the information on the tool's usage. If you think, something is missing, please let me know.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1237,2021-06-12T13:09:15Z,2021-06-14T15:25:38Z,2021-06-14T15:25:53Z,MERGED,True,845,2,8,https://github.com/jgru,Add `hiddump` - a utility to record HID events ,1,[],https://github.com/tklengyel/drakvuf/pull/1237,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/1237#issuecomment-860775483,"Dear Tamas,
this PR adds a utility program named hiddump to the tools-directory. hiddump captures HID events and stores relative and normalized versions of those events in a file, which can then serve later as a template for sending HID events to an analysis guest.
Inner working of the tool
To record those events, the input subsystem of the Linux kernel is utilized. The hiddump reads input_event-structs from one or multiple event files under /dev/input/, which are continuosly polled during the recording period. The timing information, which is provided in the form of timeval-structs, is converted to a relative timestamp starting at the beginning of the recording. If the event houses coordinates, those are mapped to a value range, which qemu uses in its monitor protocol. Afterwards the events are dumped to stdout or written to a specified file in binary representation. By using the input event format of the Linux input subsystem the tool builds upon a proven format and a stable interface.
Usage
The tool can be build with the command
gcc -o hiddump hiddump.c -lX11.
Edit: The compilation of the tool is now hooked into the automake-system. It is performed, if the X11-library (-lX11) is available.
hiddump can then be used as follows:
    usage: ./hiddump [-h] [-e /dev/input/eventX] [file]

    A utility to record HID events

    positional arguments:
      file          binary file to store events

    optional arguments:
      -h                    show this help message and exit
      -e <eventfile>        event file to read events from;
                multiple event files can be specifed -e file1 -e file2 (max. 3)
      -d <seconds>          time frame in seconds to record events

    examples:
      # capture mouse events infinitely
      ./hiddump > events.in

      # read from specified event files for 20 secs
      ./hiddump -e /dev/input/event7 -e /dev/input/event16 -d 20 events.bin

    If no output file is specified as a positional argument, all events will be sent to stdout.
    If no event file is specified via '-e', the default event file for mouse events will be used.
    To capture events of a specific input device, use '-e' after retrieving the relevant event file via

        ls -l /dev/input/by-id | grep -E ""mouse|kbd""

    or alternatively

        cat /proc/bus/input/devices | grep -E ""mouse|kdb""

File format
To preserve the relative and normalized HID events for later use, the input_event-structs are stored sequentially in a binary file, whereas each entry consists of the following fields:
struct input_event {
	struct timeval time;     // relative to the start
	unsigned short type;     // EV_REL, EV_KEY, etc.
	unsigned short code;     // REL_X, BTN_LEFT, etc.
	unsigned int value;      // Coordinates, button down, etc.
};
In order to be able to identify a file as a valid HID template file, which was created by hiddump and contains HID events in the specified format, a short header is prepended at the beginning of the file. The header consists of 12 bytes in total. The magic number is derived from the string 'DRAK'.
| Symbol                    | Size  | Content             |
|---------------------------+-------+---------------------|
| Magic number              | DWORD | 0xCB 0xC1 0xD2 0xC4 |
| ASCII identifier ('DRAK') | DWORD | 0x44 0x52 0x41 0x4b |
| Version information       | DWORD | 0x01 0x00 0x00 0x00 |

I am planning to feed the output of the newly added tool hiddump, which follows the a/m file format, into the plugin for simulating human interaction, on which I am working actively.
Thank you already in advance for considering this pull request.
If you see any general issues with the concept or the code, please let me know.
Best regards,
Jan",Thanks!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1238,2021-06-14T18:17:48Z,2021-06-14T18:46:07Z,2021-06-14T18:46:08Z,MERGED,True,36,35,1,https://github.com/jgru,Fix issues in hiddump.c identified by coverity,1,[],https://github.com/tklengyel/drakvuf/pull/1238,https://github.com/jgru,1,https://github.com/tklengyel/drakvuf/pull/1238,"Dear Tamas,
this PR fixes the issues with the newly added code in src/helpers/hiddump/hiddump.c, which were identified by Coverity. The following issues were addressed:

control flow issues in L. 246 and 599 (of the previous file version)
error handling issue in L. 468 previously
resource leak issue in  L. 488 previously

I added the report, which was provided by you as an attachment to this PR: 2021-06-14_hiddump-coverity.txt
I hope, that these changes solve my blunders!
Thanks for pointing me on them.
Best regards
Jan","Dear Tamas,
this PR fixes the issues with the newly added code in src/helpers/hiddump/hiddump.c, which were identified by Coverity. The following issues were addressed:

control flow issues in L. 246 and 599 (of the previous file version)
error handling issue in L. 468 previously
resource leak issue in  L. 488 previously

I added the report, which was provided by you as an attachment to this PR: 2021-06-14_hiddump-coverity.txt
I hope, that these changes solve my blunders!
Thanks for pointing me on them.
Best regards
Jan",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1238,2021-06-14T18:17:48Z,2021-06-14T18:46:07Z,2021-06-14T18:46:08Z,MERGED,True,36,35,1,https://github.com/jgru,Fix issues in hiddump.c identified by coverity,1,[],https://github.com/tklengyel/drakvuf/pull/1238,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1238#issuecomment-860892217,"Dear Tamas,
this PR fixes the issues with the newly added code in src/helpers/hiddump/hiddump.c, which were identified by Coverity. The following issues were addressed:

control flow issues in L. 246 and 599 (of the previous file version)
error handling issue in L. 468 previously
resource leak issue in  L. 488 previously

I added the report, which was provided by you as an attachment to this PR: 2021-06-14_hiddump-coverity.txt
I hope, that these changes solve my blunders!
Thanks for pointing me on them.
Best regards
Jan",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1240,2021-06-16T14:18:20Z,2021-06-21T12:26:43Z,2021-06-21T12:26:44Z,MERGED,True,20,6,2,https://github.com/exescript,Add --write-file-timeout option,1,[],https://github.com/tklengyel/drakvuf/pull/1240,https://github.com/exescript,1,https://github.com/tklengyel/drakvuf/pull/1240,Add timeout option for write-file injection (default: 0 == no timeout),Add timeout option for write-file injection (default: 0 == no timeout),True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1240,2021-06-16T14:18:20Z,2021-06-21T12:26:43Z,2021-06-21T12:26:44Z,MERGED,True,20,6,2,https://github.com/exescript,Add --write-file-timeout option,1,[],https://github.com/tklengyel/drakvuf/pull/1240,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1240#issuecomment-862420715,Add timeout option for write-file injection (default: 0 == no timeout),Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1240,2021-06-16T14:18:20Z,2021-06-21T12:26:43Z,2021-06-21T12:26:44Z,MERGED,True,20,6,2,https://github.com/exescript,Add --write-file-timeout option,1,[],https://github.com/tklengyel/drakvuf/pull/1240,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1240#issuecomment-864551409,Add timeout option for write-file injection (default: 0 == no timeout),@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1240,2021-06-16T14:18:20Z,2021-06-21T12:26:43Z,2021-06-21T12:26:44Z,MERGED,True,20,6,2,https://github.com/exescript,Add --write-file-timeout option,1,[],https://github.com/tklengyel/drakvuf/pull/1240,https://github.com/exescript,4,https://github.com/tklengyel/drakvuf/pull/1240#issuecomment-864750115,Add timeout option for write-file injection (default: 0 == no timeout),I closed it by the accident with my mouse! Reopen now.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1241,2021-06-17T07:57:30Z,2021-06-20T12:30:48Z,2021-06-20T12:30:48Z,MERGED,True,3,3,1,https://github.com/kscieslinski,use kpgd when accessing task_struct,1,[],https://github.com/tklengyel/drakvuf/pull/1241,https://github.com/kscieslinski,1,https://github.com/tklengyel/drakvuf/pull/1241,#1239,#1239,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1241,2021-06-17T07:57:30Z,2021-06-20T12:30:48Z,2021-06-20T12:30:48Z,MERGED,True,3,3,1,https://github.com/kscieslinski,use kpgd when accessing task_struct,1,[],https://github.com/tklengyel/drakvuf/pull/1241,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1241#issuecomment-863019331,#1239,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1241,2021-06-17T07:57:30Z,2021-06-20T12:30:48Z,2021-06-20T12:30:48Z,MERGED,True,3,3,1,https://github.com/kscieslinski,use kpgd when accessing task_struct,1,[],https://github.com/tklengyel/drakvuf/pull/1241,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1241#issuecomment-863106800,#1239,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1243,2021-06-20T19:49:43Z,2021-06-21T12:26:17Z,2021-06-21T13:32:46Z,MERGED,True,11,0,2,https://github.com/manorit2001,add init_string_argument,2,[],https://github.com/tklengyel/drakvuf/pull/1243,https://github.com/manorit2001,1,https://github.com/tklengyel/drakvuf/pull/1243,adds init_string_argument similar to existing init_int_argument,adds init_string_argument similar to existing init_int_argument,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1243,2021-06-20T19:49:43Z,2021-06-21T12:26:17Z,2021-06-21T13:32:46Z,MERGED,True,11,0,2,https://github.com/manorit2001,add init_string_argument,2,[],https://github.com/tklengyel/drakvuf/pull/1243,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1243#issuecomment-864603330,adds init_string_argument similar to existing init_int_argument,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1243,2021-06-20T19:49:43Z,2021-06-21T12:26:17Z,2021-06-21T13:32:46Z,MERGED,True,11,0,2,https://github.com/manorit2001,add init_string_argument,2,[],https://github.com/tklengyel/drakvuf/pull/1243,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1243#issuecomment-864604103,adds init_string_argument similar to existing init_int_argument,@drakvuf-jenkins Test this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1243,2021-06-20T19:49:43Z,2021-06-21T12:26:17Z,2021-06-21T13:32:46Z,MERGED,True,11,0,2,https://github.com/manorit2001,add init_string_argument,2,[],https://github.com/tklengyel/drakvuf/pull/1243,https://github.com/BonusPlay,4,https://github.com/tklengyel/drakvuf/pull/1243#issuecomment-864621445,adds init_string_argument similar to existing init_int_argument,I'm afrait this might not be so easy - what about small string optimization vs long strings? all good as it's only a small helper init function,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1244,2021-06-21T15:38:53Z,2021-06-21T17:44:40Z,2021-06-21T17:44:46Z,MERGED,True,1,1,1,https://github.com/archercreat,logical bug in is_stopped function,1,[],https://github.com/tklengyel/drakvuf/pull/1244,https://github.com/archercreat,1,https://github.com/tklengyel/drakvuf/pull/1244,"I've noticed that my plugin does not work at the end of the analysis and I I've found why.
So, stop_plugins returns 1 if some plugin is in pending  state but then it is inverted into 0 in is_stopped function.
Then function returns rc == 0 as if all plugins have been stopped which is incorrect.","I've noticed that my plugin does not work at the end of the analysis and I I've found why.
So, stop_plugins returns 1 if some plugin is in pending  state but then it is inverted into 0 in is_stopped function.
Then function returns rc == 0 as if all plugins have been stopped which is incorrect.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1244,2021-06-21T15:38:53Z,2021-06-21T17:44:40Z,2021-06-21T17:44:46Z,MERGED,True,1,1,1,https://github.com/archercreat,logical bug in is_stopped function,1,[],https://github.com/tklengyel/drakvuf/pull/1244,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1244#issuecomment-865134279,"I've noticed that my plugin does not work at the end of the analysis and I I've found why.
So, stop_plugins returns 1 if some plugin is in pending  state but then it is inverted into 0 in is_stopped function.
Then function returns rc == 0 as if all plugins have been stopped which is incorrect.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1244,2021-06-21T15:38:53Z,2021-06-21T17:44:40Z,2021-06-21T17:44:46Z,MERGED,True,1,1,1,https://github.com/archercreat,logical bug in is_stopped function,1,[],https://github.com/tklengyel/drakvuf/pull/1244,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1244#issuecomment-865156380,"I've noticed that my plugin does not work at the end of the analysis and I I've found why.
So, stop_plugins returns 1 if some plugin is in pending  state but then it is inverted into 0 in is_stopped function.
Then function returns rc == 0 as if all plugins have been stopped which is incorrect.",@drakvuf-jenkins Test this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1244,2021-06-21T15:38:53Z,2021-06-21T17:44:40Z,2021-06-21T17:44:46Z,MERGED,True,1,1,1,https://github.com/archercreat,logical bug in is_stopped function,1,[],https://github.com/tklengyel/drakvuf/pull/1244,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1244#issuecomment-865225346,"I've noticed that my plugin does not work at the end of the analysis and I I've found why.
So, stop_plugins returns 1 if some plugin is in pending  state but then it is inverted into 0 in is_stopped function.
Then function returns rc == 0 as if all plugins have been stopped which is incorrect.",Thanks!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1245,2021-06-23T09:25:47Z,2021-07-09T14:06:24Z,2021-07-09T15:15:18Z,MERGED,True,2366,0,14,https://github.com/jgru,Add QMP-based HID simulation-plugin,4,[],https://github.com/tklengyel/drakvuf/pull/1245,https://github.com/jgru,1,https://github.com/tklengyel/drakvuf/pull/1245,"Dear Tamas,
as discussed earlier, I send you a PR, which adds a plugin named hidsim, which can be used to perform simulation of user input by utilizing QEMU's machine protocol interface.
For a description of the newly added plugin, please refer to ./src/plugins/hidsim/readme.org
Thanks already in advance for reviewing and considering this PR.
Best regards,
Jan","Dear Tamas,
as discussed earlier, I send you a PR, which adds a plugin named hidsim, which can be used to perform simulation of user input by utilizing QEMU's machine protocol interface.
For a description of the newly added plugin, please refer to ./src/plugins/hidsim/readme.org
Thanks already in advance for reviewing and considering this PR.
Best regards,
Jan",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1245,2021-06-23T09:25:47Z,2021-07-09T14:06:24Z,2021-07-09T15:15:18Z,MERGED,True,2366,0,14,https://github.com/jgru,Add QMP-based HID simulation-plugin,4,[],https://github.com/tklengyel/drakvuf/pull/1245,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1245#issuecomment-866679904,"Dear Tamas,
as discussed earlier, I send you a PR, which adds a plugin named hidsim, which can be used to perform simulation of user input by utilizing QEMU's machine protocol interface.
For a description of the newly added plugin, please refer to ./src/plugins/hidsim/readme.org
Thanks already in advance for reviewing and considering this PR.
Best regards,
Jan",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1245,2021-06-23T09:25:47Z,2021-07-09T14:06:24Z,2021-07-09T15:15:18Z,MERGED,True,2366,0,14,https://github.com/jgru,Add QMP-based HID simulation-plugin,4,[],https://github.com/tklengyel/drakvuf/pull/1245,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1245#issuecomment-866739991,"Dear Tamas,
as discussed earlier, I send you a PR, which adds a plugin named hidsim, which can be used to perform simulation of user input by utilizing QEMU's machine protocol interface.
For a description of the newly added plugin, please refer to ./src/plugins/hidsim/readme.org
Thanks already in advance for reviewing and considering this PR.
Best regards,
Jan",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1245,2021-06-23T09:25:47Z,2021-07-09T14:06:24Z,2021-07-09T15:15:18Z,MERGED,True,2366,0,14,https://github.com/jgru,Add QMP-based HID simulation-plugin,4,[],https://github.com/tklengyel/drakvuf/pull/1245,https://github.com/icedevml,4,https://github.com/tklengyel/drakvuf/pull/1245#issuecomment-874386802,"Dear Tamas,
as discussed earlier, I send you a PR, which adds a plugin named hidsim, which can be used to perform simulation of user input by utilizing QEMU's machine protocol interface.
For a description of the newly added plugin, please refer to ./src/plugins/hidsim/readme.org
Thanks already in advance for reviewing and considering this PR.
Best regards,
Jan","@jgru There are git conflicts in the current state of this PR. Also, the CI is not passing (default = DRAKVUF end-to-end tests).
Could you try to solve these issues? Please ping me if you have any problems understanding why the CI is failing (after the git conflicts are resolved).",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1245,2021-06-23T09:25:47Z,2021-07-09T14:06:24Z,2021-07-09T15:15:18Z,MERGED,True,2366,0,14,https://github.com/jgru,Add QMP-based HID simulation-plugin,4,[],https://github.com/tklengyel/drakvuf/pull/1245,https://github.com/jgru,5,https://github.com/tklengyel/drakvuf/pull/1245#issuecomment-874604978,"Dear Tamas,
as discussed earlier, I send you a PR, which adds a plugin named hidsim, which can be used to perform simulation of user input by utilizing QEMU's machine protocol interface.
For a description of the newly added plugin, please refer to ./src/plugins/hidsim/readme.org
Thanks already in advance for reviewing and considering this PR.
Best regards,
Jan","@jgru There are git conflicts in the current state of this PR. Also, the CI is not passing (default = DRAKVUF end-to-end tests).
Could you try to solve these issues? Please ping me if you have any problems understanding why the CI is failing (after the git conflicts are resolved).

I resolved the merge conflicts. Would you give me a hint on fixing the issues with the CI default = DRAKVUF end-to-end tests please, @icedevml?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1245,2021-06-23T09:25:47Z,2021-07-09T14:06:24Z,2021-07-09T15:15:18Z,MERGED,True,2366,0,14,https://github.com/jgru,Add QMP-based HID simulation-plugin,4,[],https://github.com/tklengyel/drakvuf/pull/1245,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1245#issuecomment-874658734,"Dear Tamas,
as discussed earlier, I send you a PR, which adds a plugin named hidsim, which can be used to perform simulation of user input by utilizing QEMU's machine protocol interface.
For a description of the newly added plugin, please refer to ./src/plugins/hidsim/readme.org
Thanks already in advance for reviewing and considering this PR.
Best regards,
Jan",Look at the failing tests. Valgrind spotted memory leaks. Should have enough info in the test report to figure out what's leaking.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1245,2021-06-23T09:25:47Z,2021-07-09T14:06:24Z,2021-07-09T15:15:18Z,MERGED,True,2366,0,14,https://github.com/jgru,Add QMP-based HID simulation-plugin,4,[],https://github.com/tklengyel/drakvuf/pull/1245,https://github.com/jgru,7,https://github.com/tklengyel/drakvuf/pull/1245#issuecomment-874673488,"Dear Tamas,
as discussed earlier, I send you a PR, which adds a plugin named hidsim, which can be used to perform simulation of user input by utilizing QEMU's machine protocol interface.
For a description of the newly added plugin, please refer to ./src/plugins/hidsim/readme.org
Thanks already in advance for reviewing and considering this PR.
Best regards,
Jan","Look at the failing tests. Valgrind spotted memory leaks. Should have enough info in the test report to figure out what's leaking.

Thank you very much, @tklengyel ! That helped, somehow I didn't find the results on the Jenkins CI, the last time I clicked through the UI.
Sorry for asking this!!",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1245,2021-06-23T09:25:47Z,2021-07-09T14:06:24Z,2021-07-09T15:15:18Z,MERGED,True,2366,0,14,https://github.com/jgru,Add QMP-based HID simulation-plugin,4,[],https://github.com/tklengyel/drakvuf/pull/1245,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/1245#issuecomment-874880366,"Dear Tamas,
as discussed earlier, I send you a PR, which adds a plugin named hidsim, which can be used to perform simulation of user input by utilizing QEMU's machine protocol interface.
For a description of the newly added plugin, please refer to ./src/plugins/hidsim/readme.org
Thanks already in advance for reviewing and considering this PR.
Best regards,
Jan","No worries, the valgrind test result is a bit non-intuitively in a separate menu then the rest of the test output ¯\_(ツ)_/¯",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1245,2021-06-23T09:25:47Z,2021-07-09T14:06:24Z,2021-07-09T15:15:18Z,MERGED,True,2366,0,14,https://github.com/jgru,Add QMP-based HID simulation-plugin,4,[],https://github.com/tklengyel/drakvuf/pull/1245,https://github.com/icedevml,9,https://github.com/tklengyel/drakvuf/pull/1245#issuecomment-875022597,"Dear Tamas,
as discussed earlier, I send you a PR, which adds a plugin named hidsim, which can be used to perform simulation of user input by utilizing QEMU's machine protocol interface.
For a description of the newly added plugin, please refer to ./src/plugins/hidsim/readme.org
Thanks already in advance for reviewing and considering this PR.
Best regards,
Jan","https://ci.drakvuf.com/job/DRAKVUF-debian-stretch/594/valgrindResult/pid=675944,0x6/",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1245,2021-06-23T09:25:47Z,2021-07-09T14:06:24Z,2021-07-09T15:15:18Z,MERGED,True,2366,0,14,https://github.com/jgru,Add QMP-based HID simulation-plugin,4,[],https://github.com/tklengyel/drakvuf/pull/1245,https://github.com/icedevml,10,https://github.com/tklengyel/drakvuf/pull/1245#issuecomment-875023573,"Dear Tamas,
as discussed earlier, I send you a PR, which adds a plugin named hidsim, which can be used to perform simulation of user input by utilizing QEMU's machine protocol interface.
For a description of the newly added plugin, please refer to ./src/plugins/hidsim/readme.org
Thanks already in advance for reviewing and considering this PR.
Best regards,
Jan",🤔 It says syscalls plugin has created a trap but some of the trap's memory was leaked after all.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1245,2021-06-23T09:25:47Z,2021-07-09T14:06:24Z,2021-07-09T15:15:18Z,MERGED,True,2366,0,14,https://github.com/jgru,Add QMP-based HID simulation-plugin,4,[],https://github.com/tklengyel/drakvuf/pull/1245,https://github.com/icedevml,11,https://github.com/tklengyel/drakvuf/pull/1245#issuecomment-875025105,"Dear Tamas,
as discussed earlier, I send you a PR, which adds a plugin named hidsim, which can be used to perform simulation of user input by utilizing QEMU's machine protocol interface.
For a description of the newly added plugin, please refer to ./src/plugins/hidsim/readme.org
Thanks already in advance for reviewing and considering this PR.
Best regards,
Jan",@tklengyel I've verified all the changes outside src/plugins/hidsim and everything seems to be correct on this layer. I don't get why do we get a failure here. Looks like some regression to me or some unrelated bug.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1245,2021-06-23T09:25:47Z,2021-07-09T14:06:24Z,2021-07-09T15:15:18Z,MERGED,True,2366,0,14,https://github.com/jgru,Add QMP-based HID simulation-plugin,4,[],https://github.com/tklengyel/drakvuf/pull/1245,https://github.com/tklengyel,12,https://github.com/tklengyel/drakvuf/pull/1245#issuecomment-875062789,"Dear Tamas,
as discussed earlier, I send you a PR, which adds a plugin named hidsim, which can be used to perform simulation of user input by utilizing QEMU's machine protocol interface.
For a description of the newly added plugin, please refer to ./src/plugins/hidsim/readme.org
Thanks already in advance for reviewing and considering this PR.
Best regards,
Jan",Probably due to the system exiting without properly cleaning up each plugin. Since the error does not happen with the master branch outside this PR but happens deterministically with the PR chances are the PR introduces some error.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1245,2021-06-23T09:25:47Z,2021-07-09T14:06:24Z,2021-07-09T15:15:18Z,MERGED,True,2366,0,14,https://github.com/jgru,Add QMP-based HID simulation-plugin,4,[],https://github.com/tklengyel/drakvuf/pull/1245,https://github.com/icedevml,13,https://github.com/tklengyel/drakvuf/pull/1245#issuecomment-875107129,"Dear Tamas,
as discussed earlier, I send you a PR, which adds a plugin named hidsim, which can be used to perform simulation of user input by utilizing QEMU's machine protocol interface.
For a description of the newly added plugin, please refer to ./src/plugins/hidsim/readme.org
Thanks already in advance for reviewing and considering this PR.
Best regards,
Jan",@drakvuf-jenkins Retest this please.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1245,2021-06-23T09:25:47Z,2021-07-09T14:06:24Z,2021-07-09T15:15:18Z,MERGED,True,2366,0,14,https://github.com/jgru,Add QMP-based HID simulation-plugin,4,[],https://github.com/tklengyel/drakvuf/pull/1245,https://github.com/tklengyel,14,https://github.com/tklengyel/drakvuf/pull/1245#issuecomment-876339528,"Dear Tamas,
as discussed earlier, I send you a PR, which adds a plugin named hidsim, which can be used to perform simulation of user input by utilizing QEMU's machine protocol interface.
For a description of the newly added plugin, please refer to ./src/plugins/hidsim/readme.org
Thanks already in advance for reviewing and considering this PR.
Best regards,
Jan",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1245,2021-06-23T09:25:47Z,2021-07-09T14:06:24Z,2021-07-09T15:15:18Z,MERGED,True,2366,0,14,https://github.com/jgru,Add QMP-based HID simulation-plugin,4,[],https://github.com/tklengyel/drakvuf/pull/1245,https://github.com/tklengyel,15,https://github.com/tklengyel/drakvuf/pull/1245#issuecomment-877248295,"Dear Tamas,
as discussed earlier, I send you a PR, which adds a plugin named hidsim, which can be used to perform simulation of user input by utilizing QEMU's machine protocol interface.
For a description of the newly added plugin, please refer to ./src/plugins/hidsim/readme.org
Thanks already in advance for reviewing and considering this PR.
Best regards,
Jan","@jgru FYI
Please find the latest report on new defect(s) introduced to tklengyel/drakvuf found with Coverity Scan.

10 new defect(s) introduced to tklengyel/drakvuf found with Coverity Scan.


New defect(s) Reported-by: Coverity Scan
Showing 10 of 10 defect(s)


** CID 350860:  Security best practices violations  (DC.WEAK_CRYPTO)
/src/plugins/hidsim/hid_injection.cpp: 549 in run_random_injection(qmp_connection *, int *)()


________________________________________________________________________________________________________
*** CID 350860:  Security best practices violations  (DC.WEAK_CRYPTO)
/src/plugins/hidsim/hid_injection.cpp: 549 in run_random_injection(qmp_connection *, int *)()
543         int time_frame = 0;
544     
545         /* Seed RNG */
546         struct timeval t;
547         gettimeofday(&t, NULL);
548         srand(t.tv_sec);
>>>     CID 350860:  Security best practices violations  (DC.WEAK_CRYPTO)
>>>     ""rand"" should not be used for security-related applications, because linear congruential algorithms are too easy to break.
549         int s = rand()%512;
550     
551         /* Loops, until stopped */
552         while (!*has_to_stop)
553         {
554             /* Calculates the random displacement of the mouse cursor */

** CID 350859:  Memory - illegal accesses  (STRING_NULL)
/src/plugins/hidsim/qmp_connection.cpp: 255 in qmp_communicate(qmp_connection *, const char *, char **)()


________________________________________________________________________________________________________
*** CID 350859:  Memory - illegal accesses  (STRING_NULL)
/src/plugins/hidsim/qmp_connection.cpp: 255 in qmp_communicate(qmp_connection *, const char *, char **)()
249         {
250             fprintf(stderr, ""Read from %s failed - %s\n"", qc->sa.sun_path,
251                 strerror(errno));
252             return ret;
253         }
254         if (out)
>>>     CID 350859:  Memory - illegal accesses  (STRING_NULL)
>>>     Passing unterminated string ""qc->buf"" to ""strdup"", which expects a null-terminated string.
255             *out = strdup(qc->buf);
256     
257         memset(qc->buf, 0, sizeof(qc->buf));
258     
259         return 0;
260     }

** CID 350858:    (DC.WEAK_CRYPTO)
/src/plugins/hidsim/hid_injection.cpp: 428 in gaussian_rand(double, double)()
/src/plugins/hidsim/hid_injection.cpp: 427 in gaussian_rand(double, double)()


________________________________________________________________________________________________________
*** CID 350858:    (DC.WEAK_CRYPTO)
/src/plugins/hidsim/hid_injection.cpp: 428 in gaussian_rand(double, double)()
422         }
423     
424         do
425         {
426             /* Scale it to [-1, 1] by calculating -low + x * (high - low) */
427             u = -1 + ((double)rand() / RAND_MAX) * 2;
>>>     CID 350858:    (DC.WEAK_CRYPTO)
>>>     ""rand"" should not be used for security-related applications, because linear congruential algorithms are too easy to break.
428             v = -1 + ((double)rand() / RAND_MAX) * 2;
429             w = u * u + v * v;
430         }
431         /* Avoids division by 0 */
432         while (w >= 1 || (w < 0.0000000000000001 && w > -0.0000000000000001));
433     
/src/plugins/hidsim/hid_injection.cpp: 427 in gaussian_rand(double, double)()
421             return (mean + sigma * spare);
422         }
423     
424         do
425         {
426             /* Scale it to [-1, 1] by calculating -low + x * (high - low) */
>>>     CID 350858:    (DC.WEAK_CRYPTO)
>>>     ""rand"" should not be used for security-related applications, because linear congruential algorithms are too easy to break.
427             u = -1 + ((double)rand() / RAND_MAX) * 2;
428             v = -1 + ((double)rand() / RAND_MAX) * 2;
429             w = u * u + v * v;
430         }
431         /* Avoids division by 0 */
432         while (w >= 1 || (w < 0.0000000000000001 && w > -0.0000000000000001));

** CID 350857:  Resource leaks  (RESOURCE_LEAK)
/src/plugins/hidsim/hid_injection.cpp: 229 in get_display_dimensions(qmp_connection *, dimensions *)()


________________________________________________________________________________________________________
*** CID 350857:  Resource leaks  (RESOURCE_LEAK)
/src/plugins/hidsim/hid_injection.cpp: 229 in get_display_dimensions(qmp_connection *, dimensions *)()
223         /* Clean up */
224         if (remove(tmp_path) != 0)
225             fprintf(stderr, ""[HIDSIM]: Error deleting screen dump %s\n"", tmp_path);
226     
227         PRINT_DEBUG(""[HIDSIM] Screen dimension: %d x %d\n"",
228             dims->width, dims->height);
>>>     CID 350857:  Resource leaks  (RESOURCE_LEAK)
>>>     Variable ""fr"" going out of scope leaks the storage it points to.
229         return ret;
230     }
231     
232     /* Parses header of HID-template-file */
233     static int read_header(FILE* f)
234     {

** CID 350856:  Memory - illegal accesses  (USE_AFTER_FREE)
/src/plugins/hidsim/hid_injection.cpp: 695 in hid_cleanup(qmp_connection *, int, _IO_FILE *)()


________________________________________________________________________________________________________
*** CID 350856:  Memory - illegal accesses  (USE_AFTER_FREE)
/src/plugins/hidsim/hid_injection.cpp: 695 in hid_cleanup(qmp_connection *, int, _IO_FILE *)()
689         if (qc)
690             if ((ret = qmp_close_conn(qc)) != 0)
691                 fprintf(stderr, ""[HIDSIM] Error closing QMP socket %s\n"",
692                     qc->sa.sun_path);
693         if (f)
694             if ((ret = fclose(f)) != 0)
>>>     CID 350856:  Memory - illegal accesses  (USE_AFTER_FREE)
>>>     Passing freed pointer ""f"" as an argument to ""fprintf"".
695                 fprintf(stderr, ""[HIDSIM] Error closing %p"", f);
696         if (fd >= 0)
697             if ((ret = close(fd)) != 0)
698                 fprintf(stderr, ""[HIDSIM] Error closing %d\n"", fd);
699     
700         return ret;

** CID 350855:    (TAINTED_SCALAR)


________________________________________________________________________________________________________
*** CID 350855:    (TAINTED_SCALAR)
/src/plugins/hidsim/hid_injection.cpp: 218 in get_display_dimensions(qmp_connection *, dimensions *)()
212     
213         /* Reads actual dimensions */
214         matches = fscanf(fr, ""%d%d"", &(dims->width), &(dims->height));
215     
216         /* Calculates pixel mapping */
217         dims->dx = calculate_pixel_unit(dims->width);
>>>     CID 350855:    (TAINTED_SCALAR)
>>>     Passing tainted expression ""dims->height"" to ""calculate_pixel_unit"", which uses it as a divisor or modulus.
218         dims->dy = calculate_pixel_unit(dims->height);
219     
220         if (matches != 2 || dims->width < 0 || dims->height < 0)
221             ret = -1;
222     
223         /* Clean up */
/src/plugins/hidsim/hid_injection.cpp: 217 in get_display_dimensions(qmp_connection *, dimensions *)()
211             ret = -1;
212     
213         /* Reads actual dimensions */
214         matches = fscanf(fr, ""%d%d"", &(dims->width), &(dims->height));
215     
216         /* Calculates pixel mapping */
>>>     CID 350855:    (TAINTED_SCALAR)
>>>     Passing tainted expression ""dims->width"" to ""calculate_pixel_unit"", which uses it as a divisor or modulus.
217         dims->dx = calculate_pixel_unit(dims->width);
218         dims->dy = calculate_pixel_unit(dims->height);
219     
220         if (matches != 2 || dims->width < 0 || dims->height < 0)
221             ret = -1;
222     

** CID 350854:    (STRING_NULL)
/src/plugins/hidsim/qmp_connection.cpp: 174 in qmp_init_conn(qmp_connection *, const char *)()


________________________________________________________________________________________________________
*** CID 350854:    (STRING_NULL)
/src/plugins/hidsim/qmp_connection.cpp: 199 in qmp_init_conn(qmp_connection *, const char *)()
193         {
194             fprintf(stderr, ""Read from %s failed - %s\n"", qc->sa.sun_path,
195                 strerror(errno));
196             return -1;
197         }
198     
>>>     CID 350854:    (STRING_NULL)
>>>     Passing unterminated string ""qc->buf"" to ""qmp_check_result_str"", which expects a null-terminated string.
199         if (qmp_check_result_str(qc->buf) != 0)
200         {
201             fprintf(stderr, ""Entering command mode failed, msg: %s\n"", qc->buf);
202             return -1;
203         }
204     
/src/plugins/hidsim/qmp_connection.cpp: 174 in qmp_init_conn(qmp_connection *, const char *)()
168     
169         /* Reads the capabilities, which are sent by the qmp-server */
170         ret = read(qc->fd, qc->buf, sizeof(qc->buf));
171     
172         if (ret == -1)
173         {
>>>     CID 350854:    (STRING_NULL)
>>>     Passing unterminated string ""qc->buf"" to ""fprintf"".
174             fprintf(stderr, ""Fetching QMP greeting banner failed - %s\n"", qc->buf);
175             return -1;
176         }
177     
178         memset(qc->buf, 0, sizeof(qc->buf));
179     

** CID 350853:  Security best practices violations  (DC.WEAK_CRYPTO)
/src/plugins/hidsim/hid_injection.cpp: 396 in rand_approx_uniform(int, int)()


________________________________________________________________________________________________________
*** CID 350853:  Security best practices violations  (DC.WEAK_CRYPTO)
/src/plugins/hidsim/hid_injection.cpp: 396 in rand_approx_uniform(int, int)()
390         return sqrtf(a*a + b*b);
391     }
392     
393     /* Returns a random number n, while a <= n < b */
394     int rand_approx_uniform(int a, int b)
395     {
>>>     CID 350853:  Security best practices violations  (DC.WEAK_CRYPTO)
>>>     ""rand"" should not be used for security-related applications, because linear congruential algorithms are too easy to break.
396         return a + rand() % (b - a + 1);
397     }
398     
399     /*
400      * Marsaglia polar method to generate gaussian distributed random variables
401      * Slightly modified version from

** CID 350852:  Security best practices violations  (DC.STREAM_BUFFER)
/src/plugins/hidsim/hid_injection.cpp: 208 in get_display_dimensions(qmp_connection *, dimensions *)()


________________________________________________________________________________________________________
*** CID 350852:  Security best practices violations  (DC.STREAM_BUFFER)
/src/plugins/hidsim/hid_injection.cpp: 208 in get_display_dimensions(qmp_connection *, dimensions *)()
202         FILE* fr = fopen(tmp_path, ""r"");
203         char ppm_hdr[3];
204         int matches = 0;
205         int ret = 0;
206     
207         /* Checks PPM-header */
>>>     CID 350852:  Security best practices violations  (DC.STREAM_BUFFER)
>>>     ""fscanf(FILE * restrict, char const * restrict, ...)"" assumes an arbitrarily long string, so callers must use correct precision specifiers or never use ""fscanf(FILE * restrict, char const * restrict, ...)"".
208         matches = fscanf(fr, ""%s"", ppm_hdr);
209     
210         if (matches != 1 || strcmp(ppm_hdr, PPM_MAGIC_NUMBER) != 0)
211             ret = -1;
212     
213         /* Reads actual dimensions */

** CID 350851:    (TAINTED_SCALAR)
/src/plugins/hidsim/hid_injection.cpp: 615 in run_template_injection(qmp_connection *, _IO_FILE *, int *)()
/src/plugins/hidsim/hid_injection.cpp: 677 in run_template_injection(qmp_connection *, _IO_FILE *, int *)()


________________________________________________________________________________________________________
*** CID 350851:    (TAINTED_SCALAR)
/src/plugins/hidsim/hid_injection.cpp: 615 in run_template_injection(qmp_connection *, _IO_FILE *, int *)()
609     
610         /* Reads first event */
611         nr = fread(&ie_cur, sizeof(ie_cur), 1, f);
612     
613         /* Waits until first event should be injected */
614         sleep = ie_cur.time.tv_sec * 1000000 * ie_cur.time.tv_usec;
>>>     CID 350851:    (TAINTED_SCALAR)
>>>     Passing tainted expression ""sleep"" to ""usleep"", which cannot accept tainted data.
615         usleep(sleep);
616     
617         while (!*has_to_stop)
618         {
619             /* Handles the special case of the first event */
620             if (was_last)
/src/plugins/hidsim/hid_injection.cpp: 677 in run_template_injection(qmp_connection *, _IO_FILE *, int *)()
671                 events = json_object_new_array();
672             }
673     
674             /* Omits sleeping after injection of last event */
675             if (!was_last)
676             {
>>>     CID 350851:    (TAINTED_SCALAR)
>>>     Passing tainted expression ""sleep"" to ""usleep"", which cannot accept tainted data.
677                 usleep(sleep);
678                 ie_cur = ie_next;
679             }
680         }
681         return 0;
682     }",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1245,2021-06-23T09:25:47Z,2021-07-09T14:06:24Z,2021-07-09T15:15:18Z,MERGED,True,2366,0,14,https://github.com/jgru,Add QMP-based HID simulation-plugin,4,[],https://github.com/tklengyel/drakvuf/pull/1245,https://github.com/jgru,16,https://github.com/tklengyel/drakvuf/pull/1245#issuecomment-877261044,"Dear Tamas,
as discussed earlier, I send you a PR, which adds a plugin named hidsim, which can be used to perform simulation of user input by utilizing QEMU's machine protocol interface.
For a description of the newly added plugin, please refer to ./src/plugins/hidsim/readme.org
Thanks already in advance for reviewing and considering this PR.
Best regards,
Jan","@jgru FYI
Please find the latest report on new defect(s) introduced to tklengyel/drakvuf found with Coverity Scan.

10 new defect(s) introduced to tklengyel/drakvuf found with Coverity Scan.


New defect(s) Reported-by: Coverity Scan
Showing 10 of 10 defect(s)


Thanks for providing coverity's scan results, @tklengyel.
I'll address those and will open a separate PR.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1246,2021-06-24T08:40:32Z,2021-06-25T12:20:12Z,2021-07-22T08:40:08Z,MERGED,True,1,1,1,https://github.com/disaykin,"Always stop all plugins, even if stopping one of the plugins ends wit…",1,[],https://github.com/tklengyel/drakvuf/pull/1246,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1246,"Always stop all plugins, even if stopping one of the plugins ends with failed or pending status.","Always stop all plugins, even if stopping one of the plugins ends with failed or pending status.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1246,2021-06-24T08:40:32Z,2021-06-25T12:20:12Z,2021-07-22T08:40:08Z,MERGED,True,1,1,1,https://github.com/disaykin,"Always stop all plugins, even if stopping one of the plugins ends wit…",1,[],https://github.com/tklengyel/drakvuf/pull/1246,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1246#issuecomment-867453597,"Always stop all plugins, even if stopping one of the plugins ends with failed or pending status.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1246,2021-06-24T08:40:32Z,2021-06-25T12:20:12Z,2021-07-22T08:40:08Z,MERGED,True,1,1,1,https://github.com/disaykin,"Always stop all plugins, even if stopping one of the plugins ends wit…",1,[],https://github.com/tklengyel/drakvuf/pull/1246,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1246#issuecomment-867552964,"Always stop all plugins, even if stopping one of the plugins ends with failed or pending status.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1246,2021-06-24T08:40:32Z,2021-06-25T12:20:12Z,2021-07-22T08:40:08Z,MERGED,True,1,1,1,https://github.com/disaykin,"Always stop all plugins, even if stopping one of the plugins ends wit…",1,[],https://github.com/tklengyel/drakvuf/pull/1246,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1246#issuecomment-867591871,"Always stop all plugins, even if stopping one of the plugins ends with failed or pending status.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1249,2021-06-26T11:31:10Z,2021-06-28T11:25:29Z,2021-06-28T14:42:28Z,MERGED,True,1,30,1,https://github.com/manorit2001,remove redundant function,1,[],https://github.com/tklengyel/drakvuf/pull/1249,https://github.com/manorit2001,1,https://github.com/tklengyel/drakvuf/pull/1249,there is no difference between place_string_on_stack_64 and place_string_on_linux_stack,there is no difference between place_string_on_stack_64 and place_string_on_linux_stack,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1249,2021-06-26T11:31:10Z,2021-06-28T11:25:29Z,2021-06-28T14:42:28Z,MERGED,True,1,30,1,https://github.com/manorit2001,remove redundant function,1,[],https://github.com/tklengyel/drakvuf/pull/1249,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1249#issuecomment-868988014,there is no difference between place_string_on_stack_64 and place_string_on_linux_stack,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1249,2021-06-26T11:31:10Z,2021-06-28T11:25:29Z,2021-06-28T14:42:28Z,MERGED,True,1,30,1,https://github.com/manorit2001,remove redundant function,1,[],https://github.com/tklengyel/drakvuf/pull/1249,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1249#issuecomment-868988431,there is no difference between place_string_on_stack_64 and place_string_on_linux_stack,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1250,2021-07-01T08:44:46Z,2021-07-05T11:03:03Z,2021-12-15T09:27:59Z,MERGED,True,164,26,6,https://github.com/skvl,Objmon refactoring,2,[],https://github.com/tklengyel/drakvuf/pull/1250,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1250,"objmon have been re-factored to use pluginex interface
NtDuplicateObject hook been added to capture output HANDLE
drakvuf options been added to manipulate the objmon","objmon have been re-factored to use pluginex interface
NtDuplicateObject hook been added to capture output HANDLE
drakvuf options been added to manipulate the objmon",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1250,2021-07-01T08:44:46Z,2021-07-05T11:03:03Z,2021-12-15T09:27:59Z,MERGED,True,164,26,6,https://github.com/skvl,Objmon refactoring,2,[],https://github.com/tklengyel/drakvuf/pull/1250,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1250#issuecomment-872052032,"objmon have been re-factored to use pluginex interface
NtDuplicateObject hook been added to capture output HANDLE
drakvuf options been added to manipulate the objmon",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1250,2021-07-01T08:44:46Z,2021-07-05T11:03:03Z,2021-12-15T09:27:59Z,MERGED,True,164,26,6,https://github.com/skvl,Objmon refactoring,2,[],https://github.com/tklengyel/drakvuf/pull/1250,https://github.com/skvl,3,https://github.com/tklengyel/drakvuf/pull/1250#issuecomment-872833274,"objmon have been re-factored to use pluginex interface
NtDuplicateObject hook been added to capture output HANDLE
drakvuf options been added to manipulate the objmon","@tklengyel , for some reason checks doesn't start.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1250,2021-07-01T08:44:46Z,2021-07-05T11:03:03Z,2021-12-15T09:27:59Z,MERGED,True,164,26,6,https://github.com/skvl,Objmon refactoring,2,[],https://github.com/tklengyel/drakvuf/pull/1250,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1250#issuecomment-872896767,"objmon have been re-factored to use pluginex interface
NtDuplicateObject hook been added to capture output HANDLE
drakvuf options been added to manipulate the objmon","You need to rebase on master, you have merge conflicts right now on main.cpp",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1250,2021-07-01T08:44:46Z,2021-07-05T11:03:03Z,2021-12-15T09:27:59Z,MERGED,True,164,26,6,https://github.com/skvl,Objmon refactoring,2,[],https://github.com/tklengyel/drakvuf/pull/1250,https://github.com/skvl,5,https://github.com/tklengyel/drakvuf/pull/1250#issuecomment-872941666,"objmon have been re-factored to use pluginex interface
NtDuplicateObject hook been added to capture output HANDLE
drakvuf options been added to manipulate the objmon",Tank You very much! I didn't notice.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1250,2021-07-01T08:44:46Z,2021-07-05T11:03:03Z,2021-12-15T09:27:59Z,MERGED,True,164,26,6,https://github.com/skvl,Objmon refactoring,2,[],https://github.com/tklengyel/drakvuf/pull/1250,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1250#issuecomment-873104079,"objmon have been re-factored to use pluginex interface
NtDuplicateObject hook been added to capture output HANDLE
drakvuf options been added to manipulate the objmon",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1250,2021-07-01T08:44:46Z,2021-07-05T11:03:03Z,2021-12-15T09:27:59Z,MERGED,True,164,26,6,https://github.com/skvl,Objmon refactoring,2,[],https://github.com/tklengyel/drakvuf/pull/1250,https://github.com/skvl,7,https://github.com/tklengyel/drakvuf/pull/1250#issuecomment-873857403,"objmon have been re-factored to use pluginex interface
NtDuplicateObject hook been added to capture output HANDLE
drakvuf options been added to manipulate the objmon",@tklengyel is this OK to merge?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1250,2021-07-01T08:44:46Z,2021-07-05T11:03:03Z,2021-12-15T09:27:59Z,MERGED,True,164,26,6,https://github.com/skvl,Objmon refactoring,2,[],https://github.com/tklengyel/drakvuf/pull/1250,https://github.com/skvl,8,https://github.com/tklengyel/drakvuf/pull/1250#issuecomment-873986506,"objmon have been re-factored to use pluginex interface
NtDuplicateObject hook been added to capture output HANDLE
drakvuf options been added to manipulate the objmon",I have re-based it,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1252,2021-07-02T12:52:27Z,2021-07-02T16:03:20Z,2021-07-05T10:07:03Z,MERGED,True,71,30,3,https://github.com/skvl,Fix KV output format,1,[],https://github.com/tklengyel/drakvuf/pull/1252,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1252,Fix for #1251,Fix for #1251,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1252,2021-07-02T12:52:27Z,2021-07-02T16:03:20Z,2021-07-05T10:07:03Z,MERGED,True,71,30,3,https://github.com/skvl,Fix KV output format,1,[],https://github.com/tklengyel/drakvuf/pull/1252,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1252#issuecomment-872974461,Fix for #1251,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1252,2021-07-02T12:52:27Z,2021-07-02T16:03:20Z,2021-07-05T10:07:03Z,MERGED,True,71,30,3,https://github.com/skvl,Fix KV output format,1,[],https://github.com/tklengyel/drakvuf/pull/1252,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1252#issuecomment-873068534,Fix for #1251,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1253,2021-07-02T13:44:02Z,2021-07-02T16:04:06Z,2021-07-02T16:04:12Z,MERGED,True,128,35,2,https://github.com/archercreat,Exploitmon update,7,[],https://github.com/tklengyel/drakvuf/pull/1253,https://github.com/archercreat,1,https://github.com/tklengyel/drakvuf/pull/1253,"Hello! I've added final analysis in exploitmon. With this update we will be able to monitor token modification in every process.
Thanks!","Hello! I've added final analysis in exploitmon. With this update we will be able to monitor token modification in every process.
Thanks!",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1253,2021-07-02T13:44:02Z,2021-07-02T16:04:06Z,2021-07-02T16:04:12Z,MERGED,True,128,35,2,https://github.com/archercreat,Exploitmon update,7,[],https://github.com/tklengyel/drakvuf/pull/1253,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1253#issuecomment-873009510,"Hello! I've added final analysis in exploitmon. With this update we will be able to monitor token modification in every process.
Thanks!",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1253,2021-07-02T13:44:02Z,2021-07-02T16:04:06Z,2021-07-02T16:04:12Z,MERGED,True,128,35,2,https://github.com/archercreat,Exploitmon update,7,[],https://github.com/tklengyel/drakvuf/pull/1253,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1253#issuecomment-873069989,"Hello! I've added final analysis in exploitmon. With this update we will be able to monitor token modification in every process.
Thanks!",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1253,2021-07-02T13:44:02Z,2021-07-02T16:04:06Z,2021-07-02T16:04:12Z,MERGED,True,128,35,2,https://github.com/archercreat,Exploitmon update,7,[],https://github.com/tklengyel/drakvuf/pull/1253,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1253#issuecomment-873103868,"Hello! I've added final analysis in exploitmon. With this update we will be able to monitor token modification in every process.
Thanks!",Thanks!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1255,2021-07-10T10:52:25Z,2021-07-10T23:04:45Z,2021-08-13T05:03:47Z,MERGED,True,72,35,3,https://github.com/jgru,"Fix issues in the hidsim-plugin, which were identified by static code analysis",1,[],https://github.com/tklengyel/drakvuf/pull/1255,https://github.com/jgru,1,https://github.com/tklengyel/drakvuf/pull/1255,"Dear Tamas,
this PR addresses the following issues, which were identified by Coverity, and tries to solve those:

CID 350859: Fix usage of strdup(...) with unterminated string
CID 350856: Fix resource leaks in get_display_dimensions(...)
CID 350857: Fix resource leaks in get_display_dimensions(...)
CID 350854: Fix unterminated strings in qmp_init_conn()
CID 350852: Fix potential buffer overflow in get_display_dimensions(...)
CID 350851: Fix submission of tainted data to usleep(...)
CID 350855: Fix calculations with tainted scalar  get_display_dimensions(...)
CID 350860: Replace rand() with std::mt19937 to fix WEAK_CRYPTO-warning
CID 350853: Replace rand() with std::mt19937 to fix WEAK_CRYPTO-warning
CID 350858: Replace rand() with std::mt19937 to fix WEAK_CRYPTO-warning

Besides that, a few minor clean-ups have been performed.
Thank you already in advance for considering this PR.
I hope, that this patch will solve the problems introduced by #1245.
Best regards
Jan","Dear Tamas,
this PR addresses the following issues, which were identified by Coverity, and tries to solve those:

CID 350859: Fix usage of strdup(...) with unterminated string
CID 350856: Fix resource leaks in get_display_dimensions(...)
CID 350857: Fix resource leaks in get_display_dimensions(...)
CID 350854: Fix unterminated strings in qmp_init_conn()
CID 350852: Fix potential buffer overflow in get_display_dimensions(...)
CID 350851: Fix submission of tainted data to usleep(...)
CID 350855: Fix calculations with tainted scalar  get_display_dimensions(...)
CID 350860: Replace rand() with std::mt19937 to fix WEAK_CRYPTO-warning
CID 350853: Replace rand() with std::mt19937 to fix WEAK_CRYPTO-warning
CID 350858: Replace rand() with std::mt19937 to fix WEAK_CRYPTO-warning

Besides that, a few minor clean-ups have been performed.
Thank you already in advance for considering this PR.
I hope, that this patch will solve the problems introduced by #1245.
Best regards
Jan",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1255,2021-07-10T10:52:25Z,2021-07-10T23:04:45Z,2021-08-13T05:03:47Z,MERGED,True,72,35,3,https://github.com/jgru,"Fix issues in the hidsim-plugin, which were identified by static code analysis",1,[],https://github.com/tklengyel/drakvuf/pull/1255,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1255#issuecomment-877617259,"Dear Tamas,
this PR addresses the following issues, which were identified by Coverity, and tries to solve those:

CID 350859: Fix usage of strdup(...) with unterminated string
CID 350856: Fix resource leaks in get_display_dimensions(...)
CID 350857: Fix resource leaks in get_display_dimensions(...)
CID 350854: Fix unterminated strings in qmp_init_conn()
CID 350852: Fix potential buffer overflow in get_display_dimensions(...)
CID 350851: Fix submission of tainted data to usleep(...)
CID 350855: Fix calculations with tainted scalar  get_display_dimensions(...)
CID 350860: Replace rand() with std::mt19937 to fix WEAK_CRYPTO-warning
CID 350853: Replace rand() with std::mt19937 to fix WEAK_CRYPTO-warning
CID 350858: Replace rand() with std::mt19937 to fix WEAK_CRYPTO-warning

Besides that, a few minor clean-ups have been performed.
Thank you already in advance for considering this PR.
I hope, that this patch will solve the problems introduced by #1245.
Best regards
Jan",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1255,2021-07-10T10:52:25Z,2021-07-10T23:04:45Z,2021-08-13T05:03:47Z,MERGED,True,72,35,3,https://github.com/jgru,"Fix issues in the hidsim-plugin, which were identified by static code analysis",1,[],https://github.com/tklengyel/drakvuf/pull/1255,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1255#issuecomment-877627232,"Dear Tamas,
this PR addresses the following issues, which were identified by Coverity, and tries to solve those:

CID 350859: Fix usage of strdup(...) with unterminated string
CID 350856: Fix resource leaks in get_display_dimensions(...)
CID 350857: Fix resource leaks in get_display_dimensions(...)
CID 350854: Fix unterminated strings in qmp_init_conn()
CID 350852: Fix potential buffer overflow in get_display_dimensions(...)
CID 350851: Fix submission of tainted data to usleep(...)
CID 350855: Fix calculations with tainted scalar  get_display_dimensions(...)
CID 350860: Replace rand() with std::mt19937 to fix WEAK_CRYPTO-warning
CID 350853: Replace rand() with std::mt19937 to fix WEAK_CRYPTO-warning
CID 350858: Replace rand() with std::mt19937 to fix WEAK_CRYPTO-warning

Besides that, a few minor clean-ups have been performed.
Thank you already in advance for considering this PR.
I hope, that this patch will solve the problems introduced by #1245.
Best regards
Jan",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1255,2021-07-10T10:52:25Z,2021-07-10T23:04:45Z,2021-08-13T05:03:47Z,MERGED,True,72,35,3,https://github.com/jgru,"Fix issues in the hidsim-plugin, which were identified by static code analysis",1,[],https://github.com/tklengyel/drakvuf/pull/1255,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1255#issuecomment-877722559,"Dear Tamas,
this PR addresses the following issues, which were identified by Coverity, and tries to solve those:

CID 350859: Fix usage of strdup(...) with unterminated string
CID 350856: Fix resource leaks in get_display_dimensions(...)
CID 350857: Fix resource leaks in get_display_dimensions(...)
CID 350854: Fix unterminated strings in qmp_init_conn()
CID 350852: Fix potential buffer overflow in get_display_dimensions(...)
CID 350851: Fix submission of tainted data to usleep(...)
CID 350855: Fix calculations with tainted scalar  get_display_dimensions(...)
CID 350860: Replace rand() with std::mt19937 to fix WEAK_CRYPTO-warning
CID 350853: Replace rand() with std::mt19937 to fix WEAK_CRYPTO-warning
CID 350858: Replace rand() with std::mt19937 to fix WEAK_CRYPTO-warning

Besides that, a few minor clean-ups have been performed.
Thank you already in advance for considering this PR.
I hope, that this patch will solve the problems introduced by #1245.
Best regards
Jan","New defect(s) Reported-by: Coverity Scan
Showing 1 of 1 defect(s)


** CID 350879:    (USE_AFTER_FREE)
/src/plugins/hidsim/hid_injection.cpp: 228 in get_display_dimensions(qmp_connection *, dimensions *)()
/src/plugins/hidsim/hid_injection.cpp: 242 in get_display_dimensions(qmp_connection *, dimensions *)()


________________________________________________________________________________________________________
*** CID 350879:    (USE_AFTER_FREE)
/src/plugins/hidsim/hid_injection.cpp: 228 in get_display_dimensions(qmp_connection *, dimensions *)()
222             fclose(fr);
223             ret = -1;
224         }
225     
226         /* Retrieves screen dimensions by reading screen dump  */
227         uint32_t width = 0, height = 0;
>>>     CID 350879:    (USE_AFTER_FREE)
>>>     Calling ""fscanf"" uses file handle ""fr"" after closing it.
228         matches = fscanf(fr, ""%"" SCNd32 ""%"" SCNd32, &width, &height);
229     
230         if (matches != 2 )
231         {
232             fprintf(stderr, ""[HIDSIM]: Error reading .ppm-files metadata\n"");
233             fclose(fr);
/src/plugins/hidsim/hid_injection.cpp: 242 in get_display_dimensions(qmp_connection *, dimensions *)()
236     
237         /* Sanitizes read values; no need for a screen size larger than 65k */
238         dims->width = (uint16_t)(width > UINT16_MAX ? UINT16_MAX : width);
239         dims->height = (uint16_t)(height > UINT16_MAX ? UINT16_MAX : height);
240     
241         /* Clean up */
>>>     CID 350879:    (USE_AFTER_FREE)
>>>     Calling ""fclose"" uses file handle ""fr"" after closing it.
242         fclose(fr);
243     
244         /* Removes temp file generated by the screendump-command */
245         if (remove(tmp_path) != 0)
246             fprintf(stderr, ""[HIDSIM]: Error deleting screen dump %s\n"", tmp_path);
247",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1255,2021-07-10T10:52:25Z,2021-07-10T23:04:45Z,2021-08-13T05:03:47Z,MERGED,True,72,35,3,https://github.com/jgru,"Fix issues in the hidsim-plugin, which were identified by static code analysis",1,[],https://github.com/tklengyel/drakvuf/pull/1255,https://github.com/jgru,5,https://github.com/tklengyel/drakvuf/pull/1255#issuecomment-877774210,"Dear Tamas,
this PR addresses the following issues, which were identified by Coverity, and tries to solve those:

CID 350859: Fix usage of strdup(...) with unterminated string
CID 350856: Fix resource leaks in get_display_dimensions(...)
CID 350857: Fix resource leaks in get_display_dimensions(...)
CID 350854: Fix unterminated strings in qmp_init_conn()
CID 350852: Fix potential buffer overflow in get_display_dimensions(...)
CID 350851: Fix submission of tainted data to usleep(...)
CID 350855: Fix calculations with tainted scalar  get_display_dimensions(...)
CID 350860: Replace rand() with std::mt19937 to fix WEAK_CRYPTO-warning
CID 350853: Replace rand() with std::mt19937 to fix WEAK_CRYPTO-warning
CID 350858: Replace rand() with std::mt19937 to fix WEAK_CRYPTO-warning

Besides that, a few minor clean-ups have been performed.
Thank you already in advance for considering this PR.
I hope, that this patch will solve the problems introduced by #1245.
Best regards
Jan","New defect(s) Reported-by: Coverity Scan
Showing 1 of 1 defect(s)
[...]  


Addressed in PR #1256",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1256,2021-07-11T06:24:37Z,2021-07-11T12:33:33Z,2021-07-11T12:33:34Z,MERGED,True,26,16,1,https://github.com/jgru,Fix defects introduced by PR #1255,1,[],https://github.com/tklengyel/drakvuf/pull/1256,https://github.com/jgru,1,https://github.com/tklengyel/drakvuf/pull/1256,"Dear Tamas,
this patch fixes the defects introduced by PR #1255.
The following issues, which were identified by Coverity, were addressed:

CID 350856: Fix use after free of file stream in l. 731 of hid_cleanup()
CID 350879: Fix use after close in l. 242 in get_display_dimensions(...)
CID 350855: Fix untrusted divisor in l. 249 of get_display_dimensions(...)

Thanks already in advance for reviewing and considering this PR.
Best regards
Jan","Dear Tamas,
this patch fixes the defects introduced by PR #1255.
The following issues, which were identified by Coverity, were addressed:

CID 350856: Fix use after free of file stream in l. 731 of hid_cleanup()
CID 350879: Fix use after close in l. 242 in get_display_dimensions(...)
CID 350855: Fix untrusted divisor in l. 249 of get_display_dimensions(...)

Thanks already in advance for reviewing and considering this PR.
Best regards
Jan",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1256,2021-07-11T06:24:37Z,2021-07-11T12:33:33Z,2021-07-11T12:33:34Z,MERGED,True,26,16,1,https://github.com/jgru,Fix defects introduced by PR #1255,1,[],https://github.com/tklengyel/drakvuf/pull/1256,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1256#issuecomment-877748866,"Dear Tamas,
this patch fixes the defects introduced by PR #1255.
The following issues, which were identified by Coverity, were addressed:

CID 350856: Fix use after free of file stream in l. 731 of hid_cleanup()
CID 350879: Fix use after close in l. 242 in get_display_dimensions(...)
CID 350855: Fix untrusted divisor in l. 249 of get_display_dimensions(...)

Thanks already in advance for reviewing and considering this PR.
Best regards
Jan",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1256,2021-07-11T06:24:37Z,2021-07-11T12:33:33Z,2021-07-11T12:33:34Z,MERGED,True,26,16,1,https://github.com/jgru,Fix defects introduced by PR #1255,1,[],https://github.com/tklengyel/drakvuf/pull/1256,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1256#issuecomment-877782534,"Dear Tamas,
this patch fixes the defects introduced by PR #1255.
The following issues, which were identified by Coverity, were addressed:

CID 350856: Fix use after free of file stream in l. 731 of hid_cleanup()
CID 350879: Fix use after close in l. 242 in get_display_dimensions(...)
CID 350855: Fix untrusted divisor in l. 249 of get_display_dimensions(...)

Thanks already in advance for reviewing and considering this PR.
Best regards
Jan",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1257,2021-07-11T15:38:46Z,2021-07-11T21:02:35Z,2021-07-12T07:19:35Z,MERGED,True,11,4,2,https://github.com/jgru,Fix/clean-up low impact issues in libinjector and libusermode,3,[],https://github.com/tklengyel/drakvuf/pull/1257,https://github.com/jgru,1,https://github.com/tklengyel/drakvuf/pull/1257,"Dear Tamas,
this PR submits three patches, which fix the following issues identified by static code analysis with low to medium impact :

CID 307533: Fix error handling in injector_int3_cb(...) by checking the return value from vmi_read(...)
CID 309662: Remove unused value (and therefore unnecessary variable assignment) in print_injection_info(...)
CID 304049: Add initialization of the scalar field func_addr of struct rh_data_t in uh-private.hpp

Although those are only minor changes, I think, they might help to declutter the results of static code analysis.
Thank you already advance for considering this PR.
Best regards
Jan
P.S.: I decided to not squash the commits this time, because they try to solve distinct issues. If you want me to do so, please let me know.","Dear Tamas,
this PR submits three patches, which fix the following issues identified by static code analysis with low to medium impact :

CID 307533: Fix error handling in injector_int3_cb(...) by checking the return value from vmi_read(...)
CID 309662: Remove unused value (and therefore unnecessary variable assignment) in print_injection_info(...)
CID 304049: Add initialization of the scalar field func_addr of struct rh_data_t in uh-private.hpp

Although those are only minor changes, I think, they might help to declutter the results of static code analysis.
Thank you already advance for considering this PR.
Best regards
Jan
P.S.: I decided to not squash the commits this time, because they try to solve distinct issues. If you want me to do so, please let me know.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1257,2021-07-11T15:38:46Z,2021-07-11T21:02:35Z,2021-07-12T07:19:35Z,MERGED,True,11,4,2,https://github.com/jgru,Fix/clean-up low impact issues in libinjector and libusermode,3,[],https://github.com/tklengyel/drakvuf/pull/1257,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1257#issuecomment-877822237,"Dear Tamas,
this PR submits three patches, which fix the following issues identified by static code analysis with low to medium impact :

CID 307533: Fix error handling in injector_int3_cb(...) by checking the return value from vmi_read(...)
CID 309662: Remove unused value (and therefore unnecessary variable assignment) in print_injection_info(...)
CID 304049: Add initialization of the scalar field func_addr of struct rh_data_t in uh-private.hpp

Although those are only minor changes, I think, they might help to declutter the results of static code analysis.
Thank you already advance for considering this PR.
Best regards
Jan
P.S.: I decided to not squash the commits this time, because they try to solve distinct issues. If you want me to do so, please let me know.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1257,2021-07-11T15:38:46Z,2021-07-11T21:02:35Z,2021-07-12T07:19:35Z,MERGED,True,11,4,2,https://github.com/jgru,Fix/clean-up low impact issues in libinjector and libusermode,3,[],https://github.com/tklengyel/drakvuf/pull/1257,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1257#issuecomment-877839700,"Dear Tamas,
this PR submits three patches, which fix the following issues identified by static code analysis with low to medium impact :

CID 307533: Fix error handling in injector_int3_cb(...) by checking the return value from vmi_read(...)
CID 309662: Remove unused value (and therefore unnecessary variable assignment) in print_injection_info(...)
CID 304049: Add initialization of the scalar field func_addr of struct rh_data_t in uh-private.hpp

Although those are only minor changes, I think, they might help to declutter the results of static code analysis.
Thank you already advance for considering this PR.
Best regards
Jan
P.S.: I decided to not squash the commits this time, because they try to solve distinct issues. If you want me to do so, please let me know.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1258,2021-07-12T14:18:36Z,2021-07-13T15:06:23Z,2021-07-14T07:15:56Z,MERGED,True,137,170,3,https://github.com/disaykin,Fix detects found by CodeQL. Incorrect allocation-error handling,1,[],https://github.com/tklengyel/drakvuf/pull/1258,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1258,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1258,2021-07-12T14:18:36Z,2021-07-13T15:06:23Z,2021-07-14T07:15:56Z,MERGED,True,137,170,3,https://github.com/disaykin,Fix detects found by CodeQL. Incorrect allocation-error handling,1,[],https://github.com/tklengyel/drakvuf/pull/1258,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1258#issuecomment-878319103,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1258,2021-07-12T14:18:36Z,2021-07-13T15:06:23Z,2021-07-14T07:15:56Z,MERGED,True,137,170,3,https://github.com/disaykin,Fix detects found by CodeQL. Incorrect allocation-error handling,1,[],https://github.com/tklengyel/drakvuf/pull/1258,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1258#issuecomment-878381168,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1258,2021-07-12T14:18:36Z,2021-07-13T15:06:23Z,2021-07-14T07:15:56Z,MERGED,True,137,170,3,https://github.com/disaykin,Fix detects found by CodeQL. Incorrect allocation-error handling,1,[],https://github.com/tklengyel/drakvuf/pull/1258,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1258#issuecomment-878740027,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1259,2021-07-13T10:34:49Z,2021-07-13T15:05:38Z,2021-08-07T11:02:45Z,MERGED,True,180,76,8,https://github.com/chivay,Use std::filesystem helper instead of direct include,3,[],https://github.com/tklengyel/drakvuf/pull/1259,https://github.com/chivay,1,https://github.com/tklengyel/drakvuf/pull/1259,"Ubuntu 18.04 ships with a compiler that exposes std::filesystem as an
experimental feature.
Use local helper file that handles that quirk.
Fixes: 851bcb8 Drakvuf write-file option (#1235)","Ubuntu 18.04 ships with a compiler that exposes std::filesystem as an
experimental feature.
Use local helper file that handles that quirk.
Fixes: 851bcb8 Drakvuf write-file option (#1235)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1259,2021-07-13T10:34:49Z,2021-07-13T15:05:38Z,2021-08-07T11:02:45Z,MERGED,True,180,76,8,https://github.com/chivay,Use std::filesystem helper instead of direct include,3,[],https://github.com/tklengyel/drakvuf/pull/1259,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1259#issuecomment-878975574,"Ubuntu 18.04 ships with a compiler that exposes std::filesystem as an
experimental feature.
Use local helper file that handles that quirk.
Fixes: 851bcb8 Drakvuf write-file option (#1235)",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1259,2021-07-13T10:34:49Z,2021-07-13T15:05:38Z,2021-08-07T11:02:45Z,MERGED,True,180,76,8,https://github.com/chivay,Use std::filesystem helper instead of direct include,3,[],https://github.com/tklengyel/drakvuf/pull/1259,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1259#issuecomment-879009187,"Ubuntu 18.04 ships with a compiler that exposes std::filesystem as an
experimental feature.
Use local helper file that handles that quirk.
Fixes: 851bcb8 Drakvuf write-file option (#1235)","I would prefer if that header was moved out from the plugins folder to the top. Also, its missing the license header so please add it.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1259,2021-07-13T10:34:49Z,2021-07-13T15:05:38Z,2021-08-07T11:02:45Z,MERGED,True,180,76,8,https://github.com/chivay,Use std::filesystem helper instead of direct include,3,[],https://github.com/tklengyel/drakvuf/pull/1259,https://github.com/chivay,4,https://github.com/tklengyel/drakvuf/pull/1259#issuecomment-879013003,"Ubuntu 18.04 ships with a compiler that exposes std::filesystem as an
experimental feature.
Use local helper file that handles that quirk.
Fixes: 851bcb8 Drakvuf write-file option (#1235)","Sure, I'll fix it :)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1259,2021-07-13T10:34:49Z,2021-07-13T15:05:38Z,2021-08-07T11:02:45Z,MERGED,True,180,76,8,https://github.com/chivay,Use std::filesystem helper instead of direct include,3,[],https://github.com/tklengyel/drakvuf/pull/1259,https://github.com/chivay,5,https://github.com/tklengyel/drakvuf/pull/1259#issuecomment-879038368,"Ubuntu 18.04 ships with a compiler that exposes std::filesystem as an
experimental feature.
Use local helper file that handles that quirk.
Fixes: 851bcb8 Drakvuf write-file option (#1235)",Addressed both of these issues.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1259,2021-07-13T10:34:49Z,2021-07-13T15:05:38Z,2021-08-07T11:02:45Z,MERGED,True,180,76,8,https://github.com/chivay,Use std::filesystem helper instead of direct include,3,[],https://github.com/tklengyel/drakvuf/pull/1259,https://github.com/icedevml,6,https://github.com/tklengyel/drakvuf/pull/1259#issuecomment-879048339,"Ubuntu 18.04 ships with a compiler that exposes std::filesystem as an
experimental feature.
Use local helper file that handles that quirk.
Fixes: 851bcb8 Drakvuf write-file option (#1235)",@drakvuf-jenkins This is OK to test.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1260,2021-07-13T14:32:28Z,2021-07-13T17:50:45Z,2021-07-14T07:15:56Z,MERGED,True,6,8,2,https://github.com/disaykin,Do not use an address of the stack where pointer to trap structure ar…,1,[],https://github.com/tklengyel/drakvuf/pull/1260,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1260,"…e stored as a key of the remove_traps hash table.
This can lead to restoration of previously removed trap instead of addition of newly created one:
...
drakvuf_trap_t* trap = info->trap;
drakvuf_remove_trap(trap); <-- (1)
trap = create_new_trap(...);
drakvuf_add_trap(trap); <-- (2)
...

Function parameter on (1) and (2) may be placed on the same address. So drakvuf_add_trap simply removes &trap from
remove_traps hash table:
...
if (g_hash_table_lookup(drakvuf->remove_traps, &trap))
{
    g_hash_table_remove(drakvuf->remove_traps, &trap);
    return 1;
}
...

This also eliminates static code analysis defect reported by CodeQL:
""Local variable address stored in non-local memory""

g_hash_table_insert(drakvuf->remove_traps,
            g_memdup(&trap, sizeof(void*)), <--
            free_wrapper);","…e stored as a key of the remove_traps hash table.
This can lead to restoration of previously removed trap instead of addition of newly created one:
...
drakvuf_trap_t* trap = info->trap;
drakvuf_remove_trap(trap); <-- (1)
trap = create_new_trap(...);
drakvuf_add_trap(trap); <-- (2)
...

Function parameter on (1) and (2) may be placed on the same address. So drakvuf_add_trap simply removes &trap from
remove_traps hash table:
...
if (g_hash_table_lookup(drakvuf->remove_traps, &trap))
{
    g_hash_table_remove(drakvuf->remove_traps, &trap);
    return 1;
}
...

This also eliminates static code analysis defect reported by CodeQL:
""Local variable address stored in non-local memory""

g_hash_table_insert(drakvuf->remove_traps,
            g_memdup(&trap, sizeof(void*)), <--
            free_wrapper);",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1260,2021-07-13T14:32:28Z,2021-07-13T17:50:45Z,2021-07-14T07:15:56Z,MERGED,True,6,8,2,https://github.com/disaykin,Do not use an address of the stack where pointer to trap structure ar…,1,[],https://github.com/tklengyel/drakvuf/pull/1260,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1260#issuecomment-879141260,"…e stored as a key of the remove_traps hash table.
This can lead to restoration of previously removed trap instead of addition of newly created one:
...
drakvuf_trap_t* trap = info->trap;
drakvuf_remove_trap(trap); <-- (1)
trap = create_new_trap(...);
drakvuf_add_trap(trap); <-- (2)
...

Function parameter on (1) and (2) may be placed on the same address. So drakvuf_add_trap simply removes &trap from
remove_traps hash table:
...
if (g_hash_table_lookup(drakvuf->remove_traps, &trap))
{
    g_hash_table_remove(drakvuf->remove_traps, &trap);
    return 1;
}
...

This also eliminates static code analysis defect reported by CodeQL:
""Local variable address stored in non-local memory""

g_hash_table_insert(drakvuf->remove_traps,
            g_memdup(&trap, sizeof(void*)), <--
            free_wrapper);",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1260,2021-07-13T14:32:28Z,2021-07-13T17:50:45Z,2021-07-14T07:15:56Z,MERGED,True,6,8,2,https://github.com/disaykin,Do not use an address of the stack where pointer to trap structure ar…,1,[],https://github.com/tklengyel/drakvuf/pull/1260,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1260#issuecomment-879172406,"…e stored as a key of the remove_traps hash table.
This can lead to restoration of previously removed trap instead of addition of newly created one:
...
drakvuf_trap_t* trap = info->trap;
drakvuf_remove_trap(trap); <-- (1)
trap = create_new_trap(...);
drakvuf_add_trap(trap); <-- (2)
...

Function parameter on (1) and (2) may be placed on the same address. So drakvuf_add_trap simply removes &trap from
remove_traps hash table:
...
if (g_hash_table_lookup(drakvuf->remove_traps, &trap))
{
    g_hash_table_remove(drakvuf->remove_traps, &trap);
    return 1;
}
...

This also eliminates static code analysis defect reported by CodeQL:
""Local variable address stored in non-local memory""

g_hash_table_insert(drakvuf->remove_traps,
            g_memdup(&trap, sizeof(void*)), <--
            free_wrapper);",For this to work I would like to see drakvuf->remove_traps to be created with using g_direct_hash and g_direct_equal,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1260,2021-07-13T14:32:28Z,2021-07-13T17:50:45Z,2021-07-14T07:15:56Z,MERGED,True,6,8,2,https://github.com/disaykin,Do not use an address of the stack where pointer to trap structure ar…,1,[],https://github.com/tklengyel/drakvuf/pull/1260,https://github.com/disaykin,4,https://github.com/tklengyel/drakvuf/pull/1260#issuecomment-879183486,"…e stored as a key of the remove_traps hash table.
This can lead to restoration of previously removed trap instead of addition of newly created one:
...
drakvuf_trap_t* trap = info->trap;
drakvuf_remove_trap(trap); <-- (1)
trap = create_new_trap(...);
drakvuf_add_trap(trap); <-- (2)
...

Function parameter on (1) and (2) may be placed on the same address. So drakvuf_add_trap simply removes &trap from
remove_traps hash table:
...
if (g_hash_table_lookup(drakvuf->remove_traps, &trap))
{
    g_hash_table_remove(drakvuf->remove_traps, &trap);
    return 1;
}
...

This also eliminates static code analysis defect reported by CodeQL:
""Local variable address stored in non-local memory""

g_hash_table_insert(drakvuf->remove_traps,
            g_memdup(&trap, sizeof(void*)), <--
            free_wrapper);",Done,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1260,2021-07-13T14:32:28Z,2021-07-13T17:50:45Z,2021-07-14T07:15:56Z,MERGED,True,6,8,2,https://github.com/disaykin,Do not use an address of the stack where pointer to trap structure ar…,1,[],https://github.com/tklengyel/drakvuf/pull/1260,https://github.com/disaykin,5,https://github.com/tklengyel/drakvuf/pull/1260#issuecomment-879193518,"…e stored as a key of the remove_traps hash table.
This can lead to restoration of previously removed trap instead of addition of newly created one:
...
drakvuf_trap_t* trap = info->trap;
drakvuf_remove_trap(trap); <-- (1)
trap = create_new_trap(...);
drakvuf_add_trap(trap); <-- (2)
...

Function parameter on (1) and (2) may be placed on the same address. So drakvuf_add_trap simply removes &trap from
remove_traps hash table:
...
if (g_hash_table_lookup(drakvuf->remove_traps, &trap))
{
    g_hash_table_remove(drakvuf->remove_traps, &trap);
    return 1;
}
...

This also eliminates static code analysis defect reported by CodeQL:
""Local variable address stored in non-local memory""

g_hash_table_insert(drakvuf->remove_traps,
            g_memdup(&trap, sizeof(void*)), <--
            free_wrapper);",Sure! I didn't think about it. Thanks.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1260,2021-07-13T14:32:28Z,2021-07-13T17:50:45Z,2021-07-14T07:15:56Z,MERGED,True,6,8,2,https://github.com/disaykin,Do not use an address of the stack where pointer to trap structure ar…,1,[],https://github.com/tklengyel/drakvuf/pull/1260,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1260#issuecomment-879208044,"…e stored as a key of the remove_traps hash table.
This can lead to restoration of previously removed trap instead of addition of newly created one:
...
drakvuf_trap_t* trap = info->trap;
drakvuf_remove_trap(trap); <-- (1)
trap = create_new_trap(...);
drakvuf_add_trap(trap); <-- (2)
...

Function parameter on (1) and (2) may be placed on the same address. So drakvuf_add_trap simply removes &trap from
remove_traps hash table:
...
if (g_hash_table_lookup(drakvuf->remove_traps, &trap))
{
    g_hash_table_remove(drakvuf->remove_traps, &trap);
    return 1;
}
...

This also eliminates static code analysis defect reported by CodeQL:
""Local variable address stored in non-local memory""

g_hash_table_insert(drakvuf->remove_traps,
            g_memdup(&trap, sizeof(void*)), <--
            free_wrapper);",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1261,2021-07-14T12:38:52Z,2021-07-14T16:13:32Z,2021-07-22T08:31:48Z,MERGED,True,6,10,1,https://github.com/disaykin,Fix ProcessName calculation in 'inject' event log,1,[],https://github.com/tklengyel/drakvuf/pull/1261,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1261,"In ""inject"" event ProcessName will always equal to empty string if injector->expanded_target is not set.","In ""inject"" event ProcessName will always equal to empty string if injector->expanded_target is not set.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1261,2021-07-14T12:38:52Z,2021-07-14T16:13:32Z,2021-07-22T08:31:48Z,MERGED,True,6,10,1,https://github.com/disaykin,Fix ProcessName calculation in 'inject' event log,1,[],https://github.com/tklengyel/drakvuf/pull/1261,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1261#issuecomment-879855666,"In ""inject"" event ProcessName will always equal to empty string if injector->expanded_target is not set.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1261,2021-07-14T12:38:52Z,2021-07-14T16:13:32Z,2021-07-22T08:31:48Z,MERGED,True,6,10,1,https://github.com/disaykin,Fix ProcessName calculation in 'inject' event log,1,[],https://github.com/tklengyel/drakvuf/pull/1261,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1261#issuecomment-879857177,"In ""inject"" event ProcessName will always equal to empty string if injector->expanded_target is not set.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1262,2021-07-14T12:51:53Z,2021-07-14T16:27:03Z,2021-07-22T08:31:49Z,CLOSED,False,58,43,1,https://github.com/disaykin,Refactor ACCESS_CONTEXT usage in libinjector/win_injector,1,[],https://github.com/tklengyel/drakvuf/pull/1262,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1262,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1262,2021-07-14T12:51:53Z,2021-07-14T16:27:03Z,2021-07-22T08:31:49Z,CLOSED,False,58,43,1,https://github.com/disaykin,Refactor ACCESS_CONTEXT usage in libinjector/win_injector,1,[],https://github.com/tklengyel/drakvuf/pull/1262,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1262#issuecomment-879864480,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1263,2021-07-15T12:23:33Z,2021-07-15T18:36:54Z,2021-07-16T09:57:27Z,MERGED,True,1,1,1,https://github.com/exescript,write-file option: fix drakvuf->inject_cmd method call parameter,1,[],https://github.com/tklengyel/drakvuf/pull/1263,https://github.com/exescript,1,https://github.com/tklengyel/drakvuf/pull/1263,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1263,2021-07-15T12:23:33Z,2021-07-15T18:36:54Z,2021-07-16T09:57:27Z,MERGED,True,1,1,1,https://github.com/exescript,write-file option: fix drakvuf->inject_cmd method call parameter,1,[],https://github.com/tklengyel/drakvuf/pull/1263,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1263#issuecomment-880650849,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1263,2021-07-15T12:23:33Z,2021-07-15T18:36:54Z,2021-07-16T09:57:27Z,MERGED,True,1,1,1,https://github.com/exescript,write-file option: fix drakvuf->inject_cmd method call parameter,1,[],https://github.com/tklengyel/drakvuf/pull/1263,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1263#issuecomment-880651407,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1264,2021-07-21T08:19:49Z,2021-07-21T16:26:14Z,2021-07-21T16:26:14Z,MERGED,True,18,0,1,https://github.com/kscieslinski,Log MmCleanProcessAddressSpace,1,[],https://github.com/tklengyel/drakvuf/pull/1264,https://github.com/kscieslinski,1,https://github.com/tklengyel/drakvuf/pull/1264,"Why we want to log MmCleanProcessAddressSpace
NtTerminateProcess is not always called when process is terminating.
If MmCleanProcessAddressSpace is better for tracking, then why we want to log NtTerminateProcess anyway
NtTerminateProcess provides more details than MmCleanProcessAddressSpace such as process ExitCode.","Why we want to log MmCleanProcessAddressSpace
NtTerminateProcess is not always called when process is terminating.
If MmCleanProcessAddressSpace is better for tracking, then why we want to log NtTerminateProcess anyway
NtTerminateProcess provides more details than MmCleanProcessAddressSpace such as process ExitCode.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1264,2021-07-21T08:19:49Z,2021-07-21T16:26:14Z,2021-07-21T16:26:14Z,MERGED,True,18,0,1,https://github.com/kscieslinski,Log MmCleanProcessAddressSpace,1,[],https://github.com/tklengyel/drakvuf/pull/1264,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1264#issuecomment-883990863,"Why we want to log MmCleanProcessAddressSpace
NtTerminateProcess is not always called when process is terminating.
If MmCleanProcessAddressSpace is better for tracking, then why we want to log NtTerminateProcess anyway
NtTerminateProcess provides more details than MmCleanProcessAddressSpace such as process ExitCode.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1264,2021-07-21T08:19:49Z,2021-07-21T16:26:14Z,2021-07-21T16:26:14Z,MERGED,True,18,0,1,https://github.com/kscieslinski,Log MmCleanProcessAddressSpace,1,[],https://github.com/tklengyel/drakvuf/pull/1264,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1264#issuecomment-884165520,"Why we want to log MmCleanProcessAddressSpace
NtTerminateProcess is not always called when process is terminating.
If MmCleanProcessAddressSpace is better for tracking, then why we want to log NtTerminateProcess anyway
NtTerminateProcess provides more details than MmCleanProcessAddressSpace such as process ExitCode.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1266,2021-07-22T08:25:04Z,2021-07-22T13:34:54Z,2021-07-27T13:56:45Z,MERGED,True,3,1,1,https://github.com/disaykin,Add syscall trap name in syscalls plugin.,1,[],https://github.com/tklengyel/drakvuf/pull/1266,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1266,"This fixes debug messages while syscal initializing:
           Trap added @ PA 0x2a41435 RPA 0xff002435 Page 10817 for (null).","This fixes debug messages while syscal initializing:
           Trap added @ PA 0x2a41435 RPA 0xff002435 Page 10817 for (null).",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1266,2021-07-22T08:25:04Z,2021-07-22T13:34:54Z,2021-07-27T13:56:45Z,MERGED,True,3,1,1,https://github.com/disaykin,Add syscall trap name in syscalls plugin.,1,[],https://github.com/tklengyel/drakvuf/pull/1266,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1266#issuecomment-884739175,"This fixes debug messages while syscal initializing:
           Trap added @ PA 0x2a41435 RPA 0xff002435 Page 10817 for (null).",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1266,2021-07-22T08:25:04Z,2021-07-22T13:34:54Z,2021-07-27T13:56:45Z,MERGED,True,3,1,1,https://github.com/disaykin,Add syscall trap name in syscalls plugin.,1,[],https://github.com/tklengyel/drakvuf/pull/1266,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1266#issuecomment-884886048,"This fixes debug messages while syscal initializing:
           Trap added @ PA 0x2a41435 RPA 0xff002435 Page 10817 for (null).",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1267,2021-07-22T08:41:58Z,2021-08-13T12:19:40Z,2021-08-24T09:07:02Z,MERGED,True,2,2,1,https://github.com/disaykin,Pass the control to the original exception handler in case of DLL is …,1,[],https://github.com/tklengyel/drakvuf/pull/1267,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1267,"…already hooked
@kscieslinski @BonusPlay @chivay","…already hooked
@kscieslinski @BonusPlay @chivay",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1267,2021-07-22T08:41:58Z,2021-08-13T12:19:40Z,2021-08-24T09:07:02Z,MERGED,True,2,2,1,https://github.com/disaykin,Pass the control to the original exception handler in case of DLL is …,1,[],https://github.com/tklengyel/drakvuf/pull/1267,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1267#issuecomment-884748211,"…already hooked
@kscieslinski @BonusPlay @chivay",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1267,2021-07-22T08:41:58Z,2021-08-13T12:19:40Z,2021-08-24T09:07:02Z,MERGED,True,2,2,1,https://github.com/disaykin,Pass the control to the original exception handler in case of DLL is …,1,[],https://github.com/tklengyel/drakvuf/pull/1267,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1267#issuecomment-884886431,"…already hooked
@kscieslinski @BonusPlay @chivay",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1267,2021-07-22T08:41:58Z,2021-08-13T12:19:40Z,2021-08-24T09:07:02Z,MERGED,True,2,2,1,https://github.com/disaykin,Pass the control to the original exception handler in case of DLL is …,1,[],https://github.com/tklengyel/drakvuf/pull/1267,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1267#issuecomment-884959441,"…already hooked
@kscieslinski @BonusPlay @chivay","LGTM, will wait for people cc-d to chime in a bit before merging",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1267,2021-07-22T08:41:58Z,2021-08-13T12:19:40Z,2021-08-24T09:07:02Z,MERGED,True,2,2,1,https://github.com/disaykin,Pass the control to the original exception handler in case of DLL is …,1,[],https://github.com/tklengyel/drakvuf/pull/1267,https://github.com/BonusPlay,5,https://github.com/tklengyel/drakvuf/pull/1267#issuecomment-885543387,"…already hooked
@kscieslinski @BonusPlay @chivay","Wouldn't this cause more, unnecessary BSODs when hooking APIs on CoW pages? 2 processes can use same page with DLL, which can cause 2nd attempt to hook it.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1267,2021-07-22T08:41:58Z,2021-08-13T12:19:40Z,2021-08-24T09:07:02Z,MERGED,True,2,2,1,https://github.com/disaykin,Pass the control to the original exception handler in case of DLL is …,1,[],https://github.com/tklengyel/drakvuf/pull/1267,https://github.com/disaykin,6,https://github.com/tklengyel/drakvuf/pull/1267#issuecomment-885560668,"…already hooked
@kscieslinski @BonusPlay @chivay",Good question. Maybe it shouldn't use my change.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1267,2021-07-22T08:41:58Z,2021-08-13T12:19:40Z,2021-08-24T09:07:02Z,MERGED,True,2,2,1,https://github.com/disaykin,Pass the control to the original exception handler in case of DLL is …,1,[],https://github.com/tklengyel/drakvuf/pull/1267,https://github.com/disaykin,7,https://github.com/tklengyel/drakvuf/pull/1267#issuecomment-885563120,"…already hooked
@kscieslinski @BonusPlay @chivay",@BonusPlay Do you have good collection of real samples for checking? On my samples I do not have any BSOD occured.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1267,2021-07-22T08:41:58Z,2021-08-13T12:19:40Z,2021-08-24T09:07:02Z,MERGED,True,2,2,1,https://github.com/disaykin,Pass the control to the original exception handler in case of DLL is …,1,[],https://github.com/tklengyel/drakvuf/pull/1267,https://github.com/BonusPlay,8,https://github.com/tklengyel/drakvuf/pull/1267#issuecomment-885569245,"…already hooked
@kscieslinski @BonusPlay @chivay","Yes, we even have infrastructure to perform tests like this, but sadly it's not ready yet, so I'll have to do that manually - which will take some time, so the results would probably be next week.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1267,2021-07-22T08:41:58Z,2021-08-13T12:19:40Z,2021-08-24T09:07:02Z,MERGED,True,2,2,1,https://github.com/disaykin,Pass the control to the original exception handler in case of DLL is …,1,[],https://github.com/tklengyel/drakvuf/pull/1267,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/1267#issuecomment-890385796,"…already hooked
@kscieslinski @BonusPlay @chivay",@BonusPlay were you able to test this PR?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1267,2021-07-22T08:41:58Z,2021-08-13T12:19:40Z,2021-08-24T09:07:02Z,MERGED,True,2,2,1,https://github.com/disaykin,Pass the control to the original exception handler in case of DLL is …,1,[],https://github.com/tklengyel/drakvuf/pull/1267,https://github.com/disaykin,10,https://github.com/tklengyel/drakvuf/pull/1267#issuecomment-891043047,"…already hooked
@kscieslinski @BonusPlay @chivay",@BonusPlay I read the code. CoW handler do not cause a call of vmi_request_page_fault function at all.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1268,2021-07-26T07:34:05Z,2021-08-11T10:55:49Z,2021-08-13T10:28:37Z,MERGED,True,7,46,1,https://github.com/manorit2001,[Linux] modify setup_stack for updated injector,1,[],https://github.com/tklengyel/drakvuf/pull/1268,https://github.com/manorit2001,1,https://github.com/tklengyel/drakvuf/pull/1268,Reference: https://blog.rchapman.org/posts/Linux_System_Call_Table_for_x86_64/,Reference: https://blog.rchapman.org/posts/Linux_System_Call_Table_for_x86_64/,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1268,2021-07-26T07:34:05Z,2021-08-11T10:55:49Z,2021-08-13T10:28:37Z,MERGED,True,7,46,1,https://github.com/manorit2001,[Linux] modify setup_stack for updated injector,1,[],https://github.com/tklengyel/drakvuf/pull/1268,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1268#issuecomment-886453334,Reference: https://blog.rchapman.org/posts/Linux_System_Call_Table_for_x86_64/,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1268,2021-07-26T07:34:05Z,2021-08-11T10:55:49Z,2021-08-13T10:28:37Z,MERGED,True,7,46,1,https://github.com/manorit2001,[Linux] modify setup_stack for updated injector,1,[],https://github.com/tklengyel/drakvuf/pull/1268,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1268#issuecomment-886629782,Reference: https://blog.rchapman.org/posts/Linux_System_Call_Table_for_x86_64/,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1268,2021-07-26T07:34:05Z,2021-08-11T10:55:49Z,2021-08-13T10:28:37Z,MERGED,True,7,46,1,https://github.com/manorit2001,[Linux] modify setup_stack for updated injector,1,[],https://github.com/tklengyel/drakvuf/pull/1268,https://github.com/manorit2001,4,https://github.com/tklengyel/drakvuf/pull/1268#issuecomment-886649441,Reference: https://blog.rchapman.org/posts/Linux_System_Call_Table_for_x86_64/,"Hi, how is the windows build failing due to this change? I don't understand it. I just changed Linux related code only",True,"{'LAUGH': ['https://github.com/BonusPlay', 'https://github.com/chivay']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1268,2021-07-26T07:34:05Z,2021-08-11T10:55:49Z,2021-08-13T10:28:37Z,MERGED,True,7,46,1,https://github.com/manorit2001,[Linux] modify setup_stack for updated injector,1,[],https://github.com/tklengyel/drakvuf/pull/1268,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1268#issuecomment-886679890,Reference: https://blog.rchapman.org/posts/Linux_System_Call_Table_for_x86_64/,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1268,2021-07-26T07:34:05Z,2021-08-11T10:55:49Z,2021-08-13T10:28:37Z,MERGED,True,7,46,1,https://github.com/manorit2001,[Linux] modify setup_stack for updated injector,1,[],https://github.com/tklengyel/drakvuf/pull/1268,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1268#issuecomment-886680204,Reference: https://blog.rchapman.org/posts/Linux_System_Call_Table_for_x86_64/,"There is a windows test that fails occasionally, unrelated to this pr.",True,{'THUMBS_UP': ['https://github.com/manorit2001']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1268,2021-07-26T07:34:05Z,2021-08-11T10:55:49Z,2021-08-13T10:28:37Z,MERGED,True,7,46,1,https://github.com/manorit2001,[Linux] modify setup_stack for updated injector,1,[],https://github.com/tklengyel/drakvuf/pull/1268,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/1268#issuecomment-886748893,Reference: https://blog.rchapman.org/posts/Linux_System_Call_Table_for_x86_64/,"So why would the 4th input be in r10 when the SystemV ABI is clearly: rdi, rsi, rdx, rcx, r8, r9? See https://wiki.osdev.org/System_V_ABI",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1268,2021-07-26T07:34:05Z,2021-08-11T10:55:49Z,2021-08-13T10:28:37Z,MERGED,True,7,46,1,https://github.com/manorit2001,[Linux] modify setup_stack for updated injector,1,[],https://github.com/tklengyel/drakvuf/pull/1268,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/1268#issuecomment-886751558,Reference: https://blog.rchapman.org/posts/Linux_System_Call_Table_for_x86_64/,"Ah, I see. You are changing it to match the System call ABI, not the function call ABI. I don't think this is the right thing to do, I don't think the linux injector strictly injects system calls, but rather function calls. If it does a mix, then the setup function has to be changed to be able to differentiate whether a function call or a system call is being setup.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1268,2021-07-26T07:34:05Z,2021-08-11T10:55:49Z,2021-08-13T10:28:37Z,MERGED,True,7,46,1,https://github.com/manorit2001,[Linux] modify setup_stack for updated injector,1,[],https://github.com/tklengyel/drakvuf/pull/1268,https://github.com/manorit2001,9,https://github.com/tklengyel/drakvuf/pull/1268#issuecomment-886853653,Reference: https://blog.rchapman.org/posts/Linux_System_Call_Table_for_x86_64/,"Ah, I see. You are changing it to match the System call ABI, not the function call ABI. I don't think this is the right thing to do, I don't think the linux injector strictly injects system calls, but rather function calls. If it does a mix, then the setup function has to be changed to be able to differentiate whether a function call or a system call is being setup.

Ah yes, the current one calls functions but I am working on a strictly syscall one ig, I would like @kscieslinski to confirm this though. And if that is the case then yes, I don't think it is ready to be merged yet until the syscall injector is complete.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1268,2021-07-26T07:34:05Z,2021-08-11T10:55:49Z,2021-08-13T10:28:37Z,MERGED,True,7,46,1,https://github.com/manorit2001,[Linux] modify setup_stack for updated injector,1,[],https://github.com/tklengyel/drakvuf/pull/1268,https://github.com/kscieslinski,10,https://github.com/tklengyel/drakvuf/pull/1268#issuecomment-892411177,Reference: https://blog.rchapman.org/posts/Linux_System_Call_Table_for_x86_64/,"Yes, I agree. We want to abstract from libc and use raw syscalls for Linux injector.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1268,2021-07-26T07:34:05Z,2021-08-11T10:55:49Z,2021-08-13T10:28:37Z,MERGED,True,7,46,1,https://github.com/manorit2001,[Linux] modify setup_stack for updated injector,1,[],https://github.com/tklengyel/drakvuf/pull/1268,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/1268#issuecomment-892795022,Reference: https://blog.rchapman.org/posts/Linux_System_Call_Table_for_x86_64/,Please at least add a comment to the linux_setup_stack function is that the ABI it follows is the system-call ABI and not the function-call ABI.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1268,2021-07-26T07:34:05Z,2021-08-11T10:55:49Z,2021-08-13T10:28:37Z,MERGED,True,7,46,1,https://github.com/manorit2001,[Linux] modify setup_stack for updated injector,1,[],https://github.com/tklengyel/drakvuf/pull/1268,https://github.com/manorit2001,12,https://github.com/tklengyel/drakvuf/pull/1268#issuecomment-893231396,Reference: https://blog.rchapman.org/posts/Linux_System_Call_Table_for_x86_64/,"Btw, if we are targetting syscalls only, there is no point saving the rip in stack everytime syscall is called as ret isn't executed when we are calling syscalls, so can we remove that part too? ( as otherwise the stack keeps getting filled based on the number of syscalls we are performing and we encounter a limit when setup_stack starts failing )",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1268,2021-07-26T07:34:05Z,2021-08-11T10:55:49Z,2021-08-13T10:28:37Z,MERGED,True,7,46,1,https://github.com/manorit2001,[Linux] modify setup_stack for updated injector,1,[],https://github.com/tklengyel/drakvuf/pull/1268,https://github.com/manorit2001,13,https://github.com/tklengyel/drakvuf/pull/1268#issuecomment-894604137,Reference: https://blog.rchapman.org/posts/Linux_System_Call_Table_for_x86_64/,"@chivay @BonusPlay, is it fine now? I have added the comments telling linux follows syscall convention and I have removed the function stack related changes",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1269,2021-07-26T10:56:54Z,2021-07-27T12:59:33Z,2021-07-27T13:57:00Z,MERGED,True,15,11,1,https://github.com/disaykin,Fix memory leak in memdump setup_dotnet_hooks,1,[],https://github.com/tklengyel/drakvuf/pull/1269,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1269,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1269,2021-07-26T10:56:54Z,2021-07-27T12:59:33Z,2021-07-27T13:57:00Z,MERGED,True,15,11,1,https://github.com/disaykin,Fix memory leak in memdump setup_dotnet_hooks,1,[],https://github.com/tklengyel/drakvuf/pull/1269,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1269#issuecomment-886595974,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1269,2021-07-26T10:56:54Z,2021-07-27T12:59:33Z,2021-07-27T13:57:00Z,MERGED,True,15,11,1,https://github.com/disaykin,Fix memory leak in memdump setup_dotnet_hooks,1,[],https://github.com/tklengyel/drakvuf/pull/1269,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1269#issuecomment-886752568,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1270,2021-07-29T10:22:22Z,2021-08-13T12:19:59Z,2021-08-20T15:24:23Z,MERGED,True,1999,1033,16,https://github.com/manorit2001,[Linux] Injector rewrite with shellcode injection support,9,[],https://github.com/tklengyel/drakvuf/pull/1270,https://github.com/manorit2001,1,https://github.com/tklengyel/drakvuf/pull/1270,"The previous linux injector used to use glibc for injecting stuff inside the guest OS which wasn't a very stable method and was prone to failure with glibc version changes. As in Linux, the syscall numbers are consistent across different Linux versions, this injector focuses on using that as an interface for injecting methods
Right now, It just supports shellcode injection method.","The previous linux injector used to use glibc for injecting stuff inside the guest OS which wasn't a very stable method and was prone to failure with glibc version changes. As in Linux, the syscall numbers are consistent across different Linux versions, this injector focuses on using that as an interface for injecting methods
Right now, It just supports shellcode injection method.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1270,2021-07-29T10:22:22Z,2021-08-13T12:19:59Z,2021-08-20T15:24:23Z,MERGED,True,1999,1033,16,https://github.com/manorit2001,[Linux] Injector rewrite with shellcode injection support,9,[],https://github.com/tklengyel/drakvuf/pull/1270,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1270#issuecomment-888997057,"The previous linux injector used to use glibc for injecting stuff inside the guest OS which wasn't a very stable method and was prone to failure with glibc version changes. As in Linux, the syscall numbers are consistent across different Linux versions, this injector focuses on using that as an interface for injecting methods
Right now, It just supports shellcode injection method.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1270,2021-07-29T10:22:22Z,2021-08-13T12:19:59Z,2021-08-20T15:24:23Z,MERGED,True,1999,1033,16,https://github.com/manorit2001,[Linux] Injector rewrite with shellcode injection support,9,[],https://github.com/tklengyel/drakvuf/pull/1270,https://github.com/kscieslinski,3,https://github.com/tklengyel/drakvuf/pull/1270#issuecomment-889044395,"The previous linux injector used to use glibc for injecting stuff inside the guest OS which wasn't a very stable method and was prone to failure with glibc version changes. As in Linux, the syscall numbers are consistent across different Linux versions, this injector focuses on using that as an interface for injecting methods
Right now, It just supports shellcode injection method.","As @chivay has noted, before this PR. get's merged, we must fix the issue with unnamed structures.",True,"{'THUMBS_UP': ['https://github.com/manorit2001', 'https://github.com/chivay']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1270,2021-07-29T10:22:22Z,2021-08-13T12:19:59Z,2021-08-20T15:24:23Z,MERGED,True,1999,1033,16,https://github.com/manorit2001,[Linux] Injector rewrite with shellcode injection support,9,[],https://github.com/tklengyel/drakvuf/pull/1270,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1270#issuecomment-890591254,"The previous linux injector used to use glibc for injecting stuff inside the guest OS which wasn't a very stable method and was prone to failure with glibc version changes. As in Linux, the syscall numbers are consistent across different Linux versions, this injector focuses on using that as an interface for injecting methods
Right now, It just supports shellcode injection method.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1270,2021-07-29T10:22:22Z,2021-08-13T12:19:59Z,2021-08-20T15:24:23Z,MERGED,True,1999,1033,16,https://github.com/manorit2001,[Linux] Injector rewrite with shellcode injection support,9,[],https://github.com/tklengyel/drakvuf/pull/1270,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1270#issuecomment-892795312,"The previous linux injector used to use glibc for injecting stuff inside the guest OS which wasn't a very stable method and was prone to failure with glibc version changes. As in Linux, the syscall numbers are consistent across different Linux versions, this injector focuses on using that as an interface for injecting methods
Right now, It just supports shellcode injection method.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1270,2021-07-29T10:22:22Z,2021-08-13T12:19:59Z,2021-08-20T15:24:23Z,MERGED,True,1999,1033,16,https://github.com/manorit2001,[Linux] Injector rewrite with shellcode injection support,9,[],https://github.com/tklengyel/drakvuf/pull/1270,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1270#issuecomment-894512574,"The previous linux injector used to use glibc for injecting stuff inside the guest OS which wasn't a very stable method and was prone to failure with glibc version changes. As in Linux, the syscall numbers are consistent across different Linux versions, this injector focuses on using that as an interface for injecting methods
Right now, It just supports shellcode injection method.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1270,2021-07-29T10:22:22Z,2021-08-13T12:19:59Z,2021-08-20T15:24:23Z,MERGED,True,1999,1033,16,https://github.com/manorit2001,[Linux] Injector rewrite with shellcode injection support,9,[],https://github.com/tklengyel/drakvuf/pull/1270,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/1270#issuecomment-894885223,"The previous linux injector used to use glibc for injecting stuff inside the guest OS which wasn't a very stable method and was prone to failure with glibc version changes. As in Linux, the syscall numbers are consistent across different Linux versions, this injector focuses on using that as an interface for injecting methods
Right now, It just supports shellcode injection method.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1270,2021-07-29T10:22:22Z,2021-08-13T12:19:59Z,2021-08-20T15:24:23Z,MERGED,True,1999,1033,16,https://github.com/manorit2001,[Linux] Injector rewrite with shellcode injection support,9,[],https://github.com/tklengyel/drakvuf/pull/1270,https://github.com/manorit2001,8,https://github.com/tklengyel/drakvuf/pull/1270#issuecomment-895983484,"The previous linux injector used to use glibc for injecting stuff inside the guest OS which wasn't a very stable method and was prone to failure with glibc version changes. As in Linux, the syscall numbers are consistent across different Linux versions, this injector focuses on using that as an interface for injecting methods
Right now, It just supports shellcode injection method.",@tklengyel This PR depends on #1268,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1270,2021-07-29T10:22:22Z,2021-08-13T12:19:59Z,2021-08-20T15:24:23Z,MERGED,True,1999,1033,16,https://github.com/manorit2001,[Linux] Injector rewrite with shellcode injection support,9,[],https://github.com/tklengyel/drakvuf/pull/1270,https://github.com/manorit2001,9,https://github.com/tklengyel/drakvuf/pull/1270#issuecomment-896536735,"The previous linux injector used to use glibc for injecting stuff inside the guest OS which wasn't a very stable method and was prone to failure with glibc version changes. As in Linux, the syscall numbers are consistent across different Linux versions, this injector focuses on using that as an interface for injecting methods
Right now, It just supports shellcode injection method.",@tklengyel could you merge these today? I have other methods that branch from this PR,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1270,2021-07-29T10:22:22Z,2021-08-13T12:19:59Z,2021-08-20T15:24:23Z,MERGED,True,1999,1033,16,https://github.com/manorit2001,[Linux] Injector rewrite with shellcode injection support,9,[],https://github.com/tklengyel/drakvuf/pull/1270,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/1270#issuecomment-896721238,"The previous linux injector used to use glibc for injecting stuff inside the guest OS which wasn't a very stable method and was prone to failure with glibc version changes. As in Linux, the syscall numbers are consistent across different Linux versions, this injector focuses on using that as an interface for injecting methods
Right now, It just supports shellcode injection method.",@drakvuf-jenkins This is OK to test,True,{'THUMBS_UP': ['https://github.com/kscieslinski']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1270,2021-07-29T10:22:22Z,2021-08-13T12:19:59Z,2021-08-20T15:24:23Z,MERGED,True,1999,1033,16,https://github.com/manorit2001,[Linux] Injector rewrite with shellcode injection support,9,[],https://github.com/tklengyel/drakvuf/pull/1270,https://github.com/kscieslinski,11,https://github.com/tklengyel/drakvuf/pull/1270#issuecomment-897374752,"The previous linux injector used to use glibc for injecting stuff inside the guest OS which wasn't a very stable method and was prone to failure with glibc version changes. As in Linux, the syscall numbers are consistent across different Linux versions, this injector focuses on using that as an interface for injecting methods
Right now, It just supports shellcode injection method.",@tklengyel is everything ok with the Jenkins? It looks like it didn't start.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1270,2021-07-29T10:22:22Z,2021-08-13T12:19:59Z,2021-08-20T15:24:23Z,MERGED,True,1999,1033,16,https://github.com/manorit2001,[Linux] Injector rewrite with shellcode injection support,9,[],https://github.com/tklengyel/drakvuf/pull/1270,https://github.com/tklengyel,12,https://github.com/tklengyel/drakvuf/pull/1270#issuecomment-897596433,"The previous linux injector used to use glibc for injecting stuff inside the guest OS which wasn't a very stable method and was prone to failure with glibc version changes. As in Linux, the syscall numbers are consistent across different Linux versions, this injector focuses on using that as an interface for injecting methods
Right now, It just supports shellcode injection method.","It's offline right now, I'll have to investigate",True,{'THUMBS_UP': ['https://github.com/kscieslinski']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1270,2021-07-29T10:22:22Z,2021-08-13T12:19:59Z,2021-08-20T15:24:23Z,MERGED,True,1999,1033,16,https://github.com/manorit2001,[Linux] Injector rewrite with shellcode injection support,9,[],https://github.com/tklengyel/drakvuf/pull/1270,https://github.com/tklengyel,13,https://github.com/tklengyel/drakvuf/pull/1270#issuecomment-897676401,"The previous linux injector used to use glibc for injecting stuff inside the guest OS which wasn't a very stable method and was prone to failure with glibc version changes. As in Linux, the syscall numbers are consistent across different Linux versions, this injector focuses on using that as an interface for injecting methods
Right now, It just supports shellcode injection method.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1270,2021-07-29T10:22:22Z,2021-08-13T12:19:59Z,2021-08-20T15:24:23Z,MERGED,True,1999,1033,16,https://github.com/manorit2001,[Linux] Injector rewrite with shellcode injection support,9,[],https://github.com/tklengyel/drakvuf/pull/1270,https://github.com/manorit2001,14,https://github.com/tklengyel/drakvuf/pull/1270#issuecomment-898415430,"The previous linux injector used to use glibc for injecting stuff inside the guest OS which wasn't a very stable method and was prone to failure with glibc version changes. As in Linux, the syscall numbers are consistent across different Linux versions, this injector focuses on using that as an interface for injecting methods
Right now, It just supports shellcode injection method.",@tklengyel is it ready to be merged?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1271,2021-07-29T14:04:31Z,2021-07-30T03:52:00Z,2021-07-30T07:19:45Z,MERGED,True,63,21,3,https://github.com/disaykin,Decorate injector_start_app's call for file injection in more clean i…,1,[],https://github.com/tklengyel/drakvuf/pull/1271,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1271,…nterface,…nterface,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1271,2021-07-29T14:04:31Z,2021-07-30T03:52:00Z,2021-07-30T07:19:45Z,MERGED,True,63,21,3,https://github.com/disaykin,Decorate injector_start_app's call for file injection in more clean i…,1,[],https://github.com/tklengyel/drakvuf/pull/1271,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1271#issuecomment-889172930,…nterface,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1271,2021-07-29T14:04:31Z,2021-07-30T03:52:00Z,2021-07-30T07:19:45Z,MERGED,True,63,21,3,https://github.com/disaykin,Decorate injector_start_app's call for file injection in more clean i…,1,[],https://github.com/tklengyel/drakvuf/pull/1271,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1271#issuecomment-889237935,…nterface,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1271,2021-07-29T14:04:31Z,2021-07-30T03:52:00Z,2021-07-30T07:19:45Z,MERGED,True,63,21,3,https://github.com/disaykin,Decorate injector_start_app's call for file injection in more clean i…,1,[],https://github.com/tklengyel/drakvuf/pull/1271,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1271#issuecomment-889310200,…nterface,So I find it a bit confusing now that the inject_file option will result in a call to inject_cmd and the write_file option will call inject_file. I think the naming of these options/functions need to be cleared up to be aligned.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1271,2021-07-29T14:04:31Z,2021-07-30T03:52:00Z,2021-07-30T07:19:45Z,MERGED,True,63,21,3,https://github.com/disaykin,Decorate injector_start_app's call for file injection in more clean i…,1,[],https://github.com/tklengyel/drakvuf/pull/1271,https://github.com/disaykin,5,https://github.com/tklengyel/drakvuf/pull/1271#issuecomment-889356159,…nterface,Done,True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1272,2021-07-29T14:09:00Z,2021-08-13T12:20:42Z,2021-08-24T09:05:25Z,MERGED,True,44,67,3,https://github.com/disaykin,Rewrite vmi_read_unicode_str+vmi_convert_str_encoding by drakvuf_read…,1,[],https://github.com/tklengyel/drakvuf/pull/1272,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1272,…_unicode_common,…_unicode_common,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1272,2021-07-29T14:09:00Z,2021-08-13T12:20:42Z,2021-08-24T09:05:25Z,MERGED,True,44,67,3,https://github.com/disaykin,Rewrite vmi_read_unicode_str+vmi_convert_str_encoding by drakvuf_read…,1,[],https://github.com/tklengyel/drakvuf/pull/1272,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1272#issuecomment-889176653,…_unicode_common,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1272,2021-07-29T14:09:00Z,2021-08-13T12:20:42Z,2021-08-24T09:05:25Z,MERGED,True,44,67,3,https://github.com/disaykin,Rewrite vmi_read_unicode_str+vmi_convert_str_encoding by drakvuf_read…,1,[],https://github.com/tklengyel/drakvuf/pull/1272,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1272#issuecomment-889238620,…_unicode_common,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1272,2021-07-29T14:09:00Z,2021-08-13T12:20:42Z,2021-08-24T09:05:25Z,MERGED,True,44,67,3,https://github.com/disaykin,Rewrite vmi_read_unicode_str+vmi_convert_str_encoding by drakvuf_read…,1,[],https://github.com/tklengyel/drakvuf/pull/1272,https://github.com/disaykin,4,https://github.com/tklengyel/drakvuf/pull/1272#issuecomment-889357457,…_unicode_common,"False negative
Running Injector to write autoruns into guest through PID 600
Placed /shared/sysinternals/Autoruns64.exe into VM, now executing
autoruns process found: 0",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1272,2021-07-29T14:09:00Z,2021-08-13T12:20:42Z,2021-08-24T09:05:25Z,MERGED,True,44,67,3,https://github.com/disaykin,Rewrite vmi_read_unicode_str+vmi_convert_str_encoding by drakvuf_read…,1,[],https://github.com/tklengyel/drakvuf/pull/1272,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1272#issuecomment-892795605,…_unicode_common,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1273,2021-07-29T14:13:54Z,2021-07-31T18:20:48Z,2021-07-31T18:57:01Z,MERGED,True,37,17,1,https://github.com/disaykin,Add support for write-file on x86,2,[],https://github.com/tklengyel/drakvuf/pull/1273,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1273,,,True,{'THUMBS_UP': ['https://github.com/exescript']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1273,2021-07-29T14:13:54Z,2021-07-31T18:20:48Z,2021-07-31T18:57:01Z,MERGED,True,37,17,1,https://github.com/disaykin,Add support for write-file on x86,2,[],https://github.com/tklengyel/drakvuf/pull/1273,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1273#issuecomment-889180855,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1273,2021-07-29T14:13:54Z,2021-07-31T18:20:48Z,2021-07-31T18:57:01Z,MERGED,True,37,17,1,https://github.com/disaykin,Add support for write-file on x86,2,[],https://github.com/tklengyel/drakvuf/pull/1273,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1273#issuecomment-889306969,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1274,2021-07-29T15:23:23Z,2021-12-01T14:49:19Z,2021-12-01T14:49:19Z,CLOSED,False,72,84,15,https://github.com/disaykin,Make drakvuf_read_unicode interface similar to other drakvuf-* functions,1,[],https://github.com/tklengyel/drakvuf/pull/1274,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1274,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1274,2021-07-29T15:23:23Z,2021-12-01T14:49:19Z,2021-12-01T14:49:19Z,CLOSED,False,72,84,15,https://github.com/disaykin,Make drakvuf_read_unicode interface similar to other drakvuf-* functions,1,[],https://github.com/tklengyel/drakvuf/pull/1274,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1274#issuecomment-889238486,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1274,2021-07-29T15:23:23Z,2021-12-01T14:49:19Z,2021-12-01T14:49:19Z,CLOSED,False,72,84,15,https://github.com/disaykin,Make drakvuf_read_unicode interface similar to other drakvuf-* functions,1,[],https://github.com/tklengyel/drakvuf/pull/1274,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1274#issuecomment-889238853,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1274,2021-07-29T15:23:23Z,2021-12-01T14:49:19Z,2021-12-01T14:49:19Z,CLOSED,False,72,84,15,https://github.com/disaykin,Make drakvuf_read_unicode interface similar to other drakvuf-* functions,1,[],https://github.com/tklengyel/drakvuf/pull/1274,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1274#issuecomment-889313278,,I'm not a 100% sure about this change. The current approach required the caller to have a lock on the vmi instance already. That's gone now. You are not taking the vmi lock in these functions any more and generally that's something I want to avoid.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1274,2021-07-29T15:23:23Z,2021-12-01T14:49:19Z,2021-12-01T14:49:19Z,CLOSED,False,72,84,15,https://github.com/disaykin,Make drakvuf_read_unicode interface similar to other drakvuf-* functions,1,[],https://github.com/tklengyel/drakvuf/pull/1274,https://github.com/disaykin,5,https://github.com/tklengyel/drakvuf/pull/1274#issuecomment-889360311,,All functions in libdrakvuf work with the vmi instance without taking the lock. And this is as intended.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1274,2021-07-29T15:23:23Z,2021-12-01T14:49:19Z,2021-12-01T14:49:19Z,CLOSED,False,72,84,15,https://github.com/disaykin,Make drakvuf_read_unicode interface similar to other drakvuf-* functions,1,[],https://github.com/tklengyel/drakvuf/pull/1274,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1274#issuecomment-889610513,,Libdrakvuf of course has access to the vmi instance without taking the lock. But it should actually take the lock when it needs to call any LibVMI functions. This can complicate things in case the caller already has the lock (probably a recursive lock should be used). But the goal with the lock is to make LibVMI thread safe. It is not by default. While currently there is no upstream plugin in DRAKVUF that uses threads (all plugins right now are just using the event callbacks) this is likely to change soon. So the direction we want to head is improved thread safety.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1274,2021-07-29T15:23:23Z,2021-12-01T14:49:19Z,2021-12-01T14:49:19Z,CLOSED,False,72,84,15,https://github.com/disaykin,Make drakvuf_read_unicode interface similar to other drakvuf-* functions,1,[],https://github.com/tklengyel/drakvuf/pull/1274,https://github.com/disaykin,7,https://github.com/tklengyel/drakvuf/pull/1274#issuecomment-889686466,,"I think if you plan to add a lock on the vmi instance every time it is used in the libdrakwuf library, it is better to do it in consistent and uniform way. To do this, it is better to bring the API to a consistent look.",True,{'THUMBS_UP': ['https://github.com/BonusPlay']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1274,2021-07-29T15:23:23Z,2021-12-01T14:49:19Z,2021-12-01T14:49:19Z,CLOSED,False,72,84,15,https://github.com/disaykin,Make drakvuf_read_unicode interface similar to other drakvuf-* functions,1,[],https://github.com/tklengyel/drakvuf/pull/1274,https://github.com/disaykin,8,https://github.com/tklengyel/drakvuf/pull/1274#issuecomment-891624381,,@tklengyel what is your final decision?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1274,2021-07-29T15:23:23Z,2021-12-01T14:49:19Z,2021-12-01T14:49:19Z,CLOSED,False,72,84,15,https://github.com/disaykin,Make drakvuf_read_unicode interface similar to other drakvuf-* functions,1,[],https://github.com/tklengyel/drakvuf/pull/1274,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/1274#issuecomment-892593037,,I'm not completely against the idea but for now I would rather leave it as-is.,True,"{'THUMBS_DOWN': ['https://github.com/disaykin', 'https://github.com/BonusPlay']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1275,2021-07-31T08:55:22Z,2021-08-13T16:41:45Z,2021-08-13T16:41:45Z,MERGED,True,4308,69,27,https://github.com/jgru,Enhance HID simulation by automatic button clicking,75,[],https://github.com/tklengyel/drakvuf/pull/1275,https://github.com/jgru,1,https://github.com/tklengyel/drakvuf/pull/1275,"Dear Tamas,
this pull requests extends the functionality of the hidsim-plugin with the ability to scan the GUI of the default desktop for windows of interest and automatically click on those regions, when running a Windows 7-guest.
Please refer to ./src/plugins/hidsim/readme.org for the documentation on the usage of this feature and a thorough description of the concepts behind the implementation.
Thanks already in advance for reviewing and considering this PR.
Best regards,
Jan","Dear Tamas,
this pull requests extends the functionality of the hidsim-plugin with the ability to scan the GUI of the default desktop for windows of interest and automatically click on those regions, when running a Windows 7-guest.
Please refer to ./src/plugins/hidsim/readme.org for the documentation on the usage of this feature and a thorough description of the concepts behind the implementation.
Thanks already in advance for reviewing and considering this PR.
Best regards,
Jan",True,{'HOORAY': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1275,2021-07-31T08:55:22Z,2021-08-13T16:41:45Z,2021-08-13T16:41:45Z,MERGED,True,4308,69,27,https://github.com/jgru,Enhance HID simulation by automatic button clicking,75,[],https://github.com/tklengyel/drakvuf/pull/1275,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1275#issuecomment-890314759,"Dear Tamas,
this pull requests extends the functionality of the hidsim-plugin with the ability to scan the GUI of the default desktop for windows of interest and automatically click on those regions, when running a Windows 7-guest.
Please refer to ./src/plugins/hidsim/readme.org for the documentation on the usage of this feature and a thorough description of the concepts behind the implementation.
Thanks already in advance for reviewing and considering this PR.
Best regards,
Jan",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1275,2021-07-31T08:55:22Z,2021-08-13T16:41:45Z,2021-08-13T16:41:45Z,MERGED,True,4308,69,27,https://github.com/jgru,Enhance HID simulation by automatic button clicking,75,[],https://github.com/tklengyel/drakvuf/pull/1275,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1275#issuecomment-890369527,"Dear Tamas,
this pull requests extends the functionality of the hidsim-plugin with the ability to scan the GUI of the default desktop for windows of interest and automatically click on those regions, when running a Windows 7-guest.
Please refer to ./src/plugins/hidsim/readme.org for the documentation on the usage of this feature and a thorough description of the concepts behind the implementation.
Thanks already in advance for reviewing and considering this PR.
Best regards,
Jan",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1275,2021-07-31T08:55:22Z,2021-08-13T16:41:45Z,2021-08-13T16:41:45Z,MERGED,True,4308,69,27,https://github.com/jgru,Enhance HID simulation by automatic button clicking,75,[],https://github.com/tklengyel/drakvuf/pull/1275,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1275#issuecomment-890369601,"Dear Tamas,
this pull requests extends the functionality of the hidsim-plugin with the ability to scan the GUI of the default desktop for windows of interest and automatically click on those regions, when running a Windows 7-guest.
Please refer to ./src/plugins/hidsim/readme.org for the documentation on the usage of this feature and a thorough description of the concepts behind the implementation.
Thanks already in advance for reviewing and considering this PR.
Best regards,
Jan",It would also be nice to think if a test case that could be added to the CI to ensure this keeps working,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1275,2021-07-31T08:55:22Z,2021-08-13T16:41:45Z,2021-08-13T16:41:45Z,MERGED,True,4308,69,27,https://github.com/jgru,Enhance HID simulation by automatic button clicking,75,[],https://github.com/tklengyel/drakvuf/pull/1275,https://github.com/jgru,5,https://github.com/tklengyel/drakvuf/pull/1275#issuecomment-890370384,"Dear Tamas,
this pull requests extends the functionality of the hidsim-plugin with the ability to scan the GUI of the default desktop for windows of interest and automatically click on those regions, when running a Windows 7-guest.
Please refer to ./src/plugins/hidsim/readme.org for the documentation on the usage of this feature and a thorough description of the concepts behind the implementation.
Thanks already in advance for reviewing and considering this PR.
Best regards,
Jan","It would also be nice to think if a test case that could be added to the CI to ensure this keeps working

I'll think of it.
For testing the mouse movements, we could employ tests like Invizzible and pafish, couldn't we?
For the GUI reconstruction, I do not have a striking idea right now, so if you have one, please let me know.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1275,2021-07-31T08:55:22Z,2021-08-13T16:41:45Z,2021-08-13T16:41:45Z,MERGED,True,4308,69,27,https://github.com/jgru,Enhance HID simulation by automatic button clicking,75,[],https://github.com/tklengyel/drakvuf/pull/1275,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1275#issuecomment-890386280,"Dear Tamas,
this pull requests extends the functionality of the hidsim-plugin with the ability to scan the GUI of the default desktop for windows of interest and automatically click on those regions, when running a Windows 7-guest.
Please refer to ./src/plugins/hidsim/readme.org for the documentation on the usage of this feature and a thorough description of the concepts behind the implementation.
Thanks already in advance for reviewing and considering this PR.
Best regards,
Jan",I was thinking maybe running a test program in the guest that pops up a button that should get clicked and the test would detect if the button was clicked by some means.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1275,2021-07-31T08:55:22Z,2021-08-13T16:41:45Z,2021-08-13T16:41:45Z,MERGED,True,4308,69,27,https://github.com/jgru,Enhance HID simulation by automatic button clicking,75,[],https://github.com/tklengyel/drakvuf/pull/1275,https://github.com/jgru,7,https://github.com/tklengyel/drakvuf/pull/1275#issuecomment-890458284,"Dear Tamas,
this pull requests extends the functionality of the hidsim-plugin with the ability to scan the GUI of the default desktop for windows of interest and automatically click on those regions, when running a Windows 7-guest.
Please refer to ./src/plugins/hidsim/readme.org for the documentation on the usage of this feature and a thorough description of the concepts behind the implementation.
Thanks already in advance for reviewing and considering this PR.
Best regards,
Jan","I was thinking maybe running a test program in the guest that pops up a button that should get clicked and the test would detect if the button was clicked by some means.

Alright, I will work on that and open then open a PR in the drakvuf-ci. Thanks so far!",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1275,2021-07-31T08:55:22Z,2021-08-13T16:41:45Z,2021-08-13T16:41:45Z,MERGED,True,4308,69,27,https://github.com/jgru,Enhance HID simulation by automatic button clicking,75,[],https://github.com/tklengyel/drakvuf/pull/1275,https://github.com/jgru,8,https://github.com/tklengyel/drakvuf/pull/1275#issuecomment-890837751,"Dear Tamas,
this pull requests extends the functionality of the hidsim-plugin with the ability to scan the GUI of the default desktop for windows of interest and automatically click on those regions, when running a Windows 7-guest.
Please refer to ./src/plugins/hidsim/readme.org for the documentation on the usage of this feature and a thorough description of the concepts behind the implementation.
Thanks already in advance for reviewing and considering this PR.
Best regards,
Jan","I only have sanity to review cpp tho :(

Thank you very much for your review, @BonusPlay!  I incorporated the requested changes.",True,{'THUMBS_UP': ['https://github.com/BonusPlay']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1275,2021-07-31T08:55:22Z,2021-08-13T16:41:45Z,2021-08-13T16:41:45Z,MERGED,True,4308,69,27,https://github.com/jgru,Enhance HID simulation by automatic button clicking,75,[],https://github.com/tklengyel/drakvuf/pull/1275,https://github.com/jgru,9,https://github.com/tklengyel/drakvuf/pull/1275#issuecomment-895190294,"Dear Tamas,
this pull requests extends the functionality of the hidsim-plugin with the ability to scan the GUI of the default desktop for windows of interest and automatically click on those regions, when running a Windows 7-guest.
Please refer to ./src/plugins/hidsim/readme.org for the documentation on the usage of this feature and a thorough description of the concepts behind the implementation.
Thanks already in advance for reviewing and considering this PR.
Best regards,
Jan","I was thinking maybe running a test program in the guest that pops up a button that should get clicked and the test would detect if the button was clicked by some means.

Alright, I will work on that and open then open a PR in the drakvuf-ci. Thanks so far!

As a sidenote: I opened a PR incorporating test utilities for this: tklengyel/drakvuf-ci#2",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1275,2021-07-31T08:55:22Z,2021-08-13T16:41:45Z,2021-08-13T16:41:45Z,MERGED,True,4308,69,27,https://github.com/jgru,Enhance HID simulation by automatic button clicking,75,[],https://github.com/tklengyel/drakvuf/pull/1275,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/1275#issuecomment-896722233,"Dear Tamas,
this pull requests extends the functionality of the hidsim-plugin with the ability to scan the GUI of the default desktop for windows of interest and automatically click on those regions, when running a Windows 7-guest.
Please refer to ./src/plugins/hidsim/readme.org for the documentation on the usage of this feature and a thorough description of the concepts behind the implementation.
Thanks already in advance for reviewing and considering this PR.
Best regards,
Jan",@BonusPlay @chivay approved?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1275,2021-07-31T08:55:22Z,2021-08-13T16:41:45Z,2021-08-13T16:41:45Z,MERGED,True,4308,69,27,https://github.com/jgru,Enhance HID simulation by automatic button clicking,75,[],https://github.com/tklengyel/drakvuf/pull/1275,https://github.com/chivay,11,https://github.com/tklengyel/drakvuf/pull/1275#issuecomment-896783986,"Dear Tamas,
this pull requests extends the functionality of the hidsim-plugin with the ability to scan the GUI of the default desktop for windows of interest and automatically click on those regions, when running a Windows 7-guest.
Please refer to ./src/plugins/hidsim/readme.org for the documentation on the usage of this feature and a thorough description of the concepts behind the implementation.
Thanks already in advance for reviewing and considering this PR.
Best regards,
Jan","@BonusPlay @chivay approved?

I have some more comments. They should appear soon.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1275,2021-07-31T08:55:22Z,2021-08-13T16:41:45Z,2021-08-13T16:41:45Z,MERGED,True,4308,69,27,https://github.com/jgru,Enhance HID simulation by automatic button clicking,75,[],https://github.com/tklengyel/drakvuf/pull/1275,https://github.com/jgru,12,https://github.com/tklengyel/drakvuf/pull/1275#issuecomment-897418245,"Dear Tamas,
this pull requests extends the functionality of the hidsim-plugin with the ability to scan the GUI of the default desktop for windows of interest and automatically click on those regions, when running a Windows 7-guest.
Please refer to ./src/plugins/hidsim/readme.org for the documentation on the usage of this feature and a thorough description of the concepts behind the implementation.
Thanks already in advance for reviewing and considering this PR.
Best regards,
Jan","I have some more comments. They should appear soon.

Thank you for your review, @chivay! I addressed all remarks.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1275,2021-07-31T08:55:22Z,2021-08-13T16:41:45Z,2021-08-13T16:41:45Z,MERGED,True,4308,69,27,https://github.com/jgru,Enhance HID simulation by automatic button clicking,75,[],https://github.com/tklengyel/drakvuf/pull/1275,https://github.com/manorit2001,13,https://github.com/tklengyel/drakvuf/pull/1275#issuecomment-897427599,"Dear Tamas,
this pull requests extends the functionality of the hidsim-plugin with the ability to scan the GUI of the default desktop for windows of interest and automatically click on those regions, when running a Windows 7-guest.
Please refer to ./src/plugins/hidsim/readme.org for the documentation on the usage of this feature and a thorough description of the concepts behind the implementation.
Thanks already in advance for reviewing and considering this PR.
Best regards,
Jan","Thank you for your review, @chivay! I addressed all remarks.

check the hidden conversations @jgru , I guess you missed them ( like this one #1275 (comment) )",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1275,2021-07-31T08:55:22Z,2021-08-13T16:41:45Z,2021-08-13T16:41:45Z,MERGED,True,4308,69,27,https://github.com/jgru,Enhance HID simulation by automatic button clicking,75,[],https://github.com/tklengyel/drakvuf/pull/1275,https://github.com/jgru,14,https://github.com/tklengyel/drakvuf/pull/1275#issuecomment-897475332,"Dear Tamas,
this pull requests extends the functionality of the hidsim-plugin with the ability to scan the GUI of the default desktop for windows of interest and automatically click on those regions, when running a Windows 7-guest.
Please refer to ./src/plugins/hidsim/readme.org for the documentation on the usage of this feature and a thorough description of the concepts behind the implementation.
Thanks already in advance for reviewing and considering this PR.
Best regards,
Jan","I have some more comments. They should appear soon.

Thank you for your review, @chivay! I addressed all issues.

check the hidden conversations @jgru , I guess you missed them

Indeed, some slipped through. Thanks for the hint, @manorit2001.
Now I think every remark has actually been addressed, @chivay.",True,"{'THUMBS_UP': ['https://github.com/manorit2001', 'https://github.com/chivay']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1275,2021-07-31T08:55:22Z,2021-08-13T16:41:45Z,2021-08-13T16:41:45Z,MERGED,True,4308,69,27,https://github.com/jgru,Enhance HID simulation by automatic button clicking,75,[],https://github.com/tklengyel/drakvuf/pull/1275,https://github.com/tklengyel,15,https://github.com/tklengyel/drakvuf/pull/1275#issuecomment-897677620,"Dear Tamas,
this pull requests extends the functionality of the hidsim-plugin with the ability to scan the GUI of the default desktop for windows of interest and automatically click on those regions, when running a Windows 7-guest.
Please refer to ./src/plugins/hidsim/readme.org for the documentation on the usage of this feature and a thorough description of the concepts behind the implementation.
Thanks already in advance for reviewing and considering this PR.
Best regards,
Jan",@drakvuf-jenkins Retest this please,True,{'THUMBS_UP': ['https://github.com/jgru']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1275,2021-07-31T08:55:22Z,2021-08-13T16:41:45Z,2021-08-13T16:41:45Z,MERGED,True,4308,69,27,https://github.com/jgru,Enhance HID simulation by automatic button clicking,75,[],https://github.com/tklengyel/drakvuf/pull/1275,https://github.com/jgru,16,https://github.com/tklengyel/drakvuf/pull/1275#issuecomment-898289694,"Dear Tamas,
this pull requests extends the functionality of the hidsim-plugin with the ability to scan the GUI of the default desktop for windows of interest and automatically click on those regions, when running a Windows 7-guest.
Please refer to ./src/plugins/hidsim/readme.org for the documentation on the usage of this feature and a thorough description of the concepts behind the implementation.
Thanks already in advance for reviewing and considering this PR.
Best regards,
Jan","Thanks for your additional review, @chivay. I addressed the issues and hope, that the changes meet your expectations.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1276,2021-08-01T12:05:07Z,2021-08-01T21:41:45Z,2021-08-02T11:28:14Z,MERGED,True,415,12,7,https://github.com/BonusPlay,Add cr3 hook to libhook,9,[],https://github.com/tklengyel/drakvuf/pull/1276,https://github.com/BonusPlay,1,https://github.com/tklengyel/drakvuf/pull/1276,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1276,2021-08-01T12:05:07Z,2021-08-01T21:41:45Z,2021-08-02T11:28:14Z,MERGED,True,415,12,7,https://github.com/BonusPlay,Add cr3 hook to libhook,9,[],https://github.com/tklengyel/drakvuf/pull/1276,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1276#issuecomment-890507929,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1276,2021-08-01T12:05:07Z,2021-08-01T21:41:45Z,2021-08-02T11:28:14Z,MERGED,True,415,12,7,https://github.com/BonusPlay,Add cr3 hook to libhook,9,[],https://github.com/tklengyel/drakvuf/pull/1276,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1276#issuecomment-890511920,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1277,2021-08-04T10:11:44Z,2021-08-04T13:01:47Z,2021-08-04T13:01:47Z,CLOSED,False,116,1,2,https://github.com/kscieslinski,Add drakvuf_get_struct_field_type_name,3,[],https://github.com/tklengyel/drakvuf/pull/1277,https://github.com/kscieslinski,1,https://github.com/tklengyel/drakvuf/pull/1277,"Useful when one wants to find rva of typedef.
Example
Let's say the types are defined as:
typedef struct {
    int a;
} inner_t;

struct outer {
    inner_t inner;
};
and for variable struct outer o and we want to get the value of: o.inner.a.
Unfortunately such approach won't work:
addr_t outer_inner_rva;
drakvuf_get_kernel_struct_member_rva(drakvuf, ""outer"", ""inner"", &outer_inner_rva);

addr_t inner_t_a_rva;
drakvuf_get_kernel_struct_member_rva(drakvuf, ""inner_t"", ""a"", &inner_t_a_rva); // this won't work
as there is not inner_t in json profile:
""outer"": {
    ""fields"": {
        ""inner"": {
            ""type"": {
                ""kind"": ""struct"",
                ""name"": ""unnamed_XYZ""
            },
            ""offset"": 0
        }
    },
    [...]
},
""unnamed_XYZ"": {
    ""fields"": {
        ""a"": {
            ""type"": {
                ""kind"": ""base"",
                ""name"": ""int""
            },
            ""offset"": 0
        }
    }
}
This PR. introduces a workaround for above problem:
addr_t inner_t_a_rva;
drakvuf_get_kernel_struct_member_rva(drakvuf, drakvuf_get_struct_field_type_name(drakvuf, ""outer"", ""inner""), ""a"", &inner_t_a_rva);","Useful when one wants to find rva of typedef.
Example
Let's say the types are defined as:
typedef struct {
    int a;
} inner_t;

struct outer {
    inner_t inner;
};
and for variable struct outer o and we want to get the value of: o.inner.a.
Unfortunately such approach won't work:
addr_t outer_inner_rva;
drakvuf_get_kernel_struct_member_rva(drakvuf, ""outer"", ""inner"", &outer_inner_rva);

addr_t inner_t_a_rva;
drakvuf_get_kernel_struct_member_rva(drakvuf, ""inner_t"", ""a"", &inner_t_a_rva); // this won't work
as there is not inner_t in json profile:
""outer"": {
    ""fields"": {
        ""inner"": {
            ""type"": {
                ""kind"": ""struct"",
                ""name"": ""unnamed_XYZ""
            },
            ""offset"": 0
        }
    },
    [...]
},
""unnamed_XYZ"": {
    ""fields"": {
        ""a"": {
            ""type"": {
                ""kind"": ""base"",
                ""name"": ""int""
            },
            ""offset"": 0
        }
    }
}
This PR. introduces a workaround for above problem:
addr_t inner_t_a_rva;
drakvuf_get_kernel_struct_member_rva(drakvuf, drakvuf_get_struct_field_type_name(drakvuf, ""outer"", ""inner""), ""a"", &inner_t_a_rva);",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1277,2021-08-04T10:11:44Z,2021-08-04T13:01:47Z,2021-08-04T13:01:47Z,CLOSED,False,116,1,2,https://github.com/kscieslinski,Add drakvuf_get_struct_field_type_name,3,[],https://github.com/tklengyel/drakvuf/pull/1277,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1277#issuecomment-892537141,"Useful when one wants to find rva of typedef.
Example
Let's say the types are defined as:
typedef struct {
    int a;
} inner_t;

struct outer {
    inner_t inner;
};
and for variable struct outer o and we want to get the value of: o.inner.a.
Unfortunately such approach won't work:
addr_t outer_inner_rva;
drakvuf_get_kernel_struct_member_rva(drakvuf, ""outer"", ""inner"", &outer_inner_rva);

addr_t inner_t_a_rva;
drakvuf_get_kernel_struct_member_rva(drakvuf, ""inner_t"", ""a"", &inner_t_a_rva); // this won't work
as there is not inner_t in json profile:
""outer"": {
    ""fields"": {
        ""inner"": {
            ""type"": {
                ""kind"": ""struct"",
                ""name"": ""unnamed_XYZ""
            },
            ""offset"": 0
        }
    },
    [...]
},
""unnamed_XYZ"": {
    ""fields"": {
        ""a"": {
            ""type"": {
                ""kind"": ""base"",
                ""name"": ""int""
            },
            ""offset"": 0
        }
    }
}
This PR. introduces a workaround for above problem:
addr_t inner_t_a_rva;
drakvuf_get_kernel_struct_member_rva(drakvuf, drakvuf_get_struct_field_type_name(drakvuf, ""outer"", ""inner""), ""a"", &inner_t_a_rva);",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1277,2021-08-04T10:11:44Z,2021-08-04T13:01:47Z,2021-08-04T13:01:47Z,CLOSED,False,116,1,2,https://github.com/kscieslinski,Add drakvuf_get_struct_field_type_name,3,[],https://github.com/tklengyel/drakvuf/pull/1277,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1277#issuecomment-892567532,"Useful when one wants to find rva of typedef.
Example
Let's say the types are defined as:
typedef struct {
    int a;
} inner_t;

struct outer {
    inner_t inner;
};
and for variable struct outer o and we want to get the value of: o.inner.a.
Unfortunately such approach won't work:
addr_t outer_inner_rva;
drakvuf_get_kernel_struct_member_rva(drakvuf, ""outer"", ""inner"", &outer_inner_rva);

addr_t inner_t_a_rva;
drakvuf_get_kernel_struct_member_rva(drakvuf, ""inner_t"", ""a"", &inner_t_a_rva); // this won't work
as there is not inner_t in json profile:
""outer"": {
    ""fields"": {
        ""inner"": {
            ""type"": {
                ""kind"": ""struct"",
                ""name"": ""unnamed_XYZ""
            },
            ""offset"": 0
        }
    },
    [...]
},
""unnamed_XYZ"": {
    ""fields"": {
        ""a"": {
            ""type"": {
                ""kind"": ""base"",
                ""name"": ""int""
            },
            ""offset"": 0
        }
    }
}
This PR. introduces a workaround for above problem:
addr_t inner_t_a_rva;
drakvuf_get_kernel_struct_member_rva(drakvuf, drakvuf_get_struct_field_type_name(drakvuf, ""outer"", ""inner""), ""a"", &inner_t_a_rva);",Would it make more sense to add this LibVMI instead?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1277,2021-08-04T10:11:44Z,2021-08-04T13:01:47Z,2021-08-04T13:01:47Z,CLOSED,False,116,1,2,https://github.com/kscieslinski,Add drakvuf_get_struct_field_type_name,3,[],https://github.com/tklengyel/drakvuf/pull/1277,https://github.com/kscieslinski,4,https://github.com/tklengyel/drakvuf/pull/1277#issuecomment-892637963,"Useful when one wants to find rva of typedef.
Example
Let's say the types are defined as:
typedef struct {
    int a;
} inner_t;

struct outer {
    inner_t inner;
};
and for variable struct outer o and we want to get the value of: o.inner.a.
Unfortunately such approach won't work:
addr_t outer_inner_rva;
drakvuf_get_kernel_struct_member_rva(drakvuf, ""outer"", ""inner"", &outer_inner_rva);

addr_t inner_t_a_rva;
drakvuf_get_kernel_struct_member_rva(drakvuf, ""inner_t"", ""a"", &inner_t_a_rva); // this won't work
as there is not inner_t in json profile:
""outer"": {
    ""fields"": {
        ""inner"": {
            ""type"": {
                ""kind"": ""struct"",
                ""name"": ""unnamed_XYZ""
            },
            ""offset"": 0
        }
    },
    [...]
},
""unnamed_XYZ"": {
    ""fields"": {
        ""a"": {
            ""type"": {
                ""kind"": ""base"",
                ""name"": ""int""
            },
            ""offset"": 0
        }
    }
}
This PR. introduces a workaround for above problem:
addr_t inner_t_a_rva;
drakvuf_get_kernel_struct_member_rva(drakvuf, drakvuf_get_struct_field_type_name(drakvuf, ""outer"", ""inner""), ""a"", &inner_t_a_rva);","Would it make more sense to add this LibVMI instead?

Ok, I will move this to libvmi.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1279,2021-08-12T08:20:01Z,2021-10-11T13:41:46Z,2021-12-15T09:28:00Z,CLOSED,False,22,4,5,https://github.com/skvl,procmon: filter out injected process from list of running processes,1,[],https://github.com/tklengyel/drakvuf/pull/1279,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1279,"This patch fixes some sort of logical error.
While initializing procmon prints the list of running processes. But this should be the initial process list without injected process. To avoid this pass injected process PID to filter it out.","This patch fixes some sort of logical error.
While initializing procmon prints the list of running processes. But this should be the initial process list without injected process. To avoid this pass injected process PID to filter it out.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1279,2021-08-12T08:20:01Z,2021-10-11T13:41:46Z,2021-12-15T09:28:00Z,CLOSED,False,22,4,5,https://github.com/skvl,procmon: filter out injected process from list of running processes,1,[],https://github.com/tklengyel/drakvuf/pull/1279,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/1279#issuecomment-897679300,"This patch fixes some sort of logical error.
While initializing procmon prints the list of running processes. But this should be the initial process list without injected process. To avoid this pass injected process PID to filter it out.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1279,2021-08-12T08:20:01Z,2021-10-11T13:41:46Z,2021-12-15T09:28:00Z,CLOSED,False,22,4,5,https://github.com/skvl,procmon: filter out injected process from list of running processes,1,[],https://github.com/tklengyel/drakvuf/pull/1279,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/1279#issuecomment-897679323,"This patch fixes some sort of logical error.
While initializing procmon prints the list of running processes. But this should be the initial process list without injected process. To avoid this pass injected process PID to filter it out.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1279,2021-08-12T08:20:01Z,2021-10-11T13:41:46Z,2021-12-15T09:28:00Z,CLOSED,False,22,4,5,https://github.com/skvl,procmon: filter out injected process from list of running processes,1,[],https://github.com/tklengyel/drakvuf/pull/1279,https://github.com/skvl,4,https://github.com/tklengyel/drakvuf/pull/1279#issuecomment-898242647,"This patch fixes some sort of logical error.
While initializing procmon prints the list of running processes. But this should be the initial process list without injected process. To avoid this pass injected process PID to filter it out.","@tklengyel , about the error https://ci.drakvuf.com/job/DRAKVUF-windows7-sp1-x64/599/console :
==80848==ERROR: LeakSanitizer: detected memory leaks

Direct leak of 24 byte(s) in 1 object(s) allocated from:
    #0 0x4f57d2 in calloc (/shared/jenkins/workspace/DRAKVUF-windows7-sp1-x64/src/drakvuf+0x4f57d2)
    #1 0xca3099 in convert_utf8_to_utf16 /shared/jenkins/workspace/DRAKVUF-build-sanitize/src/libinjector/win_injector.c:370:48
    #2 0xca057f in injector_start_app_on_win /shared/jenkins/workspace/DRAKVUF-build-sanitize/src/libinjector/win_injector.c:2359:40
    #3 0xca0025 in injector_start_app /shared/jenkins/workspace/DRAKVUF-build-sanitize/src/libinjector/injector.c:128:16
    #4 0x54bd7a in drakvuf_c::inject_cmd(int, unsigned int, char const*, char const*, injection_method_t, char const*, char const*, int, bool, int, char const**, int*) /shared/jenkins/workspace/DRAKVUF-build-sanitize/src/drakvuf.cpp:367:15
    #5 0x52e0d0 in main /shared/jenkins/workspace/DRAKVUF-build-sanitize/src/main.cpp:871:42
    #6 0x7fa5f39550b2 in __libc_start_main /build/glibc-eX1tMB/glibc-2.31/csu/../csu/libc-start.c:308:16

Indirect leak of 18 byte(s) in 1 object(s) allocated from:
    #0 0x4f565d in malloc (/shared/jenkins/workspace/DRAKVUF-windows7-sp1-x64/src/drakvuf+0x4f565d)
    #1 0x7fa5f412286a in safe_malloc_ /shared/libvmi/libvmi/convenience.c:110:15

SUMMARY: AddressSanitizer: 42 byte(s) leaked in 2 allocation(s).

My patch doesn't modify neither libvmi no libinjector. I think this is unstable error from master. Could You please trigger several tests on CI to check the idea.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1279,2021-08-12T08:20:01Z,2021-10-11T13:41:46Z,2021-12-15T09:28:00Z,CLOSED,False,22,4,5,https://github.com/skvl,procmon: filter out injected process from list of running processes,1,[],https://github.com/tklengyel/drakvuf/pull/1279,https://github.com/skvl,5,https://github.com/tklengyel/drakvuf/pull/1279#issuecomment-898250449,"This patch fixes some sort of logical error.
While initializing procmon prints the list of running processes. But this should be the initial process list without injected process. To avoid this pass injected process PID to filter it out.","@tklengyel I found the error chain introduced in 2575a43:

At 
  
    
      drakvuf/src/libinjector/win_injector.c
    
    
         Line 2462
      in
      419eaf4
    
  
  
    

        
          
           *to_be_freed_later = injector; 
        
    
  

 injector_t structure is not freed but send to drakvuf_c class.
At 
  
    
      drakvuf/src/drakvuf.cpp
    
    
         Line 236
      in
      419eaf4
    
  
  
    

        
          
           g_free(injector_to_be_freed); 
        
    
  

 the injector_t structure is freed. But it's target_file_us member is not freed like in 
  
    
      drakvuf/src/libinjector/win_injector.c
    
    
         Line 223
      in
      419eaf4
    
  
  
    

        
          
           vmi_free_unicode_str(injector->target_file_us); 
        
    
  

 (as other Unicode members).

Though I don't know what is the best fix for the error. But now I'm sure that the error is not part of my commit. I could suggest that something changed in CI.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1279,2021-08-12T08:20:01Z,2021-10-11T13:41:46Z,2021-12-15T09:28:00Z,CLOSED,False,22,4,5,https://github.com/skvl,procmon: filter out injected process from list of running processes,1,[],https://github.com/tklengyel/drakvuf/pull/1279,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1279#issuecomment-898411641,"This patch fixes some sort of logical error.
While initializing procmon prints the list of running processes. But this should be the initial process list without injected process. To avoid this pass injected process PID to filter it out.",The CI hasn't changed but there was a recent commit that touched injector. cc @manorit2001,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1279,2021-08-12T08:20:01Z,2021-10-11T13:41:46Z,2021-12-15T09:28:00Z,CLOSED,False,22,4,5,https://github.com/skvl,procmon: filter out injected process from list of running processes,1,[],https://github.com/tklengyel/drakvuf/pull/1279,https://github.com/manorit2001,7,https://github.com/tklengyel/drakvuf/pull/1279#issuecomment-898414791,"This patch fixes some sort of logical error.
While initializing procmon prints the list of running processes. But this should be the initial process list without injected process. To avoid this pass injected process PID to filter it out.","The CI hasn't changed but there was a recent commit that touched injector. cc @manorit2001

That only changed part related to Linux ( and it must be a breaking change considering current Linux injector ), But, I don't think it should cause any issues related to windows part",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1279,2021-08-12T08:20:01Z,2021-10-11T13:41:46Z,2021-12-15T09:28:00Z,CLOSED,False,22,4,5,https://github.com/skvl,procmon: filter out injected process from list of running processes,1,[],https://github.com/tklengyel/drakvuf/pull/1279,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/1279#issuecomment-898418887,"This patch fixes some sort of logical error.
While initializing procmon prints the list of running processes. But this should be the initial process list without injected process. To avoid this pass injected process PID to filter it out.","I think the fix is easy, just need to make free_injector accessible outside of libinjector by declaring it in libinjector.h and call that instead of directly freeing.",True,{'THUMBS_UP': ['https://github.com/skvl']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1279,2021-08-12T08:20:01Z,2021-10-11T13:41:46Z,2021-12-15T09:28:00Z,CLOSED,False,22,4,5,https://github.com/skvl,procmon: filter out injected process from list of running processes,1,[],https://github.com/tklengyel/drakvuf/pull/1279,https://github.com/skvl,9,https://github.com/tklengyel/drakvuf/pull/1279#issuecomment-898437890,"This patch fixes some sort of logical error.
While initializing procmon prints the list of running processes. But this should be the initial process list without injected process. To avoid this pass injected process PID to filter it out.","I think the fix is easy, just need to make free_injector accessible outside of libinjector by declaring it in libinjector.h and call that instead of directly freeing.

Though there is some little issue. free_injector is context specific and is defined in win_injector.c and linux_injector.c. And passing extra argument for free functions seems overwhelming. What do You think?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1279,2021-08-12T08:20:01Z,2021-10-11T13:41:46Z,2021-12-15T09:28:00Z,CLOSED,False,22,4,5,https://github.com/skvl,procmon: filter out injected process from list of running processes,1,[],https://github.com/tklengyel/drakvuf/pull/1279,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/1279#issuecomment-898628527,"This patch fixes some sort of logical error.
While initializing procmon prints the list of running processes. But this should be the initial process list without injected process. To avoid this pass injected process PID to filter it out.",Please rebase on master,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1279,2021-08-12T08:20:01Z,2021-10-11T13:41:46Z,2021-12-15T09:28:00Z,CLOSED,False,22,4,5,https://github.com/skvl,procmon: filter out injected process from list of running processes,1,[],https://github.com/tklengyel/drakvuf/pull/1279,https://github.com/skvl,11,https://github.com/tklengyel/drakvuf/pull/1279#issuecomment-899330724,"This patch fixes some sort of logical error.
While initializing procmon prints the list of running processes. But this should be the initial process list without injected process. To avoid this pass injected process PID to filter it out.","@tklengyel , done",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1279,2021-08-12T08:20:01Z,2021-10-11T13:41:46Z,2021-12-15T09:28:00Z,CLOSED,False,22,4,5,https://github.com/skvl,procmon: filter out injected process from list of running processes,1,[],https://github.com/tklengyel/drakvuf/pull/1279,https://github.com/skvl,12,https://github.com/tklengyel/drakvuf/pull/1279#issuecomment-899361716,"This patch fixes some sort of logical error.
While initializing procmon prints the list of running processes. But this should be the initial process list without injected process. To avoid this pass injected process PID to filter it out.","@tklengyel , could You please collect more data on failure (https://ci.drakvuf.com/job/DRAKVUF-windows7-sp1-x64/636/console). This is not enough:
=================================================================
==861307==ERROR: LeakSanitizer: detected memory leaks

Direct leak of 50 byte(s) in 1 object(s) allocated from:
    #0 0x4f571d in malloc (/shared/jenkins/workspace/DRAKVUF-windows7-sp1-x64/src/drakvuf+0x4f571d)
    #1 0x7f7bae24ce98 in g_malloc (/lib/x86_64-linux-gnu/libglib-2.0.so.0+0x57e98)

SUMMARY: AddressSanitizer: 50 byte(s) leaked in 1 allocation(s).

Is it possible that the output was truncated?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1279,2021-08-12T08:20:01Z,2021-10-11T13:41:46Z,2021-12-15T09:28:00Z,CLOSED,False,22,4,5,https://github.com/skvl,procmon: filter out injected process from list of running processes,1,[],https://github.com/tklengyel/drakvuf/pull/1279,https://github.com/tklengyel,13,https://github.com/tklengyel/drakvuf/pull/1279#issuecomment-899596083,"This patch fixes some sort of logical error.
While initializing procmon prints the list of running processes. But this should be the initial process list without injected process. To avoid this pass injected process PID to filter it out.",Not sure what happened there,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1279,2021-08-12T08:20:01Z,2021-10-11T13:41:46Z,2021-12-15T09:28:00Z,CLOSED,False,22,4,5,https://github.com/skvl,procmon: filter out injected process from list of running processes,1,[],https://github.com/tklengyel/drakvuf/pull/1279,https://github.com/tklengyel,14,https://github.com/tklengyel/drakvuf/pull/1279#issuecomment-899596212,"This patch fixes some sort of logical error.
While initializing procmon prints the list of running processes. But this should be the initial process list without injected process. To avoid this pass injected process PID to filter it out.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1279,2021-08-12T08:20:01Z,2021-10-11T13:41:46Z,2021-12-15T09:28:00Z,CLOSED,False,22,4,5,https://github.com/skvl,procmon: filter out injected process from list of running processes,1,[],https://github.com/tklengyel/drakvuf/pull/1279,https://github.com/tklengyel,15,https://github.com/tklengyel/drakvuf/pull/1279#issuecomment-899745348,"This patch fixes some sort of logical error.
While initializing procmon prints the list of running processes. But this should be the initial process list without injected process. To avoid this pass injected process PID to filter it out.",It's reproducible.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1279,2021-08-12T08:20:01Z,2021-10-11T13:41:46Z,2021-12-15T09:28:00Z,CLOSED,False,22,4,5,https://github.com/skvl,procmon: filter out injected process from list of running processes,1,[],https://github.com/tklengyel/drakvuf/pull/1279,https://github.com/kscieslinski,16,https://github.com/tklengyel/drakvuf/pull/1279#issuecomment-900055275,"This patch fixes some sort of logical error.
While initializing procmon prints the list of running processes. But this should be the initial process list without injected process. To avoid this pass injected process PID to filter it out.","I'm not sure about this change. We have injected a new process, say malware.exe. Then we started the analysis. During plugin initialization, the procmon will mark malware.exe as a Running Process as malware.exe has been created before the analysis. From procmon perspective, malware.exe is a legitimate process and so the above flow is correct in my opinion. Why do you want to change it?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1279,2021-08-12T08:20:01Z,2021-10-11T13:41:46Z,2021-12-15T09:28:00Z,CLOSED,False,22,4,5,https://github.com/skvl,procmon: filter out injected process from list of running processes,1,[],https://github.com/tklengyel/drakvuf/pull/1279,https://github.com/disaykin,17,https://github.com/tklengyel/drakvuf/pull/1279#issuecomment-903476637,"This patch fixes some sort of logical error.
While initializing procmon prints the list of running processes. But this should be the initial process list without injected process. To avoid this pass injected process PID to filter it out.","@kscieslinski From the plugin's perspective it is true, but semantically RunningProcess presents information about working environment of injected sample. What new information about injected sample does RunningProcess record contain?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1279,2021-08-12T08:20:01Z,2021-10-11T13:41:46Z,2021-12-15T09:28:00Z,CLOSED,False,22,4,5,https://github.com/skvl,procmon: filter out injected process from list of running processes,1,[],https://github.com/tklengyel/drakvuf/pull/1279,https://github.com/skvl,18,https://github.com/tklengyel/drakvuf/pull/1279#issuecomment-940043742,"This patch fixes some sort of logical error.
While initializing procmon prints the list of running processes. But this should be the initial process list without injected process. To avoid this pass injected process PID to filter it out.",My bad! I think there is no need in this request.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1280,2021-08-12T08:47:42Z,2021-08-25T17:46:27Z,2021-12-15T09:27:59Z,MERGED,True,2911,29,20,https://github.com/skvl,procdump: make more robust version,3,[],https://github.com/tklengyel/drakvuf/pull/1280,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1280,"NOTE This is a part of big re-factoring. In the meantime I separate the efforts
into ""procdump2"" plug-in. It would replace the original ""procdump"" on ready.
Though I would like to share the efforts as soon as possible to avoid merge
headache.
In thhe current implementation of ""procdump"" we copy process address
space with RtlCopyMemoryNonTemporal at MmCleanProcessAddressSpace. This
assumes the good knowledge of VAD attributes like type, MemCommit,
CommitCharge, etc. While the minor error in understanding this
attributes result in BSODs. Ever more due to this implementation it is
impossible for us to dump running processes.
New implementation (see ""procdump2"") uses less knowledge of VADs. Only
start address and length are essential. MmCopyVirtualMemory is used to
copy process address space from the context of other process. Instead of
BSODs this function just return fail status if some memory region is
inaccessible any more. And this allow us to dump running processes. This
feature is used to dump injected process while stopping the plug-in.","NOTE This is a part of big re-factoring. In the meantime I separate the efforts
into ""procdump2"" plug-in. It would replace the original ""procdump"" on ready.
Though I would like to share the efforts as soon as possible to avoid merge
headache.
In thhe current implementation of ""procdump"" we copy process address
space with RtlCopyMemoryNonTemporal at MmCleanProcessAddressSpace. This
assumes the good knowledge of VAD attributes like type, MemCommit,
CommitCharge, etc. While the minor error in understanding this
attributes result in BSODs. Ever more due to this implementation it is
impossible for us to dump running processes.
New implementation (see ""procdump2"") uses less knowledge of VADs. Only
start address and length are essential. MmCopyVirtualMemory is used to
copy process address space from the context of other process. Instead of
BSODs this function just return fail status if some memory region is
inaccessible any more. And this allow us to dump running processes. This
feature is used to dump injected process while stopping the plug-in.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1280,2021-08-12T08:47:42Z,2021-08-25T17:46:27Z,2021-12-15T09:27:59Z,MERGED,True,2911,29,20,https://github.com/skvl,procdump: make more robust version,3,[],https://github.com/tklengyel/drakvuf/pull/1280,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/1280#issuecomment-897678987,"NOTE This is a part of big re-factoring. In the meantime I separate the efforts
into ""procdump2"" plug-in. It would replace the original ""procdump"" on ready.
Though I would like to share the efforts as soon as possible to avoid merge
headache.
In thhe current implementation of ""procdump"" we copy process address
space with RtlCopyMemoryNonTemporal at MmCleanProcessAddressSpace. This
assumes the good knowledge of VAD attributes like type, MemCommit,
CommitCharge, etc. While the minor error in understanding this
attributes result in BSODs. Ever more due to this implementation it is
impossible for us to dump running processes.
New implementation (see ""procdump2"") uses less knowledge of VADs. Only
start address and length are essential. MmCopyVirtualMemory is used to
copy process address space from the context of other process. Instead of
BSODs this function just return fail status if some memory region is
inaccessible any more. And this allow us to dump running processes. This
feature is used to dump injected process while stopping the plug-in.",Why not just replace the existing procdump implementation with the more robust version?,True,{'THUMBS_UP': ['https://github.com/chivay']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1280,2021-08-12T08:47:42Z,2021-08-25T17:46:27Z,2021-12-15T09:27:59Z,MERGED,True,2911,29,20,https://github.com/skvl,procdump: make more robust version,3,[],https://github.com/tklengyel/drakvuf/pull/1280,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/1280#issuecomment-897679006,"NOTE This is a part of big re-factoring. In the meantime I separate the efforts
into ""procdump2"" plug-in. It would replace the original ""procdump"" on ready.
Though I would like to share the efforts as soon as possible to avoid merge
headache.
In thhe current implementation of ""procdump"" we copy process address
space with RtlCopyMemoryNonTemporal at MmCleanProcessAddressSpace. This
assumes the good knowledge of VAD attributes like type, MemCommit,
CommitCharge, etc. While the minor error in understanding this
attributes result in BSODs. Ever more due to this implementation it is
impossible for us to dump running processes.
New implementation (see ""procdump2"") uses less knowledge of VADs. Only
start address and length are essential. MmCopyVirtualMemory is used to
copy process address space from the context of other process. Instead of
BSODs this function just return fail status if some memory region is
inaccessible any more. And this allow us to dump running processes. This
feature is used to dump injected process while stopping the plug-in.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1280,2021-08-12T08:47:42Z,2021-08-25T17:46:27Z,2021-12-15T09:27:59Z,MERGED,True,2911,29,20,https://github.com/skvl,procdump: make more robust version,3,[],https://github.com/tklengyel/drakvuf/pull/1280,https://github.com/skvl,4,https://github.com/tklengyel/drakvuf/pull/1280#issuecomment-898270204,"NOTE This is a part of big re-factoring. In the meantime I separate the efforts
into ""procdump2"" plug-in. It would replace the original ""procdump"" on ready.
Though I would like to share the efforts as soon as possible to avoid merge
headache.
In thhe current implementation of ""procdump"" we copy process address
space with RtlCopyMemoryNonTemporal at MmCleanProcessAddressSpace. This
assumes the good knowledge of VAD attributes like type, MemCommit,
CommitCharge, etc. While the minor error in understanding this
attributes result in BSODs. Ever more due to this implementation it is
impossible for us to dump running processes.
New implementation (see ""procdump2"") uses less knowledge of VADs. Only
start address and length are essential. MmCopyVirtualMemory is used to
copy process address space from the context of other process. Instead of
BSODs this function just return fail status if some memory region is
inaccessible any more. And this allow us to dump running processes. This
feature is used to dump injected process while stopping the plug-in.","Why not just replace the existing procdump implementation with the more robust version?

The new version is highly experimental and I don't want to break things to others. Even to myself :)
Though I would like to share my efforts with community for several reasons:

I hope that somebody would be interested in this new approach.
It is hard to re-base sometimes.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1280,2021-08-12T08:47:42Z,2021-08-25T17:46:27Z,2021-12-15T09:27:59Z,MERGED,True,2911,29,20,https://github.com/skvl,procdump: make more robust version,3,[],https://github.com/tklengyel/drakvuf/pull/1280,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1280#issuecomment-898416886,"NOTE This is a part of big re-factoring. In the meantime I separate the efforts
into ""procdump2"" plug-in. It would replace the original ""procdump"" on ready.
Though I would like to share the efforts as soon as possible to avoid merge
headache.
In thhe current implementation of ""procdump"" we copy process address
space with RtlCopyMemoryNonTemporal at MmCleanProcessAddressSpace. This
assumes the good knowledge of VAD attributes like type, MemCommit,
CommitCharge, etc. While the minor error in understanding this
attributes result in BSODs. Ever more due to this implementation it is
impossible for us to dump running processes.
New implementation (see ""procdump2"") uses less knowledge of VADs. Only
start address and length are essential. MmCopyVirtualMemory is used to
copy process address space from the context of other process. Instead of
BSODs this function just return fail status if some memory region is
inaccessible any more. And this allow us to dump running processes. This
feature is used to dump injected process while stopping the plug-in.","Fair enough, I have no problem having an experimental version of the new version added like this, keeping it off by default while its worked on/tested.",True,{'THUMBS_UP': ['https://github.com/skvl']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1280,2021-08-12T08:47:42Z,2021-08-25T17:46:27Z,2021-12-15T09:27:59Z,MERGED,True,2911,29,20,https://github.com/skvl,procdump: make more robust version,3,[],https://github.com/tklengyel/drakvuf/pull/1280,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1280#issuecomment-898416961,"NOTE This is a part of big re-factoring. In the meantime I separate the efforts
into ""procdump2"" plug-in. It would replace the original ""procdump"" on ready.
Though I would like to share the efforts as soon as possible to avoid merge
headache.
In thhe current implementation of ""procdump"" we copy process address
space with RtlCopyMemoryNonTemporal at MmCleanProcessAddressSpace. This
assumes the good knowledge of VAD attributes like type, MemCommit,
CommitCharge, etc. While the minor error in understanding this
attributes result in BSODs. Ever more due to this implementation it is
impossible for us to dump running processes.
New implementation (see ""procdump2"") uses less knowledge of VADs. Only
start address and length are essential. MmCopyVirtualMemory is used to
copy process address space from the context of other process. Instead of
BSODs this function just return fail status if some memory region is
inaccessible any more. And this allow us to dump running processes. This
feature is used to dump injected process while stopping the plug-in.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1280,2021-08-12T08:47:42Z,2021-08-25T17:46:27Z,2021-12-15T09:27:59Z,MERGED,True,2911,29,20,https://github.com/skvl,procdump: make more robust version,3,[],https://github.com/tklengyel/drakvuf/pull/1280,https://github.com/skvl,7,https://github.com/tklengyel/drakvuf/pull/1280#issuecomment-904635379,"NOTE This is a part of big re-factoring. In the meantime I separate the efforts
into ""procdump2"" plug-in. It would replace the original ""procdump"" on ready.
Though I would like to share the efforts as soon as possible to avoid merge
headache.
In thhe current implementation of ""procdump"" we copy process address
space with RtlCopyMemoryNonTemporal at MmCleanProcessAddressSpace. This
assumes the good knowledge of VAD attributes like type, MemCommit,
CommitCharge, etc. While the minor error in understanding this
attributes result in BSODs. Ever more due to this implementation it is
impossible for us to dump running processes.
New implementation (see ""procdump2"") uses less knowledge of VADs. Only
start address and length are essential. MmCopyVirtualMemory is used to
copy process address space from the context of other process. Instead of
BSODs this function just return fail status if some memory region is
inaccessible any more. And this allow us to dump running processes. This
feature is used to dump injected process while stopping the plug-in.","@tklengyel , is this PR OK?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1282,2021-08-13T08:22:04Z,2021-08-13T17:23:41Z,2021-12-15T09:28:01Z,MERGED,True,172,1,5,https://github.com/skvl,procmon: fix protection attributes,3,[],https://github.com/tklengyel/drakvuf/pull/1282,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1282,"autotools's MAKE_TESTS and check are used for unit-testing as in LibVMI.
unit-test for procmon plug-in been added to check stringify_protection_attributes function.
Error in bits handling been fixed. The error been introduced in 8dbce13 .","autotools's MAKE_TESTS and check are used for unit-testing as in LibVMI.
unit-test for procmon plug-in been added to check stringify_protection_attributes function.
Error in bits handling been fixed. The error been introduced in 8dbce13 .",True,"{'THUMBS_UP': ['https://github.com/tklengyel', 'https://github.com/disaykin']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1282,2021-08-13T08:22:04Z,2021-08-13T17:23:41Z,2021-12-15T09:28:01Z,MERGED,True,172,1,5,https://github.com/skvl,procmon: fix protection attributes,3,[],https://github.com/tklengyel/drakvuf/pull/1282,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1282#issuecomment-898279180,"autotools's MAKE_TESTS and check are used for unit-testing as in LibVMI.
unit-test for procmon plug-in been added to check stringify_protection_attributes function.
Error in bits handling been fixed. The error been introduced in 8dbce13 .",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1282,2021-08-13T08:22:04Z,2021-08-13T17:23:41Z,2021-12-15T09:28:01Z,MERGED,True,172,1,5,https://github.com/skvl,procmon: fix protection attributes,3,[],https://github.com/tklengyel/drakvuf/pull/1282,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1282#issuecomment-898415454,"autotools's MAKE_TESTS and check are used for unit-testing as in LibVMI.
unit-test for procmon plug-in been added to check stringify_protection_attributes function.
Error in bits handling been fixed. The error been introduced in 8dbce13 .",What's the error in bit handling? AFAICT the macro does the same thing,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1282,2021-08-13T08:22:04Z,2021-08-13T17:23:41Z,2021-12-15T09:28:01Z,MERGED,True,172,1,5,https://github.com/skvl,procmon: fix protection attributes,3,[],https://github.com/tklengyel/drakvuf/pull/1282,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1282#issuecomment-898415520,"autotools's MAKE_TESTS and check are used for unit-testing as in LibVMI.
unit-test for procmon plug-in been added to check stringify_protection_attributes function.
Error in bits handling been fixed. The error been introduced in 8dbce13 .",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1282,2021-08-13T08:22:04Z,2021-08-13T17:23:41Z,2021-12-15T09:28:01Z,MERGED,True,172,1,5,https://github.com/skvl,procmon: fix protection attributes,3,[],https://github.com/tklengyel/drakvuf/pull/1282,https://github.com/skvl,5,https://github.com/tklengyel/drakvuf/pull/1282#issuecomment-898422764,"autotools's MAKE_TESTS and check are used for unit-testing as in LibVMI.
unit-test for procmon plug-in been added to check stringify_protection_attributes function.
Error in bits handling been fixed. The error been introduced in 8dbce13 .","What's the error in bit handling? AFAICT the macro does the same thing

No. The code:
        uint32_t attr = VMI_GET_BIT(attributes, i);
, returns 0 or 1. Just the bit value at position i. E.g. for attributes = 0x41 this returns 1 for i = 6.
The code:
        uint32_t attr = attributes & (1UL << i);
, returns masked value of attributes. E.g. for attributes = 0x41 this returns 0x40 for i = 6.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1282,2021-08-13T08:22:04Z,2021-08-13T17:23:41Z,2021-12-15T09:28:01Z,MERGED,True,172,1,5,https://github.com/skvl,procmon: fix protection attributes,3,[],https://github.com/tklengyel/drakvuf/pull/1282,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1282#issuecomment-898610670,"autotools's MAKE_TESTS and check are used for unit-testing as in LibVMI.
unit-test for procmon plug-in been added to check stringify_protection_attributes function.
Error in bits handling been fixed. The error been introduced in 8dbce13 .","Ah yes, there is VMI_BIT_MASK for that",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1283,2021-08-13T12:55:13Z,2021-08-14T17:46:31Z,2021-08-20T15:24:32Z,MERGED,True,18,3,4,https://github.com/manorit2001,[Linux] change signature of injector_start_app_on_linux,1,[],https://github.com/tklengyel/drakvuf/pull/1283,https://github.com/manorit2001,1,https://github.com/tklengyel/drakvuf/pull/1283,This is a prerequisite for writefile and readfile methods,This is a prerequisite for writefile and readfile methods,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1283,2021-08-13T12:55:13Z,2021-08-14T17:46:31Z,2021-08-20T15:24:32Z,MERGED,True,18,3,4,https://github.com/manorit2001,[Linux] change signature of injector_start_app_on_linux,1,[],https://github.com/tklengyel/drakvuf/pull/1283,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1283#issuecomment-898438301,This is a prerequisite for writefile and readfile methods,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1283,2021-08-13T12:55:13Z,2021-08-14T17:46:31Z,2021-08-20T15:24:32Z,MERGED,True,18,3,4,https://github.com/manorit2001,[Linux] change signature of injector_start_app_on_linux,1,[],https://github.com/tklengyel/drakvuf/pull/1283,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1283#issuecomment-898625439,This is a prerequisite for writefile and readfile methods,Please rebase on master,True,{'THUMBS_UP': ['https://github.com/manorit2001']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1283,2021-08-13T12:55:13Z,2021-08-14T17:46:31Z,2021-08-20T15:24:32Z,MERGED,True,18,3,4,https://github.com/manorit2001,[Linux] change signature of injector_start_app_on_linux,1,[],https://github.com/tklengyel/drakvuf/pull/1283,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1283#issuecomment-898764638,This is a prerequisite for writefile and readfile methods,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1283,2021-08-13T12:55:13Z,2021-08-14T17:46:31Z,2021-08-20T15:24:32Z,MERGED,True,18,3,4,https://github.com/manorit2001,[Linux] change signature of injector_start_app_on_linux,1,[],https://github.com/tklengyel/drakvuf/pull/1283,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1283#issuecomment-898891580,This is a prerequisite for writefile and readfile methods,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1284,2021-08-13T12:56:22Z,2021-08-14T18:32:20Z,2021-08-20T15:24:45Z,MERGED,True,589,3,8,https://github.com/manorit2001,[Linux] add writefile method to injector,1,[],https://github.com/tklengyel/drakvuf/pull/1284,https://github.com/manorit2001,1,https://github.com/tklengyel/drakvuf/pull/1284,"This PR adds writefile method to linux injector
Depends on #1283","This PR adds writefile method to linux injector
Depends on #1283",True,{'THUMBS_UP': ['https://github.com/exescript']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1284,2021-08-13T12:56:22Z,2021-08-14T18:32:20Z,2021-08-20T15:24:45Z,MERGED,True,589,3,8,https://github.com/manorit2001,[Linux] add writefile method to injector,1,[],https://github.com/tklengyel/drakvuf/pull/1284,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1284#issuecomment-898438981,"This PR adds writefile method to linux injector
Depends on #1283",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1284,2021-08-13T12:56:22Z,2021-08-14T18:32:20Z,2021-08-20T15:24:45Z,MERGED,True,589,3,8,https://github.com/manorit2001,[Linux] add writefile method to injector,1,[],https://github.com/tklengyel/drakvuf/pull/1284,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1284#issuecomment-898625571,"This PR adds writefile method to linux injector
Depends on #1283",Please rebase on master,True,{'THUMBS_UP': ['https://github.com/manorit2001']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1284,2021-08-13T12:56:22Z,2021-08-14T18:32:20Z,2021-08-20T15:24:45Z,MERGED,True,589,3,8,https://github.com/manorit2001,[Linux] add writefile method to injector,1,[],https://github.com/tklengyel/drakvuf/pull/1284,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1284#issuecomment-898764690,"This PR adds writefile method to linux injector
Depends on #1283",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1284,2021-08-13T12:56:22Z,2021-08-14T18:32:20Z,2021-08-20T15:24:45Z,MERGED,True,589,3,8,https://github.com/manorit2001,[Linux] add writefile method to injector,1,[],https://github.com/tklengyel/drakvuf/pull/1284,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1284#issuecomment-898936315,"This PR adds writefile method to linux injector
Depends on #1283",Please rebase on master,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1284,2021-08-13T12:56:22Z,2021-08-14T18:32:20Z,2021-08-20T15:24:45Z,MERGED,True,589,3,8,https://github.com/manorit2001,[Linux] add writefile method to injector,1,[],https://github.com/tklengyel/drakvuf/pull/1284,https://github.com/manorit2001,6,https://github.com/tklengyel/drakvuf/pull/1284#issuecomment-898938842,"This PR adds writefile method to linux injector
Depends on #1283","Please rebase on master

done",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1285,2021-08-13T14:19:30Z,2021-08-13T16:35:11Z,2021-08-13T16:35:13Z,MERGED,True,25,6,9,https://github.com/tklengyel,Injector free interface,2,[],https://github.com/tklengyel/drakvuf/pull/1285,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1285,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1286,2021-08-13T17:00:05Z,2021-08-13T17:52:30Z,2021-08-13T17:52:31Z,MERGED,True,5,8,1,https://github.com/tklengyel,Coverity fix,1,[],https://github.com/tklengyel/drakvuf/pull/1286,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1286,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1287,2021-08-14T06:48:19Z,2021-08-14T13:59:10Z,2021-08-14T13:59:10Z,MERGED,True,18,1,1,https://github.com/jgru,Fix defects introduced by #1275,2,[],https://github.com/tklengyel/drakvuf/pull/1287,https://github.com/jgru,1,https://github.com/tklengyel/drakvuf/pull/1287,"Dear Tamas,
this patch fixes the defects introduced by PR #1275.
The following issues were addressed, which Coverity identified:

CID 354685: Fix unchecked return value in l. 800  in retrieve_winstas_from_procs(...)
CID 354686: Fix resource leak in l. 243+ in construct_wnd_container(...)

I did not address CID 354683, since I think, that this is a false positive.
Thanks already in advance for reviewing and considering this PR.
Best regards
Jan","Dear Tamas,
this patch fixes the defects introduced by PR #1275.
The following issues were addressed, which Coverity identified:

CID 354685: Fix unchecked return value in l. 800  in retrieve_winstas_from_procs(...)
CID 354686: Fix resource leak in l. 243+ in construct_wnd_container(...)

I did not address CID 354683, since I think, that this is a false positive.
Thanks already in advance for reviewing and considering this PR.
Best regards
Jan",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1287,2021-08-14T06:48:19Z,2021-08-14T13:59:10Z,2021-08-14T13:59:10Z,MERGED,True,18,1,1,https://github.com/jgru,Fix defects introduced by #1275,2,[],https://github.com/tklengyel/drakvuf/pull/1287,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1287#issuecomment-898847475,"Dear Tamas,
this patch fixes the defects introduced by PR #1275.
The following issues were addressed, which Coverity identified:

CID 354685: Fix unchecked return value in l. 800  in retrieve_winstas_from_procs(...)
CID 354686: Fix resource leak in l. 243+ in construct_wnd_container(...)

I did not address CID 354683, since I think, that this is a false positive.
Thanks already in advance for reviewing and considering this PR.
Best regards
Jan",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1287,2021-08-14T06:48:19Z,2021-08-14T13:59:10Z,2021-08-14T13:59:10Z,MERGED,True,18,1,1,https://github.com/jgru,Fix defects introduced by #1275,2,[],https://github.com/tklengyel/drakvuf/pull/1287,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1287#issuecomment-898891519,"Dear Tamas,
this patch fixes the defects introduced by PR #1275.
The following issues were addressed, which Coverity identified:

CID 354685: Fix unchecked return value in l. 800  in retrieve_winstas_from_procs(...)
CID 354686: Fix resource leak in l. 243+ in construct_wnd_container(...)

I did not address CID 354683, since I think, that this is a false positive.
Thanks already in advance for reviewing and considering this PR.
Best regards
Jan",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1288,2021-08-14T19:08:54Z,2021-08-20T12:58:16Z,2021-08-20T15:26:20Z,MERGED,True,601,2,6,https://github.com/manorit2001,[Linux] add readfile method,4,[],https://github.com/tklengyel/drakvuf/pull/1288,https://github.com/manorit2001,1,https://github.com/tklengyel/drakvuf/pull/1288,This PR adds readfile method to linux injector,This PR adds readfile method to linux injector,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1288,2021-08-14T19:08:54Z,2021-08-20T12:58:16Z,2021-08-20T15:26:20Z,MERGED,True,601,2,6,https://github.com/manorit2001,[Linux] add readfile method,4,[],https://github.com/tklengyel/drakvuf/pull/1288,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1288#issuecomment-898946726,This PR adds readfile method to linux injector,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1288,2021-08-14T19:08:54Z,2021-08-20T12:58:16Z,2021-08-20T15:26:20Z,MERGED,True,601,2,6,https://github.com/manorit2001,[Linux] add readfile method,4,[],https://github.com/tklengyel/drakvuf/pull/1288,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1288#issuecomment-898949423,This PR adds readfile method to linux injector,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1290,2021-08-16T13:06:05Z,2021-08-20T15:49:39Z,2021-08-20T15:49:49Z,MERGED,True,49,30,1,https://github.com/exescript,Add injection method printing on print_injection_info,4,[],https://github.com/tklengyel/drakvuf/pull/1290,https://github.com/exescript,1,https://github.com/tklengyel/drakvuf/pull/1290,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1290,2021-08-16T13:06:05Z,2021-08-20T15:49:39Z,2021-08-20T15:49:49Z,MERGED,True,49,30,1,https://github.com/exescript,Add injection method printing on print_injection_info,4,[],https://github.com/tklengyel/drakvuf/pull/1290,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1290#issuecomment-899494180,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1290,2021-08-16T13:06:05Z,2021-08-20T15:49:39Z,2021-08-20T15:49:49Z,MERGED,True,49,30,1,https://github.com/exescript,Add injection method printing on print_injection_info,4,[],https://github.com/tklengyel/drakvuf/pull/1290,https://github.com/exescript,3,https://github.com/tklengyel/drakvuf/pull/1290#issuecomment-899518949,,"It seems to be generally correct to print injection method with all other information about injection.
On the other side this may be useful for correct result interpretation automation when --write-file is used. There may be several injections with different injection methods.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1290,2021-08-16T13:06:05Z,2021-08-20T15:49:39Z,2021-08-20T15:49:49Z,MERGED,True,49,30,1,https://github.com/exescript,Add injection method printing on print_injection_info,4,[],https://github.com/tklengyel/drakvuf/pull/1290,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1290#issuecomment-899883086,,@drakvuf-jenkins Test this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1290,2021-08-16T13:06:05Z,2021-08-20T15:49:39Z,2021-08-20T15:49:49Z,MERGED,True,49,30,1,https://github.com/exescript,Add injection method printing on print_injection_info,4,[],https://github.com/tklengyel/drakvuf/pull/1290,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1290#issuecomment-899883362,,@exescript Please fix the style issues pointed out by the astyle CI step,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1290,2021-08-16T13:06:05Z,2021-08-20T15:49:39Z,2021-08-20T15:49:49Z,MERGED,True,49,30,1,https://github.com/exescript,Add injection method printing on print_injection_info,4,[],https://github.com/tklengyel/drakvuf/pull/1290,https://github.com/exescript,6,https://github.com/tklengyel/drakvuf/pull/1290#issuecomment-900149353,,"@exescript Please fix the style issues pointed out by the astyle CI step

done",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1290,2021-08-16T13:06:05Z,2021-08-20T15:49:39Z,2021-08-20T15:49:49Z,MERGED,True,49,30,1,https://github.com/exescript,Add injection method printing on print_injection_info,4,[],https://github.com/tklengyel/drakvuf/pull/1290,https://github.com/exescript,7,https://github.com/tklengyel/drakvuf/pull/1290#issuecomment-900234721,,"@tklengyel Tell me please, isn't it better to use CamelCase in method names?
static const char* inject_methods_win[] =
{
    [INJECT_METHOD_CREATEPROC] = ""CreateProc"",
    [INJECT_METHOD_TERMINATEPROC] = ""TerminateProc"",
    [INJECT_METHOD_SHELLEXEC] = ""ShellExec"",
    [INJECT_METHOD_SHELLCODE] = ""Shellcode"",
    [INJECT_METHOD_DOPP] = ""Doppelganging"",
    [INJECT_METHOD_READ_FILE] = ""ReadFile"",
    [INJECT_METHOD_WRITE_FILE] = ""WriteFile"",
};

Like this.
The messages use capital letters like ""Status"", ""Success"", ""Time="" and so on. But I'm not sure it is good idea for inject method names.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1290,2021-08-16T13:06:05Z,2021-08-20T15:49:39Z,2021-08-20T15:49:49Z,MERGED,True,49,30,1,https://github.com/exescript,Add injection method printing on print_injection_info,4,[],https://github.com/tklengyel/drakvuf/pull/1290,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/1290#issuecomment-902674496,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1290,2021-08-16T13:06:05Z,2021-08-20T15:49:39Z,2021-08-20T15:49:49Z,MERGED,True,49,30,1,https://github.com/exescript,Add injection method printing on print_injection_info,4,[],https://github.com/tklengyel/drakvuf/pull/1290,https://github.com/exescript,9,https://github.com/tklengyel/drakvuf/pull/1290#issuecomment-902737835,,Not sure why win10 build&run test is marked as failed. Can it be the result of wrong interpretation of new information printing format?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1290,2021-08-16T13:06:05Z,2021-08-20T15:49:39Z,2021-08-20T15:49:49Z,MERGED,True,49,30,1,https://github.com/exescript,Add injection method printing on print_injection_info,4,[],https://github.com/tklengyel/drakvuf/pull/1290,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/1290#issuecomment-902750081,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1290,2021-08-16T13:06:05Z,2021-08-20T15:49:39Z,2021-08-20T15:49:49Z,MERGED,True,49,30,1,https://github.com/exescript,Add injection method printing on print_injection_info,4,[],https://github.com/tklengyel/drakvuf/pull/1290,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/1290#issuecomment-902788188,,"LGTM, thanks!",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1292,2021-08-20T06:24:26Z,2021-08-23T15:16:53Z,2021-08-24T07:20:27Z,MERGED,True,130,33,1,https://github.com/manorit2001,[ci] simultaneously compile the builds and improve caching,3,[],https://github.com/tklengyel/drakvuf/pull/1292,https://github.com/manorit2001,1,https://github.com/tklengyel/drakvuf/pull/1292,Update compile.yml to use matrix for simultaneous builds and improved caching,Update compile.yml to use matrix for simultaneous builds and improved caching,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1292,2021-08-20T06:24:26Z,2021-08-23T15:16:53Z,2021-08-24T07:20:27Z,MERGED,True,130,33,1,https://github.com/manorit2001,[ci] simultaneously compile the builds and improve caching,3,[],https://github.com/tklengyel/drakvuf/pull/1292,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1292#issuecomment-902462635,Update compile.yml to use matrix for simultaneous builds and improved caching,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1293,2021-08-23T16:45:35Z,2021-08-24T11:01:47Z,2021-08-24T11:11:05Z,MERGED,True,120,145,3,https://github.com/manorit2001,[ci] refactor scan-build and codeql,2,[],https://github.com/tklengyel/drakvuf/pull/1293,https://github.com/manorit2001,1,https://github.com/tklengyel/drakvuf/pull/1293,These also install libvmi cached debs now,These also install libvmi cached debs now,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1293,2021-08-23T16:45:35Z,2021-08-24T11:01:47Z,2021-08-24T11:11:05Z,MERGED,True,120,145,3,https://github.com/manorit2001,[ci] refactor scan-build and codeql,2,[],https://github.com/tklengyel/drakvuf/pull/1293,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1293#issuecomment-903939571,These also install libvmi cached debs now,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1294,2021-08-24T12:46:07Z,2021-08-26T00:41:29Z,2021-08-26T08:01:49Z,MERGED,True,297,280,9,https://github.com/disaykin,Remove copy-paste from process's module enumeration code,1,[],https://github.com/tklengyel/drakvuf/pull/1294,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1294,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1294,2021-08-24T12:46:07Z,2021-08-26T00:41:29Z,2021-08-26T08:01:49Z,MERGED,True,297,280,9,https://github.com/disaykin,Remove copy-paste from process's module enumeration code,1,[],https://github.com/tklengyel/drakvuf/pull/1294,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1294#issuecomment-904608697,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1294,2021-08-24T12:46:07Z,2021-08-26T00:41:29Z,2021-08-26T08:01:49Z,MERGED,True,297,280,9,https://github.com/disaykin,Remove copy-paste from process's module enumeration code,1,[],https://github.com/tklengyel/drakvuf/pull/1294,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1294#issuecomment-905744972,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1295,2021-08-24T15:23:05Z,2021-08-24T16:30:46Z,2021-08-25T06:36:38Z,MERGED,True,5,0,1,https://github.com/manorit2001,[ci] fix codeQL run on master branch,2,[],https://github.com/tklengyel/drakvuf/pull/1295,https://github.com/manorit2001,1,https://github.com/tklengyel/drakvuf/pull/1295,"codeQL also needs to be run on master branch. This should fix that error introduced in #1293
only codeQL will be run when on master. scan-build, compile and tarbuild should be skipped","codeQL also needs to be run on master branch. This should fix that error introduced in #1293
only codeQL will be run when on master. scan-build, compile and tarbuild should be skipped",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1295,2021-08-24T15:23:05Z,2021-08-24T16:30:46Z,2021-08-25T06:36:38Z,MERGED,True,5,0,1,https://github.com/manorit2001,[ci] fix codeQL run on master branch,2,[],https://github.com/tklengyel/drakvuf/pull/1295,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1295#issuecomment-904739687,"codeQL also needs to be run on master branch. This should fix that error introduced in #1293
only codeQL will be run when on master. scan-build, compile and tarbuild should be skipped",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1297,2021-08-25T06:27:49Z,2021-08-28T17:59:01Z,2021-09-10T05:09:35Z,MERGED,True,106,179,7,https://github.com/manorit2001,[Linux] refactor injector,3,[],https://github.com/tklengyel/drakvuf/pull/1297,https://github.com/manorit2001,1,https://github.com/tklengyel/drakvuf/pull/1297,This PR consists of refactoring changes for the new Linux injector.,This PR consists of refactoring changes for the new Linux injector.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1297,2021-08-25T06:27:49Z,2021-08-28T17:59:01Z,2021-09-10T05:09:35Z,MERGED,True,106,179,7,https://github.com/manorit2001,[Linux] refactor injector,3,[],https://github.com/tklengyel/drakvuf/pull/1297,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1297#issuecomment-905221361,This PR consists of refactoring changes for the new Linux injector.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1297,2021-08-25T06:27:49Z,2021-08-28T17:59:01Z,2021-09-10T05:09:35Z,MERGED,True,106,179,7,https://github.com/manorit2001,[Linux] refactor injector,3,[],https://github.com/tklengyel/drakvuf/pull/1297,https://github.com/kscieslinski,3,https://github.com/tklengyel/drakvuf/pull/1297#issuecomment-905251600,This PR consists of refactoring changes for the new Linux injector.,"I would actually like to see all setup_<syscall_name>_syscall functions refactored. Currently, they directly reference injector's fields that make the code hard to follow.
For example the setup_read_syscall:
bool setup_read_syscall(injector_t injector, x86_registers_t* regs, size_t amount)
{
    // read(unsigned int fd, char *buf, size_t count);
    struct argument args[3] = { {0} };
    init_int_argument(&args[0], injector->fd);
    init_int_argument(&args[1], injector->virtual_memory_addr);
    init_int_argument(&args[2], amount);

    regs->rax = sys_read;

    return setup_stack(injector->drakvuf, regs, args, ARRAY_SIZE(args));
}
could look like:
bool setup_read_syscall(injector_t injector, x86_registers_t* regs, int fd, void* buf, size_t count)
{
    // read(unsigned int fd, char *buf, size_t count);
    struct argument args[3] = { {0} };
    init_int_argument(&args[0], fd);
    init_int_argument(&args[1], buf);
    init_int_argument(&args[2], count);

    regs->rax = sys_read;

    return setup_stack(injector->drakvuf, regs, args, ARRAY_SIZE(args));
}
I also don't think we need  call_<syscall_number>_syscall wrappers. We can set the regs->rip inside setup_<syscall_number>_syscall function as we are already setting the regs->rax inside them.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1297,2021-08-25T06:27:49Z,2021-08-28T17:59:01Z,2021-09-10T05:09:35Z,MERGED,True,106,179,7,https://github.com/manorit2001,[Linux] refactor injector,3,[],https://github.com/tklengyel/drakvuf/pull/1297,https://github.com/manorit2001,4,https://github.com/tklengyel/drakvuf/pull/1297#issuecomment-905270741,This PR consists of refactoring changes for the new Linux injector.,"I also don't think we need call_<syscall_number>_syscall wrappers. We can set the regs->rip inside setup_<syscall_number>_syscall function as we are already setting the regs->rax inside them.

Yeah, it seemed redundant to me too. Should I also print the error messages also inside them?
Something like: Done
if(!setup_stack(injector->drakvuf, regs, args, ARRAY_SIZE(args)))
{
  fprintf(""Could not setup_stack for read syscall\m"");
  return false;
}
return true;

Also, what do you think about the cb wrappers? Should I remove them too?: These are unchanged",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1297,2021-08-25T06:27:49Z,2021-08-28T17:59:01Z,2021-09-10T05:09:35Z,MERGED,True,106,179,7,https://github.com/manorit2001,[Linux] refactor injector,3,[],https://github.com/tklengyel/drakvuf/pull/1297,https://github.com/manorit2001,5,https://github.com/tklengyel/drakvuf/pull/1297#issuecomment-906085422,This PR consists of refactoring changes for the new Linux injector.,@chivay @BonusPlay @tklengyel do you have any suggestions or refactors you would like?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1297,2021-08-25T06:27:49Z,2021-08-28T17:59:01Z,2021-09-10T05:09:35Z,MERGED,True,106,179,7,https://github.com/manorit2001,[Linux] refactor injector,3,[],https://github.com/tklengyel/drakvuf/pull/1297,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1297#issuecomment-907264608,This PR consists of refactoring changes for the new Linux injector.,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1298,2021-08-26T12:37:02Z,2021-09-11T20:37:24Z,2021-09-11T20:51:10Z,MERGED,True,2,45,1,https://github.com/disaykin,Replace get_func_addr implementation by vmi_translate_sym2v,1,[],https://github.com/tklengyel/drakvuf/pull/1298,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1298,"@BonusPlay Please review my change, it seems like I'm right, in any case, I did not find any differences in the code and behavior.","@BonusPlay Please review my change, it seems like I'm right, in any case, I did not find any differences in the code and behavior.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1298,2021-08-26T12:37:02Z,2021-09-11T20:37:24Z,2021-09-11T20:51:10Z,MERGED,True,2,45,1,https://github.com/disaykin,Replace get_func_addr implementation by vmi_translate_sym2v,1,[],https://github.com/tklengyel/drakvuf/pull/1298,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1298#issuecomment-906370206,"@BonusPlay Please review my change, it seems like I'm right, in any case, I did not find any differences in the code and behavior.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1298,2021-08-26T12:37:02Z,2021-09-11T20:37:24Z,2021-09-11T20:51:10Z,MERGED,True,2,45,1,https://github.com/disaykin,Replace get_func_addr implementation by vmi_translate_sym2v,1,[],https://github.com/tklengyel/drakvuf/pull/1298,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1298#issuecomment-907664882,"@BonusPlay Please review my change, it seems like I'm right, in any case, I did not find any differences in the code and behavior.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1300,2021-08-29T13:21:21Z,2021-09-21T12:02:20Z,2021-09-27T21:57:55Z,MERGED,True,596,9,8,https://github.com/manorit2001,[Linux] add execve method,3,[],https://github.com/tklengyel/drakvuf/pull/1300,https://github.com/manorit2001,1,https://github.com/tklengyel/drakvuf/pull/1300,"This PR adds execve method for linux injector
Depends on #1303","This PR adds execve method for linux injector
Depends on #1303",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1300,2021-08-29T13:21:21Z,2021-09-21T12:02:20Z,2021-09-27T21:57:55Z,MERGED,True,596,9,8,https://github.com/manorit2001,[Linux] add execve method,3,[],https://github.com/tklengyel/drakvuf/pull/1300,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1300#issuecomment-907790674,"This PR adds execve method for linux injector
Depends on #1303",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1300,2021-08-29T13:21:21Z,2021-09-21T12:02:20Z,2021-09-27T21:57:55Z,MERGED,True,596,9,8,https://github.com/manorit2001,[Linux] add execve method,3,[],https://github.com/tklengyel/drakvuf/pull/1300,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1300#issuecomment-907851423,"This PR adds execve method for linux injector
Depends on #1303",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1300,2021-08-29T13:21:21Z,2021-09-21T12:02:20Z,2021-09-27T21:57:55Z,MERGED,True,596,9,8,https://github.com/manorit2001,[Linux] add execve method,3,[],https://github.com/tklengyel/drakvuf/pull/1300,https://github.com/manorit2001,4,https://github.com/tklengyel/drakvuf/pull/1300#issuecomment-915786811,"This PR adds execve method for linux injector
Depends on #1303","Running DRAKVUF #3 for 60 seconds. Opts:  -k 0x187000 --json-win32k /shared/windows7-sp1-x64/win32k.json -a hidsim --hid-monitor-gui --ipt-dir /tmp --ipt-trace-user
DRAKVUF is running with PID 24283, background pid is 24269
CPU utilization average: 32
Exit status: 0
stderr line count: 18
1631130118.262369 DRAKVUF v0.8-git20210908191351+9d825ffe-1 Copyright (C) 2014-2021 Tamas K Lengyel

=================================================================
==24283==ERROR: LeakSanitizer: detected memory leaks

Direct leak of 168 byte(s) in 3 object(s) allocated from:
    #0 0x4f571d in malloc (/shared/jenkins/workspace/DRAKVUF-windows7-sp1-x64/src/drakvuf+0x4f571d)
    #1 0xcbe4ec in retrieve_winstas_from_procs(vmi_instance*, _GArray*) /shared/jenkins/workspace/DRAKVUF-build-sanitize/src/plugins/hidsim/gui/vmi_win_gui_parser.cpp:934:57
    #2 0xcbe965 in find_first_active_desktop(vmi_instance*, desktop*) /shared/jenkins/workspace/DRAKVUF-build-sanitize/src/plugins/hidsim/gui/vmi_win_gui_parser.cpp:974:11
    #3 0xca9bae in gui_monitor(drakvuf*, std::atomic<unsigned int>*, std::atomic<bool>*) /shared/jenkins/workspace/DRAKVUF-build-sanitize/src/plugins/hidsim/gui_monitor.cpp:368:28
    #4 0xc990f3 in int std::__invoke_impl<int, int (*)(drakvuf*, std::atomic<unsigned int>*, std::atomic<bool>*), drakvuf*, std::atomic<unsigned int>*, std::atomic<bool>*>(std::__invoke_other, int (*&&)(drakvuf*, std::atomic<unsigned int>*, std::atomic<bool>*), drakvuf*&&, std::atomic<unsigned int>*&&, std::atomic<bool>*&&) /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/invoke.h:60:14
    #5 0xc988cb in std::__invoke_result<int (*)(drakvuf*, std::atomic<unsigned int>*, std::atomic<bool>*), drakvuf*, std::atomic<unsigned int>*, std::atomic<bool>*>::type std::__invoke<int (*)(drakvuf*, std::atomic<unsigned int>*, std::atomic<bool>*), drakvuf*, std::atomic<unsigned int>*, std::atomic<bool>*>(int (*&&)(drakvuf*, std::atomic<unsigned int>*, std::atomic<bool>*), drakvuf*&&, std::atomic<unsigned int>*&&, std::atomic<bool>*&&) /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/invoke.h:95:14
    #6 0xc9863d in int std::thread::_Invoker<std::tuple<int (*)(drakvuf*, std::atomic<unsigned int>*, std::atomic<bool>*), drakvuf*, std::atomic<unsigned int>*, std::atomic<bool>*> >::_M_invoke<0ul, 1ul, 2ul, 3ul>(std::_Index_tuple<0ul, 1ul, 2ul, 3ul>) /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/thread:244:13
    #7 0xc982c1 in std::thread::_Invoker<std::tuple<int (*)(drakvuf*, std::atomic<unsigned int>*, std::atomic<bool>*), drakvuf*, std::atomic<unsigned int>*, std::atomic<bool>*> >::operator()() /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/thread:251:11
    #8 0xc968f1 in std::thread::_State_impl<std::thread::_Invoker<std::tuple<int (*)(drakvuf*, std::atomic<unsigned int>*, std::atomic<bool>*), drakvuf*, std::atomic<unsigned int>*, std::atomic<bool>*> > >::_M_run() /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/thread:195:13
    #9 0x7fcd21894de3  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xd6de3)

SUMMARY: AddressSanitizer: 168 byte(s) leaked in 3 allocation(s).

@jgru",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1300,2021-08-29T13:21:21Z,2021-09-21T12:02:20Z,2021-09-27T21:57:55Z,MERGED,True,596,9,8,https://github.com/manorit2001,[Linux] add execve method,3,[],https://github.com/tklengyel/drakvuf/pull/1300,https://github.com/jgru,5,https://github.com/tklengyel/drakvuf/pull/1300#issuecomment-921557548,"This PR adds execve method for linux injector
Depends on #1303","SUMMARY: AddressSanitizer: 168 byte(s) leaked in 3 allocation(s).

@jgru

Thank you for bringing this up to my attention, @manorit2001.
I tried to address the memory leaks in #1308.",True,{'THUMBS_UP': ['https://github.com/manorit2001']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1300,2021-08-29T13:21:21Z,2021-09-21T12:02:20Z,2021-09-27T21:57:55Z,MERGED,True,596,9,8,https://github.com/manorit2001,[Linux] add execve method,3,[],https://github.com/tklengyel/drakvuf/pull/1300,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1300#issuecomment-922037638,"This PR adds execve method for linux injector
Depends on #1303",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1300,2021-08-29T13:21:21Z,2021-09-21T12:02:20Z,2021-09-27T21:57:55Z,MERGED,True,596,9,8,https://github.com/manorit2001,[Linux] add execve method,3,[],https://github.com/tklengyel/drakvuf/pull/1300,https://github.com/manorit2001,7,https://github.com/tklengyel/drakvuf/pull/1300#issuecomment-923755488,"This PR adds execve method for linux injector
Depends on #1303",@kscieslinski do you have any more changes you would like?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1300,2021-08-29T13:21:21Z,2021-09-21T12:02:20Z,2021-09-27T21:57:55Z,MERGED,True,596,9,8,https://github.com/manorit2001,[Linux] add execve method,3,[],https://github.com/tklengyel/drakvuf/pull/1300,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/1300#issuecomment-923915094,"This PR adds execve method for linux injector
Depends on #1303",Thanks everyone!,True,{'ROCKET': ['https://github.com/manorit2001']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1301,2021-09-01T12:10:42Z,2021-09-01T23:23:15Z,2021-09-01T23:23:15Z,MERGED,True,38,8,3,https://github.com/exescript,plugin syscalls: add PPVOID argument type,2,[],https://github.com/tklengyel/drakvuf/pull/1301,https://github.com/exescript,1,https://github.com/tklengyel/drakvuf/pull/1301,"plugin syscalls: add new argument type (PVOID*). If pointer is not NULL dereferenced value will be printed.
PVOID* syscall argements that are used in INOUT directions are printed as (usually) on-stack addresses at the moment. Current printed values are useless. The idea is to print internal dereferenced address when argument is not NULL.","plugin syscalls: add new argument type (PVOID*). If pointer is not NULL dereferenced value will be printed.
PVOID* syscall argements that are used in INOUT directions are printed as (usually) on-stack addresses at the moment. Current printed values are useless. The idea is to print internal dereferenced address when argument is not NULL.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1301,2021-09-01T12:10:42Z,2021-09-01T23:23:15Z,2021-09-01T23:23:15Z,MERGED,True,38,8,3,https://github.com/exescript,plugin syscalls: add PPVOID argument type,2,[],https://github.com/tklengyel/drakvuf/pull/1301,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1301#issuecomment-910223525,"plugin syscalls: add new argument type (PVOID*). If pointer is not NULL dereferenced value will be printed.
PVOID* syscall argements that are used in INOUT directions are printed as (usually) on-stack addresses at the moment. Current printed values are useless. The idea is to print internal dereferenced address when argument is not NULL.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1301,2021-09-01T12:10:42Z,2021-09-01T23:23:15Z,2021-09-01T23:23:15Z,MERGED,True,38,8,3,https://github.com/exescript,plugin syscalls: add PPVOID argument type,2,[],https://github.com/tklengyel/drakvuf/pull/1301,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1301#issuecomment-910708687,"plugin syscalls: add new argument type (PVOID*). If pointer is not NULL dereferenced value will be printed.
PVOID* syscall argements that are used in INOUT directions are printed as (usually) on-stack addresses at the moment. Current printed values are useless. The idea is to print internal dereferenced address when argument is not NULL.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1302,2021-09-03T08:55:58Z,2021-09-04T12:54:40Z,2021-09-24T07:48:52Z,MERGED,True,19,7,1,https://github.com/disaykin,syscalls: Print WIN32_PROTECTION_MASK as uint32,1,[],https://github.com/tklengyel/drakvuf/pull/1302,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1302,Remove garbage bits from output,Remove garbage bits from output,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1302,2021-09-03T08:55:58Z,2021-09-04T12:54:40Z,2021-09-24T07:48:52Z,MERGED,True,19,7,1,https://github.com/disaykin,syscalls: Print WIN32_PROTECTION_MASK as uint32,1,[],https://github.com/tklengyel/drakvuf/pull/1302,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1302#issuecomment-912376923,Remove garbage bits from output,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1302,2021-09-03T08:55:58Z,2021-09-04T12:54:40Z,2021-09-24T07:48:52Z,MERGED,True,19,7,1,https://github.com/disaykin,syscalls: Print WIN32_PROTECTION_MASK as uint32,1,[],https://github.com/tklengyel/drakvuf/pull/1302,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1302#issuecomment-912542886,Remove garbage bits from output,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1303,2021-09-04T09:24:50Z,2021-09-05T00:28:42Z,2021-09-05T00:28:42Z,MERGED,True,173,0,2,https://github.com/manorit2001,add support for arrays in injector stack,1,[],https://github.com/tklengyel/drakvuf/pull/1303,https://github.com/manorit2001,1,https://github.com/tklengyel/drakvuf/pull/1303,This PR adds support for creating arrays so that arrays can be used for setup_stack arguments,This PR adds support for creating arrays so that arrays can be used for setup_stack arguments,True,"{'THUMBS_UP': ['https://github.com/tklengyel', 'https://github.com/disaykin']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1303,2021-09-04T09:24:50Z,2021-09-05T00:28:42Z,2021-09-05T00:28:42Z,MERGED,True,173,0,2,https://github.com/manorit2001,add support for arrays in injector stack,1,[],https://github.com/tklengyel/drakvuf/pull/1303,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1303#issuecomment-912941499,This PR adds support for creating arrays so that arrays can be used for setup_stack arguments,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1303,2021-09-04T09:24:50Z,2021-09-05T00:28:42Z,2021-09-05T00:28:42Z,MERGED,True,173,0,2,https://github.com/manorit2001,add support for arrays in injector stack,1,[],https://github.com/tklengyel/drakvuf/pull/1303,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1303#issuecomment-912969641,This PR adds support for creating arrays so that arrays can be used for setup_stack arguments,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1304,2021-09-04T13:29:07Z,2021-09-04T15:55:59Z,2021-09-04T15:56:10Z,MERGED,True,2223,2223,3,https://github.com/tklengyel,syscalls: no need to count arguments manually,1,[],https://github.com/tklengyel/drakvuf/pull/1304,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1304,,,True,{'THUMBS_UP': ['https://github.com/disaykin']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1305,2021-09-05T14:40:52Z,2021-09-06T12:23:33Z,2021-09-07T06:16:12Z,MERGED,True,72,15,1,https://github.com/manorit2001,add print_debug statements in injector_stack,1,[],https://github.com/tklengyel/drakvuf/pull/1305,https://github.com/manorit2001,1,https://github.com/tklengyel/drakvuf/pull/1305,I have tried to add PRINT_DEBUG statements throughout injector_stack. Please let me know if I have to remove or add some debug statements anywhere,I have tried to add PRINT_DEBUG statements throughout injector_stack. Please let me know if I have to remove or add some debug statements anywhere,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1305,2021-09-05T14:40:52Z,2021-09-06T12:23:33Z,2021-09-07T06:16:12Z,MERGED,True,72,15,1,https://github.com/manorit2001,add print_debug statements in injector_stack,1,[],https://github.com/tklengyel/drakvuf/pull/1305,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1305#issuecomment-913167009,I have tried to add PRINT_DEBUG statements throughout injector_stack. Please let me know if I have to remove or add some debug statements anywhere,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1305,2021-09-05T14:40:52Z,2021-09-06T12:23:33Z,2021-09-07T06:16:12Z,MERGED,True,72,15,1,https://github.com/manorit2001,add print_debug statements in injector_stack,1,[],https://github.com/tklengyel/drakvuf/pull/1305,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1305#issuecomment-913218147,I have tried to add PRINT_DEBUG statements throughout injector_stack. Please let me know if I have to remove or add some debug statements anywhere,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1305,2021-09-05T14:40:52Z,2021-09-06T12:23:33Z,2021-09-07T06:16:12Z,MERGED,True,72,15,1,https://github.com/manorit2001,add print_debug statements in injector_stack,1,[],https://github.com/tklengyel/drakvuf/pull/1305,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1305#issuecomment-913229586,I have tried to add PRINT_DEBUG statements throughout injector_stack. Please let me know if I have to remove or add some debug statements anywhere,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1307,2021-09-11T21:34:48Z,2021-09-11T21:35:19Z,2021-09-11T21:35:21Z,MERGED,True,1,1,1,https://github.com/tklengyel,Update Xen to 4.15.1,1,[],https://github.com/tklengyel/drakvuf/pull/1307,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1307,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1308,2021-09-17T07:12:02Z,2021-09-17T19:41:28Z,2021-09-17T19:41:28Z,MERGED,True,3,0,1,https://github.com/jgru,Fix memory leaks in retrieve_winstas_from_procs,1,[],https://github.com/tklengyel/drakvuf/pull/1308,https://github.com/jgru,1,https://github.com/tklengyel/drakvuf/pull/1308,"Dear Tamas,
this PR fixes memory leaks inside the function retrieve_winstas_from_procs, which where identified by @manorit2001 in the course of the CI tests connected to #1300. This patch ensures, that memory allocated in the b/m function will be freed on fails.
Best regards
Jan","Dear Tamas,
this PR fixes memory leaks inside the function retrieve_winstas_from_procs, which where identified by @manorit2001 in the course of the CI tests connected to #1300. This patch ensures, that memory allocated in the b/m function will be freed on fails.
Best regards
Jan",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1308,2021-09-17T07:12:02Z,2021-09-17T19:41:28Z,2021-09-17T19:41:28Z,MERGED,True,3,0,1,https://github.com/jgru,Fix memory leaks in retrieve_winstas_from_procs,1,[],https://github.com/tklengyel/drakvuf/pull/1308,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1308#issuecomment-921555721,"Dear Tamas,
this PR fixes memory leaks inside the function retrieve_winstas_from_procs, which where identified by @manorit2001 in the course of the CI tests connected to #1300. This patch ensures, that memory allocated in the b/m function will be freed on fails.
Best regards
Jan",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1308,2021-09-17T07:12:02Z,2021-09-17T19:41:28Z,2021-09-17T19:41:28Z,MERGED,True,3,0,1,https://github.com/jgru,Fix memory leaks in retrieve_winstas_from_procs,1,[],https://github.com/tklengyel/drakvuf/pull/1308,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1308#issuecomment-921797984,"Dear Tamas,
this PR fixes memory leaks inside the function retrieve_winstas_from_procs, which where identified by @manorit2001 in the course of the CI tests connected to #1300. This patch ensures, that memory allocated in the b/m function will be freed on fails.
Best regards
Jan",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1309,2021-09-24T08:33:53Z,2021-09-26T00:50:02Z,2021-09-27T10:02:04Z,MERGED,True,13,52,2,https://github.com/disaykin,Fix incorrect support for long CommandLine strings in procmon plugin,1,[],https://github.com/tklengyel/drakvuf/pull/1309,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1309,"Previous implementation:

does not work on x86 arch (uses incorrest offset for _UNICODE_STRING->Buffer)
does not convert UTF-16 to UTF-8 (copies only non-zero bytes instead)","Previous implementation:

does not work on x86 arch (uses incorrest offset for _UNICODE_STRING->Buffer)
does not convert UTF-16 to UTF-8 (copies only non-zero bytes instead)",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1309,2021-09-24T08:33:53Z,2021-09-26T00:50:02Z,2021-09-27T10:02:04Z,MERGED,True,13,52,2,https://github.com/disaykin,Fix incorrect support for long CommandLine strings in procmon plugin,1,[],https://github.com/tklengyel/drakvuf/pull/1309,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1309#issuecomment-926448535,"Previous implementation:

does not work on x86 arch (uses incorrest offset for _UNICODE_STRING->Buffer)
does not convert UTF-16 to UTF-8 (copies only non-zero bytes instead)",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1309,2021-09-24T08:33:53Z,2021-09-26T00:50:02Z,2021-09-27T10:02:04Z,MERGED,True,13,52,2,https://github.com/disaykin,Fix incorrect support for long CommandLine strings in procmon plugin,1,[],https://github.com/tklengyel/drakvuf/pull/1309,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1309#issuecomment-926633351,"Previous implementation:

does not work on x86 arch (uses incorrest offset for _UNICODE_STRING->Buffer)
does not convert UTF-16 to UTF-8 (copies only non-zero bytes instead)",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1309,2021-09-24T08:33:53Z,2021-09-26T00:50:02Z,2021-09-27T10:02:04Z,MERGED,True,13,52,2,https://github.com/disaykin,Fix incorrect support for long CommandLine strings in procmon plugin,1,[],https://github.com/tklengyel/drakvuf/pull/1309,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1309#issuecomment-926966027,"Previous implementation:

does not work on x86 arch (uses incorrest offset for _UNICODE_STRING->Buffer)
does not convert UTF-16 to UTF-8 (copies only non-zero bytes instead)",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1309,2021-09-24T08:33:53Z,2021-09-26T00:50:02Z,2021-09-27T10:02:04Z,MERGED,True,13,52,2,https://github.com/disaykin,Fix incorrect support for long CommandLine strings in procmon plugin,1,[],https://github.com/tklengyel/drakvuf/pull/1309,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1309#issuecomment-927200939,"Previous implementation:

does not work on x86 arch (uses incorrest offset for _UNICODE_STRING->Buffer)
does not convert UTF-16 to UTF-8 (copies only non-zero bytes instead)",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1310,2021-10-01T19:41:12Z,2021-10-03T22:52:36Z,2021-10-04T03:29:58Z,MERGED,True,1572,787,10,https://github.com/manorit2001,Split simple functions in windows injector to different files,2,[],https://github.com/tklengyel/drakvuf/pull/1310,https://github.com/manorit2001,1,https://github.com/tklengyel/drakvuf/pull/1310,"References #936
I have started splitting the code for the windows injector to multiple files so that it can be easy to read. I haven't touched any core code yet, I am just moving functions around at this point similar to what is done in Linux injector.
Note: I haven't tested it, I am guessing that the CI and compilation should be enough since I am not changing any logics","References #936
I have started splitting the code for the windows injector to multiple files so that it can be easy to read. I haven't touched any core code yet, I am just moving functions around at this point similar to what is done in Linux injector.
Note: I haven't tested it, I am guessing that the CI and compilation should be enough since I am not changing any logics",True,"{'THUMBS_UP': ['https://github.com/tklengyel'], 'HEART': ['https://github.com/kscieslinski']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1310,2021-10-01T19:41:12Z,2021-10-03T22:52:36Z,2021-10-04T03:29:58Z,MERGED,True,1572,787,10,https://github.com/manorit2001,Split simple functions in windows injector to different files,2,[],https://github.com/tklengyel/drakvuf/pull/1310,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1310#issuecomment-932502855,"References #936
I have started splitting the code for the windows injector to multiple files so that it can be easy to read. I haven't touched any core code yet, I am just moving functions around at this point similar to what is done in Linux injector.
Note: I haven't tested it, I am guessing that the CI and compilation should be enough since I am not changing any logics",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1310,2021-10-01T19:41:12Z,2021-10-03T22:52:36Z,2021-10-04T03:29:58Z,MERGED,True,1572,787,10,https://github.com/manorit2001,Split simple functions in windows injector to different files,2,[],https://github.com/tklengyel/drakvuf/pull/1310,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1310#issuecomment-932508754,"References #936
I have started splitting the code for the windows injector to multiple files so that it can be easy to read. I haven't touched any core code yet, I am just moving functions around at this point similar to what is done in Linux injector.
Note: I haven't tested it, I am guessing that the CI and compilation should be enough since I am not changing any logics",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1310,2021-10-01T19:41:12Z,2021-10-03T22:52:36Z,2021-10-04T03:29:58Z,MERGED,True,1572,787,10,https://github.com/manorit2001,Split simple functions in windows injector to different files,2,[],https://github.com/tklengyel/drakvuf/pull/1310,https://github.com/manorit2001,4,https://github.com/tklengyel/drakvuf/pull/1310#issuecomment-932949628,"References #936
I have started splitting the code for the windows injector to multiple files so that it can be easy to read. I haven't touched any core code yet, I am just moving functions around at this point similar to what is done in Linux injector.
Note: I haven't tested it, I am guessing that the CI and compilation should be enough since I am not changing any logics","I don't think I'll be able to address the codeQL bugs in this PR, though the build seems to be passing.
Do you guys have any design changes you would like in mind regarding the windows injector or will making it similar to linux injector be fine?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1310,2021-10-01T19:41:12Z,2021-10-03T22:52:36Z,2021-10-04T03:29:58Z,MERGED,True,1572,787,10,https://github.com/manorit2001,Split simple functions in windows injector to different files,2,[],https://github.com/tklengyel/drakvuf/pull/1310,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1310#issuecomment-933038656,"References #936
I have started splitting the code for the windows injector to multiple files so that it can be easy to read. I haven't touched any core code yet, I am just moving functions around at this point similar to what is done in Linux injector.
Note: I haven't tested it, I am guessing that the CI and compilation should be enough since I am not changing any logics","Thanks for this PR, it cleans things up considerably!",True,{'HOORAY': ['https://github.com/manorit2001']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1311,2021-10-05T16:16:55Z,2021-10-07T18:23:31Z,2021-10-07T18:23:31Z,MERGED,True,400,153,4,https://github.com/archercreat,dkommon update,4,[],https://github.com/tklengyel/drakvuf/pull/1311,https://github.com/archercreat,1,https://github.com/tklengyel/drakvuf/pull/1311,"Hello! With this pull request I've reimplemented and cleaned dkommon plugin.
The previous plugin version made checks on every CR3 change which required vm exits on every second causing too much overhead. Now we're using stop function to register ""dummy"" callback to make final analysis.
The plugin was tested with the help of @disaykin and @skvl.","Hello! With this pull request I've reimplemented and cleaned dkommon plugin.
The previous plugin version made checks on every CR3 change which required vm exits on every second causing too much overhead. Now we're using stop function to register ""dummy"" callback to make final analysis.
The plugin was tested with the help of @disaykin and @skvl.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1311,2021-10-05T16:16:55Z,2021-10-07T18:23:31Z,2021-10-07T18:23:31Z,MERGED,True,400,153,4,https://github.com/archercreat,dkommon update,4,[],https://github.com/tklengyel/drakvuf/pull/1311,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1311#issuecomment-934557547,"Hello! With this pull request I've reimplemented and cleaned dkommon plugin.
The previous plugin version made checks on every CR3 change which required vm exits on every second causing too much overhead. Now we're using stop function to register ""dummy"" callback to make final analysis.
The plugin was tested with the help of @disaykin and @skvl.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1311,2021-10-05T16:16:55Z,2021-10-07T18:23:31Z,2021-10-07T18:23:31Z,MERGED,True,400,153,4,https://github.com/archercreat,dkommon update,4,[],https://github.com/tklengyel/drakvuf/pull/1311,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1311#issuecomment-934565308,"Hello! With this pull request I've reimplemented and cleaned dkommon plugin.
The previous plugin version made checks on every CR3 change which required vm exits on every second causing too much overhead. Now we're using stop function to register ""dummy"" callback to make final analysis.
The plugin was tested with the help of @disaykin and @skvl.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1311,2021-10-05T16:16:55Z,2021-10-07T18:23:31Z,2021-10-07T18:23:31Z,MERGED,True,400,153,4,https://github.com/archercreat,dkommon update,4,[],https://github.com/tklengyel/drakvuf/pull/1311,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1311#issuecomment-936885610,"Hello! With this pull request I've reimplemented and cleaned dkommon plugin.
The previous plugin version made checks on every CR3 change which required vm exits on every second causing too much overhead. Now we're using stop function to register ""dummy"" callback to make final analysis.
The plugin was tested with the help of @disaykin and @skvl.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1312,2021-10-05T16:53:00Z,2021-10-05T18:39:07Z,2021-10-05T18:39:07Z,MERGED,True,211,23,5,https://github.com/archercreat,ssdtmon ssdt shadow update,1,[],https://github.com/tklengyel/drakvuf/pull/1312,https://github.com/archercreat,1,https://github.com/tklengyel/drakvuf/pull/1312,Added SSDT Shadow support for ssdtmon plugin.,Added SSDT Shadow support for ssdtmon plugin.,True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1312,2021-10-05T16:53:00Z,2021-10-05T18:39:07Z,2021-10-05T18:39:07Z,MERGED,True,211,23,5,https://github.com/archercreat,ssdtmon ssdt shadow update,1,[],https://github.com/tklengyel/drakvuf/pull/1312,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1312#issuecomment-934586636,Added SSDT Shadow support for ssdtmon plugin.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1312,2021-10-05T16:53:00Z,2021-10-05T18:39:07Z,2021-10-05T18:39:07Z,MERGED,True,211,23,5,https://github.com/archercreat,ssdtmon ssdt shadow update,1,[],https://github.com/tklengyel/drakvuf/pull/1312,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1312#issuecomment-934587905,Added SSDT Shadow support for ssdtmon plugin.,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1313,2021-10-06T18:36:51Z,2021-10-12T22:33:51Z,2021-10-12T22:33:51Z,MERGED,True,1572,0,14,https://github.com/archercreat,new plugin rootkitmon,5,[],https://github.com/tklengyel/drakvuf/pull/1313,https://github.com/archercreat,1,https://github.com/tklengyel/drakvuf/pull/1313,"Hello again! This is the new plugin rootkitmon that is used to detect malicious behavior in kernel space. The plugin extensively uses libhook library and made with performance in mind because you don't want to waste precious cpu time doing rootkit checks if most of your malware samples are in usermode. That's why the most volatile structures are only checked at the end of the analysis.
Current features:

protect MSR LSTAR
protect _DRIVER_OBJECT
protect IDT/GDT
protect non pageable driver code sections
protect HalPrivateDispatchTable
monitor adding/deleting _DEVICE_OBJECTS
monitor various system callback registration functions including FwpmCalloutAdd0.
monitor calls to FltRegisterFilter

We've already got plans on what to add more and how to improve already present detection vectors but it's good for the initial phase. The plugin was run thousand times and tested with the help of @disaykin  and @skvl.","Hello again! This is the new plugin rootkitmon that is used to detect malicious behavior in kernel space. The plugin extensively uses libhook library and made with performance in mind because you don't want to waste precious cpu time doing rootkit checks if most of your malware samples are in usermode. That's why the most volatile structures are only checked at the end of the analysis.
Current features:

protect MSR LSTAR
protect _DRIVER_OBJECT
protect IDT/GDT
protect non pageable driver code sections
protect HalPrivateDispatchTable
monitor adding/deleting _DEVICE_OBJECTS
monitor various system callback registration functions including FwpmCalloutAdd0.
monitor calls to FltRegisterFilter

We've already got plans on what to add more and how to improve already present detection vectors but it's good for the initial phase. The plugin was run thousand times and tested with the help of @disaykin  and @skvl.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1313,2021-10-06T18:36:51Z,2021-10-12T22:33:51Z,2021-10-12T22:33:51Z,MERGED,True,1572,0,14,https://github.com/archercreat,new plugin rootkitmon,5,[],https://github.com/tklengyel/drakvuf/pull/1313,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1313#issuecomment-936871667,"Hello again! This is the new plugin rootkitmon that is used to detect malicious behavior in kernel space. The plugin extensively uses libhook library and made with performance in mind because you don't want to waste precious cpu time doing rootkit checks if most of your malware samples are in usermode. That's why the most volatile structures are only checked at the end of the analysis.
Current features:

protect MSR LSTAR
protect _DRIVER_OBJECT
protect IDT/GDT
protect non pageable driver code sections
protect HalPrivateDispatchTable
monitor adding/deleting _DEVICE_OBJECTS
monitor various system callback registration functions including FwpmCalloutAdd0.
monitor calls to FltRegisterFilter

We've already got plans on what to add more and how to improve already present detection vectors but it's good for the initial phase. The plugin was run thousand times and tested with the help of @disaykin  and @skvl.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1313,2021-10-06T18:36:51Z,2021-10-12T22:33:51Z,2021-10-12T22:33:51Z,MERGED,True,1572,0,14,https://github.com/archercreat,new plugin rootkitmon,5,[],https://github.com/tklengyel/drakvuf/pull/1313,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1313#issuecomment-936882935,"Hello again! This is the new plugin rootkitmon that is used to detect malicious behavior in kernel space. The plugin extensively uses libhook library and made with performance in mind because you don't want to waste precious cpu time doing rootkit checks if most of your malware samples are in usermode. That's why the most volatile structures are only checked at the end of the analysis.
Current features:

protect MSR LSTAR
protect _DRIVER_OBJECT
protect IDT/GDT
protect non pageable driver code sections
protect HalPrivateDispatchTable
monitor adding/deleting _DEVICE_OBJECTS
monitor various system callback registration functions including FwpmCalloutAdd0.
monitor calls to FltRegisterFilter

We've already got plans on what to add more and how to improve already present detection vectors but it's good for the initial phase. The plugin was run thousand times and tested with the help of @disaykin  and @skvl.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1313,2021-10-06T18:36:51Z,2021-10-12T22:33:51Z,2021-10-12T22:33:51Z,MERGED,True,1572,0,14,https://github.com/archercreat,new plugin rootkitmon,5,[],https://github.com/tklengyel/drakvuf/pull/1313,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1313#issuecomment-938045120,"Hello again! This is the new plugin rootkitmon that is used to detect malicious behavior in kernel space. The plugin extensively uses libhook library and made with performance in mind because you don't want to waste precious cpu time doing rootkit checks if most of your malware samples are in usermode. That's why the most volatile structures are only checked at the end of the analysis.
Current features:

protect MSR LSTAR
protect _DRIVER_OBJECT
protect IDT/GDT
protect non pageable driver code sections
protect HalPrivateDispatchTable
monitor adding/deleting _DEVICE_OBJECTS
monitor various system callback registration functions including FwpmCalloutAdd0.
monitor calls to FltRegisterFilter

We've already got plans on what to add more and how to improve already present detection vectors but it's good for the initial phase. The plugin was run thousand times and tested with the help of @disaykin  and @skvl.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1316,2021-10-20T01:58:47Z,2021-10-20T02:08:16Z,2021-10-20T02:08:16Z,MERGED,True,1,1,1,https://github.com/tklengyel,Tweak warning about required clang version,1,[],https://github.com/tklengyel/drakvuf/pull/1316,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1316,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1317,2021-10-20T02:11:52Z,2021-10-20T07:22:34Z,2021-10-20T07:22:37Z,MERGED,True,12,6,3,https://github.com/tklengyel,Use g_memdup2 when available,2,[],https://github.com/tklengyel/drakvuf/pull/1317,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1317,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1318,2021-10-20T16:59:24Z,2021-10-21T19:15:55Z,2021-10-30T18:47:14Z,MERGED,True,80,83,2,https://github.com/manorit2001,win_injector: tidy up the code a bit,1,[],https://github.com/tklengyel/drakvuf/pull/1318,https://github.com/manorit2001,1,https://github.com/tklengyel/drakvuf/pull/1318,"changed if to switch in initialize_injector_functions
made a helper function for checking int3 trap and replaced duplicated code for that from injector_int3_terminate_cb and injector_int3_cb","changed if to switch in initialize_injector_functions
made a helper function for checking int3 trap and replaced duplicated code for that from injector_int3_terminate_cb and injector_int3_cb",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1318,2021-10-20T16:59:24Z,2021-10-21T19:15:55Z,2021-10-30T18:47:14Z,MERGED,True,80,83,2,https://github.com/manorit2001,win_injector: tidy up the code a bit,1,[],https://github.com/tklengyel/drakvuf/pull/1318,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1318#issuecomment-947857103,"changed if to switch in initialize_injector_functions
made a helper function for checking int3 trap and replaced duplicated code for that from injector_int3_terminate_cb and injector_int3_cb",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1318,2021-10-20T16:59:24Z,2021-10-21T19:15:55Z,2021-10-30T18:47:14Z,MERGED,True,80,83,2,https://github.com/manorit2001,win_injector: tidy up the code a bit,1,[],https://github.com/tklengyel/drakvuf/pull/1318,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1318#issuecomment-947896912,"changed if to switch in initialize_injector_functions
made a helper function for checking int3 trap and replaced duplicated code for that from injector_int3_terminate_cb and injector_int3_cb",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1318,2021-10-20T16:59:24Z,2021-10-21T19:15:55Z,2021-10-30T18:47:14Z,MERGED,True,80,83,2,https://github.com/manorit2001,win_injector: tidy up the code a bit,1,[],https://github.com/tklengyel/drakvuf/pull/1318,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1318#issuecomment-948926009,"changed if to switch in initialize_injector_functions
made a helper function for checking int3 trap and replaced duplicated code for that from injector_int3_terminate_cb and injector_int3_cb",Thanks!,True,{'HEART': ['https://github.com/manorit2001']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1319,2021-10-22T07:57:34Z,2021-10-26T16:34:53Z,2021-10-26T16:36:50Z,MERGED,True,1469,389,14,https://github.com/manorit2001,win_injector: seperate readfile and writefile to different files ,6,[],https://github.com/tklengyel/drakvuf/pull/1319,https://github.com/manorit2001,1,https://github.com/tklengyel/drakvuf/pull/1319,"Related #936
This is tested on Win7 x64 only","Related #936
This is tested on Win7 x64 only",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1319,2021-10-22T07:57:34Z,2021-10-26T16:34:53Z,2021-10-26T16:36:50Z,MERGED,True,1469,389,14,https://github.com/manorit2001,win_injector: seperate readfile and writefile to different files ,6,[],https://github.com/tklengyel/drakvuf/pull/1319,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1319#issuecomment-949380889,"Related #936
This is tested on Win7 x64 only",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1319,2021-10-22T07:57:34Z,2021-10-26T16:34:53Z,2021-10-26T16:36:50Z,MERGED,True,1469,389,14,https://github.com/manorit2001,win_injector: seperate readfile and writefile to different files ,6,[],https://github.com/tklengyel/drakvuf/pull/1319,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1319#issuecomment-949541305,"Related #936
This is tested on Win7 x64 only",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1319,2021-10-22T07:57:34Z,2021-10-26T16:34:53Z,2021-10-26T16:36:50Z,MERGED,True,1469,389,14,https://github.com/manorit2001,win_injector: seperate readfile and writefile to different files ,6,[],https://github.com/tklengyel/drakvuf/pull/1319,https://github.com/manorit2001,4,https://github.com/tklengyel/drakvuf/pull/1319#issuecomment-952112141,"Related #936
This is tested on Win7 x64 only","Hi Tamas,
Do I need to shorten the switch cases reported by codeQL or would it be fine?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1319,2021-10-22T07:57:34Z,2021-10-26T16:34:53Z,2021-10-26T16:36:50Z,MERGED,True,1469,389,14,https://github.com/manorit2001,win_injector: seperate readfile and writefile to different files ,6,[],https://github.com/tklengyel/drakvuf/pull/1319,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1319#issuecomment-952114285,"Related #936
This is tested on Win7 x64 only","CodeQL looks fine, I think it's good to merge",True,{'ROCKET': ['https://github.com/manorit2001']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1320,2021-10-27T12:08:47Z,2021-10-27T12:29:28Z,2021-10-27T13:26:56Z,MERGED,True,3,1,1,https://github.com/disaykin,Described prototype for NtUserBlockInput,1,[],https://github.com/tklengyel/drakvuf/pull/1320,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1320,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1320,2021-10-27T12:08:47Z,2021-10-27T12:29:28Z,2021-10-27T13:26:56Z,MERGED,True,3,1,1,https://github.com/disaykin,Described prototype for NtUserBlockInput,1,[],https://github.com/tklengyel/drakvuf/pull/1320,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1320#issuecomment-952858221,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1321,2021-10-27T12:32:07Z,2021-10-27T22:52:31Z,2021-11-11T14:11:44Z,MERGED,True,29,21,3,https://github.com/disaykin,"libusermode: Separate meaning ""PF in progress"" and ""DLL loaded in process""",1,[],https://github.com/tklengyel/drakvuf/pull/1321,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1321,"Not all page faults are caused by our code. Up to this point, the code did not
distinguish between the page faults caused by our code and the actual ones.","Not all page faults are caused by our code. Up to this point, the code did not
distinguish between the page faults caused by our code and the actual ones.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1321,2021-10-27T12:32:07Z,2021-10-27T22:52:31Z,2021-11-11T14:11:44Z,MERGED,True,29,21,3,https://github.com/disaykin,"libusermode: Separate meaning ""PF in progress"" and ""DLL loaded in process""",1,[],https://github.com/tklengyel/drakvuf/pull/1321,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1321#issuecomment-952878389,"Not all page faults are caused by our code. Up to this point, the code did not
distinguish between the page faults caused by our code and the actual ones.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1321,2021-10-27T12:32:07Z,2021-10-27T22:52:31Z,2021-11-11T14:11:44Z,MERGED,True,29,21,3,https://github.com/disaykin,"libusermode: Separate meaning ""PF in progress"" and ""DLL loaded in process""",1,[],https://github.com/tklengyel/drakvuf/pull/1321,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1321#issuecomment-952911822,"Not all page faults are caused by our code. Up to this point, the code did not
distinguish between the page faults caused by our code and the actual ones.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1322,2021-10-27T12:35:46Z,2021-10-29T11:02:30Z,2021-12-15T09:28:00Z,MERGED,True,1243,1027,4,https://github.com/skvl,procdump2: heavy re-factoring,1,[],https://github.com/tklengyel/drakvuf/pull/1322,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1322,"This is still work in progress. Though heavy re-factoring been done and documentation for the plug-in been added.
@tklengyel , I think we should require some documentation for every new plug-in. What do you think?","This is still work in progress. Though heavy re-factoring been done and documentation for the plug-in been added.
@tklengyel , I think we should require some documentation for every new plug-in. What do you think?",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1322,2021-10-27T12:35:46Z,2021-10-29T11:02:30Z,2021-12-15T09:28:00Z,MERGED,True,1243,1027,4,https://github.com/skvl,procdump2: heavy re-factoring,1,[],https://github.com/tklengyel/drakvuf/pull/1322,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1322#issuecomment-952881339,"This is still work in progress. Though heavy re-factoring been done and documentation for the plug-in been added.
@tklengyel , I think we should require some documentation for every new plug-in. What do you think?",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1322,2021-10-27T12:35:46Z,2021-10-29T11:02:30Z,2021-12-15T09:28:00Z,MERGED,True,1243,1027,4,https://github.com/skvl,procdump2: heavy re-factoring,1,[],https://github.com/tklengyel/drakvuf/pull/1322,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1322#issuecomment-953024935,"This is still work in progress. Though heavy re-factoring been done and documentation for the plug-in been added.
@tklengyel , I think we should require some documentation for every new plug-in. What do you think?",@skvl FWIW https://github.com/tklengyel/drakvuf/wiki/DRAKVUF-Plugin-Documentation,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1322,2021-10-27T12:35:46Z,2021-10-29T11:02:30Z,2021-12-15T09:28:00Z,MERGED,True,1243,1027,4,https://github.com/skvl,procdump2: heavy re-factoring,1,[],https://github.com/tklengyel/drakvuf/pull/1322,https://github.com/skvl,4,https://github.com/tklengyel/drakvuf/pull/1322#issuecomment-953107081,"This is still work in progress. Though heavy re-factoring been done and documentation for the plug-in been added.
@tklengyel , I think we should require some documentation for every new plug-in. What do you think?","@skvl FWIW https://github.com/tklengyel/drakvuf/wiki/DRAKVUF-Plugin-Documentation

I have seen the page. Though GH Wiki is far away from code. Local README is more accessible in my opinion.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1322,2021-10-27T12:35:46Z,2021-10-29T11:02:30Z,2021-12-15T09:28:00Z,MERGED,True,1243,1027,4,https://github.com/skvl,procdump2: heavy re-factoring,1,[],https://github.com/tklengyel/drakvuf/pull/1322,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1322#issuecomment-953157689,"This is still work in progress. Though heavy re-factoring been done and documentation for the plug-in been added.
@tklengyel , I think we should require some documentation for every new plug-in. What do you think?",Feel free to add a README to the plugin folder too.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1322,2021-10-27T12:35:46Z,2021-10-29T11:02:30Z,2021-12-15T09:28:00Z,MERGED,True,1243,1027,4,https://github.com/skvl,procdump2: heavy re-factoring,1,[],https://github.com/tklengyel/drakvuf/pull/1322,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1322#issuecomment-953370677,"This is still work in progress. Though heavy re-factoring been done and documentation for the plug-in been added.
@tklengyel , I think we should require some documentation for every new plug-in. What do you think?",Please rebase on latest master,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1322,2021-10-27T12:35:46Z,2021-10-29T11:02:30Z,2021-12-15T09:28:00Z,MERGED,True,1243,1027,4,https://github.com/skvl,procdump2: heavy re-factoring,1,[],https://github.com/tklengyel/drakvuf/pull/1322,https://github.com/skvl,7,https://github.com/tklengyel/drakvuf/pull/1322#issuecomment-953462128,"This is still work in progress. Though heavy re-factoring been done and documentation for the plug-in been added.
@tklengyel , I think we should require some documentation for every new plug-in. What do you think?","Please rebase on latest master

Done!",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1322,2021-10-27T12:35:46Z,2021-10-29T11:02:30Z,2021-12-15T09:28:00Z,MERGED,True,1243,1027,4,https://github.com/skvl,procdump2: heavy re-factoring,1,[],https://github.com/tklengyel/drakvuf/pull/1322,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/1322#issuecomment-953767900,"This is still work in progress. Though heavy re-factoring been done and documentation for the plug-in been added.
@tklengyel , I think we should require some documentation for every new plug-in. What do you think?",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1322,2021-10-27T12:35:46Z,2021-10-29T11:02:30Z,2021-12-15T09:28:00Z,MERGED,True,1243,1027,4,https://github.com/skvl,procdump2: heavy re-factoring,1,[],https://github.com/tklengyel/drakvuf/pull/1322,https://github.com/skvl,9,https://github.com/tklengyel/drakvuf/pull/1322#issuecomment-954603128,"This is still work in progress. Though heavy re-factoring been done and documentation for the plug-in been added.
@tklengyel , I think we should require some documentation for every new plug-in. What do you think?","@tklengyel , is everything OK now?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1323,2021-10-27T14:12:17Z,2021-10-27T22:51:59Z,2021-11-11T14:11:44Z,MERGED,True,23,10,5,https://github.com/disaykin,procdump2: added ability to disable process memory dumping on drakvuf…,1,[],https://github.com/tklengyel/drakvuf/pull/1323,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1323,… analysis completion,… analysis completion,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1323,2021-10-27T14:12:17Z,2021-10-27T22:51:59Z,2021-11-11T14:11:44Z,MERGED,True,23,10,5,https://github.com/disaykin,procdump2: added ability to disable process memory dumping on drakvuf…,1,[],https://github.com/tklengyel/drakvuf/pull/1323,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1323#issuecomment-952972418,… analysis completion,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1323,2021-10-27T14:12:17Z,2021-10-27T22:51:59Z,2021-11-11T14:11:44Z,MERGED,True,23,10,5,https://github.com/disaykin,procdump2: added ability to disable process memory dumping on drakvuf…,1,[],https://github.com/tklengyel/drakvuf/pull/1323,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1323#issuecomment-953157288,… analysis completion,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1324,2021-10-27T17:25:39Z,2021-10-27T22:51:09Z,2021-12-15T09:28:01Z,MERGED,True,47,8,2,https://github.com/skvl,socketmon: force hooking WOW64 modules,1,[],https://github.com/tklengyel/drakvuf/pull/1324,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1324,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1324,2021-10-27T17:25:39Z,2021-10-27T22:51:09Z,2021-12-15T09:28:01Z,MERGED,True,47,8,2,https://github.com/skvl,socketmon: force hooking WOW64 modules,1,[],https://github.com/tklengyel/drakvuf/pull/1324,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1324#issuecomment-953148219,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1324,2021-10-27T17:25:39Z,2021-10-27T22:51:09Z,2021-12-15T09:28:01Z,MERGED,True,47,8,2,https://github.com/skvl,socketmon: force hooking WOW64 modules,1,[],https://github.com/tklengyel/drakvuf/pull/1324,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1324#issuecomment-953158335,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1325,2021-10-28T19:12:39Z,2021-10-29T11:02:46Z,2021-10-29T12:10:35Z,MERGED,True,55,22,7,https://github.com/manorit2001,injector: use gprs as default for injection,1,[],https://github.com/tklengyel/drakvuf/pull/1325,https://github.com/manorit2001,1,https://github.com/tklengyel/drakvuf/pull/1325,"Change only the general purpose registers during injection so that the registers don't somehow mess up the kernel structures of the operating system. This was the default behavior before for the windows injector, it was regressed for refactored methods in #1319
Note: Linux injector remains untested","Change only the general purpose registers during injection so that the registers don't somehow mess up the kernel structures of the operating system. This was the default behavior before for the windows injector, it was regressed for refactored methods in #1319
Note: Linux injector remains untested",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1325,2021-10-28T19:12:39Z,2021-10-29T11:02:46Z,2021-10-29T12:10:35Z,MERGED,True,55,22,7,https://github.com/manorit2001,injector: use gprs as default for injection,1,[],https://github.com/tklengyel/drakvuf/pull/1325,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1325#issuecomment-954126410,"Change only the general purpose registers during injection so that the registers don't somehow mess up the kernel structures of the operating system. This was the default behavior before for the windows injector, it was regressed for refactored methods in #1319
Note: Linux injector remains untested",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1325,2021-10-28T19:12:39Z,2021-10-29T11:02:46Z,2021-10-29T12:10:35Z,MERGED,True,55,22,7,https://github.com/manorit2001,injector: use gprs as default for injection,1,[],https://github.com/tklengyel/drakvuf/pull/1325,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1325#issuecomment-954128714,"Change only the general purpose registers during injection so that the registers don't somehow mess up the kernel structures of the operating system. This was the default behavior before for the windows injector, it was regressed for refactored methods in #1319
Note: Linux injector remains untested",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1326,2021-10-31T06:22:00Z,2021-11-08T20:52:05Z,2021-11-09T05:04:24Z,MERGED,True,531,315,7,https://github.com/manorit2001,win_injector: seperate createprocess method,7,[],https://github.com/tklengyel/drakvuf/pull/1326,https://github.com/manorit2001,1,https://github.com/tklengyel/drakvuf/pull/1326,"Related #936
Although, this method was split across x86 and x64 if paths separately, but they seemed similar only to me so I've combined them. Let me know if you think that is a mistake","Related #936
Although, this method was split across x86 and x64 if paths separately, but they seemed similar only to me so I've combined them. Let me know if you think that is a mistake",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1326,2021-10-31T06:22:00Z,2021-11-08T20:52:05Z,2021-11-09T05:04:24Z,MERGED,True,531,315,7,https://github.com/manorit2001,win_injector: seperate createprocess method,7,[],https://github.com/tklengyel/drakvuf/pull/1326,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1326#issuecomment-955644335,"Related #936
Although, this method was split across x86 and x64 if paths separately, but they seemed similar only to me so I've combined them. Let me know if you think that is a mistake",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1326,2021-10-31T06:22:00Z,2021-11-08T20:52:05Z,2021-11-09T05:04:24Z,MERGED,True,531,315,7,https://github.com/manorit2001,win_injector: seperate createprocess method,7,[],https://github.com/tklengyel/drakvuf/pull/1326,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1326#issuecomment-955711369,"Related #936
Although, this method was split across x86 and x64 if paths separately, but they seemed similar only to me so I've combined them. Let me know if you think that is a mistake",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1326,2021-10-31T06:22:00Z,2021-11-08T20:52:05Z,2021-11-09T05:04:24Z,MERGED,True,531,315,7,https://github.com/manorit2001,win_injector: seperate createprocess method,7,[],https://github.com/tklengyel/drakvuf/pull/1326,https://github.com/manorit2001,4,https://github.com/tklengyel/drakvuf/pull/1326#issuecomment-955732720,"Related #936
Although, this method was split across x86 and x64 if paths separately, but they seemed similar only to me so I've combined them. Let me know if you think that is a mistake","1635691083.439574 DRAKVUF v0.8-git20211031022202+1e1f9826-1 Copyright (C) 2014-2021 Tamas K Lengyel
GSlice: MemChecker: attempt to release non-allocated block: 0x55679ea34000 size=56
timeout: the monitored command dumped core

@tklengyel I don't understand this error. Also, I haven't changed anything related to Linux in this PR so how is this failing?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1326,2021-10-31T06:22:00Z,2021-11-08T20:52:05Z,2021-11-09T05:04:24Z,MERGED,True,531,315,7,https://github.com/manorit2001,win_injector: seperate createprocess method,7,[],https://github.com/tklengyel/drakvuf/pull/1326,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1326#issuecomment-955780792,"Related #936
Although, this method was split across x86 and x64 if paths separately, but they seemed similar only to me so I've combined them. Let me know if you think that is a mistake",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1326,2021-10-31T06:22:00Z,2021-11-08T20:52:05Z,2021-11-09T05:04:24Z,MERGED,True,531,315,7,https://github.com/manorit2001,win_injector: seperate createprocess method,7,[],https://github.com/tklengyel/drakvuf/pull/1326,https://github.com/manorit2001,6,https://github.com/tklengyel/drakvuf/pull/1326#issuecomment-956028353,"Related #936
Although, this method was split across x86 and x64 if paths separately, but they seemed similar only to me so I've combined them. Let me know if you think that is a mistake","Seems like the issue is being triggered in DRAKVUF part ( I haven't changed any code related to it ). I ran the injector on Win 7 x64 multiple times and it seemed to inject properly everytime. But whenever I run drakvuf with -m createproc. It sometimes runs properly but otherwise

the injection happens successfully
the plugins start but later, SEGFAULT occurs in drakvuf_loop


Enabled only syscall plugin
[...]
Injected PID: 1768. TID: 864                                                                                                                                                                  
Waiting for injected process                                                                                                                                                                  
1635752407.387283 Switching altp2m and to singlestep on vcpu 1                                                                                                                                
1635752407.389576 reset trap on vCPU 1, switching altp2m 0->1                                                                                                                                 
1635752407.390759 CR3 cb on vCPU 0: 0x187000                                                                                                                                                  
INT3 Callback @ 0x77299d5a. CR3 0x4a1ee000. vcpu 1. TID 1384                                                                                                                                  
Resume RAX: 0x1                                                                                                                                                                               
Resume successful                                                                                                                                                                             
1635752407.395691 Switching altp2m and to singlestep on vcpu 1                                                                                                                                
1635752407.398383 reset trap on vCPU 1, switching altp2m 0->1                                                                                                                                 
1635752407.399426 CR3 cb on vCPU 0: 0x5cc2f000                                                                                                                                                
1635752407.400309 CR3 cb on vCPU 0: 0x187000                                                                                                                                                  
1635752407.407641 CR3 cb on vCPU 1: 0x2d57b000                                                                                                                                                
Process start detected 1768 -> 0x2d57b000                                                                                                                                                     
1635752407.408001 DRAKVUF polling loop finished                                                                                                                                               
Finished injection loop                                                                                                                                                                       
[INJECT] TIME:1635752407.408226 METHOD:CreateProc  STATUS:SUCCESS PID:1296 FILE:"""" ARGUMENTS:"""" INJECTED_PID:1768 INJECTED_TID:864                                                            
Finished with injection. Ret: 2.                                                                                                                                                              
Injector freed
1635752407.408327 Enabling context based interception.
1635752407.408391 Starting plugins
1635752407.408577 Starting plugin syscalls
1635752407.409084 Kernel base: 0xfffff8000285c000
1635752407.409084 Kernel pagetable: 0x187000
1635752407.409412 NtBuildNumber: 7601
1635752407.409433 NT syscall table: 0xfffff800028f4300. Limit: 402
1635752407.409480 Win32k syscall table: 0xfffff96000185e00. Limit: 827
1635752407.409523 Windows syscall entry: 0xfffff800028fe9de
[...]



gdb
[SYSCALL] TIME:1635752408.156806 VCPU:1 CR3:0x2D57B000 ""\Device\HarddiskVolume2\Windows\System32\calc.exe"":NtOpenFile SessionID:1 PID:1768 PPID:1296 Module:""nt"" vCPU:1 CR3:0x2D57B000 Syscall:48 NArgs:6 FileHandle:0xFFFFF880044927A0 DesiredAccess:0x80100000 ObjectAttributes:""\SystemRoot\Prefetch\CALC.EXE-77FDF17F.pf"" IoStatusBlock:0xFFFFF880044927A8 ShareAccess:0x0 OpenOptions:0x20
1635752408.161689 Breakpoint VA 0xfffff80002d15331 -> PA 0x2d15331
1635752408.161850 Physmap populated? 0
1635752408.162249 Copied trapped page to new location
1635752408.162389 Activating remapped gfns in the altp2m views!
1635752408.162780               Trap added @ PA 0x2d15331 RPA 0xff0e0331 Page 11541 for NtOpenFile.
1635752408.162872 Switching altp2m and to singlestep on vcpu 1
1635752408.163478 reset trap on vCPU 1, switching altp2m 0->1
[SYSRET] TIME:1635752408.165666 VCPU:1 CR3:0x2D57B000 ""\Device\HarddiskVolume2\Windows\System32\calc.exe"":NtOpenFile SessionID:1 PID:1768 PPID:1296 Module:""nt"" vCPU:1 CR3:0x2D57B000 Syscall:48 Ret:3221225524 Info:STATUS_OBJECT_NAME_NOT_FOUND
1635752408.165666 Removing breakpoint trap from 0x2d15331.
1635752408.170955 Removed memtrap for GFN 0x2d15 in altp2m view 1
1635752408.171089 Removed memtrap for GFN 0xff0e0 in altp2m view 1

Program received signal SIGSEGV, Segmentation fault.
0x0000000000000021 in ?? ()
(gdb) bt
#0  0x0000000000000021 in ?? ()
#1  0x00005555555ff974 in int3_cb (vmi=<optimized out>, event=0x55555583fd38) at vmi.c:699
#2  0x00007ffff7f67ca5 in process_software_breakpoint (vmi=0x555555841ea0, vmec=0x7fffffffd4f0) at libvmi/driver/xen/xen_events.c:697
#3  0x00007ffff7f66203 in process_requests_7 (vmi=0x555555841ea0, requests_processed=0x7fffffffd7b0) at libvmi/driver/xen/xen_events.c:3031
#4  0x00007ffff7f672bf in xen_events_listen (vmi=0x555555841ea0, timeout=<optimized out>) at libvmi/driver/xen/xen_events.c:3273
#5  0x00005555555ffdff in drakvuf_vmi_event_callback (fd=<optimized out>, data=<optimized out>) at vmi.c:1547
#6  0x00005555555fbc3e in drakvuf_poll (drakvuf=drakvuf@entry=0x55555583fa90, timeout=timeout@entry=1000) at vmi.c:1580
#7  0x00005555555fff0d in drakvuf_loop (drakvuf=0x55555583fa90, is_interrupted=0x5555555f62c0 <is_interrupted(drakvuf*, void*)>, data=0x0) at vmi.c:1593
#8  0x00005555555f6266 in drakvuf_c::loop (this=0x555555827c00, duration=<optimized out>) at drakvuf.cpp:265
#9  0x00005555555f4820 in main (argc=<optimized out>, argv=<optimized out>) at main.cpp:940
(gdb) frame 1
#1  0x00005555555ff974 in int3_cb (vmi=<optimized out>, event=0x55555583fd38) at vmi.c:699
699                 rsp |= trap_info.trap->cb(drakvuf, &trap_info);


Do you have any idea why it might occur?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1326,2021-10-31T06:22:00Z,2021-11-08T20:52:05Z,2021-11-09T05:04:24Z,MERGED,True,531,315,7,https://github.com/manorit2001,win_injector: seperate createprocess method,7,[],https://github.com/tklengyel/drakvuf/pull/1326,https://github.com/manorit2001,7,https://github.com/tklengyel/drakvuf/pull/1326#issuecomment-956204765,"Related #936
Although, this method was split across x86 and x64 if paths separately, but they seemed similar only to me so I've combined them. Let me know if you think that is a mistake","Hi, Could you give me some more info on injector->break_loop_on_detection flag? I think I know where the fault might have occurred",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1326,2021-10-31T06:22:00Z,2021-11-08T20:52:05Z,2021-11-09T05:04:24Z,MERGED,True,531,315,7,https://github.com/manorit2001,win_injector: seperate createprocess method,7,[],https://github.com/tklengyel/drakvuf/pull/1326,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/1326#issuecomment-958142197,"Related #936
Although, this method was split across x86 and x64 if paths separately, but they seemed similar only to me so I've combined them. Let me know if you think that is a mistake",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1326,2021-10-31T06:22:00Z,2021-11-08T20:52:05Z,2021-11-09T05:04:24Z,MERGED,True,531,315,7,https://github.com/manorit2001,win_injector: seperate createprocess method,7,[],https://github.com/tklengyel/drakvuf/pull/1326,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/1326#issuecomment-958544749,"Related #936
Although, this method was split across x86 and x64 if paths separately, but they seemed similar only to me so I've combined them. Let me know if you think that is a mistake",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1326,2021-10-31T06:22:00Z,2021-11-08T20:52:05Z,2021-11-09T05:04:24Z,MERGED,True,531,315,7,https://github.com/manorit2001,win_injector: seperate createprocess method,7,[],https://github.com/tklengyel/drakvuf/pull/1326,https://github.com/manorit2001,10,https://github.com/tklengyel/drakvuf/pull/1326#issuecomment-958679577,"Related #936
Although, this method was split across x86 and x64 if paths separately, but they seemed similar only to me so I've combined them. Let me know if you think that is a mistake",I think x86 injection control path will need some debugging from my side. I will look into it,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1326,2021-10-31T06:22:00Z,2021-11-08T20:52:05Z,2021-11-09T05:04:24Z,MERGED,True,531,315,7,https://github.com/manorit2001,win_injector: seperate createprocess method,7,[],https://github.com/tklengyel/drakvuf/pull/1326,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/1326#issuecomment-962659427,"Related #936
Although, this method was split across x86 and x64 if paths separately, but they seemed similar only to me so I've combined them. Let me know if you think that is a mistake",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1327,2021-10-31T18:47:18Z,2021-11-03T00:39:43Z,2021-11-03T00:39:43Z,MERGED,True,124,127,3,https://github.com/archercreat,socketmon UDP update,1,[],https://github.com/tklengyel/drakvuf/pull/1327,https://github.com/archercreat,1,https://github.com/tklengyel/drakvuf/pull/1327,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1327,2021-10-31T18:47:18Z,2021-11-03T00:39:43Z,2021-11-03T00:39:43Z,MERGED,True,124,127,3,https://github.com/archercreat,socketmon UDP update,1,[],https://github.com/tklengyel/drakvuf/pull/1327,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1327#issuecomment-955772563,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1327,2021-10-31T18:47:18Z,2021-11-03T00:39:43Z,2021-11-03T00:39:43Z,MERGED,True,124,127,3,https://github.com/archercreat,socketmon UDP update,1,[],https://github.com/tklengyel/drakvuf/pull/1327,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1327#issuecomment-955780941,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1328,2021-11-01T06:50:03Z,2021-11-03T00:01:40Z,2021-11-03T00:01:41Z,MERGED,True,7,0,1,https://github.com/jgru,Fix potential dereference of nullptr (CID 361179),1,[],https://github.com/tklengyel/drakvuf/pull/1328,https://github.com/jgru,1,https://github.com/tklengyel/drakvuf/pull/1328,"Dear Tamas,
this patch fixes a defect which identified by Coverity as CID 361179.
It addresses a potential dereference of a nullptr stemming from an unchecked return value in get_display_dimensions(...).
Thanks already in advance for reviewing and considering this PR.
Best regards
Jan","Dear Tamas,
this patch fixes a defect which identified by Coverity as CID 361179.
It addresses a potential dereference of a nullptr stemming from an unchecked return value in get_display_dimensions(...).
Thanks already in advance for reviewing and considering this PR.
Best regards
Jan",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1328,2021-11-01T06:50:03Z,2021-11-03T00:01:40Z,2021-11-03T00:01:41Z,MERGED,True,7,0,1,https://github.com/jgru,Fix potential dereference of nullptr (CID 361179),1,[],https://github.com/tklengyel/drakvuf/pull/1328,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1328#issuecomment-955976702,"Dear Tamas,
this patch fixes a defect which identified by Coverity as CID 361179.
It addresses a potential dereference of a nullptr stemming from an unchecked return value in get_display_dimensions(...).
Thanks already in advance for reviewing and considering this PR.
Best regards
Jan",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1328,2021-11-01T06:50:03Z,2021-11-03T00:01:40Z,2021-11-03T00:01:41Z,MERGED,True,7,0,1,https://github.com/jgru,Fix potential dereference of nullptr (CID 361179),1,[],https://github.com/tklengyel/drakvuf/pull/1328,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1328#issuecomment-958171539,"Dear Tamas,
this patch fixes a defect which identified by Coverity as CID 361179.
It addresses a potential dereference of a nullptr stemming from an unchecked return value in get_display_dimensions(...).
Thanks already in advance for reviewing and considering this PR.
Best regards
Jan",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1330,2021-11-02T18:38:13Z,2021-11-02T20:17:52Z,2021-11-02T20:17:55Z,CLOSED,False,1,1,1,https://github.com/tklengyel,Disable rootkitmon plugin by default until memory leaks are fixed,1,[],https://github.com/tklengyel/drakvuf/pull/1330,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1330,The CI had a regression with Valgrind with the Xen 4.15.1 upgrade. Rootkitmon got merged with no valgrind tests. Now that valgrind is operational again it is spotted leaks (see #1329). Don't enable plugin by default until leaks are fixed.,The CI had a regression with Valgrind with the Xen 4.15.1 upgrade. Rootkitmon got merged with no valgrind tests. Now that valgrind is operational again it is spotted leaks (see #1329). Don't enable plugin by default until leaks are fixed.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1331,2021-11-02T19:03:29Z,2021-11-02T20:17:36Z,2021-11-02T20:17:36Z,MERGED,True,1,0,1,https://github.com/archercreat,rootkitmon memoryleak fix,1,[],https://github.com/tklengyel/drakvuf/pull/1331,https://github.com/archercreat,1,https://github.com/tklengyel/drakvuf/pull/1331,"The leak was due to missing g_checksum_free call.
Addressing #1329.","The leak was due to missing g_checksum_free call.
Addressing #1329.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1331,2021-11-02T19:03:29Z,2021-11-02T20:17:36Z,2021-11-02T20:17:36Z,MERGED,True,1,0,1,https://github.com/archercreat,rootkitmon memoryleak fix,1,[],https://github.com/tklengyel/drakvuf/pull/1331,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1331#issuecomment-958078562,"The leak was due to missing g_checksum_free call.
Addressing #1329.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1331,2021-11-02T19:03:29Z,2021-11-02T20:17:36Z,2021-11-02T20:17:36Z,MERGED,True,1,0,1,https://github.com/archercreat,rootkitmon memoryleak fix,1,[],https://github.com/tklengyel/drakvuf/pull/1331,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1331#issuecomment-958089142,"The leak was due to missing g_checksum_free call.
Addressing #1329.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1331,2021-11-02T19:03:29Z,2021-11-02T20:17:36Z,2021-11-02T20:17:36Z,MERGED,True,1,0,1,https://github.com/archercreat,rootkitmon memoryleak fix,1,[],https://github.com/tklengyel/drakvuf/pull/1331,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1331#issuecomment-958089299,"The leak was due to missing g_checksum_free call.
Addressing #1329.",Thanks for the fast fix :),True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1331,2021-11-02T19:03:29Z,2021-11-02T20:17:36Z,2021-11-02T20:17:36Z,MERGED,True,1,0,1,https://github.com/archercreat,rootkitmon memoryleak fix,1,[],https://github.com/tklengyel/drakvuf/pull/1331,https://github.com/archercreat,5,https://github.com/tklengyel/drakvuf/pull/1331#issuecomment-958090254,"The leak was due to missing g_checksum_free call.
Addressing #1329.",My bad! Next pull requests are gonna be tested with Valgrind.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1332,2021-11-06T10:00:06Z,2021-11-07T18:32:22Z,2021-11-07T18:32:23Z,MERGED,True,57,7,8,https://github.com/jgru,Enhance random HID even simulation by the ability to inject random clicks,3,[],https://github.com/tklengyel/drakvuf/pull/1332,https://github.com/jgru,1,https://github.com/tklengyel/drakvuf/pull/1332,"Dear Tamas,
this patch enhances the hidsim-plugin by the ability to inject random clicks, which is often needed to pass the passive RTTs employed by evasive malware.  In order to activate this behavior, a new CLI switch named --hid-random-clicks is introduced, which can be used to toggle it on.
Thanks already in advance for reviewing and considering this PR.
Best regards
Jan","Dear Tamas,
this patch enhances the hidsim-plugin by the ability to inject random clicks, which is often needed to pass the passive RTTs employed by evasive malware.  In order to activate this behavior, a new CLI switch named --hid-random-clicks is introduced, which can be used to toggle it on.
Thanks already in advance for reviewing and considering this PR.
Best regards
Jan",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1332,2021-11-06T10:00:06Z,2021-11-07T18:32:22Z,2021-11-07T18:32:23Z,MERGED,True,57,7,8,https://github.com/jgru,Enhance random HID even simulation by the ability to inject random clicks,3,[],https://github.com/tklengyel/drakvuf/pull/1332,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1332#issuecomment-962427681,"Dear Tamas,
this patch enhances the hidsim-plugin by the ability to inject random clicks, which is often needed to pass the passive RTTs employed by evasive malware.  In order to activate this behavior, a new CLI switch named --hid-random-clicks is introduced, which can be used to toggle it on.
Thanks already in advance for reviewing and considering this PR.
Best regards
Jan",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1332,2021-11-06T10:00:06Z,2021-11-07T18:32:22Z,2021-11-07T18:32:23Z,MERGED,True,57,7,8,https://github.com/jgru,Enhance random HID even simulation by the ability to inject random clicks,3,[],https://github.com/tklengyel/drakvuf/pull/1332,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1332#issuecomment-962442371,"Dear Tamas,
this patch enhances the hidsim-plugin by the ability to inject random clicks, which is often needed to pass the passive RTTs employed by evasive malware.  In order to activate this behavior, a new CLI switch named --hid-random-clicks is introduced, which can be used to toggle it on.
Thanks already in advance for reviewing and considering this PR.
Best regards
Jan",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1332,2021-11-06T10:00:06Z,2021-11-07T18:32:22Z,2021-11-07T18:32:23Z,MERGED,True,57,7,8,https://github.com/jgru,Enhance random HID even simulation by the ability to inject random clicks,3,[],https://github.com/tklengyel/drakvuf/pull/1332,https://github.com/jgru,4,https://github.com/tklengyel/drakvuf/pull/1332#issuecomment-962470519,"Dear Tamas,
this patch enhances the hidsim-plugin by the ability to inject random clicks, which is often needed to pass the passive RTTs employed by evasive malware.  In order to activate this behavior, a new CLI switch named --hid-random-clicks is introduced, which can be used to toggle it on.
Thanks already in advance for reviewing and considering this PR.
Best regards
Jan","I'm a little triggered by the lack of consistency in function argument ordering, but overall +1

Thanks for your remark, @BonusPlay! I wanted to keep the function arguments, which are used for inter thread communication last, therefore it looks like, that I added the additional boolean named is_rand_click careless in the middle of the list of arguments.  Hope, its fine with this explanation.",True,{'THUMBS_UP': ['https://github.com/BonusPlay']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1333,2021-11-08T14:05:53Z,2021-11-08T20:51:33Z,2021-11-08T20:51:33Z,MERGED,True,97,6,3,https://github.com/archercreat,Ssdtmon SDT and SDTShadow checks,3,[],https://github.com/tklengyel/drakvuf/pull/1333,https://github.com/archercreat,1,https://github.com/tklengyel/drakvuf/pull/1333,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1333,2021-11-08T14:05:53Z,2021-11-08T20:51:33Z,2021-11-08T20:51:33Z,MERGED,True,97,6,3,https://github.com/archercreat,Ssdtmon SDT and SDTShadow checks,3,[],https://github.com/tklengyel/drakvuf/pull/1333,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1333#issuecomment-963186782,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1333,2021-11-08T14:05:53Z,2021-11-08T20:51:33Z,2021-11-08T20:51:33Z,MERGED,True,97,6,3,https://github.com/archercreat,Ssdtmon SDT and SDTShadow checks,3,[],https://github.com/tklengyel/drakvuf/pull/1333,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1333#issuecomment-963395016,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1334,2021-11-09T09:45:09Z,2021-11-09T20:37:56Z,2021-11-09T20:37:56Z,MERGED,True,29,9,3,https://github.com/exescript,Fix fread() error handling,1,[],https://github.com/tklengyel/drakvuf/pull/1334,https://github.com/exescript,1,https://github.com/tklengyel/drakvuf/pull/1334,"There are places in libinjector and hidsim plugins when it would be good practice to check if fread made the deal successfully.
It accually can be useful on file read error on injection","There are places in libinjector and hidsim plugins when it would be good practice to check if fread made the deal successfully.
It accually can be useful on file read error on injection",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1334,2021-11-09T09:45:09Z,2021-11-09T20:37:56Z,2021-11-09T20:37:56Z,MERGED,True,29,9,3,https://github.com/exescript,Fix fread() error handling,1,[],https://github.com/tklengyel/drakvuf/pull/1334,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1334#issuecomment-963980958,"There are places in libinjector and hidsim plugins when it would be good practice to check if fread made the deal successfully.
It accually can be useful on file read error on injection",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1334,2021-11-09T09:45:09Z,2021-11-09T20:37:56Z,2021-11-09T20:37:56Z,MERGED,True,29,9,3,https://github.com/exescript,Fix fread() error handling,1,[],https://github.com/tklengyel/drakvuf/pull/1334,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1334#issuecomment-964047904,"There are places in libinjector and hidsim plugins when it would be good practice to check if fread made the deal successfully.
It accually can be useful on file read error on injection",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1334,2021-11-09T09:45:09Z,2021-11-09T20:37:56Z,2021-11-09T20:37:56Z,MERGED,True,29,9,3,https://github.com/exescript,Fix fread() error handling,1,[],https://github.com/tklengyel/drakvuf/pull/1334,https://github.com/exescript,4,https://github.com/tklengyel/drakvuf/pull/1334#issuecomment-964073230,"There are places in libinjector and hidsim plugins when it would be good practice to check if fread made the deal successfully.
It accually can be useful on file read error on injection",I think I finished,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1334,2021-11-09T09:45:09Z,2021-11-09T20:37:56Z,2021-11-09T20:37:56Z,MERGED,True,29,9,3,https://github.com/exescript,Fix fread() error handling,1,[],https://github.com/tklengyel/drakvuf/pull/1334,https://github.com/exescript,5,https://github.com/tklengyel/drakvuf/pull/1334#issuecomment-964162185,"There are places in libinjector and hidsim plugins when it would be good practice to check if fread made the deal successfully.
It accually can be useful on file read error on injection",Any other corrections?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1334,2021-11-09T09:45:09Z,2021-11-09T20:37:56Z,2021-11-09T20:37:56Z,MERGED,True,29,9,3,https://github.com/exescript,Fix fread() error handling,1,[],https://github.com/tklengyel/drakvuf/pull/1334,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1334#issuecomment-964381931,"There are places in libinjector and hidsim plugins when it would be good practice to check if fread made the deal successfully.
It accually can be useful on file read error on injection",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1335,2021-11-10T18:48:56Z,2021-11-11T16:41:04Z,2021-11-11T16:41:04Z,MERGED,True,46,146,3,https://github.com/archercreat,Dkommon race condition when loading a driver,2,[],https://github.com/tklengyel/drakvuf/pull/1335,https://github.com/archercreat,1,https://github.com/tklengyel/drakvuf/pull/1335,"Race condition happens when OS loads driver before drakvuf is initialized and before driver had been added to PsLoadedModuleList.
Pretty unlikely but happened to us today.","Race condition happens when OS loads driver before drakvuf is initialized and before driver had been added to PsLoadedModuleList.
Pretty unlikely but happened to us today.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1335,2021-11-10T18:48:56Z,2021-11-11T16:41:04Z,2021-11-11T16:41:04Z,MERGED,True,46,146,3,https://github.com/archercreat,Dkommon race condition when loading a driver,2,[],https://github.com/tklengyel/drakvuf/pull/1335,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1335#issuecomment-965638461,"Race condition happens when OS loads driver before drakvuf is initialized and before driver had been added to PsLoadedModuleList.
Pretty unlikely but happened to us today.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1335,2021-11-10T18:48:56Z,2021-11-11T16:41:04Z,2021-11-11T16:41:04Z,MERGED,True,46,146,3,https://github.com/archercreat,Dkommon race condition when loading a driver,2,[],https://github.com/tklengyel/drakvuf/pull/1335,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1335#issuecomment-965672712,"Race condition happens when OS loads driver before drakvuf is initialized and before driver had been added to PsLoadedModuleList.
Pretty unlikely but happened to us today.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1335,2021-11-10T18:48:56Z,2021-11-11T16:41:04Z,2021-11-11T16:41:04Z,MERGED,True,46,146,3,https://github.com/archercreat,Dkommon race condition when loading a driver,2,[],https://github.com/tklengyel/drakvuf/pull/1335,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1335#issuecomment-966379928,"Race condition happens when OS loads driver before drakvuf is initialized and before driver had been added to PsLoadedModuleList.
Pretty unlikely but happened to us today.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1336,2021-11-10T19:14:24Z,2021-11-11T15:06:33Z,2021-11-11T15:06:33Z,MERGED,True,314,106,4,https://github.com/manorit2001,win_injector: seperate shellexec method,2,[],https://github.com/tklengyel/drakvuf/pull/1336,https://github.com/manorit2001,1,https://github.com/tklengyel/drakvuf/pull/1336,Related #936,Related #936,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1336,2021-11-10T19:14:24Z,2021-11-11T15:06:33Z,2021-11-11T15:06:33Z,MERGED,True,314,106,4,https://github.com/manorit2001,win_injector: seperate shellexec method,2,[],https://github.com/tklengyel/drakvuf/pull/1336,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1336#issuecomment-965659033,Related #936,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1336,2021-11-10T19:14:24Z,2021-11-11T15:06:33Z,2021-11-11T15:06:33Z,MERGED,True,314,106,4,https://github.com/manorit2001,win_injector: seperate shellexec method,2,[],https://github.com/tklengyel/drakvuf/pull/1336,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1336#issuecomment-965674288,Related #936,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1337,2021-11-10T19:23:45Z,2021-11-11T15:06:44Z,2021-11-11T15:06:44Z,MERGED,True,44,43,2,https://github.com/archercreat,Ssdtmon invalid assumption that physical memory is contiguous,3,[],https://github.com/tklengyel/drakvuf/pull/1337,https://github.com/archercreat,1,https://github.com/tklengyel/drakvuf/pull/1337,"This bug is really old and basically assumes that virtual pages map to physical ones 1 : 1.
So if ssdt table is 2 pages long (only happens on ssdt shadow starting windows 10), the gfn of the second page is gfn of the first one + 1 which is incorrect.
The right way is to use vmi_translate_*v2p for both virtual pages.
CC: @disaykin","This bug is really old and basically assumes that virtual pages map to physical ones 1 : 1.
So if ssdt table is 2 pages long (only happens on ssdt shadow starting windows 10), the gfn of the second page is gfn of the first one + 1 which is incorrect.
The right way is to use vmi_translate_*v2p for both virtual pages.
CC: @disaykin",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1337,2021-11-10T19:23:45Z,2021-11-11T15:06:44Z,2021-11-11T15:06:44Z,MERGED,True,44,43,2,https://github.com/archercreat,Ssdtmon invalid assumption that physical memory is contiguous,3,[],https://github.com/tklengyel/drakvuf/pull/1337,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1337#issuecomment-965666402,"This bug is really old and basically assumes that virtual pages map to physical ones 1 : 1.
So if ssdt table is 2 pages long (only happens on ssdt shadow starting windows 10), the gfn of the second page is gfn of the first one + 1 which is incorrect.
The right way is to use vmi_translate_*v2p for both virtual pages.
CC: @disaykin",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1337,2021-11-10T19:23:45Z,2021-11-11T15:06:44Z,2021-11-11T15:06:44Z,MERGED,True,44,43,2,https://github.com/archercreat,Ssdtmon invalid assumption that physical memory is contiguous,3,[],https://github.com/tklengyel/drakvuf/pull/1337,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1337#issuecomment-965674101,"This bug is really old and basically assumes that virtual pages map to physical ones 1 : 1.
So if ssdt table is 2 pages long (only happens on ssdt shadow starting windows 10), the gfn of the second page is gfn of the first one + 1 which is incorrect.
The right way is to use vmi_translate_*v2p for both virtual pages.
CC: @disaykin",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1338,2021-11-11T14:47:24Z,2021-11-11T16:40:41Z,2021-11-11T22:08:25Z,MERGED,True,37,12,3,https://github.com/disaykin,socketmon: Support DnsQueryEx handling for WOW64 processes on Win8+,1,[],https://github.com/tklengyel/drakvuf/pull/1338,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1338,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1338,2021-11-11T14:47:24Z,2021-11-11T16:40:41Z,2021-11-11T22:08:25Z,MERGED,True,37,12,3,https://github.com/disaykin,socketmon: Support DnsQueryEx handling for WOW64 processes on Win8+,1,[],https://github.com/tklengyel/drakvuf/pull/1338,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1338#issuecomment-966361585,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1338,2021-11-11T14:47:24Z,2021-11-11T16:40:41Z,2021-11-11T22:08:25Z,MERGED,True,37,12,3,https://github.com/disaykin,socketmon: Support DnsQueryEx handling for WOW64 processes on Win8+,1,[],https://github.com/tklengyel/drakvuf/pull/1338,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1338#issuecomment-966376662,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1340,2021-11-11T16:28:44Z,2021-11-11T22:59:29Z,2021-12-15T09:27:59Z,MERGED,True,1,1,1,https://github.com/skvl,libinjector: fix empty process name. Fix #1339,1,[],https://github.com/tklengyel/drakvuf/pull/1340,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1340,From #1257,From #1257,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1340,2021-11-11T16:28:44Z,2021-11-11T22:59:29Z,2021-12-15T09:27:59Z,MERGED,True,1,1,1,https://github.com/skvl,libinjector: fix empty process name. Fix #1339,1,[],https://github.com/tklengyel/drakvuf/pull/1340,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1340#issuecomment-966442499,From #1257,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1340,2021-11-11T16:28:44Z,2021-11-11T22:59:29Z,2021-12-15T09:27:59Z,MERGED,True,1,1,1,https://github.com/skvl,libinjector: fix empty process name. Fix #1339,1,[],https://github.com/tklengyel/drakvuf/pull/1340,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1340#issuecomment-966605063,From #1257,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1341,2021-11-11T16:32:01Z,2021-11-11T20:30:40Z,2021-12-15T09:27:59Z,MERGED,True,1,1,1,https://github.com/skvl,drakvuf: fix stop plug-ins,1,[],https://github.com/tklengyel/drakvuf/pull/1341,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1341,"Logical error. If drakvuf would been stopped like drakvuf_interrupt(drakvuf, 1) then endless loop occur.","Logical error. If drakvuf would been stopped like drakvuf_interrupt(drakvuf, 1) then endless loop occur.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1341,2021-11-11T16:32:01Z,2021-11-11T20:30:40Z,2021-12-15T09:27:59Z,MERGED,True,1,1,1,https://github.com/skvl,drakvuf: fix stop plug-ins,1,[],https://github.com/tklengyel/drakvuf/pull/1341,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1341#issuecomment-966444811,"Logical error. If drakvuf would been stopped like drakvuf_interrupt(drakvuf, 1) then endless loop occur.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1341,2021-11-11T16:32:01Z,2021-11-11T20:30:40Z,2021-12-15T09:27:59Z,MERGED,True,1,1,1,https://github.com/skvl,drakvuf: fix stop plug-ins,1,[],https://github.com/tklengyel/drakvuf/pull/1341,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1341#issuecomment-966450584,"Logical error. If drakvuf would been stopped like drakvuf_interrupt(drakvuf, 1) then endless loop occur.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1342,2021-11-11T20:58:16Z,2021-11-12T00:08:07Z,2021-11-12T14:14:03Z,MERGED,True,1,6,1,https://github.com/disaykin,Fix PointerToPointerPrinter::print on x86,1,[],https://github.com/tklengyel/drakvuf/pull/1342,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1342,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1342,2021-11-11T20:58:16Z,2021-11-12T00:08:07Z,2021-11-12T14:14:03Z,MERGED,True,1,6,1,https://github.com/disaykin,Fix PointerToPointerPrinter::print on x86,1,[],https://github.com/tklengyel/drakvuf/pull/1342,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1342#issuecomment-966620394,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1342,2021-11-11T20:58:16Z,2021-11-12T00:08:07Z,2021-11-12T14:14:03Z,MERGED,True,1,6,1,https://github.com/disaykin,Fix PointerToPointerPrinter::print on x86,1,[],https://github.com/tklengyel/drakvuf/pull/1342,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1342#issuecomment-966684319,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1343,2021-11-11T22:17:58Z,2021-11-12T00:08:55Z,2021-11-12T14:14:04Z,MERGED,True,38,113,11,https://github.com/disaykin,Remove some code duplication,7,[],https://github.com/tklengyel/drakvuf/pull/1343,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1343,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1343,2021-11-11T22:17:58Z,2021-11-12T00:08:55Z,2021-11-12T14:14:04Z,MERGED,True,38,113,11,https://github.com/disaykin,Remove some code duplication,7,[],https://github.com/tklengyel/drakvuf/pull/1343,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1343#issuecomment-966665328,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1343,2021-11-11T22:17:58Z,2021-11-12T00:08:55Z,2021-11-12T14:14:04Z,MERGED,True,38,113,11,https://github.com/disaykin,Remove some code duplication,7,[],https://github.com/tklengyel/drakvuf/pull/1343,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1343#issuecomment-966684744,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1344,2021-11-12T08:06:21Z,2021-11-12T11:50:01Z,2021-12-15T09:27:58Z,MERGED,True,1,1,1,https://github.com/skvl,syscalls: fix NtDuplicateObject prototype,1,[],https://github.com/tklengyel/drakvuf/pull/1344,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1344,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1344,2021-11-12T08:06:21Z,2021-11-12T11:50:01Z,2021-12-15T09:27:58Z,MERGED,True,1,1,1,https://github.com/skvl,syscalls: fix NtDuplicateObject prototype,1,[],https://github.com/tklengyel/drakvuf/pull/1344,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1344#issuecomment-966902959,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1345,2021-11-12T08:28:29Z,2021-11-12T17:45:44Z,2021-12-15T09:28:00Z,MERGED,True,10,1,3,https://github.com/skvl,procdump2: forgotten part of #1322,1,[],https://github.com/tklengyel/drakvuf/pull/1345,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1345,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1345,2021-11-12T08:28:29Z,2021-11-12T17:45:44Z,2021-12-15T09:28:00Z,MERGED,True,10,1,3,https://github.com/skvl,procdump2: forgotten part of #1322,1,[],https://github.com/tklengyel/drakvuf/pull/1345,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1345#issuecomment-966915658,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1345,2021-11-12T08:28:29Z,2021-11-12T17:45:44Z,2021-12-15T09:28:00Z,MERGED,True,10,1,3,https://github.com/skvl,procdump2: forgotten part of #1322,1,[],https://github.com/tklengyel/drakvuf/pull/1345,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1345#issuecomment-967042163,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1345,2021-11-12T08:28:29Z,2021-11-12T17:45:44Z,2021-12-15T09:28:00Z,MERGED,True,10,1,3,https://github.com/skvl,procdump2: forgotten part of #1322,1,[],https://github.com/tklengyel/drakvuf/pull/1345,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1345#issuecomment-967110572,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1345,2021-11-12T08:28:29Z,2021-11-12T17:45:44Z,2021-12-15T09:28:00Z,MERGED,True,10,1,3,https://github.com/skvl,procdump2: forgotten part of #1322,1,[],https://github.com/tklengyel/drakvuf/pull/1345,https://github.com/skvl,5,https://github.com/tklengyel/drakvuf/pull/1345#issuecomment-967263434,,"@tklengyel , I've rebased the branch onto master",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1346,2021-11-12T16:53:25Z,2021-11-12T18:35:59Z,2021-11-12T19:50:23Z,MERGED,True,52,51,2,https://github.com/disaykin,ssdtmon: Generalize plugin to case of arbitrary shadow servicetable size,1,[],https://github.com/tklengyel/drakvuf/pull/1346,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1346,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1346,2021-11-12T16:53:25Z,2021-11-12T18:35:59Z,2021-11-12T19:50:23Z,MERGED,True,52,51,2,https://github.com/disaykin,ssdtmon: Generalize plugin to case of arbitrary shadow servicetable size,1,[],https://github.com/tklengyel/drakvuf/pull/1346,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1346#issuecomment-967264837,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1346,2021-11-12T16:53:25Z,2021-11-12T18:35:59Z,2021-11-12T19:50:23Z,MERGED,True,52,51,2,https://github.com/disaykin,ssdtmon: Generalize plugin to case of arbitrary shadow servicetable size,1,[],https://github.com/tklengyel/drakvuf/pull/1346,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1346#issuecomment-967300023,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1347,2021-11-14T08:02:47Z,2021-11-14T11:49:31Z,2021-11-14T11:49:31Z,MERGED,True,14,7,1,https://github.com/manorit2001,injector: update help,1,[],https://github.com/tklengyel/drakvuf/pull/1347,https://github.com/manorit2001,1,https://github.com/tklengyel/drakvuf/pull/1347,Update the help description text,Update the help description text,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1347,2021-11-14T08:02:47Z,2021-11-14T11:49:31Z,2021-11-14T11:49:31Z,MERGED,True,14,7,1,https://github.com/manorit2001,injector: update help,1,[],https://github.com/tklengyel/drakvuf/pull/1347,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1347#issuecomment-968242406,Update the help description text,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1348,2021-11-14T15:19:04Z,2021-11-14T17:55:56Z,2021-11-15T04:17:17Z,MERGED,True,2,1,2,https://github.com/manorit2001,ci: check doppelganging injection compilation,3,[],https://github.com/tklengyel/drakvuf/pull/1348,https://github.com/manorit2001,1,https://github.com/tklengyel/drakvuf/pull/1348,Check doppelganging compilations and fix help string,Check doppelganging compilations and fix help string,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1348,2021-11-14T15:19:04Z,2021-11-14T17:55:56Z,2021-11-15T04:17:17Z,MERGED,True,2,1,2,https://github.com/manorit2001,ci: check doppelganging injection compilation,3,[],https://github.com/tklengyel/drakvuf/pull/1348,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1348#issuecomment-968310552,Check doppelganging compilations and fix help string,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1349,2021-11-15T04:41:36Z,2021-11-15T18:17:11Z,2021-11-15T18:17:11Z,CLOSED,False,3,1,2,https://github.com/manorit2001,include config.h in libinjector,2,[],https://github.com/tklengyel/drakvuf/pull/1349,https://github.com/manorit2001,1,https://github.com/tklengyel/drakvuf/pull/1349,"I am having some troubles with these if defines locally, just testing the same hypothesis on the ci
FIXES:

Refactor in #754
Includes config.h in libinjector/private.h","I am having some troubles with these if defines locally, just testing the same hypothesis on the ci
FIXES:

Refactor in #754
Includes config.h in libinjector/private.h",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1349,2021-11-15T04:41:36Z,2021-11-15T18:17:11Z,2021-11-15T18:17:11Z,CLOSED,False,3,1,2,https://github.com/manorit2001,include config.h in libinjector,2,[],https://github.com/tklengyel/drakvuf/pull/1349,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1349#issuecomment-968533689,"I am having some troubles with these if defines locally, just testing the same hypothesis on the ci
FIXES:

Refactor in #754
Includes config.h in libinjector/private.h",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1349,2021-11-15T04:41:36Z,2021-11-15T18:17:11Z,2021-11-15T18:17:11Z,CLOSED,False,3,1,2,https://github.com/manorit2001,include config.h in libinjector,2,[],https://github.com/tklengyel/drakvuf/pull/1349,https://github.com/manorit2001,3,https://github.com/tklengyel/drakvuf/pull/1349#issuecomment-968538634,"I am having some troubles with these if defines locally, just testing the same hypothesis on the ci
FIXES:

Refactor in #754
Includes config.h in libinjector/private.h",@tklengyel why isn't ENABLE_DOPPELGANGING being passed onto the files in libinjector? The #define only seems to be available in src/injector.c but not in src/libinjector/injector.c or other such files,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1349,2021-11-15T04:41:36Z,2021-11-15T18:17:11Z,2021-11-15T18:17:11Z,CLOSED,False,3,1,2,https://github.com/manorit2001,include config.h in libinjector,2,[],https://github.com/tklengyel/drakvuf/pull/1349,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1349#issuecomment-968609368,"I am having some troubles with these if defines locally, just testing the same hypothesis on the ci
FIXES:

Refactor in #754
Includes config.h in libinjector/private.h",Probably just need to include config.h in libinjector's private.h,True,{'THUMBS_UP': ['https://github.com/manorit2001']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1349,2021-11-15T04:41:36Z,2021-11-15T18:17:11Z,2021-11-15T18:17:11Z,CLOSED,False,3,1,2,https://github.com/manorit2001,include config.h in libinjector,2,[],https://github.com/tklengyel/drakvuf/pull/1349,https://github.com/manorit2001,5,https://github.com/tklengyel/drakvuf/pull/1349#issuecomment-968653491,"I am having some troubles with these if defines locally, just testing the same hypothesis on the ci
FIXES:

Refactor in #754
Includes config.h in libinjector/private.h","Wow, this code seems to be broken from a really long time. The refactor for this function was done in b082a33
Is doppelganging still used? I also couldn't find any documentation on how to use that feature",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1349,2021-11-15T04:41:36Z,2021-11-15T18:17:11Z,2021-11-15T18:17:11Z,CLOSED,False,3,1,2,https://github.com/manorit2001,include config.h in libinjector,2,[],https://github.com/tklengyel/drakvuf/pull/1349,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1349#issuecomment-968955345,"I am having some troubles with these if defines locally, just testing the same hypothesis on the ci
FIXES:

Refactor in #754
Includes config.h in libinjector/private.h","The doppleganging code can be removed entirely now, its been superseded by the writefile method.",True,{'THUMBS_UP': ['https://github.com/manorit2001']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1350,2021-11-15T09:47:43Z,2021-11-16T12:35:45Z,2021-11-16T12:35:45Z,MERGED,True,7,7,3,https://github.com/exescript,libinjector: add x86 writefile support,1,[],https://github.com/tklengyel/drakvuf/pull/1350,https://github.com/exescript,1,https://github.com/tklengyel/drakvuf/pull/1350,"Add x86 writefile support, tested on win7x86","Add x86 writefile support, tested on win7x86",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1350,2021-11-15T09:47:43Z,2021-11-16T12:35:45Z,2021-11-16T12:35:45Z,MERGED,True,7,7,3,https://github.com/exescript,libinjector: add x86 writefile support,1,[],https://github.com/tklengyel/drakvuf/pull/1350,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1350#issuecomment-968713104,"Add x86 writefile support, tested on win7x86",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1350,2021-11-15T09:47:43Z,2021-11-16T12:35:45Z,2021-11-16T12:35:45Z,MERGED,True,7,7,3,https://github.com/exescript,libinjector: add x86 writefile support,1,[],https://github.com/tklengyel/drakvuf/pull/1350,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1350#issuecomment-968959079,"Add x86 writefile support, tested on win7x86",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1350,2021-11-15T09:47:43Z,2021-11-16T12:35:45Z,2021-11-16T12:35:45Z,MERGED,True,7,7,3,https://github.com/exescript,libinjector: add x86 writefile support,1,[],https://github.com/tklengyel/drakvuf/pull/1350,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1350#issuecomment-969199555,"Add x86 writefile support, tested on win7x86",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1351,2021-11-15T12:59:51Z,2021-11-15T14:19:13Z,2021-11-15T15:17:44Z,MERGED,True,8,0,4,https://github.com/disaykin,Fix memory leaks in some drakvuf plugins,1,[],https://github.com/tklengyel/drakvuf/pull/1351,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1351,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1351,2021-11-15T12:59:51Z,2021-11-15T14:19:13Z,2021-11-15T15:17:44Z,MERGED,True,8,0,4,https://github.com/disaykin,Fix memory leaks in some drakvuf plugins,1,[],https://github.com/tklengyel/drakvuf/pull/1351,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1351#issuecomment-968886073,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1352,2021-11-15T18:16:52Z,2021-11-25T18:12:23Z,2021-11-25T18:12:23Z,MERGED,True,498,236,9,https://github.com/manorit2001,win_injector: seperate shellcode method,1,[],https://github.com/tklengyel/drakvuf/pull/1352,https://github.com/manorit2001,1,https://github.com/tklengyel/drakvuf/pull/1352,"I had actually refactored doppelganging method also here, I'll open up a new PR to remove all the instances of it
Related #936","I had actually refactored doppelganging method also here, I'll open up a new PR to remove all the instances of it
Related #936",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1352,2021-11-15T18:16:52Z,2021-11-25T18:12:23Z,2021-11-25T18:12:23Z,MERGED,True,498,236,9,https://github.com/manorit2001,win_injector: seperate shellcode method,1,[],https://github.com/tklengyel/drakvuf/pull/1352,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1352#issuecomment-969186495,"I had actually refactored doppelganging method also here, I'll open up a new PR to remove all the instances of it
Related #936",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1352,2021-11-15T18:16:52Z,2021-11-25T18:12:23Z,2021-11-25T18:12:23Z,MERGED,True,498,236,9,https://github.com/manorit2001,win_injector: seperate shellcode method,1,[],https://github.com/tklengyel/drakvuf/pull/1352,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1352#issuecomment-970384896,"I had actually refactored doppelganging method also here, I'll open up a new PR to remove all the instances of it
Related #936",Please rebase on latest master,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1352,2021-11-15T18:16:52Z,2021-11-25T18:12:23Z,2021-11-25T18:12:23Z,MERGED,True,498,236,9,https://github.com/manorit2001,win_injector: seperate shellcode method,1,[],https://github.com/tklengyel/drakvuf/pull/1352,https://github.com/manorit2001,4,https://github.com/tklengyel/drakvuf/pull/1352#issuecomment-970454181,"I had actually refactored doppelganging method also here, I'll open up a new PR to remove all the instances of it
Related #936","Please rebase on latest master

Done",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1352,2021-11-15T18:16:52Z,2021-11-25T18:12:23Z,2021-11-25T18:12:23Z,MERGED,True,498,236,9,https://github.com/manorit2001,win_injector: seperate shellcode method,1,[],https://github.com/tklengyel/drakvuf/pull/1352,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1352#issuecomment-970685221,"I had actually refactored doppelganging method also here, I'll open up a new PR to remove all the instances of it
Related #936",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1353,2021-11-16T09:06:58Z,2021-11-25T18:12:39Z,2021-11-25T18:34:27Z,MERGED,True,136,83,46,https://github.com/disaykin,Rework plugin stopping functionality,1,[],https://github.com/tklengyel/drakvuf/pull/1353,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1353,"more clean debug logs
do not stop already stopped plugins
implement common logic in base class","more clean debug logs
do not stop already stopped plugins
implement common logic in base class",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1353,2021-11-16T09:06:58Z,2021-11-25T18:12:39Z,2021-11-25T18:34:27Z,MERGED,True,136,83,46,https://github.com/disaykin,Rework plugin stopping functionality,1,[],https://github.com/tklengyel/drakvuf/pull/1353,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1353#issuecomment-970065358,"more clean debug logs
do not stop already stopped plugins
implement common logic in base class",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1353,2021-11-16T09:06:58Z,2021-11-25T18:12:39Z,2021-11-25T18:34:27Z,MERGED,True,136,83,46,https://github.com/disaykin,Rework plugin stopping functionality,1,[],https://github.com/tklengyel/drakvuf/pull/1353,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1353#issuecomment-970230761,"more clean debug logs
do not stop already stopped plugins
implement common logic in base class",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1353,2021-11-16T09:06:58Z,2021-11-25T18:12:39Z,2021-11-25T18:34:27Z,MERGED,True,136,83,46,https://github.com/disaykin,Rework plugin stopping functionality,1,[],https://github.com/tklengyel/drakvuf/pull/1353,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1353#issuecomment-970359372,"more clean debug logs
do not stop already stopped plugins
implement common logic in base class",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1353,2021-11-16T09:06:58Z,2021-11-25T18:12:39Z,2021-11-25T18:34:27Z,MERGED,True,136,83,46,https://github.com/disaykin,Rework plugin stopping functionality,1,[],https://github.com/tklengyel/drakvuf/pull/1353,https://github.com/disaykin,5,https://github.com/tklengyel/drakvuf/pull/1353#issuecomment-971656280,"more clean debug logs
do not stop already stopped plugins
implement common logic in base class",@tklengyel Possibly I fix memory leak in dkommon plugin,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1354,2021-11-26T07:53:48Z,2021-11-28T00:10:10Z,2021-12-01T05:42:48Z,MERGED,True,9,469,13,https://github.com/manorit2001,win_injector: remove doppleganging,2,[],https://github.com/tklengyel/drakvuf/pull/1354,https://github.com/manorit2001,1,https://github.com/tklengyel/drakvuf/pull/1354,This PR removes doppleganging based on #1349 (comment),This PR removes doppleganging based on #1349 (comment),True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1354,2021-11-26T07:53:48Z,2021-11-28T00:10:10Z,2021-12-01T05:42:48Z,MERGED,True,9,469,13,https://github.com/manorit2001,win_injector: remove doppleganging,2,[],https://github.com/tklengyel/drakvuf/pull/1354,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1354#issuecomment-979761640,This PR removes doppleganging based on #1349 (comment),Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1354,2021-11-26T07:53:48Z,2021-11-28T00:10:10Z,2021-12-01T05:42:48Z,MERGED,True,9,469,13,https://github.com/manorit2001,win_injector: remove doppleganging,2,[],https://github.com/tklengyel/drakvuf/pull/1354,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1354#issuecomment-980006984,This PR removes doppleganging based on #1349 (comment),@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1354,2021-11-26T07:53:48Z,2021-11-28T00:10:10Z,2021-12-01T05:42:48Z,MERGED,True,9,469,13,https://github.com/manorit2001,win_injector: remove doppleganging,2,[],https://github.com/tklengyel/drakvuf/pull/1354,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1354#issuecomment-980012317,This PR removes doppleganging based on #1349 (comment),@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1354,2021-11-26T07:53:48Z,2021-11-28T00:10:10Z,2021-12-01T05:42:48Z,MERGED,True,9,469,13,https://github.com/manorit2001,win_injector: remove doppleganging,2,[],https://github.com/tklengyel/drakvuf/pull/1354,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1354#issuecomment-980805670,This PR removes doppleganging based on #1349 (comment),@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1354,2021-11-26T07:53:48Z,2021-11-28T00:10:10Z,2021-12-01T05:42:48Z,MERGED,True,9,469,13,https://github.com/manorit2001,win_injector: remove doppleganging,2,[],https://github.com/tklengyel/drakvuf/pull/1354,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1354#issuecomment-980810397,This PR removes doppleganging based on #1349 (comment),Thanks!,True,{'THUMBS_UP': ['https://github.com/manorit2001']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1355,2021-11-29T15:07:52Z,2021-12-01T14:48:30Z,2021-12-01T14:48:30Z,MERGED,True,0,25,2,https://github.com/archercreat,removed zero page write,1,[],https://github.com/tklengyel/drakvuf/pull/1355,https://github.com/archercreat,1,https://github.com/tklengyel/drakvuf/pull/1355,"The plugin tries to detect null pointer dereference which only happens with virtual memory, but hooks null physical page where IVT for bios is located.","The plugin tries to detect null pointer dereference which only happens with virtual memory, but hooks null physical page where IVT for bios is located.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1355,2021-11-29T15:07:52Z,2021-12-01T14:48:30Z,2021-12-01T14:48:30Z,MERGED,True,0,25,2,https://github.com/archercreat,removed zero page write,1,[],https://github.com/tklengyel/drakvuf/pull/1355,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1355#issuecomment-981722708,"The plugin tries to detect null pointer dereference which only happens with virtual memory, but hooks null physical page where IVT for bios is located.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1355,2021-11-29T15:07:52Z,2021-12-01T14:48:30Z,2021-12-01T14:48:30Z,MERGED,True,0,25,2,https://github.com/archercreat,removed zero page write,1,[],https://github.com/tklengyel/drakvuf/pull/1355,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1355#issuecomment-981759842,"The plugin tries to detect null pointer dereference which only happens with virtual memory, but hooks null physical page where IVT for bios is located.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1357,2021-12-01T12:29:28Z,2021-12-02T18:09:41Z,2021-12-27T09:52:22Z,MERGED,True,1,1,1,https://github.com/disaykin,socketmon: fix support for win10 prior 1803,1,[],https://github.com/tklengyel/drakvuf/pull/1357,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1357,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1357,2021-12-01T12:29:28Z,2021-12-02T18:09:41Z,2021-12-27T09:52:22Z,MERGED,True,1,1,1,https://github.com/disaykin,socketmon: fix support for win10 prior 1803,1,[],https://github.com/tklengyel/drakvuf/pull/1357,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1357#issuecomment-983594857,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1357,2021-12-01T12:29:28Z,2021-12-02T18:09:41Z,2021-12-27T09:52:22Z,MERGED,True,1,1,1,https://github.com/disaykin,socketmon: fix support for win10 prior 1803,1,[],https://github.com/tklengyel/drakvuf/pull/1357,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1357#issuecomment-983710731,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1358,2021-12-02T17:53:56Z,2021-12-03T19:36:13Z,2021-12-03T19:36:16Z,MERGED,True,5,5,5,https://github.com/tklengyel,Update to Xen 4.16,2,[],https://github.com/tklengyel/drakvuf/pull/1358,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1358,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1358,2021-12-02T17:53:56Z,2021-12-03T19:36:13Z,2021-12-03T19:36:16Z,MERGED,True,5,5,5,https://github.com/tklengyel,Update to Xen 4.16,2,[],https://github.com/tklengyel/drakvuf/pull/1358,https://github.com/manorit2001,2,https://github.com/tklengyel/drakvuf/pull/1358#issuecomment-985718822,,valgrind on the CI will also need some patches I think,True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1362,2021-12-15T09:30:53Z,2021-12-15T13:17:59Z,2022-02-18T08:20:13Z,MERGED,True,1,1,1,https://github.com/skvl,procdump: workaround for end-less plug-in stop,1,[],https://github.com/tklengyel/drakvuf/pull/1362,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1362,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1362,2021-12-15T09:30:53Z,2021-12-15T13:17:59Z,2022-02-18T08:20:13Z,MERGED,True,1,1,1,https://github.com/skvl,procdump: workaround for end-less plug-in stop,1,[],https://github.com/tklengyel/drakvuf/pull/1362,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1362#issuecomment-994571023,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1363,2021-12-15T09:31:03Z,2021-12-15T19:01:46Z,2022-02-18T08:19:51Z,MERGED,True,501,350,7,https://github.com/skvl,procdump2: big re-factoring,2,[],https://github.com/tklengyel/drakvuf/pull/1363,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1363,"Fix issue with not self-terminating processes
Add other injection path for KeDelayExecutionThread
Add arguments to simplify path check","Fix issue with not self-terminating processes
Add other injection path for KeDelayExecutionThread
Add arguments to simplify path check",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1363,2021-12-15T09:31:03Z,2021-12-15T19:01:46Z,2022-02-18T08:19:51Z,MERGED,True,501,350,7,https://github.com/skvl,procdump2: big re-factoring,2,[],https://github.com/tklengyel/drakvuf/pull/1363,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1363#issuecomment-994571156,"Fix issue with not self-terminating processes
Add other injection path for KeDelayExecutionThread
Add arguments to simplify path check",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1363,2021-12-15T09:31:03Z,2021-12-15T19:01:46Z,2022-02-18T08:19:51Z,MERGED,True,501,350,7,https://github.com/skvl,procdump2: big re-factoring,2,[],https://github.com/tklengyel/drakvuf/pull/1363,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1363#issuecomment-994783197,"Fix issue with not self-terminating processes
Add other injection path for KeDelayExecutionThread
Add arguments to simplify path check",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1364,2021-12-15T09:31:52Z,2021-12-17T17:31:26Z,2022-02-18T08:19:50Z,MERGED,True,11,2,1,https://github.com/skvl,filedelete: fix stop plug-in,1,[],https://github.com/tklengyel/drakvuf/pull/1364,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1364,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1364,2021-12-15T09:31:52Z,2021-12-17T17:31:26Z,2022-02-18T08:19:50Z,MERGED,True,11,2,1,https://github.com/skvl,filedelete: fix stop plug-in,1,[],https://github.com/tklengyel/drakvuf/pull/1364,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1364#issuecomment-994571873,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1364,2021-12-15T09:31:52Z,2021-12-17T17:31:26Z,2022-02-18T08:19:50Z,MERGED,True,11,2,1,https://github.com/skvl,filedelete: fix stop plug-in,1,[],https://github.com/tklengyel/drakvuf/pull/1364,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1364#issuecomment-994784156,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1365,2021-12-15T09:31:56Z,2021-12-15T19:02:40Z,2022-02-18T08:19:50Z,MERGED,True,411,0,5,https://github.com/skvl,libhook: add RAII hooks for CPUID,1,[],https://github.com/tklengyel/drakvuf/pull/1365,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1365,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1365,2021-12-15T09:31:56Z,2021-12-15T19:02:40Z,2022-02-18T08:19:50Z,MERGED,True,411,0,5,https://github.com/skvl,libhook: add RAII hooks for CPUID,1,[],https://github.com/tklengyel/drakvuf/pull/1365,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1365#issuecomment-994571939,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1365,2021-12-15T09:31:56Z,2021-12-15T19:02:40Z,2022-02-18T08:19:50Z,MERGED,True,411,0,5,https://github.com/skvl,libhook: add RAII hooks for CPUID,1,[],https://github.com/tklengyel/drakvuf/pull/1365,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1365#issuecomment-994784571,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1367,2021-12-21T22:12:45Z,2021-12-22T14:20:04Z,2021-12-22T14:20:07Z,MERGED,True,1,8,3,https://github.com/tklengyel,Minor fixes,3,[],https://github.com/tklengyel/drakvuf/pull/1367,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1367,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1368,2021-12-22T15:13:56Z,2021-12-22T15:44:14Z,2021-12-22T15:44:55Z,MERGED,True,3,1,1,https://github.com/manorit2001,disable shared library builds by default,1,[],https://github.com/tklengyel/drakvuf/pull/1368,https://github.com/manorit2001,1,https://github.com/tklengyel/drakvuf/pull/1368,"Since DRAKVUF only distributes binaries and its build utilizes only intermediate libraries to be linked with the binary targets, we can disable one of the build types to reduce the build time","Since DRAKVUF only distributes binaries and its build utilizes only intermediate libraries to be linked with the binary targets, we can disable one of the build types to reduce the build time",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1368,2021-12-22T15:13:56Z,2021-12-22T15:44:14Z,2021-12-22T15:44:55Z,MERGED,True,3,1,1,https://github.com/manorit2001,disable shared library builds by default,1,[],https://github.com/tklengyel/drakvuf/pull/1368,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1368#issuecomment-999649165,"Since DRAKVUF only distributes binaries and its build utilizes only intermediate libraries to be linked with the binary targets, we can disable one of the build types to reduce the build time",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1368,2021-12-22T15:13:56Z,2021-12-22T15:44:14Z,2021-12-22T15:44:55Z,MERGED,True,3,1,1,https://github.com/manorit2001,disable shared library builds by default,1,[],https://github.com/tklengyel/drakvuf/pull/1368,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1368#issuecomment-999654686,"Since DRAKVUF only distributes binaries and its build utilizes only intermediate libraries to be linked with the binary targets, we can disable one of the build types to reduce the build time",It's the other way around - the libraries are to be statically linked to the binaries.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1368,2021-12-22T15:13:56Z,2021-12-22T15:44:14Z,2021-12-22T15:44:55Z,MERGED,True,3,1,1,https://github.com/manorit2001,disable shared library builds by default,1,[],https://github.com/tklengyel/drakvuf/pull/1368,https://github.com/manorit2001,4,https://github.com/tklengyel/drakvuf/pull/1368#issuecomment-999664727,"Since DRAKVUF only distributes binaries and its build utilizes only intermediate libraries to be linked with the binary targets, we can disable one of the build types to reduce the build time","It's the other way around - the libraries are to be statically linked to the binaries.

Oh okay, will disable shared libraries then. It's weird that this compilation worked fine for me locally",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1368,2021-12-22T15:13:56Z,2021-12-22T15:44:14Z,2021-12-22T15:44:55Z,MERGED,True,3,1,1,https://github.com/manorit2001,disable shared library builds by default,1,[],https://github.com/tklengyel/drakvuf/pull/1368,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1368#issuecomment-999670454,"Since DRAKVUF only distributes binaries and its build utilizes only intermediate libraries to be linked with the binary targets, we can disable one of the build types to reduce the build time","Actually, adding disable-shared seems to cause issues but we don't need it anyway because we don't build shared version of the intermediate libraries, only the .a is generated when creating them with libtool.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1368,2021-12-22T15:13:56Z,2021-12-22T15:44:14Z,2021-12-22T15:44:55Z,MERGED,True,3,1,1,https://github.com/manorit2001,disable shared library builds by default,1,[],https://github.com/tklengyel/drakvuf/pull/1368,https://github.com/manorit2001,6,https://github.com/tklengyel/drakvuf/pull/1368#issuecomment-999674697,"Since DRAKVUF only distributes binaries and its build utilizes only intermediate libraries to be linked with the binary targets, we can disable one of the build types to reduce the build time","Actually, adding disable-shared seems to cause issues but we don't need it anyway because we don't build shared version of the intermediate libraries, only the .a is generated when creating them with libtool.

I had actually seen the plugin files being compiled twice without this change. Also, with the change, I noticed my build time reduced to almost half of the previous one. So am guessing that libtool is making both of the files during compile time but for linking, it just uses the .a file.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1368,2021-12-22T15:13:56Z,2021-12-22T15:44:14Z,2021-12-22T15:44:55Z,MERGED,True,3,1,1,https://github.com/manorit2001,disable shared library builds by default,1,[],https://github.com/tklengyel/drakvuf/pull/1368,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/1368#issuecomment-999674869,"Since DRAKVUF only distributes binaries and its build utilizes only intermediate libraries to be linked with the binary targets, we can disable one of the build types to reduce the build time","OK, so while it wasn't generating any .so objects, it did generate a bunch of .o which are not in fact needed, so this will speed things up a bit.",True,{'THUMBS_UP': ['https://github.com/manorit2001']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1369,2021-12-23T14:35:50Z,2021-12-24T02:07:52Z,2021-12-27T09:52:22Z,MERGED,True,73,70,10,https://github.com/disaykin,Fix problems found by Svace static analyzer,1,[],https://github.com/tklengyel/drakvuf/pull/1369,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1369,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1369,2021-12-23T14:35:50Z,2021-12-24T02:07:52Z,2021-12-27T09:52:22Z,MERGED,True,73,70,10,https://github.com/disaykin,Fix problems found by Svace static analyzer,1,[],https://github.com/tklengyel/drakvuf/pull/1369,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1369#issuecomment-1000345619,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1369,2021-12-23T14:35:50Z,2021-12-24T02:07:52Z,2021-12-27T09:52:22Z,MERGED,True,73,70,10,https://github.com/disaykin,Fix problems found by Svace static analyzer,1,[],https://github.com/tklengyel/drakvuf/pull/1369,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1369#issuecomment-1000354520,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1369,2021-12-23T14:35:50Z,2021-12-24T02:07:52Z,2021-12-27T09:52:22Z,MERGED,True,73,70,10,https://github.com/disaykin,Fix problems found by Svace static analyzer,1,[],https://github.com/tklengyel/drakvuf/pull/1369,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1369#issuecomment-1000587799,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1370,2021-12-24T13:13:14Z,2021-12-25T14:26:40Z,2021-12-26T14:18:31Z,MERGED,True,156,131,6,https://github.com/manorit2001,win_injector: seperate terminate method,1,[],https://github.com/tklengyel/drakvuf/pull/1370,https://github.com/manorit2001,1,https://github.com/tklengyel/drakvuf/pull/1370,Closes #936,Closes #936,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1370,2021-12-24T13:13:14Z,2021-12-25T14:26:40Z,2021-12-26T14:18:31Z,MERGED,True,156,131,6,https://github.com/manorit2001,win_injector: seperate terminate method,1,[],https://github.com/tklengyel/drakvuf/pull/1370,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1370#issuecomment-1000834950,Closes #936,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1370,2021-12-24T13:13:14Z,2021-12-25T14:26:40Z,2021-12-26T14:18:31Z,MERGED,True,156,131,6,https://github.com/manorit2001,win_injector: seperate terminate method,1,[],https://github.com/tklengyel/drakvuf/pull/1370,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1370#issuecomment-1000840227,Closes #936,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1370,2021-12-24T13:13:14Z,2021-12-25T14:26:40Z,2021-12-26T14:18:31Z,MERGED,True,156,131,6,https://github.com/manorit2001,win_injector: seperate terminate method,1,[],https://github.com/tklengyel/drakvuf/pull/1370,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1370#issuecomment-1000954837,Closes #936,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1372,2021-12-27T09:52:55Z,2021-12-27T16:44:08Z,2021-12-28T07:33:04Z,MERGED,True,98,60,27,https://github.com/disaykin,Fix yet another Svace static analyzer warnings,1,[],https://github.com/tklengyel/drakvuf/pull/1372,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1372,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1372,2021-12-27T09:52:55Z,2021-12-27T16:44:08Z,2021-12-28T07:33:04Z,MERGED,True,98,60,27,https://github.com/disaykin,Fix yet another Svace static analyzer warnings,1,[],https://github.com/tklengyel/drakvuf/pull/1372,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/1372#issuecomment-1001542836,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1372,2021-12-27T09:52:55Z,2021-12-27T16:44:08Z,2021-12-28T07:33:04Z,MERGED,True,98,60,27,https://github.com/disaykin,Fix yet another Svace static analyzer warnings,1,[],https://github.com/tklengyel/drakvuf/pull/1372,https://github.com/disaykin,3,https://github.com/tklengyel/drakvuf/pull/1372#issuecomment-1001590812,,"Fetching submodules
  /usr/bin/git submodule sync --recursive
  /usr/bin/git -c protocol.version=2 submodule update --init --force --depth=1 --recursive
  Submodule 'dwarf2json' (https://github.com/tklengyel/dwarf2json) registered for path 'dwarf2json'
  Submodule 'libvmi' (https://github.com/tklengyel/libvmi) registered for path 'libvmi'
  Submodule 'volatility3' (https://github.com/tklengyel/volatility3) registered for path 'volatility3'
  Submodule 'xen' (https://github.com/xen-project/xen) registered for path 'xen'
  Cloning into '/home/runner/work/drakvuf/drakvuf/dwarf2json'...
  Cloning into '/home/runner/work/drakvuf/drakvuf/libvmi'...
  Error: error: RPC failed; curl 56 GnuTLS recv error (-54): Error in the pull function.
  Error: error: 5462 bytes of body are still expected
  fetch-pack: unexpected disconnect while reading sideband packet
  Error: fatal: early EOF
  Error: fatal: fetch-pack: invalid index-pack output
  Error: fatal: clone of 'https://github.com/tklengyel/libvmi' into submodule path '/home/runner/work/drakvuf/drakvuf/libvmi' failed
  Failed to clone 'libvmi'. Retry scheduled
  Cloning into '/home/runner/work/drakvuf/drakvuf/volatility3'...
  Cloning into '/home/runner/work/drakvuf/drakvuf/xen'...
  Error: fatal: unable to access 'https://github.com/xen-project/xen/': gnutls_handshake() failed: Error in the pull function.
  Error: fatal: clone of 'https://github.com/xen-project/xen' into submodule path '/home/runner/work/drakvuf/drakvuf/xen' failed
  Failed to clone 'xen'. Retry scheduled
  Cloning into '/home/runner/work/drakvuf/drakvuf/libvmi'...
  Error: error: RPC failed; curl 56 GnuTLS recv error (-54): Error in the pull function.
  Error: fatal: expected flush after ref listing
  Error: fatal: clone of 'https://github.com/tklengyel/libvmi' into submodule path '/home/runner/work/drakvuf/drakvuf/libvmi' failed
  Failed to clone 'libvmi' a second time, aborting
  Error: The process '/usr/bin/git' failed with exit code 1",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1372,2021-12-27T09:52:55Z,2021-12-27T16:44:08Z,2021-12-28T07:33:04Z,MERGED,True,98,60,27,https://github.com/disaykin,Fix yet another Svace static analyzer warnings,1,[],https://github.com/tklengyel/drakvuf/pull/1372,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1372#issuecomment-1001623377,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1372,2021-12-27T09:52:55Z,2021-12-27T16:44:08Z,2021-12-28T07:33:04Z,MERGED,True,98,60,27,https://github.com/disaykin,Fix yet another Svace static analyzer warnings,1,[],https://github.com/tklengyel/drakvuf/pull/1372,https://github.com/drakvuf-jenkins,5,https://github.com/tklengyel/drakvuf/pull/1372#issuecomment-1001623392,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1373,2021-12-30T16:23:15Z,2022-02-25T11:48:09Z,2022-02-25T11:48:09Z,MERGED,True,32,13,12,https://github.com/skvl,libdrakvuf: optimize get windows process data,2,[],https://github.com/tklengyel/drakvuf/pull/1373,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1373,"With the optimizations provided:

The whole EPROCESS structure is read at once and then parsed for PID, PPID, process name and image file name address.
The UserID filed is made optional.

The optimization allows to avoid multiple vmi_read's.
It have been tested that marker event occur faster (about 15%) with this optimizations.","With the optimizations provided:

The whole EPROCESS structure is read at once and then parsed for PID, PPID, process name and image file name address.
The UserID filed is made optional.

The optimization allows to avoid multiple vmi_read's.
It have been tested that marker event occur faster (about 15%) with this optimizations.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1373,2021-12-30T16:23:15Z,2022-02-25T11:48:09Z,2022-02-25T11:48:09Z,MERGED,True,32,13,12,https://github.com/skvl,libdrakvuf: optimize get windows process data,2,[],https://github.com/tklengyel/drakvuf/pull/1373,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/1373#issuecomment-1003110623,"With the optimizations provided:

The whole EPROCESS structure is read at once and then parsed for PID, PPID, process name and image file name address.
The UserID filed is made optional.

The optimization allows to avoid multiple vmi_read's.
It have been tested that marker event occur faster (about 15%) with this optimizations.",Could you provide a description of the optimization?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1373,2021-12-30T16:23:15Z,2022-02-25T11:48:09Z,2022-02-25T11:48:09Z,MERGED,True,32,13,12,https://github.com/skvl,libdrakvuf: optimize get windows process data,2,[],https://github.com/tklengyel/drakvuf/pull/1373,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/1373#issuecomment-1013206875,"With the optimizations provided:

The whole EPROCESS structure is read at once and then parsed for PID, PPID, process name and image file name address.
The UserID filed is made optional.

The optimization allows to avoid multiple vmi_read's.
It have been tested that marker event occur faster (about 15%) with this optimizations.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1373,2021-12-30T16:23:15Z,2022-02-25T11:48:09Z,2022-02-25T11:48:09Z,MERGED,True,32,13,12,https://github.com/skvl,libdrakvuf: optimize get windows process data,2,[],https://github.com/tklengyel/drakvuf/pull/1373,https://github.com/skvl,4,https://github.com/tklengyel/drakvuf/pull/1373#issuecomment-1013207370,"With the optimizations provided:

The whole EPROCESS structure is read at once and then parsed for PID, PPID, process name and image file name address.
The UserID filed is made optional.

The optimization allows to avoid multiple vmi_read's.
It have been tested that marker event occur faster (about 15%) with this optimizations.","Could you provide a description of the optimization?

@tklengyel , I'm sorry to be late.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1373,2021-12-30T16:23:15Z,2022-02-25T11:48:09Z,2022-02-25T11:48:09Z,MERGED,True,32,13,12,https://github.com/skvl,libdrakvuf: optimize get windows process data,2,[],https://github.com/tklengyel/drakvuf/pull/1373,https://github.com/skvl,5,https://github.com/tklengyel/drakvuf/pull/1373#issuecomment-1014350858,"With the optimizations provided:

The whole EPROCESS structure is read at once and then parsed for PID, PPID, process name and image file name address.
The UserID filed is made optional.

The optimization allows to avoid multiple vmi_read's.
It have been tested that marker event occur faster (about 15%) with this optimizations.","@tklengyel , I have re-based the branch and fixed minor issues.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1373,2021-12-30T16:23:15Z,2022-02-25T11:48:09Z,2022-02-25T11:48:09Z,MERGED,True,32,13,12,https://github.com/skvl,libdrakvuf: optimize get windows process data,2,[],https://github.com/tklengyel/drakvuf/pull/1373,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1373#issuecomment-1014560204,"With the optimizations provided:

The whole EPROCESS structure is read at once and then parsed for PID, PPID, process name and image file name address.
The UserID filed is made optional.

The optimization allows to avoid multiple vmi_read's.
It have been tested that marker event occur faster (about 15%) with this optimizations.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1373,2021-12-30T16:23:15Z,2022-02-25T11:48:09Z,2022-02-25T11:48:09Z,MERGED,True,32,13,12,https://github.com/skvl,libdrakvuf: optimize get windows process data,2,[],https://github.com/tklengyel/drakvuf/pull/1373,https://github.com/skvl,7,https://github.com/tklengyel/drakvuf/pull/1373#issuecomment-1014650988,"With the optimizations provided:

The whole EPROCESS structure is read at once and then parsed for PID, PPID, process name and image file name address.
The UserID filed is made optional.

The optimization allows to avoid multiple vmi_read's.
It have been tested that marker event occur faster (about 15%) with this optimizations.","@tklengyel , Jenkins had failed on ""xtf.c"". For some reason this file is not covered with other checks.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1373,2021-12-30T16:23:15Z,2022-02-25T11:48:09Z,2022-02-25T11:48:09Z,MERGED,True,32,13,12,https://github.com/skvl,libdrakvuf: optimize get windows process data,2,[],https://github.com/tklengyel/drakvuf/pull/1373,https://github.com/skvl,8,https://github.com/tklengyel/drakvuf/pull/1373#issuecomment-1014742492,"With the optimizations provided:

The whole EPROCESS structure is read at once and then parsed for PID, PPID, process name and image file name address.
The UserID filed is made optional.

The optimization allows to avoid multiple vmi_read's.
It have been tested that marker event occur faster (about 15%) with this optimizations.","@tklengyel , is test for ""windows10-2004-jenkins"" stable? Does it failed because of my code? Or because of some sort of instability?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1373,2021-12-30T16:23:15Z,2022-02-25T11:48:09Z,2022-02-25T11:48:09Z,MERGED,True,32,13,12,https://github.com/skvl,libdrakvuf: optimize get windows process data,2,[],https://github.com/tklengyel/drakvuf/pull/1373,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/1373#issuecomment-1014777352,"With the optimizations provided:

The whole EPROCESS structure is read at once and then parsed for PID, PPID, process name and image file name address.
The UserID filed is made optional.

The optimization allows to avoid multiple vmi_read's.
It have been tested that marker event occur faster (about 15%) with this optimizations.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1373,2021-12-30T16:23:15Z,2022-02-25T11:48:09Z,2022-02-25T11:48:09Z,MERGED,True,32,13,12,https://github.com/skvl,libdrakvuf: optimize get windows process data,2,[],https://github.com/tklengyel/drakvuf/pull/1373,https://github.com/manorit2001,10,https://github.com/tklengyel/drakvuf/pull/1373#issuecomment-1014777754,"With the optimizations provided:

The whole EPROCESS structure is read at once and then parsed for PID, PPID, process name and image file name address.
The UserID filed is made optional.

The optimization allows to avoid multiple vmi_read's.
It have been tested that marker event occur faster (about 15%) with this optimizations.","@tklengyel , is test for ""windows10-2004-jenkins"" stable? Does it failed because of my code? Or because of some sort of instability?

It is unstable, some racy bug probably",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1373,2021-12-30T16:23:15Z,2022-02-25T11:48:09Z,2022-02-25T11:48:09Z,MERGED,True,32,13,12,https://github.com/skvl,libdrakvuf: optimize get windows process data,2,[],https://github.com/tklengyel/drakvuf/pull/1373,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/1373#issuecomment-1014778273,"With the optimizations provided:

The whole EPROCESS structure is read at once and then parsed for PID, PPID, process name and image file name address.
The UserID filed is made optional.

The optimization allows to avoid multiple vmi_read's.
It have been tested that marker event occur faster (about 15%) with this optimizations.","FYI you are adding a gmon.out file, should remove it from the PR",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1373,2021-12-30T16:23:15Z,2022-02-25T11:48:09Z,2022-02-25T11:48:09Z,MERGED,True,32,13,12,https://github.com/skvl,libdrakvuf: optimize get windows process data,2,[],https://github.com/tklengyel/drakvuf/pull/1373,https://github.com/skvl,12,https://github.com/tklengyel/drakvuf/pull/1373#issuecomment-1015237025,"With the optimizations provided:

The whole EPROCESS structure is read at once and then parsed for PID, PPID, process name and image file name address.
The UserID filed is made optional.

The optimization allows to avoid multiple vmi_read's.
It have been tested that marker event occur faster (about 15%) with this optimizations.","FYI you are adding a gmon.out file, should remove it from the PR

Thanks! I didn't noticed. Removed.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1373,2021-12-30T16:23:15Z,2022-02-25T11:48:09Z,2022-02-25T11:48:09Z,MERGED,True,32,13,12,https://github.com/skvl,libdrakvuf: optimize get windows process data,2,[],https://github.com/tklengyel/drakvuf/pull/1373,https://github.com/skvl,13,https://github.com/tklengyel/drakvuf/pull/1373#issuecomment-1015238673,"With the optimizations provided:

The whole EPROCESS structure is read at once and then parsed for PID, PPID, process name and image file name address.
The UserID filed is made optional.

The optimization allows to avoid multiple vmi_read's.
It have been tested that marker event occur faster (about 15%) with this optimizations.","@tklengyel , had detected the errors that not relates to the PR.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1373,2021-12-30T16:23:15Z,2022-02-25T11:48:09Z,2022-02-25T11:48:09Z,MERGED,True,32,13,12,https://github.com/skvl,libdrakvuf: optimize get windows process data,2,[],https://github.com/tklengyel/drakvuf/pull/1373,https://github.com/tklengyel,14,https://github.com/tklengyel/drakvuf/pull/1373#issuecomment-1015375481,"With the optimizations provided:

The whole EPROCESS structure is read at once and then parsed for PID, PPID, process name and image file name address.
The UserID filed is made optional.

The optimization allows to avoid multiple vmi_read's.
It have been tested that marker event occur faster (about 15%) with this optimizations.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1373,2021-12-30T16:23:15Z,2022-02-25T11:48:09Z,2022-02-25T11:48:09Z,MERGED,True,32,13,12,https://github.com/skvl,libdrakvuf: optimize get windows process data,2,[],https://github.com/tklengyel/drakvuf/pull/1373,https://github.com/tklengyel,15,https://github.com/tklengyel/drakvuf/pull/1373#issuecomment-1015481564,"With the optimizations provided:

The whole EPROCESS structure is read at once and then parsed for PID, PPID, process name and image file name address.
The UserID filed is made optional.

The optimization allows to avoid multiple vmi_read's.
It have been tested that marker event occur faster (about 15%) with this optimizations.","Some optimization on eprocess handling would be fine but I don't get why cache the whole structure instead of just parsing the relevant bits of information out and caching those?
Also, why add libdrakvuf_get_userid? It seems to be just turned on in all initializations of libdrakvuf. So getting the userid could just be something that's done by default with no init option.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1373,2021-12-30T16:23:15Z,2022-02-25T11:48:09Z,2022-02-25T11:48:09Z,MERGED,True,32,13,12,https://github.com/skvl,libdrakvuf: optimize get windows process data,2,[],https://github.com/tklengyel/drakvuf/pull/1373,https://github.com/skvl,16,https://github.com/tklengyel/drakvuf/pull/1373#issuecomment-1016330169,"With the optimizations provided:

The whole EPROCESS structure is read at once and then parsed for PID, PPID, process name and image file name address.
The UserID filed is made optional.

The optimization allows to avoid multiple vmi_read's.
It have been tested that marker event occur faster (about 15%) with this optimizations.","Some optimization on eprocess handling would be fine but I don't get why cache the whole structure instead of just parsing the relevant bits of information out and caching those?

Sorry but i don't understand the sentence. What do you mean by ""parsing the relevant bits"" and ""caching thouse""?
The idea behind the PR is to make single ""big"" vmi_read instead of several smaller. I have noticed this approach is faster. And how we could caching this data? On every exit we have to read VMs memory to get current context.

Also, why add libdrakvuf_get_userid? It seems to be just turned on in all initializations of libdrakvuf. So getting the userid could just be something that's done by default with no init option.

This could be turned off with command line arguments in ""main.cpp"". As for me i use KV output format and this field is not printed at all. Thus i disable the user id on every drakvuf run.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1373,2021-12-30T16:23:15Z,2022-02-25T11:48:09Z,2022-02-25T11:48:09Z,MERGED,True,32,13,12,https://github.com/skvl,libdrakvuf: optimize get windows process data,2,[],https://github.com/tklengyel/drakvuf/pull/1373,https://github.com/tklengyel,17,https://github.com/tklengyel/drakvuf/pull/1373#issuecomment-1016395179,"With the optimizations provided:

The whole EPROCESS structure is read at once and then parsed for PID, PPID, process name and image file name address.
The UserID filed is made optional.

The optimization allows to avoid multiple vmi_read's.
It have been tested that marker event occur faster (about 15%) with this optimizations.","LibVMI already caches the entire page. I don't really see how caching the eprocess struct would lead to such improvement.
Are you sure your improvement is due to this extra caching which I don't like or because you just turn off parsing this bit of information from fhe struct?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1373,2021-12-30T16:23:15Z,2022-02-25T11:48:09Z,2022-02-25T11:48:09Z,MERGED,True,32,13,12,https://github.com/skvl,libdrakvuf: optimize get windows process data,2,[],https://github.com/tklengyel/drakvuf/pull/1373,https://github.com/skvl,18,https://github.com/tklengyel/drakvuf/pull/1373#issuecomment-1049963283,"With the optimizations provided:

The whole EPROCESS structure is read at once and then parsed for PID, PPID, process name and image file name address.
The UserID filed is made optional.

The optimization allows to avoid multiple vmi_read's.
It have been tested that marker event occur faster (about 15%) with this optimizations.","LibVMI already caches the entire page. I don't really see how caching the eprocess struct would lead to such improvement.
Are you sure your improvement is due to this extra caching which I don't like or because you just turn off parsing this bit of information from fhe struct?

I think You are right. I removed the EPROCESS caching and re-based the branch.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1373,2021-12-30T16:23:15Z,2022-02-25T11:48:09Z,2022-02-25T11:48:09Z,MERGED,True,32,13,12,https://github.com/skvl,libdrakvuf: optimize get windows process data,2,[],https://github.com/tklengyel/drakvuf/pull/1373,https://github.com/tklengyel,19,https://github.com/tklengyel/drakvuf/pull/1373#issuecomment-1050065532,"With the optimizations provided:

The whole EPROCESS structure is read at once and then parsed for PID, PPID, process name and image file name address.
The UserID filed is made optional.

The optimization allows to avoid multiple vmi_read's.
It have been tested that marker event occur faster (about 15%) with this optimizations.","Please wire the Linux bits into this as well, it has a corresponding call to linux_get_process_userid",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1373,2021-12-30T16:23:15Z,2022-02-25T11:48:09Z,2022-02-25T11:48:09Z,MERGED,True,32,13,12,https://github.com/skvl,libdrakvuf: optimize get windows process data,2,[],https://github.com/tklengyel/drakvuf/pull/1373,https://github.com/skvl,20,https://github.com/tklengyel/drakvuf/pull/1373#issuecomment-1050629083,"With the optimizations provided:

The whole EPROCESS structure is read at once and then parsed for PID, PPID, process name and image file name address.
The UserID filed is made optional.

The optimization allows to avoid multiple vmi_read's.
It have been tested that marker event occur faster (about 15%) with this optimizations.","linux_get_process_userid

Done",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1374,2022-01-01T05:48:29Z,2022-01-01T14:51:49Z,2022-01-02T05:39:07Z,MERGED,True,290,290,285,https://github.com/manorit2001,happy new year,1,[],https://github.com/tklengyel/drakvuf/pull/1374,https://github.com/manorit2001,1,https://github.com/tklengyel/drakvuf/pull/1374,"The command ran:
find . \( -type d -name .git -prune \) -o -type f -print0 | parallel -0 sed -i 's/2014-2021/2014-2022/g'
Just so Tamas doesn't have to see if all the files are updated or not :P
PS: Happy new year everyone!","The command ran:
find . \( -type d -name .git -prune \) -o -type f -print0 | parallel -0 sed -i 's/2014-2021/2014-2022/g'
Just so Tamas doesn't have to see if all the files are updated or not :P
PS: Happy new year everyone!",True,{'HOORAY': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1377,2022-01-12T07:02:21Z,2022-01-13T02:03:54Z,2022-01-17T13:00:40Z,MERGED,True,26,6,5,https://github.com/disaykin,procdump: fix codeql cpp-world-writable-file-creation warning,1,[],https://github.com/tklengyel/drakvuf/pull/1377,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1377,Fix CodeQL warning https://codeql.github.com/codeql-query-help/cpp/cpp-world-writable-file-creation/ in procdump plugin,Fix CodeQL warning https://codeql.github.com/codeql-query-help/cpp/cpp-world-writable-file-creation/ in procdump plugin,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1377,2022-01-12T07:02:21Z,2022-01-13T02:03:54Z,2022-01-17T13:00:40Z,MERGED,True,26,6,5,https://github.com/disaykin,procdump: fix codeql cpp-world-writable-file-creation warning,1,[],https://github.com/tklengyel/drakvuf/pull/1377,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/1377#issuecomment-1011510911,Fix CodeQL warning https://codeql.github.com/codeql-query-help/cpp/cpp-world-writable-file-creation/ in procdump plugin,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1377,2022-01-12T07:02:21Z,2022-01-13T02:03:54Z,2022-01-17T13:00:40Z,MERGED,True,26,6,5,https://github.com/disaykin,procdump: fix codeql cpp-world-writable-file-creation warning,1,[],https://github.com/tklengyel/drakvuf/pull/1377,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/1377#issuecomment-1011510936,Fix CodeQL warning https://codeql.github.com/codeql-query-help/cpp/cpp-world-writable-file-creation/ in procdump plugin,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1377,2022-01-12T07:02:21Z,2022-01-13T02:03:54Z,2022-01-17T13:00:40Z,MERGED,True,26,6,5,https://github.com/disaykin,procdump: fix codeql cpp-world-writable-file-creation warning,1,[],https://github.com/tklengyel/drakvuf/pull/1377,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1377#issuecomment-1011650148,Fix CodeQL warning https://codeql.github.com/codeql-query-help/cpp/cpp-world-writable-file-creation/ in procdump plugin,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1378,2022-01-12T07:41:35Z,2022-01-13T01:42:22Z,2022-01-17T13:00:18Z,MERGED,True,9,15,5,https://github.com/disaykin,exmon: use drakvuf_get_kernel_struct_members_array_rva function,1,[],https://github.com/tklengyel/drakvuf/pull/1378,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1378,exmon: use drakvuf_get_kernel_struct_members_array_rva function instead of manual iteration,exmon: use drakvuf_get_kernel_struct_members_array_rva function instead of manual iteration,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1378,2022-01-12T07:41:35Z,2022-01-13T01:42:22Z,2022-01-17T13:00:18Z,MERGED,True,9,15,5,https://github.com/disaykin,exmon: use drakvuf_get_kernel_struct_members_array_rva function,1,[],https://github.com/tklengyel/drakvuf/pull/1378,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/1378#issuecomment-1011511128,exmon: use drakvuf_get_kernel_struct_members_array_rva function instead of manual iteration,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1378,2022-01-12T07:41:35Z,2022-01-13T01:42:22Z,2022-01-17T13:00:18Z,MERGED,True,9,15,5,https://github.com/disaykin,exmon: use drakvuf_get_kernel_struct_members_array_rva function,1,[],https://github.com/tklengyel/drakvuf/pull/1378,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/1378#issuecomment-1011511150,exmon: use drakvuf_get_kernel_struct_members_array_rva function instead of manual iteration,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1379,2022-01-12T09:14:27Z,2022-01-13T01:42:35Z,2022-01-17T13:00:09Z,MERGED,True,20,14,1,https://github.com/disaykin,memdump: Support for x86 in dotnet_assembly_native_load_image_cb,1,[],https://github.com/tklengyel/drakvuf/pull/1379,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1379,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1379,2022-01-12T09:14:27Z,2022-01-13T01:42:35Z,2022-01-17T13:00:09Z,MERGED,True,20,14,1,https://github.com/disaykin,memdump: Support for x86 in dotnet_assembly_native_load_image_cb,1,[],https://github.com/tklengyel/drakvuf/pull/1379,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/1379#issuecomment-1011511313,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1379,2022-01-12T09:14:27Z,2022-01-13T01:42:35Z,2022-01-17T13:00:09Z,MERGED,True,20,14,1,https://github.com/disaykin,memdump: Support for x86 in dotnet_assembly_native_load_image_cb,1,[],https://github.com/tklengyel/drakvuf/pull/1379,https://github.com/drakvuf-jenkins,3,https://github.com/tklengyel/drakvuf/pull/1379#issuecomment-1011511333,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1380,2022-01-14T12:13:42Z,2022-01-16T12:52:22Z,2022-01-16T12:52:22Z,MERGED,True,785,38,10,https://github.com/archercreat,new plugin callbackmon,4,[],https://github.com/tklengyel/drakvuf/pull/1380,https://github.com/archercreat,1,https://github.com/tklengyel/drakvuf/pull/1380,"Hello!
This is the new plugin that aims to find installed/removed/hooked callbacks in kernel. We've found that some rootkits directly modify underlying data structures with callbacks bypassing api hooks.
I've also added more informative output compared to rootkitmon.
Module : module name that contains callback function
RVA : address within the module
ListName : callback type
Action : removed/added/replaced
CC: @disaykin","Hello!
This is the new plugin that aims to find installed/removed/hooked callbacks in kernel. We've found that some rootkits directly modify underlying data structures with callbacks bypassing api hooks.
I've also added more informative output compared to rootkitmon.
Module : module name that contains callback function
RVA : address within the module
ListName : callback type
Action : removed/added/replaced
CC: @disaykin",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1380,2022-01-14T12:13:42Z,2022-01-16T12:52:22Z,2022-01-16T12:52:22Z,MERGED,True,785,38,10,https://github.com/archercreat,new plugin callbackmon,4,[],https://github.com/tklengyel/drakvuf/pull/1380,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1380#issuecomment-1013067758,"Hello!
This is the new plugin that aims to find installed/removed/hooked callbacks in kernel. We've found that some rootkits directly modify underlying data structures with callbacks bypassing api hooks.
I've also added more informative output compared to rootkitmon.
Module : module name that contains callback function
RVA : address within the module
ListName : callback type
Action : removed/added/replaced
CC: @disaykin",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1380,2022-01-14T12:13:42Z,2022-01-16T12:52:22Z,2022-01-16T12:52:22Z,MERGED,True,785,38,10,https://github.com/archercreat,new plugin callbackmon,4,[],https://github.com/tklengyel/drakvuf/pull/1380,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1380#issuecomment-1013085650,"Hello!
This is the new plugin that aims to find installed/removed/hooked callbacks in kernel. We've found that some rootkits directly modify underlying data structures with callbacks bypassing api hooks.
I've also added more informative output compared to rootkitmon.
Module : module name that contains callback function
RVA : address within the module
ListName : callback type
Action : removed/added/replaced
CC: @disaykin",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1380,2022-01-14T12:13:42Z,2022-01-16T12:52:22Z,2022-01-16T12:52:22Z,MERGED,True,785,38,10,https://github.com/archercreat,new plugin callbackmon,4,[],https://github.com/tklengyel/drakvuf/pull/1380,https://github.com/manorit2001,4,https://github.com/tklengyel/drakvuf/pull/1380#issuecomment-1013220176,"Hello!
This is the new plugin that aims to find installed/removed/hooked callbacks in kernel. We've found that some rootkits directly modify underlying data structures with callbacks bypassing api hooks.
I've also added more informative output compared to rootkitmon.
Module : module name that contains callback function
RVA : address within the module
ListName : callback type
Action : removed/added/replaced
CC: @disaykin","Hi, could you also add a bit of documentation for this plugin? I think it'll really help the project a long way since the documentation part of the project isn't much focused on at this stage.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1380,2022-01-14T12:13:42Z,2022-01-16T12:52:22Z,2022-01-16T12:52:22Z,MERGED,True,785,38,10,https://github.com/archercreat,new plugin callbackmon,4,[],https://github.com/tklengyel/drakvuf/pull/1380,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1380#issuecomment-1013228270,"Hello!
This is the new plugin that aims to find installed/removed/hooked callbacks in kernel. We've found that some rootkits directly modify underlying data structures with callbacks bypassing api hooks.
I've also added more informative output compared to rootkitmon.
Module : module name that contains callback function
RVA : address within the module
ListName : callback type
Action : removed/added/replaced
CC: @disaykin","Agree with @manorit2001, if you could add a small README.md into the plugin folder describing briefly its intended use and the output it produces that would be great. Otherwise LGTM.",True,"{'THUMBS_UP': ['https://github.com/manorit2001', 'https://github.com/archercreat']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1382,2022-01-17T14:13:58Z,,2022-05-09T00:58:32Z,OPEN,False,29,26,4,https://github.com/disaykin,libusemode: Add support for x86 architecture,1,[],https://github.com/tklengyel/drakvuf/pull/1382,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1382,"I think this code is good enough to use.
We have been using it for a long time without any problems.","I think this code is good enough to use.
We have been using it for a long time without any problems.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1382,2022-01-17T14:13:58Z,,2022-05-09T00:58:32Z,OPEN,False,29,26,4,https://github.com/disaykin,libusemode: Add support for x86 architecture,1,[],https://github.com/tklengyel/drakvuf/pull/1382,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1382#issuecomment-1014589602,"I think this code is good enough to use.
We have been using it for a long time without any problems.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1382,2022-01-17T14:13:58Z,,2022-05-09T00:58:32Z,OPEN,False,29,26,4,https://github.com/disaykin,libusemode: Add support for x86 architecture,1,[],https://github.com/tklengyel/drakvuf/pull/1382,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1382#issuecomment-1015375989,"I think this code is good enough to use.
We have been using it for a long time without any problems.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1382,2022-01-17T14:13:58Z,,2022-05-09T00:58:32Z,OPEN,False,29,26,4,https://github.com/disaykin,libusemode: Add support for x86 architecture,1,[],https://github.com/tklengyel/drakvuf/pull/1382,https://github.com/disaykin,4,https://github.com/tklengyel/drakvuf/pull/1382#issuecomment-1015445581,"I think this code is good enough to use.
We have been using it for a long time without any problems.","CI say ""Plugin memdump startup failed!"" without any explanations...",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1382,2022-01-17T14:13:58Z,,2022-05-09T00:58:32Z,OPEN,False,29,26,4,https://github.com/disaykin,libusemode: Add support for x86 architecture,1,[],https://github.com/tklengyel/drakvuf/pull/1382,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1382#issuecomment-1015470898,"I think this code is good enough to use.
We have been using it for a long time without any problems.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1382,2022-01-17T14:13:58Z,,2022-05-09T00:58:32Z,OPEN,False,29,26,4,https://github.com/disaykin,libusemode: Add support for x86 architecture,1,[],https://github.com/tklengyel/drakvuf/pull/1382,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1382#issuecomment-1015677048,"I think this code is good enough to use.
We have been using it for a long time without any problems.","Well, it fails deterministically, so you should check what in this PR is changed that results in that plugin complaining.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1382,2022-01-17T14:13:58Z,,2022-05-09T00:58:32Z,OPEN,False,29,26,4,https://github.com/disaykin,libusemode: Add support for x86 architecture,1,[],https://github.com/tklengyel/drakvuf/pull/1382,https://github.com/disaykin,7,https://github.com/tklengyel/drakvuf/pull/1382#issuecomment-1015804502,"I think this code is good enough to use.
We have been using it for a long time without any problems.","@tklengyel I can't reproduce this failure. Can you run this test in verbose mode?
Maybe the debug logs will help me understand what's going on.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1382,2022-01-17T14:13:58Z,,2022-05-09T00:58:32Z,OPEN,False,29,26,4,https://github.com/disaykin,libusemode: Add support for x86 architecture,1,[],https://github.com/tklengyel/drakvuf/pull/1382,https://github.com/manorit2001,8,https://github.com/tklengyel/drakvuf/pull/1382#issuecomment-1019185820,"I think this code is good enough to use.
We have been using it for a long time without any problems.","Last time also I think this PR was stuck in this stage only #1094, adding debug logs might help @tklengyel",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1383,2022-01-17T14:59:49Z,2022-01-19T19:07:16Z,2022-01-19T20:37:43Z,MERGED,True,75,69,18,https://github.com/disaykin,Make drakvuf_read_unicode interface similar to other drakvuf-* functions,1,[],https://github.com/tklengyel/drakvuf/pull/1383,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1383,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1383,2022-01-17T14:59:49Z,2022-01-19T19:07:16Z,2022-01-19T20:37:43Z,MERGED,True,75,69,18,https://github.com/disaykin,Make drakvuf_read_unicode interface similar to other drakvuf-* functions,1,[],https://github.com/tklengyel/drakvuf/pull/1383,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1383#issuecomment-1014631149,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1383,2022-01-17T14:59:49Z,2022-01-19T19:07:16Z,2022-01-19T20:37:43Z,MERGED,True,75,69,18,https://github.com/disaykin,Make drakvuf_read_unicode interface similar to other drakvuf-* functions,1,[],https://github.com/tklengyel/drakvuf/pull/1383,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1383#issuecomment-1015376817,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1384,2022-01-17T15:02:07Z,2022-01-18T18:07:23Z,2022-01-18T18:39:34Z,MERGED,True,97,122,12,https://github.com/disaykin,Extract drakvuf_get_filename_from_object_attributes method,1,[],https://github.com/tklengyel/drakvuf/pull/1384,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1384,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1384,2022-01-17T15:02:07Z,2022-01-18T18:07:23Z,2022-01-18T18:39:34Z,MERGED,True,97,122,12,https://github.com/disaykin,Extract drakvuf_get_filename_from_object_attributes method,1,[],https://github.com/tklengyel/drakvuf/pull/1384,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1384#issuecomment-1014633299,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1384,2022-01-17T15:02:07Z,2022-01-18T18:07:23Z,2022-01-18T18:39:34Z,MERGED,True,97,122,12,https://github.com/disaykin,Extract drakvuf_get_filename_from_object_attributes method,1,[],https://github.com/tklengyel/drakvuf/pull/1384,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1384#issuecomment-1015377147,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1384,2022-01-17T15:02:07Z,2022-01-18T18:07:23Z,2022-01-18T18:39:34Z,MERGED,True,97,122,12,https://github.com/disaykin,Extract drakvuf_get_filename_from_object_attributes method,1,[],https://github.com/tklengyel/drakvuf/pull/1384,https://github.com/disaykin,4,https://github.com/tklengyel/drakvuf/pull/1384#issuecomment-1015448271,,"False negative?
CI fails on win10 with
""autoruns process found: 0""",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1384,2022-01-17T15:02:07Z,2022-01-18T18:07:23Z,2022-01-18T18:39:34Z,MERGED,True,97,122,12,https://github.com/disaykin,Extract drakvuf_get_filename_from_object_attributes method,1,[],https://github.com/tklengyel/drakvuf/pull/1384,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1384#issuecomment-1015469857,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1385,2022-01-18T13:32:04Z,2022-01-18T14:33:31Z,2022-01-18T14:33:31Z,MERGED,True,1,1,1,https://github.com/archercreat,Typo in callbackmon,1,[],https://github.com/tklengyel/drakvuf/pull/1385,https://github.com/archercreat,1,https://github.com/tklengyel/drakvuf/pull/1385,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1385,2022-01-18T13:32:04Z,2022-01-18T14:33:31Z,2022-01-18T14:33:31Z,MERGED,True,1,1,1,https://github.com/archercreat,Typo in callbackmon,1,[],https://github.com/tklengyel/drakvuf/pull/1385,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1385#issuecomment-1015415675,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1386,2022-01-18T18:18:16Z,2022-01-18T18:28:45Z,2022-01-18T18:28:47Z,MERGED,True,5,5,2,https://github.com/tklengyel,Switch to GRecMutex for vmi_lock,1,[],https://github.com/tklengyel/drakvuf/pull/1386,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1386,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1387,2022-01-18T18:58:55Z,2022-01-19T19:07:04Z,2022-01-19T20:37:25Z,MERGED,True,171,133,2,https://github.com/disaykin,filetracer: Fix bug with double print on create_file,1,[],https://github.com/tklengyel/drakvuf/pull/1387,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1387,"The first printing was done implicitly inside the objattr_read call, the second time - explicitly in the create_file_ret_cb method","The first printing was done implicitly inside the objattr_read call, the second time - explicitly in the create_file_ret_cb method",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1387,2022-01-18T18:58:55Z,2022-01-19T19:07:04Z,2022-01-19T20:37:25Z,MERGED,True,171,133,2,https://github.com/disaykin,filetracer: Fix bug with double print on create_file,1,[],https://github.com/tklengyel/drakvuf/pull/1387,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1387#issuecomment-1015728820,"The first printing was done implicitly inside the objattr_read call, the second time - explicitly in the create_file_ret_cb method",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1387,2022-01-18T18:58:55Z,2022-01-19T19:07:04Z,2022-01-19T20:37:25Z,MERGED,True,171,133,2,https://github.com/disaykin,filetracer: Fix bug with double print on create_file,1,[],https://github.com/tklengyel/drakvuf/pull/1387,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1387#issuecomment-1015790266,"The first printing was done implicitly inside the objattr_read call, the second time - explicitly in the create_file_ret_cb method",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1387,2022-01-18T18:58:55Z,2022-01-19T19:07:04Z,2022-01-19T20:37:25Z,MERGED,True,171,133,2,https://github.com/disaykin,filetracer: Fix bug with double print on create_file,1,[],https://github.com/tklengyel/drakvuf/pull/1387,https://github.com/disaykin,4,https://github.com/tklengyel/drakvuf/pull/1387#issuecomment-1015807518,"The first printing was done implicitly inside the objattr_read call, the second time - explicitly in the create_file_ret_cb method",@tklengyel Check for excessive syscalls plugin overhead failed. I think this is false negative.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1387,2022-01-18T18:58:55Z,2022-01-19T19:07:04Z,2022-01-19T20:37:25Z,MERGED,True,171,133,2,https://github.com/disaykin,filetracer: Fix bug with double print on create_file,1,[],https://github.com/tklengyel/drakvuf/pull/1387,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1387#issuecomment-1015946531,"The first printing was done implicitly inside the objattr_read call, the second time - explicitly in the create_file_ret_cb method",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1388,2022-01-19T19:47:16Z,2022-01-20T16:11:55Z,2022-01-20T16:11:58Z,MERGED,True,630,168,5,https://github.com/tklengyel,Make libdrakvuf APIs and callbacks thread-safe,1,[],https://github.com/tklengyel/drakvuf/pull/1388,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1388,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1388,2022-01-19T19:47:16Z,2022-01-20T16:11:55Z,2022-01-20T16:11:58Z,MERGED,True,630,168,5,https://github.com/tklengyel,Make libdrakvuf APIs and callbacks thread-safe,1,[],https://github.com/tklengyel/drakvuf/pull/1388,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/1388#issuecomment-1017589950,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1389,2022-01-19T20:58:31Z,2022-01-20T17:10:15Z,2022-01-20T17:10:22Z,CLOSED,False,49,9,10,https://github.com/disaykin,Added the ability to explicitly specify the path to the libvmi config,1,[],https://github.com/tklengyel/drakvuf/pull/1389,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1389,"@tklengyel Pull up, please, new changes from libvmi/libvmi.","@tklengyel Pull up, please, new changes from libvmi/libvmi.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1389,2022-01-19T20:58:31Z,2022-01-20T17:10:15Z,2022-01-20T17:10:22Z,CLOSED,False,49,9,10,https://github.com/disaykin,Added the ability to explicitly specify the path to the libvmi config,1,[],https://github.com/tklengyel/drakvuf/pull/1389,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1389#issuecomment-1016862603,"@tklengyel Pull up, please, new changes from libvmi/libvmi.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1389,2022-01-19T20:58:31Z,2022-01-20T17:10:15Z,2022-01-20T17:10:22Z,CLOSED,False,49,9,10,https://github.com/disaykin,Added the ability to explicitly specify the path to the libvmi config,1,[],https://github.com/tklengyel/drakvuf/pull/1389,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1389#issuecomment-1017072907,"@tklengyel Pull up, please, new changes from libvmi/libvmi.",I'm curious as to what information you think the libvmi config file has that we don't already provide? AFAIK the only two pieces of info the libvmi config might provide is the json path and the kpgd to speed up its OS init. When specified on the drakvuf cmdline we provide both to LibVMI via VMI_CONFIG_GHASHTABLE. Are you keeping the kpgd info in the libvmi config file and its just easier to pass that by path?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1389,2022-01-19T20:58:31Z,2022-01-20T17:10:15Z,2022-01-20T17:10:22Z,CLOSED,False,49,9,10,https://github.com/disaykin,Added the ability to explicitly specify the path to the libvmi config,1,[],https://github.com/tklengyel/drakvuf/pull/1389,https://github.com/disaykin,4,https://github.com/tklengyel/drakvuf/pull/1389#issuecomment-1017234060,"@tklengyel Pull up, please, new changes from libvmi/libvmi.","@tklengyel We provide via config all offsets calculated once for each memory snapshot:
kpgd = 0x185000
win_kdbg = 0x0
win_kdvb = 0x0
win_kpcr = 0x0
win_ntoskrnl = 0x281b000
win_ntoskrnl_va = 0x8281b000
win_pdbase = 0x18
win_pid = 0xb4
win_pname = 0x16c
win_sysproc = 0x8475b950
win_tasks = 0xb8",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1389,2022-01-19T20:58:31Z,2022-01-20T17:10:15Z,2022-01-20T17:10:22Z,CLOSED,False,49,9,10,https://github.com/disaykin,Added the ability to explicitly specify the path to the libvmi config,1,[],https://github.com/tklengyel/drakvuf/pull/1389,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1389#issuecomment-1017451266,"@tklengyel Pull up, please, new changes from libvmi/libvmi.","Sure but why? The offsets are easily looked up from the json. The kernel va/pa is also a simple calculation based on values found in the json. Sysproc isn't used if you provide the kpgd. So I'm not sure what you gain by providing the config, its all redundant information LibVMI already had.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1389,2022-01-19T20:58:31Z,2022-01-20T17:10:15Z,2022-01-20T17:10:22Z,CLOSED,False,49,9,10,https://github.com/disaykin,Added the ability to explicitly specify the path to the libvmi config,1,[],https://github.com/tklengyel/drakvuf/pull/1389,https://github.com/disaykin,6,https://github.com/tklengyel/drakvuf/pull/1389#issuecomment-1017727651,"@tklengyel Pull up, please, new changes from libvmi/libvmi.","@tklengyel This was once done when accelerating and stabilizing a drakvuf launch. Great, so I'll rewrite the scripts to a more flexible format without using the libvmi config. Thanks!",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1390,2022-01-22T12:19:44Z,2022-01-22T13:19:16Z,2022-01-23T17:33:26Z,MERGED,True,1,0,1,https://github.com/manorit2001,ci: add threadsafety build checks,1,[],https://github.com/tklengyel/drakvuf/pull/1390,https://github.com/manorit2001,1,https://github.com/tklengyel/drakvuf/pull/1390,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1390,2022-01-22T12:19:44Z,2022-01-22T13:19:16Z,2022-01-23T17:33:26Z,MERGED,True,1,0,1,https://github.com/manorit2001,ci: add threadsafety build checks,1,[],https://github.com/tklengyel/drakvuf/pull/1390,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1390#issuecomment-1019227448,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1393,2022-02-15T13:57:53Z,2022-02-22T01:16:18Z,2022-02-22T01:16:18Z,MERGED,True,2357,44,10,https://github.com/skvl,filedelete: re-write plugin to clarify model,8,[],https://github.com/tklengyel/drakvuf/pull/1393,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1393,"Before refactoring multiple hooks on NtClose been set for each
step in injection chain. Thus the model been difficult to understand.
The other drawback was that the order of callbacks been called was
crucial.
With new model the single hook on NtClose left. And every task get
it's state machine. Thus the model been clarified a lot.","Before refactoring multiple hooks on NtClose been set for each
step in injection chain. Thus the model been difficult to understand.
The other drawback was that the order of callbacks been called was
crucial.
With new model the single hook on NtClose left. And every task get
it's state machine. Thus the model been clarified a lot.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1393,2022-02-15T13:57:53Z,2022-02-22T01:16:18Z,2022-02-22T01:16:18Z,MERGED,True,2357,44,10,https://github.com/skvl,filedelete: re-write plugin to clarify model,8,[],https://github.com/tklengyel/drakvuf/pull/1393,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1393#issuecomment-1040305951,"Before refactoring multiple hooks on NtClose been set for each
step in injection chain. Thus the model been difficult to understand.
The other drawback was that the order of callbacks been called was
crucial.
With new model the single hook on NtClose left. And every task get
it's state machine. Thus the model been clarified a lot.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1393,2022-02-15T13:57:53Z,2022-02-22T01:16:18Z,2022-02-22T01:16:18Z,MERGED,True,2357,44,10,https://github.com/skvl,filedelete: re-write plugin to clarify model,8,[],https://github.com/tklengyel/drakvuf/pull/1393,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1393#issuecomment-1040335061,"Before refactoring multiple hooks on NtClose been set for each
step in injection chain. Thus the model been difficult to understand.
The other drawback was that the order of callbacks been called was
crucial.
With new model the single hook on NtClose left. And every task get
it's state machine. Thus the model been clarified a lot.",Please rebase on latest master,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1393,2022-02-15T13:57:53Z,2022-02-22T01:16:18Z,2022-02-22T01:16:18Z,MERGED,True,2357,44,10,https://github.com/skvl,filedelete: re-write plugin to clarify model,8,[],https://github.com/tklengyel/drakvuf/pull/1393,https://github.com/skvl,4,https://github.com/tklengyel/drakvuf/pull/1393#issuecomment-1040343006,"Before refactoring multiple hooks on NtClose been set for each
step in injection chain. Thus the model been difficult to understand.
The other drawback was that the order of callbacks been called was
crucial.
With new model the single hook on NtClose left. And every task get
it's state machine. Thus the model been clarified a lot.",Sorry. I didn't noticed that I failed to fetch new master.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1393,2022-02-15T13:57:53Z,2022-02-22T01:16:18Z,2022-02-22T01:16:18Z,MERGED,True,2357,44,10,https://github.com/skvl,filedelete: re-write plugin to clarify model,8,[],https://github.com/tklengyel/drakvuf/pull/1393,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1393#issuecomment-1040539939,"Before refactoring multiple hooks on NtClose been set for each
step in injection chain. Thus the model been difficult to understand.
The other drawback was that the order of callbacks been called was
crucial.
With new model the single hook on NtClose left. And every task get
it's state machine. Thus the model been clarified a lot.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1393,2022-02-15T13:57:53Z,2022-02-22T01:16:18Z,2022-02-22T01:16:18Z,MERGED,True,2357,44,10,https://github.com/skvl,filedelete: re-write plugin to clarify model,8,[],https://github.com/tklengyel/drakvuf/pull/1393,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1393#issuecomment-1040555506,"Before refactoring multiple hooks on NtClose been set for each
step in injection chain. Thus the model been difficult to understand.
The other drawback was that the order of callbacks been called was
crucial.
With new model the single hook on NtClose left. And every task get
it's state machine. Thus the model been clarified a lot.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1393,2022-02-15T13:57:53Z,2022-02-22T01:16:18Z,2022-02-22T01:16:18Z,MERGED,True,2357,44,10,https://github.com/skvl,filedelete: re-write plugin to clarify model,8,[],https://github.com/tklengyel/drakvuf/pull/1393,https://github.com/skvl,7,https://github.com/tklengyel/drakvuf/pull/1393#issuecomment-1042655016,"Before refactoring multiple hooks on NtClose been set for each
step in injection chain. Thus the model been difficult to understand.
The other drawback was that the order of callbacks been called was
crucial.
With new model the single hook on NtClose left. And every task get
it's state machine. Thus the model been clarified a lot.","@tklengyel , is something wrong with PR?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1393,2022-02-15T13:57:53Z,2022-02-22T01:16:18Z,2022-02-22T01:16:18Z,MERGED,True,2357,44,10,https://github.com/skvl,filedelete: re-write plugin to clarify model,8,[],https://github.com/tklengyel/drakvuf/pull/1393,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/1393#issuecomment-1043101283,"Before refactoring multiple hooks on NtClose been set for each
step in injection chain. Thus the model been difficult to understand.
The other drawback was that the order of callbacks been called was
crucial.
With new model the single hook on NtClose left. And every task get
it's state machine. Thus the model been clarified a lot.",Nothing wrong just haven't had time to review & merge it. Will do in the next couple days.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1393,2022-02-15T13:57:53Z,2022-02-22T01:16:18Z,2022-02-22T01:16:18Z,MERGED,True,2357,44,10,https://github.com/skvl,filedelete: re-write plugin to clarify model,8,[],https://github.com/tklengyel/drakvuf/pull/1393,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/1393#issuecomment-1043607590,"Before refactoring multiple hooks on NtClose been set for each
step in injection chain. Thus the model been difficult to understand.
The other drawback was that the order of callbacks been called was
crucial.
With new model the single hook on NtClose left. And every task get
it's state machine. Thus the model been clarified a lot.","So overall this looks fine to me but the number of changes to the filedelete plugin is so significant that it's hard to follow. Since this is almost a reimplementation of the plugin I would suggest actually just placing it into a new plugin (filedelete2) and defaulting to this, but adding a configure override to allow using the pre-existing version in case there are discrepancies.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1393,2022-02-15T13:57:53Z,2022-02-22T01:16:18Z,2022-02-22T01:16:18Z,MERGED,True,2357,44,10,https://github.com/skvl,filedelete: re-write plugin to clarify model,8,[],https://github.com/tklengyel/drakvuf/pull/1393,https://github.com/skvl,10,https://github.com/tklengyel/drakvuf/pull/1393#issuecomment-1044351481,"Before refactoring multiple hooks on NtClose been set for each
step in injection chain. Thus the model been difficult to understand.
The other drawback was that the order of callbacks been called was
crucial.
With new model the single hook on NtClose left. And every task get
it's state machine. Thus the model been clarified a lot.","@tklengyel , I have rename plug-in to ""fileextractor"". I think it is ready.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1393,2022-02-15T13:57:53Z,2022-02-22T01:16:18Z,2022-02-22T01:16:18Z,MERGED,True,2357,44,10,https://github.com/skvl,filedelete: re-write plugin to clarify model,8,[],https://github.com/tklengyel/drakvuf/pull/1393,https://github.com/skvl,11,https://github.com/tklengyel/drakvuf/pull/1393#issuecomment-1044354761,"Before refactoring multiple hooks on NtClose been set for each
step in injection chain. Thus the model been difficult to understand.
The other drawback was that the order of callbacks been called was
crucial.
With new model the single hook on NtClose left. And every task get
it's state machine. Thus the model been clarified a lot.","@tklengyel , I don't understand the errors from CodeQL: https://github.com/tklengyel/drakvuf/pull/1393/checks?check_run_id=5245213598",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1393,2022-02-15T13:57:53Z,2022-02-22T01:16:18Z,2022-02-22T01:16:18Z,MERGED,True,2357,44,10,https://github.com/skvl,filedelete: re-write plugin to clarify model,8,[],https://github.com/tklengyel/drakvuf/pull/1393,https://github.com/tklengyel,12,https://github.com/tklengyel/drakvuf/pull/1393#issuecomment-1044624599,"Before refactoring multiple hooks on NtClose been set for each
step in injection chain. Thus the model been difficult to understand.
The other drawback was that the order of callbacks been called was
crucial.
With new model the single hook on NtClose left. And every task get
it's state machine. Thus the model been clarified a lot.",CodeQL just complains about the default file permissions when a new file is created. Just add umask(S_IWGRP|S_IWOTH); before the fopen.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1393,2022-02-15T13:57:53Z,2022-02-22T01:16:18Z,2022-02-22T01:16:18Z,MERGED,True,2357,44,10,https://github.com/skvl,filedelete: re-write plugin to clarify model,8,[],https://github.com/tklengyel/drakvuf/pull/1393,https://github.com/skvl,13,https://github.com/tklengyel/drakvuf/pull/1393#issuecomment-1046735260,"Before refactoring multiple hooks on NtClose been set for each
step in injection chain. Thus the model been difficult to understand.
The other drawback was that the order of callbacks been called was
crucial.
With new model the single hook on NtClose left. And every task get
it's state machine. Thus the model been clarified a lot.","CodeQL just complains about the default file permissions when a new file is created. Just add umask(S_IWGRP|S_IWOTH); before the fopen.

Fixed",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1393,2022-02-15T13:57:53Z,2022-02-22T01:16:18Z,2022-02-22T01:16:18Z,MERGED,True,2357,44,10,https://github.com/skvl,filedelete: re-write plugin to clarify model,8,[],https://github.com/tklengyel/drakvuf/pull/1393,https://github.com/skvl,14,https://github.com/tklengyel/drakvuf/pull/1393#issuecomment-1046801506,"Before refactoring multiple hooks on NtClose been set for each
step in injection chain. Thus the model been difficult to understand.
The other drawback was that the order of callbacks been called was
crucial.
With new model the single hook on NtClose left. And every task get
it's state machine. Thus the model been clarified a lot.",@tklengyel i believe that the error doesn't relate to the PR.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1393,2022-02-15T13:57:53Z,2022-02-22T01:16:18Z,2022-02-22T01:16:18Z,MERGED,True,2357,44,10,https://github.com/skvl,filedelete: re-write plugin to clarify model,8,[],https://github.com/tklengyel/drakvuf/pull/1393,https://github.com/tklengyel,15,https://github.com/tklengyel/drakvuf/pull/1393#issuecomment-1046960303,"Before refactoring multiple hooks on NtClose been set for each
step in injection chain. Thus the model been difficult to understand.
The other drawback was that the order of callbacks been called was
crucial.
With new model the single hook on NtClose left. And every task get
it's state machine. Thus the model been clarified a lot.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1393,2022-02-15T13:57:53Z,2022-02-22T01:16:18Z,2022-02-22T01:16:18Z,MERGED,True,2357,44,10,https://github.com/skvl,filedelete: re-write plugin to clarify model,8,[],https://github.com/tklengyel/drakvuf/pull/1393,https://github.com/tklengyel,16,https://github.com/tklengyel/drakvuf/pull/1393#issuecomment-1047306158,"Before refactoring multiple hooks on NtClose been set for each
step in injection chain. Thus the model been difficult to understand.
The other drawback was that the order of callbacks been called was
crucial.
With new model the single hook on NtClose left. And every task get
it's state machine. Thus the model been clarified a lot.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1394,2022-02-17T08:53:39Z,2022-02-22T01:13:30Z,2022-02-22T01:13:30Z,MERGED,True,26,0,3,https://github.com/skvl,libusermode: add pulonglong type to print 8 byte values from pointers,1,[],https://github.com/tklengyel/drakvuf/pull/1394,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1394,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1394,2022-02-17T08:53:39Z,2022-02-22T01:13:30Z,2022-02-22T01:13:30Z,MERGED,True,26,0,3,https://github.com/skvl,libusermode: add pulonglong type to print 8 byte values from pointers,1,[],https://github.com/tklengyel/drakvuf/pull/1394,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1394#issuecomment-1042711129,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1394,2022-02-17T08:53:39Z,2022-02-22T01:13:30Z,2022-02-22T01:13:30Z,MERGED,True,26,0,3,https://github.com/skvl,libusermode: add pulonglong type to print 8 byte values from pointers,1,[],https://github.com/tklengyel/drakvuf/pull/1394,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1394#issuecomment-1043101613,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1394,2022-02-17T08:53:39Z,2022-02-22T01:13:30Z,2022-02-22T01:13:30Z,MERGED,True,26,0,3,https://github.com/skvl,libusermode: add pulonglong type to print 8 byte values from pointers,1,[],https://github.com/tklengyel/drakvuf/pull/1394,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1394#issuecomment-1043608938,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1394,2022-02-17T08:53:39Z,2022-02-22T01:13:30Z,2022-02-22T01:13:30Z,MERGED,True,26,0,3,https://github.com/skvl,libusermode: add pulonglong type to print 8 byte values from pointers,1,[],https://github.com/tklengyel/drakvuf/pull/1394,https://github.com/skvl,5,https://github.com/tklengyel/drakvuf/pull/1394#issuecomment-1046832213,,@tklengyel i believe that the error doesn't relate to the PR.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1394,2022-02-17T08:53:39Z,2022-02-22T01:13:30Z,2022-02-22T01:13:30Z,MERGED,True,26,0,3,https://github.com/skvl,libusermode: add pulonglong type to print 8 byte values from pointers,1,[],https://github.com/tklengyel/drakvuf/pull/1394,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1394#issuecomment-1046959630,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1394,2022-02-17T08:53:39Z,2022-02-22T01:13:30Z,2022-02-22T01:13:30Z,MERGED,True,26,0,3,https://github.com/skvl,libusermode: add pulonglong type to print 8 byte values from pointers,1,[],https://github.com/tklengyel/drakvuf/pull/1394,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/1394#issuecomment-1047306636,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1396,2022-02-21T23:33:11Z,2022-02-21T23:56:58Z,2022-02-22T00:09:02Z,MERGED,True,3,0,1,https://github.com/chivay,deb: Add libgnutls28-dev to Xen build dependencies,1,[],https://github.com/tklengyel/drakvuf/pull/1396,https://github.com/chivay,1,https://github.com/tklengyel/drakvuf/pull/1396,"Compiling Xen without libgnutls leads to a semi-broken VNC,
and a cryptic error while creating a domain:
qemu-system-i386: -vnc 0.0.0.0:0,password=on,to=99: Cipher backend does not support DES algorithm
Fix this by adding libgnutls28-dev to the compilation environment.
See: https://bugs.gentoo.org/832494","Compiling Xen without libgnutls leads to a semi-broken VNC,
and a cryptic error while creating a domain:
qemu-system-i386: -vnc 0.0.0.0:0,password=on,to=99: Cipher backend does not support DES algorithm
Fix this by adding libgnutls28-dev to the compilation environment.
See: https://bugs.gentoo.org/832494",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1396,2022-02-21T23:33:11Z,2022-02-21T23:56:58Z,2022-02-22T00:09:02Z,MERGED,True,3,0,1,https://github.com/chivay,deb: Add libgnutls28-dev to Xen build dependencies,1,[],https://github.com/tklengyel/drakvuf/pull/1396,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1396#issuecomment-1047298630,"Compiling Xen without libgnutls leads to a semi-broken VNC,
and a cryptic error while creating a domain:
qemu-system-i386: -vnc 0.0.0.0:0,password=on,to=99: Cipher backend does not support DES algorithm
Fix this by adding libgnutls28-dev to the compilation environment.
See: https://bugs.gentoo.org/832494",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1397,2022-02-24T17:07:05Z,2022-03-11T15:04:46Z,2022-03-11T15:04:46Z,MERGED,True,492,0,6,https://github.com/BlindingRadiance,New plugin spraymon ,5,[],https://github.com/tklengyel/drakvuf/pull/1397,https://github.com/BlindingRadiance,1,https://github.com/tklengyel/drakvuf/pull/1397,"Hi! I've made a new plugin spraymon. It's purpose is to detect possible spray attempts using win32k graphic objects by checking counters inside W32PROCESS structure. Since this structure is not really documented, symbol information is available only for Windows 7 and Windows 10 (>=1607).
Checks are made when W32PROCESS information is being deleted from EPROCESS and at the end of the analysis.","Hi! I've made a new plugin spraymon. It's purpose is to detect possible spray attempts using win32k graphic objects by checking counters inside W32PROCESS structure. Since this structure is not really documented, symbol information is available only for Windows 7 and Windows 10 (>=1607).
Checks are made when W32PROCESS information is being deleted from EPROCESS and at the end of the analysis.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1397,2022-02-24T17:07:05Z,2022-03-11T15:04:46Z,2022-03-11T15:04:46Z,MERGED,True,492,0,6,https://github.com/BlindingRadiance,New plugin spraymon ,5,[],https://github.com/tklengyel/drakvuf/pull/1397,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1397#issuecomment-1050068867,"Hi! I've made a new plugin spraymon. It's purpose is to detect possible spray attempts using win32k graphic objects by checking counters inside W32PROCESS structure. Since this structure is not really documented, symbol information is available only for Windows 7 and Windows 10 (>=1607).
Checks are made when W32PROCESS information is being deleted from EPROCESS and at the end of the analysis.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1397,2022-02-24T17:07:05Z,2022-03-11T15:04:46Z,2022-03-11T15:04:46Z,MERGED,True,492,0,6,https://github.com/BlindingRadiance,New plugin spraymon ,5,[],https://github.com/tklengyel/drakvuf/pull/1397,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1397#issuecomment-1050074911,"Hi! I've made a new plugin spraymon. It's purpose is to detect possible spray attempts using win32k graphic objects by checking counters inside W32PROCESS structure. Since this structure is not really documented, symbol information is available only for Windows 7 and Windows 10 (>=1607).
Checks are made when W32PROCESS information is being deleted from EPROCESS and at the end of the analysis.","Nice to see such quality submission on a first PR! :) LGTM, please fix the issues spotted by the CI and the couple comments I left and we can merge.",True,{'THUMBS_UP': ['https://github.com/manorit2001']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1397,2022-02-24T17:07:05Z,2022-03-11T15:04:46Z,2022-03-11T15:04:46Z,MERGED,True,492,0,6,https://github.com/BlindingRadiance,New plugin spraymon ,5,[],https://github.com/tklengyel/drakvuf/pull/1397,https://github.com/BlindingRadiance,4,https://github.com/tklengyel/drakvuf/pull/1397#issuecomment-1050086059,"Hi! I've made a new plugin spraymon. It's purpose is to detect possible spray attempts using win32k graphic objects by checking counters inside W32PROCESS structure. Since this structure is not really documented, symbol information is available only for Windows 7 and Windows 10 (>=1607).
Checks are made when W32PROCESS information is being deleted from EPROCESS and at the end of the analysis.",Thanks!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1397,2022-02-24T17:07:05Z,2022-03-11T15:04:46Z,2022-03-11T15:04:46Z,MERGED,True,492,0,6,https://github.com/BlindingRadiance,New plugin spraymon ,5,[],https://github.com/tklengyel/drakvuf/pull/1397,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1397#issuecomment-1059872350,"Hi! I've made a new plugin spraymon. It's purpose is to detect possible spray attempts using win32k graphic objects by checking counters inside W32PROCESS structure. Since this structure is not really documented, symbol information is available only for Windows 7 and Windows 10 (>=1607).
Checks are made when W32PROCESS information is being deleted from EPROCESS and at the end of the analysis.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1397,2022-02-24T17:07:05Z,2022-03-11T15:04:46Z,2022-03-11T15:04:46Z,MERGED,True,492,0,6,https://github.com/BlindingRadiance,New plugin spraymon ,5,[],https://github.com/tklengyel/drakvuf/pull/1397,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1397#issuecomment-1063176148,"Hi! I've made a new plugin spraymon. It's purpose is to detect possible spray attempts using win32k graphic objects by checking counters inside W32PROCESS structure. Since this structure is not really documented, symbol information is available only for Windows 7 and Windows 10 (>=1607).
Checks are made when W32PROCESS information is being deleted from EPROCESS and at the end of the analysis.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1397,2022-02-24T17:07:05Z,2022-03-11T15:04:46Z,2022-03-11T15:04:46Z,MERGED,True,492,0,6,https://github.com/BlindingRadiance,New plugin spraymon ,5,[],https://github.com/tklengyel/drakvuf/pull/1397,https://github.com/BlindingRadiance,7,https://github.com/tklengyel/drakvuf/pull/1397#issuecomment-1063210898,"Hi! I've made a new plugin spraymon. It's purpose is to detect possible spray attempts using win32k graphic objects by checking counters inside W32PROCESS structure. Since this structure is not really documented, symbol information is available only for Windows 7 and Windows 10 (>=1607).
Checks are made when W32PROCESS information is being deleted from EPROCESS and at the end of the analysis.",Weird the error didn't show up on my local build.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1399,2022-03-06T01:33:53Z,2022-03-06T02:34:16Z,2022-03-06T02:34:17Z,MERGED,True,25,5,3,https://github.com/tklengyel,Fix printing syscall name after it has been freed,1,[],https://github.com/tklengyel/drakvuf/pull/1399,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1399,"When we encounter a new syscall without an internal definition its not safe to pass symbol->name as trap->name as it gets freed. We really only ought to copy the new syscall name if no internal definition is found, and use the internal definition's name if it is found as its already statically allocated.
Why this bug only triggered for syscalls with no internal definitions is unclear, by the looks of it it should have affected all syscalls. Perhaps some compiler optimization happened to hide it?
Fixes #1398","When we encounter a new syscall without an internal definition its not safe to pass symbol->name as trap->name as it gets freed. We really only ought to copy the new syscall name if no internal definition is found, and use the internal definition's name if it is found as its already statically allocated.
Why this bug only triggered for syscalls with no internal definitions is unclear, by the looks of it it should have affected all syscalls. Perhaps some compiler optimization happened to hide it?
Fixes #1398",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1400,2022-03-06T02:37:39Z,2022-03-06T02:59:34Z,2022-03-06T02:59:36Z,MERGED,True,21,10,4,https://github.com/tklengyel,Cleanup Makefile.am in several places,1,[],https://github.com/tklengyel/drakvuf/pull/1400,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1400,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1401,2022-03-06T14:13:41Z,2022-03-06T21:10:52Z,2022-03-06T21:10:54Z,MERGED,True,2,4,1,https://github.com/tklengyel,Remove some dead code spotted by static analyzer,1,[],https://github.com/tklengyel/drakvuf/pull/1401,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1401,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1401,2022-03-06T14:13:41Z,2022-03-06T21:10:52Z,2022-03-06T21:10:54Z,MERGED,True,2,4,1,https://github.com/tklengyel,Remove some dead code spotted by static analyzer,1,[],https://github.com/tklengyel/drakvuf/pull/1401,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/1401#issuecomment-1059977043,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1401,2022-03-06T14:13:41Z,2022-03-06T21:10:52Z,2022-03-06T21:10:54Z,MERGED,True,2,4,1,https://github.com/tklengyel,Remove some dead code spotted by static analyzer,1,[],https://github.com/tklengyel/drakvuf/pull/1401,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1401#issuecomment-1060034964,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1402,2022-03-07T17:22:35Z,2022-03-07T20:35:01Z,2022-03-07T20:35:04Z,MERGED,True,16,1,2,https://github.com/tklengyel,Add new Windows syscall definitions,2,[],https://github.com/tklengyel/drakvuf/pull/1402,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1402,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1402,2022-03-07T17:22:35Z,2022-03-07T20:35:01Z,2022-03-07T20:35:04Z,MERGED,True,16,1,2,https://github.com/tklengyel,Add new Windows syscall definitions,2,[],https://github.com/tklengyel/drakvuf/pull/1402,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/1402#issuecomment-1061043073,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1402,2022-03-07T17:22:35Z,2022-03-07T20:35:01Z,2022-03-07T20:35:04Z,MERGED,True,16,1,2,https://github.com/tklengyel,Add new Windows syscall definitions,2,[],https://github.com/tklengyel/drakvuf/pull/1402,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1402#issuecomment-1061083395,,@drakvuf-jenkins  Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1403,2022-03-07T21:06:04Z,2022-03-08T01:20:05Z,2022-03-08T01:20:07Z,MERGED,True,2,1,1,https://github.com/tklengyel,Fix CID 301886 Logically dead code,1,[],https://github.com/tklengyel/drakvuf/pull/1403,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1403,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1403,2022-03-07T21:06:04Z,2022-03-08T01:20:05Z,2022-03-08T01:20:07Z,MERGED,True,2,1,1,https://github.com/tklengyel,Fix CID 301886 Logically dead code,1,[],https://github.com/tklengyel/drakvuf/pull/1403,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/1403#issuecomment-1061286649,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1404,2022-03-09T08:47:14Z,2022-03-11T15:03:47Z,2022-03-11T15:03:48Z,MERGED,True,142,110,6,https://github.com/skvl,Procdump fix,3,[],https://github.com/tklengyel/drakvuf/pull/1404,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1404,"Additional timeout is used to prevent BSODs on plug-in stop.
The BSOD occur because on stop signal the plug-in doesn't remove hooks but perform new injects to dump target process. Thus on global timeout the plug-in destructor is called and VM is leaved in broken state on last injection.
Also the code is changed to store metadata for partial dumps. And dump status is inserted into ""procdump"" event and metadata.
The other error fixed is end-less ""PsSuspendProcess"" injection loop. In some cases the target process is awaken. And the VM catch BSOD on several dozens of ""PsSuspendProcess"" injections. I don't know the reason of BSOD. Though I believe that the end-less loop should be fixed.","Additional timeout is used to prevent BSODs on plug-in stop.
The BSOD occur because on stop signal the plug-in doesn't remove hooks but perform new injects to dump target process. Thus on global timeout the plug-in destructor is called and VM is leaved in broken state on last injection.
Also the code is changed to store metadata for partial dumps. And dump status is inserted into ""procdump"" event and metadata.
The other error fixed is end-less ""PsSuspendProcess"" injection loop. In some cases the target process is awaken. And the VM catch BSOD on several dozens of ""PsSuspendProcess"" injections. I don't know the reason of BSOD. Though I believe that the end-less loop should be fixed.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1404,2022-03-09T08:47:14Z,2022-03-11T15:03:47Z,2022-03-11T15:03:48Z,MERGED,True,142,110,6,https://github.com/skvl,Procdump fix,3,[],https://github.com/tklengyel/drakvuf/pull/1404,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1404#issuecomment-1062686147,"Additional timeout is used to prevent BSODs on plug-in stop.
The BSOD occur because on stop signal the plug-in doesn't remove hooks but perform new injects to dump target process. Thus on global timeout the plug-in destructor is called and VM is leaved in broken state on last injection.
Also the code is changed to store metadata for partial dumps. And dump status is inserted into ""procdump"" event and metadata.
The other error fixed is end-less ""PsSuspendProcess"" injection loop. In some cases the target process is awaken. And the VM catch BSOD on several dozens of ""PsSuspendProcess"" injections. I don't know the reason of BSOD. Though I believe that the end-less loop should be fixed.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1404,2022-03-09T08:47:14Z,2022-03-11T15:03:47Z,2022-03-11T15:03:48Z,MERGED,True,142,110,6,https://github.com/skvl,Procdump fix,3,[],https://github.com/tklengyel/drakvuf/pull/1404,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1404#issuecomment-1062770261,"Additional timeout is used to prevent BSODs on plug-in stop.
The BSOD occur because on stop signal the plug-in doesn't remove hooks but perform new injects to dump target process. Thus on global timeout the plug-in destructor is called and VM is leaved in broken state on last injection.
Also the code is changed to store metadata for partial dumps. And dump status is inserted into ""procdump"" event and metadata.
The other error fixed is end-less ""PsSuspendProcess"" injection loop. In some cases the target process is awaken. And the VM catch BSOD on several dozens of ""PsSuspendProcess"" injections. I don't know the reason of BSOD. Though I believe that the end-less loop should be fixed.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1404,2022-03-09T08:47:14Z,2022-03-11T15:03:47Z,2022-03-11T15:03:48Z,MERGED,True,142,110,6,https://github.com/skvl,Procdump fix,3,[],https://github.com/tklengyel/drakvuf/pull/1404,https://github.com/skvl,4,https://github.com/tklengyel/drakvuf/pull/1404#issuecomment-1063790253,"Additional timeout is used to prevent BSODs on plug-in stop.
The BSOD occur because on stop signal the plug-in doesn't remove hooks but perform new injects to dump target process. Thus on global timeout the plug-in destructor is called and VM is leaved in broken state on last injection.
Also the code is changed to store metadata for partial dumps. And dump status is inserted into ""procdump"" event and metadata.
The other error fixed is end-less ""PsSuspendProcess"" injection loop. In some cases the target process is awaken. And the VM catch BSOD on several dozens of ""PsSuspendProcess"" injections. I don't know the reason of BSOD. Though I believe that the end-less loop should be fixed.",@tklengyel I have found and fixed minor issue: forgotten break in switch.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1404,2022-03-09T08:47:14Z,2022-03-11T15:03:47Z,2022-03-11T15:03:48Z,MERGED,True,142,110,6,https://github.com/skvl,Procdump fix,3,[],https://github.com/tklengyel/drakvuf/pull/1404,https://github.com/skvl,5,https://github.com/tklengyel/drakvuf/pull/1404#issuecomment-1063865871,"Additional timeout is used to prevent BSODs on plug-in stop.
The BSOD occur because on stop signal the plug-in doesn't remove hooks but perform new injects to dump target process. Thus on global timeout the plug-in destructor is called and VM is leaved in broken state on last injection.
Also the code is changed to store metadata for partial dumps. And dump status is inserted into ""procdump"" event and metadata.
The other error fixed is end-less ""PsSuspendProcess"" injection loop. In some cases the target process is awaken. And the VM catch BSOD on several dozens of ""PsSuspendProcess"" injections. I don't know the reason of BSOD. Though I believe that the end-less loop should be fixed.",I believe that the error is not due to my last fix :),True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1404,2022-03-09T08:47:14Z,2022-03-11T15:03:47Z,2022-03-11T15:03:48Z,MERGED,True,142,110,6,https://github.com/skvl,Procdump fix,3,[],https://github.com/tklengyel/drakvuf/pull/1404,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1404#issuecomment-1063934486,"Additional timeout is used to prevent BSODs on plug-in stop.
The BSOD occur because on stop signal the plug-in doesn't remove hooks but perform new injects to dump target process. Thus on global timeout the plug-in destructor is called and VM is leaved in broken state on last injection.
Also the code is changed to store metadata for partial dumps. And dump status is inserted into ""procdump"" event and metadata.
The other error fixed is end-less ""PsSuspendProcess"" injection loop. In some cases the target process is awaken. And the VM catch BSOD on several dozens of ""PsSuspendProcess"" injections. I don't know the reason of BSOD. Though I believe that the end-less loop should be fixed.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1404,2022-03-09T08:47:14Z,2022-03-11T15:03:47Z,2022-03-11T15:03:48Z,MERGED,True,142,110,6,https://github.com/skvl,Procdump fix,3,[],https://github.com/tklengyel/drakvuf/pull/1404,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/1404#issuecomment-1065143916,"Additional timeout is used to prevent BSODs on plug-in stop.
The BSOD occur because on stop signal the plug-in doesn't remove hooks but perform new injects to dump target process. Thus on global timeout the plug-in destructor is called and VM is leaved in broken state on last injection.
Also the code is changed to store metadata for partial dumps. And dump status is inserted into ""procdump"" event and metadata.
The other error fixed is end-less ""PsSuspendProcess"" injection loop. In some cases the target process is awaken. And the VM catch BSOD on several dozens of ""PsSuspendProcess"" injections. I don't know the reason of BSOD. Though I believe that the end-less loop should be fixed.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1405,2022-03-14T17:02:41Z,2022-03-17T01:47:59Z,2022-03-17T01:47:59Z,MERGED,True,104,43,3,https://github.com/skvl,procdump: fix fragmented address spaces,1,[],https://github.com/tklengyel/drakvuf/pull/1405,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1405,It have been noticed that MmCopyVirtualAddress fails if any page in requested range is inaccessible. Thus it have been fixed how we use this system call.,It have been noticed that MmCopyVirtualAddress fails if any page in requested range is inaccessible. Thus it have been fixed how we use this system call.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1405,2022-03-14T17:02:41Z,2022-03-17T01:47:59Z,2022-03-17T01:47:59Z,MERGED,True,104,43,3,https://github.com/skvl,procdump: fix fragmented address spaces,1,[],https://github.com/tklengyel/drakvuf/pull/1405,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1405#issuecomment-1067067482,It have been noticed that MmCopyVirtualAddress fails if any page in requested range is inaccessible. Thus it have been fixed how we use this system call.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1405,2022-03-14T17:02:41Z,2022-03-17T01:47:59Z,2022-03-17T01:47:59Z,MERGED,True,104,43,3,https://github.com/skvl,procdump: fix fragmented address spaces,1,[],https://github.com/tklengyel/drakvuf/pull/1405,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1405#issuecomment-1067090463,It have been noticed that MmCopyVirtualAddress fails if any page in requested range is inaccessible. Thus it have been fixed how we use this system call.,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1405,2022-03-14T17:02:41Z,2022-03-17T01:47:59Z,2022-03-17T01:47:59Z,MERGED,True,104,43,3,https://github.com/skvl,procdump: fix fragmented address spaces,1,[],https://github.com/tklengyel/drakvuf/pull/1405,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1405#issuecomment-1068269173,It have been noticed that MmCopyVirtualAddress fails if any page in requested range is inaccessible. Thus it have been fixed how we use this system call.,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1406,2022-03-21T10:24:43Z,,2022-05-09T00:58:32Z,OPEN,False,3,1,1,https://github.com/skvl,"libusermode: DLL search case insensitive, simple wildcard pattern",1,[],https://github.com/tklengyel/drakvuf/pull/1406,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1406,"Simplifies rules for use in apimon while DLL name comparison:

Allow simple wildcard patter *.dll.
Performs case insensitive search.","Simplifies rules for use in apimon while DLL name comparison:

Allow simple wildcard patter *.dll.
Performs case insensitive search.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1406,2022-03-21T10:24:43Z,,2022-05-09T00:58:32Z,OPEN,False,3,1,1,https://github.com/skvl,"libusermode: DLL search case insensitive, simple wildcard pattern",1,[],https://github.com/tklengyel/drakvuf/pull/1406,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1406#issuecomment-1073727432,"Simplifies rules for use in apimon while DLL name comparison:

Allow simple wildcard patter *.dll.
Performs case insensitive search.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1406,2022-03-21T10:24:43Z,,2022-05-09T00:58:32Z,OPEN,False,3,1,1,https://github.com/skvl,"libusermode: DLL search case insensitive, simple wildcard pattern",1,[],https://github.com/tklengyel/drakvuf/pull/1406,https://github.com/skvl,3,https://github.com/tklengyel/drakvuf/pull/1406#issuecomment-1073729186,"Simplifies rules for use in apimon while DLL name comparison:

Allow simple wildcard patter *.dll.
Performs case insensitive search.","@tklengyel , I believe that astyle check is bad for proposed lambda expression.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1406,2022-03-21T10:24:43Z,,2022-05-09T00:58:32Z,OPEN,False,3,1,1,https://github.com/skvl,"libusermode: DLL search case insensitive, simple wildcard pattern",1,[],https://github.com/tklengyel/drakvuf/pull/1406,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1406#issuecomment-1073983344,"Simplifies rules for use in apimon while DLL name comparison:

Allow simple wildcard patter *.dll.
Performs case insensitive search.",Feel free to tweak the .astylerc,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1406,2022-03-21T10:24:43Z,,2022-05-09T00:58:32Z,OPEN,False,3,1,1,https://github.com/skvl,"libusermode: DLL search case insensitive, simple wildcard pattern",1,[],https://github.com/tklengyel/drakvuf/pull/1406,https://github.com/skvl,5,https://github.com/tklengyel/drakvuf/pull/1406#issuecomment-1084934236,"Simplifies rules for use in apimon while DLL name comparison:

Allow simple wildcard patter *.dll.
Performs case insensitive search.","Feel free to tweak the .astylerc

Astyle has problems with lamdas:

https://sourceforge.net/p/astyle/tickets/121/
https://sourceforge.net/p/astyle/bugs/317/
https://sourceforge.net/p/astyle/bugs/448/

So i don't know what to do here.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1406,2022-03-21T10:24:43Z,,2022-05-09T00:58:32Z,OPEN,False,3,1,1,https://github.com/skvl,"libusermode: DLL search case insensitive, simple wildcard pattern",1,[],https://github.com/tklengyel/drakvuf/pull/1406,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1406#issuecomment-1084944668,"Simplifies rules for use in apimon while DLL name comparison:

Allow simple wildcard patter *.dll.
Performs case insensitive search.",We can switch to clang-format perhaps?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1406,2022-03-21T10:24:43Z,,2022-05-09T00:58:32Z,OPEN,False,3,1,1,https://github.com/skvl,"libusermode: DLL search case insensitive, simple wildcard pattern",1,[],https://github.com/tklengyel/drakvuf/pull/1406,https://github.com/tklengyel,7,https://github.com/tklengyel/drakvuf/pull/1406#issuecomment-1085058278,"Simplifies rules for use in apimon while DLL name comparison:

Allow simple wildcard patter *.dll.
Performs case insensitive search.","Also, perhaps just don't use lambdas. What you are trying to accomplish could be also easily solvable without using one.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1407,2022-03-29T19:53:27Z,2022-03-29T20:49:07Z,2022-03-29T20:49:09Z,MERGED,True,1,1,1,https://github.com/tklengyel,Update LibVMI,1,[],https://github.com/tklengyel/drakvuf/pull/1407,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1407,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1408,2022-04-01T09:00:15Z,2022-04-01T13:27:39Z,2022-04-01T13:27:40Z,MERGED,True,69,7,3,https://github.com/skvl,procdump: fix BSOD on re-suspend fail,1,[],https://github.com/tklengyel/drakvuf/pull/1408,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1408,"The BSOD scenario:

The target process returns from PsSuspendProcess.
After few retries to re-suspend it we restore its state and it continues the NtTerminateProcess.
At this time the working thread injected MmCopyVirtualMemory.
MmCopyVirtualMemory locks pages with MmProbeAndLockPages.
The PROCESS_HAS_LOCKED_PAGES or UNEXPECTED_KERNEL_MODE_TRAP occur.

The fix delays execution of NtTerminateProcess with KeDelayExecutionThread until MmCopyVirtualMemory finishes.","The BSOD scenario:

The target process returns from PsSuspendProcess.
After few retries to re-suspend it we restore its state and it continues the NtTerminateProcess.
At this time the working thread injected MmCopyVirtualMemory.
MmCopyVirtualMemory locks pages with MmProbeAndLockPages.
The PROCESS_HAS_LOCKED_PAGES or UNEXPECTED_KERNEL_MODE_TRAP occur.

The fix delays execution of NtTerminateProcess with KeDelayExecutionThread until MmCopyVirtualMemory finishes.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1408,2022-04-01T09:00:15Z,2022-04-01T13:27:39Z,2022-04-01T13:27:40Z,MERGED,True,69,7,3,https://github.com/skvl,procdump: fix BSOD on re-suspend fail,1,[],https://github.com/tklengyel/drakvuf/pull/1408,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1408#issuecomment-1085639403,"The BSOD scenario:

The target process returns from PsSuspendProcess.
After few retries to re-suspend it we restore its state and it continues the NtTerminateProcess.
At this time the working thread injected MmCopyVirtualMemory.
MmCopyVirtualMemory locks pages with MmProbeAndLockPages.
The PROCESS_HAS_LOCKED_PAGES or UNEXPECTED_KERNEL_MODE_TRAP occur.

The fix delays execution of NtTerminateProcess with KeDelayExecutionThread until MmCopyVirtualMemory finishes.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1409,2022-04-01T09:06:29Z,2022-04-01T14:58:44Z,2022-04-01T16:53:00Z,MERGED,True,3,36,2,https://github.com/skvl,Fix string escaping with library function g_strescape,1,[],https://github.com/tklengyel/drakvuf/pull/1409,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1409,"There have been noticed multiple errors in apimon and regmon output with multi-line strings and strings with quotes and other symbols. E.g.:
regmon Time=1646227127.515052,PID=5604,PPID=624,TID=1972,ProcessName=""\Device\HarddiskVolume2\Windows\System32\svchost.exe"",Method=NtSetValueKey,Key=""\REGISTRY\MACHINE\SYSTEM\SYSTEM\WAAS\WAASMEDIC\TASKSTORE"",ValueName=""Schedule Scan"",Value=""'Microsoft\Windows\UpdateOrchestrator','<?xml version=""1.0"" encoding=""UTF-16""?>
<Task version=""1.6"" xmlns=""http://schemas.microsoft.com/windows/2004/02/mit/task"">
  <RegistrationInfo>
    <Source>Microsoft Corporation</Source>
    <Author>Microsoft Corporation</Author>
    <Version>1.0</Version>
    <Description>This task performs a scheduled Windows Update scan.</Description>
    <URI>\Microsoft\Windows\UpdateOrchestrator\Schedule Scan</URI>
    <SecurityDescriptor>D:P(A;;FA;;;SY)(A;;FRFX;;;LS)(A;;FRFX;;;BA)</SecurityDescriptor>
  </RegistrationInfo>
  <Triggers>
    <TimeTrigger>
      <Repetition>
        <Interval>PT22H</Interval>
        <StopAtDurationEnd>false</StopAtDurationEnd>
      </Repetition>
      <StartBoundary>2022-03-01T20:30:29+03:00</StartBoundary>
      <Enabled>true</Enabled>
      <RandomDelay>PT4H</RandomDelay>
    </TimeTrigger>
    <WnfStateChangeTrigger>
      <Enabled>true</Enabled>
      <Delay>PT2H5M</Delay>
      <StateName>750CBCA3290B9641</StateName>
      <Data>01</Data>
      <DataOffset>0</DataOffset>
    </WnfStateChangeTrigger>
    <WnfStateChangeTrigger>
      <Enabled>true</Enabled>
      <StateName>7550BCA322028F02</StateName>
    </WnfStateChangeTrigger>
    <WnfStateChangeTrigger>
      <Enabled>true</Enabled>
      <StateName>7508BCA32E07C641</StateName>
    </WnfStateChangeTrigger>
    <EventTrigger>
      <Enabled>true</Enabled>
      <Subscription>&lt;QueryList&gt;&lt;Query Id=""0"" Path=""System""&gt;&lt;Select Path=""System""&gt;*[System[EventID=8202]]&lt;/Select&gt;&lt;/Query&gt;&lt;/QueryList&gt;</Subscription>
    </EventTrigger>
  </Triggers>
  <Principals>
    <Principal id=""LocalSystem"">
      <UserId>S-1-5-18</UserId>
      <RunLevel>LeastPrivilege</RunLevel>
    </Principal>
  </Principals>
  <Settings>
    <MultipleInstancesPolicy>IgnoreNew</MultipleInstancesPolicy>
    <DisallowStartIfOnBatteries>false</DisallowStartIfOnBatteries>
    <StopIfGoingOnBatteries>false</StopIfGoingOnBatteries>
    <AllowHardTerminate>true</AllowHardTerminate>
    <StartWhenAvailable>true</StartWhenAvailable>
    <RunOnlyIfNetworkAvailable>true</RunOnlyIfNetworkAvailable>
    <IdleSettings>
      <StopOnIdleEnd>false</StopOnIdleEnd>
      <RestartOnIdle>false</RestartOnIdle>
    </IdleSettings>
    <AllowStartOnDemand>true</AllowStartOnDemand>
    <Enabled>true</Enabled>
    <Hidden>false</Hidden>
    <RunOnlyIfIdle>false</RunOnlyIfIdle>
    <DisallowStartOnRemoteAppSession>false</DisallowStartOnRemoteAppSession>
    <UseUnifiedSchedulingEngine>true</UseUnifiedSchedulingEngine>
    <WakeToRun>false</WakeToRun>
    <ExecutionTimeLimit>PT72H</ExecutionTimeLimit>
    <Priority>7</Priority>
  </Settings>
  <Actions Context=""LocalSystem"">
    <Exec>
      <Command>%systemroot%\system32\usoclient.exe</Command>
      <Arguments>StartScan</Arguments>
    </Exec>
  </Actions>
</Task>',''""

The GLib function g_strescape have been used as standard way to handle such strings. New output:
apimon Time=1648746071.951810,PID=4776,PPID=600,TID=2436,ProcessName=""\\Device\\HarddiskVolume2\\Windows\\System32\\svchost.exe"",Method=ITaskFolder::RegisterTask,Event=""api_called"",CLSID=""0F87369F-A4E5-4CFC-BD3E-73E6154572DD"",CalledFrom=0x7FF938FE64B3,ReturnValue=0x0,Arg0=0x1eea3105d70,Arg1=""Schedule Scan"",Arg2=""<?xml version=\""1.0\"" encoding=\""UTF-16\""?>\r\n<Task version=\""1.6\"" xmlns=\""http://schemas.microsoft.com/windows/2004/02/mit/task\"">\r\n  <RegistrationInfo>\r\n    <Source>Microsoft Corporation</Source>\r\n    <Author>Microsoft Corporation</Author>\r\n    <Version>1.0</Version>\r\n    <Description>This task performs a scheduled Windows Update scan.</Description>\r\n    <URI>\\Microsoft\\Windows\\UpdateOrchestrator\\Schedule Scan</URI>\r\n    <SecurityDescriptor>D:P(A;;FA;;;SY)(A;;FRFX;;;LS)(A;;FRFX;;;BA)</SecurityDescriptor>\r\n  </RegistrationInfo>\r\n  <Triggers>\r\n    <TimeTrigger>\r\n      <Repetition>\r\n        <Interval>PT22H</Interval>\r\n        <StopAtDurationEnd>false</StopAtDurationEnd>\r\n      </Repetition>\r\n      <StartBoundary>2022-03-28T21:05:23+03:00</StartBoundary>\r\n      <Enabled>true</Enabled>\r\n      <RandomDelay>PT4H</RandomDelay>\r\n    </TimeTrigger>\r\n    <WnfStateChangeTrigger>\r\n      <Enabled>true</Enabled>\r\n      <Delay>PT2H5M</Delay>\r\n      <StateName>750CBCA3290B9641</StateName>\r\n      <Data>01</Data>\r\n      <DataOffset>0</DataOffset>\r\n    </WnfStateChangeTrigger>\r\n    <WnfStateChangeTrigger>\r\n      <Enabled>true</Enabled>\r\n      <StateName>7550BCA322028F02</StateName>\r\n    </WnfStateChangeTrigger>\r\n    <WnfStateChangeTrigger>\r\n      <Enabled>true</Enabled>\r\n      <StateName>7508BCA32E07C641</StateName>\r\n    </WnfStateChangeTrigger>\r\n    <EventTrigger>\r\n      <Enabled>true</Enabled>\r\n      <Subscription>&lt;QueryList&gt;&lt;Query Id=\""0\"" Path=\""System\""&gt;&lt;Select Path=\""System\""&gt;*[System[EventID=8202]]&lt;/Select&gt;&lt;/Query&gt;&lt;/QueryList&gt;</Subscription>\r\n    </EventTrigger>\r\n  </Triggers>\r\n  <Principals>\r\n    <Principal id=\""LocalSystem\"">\r\n      <UserId>S-1-5-18</UserId>\r\n      <RunLevel>LeastPrivilege</RunLevel>\r\n    </Principal>\r\n  </Principals>\r\n  <Settings>\r\n    <MultipleInstancesPolicy>IgnoreNew</MultipleInstancesPolicy>\r\n    <DisallowStartIfOnBatteries>false</DisallowStartIfOnBatteries>\r\n    <StopIfGoingOnBatteries>false</StopIfGoingOnBatteries>\r\n    <AllowHardTerminate>true</AllowHardTerminate>\r\n    <StartWhenAvailable>true</StartWhenAvailable>\r\n    <RunOnlyIfNetworkAvailable>true</RunOnlyIfNetworkAvailable>\r\n    <IdleSettings>\r\n      <StopOnIdleEnd>false</StopOnIdleEnd>\r\n      <RestartOnIdle>false</RestartOnIdle>\r\n    </IdleSettings>\r\n    <AllowStartOnDemand>true</AllowStartOnDemand>\r\n    <Enabled>true</Enabled>\r\n    <Hidden>false</Hidden>\r\n    <RunOnlyIfIdle>false</RunOnlyIfIdle>\r\n    <DisallowStartOnRemoteAppSession>false</DisallowStartOnRemoteAppSession>\r\n    <UseUnifiedSchedulingEngine>true</UseUnifiedSchedulingEngine>\r\n    <WakeToRun>false</WakeToRun>\r\n    <ExecutionTimeLimit>PT72H</ExecutionTimeLimit>\r\n    <Priority>7</Priority>\r\n  </Settings>\r\n  <Actions Context=\""LocalSystem\"">\r\n    <Exec>\r\n      <Command>%systemroot%\\system32\\usoclient.exe</Command>\r\n      <Arguments>StartScan</Arguments>\r\n    </Exec>\r\n  </Actions>\r\n</Task>"",Arg3=0x6,Arg4=0x7bc1fd2e0,Arg5=0x7bc1fd2c0,Arg6=0x3,Arg7=0x7bc1fd2a0,Arg8=0x1eea31060e0

...

regmon Time=1648746071.963075,PID=4776,PPID=600,TID=2436,ProcessName=""\\Device\\HarddiskVolume2\\Windows\\System32\\svchost.exe"",Method=NtSetValueKey,Key=""\\REGISTRY\\MACHINE\\SYSTEM\\SYSTEM\\WAAS\\WAASMEDIC\\TASKSTORE"",ValueName=""Schedule Scan"",Value=""'Microsoft\\Windows\\UpdateOrchestrator','<?xml version=\""1.0\"" encoding=\""UTF-16\""?>\r\n<Task version=\""1.6\"" xmlns=\""http://schemas.microsoft.com/windows/2004/02/mit/task\"">\r\n  <RegistrationInfo>\r\n    <Source>Microsoft Corporation</Source>\r\n    <Author>Microsoft Corporation</Author>\r\n    <Version>1.0</Version>\r\n    <Description>This task performs a scheduled Windows Update scan.</Description>\r\n    <URI>\\Microsoft\\Windows\\UpdateOrchestrator\\Schedule Scan</URI>\r\n    <SecurityDescriptor>D:P(A;;FA;;;SY)(A;;FRFX;;;LS)(A;;FRFX;;;BA)</SecurityDescriptor>\r\n  </RegistrationInfo>\r\n  <Triggers>\r\n    <TimeTrigger>\r\n      <Repetition>\r\n        <Interval>PT22H</Interval>\r\n        <StopAtDurationEnd>false</StopAtDurationEnd>\r\n      </Repetition>\r\n      <StartBoundary>2022-03-28T21:05:23+03:00</StartBoundary>\r\n      <Enabled>true</Enabled>\r\n      <RandomDelay>PT4H</RandomDelay>\r\n    </TimeTrigger>\r\n    <WnfStateChangeTrigger>\r\n      <Enabled>true</Enabled>\r\n      <Delay>PT2H5M</Delay>\r\n      <StateName>750CBCA3290B9641</StateName>\r\n      <Data>01</Data>\r\n      <DataOffset>0</DataOffset>\r\n    </WnfStateChangeTrigger>\r\n    <WnfStateChangeTrigger>\r\n      <Enabled>true</Enabled>\r\n      <StateName>7550BCA322028F02</StateName>\r\n    </WnfStateChangeTrigger>\r\n    <WnfStateChangeTrigger>\r\n      <Enabled>true</Enabled>\r\n      <StateName>7508BCA32E07C641</StateName>\r\n    </WnfStateChangeTrigger>\r\n    <EventTrigger>\r\n      <Enabled>true</Enabled>\r\n      <Subscription>&lt;QueryList&gt;&lt;Query Id=\""0\"" Path=\""System\""&gt;&lt;Select Path=\""System\""&gt;*[System[EventID=8202]]&lt;/Select&gt;&lt;/Query&gt;&lt;/QueryList&gt;</Subscription>\r\n    </EventTrigger>\r\n  </Triggers>\r\n  <Principals>\r\n    <Principal id=\""LocalSystem\"">\r\n      <UserId>S-1-5-18</UserId>\r\n      <RunLevel>LeastPrivilege</RunLevel>\r\n    </Principal>\r\n  </Principals>\r\n  <Settings>\r\n    <MultipleInstancesPolicy>IgnoreNew</MultipleInstancesPolicy>\r\n    <DisallowStartIfOnBatteries>false</DisallowStartIfOnBatteries>\r\n    <StopIfGoingOnBatteries>false</StopIfGoingOnBatteries>\r\n    <AllowHardTerminate>true</AllowHardTerminate>\r\n    <StartWhenAvailable>true</StartWhenAvailable>\r\n    <RunOnlyIfNetworkAvailable>true</RunOnlyIfNetworkAvailable>\r\n    <IdleSettings>\r\n      <StopOnIdleEnd>false</StopOnIdleEnd>\r\n      <RestartOnIdle>false</RestartOnIdle>\r\n    </IdleSettings>\r\n    <AllowStartOnDemand>true</AllowStartOnDemand>\r\n    <Enabled>true</Enabled>\r\n    <Hidden>false</Hidden>\r\n    <RunOnlyIfIdle>false</RunOnlyIfIdle>\r\n    <DisallowStartOnRemoteAppSession>false</DisallowStartOnRemoteAppSession>\r\n    <UseUnifiedSchedulingEngine>true</UseUnifiedSchedulingEngine>\r\n    <WakeToRun>false</WakeToRun>\r\n    <ExecutionTimeLimit>PT72H</ExecutionTimeLimit>\r\n    <Priority>7</Priority>\r\n  </Settings>\r\n  <Actions Context=\""LocalSystem\"">\r\n    <Exec>\r\n      <Command>%systemroot%\\system32\\usoclient.exe</Command>\r\n      <Arguments>StartScan</Arguments>\r\n    </Exec>\r\n  </Actions>\r\n</Task>',''""","There have been noticed multiple errors in apimon and regmon output with multi-line strings and strings with quotes and other symbols. E.g.:
regmon Time=1646227127.515052,PID=5604,PPID=624,TID=1972,ProcessName=""\Device\HarddiskVolume2\Windows\System32\svchost.exe"",Method=NtSetValueKey,Key=""\REGISTRY\MACHINE\SYSTEM\SYSTEM\WAAS\WAASMEDIC\TASKSTORE"",ValueName=""Schedule Scan"",Value=""'Microsoft\Windows\UpdateOrchestrator','<?xml version=""1.0"" encoding=""UTF-16""?>
<Task version=""1.6"" xmlns=""http://schemas.microsoft.com/windows/2004/02/mit/task"">
  <RegistrationInfo>
    <Source>Microsoft Corporation</Source>
    <Author>Microsoft Corporation</Author>
    <Version>1.0</Version>
    <Description>This task performs a scheduled Windows Update scan.</Description>
    <URI>\Microsoft\Windows\UpdateOrchestrator\Schedule Scan</URI>
    <SecurityDescriptor>D:P(A;;FA;;;SY)(A;;FRFX;;;LS)(A;;FRFX;;;BA)</SecurityDescriptor>
  </RegistrationInfo>
  <Triggers>
    <TimeTrigger>
      <Repetition>
        <Interval>PT22H</Interval>
        <StopAtDurationEnd>false</StopAtDurationEnd>
      </Repetition>
      <StartBoundary>2022-03-01T20:30:29+03:00</StartBoundary>
      <Enabled>true</Enabled>
      <RandomDelay>PT4H</RandomDelay>
    </TimeTrigger>
    <WnfStateChangeTrigger>
      <Enabled>true</Enabled>
      <Delay>PT2H5M</Delay>
      <StateName>750CBCA3290B9641</StateName>
      <Data>01</Data>
      <DataOffset>0</DataOffset>
    </WnfStateChangeTrigger>
    <WnfStateChangeTrigger>
      <Enabled>true</Enabled>
      <StateName>7550BCA322028F02</StateName>
    </WnfStateChangeTrigger>
    <WnfStateChangeTrigger>
      <Enabled>true</Enabled>
      <StateName>7508BCA32E07C641</StateName>
    </WnfStateChangeTrigger>
    <EventTrigger>
      <Enabled>true</Enabled>
      <Subscription>&lt;QueryList&gt;&lt;Query Id=""0"" Path=""System""&gt;&lt;Select Path=""System""&gt;*[System[EventID=8202]]&lt;/Select&gt;&lt;/Query&gt;&lt;/QueryList&gt;</Subscription>
    </EventTrigger>
  </Triggers>
  <Principals>
    <Principal id=""LocalSystem"">
      <UserId>S-1-5-18</UserId>
      <RunLevel>LeastPrivilege</RunLevel>
    </Principal>
  </Principals>
  <Settings>
    <MultipleInstancesPolicy>IgnoreNew</MultipleInstancesPolicy>
    <DisallowStartIfOnBatteries>false</DisallowStartIfOnBatteries>
    <StopIfGoingOnBatteries>false</StopIfGoingOnBatteries>
    <AllowHardTerminate>true</AllowHardTerminate>
    <StartWhenAvailable>true</StartWhenAvailable>
    <RunOnlyIfNetworkAvailable>true</RunOnlyIfNetworkAvailable>
    <IdleSettings>
      <StopOnIdleEnd>false</StopOnIdleEnd>
      <RestartOnIdle>false</RestartOnIdle>
    </IdleSettings>
    <AllowStartOnDemand>true</AllowStartOnDemand>
    <Enabled>true</Enabled>
    <Hidden>false</Hidden>
    <RunOnlyIfIdle>false</RunOnlyIfIdle>
    <DisallowStartOnRemoteAppSession>false</DisallowStartOnRemoteAppSession>
    <UseUnifiedSchedulingEngine>true</UseUnifiedSchedulingEngine>
    <WakeToRun>false</WakeToRun>
    <ExecutionTimeLimit>PT72H</ExecutionTimeLimit>
    <Priority>7</Priority>
  </Settings>
  <Actions Context=""LocalSystem"">
    <Exec>
      <Command>%systemroot%\system32\usoclient.exe</Command>
      <Arguments>StartScan</Arguments>
    </Exec>
  </Actions>
</Task>',''""

The GLib function g_strescape have been used as standard way to handle such strings. New output:
apimon Time=1648746071.951810,PID=4776,PPID=600,TID=2436,ProcessName=""\\Device\\HarddiskVolume2\\Windows\\System32\\svchost.exe"",Method=ITaskFolder::RegisterTask,Event=""api_called"",CLSID=""0F87369F-A4E5-4CFC-BD3E-73E6154572DD"",CalledFrom=0x7FF938FE64B3,ReturnValue=0x0,Arg0=0x1eea3105d70,Arg1=""Schedule Scan"",Arg2=""<?xml version=\""1.0\"" encoding=\""UTF-16\""?>\r\n<Task version=\""1.6\"" xmlns=\""http://schemas.microsoft.com/windows/2004/02/mit/task\"">\r\n  <RegistrationInfo>\r\n    <Source>Microsoft Corporation</Source>\r\n    <Author>Microsoft Corporation</Author>\r\n    <Version>1.0</Version>\r\n    <Description>This task performs a scheduled Windows Update scan.</Description>\r\n    <URI>\\Microsoft\\Windows\\UpdateOrchestrator\\Schedule Scan</URI>\r\n    <SecurityDescriptor>D:P(A;;FA;;;SY)(A;;FRFX;;;LS)(A;;FRFX;;;BA)</SecurityDescriptor>\r\n  </RegistrationInfo>\r\n  <Triggers>\r\n    <TimeTrigger>\r\n      <Repetition>\r\n        <Interval>PT22H</Interval>\r\n        <StopAtDurationEnd>false</StopAtDurationEnd>\r\n      </Repetition>\r\n      <StartBoundary>2022-03-28T21:05:23+03:00</StartBoundary>\r\n      <Enabled>true</Enabled>\r\n      <RandomDelay>PT4H</RandomDelay>\r\n    </TimeTrigger>\r\n    <WnfStateChangeTrigger>\r\n      <Enabled>true</Enabled>\r\n      <Delay>PT2H5M</Delay>\r\n      <StateName>750CBCA3290B9641</StateName>\r\n      <Data>01</Data>\r\n      <DataOffset>0</DataOffset>\r\n    </WnfStateChangeTrigger>\r\n    <WnfStateChangeTrigger>\r\n      <Enabled>true</Enabled>\r\n      <StateName>7550BCA322028F02</StateName>\r\n    </WnfStateChangeTrigger>\r\n    <WnfStateChangeTrigger>\r\n      <Enabled>true</Enabled>\r\n      <StateName>7508BCA32E07C641</StateName>\r\n    </WnfStateChangeTrigger>\r\n    <EventTrigger>\r\n      <Enabled>true</Enabled>\r\n      <Subscription>&lt;QueryList&gt;&lt;Query Id=\""0\"" Path=\""System\""&gt;&lt;Select Path=\""System\""&gt;*[System[EventID=8202]]&lt;/Select&gt;&lt;/Query&gt;&lt;/QueryList&gt;</Subscription>\r\n    </EventTrigger>\r\n  </Triggers>\r\n  <Principals>\r\n    <Principal id=\""LocalSystem\"">\r\n      <UserId>S-1-5-18</UserId>\r\n      <RunLevel>LeastPrivilege</RunLevel>\r\n    </Principal>\r\n  </Principals>\r\n  <Settings>\r\n    <MultipleInstancesPolicy>IgnoreNew</MultipleInstancesPolicy>\r\n    <DisallowStartIfOnBatteries>false</DisallowStartIfOnBatteries>\r\n    <StopIfGoingOnBatteries>false</StopIfGoingOnBatteries>\r\n    <AllowHardTerminate>true</AllowHardTerminate>\r\n    <StartWhenAvailable>true</StartWhenAvailable>\r\n    <RunOnlyIfNetworkAvailable>true</RunOnlyIfNetworkAvailable>\r\n    <IdleSettings>\r\n      <StopOnIdleEnd>false</StopOnIdleEnd>\r\n      <RestartOnIdle>false</RestartOnIdle>\r\n    </IdleSettings>\r\n    <AllowStartOnDemand>true</AllowStartOnDemand>\r\n    <Enabled>true</Enabled>\r\n    <Hidden>false</Hidden>\r\n    <RunOnlyIfIdle>false</RunOnlyIfIdle>\r\n    <DisallowStartOnRemoteAppSession>false</DisallowStartOnRemoteAppSession>\r\n    <UseUnifiedSchedulingEngine>true</UseUnifiedSchedulingEngine>\r\n    <WakeToRun>false</WakeToRun>\r\n    <ExecutionTimeLimit>PT72H</ExecutionTimeLimit>\r\n    <Priority>7</Priority>\r\n  </Settings>\r\n  <Actions Context=\""LocalSystem\"">\r\n    <Exec>\r\n      <Command>%systemroot%\\system32\\usoclient.exe</Command>\r\n      <Arguments>StartScan</Arguments>\r\n    </Exec>\r\n  </Actions>\r\n</Task>"",Arg3=0x6,Arg4=0x7bc1fd2e0,Arg5=0x7bc1fd2c0,Arg6=0x3,Arg7=0x7bc1fd2a0,Arg8=0x1eea31060e0

...

regmon Time=1648746071.963075,PID=4776,PPID=600,TID=2436,ProcessName=""\\Device\\HarddiskVolume2\\Windows\\System32\\svchost.exe"",Method=NtSetValueKey,Key=""\\REGISTRY\\MACHINE\\SYSTEM\\SYSTEM\\WAAS\\WAASMEDIC\\TASKSTORE"",ValueName=""Schedule Scan"",Value=""'Microsoft\\Windows\\UpdateOrchestrator','<?xml version=\""1.0\"" encoding=\""UTF-16\""?>\r\n<Task version=\""1.6\"" xmlns=\""http://schemas.microsoft.com/windows/2004/02/mit/task\"">\r\n  <RegistrationInfo>\r\n    <Source>Microsoft Corporation</Source>\r\n    <Author>Microsoft Corporation</Author>\r\n    <Version>1.0</Version>\r\n    <Description>This task performs a scheduled Windows Update scan.</Description>\r\n    <URI>\\Microsoft\\Windows\\UpdateOrchestrator\\Schedule Scan</URI>\r\n    <SecurityDescriptor>D:P(A;;FA;;;SY)(A;;FRFX;;;LS)(A;;FRFX;;;BA)</SecurityDescriptor>\r\n  </RegistrationInfo>\r\n  <Triggers>\r\n    <TimeTrigger>\r\n      <Repetition>\r\n        <Interval>PT22H</Interval>\r\n        <StopAtDurationEnd>false</StopAtDurationEnd>\r\n      </Repetition>\r\n      <StartBoundary>2022-03-28T21:05:23+03:00</StartBoundary>\r\n      <Enabled>true</Enabled>\r\n      <RandomDelay>PT4H</RandomDelay>\r\n    </TimeTrigger>\r\n    <WnfStateChangeTrigger>\r\n      <Enabled>true</Enabled>\r\n      <Delay>PT2H5M</Delay>\r\n      <StateName>750CBCA3290B9641</StateName>\r\n      <Data>01</Data>\r\n      <DataOffset>0</DataOffset>\r\n    </WnfStateChangeTrigger>\r\n    <WnfStateChangeTrigger>\r\n      <Enabled>true</Enabled>\r\n      <StateName>7550BCA322028F02</StateName>\r\n    </WnfStateChangeTrigger>\r\n    <WnfStateChangeTrigger>\r\n      <Enabled>true</Enabled>\r\n      <StateName>7508BCA32E07C641</StateName>\r\n    </WnfStateChangeTrigger>\r\n    <EventTrigger>\r\n      <Enabled>true</Enabled>\r\n      <Subscription>&lt;QueryList&gt;&lt;Query Id=\""0\"" Path=\""System\""&gt;&lt;Select Path=\""System\""&gt;*[System[EventID=8202]]&lt;/Select&gt;&lt;/Query&gt;&lt;/QueryList&gt;</Subscription>\r\n    </EventTrigger>\r\n  </Triggers>\r\n  <Principals>\r\n    <Principal id=\""LocalSystem\"">\r\n      <UserId>S-1-5-18</UserId>\r\n      <RunLevel>LeastPrivilege</RunLevel>\r\n    </Principal>\r\n  </Principals>\r\n  <Settings>\r\n    <MultipleInstancesPolicy>IgnoreNew</MultipleInstancesPolicy>\r\n    <DisallowStartIfOnBatteries>false</DisallowStartIfOnBatteries>\r\n    <StopIfGoingOnBatteries>false</StopIfGoingOnBatteries>\r\n    <AllowHardTerminate>true</AllowHardTerminate>\r\n    <StartWhenAvailable>true</StartWhenAvailable>\r\n    <RunOnlyIfNetworkAvailable>true</RunOnlyIfNetworkAvailable>\r\n    <IdleSettings>\r\n      <StopOnIdleEnd>false</StopOnIdleEnd>\r\n      <RestartOnIdle>false</RestartOnIdle>\r\n    </IdleSettings>\r\n    <AllowStartOnDemand>true</AllowStartOnDemand>\r\n    <Enabled>true</Enabled>\r\n    <Hidden>false</Hidden>\r\n    <RunOnlyIfIdle>false</RunOnlyIfIdle>\r\n    <DisallowStartOnRemoteAppSession>false</DisallowStartOnRemoteAppSession>\r\n    <UseUnifiedSchedulingEngine>true</UseUnifiedSchedulingEngine>\r\n    <WakeToRun>false</WakeToRun>\r\n    <ExecutionTimeLimit>PT72H</ExecutionTimeLimit>\r\n    <Priority>7</Priority>\r\n  </Settings>\r\n  <Actions Context=\""LocalSystem\"">\r\n    <Exec>\r\n      <Command>%systemroot%\\system32\\usoclient.exe</Command>\r\n      <Arguments>StartScan</Arguments>\r\n    </Exec>\r\n  </Actions>\r\n</Task>',''""",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1409,2022-04-01T09:06:29Z,2022-04-01T14:58:44Z,2022-04-01T16:53:00Z,MERGED,True,3,36,2,https://github.com/skvl,Fix string escaping with library function g_strescape,1,[],https://github.com/tklengyel/drakvuf/pull/1409,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1409#issuecomment-1085649003,"There have been noticed multiple errors in apimon and regmon output with multi-line strings and strings with quotes and other symbols. E.g.:
regmon Time=1646227127.515052,PID=5604,PPID=624,TID=1972,ProcessName=""\Device\HarddiskVolume2\Windows\System32\svchost.exe"",Method=NtSetValueKey,Key=""\REGISTRY\MACHINE\SYSTEM\SYSTEM\WAAS\WAASMEDIC\TASKSTORE"",ValueName=""Schedule Scan"",Value=""'Microsoft\Windows\UpdateOrchestrator','<?xml version=""1.0"" encoding=""UTF-16""?>
<Task version=""1.6"" xmlns=""http://schemas.microsoft.com/windows/2004/02/mit/task"">
  <RegistrationInfo>
    <Source>Microsoft Corporation</Source>
    <Author>Microsoft Corporation</Author>
    <Version>1.0</Version>
    <Description>This task performs a scheduled Windows Update scan.</Description>
    <URI>\Microsoft\Windows\UpdateOrchestrator\Schedule Scan</URI>
    <SecurityDescriptor>D:P(A;;FA;;;SY)(A;;FRFX;;;LS)(A;;FRFX;;;BA)</SecurityDescriptor>
  </RegistrationInfo>
  <Triggers>
    <TimeTrigger>
      <Repetition>
        <Interval>PT22H</Interval>
        <StopAtDurationEnd>false</StopAtDurationEnd>
      </Repetition>
      <StartBoundary>2022-03-01T20:30:29+03:00</StartBoundary>
      <Enabled>true</Enabled>
      <RandomDelay>PT4H</RandomDelay>
    </TimeTrigger>
    <WnfStateChangeTrigger>
      <Enabled>true</Enabled>
      <Delay>PT2H5M</Delay>
      <StateName>750CBCA3290B9641</StateName>
      <Data>01</Data>
      <DataOffset>0</DataOffset>
    </WnfStateChangeTrigger>
    <WnfStateChangeTrigger>
      <Enabled>true</Enabled>
      <StateName>7550BCA322028F02</StateName>
    </WnfStateChangeTrigger>
    <WnfStateChangeTrigger>
      <Enabled>true</Enabled>
      <StateName>7508BCA32E07C641</StateName>
    </WnfStateChangeTrigger>
    <EventTrigger>
      <Enabled>true</Enabled>
      <Subscription>&lt;QueryList&gt;&lt;Query Id=""0"" Path=""System""&gt;&lt;Select Path=""System""&gt;*[System[EventID=8202]]&lt;/Select&gt;&lt;/Query&gt;&lt;/QueryList&gt;</Subscription>
    </EventTrigger>
  </Triggers>
  <Principals>
    <Principal id=""LocalSystem"">
      <UserId>S-1-5-18</UserId>
      <RunLevel>LeastPrivilege</RunLevel>
    </Principal>
  </Principals>
  <Settings>
    <MultipleInstancesPolicy>IgnoreNew</MultipleInstancesPolicy>
    <DisallowStartIfOnBatteries>false</DisallowStartIfOnBatteries>
    <StopIfGoingOnBatteries>false</StopIfGoingOnBatteries>
    <AllowHardTerminate>true</AllowHardTerminate>
    <StartWhenAvailable>true</StartWhenAvailable>
    <RunOnlyIfNetworkAvailable>true</RunOnlyIfNetworkAvailable>
    <IdleSettings>
      <StopOnIdleEnd>false</StopOnIdleEnd>
      <RestartOnIdle>false</RestartOnIdle>
    </IdleSettings>
    <AllowStartOnDemand>true</AllowStartOnDemand>
    <Enabled>true</Enabled>
    <Hidden>false</Hidden>
    <RunOnlyIfIdle>false</RunOnlyIfIdle>
    <DisallowStartOnRemoteAppSession>false</DisallowStartOnRemoteAppSession>
    <UseUnifiedSchedulingEngine>true</UseUnifiedSchedulingEngine>
    <WakeToRun>false</WakeToRun>
    <ExecutionTimeLimit>PT72H</ExecutionTimeLimit>
    <Priority>7</Priority>
  </Settings>
  <Actions Context=""LocalSystem"">
    <Exec>
      <Command>%systemroot%\system32\usoclient.exe</Command>
      <Arguments>StartScan</Arguments>
    </Exec>
  </Actions>
</Task>',''""

The GLib function g_strescape have been used as standard way to handle such strings. New output:
apimon Time=1648746071.951810,PID=4776,PPID=600,TID=2436,ProcessName=""\\Device\\HarddiskVolume2\\Windows\\System32\\svchost.exe"",Method=ITaskFolder::RegisterTask,Event=""api_called"",CLSID=""0F87369F-A4E5-4CFC-BD3E-73E6154572DD"",CalledFrom=0x7FF938FE64B3,ReturnValue=0x0,Arg0=0x1eea3105d70,Arg1=""Schedule Scan"",Arg2=""<?xml version=\""1.0\"" encoding=\""UTF-16\""?>\r\n<Task version=\""1.6\"" xmlns=\""http://schemas.microsoft.com/windows/2004/02/mit/task\"">\r\n  <RegistrationInfo>\r\n    <Source>Microsoft Corporation</Source>\r\n    <Author>Microsoft Corporation</Author>\r\n    <Version>1.0</Version>\r\n    <Description>This task performs a scheduled Windows Update scan.</Description>\r\n    <URI>\\Microsoft\\Windows\\UpdateOrchestrator\\Schedule Scan</URI>\r\n    <SecurityDescriptor>D:P(A;;FA;;;SY)(A;;FRFX;;;LS)(A;;FRFX;;;BA)</SecurityDescriptor>\r\n  </RegistrationInfo>\r\n  <Triggers>\r\n    <TimeTrigger>\r\n      <Repetition>\r\n        <Interval>PT22H</Interval>\r\n        <StopAtDurationEnd>false</StopAtDurationEnd>\r\n      </Repetition>\r\n      <StartBoundary>2022-03-28T21:05:23+03:00</StartBoundary>\r\n      <Enabled>true</Enabled>\r\n      <RandomDelay>PT4H</RandomDelay>\r\n    </TimeTrigger>\r\n    <WnfStateChangeTrigger>\r\n      <Enabled>true</Enabled>\r\n      <Delay>PT2H5M</Delay>\r\n      <StateName>750CBCA3290B9641</StateName>\r\n      <Data>01</Data>\r\n      <DataOffset>0</DataOffset>\r\n    </WnfStateChangeTrigger>\r\n    <WnfStateChangeTrigger>\r\n      <Enabled>true</Enabled>\r\n      <StateName>7550BCA322028F02</StateName>\r\n    </WnfStateChangeTrigger>\r\n    <WnfStateChangeTrigger>\r\n      <Enabled>true</Enabled>\r\n      <StateName>7508BCA32E07C641</StateName>\r\n    </WnfStateChangeTrigger>\r\n    <EventTrigger>\r\n      <Enabled>true</Enabled>\r\n      <Subscription>&lt;QueryList&gt;&lt;Query Id=\""0\"" Path=\""System\""&gt;&lt;Select Path=\""System\""&gt;*[System[EventID=8202]]&lt;/Select&gt;&lt;/Query&gt;&lt;/QueryList&gt;</Subscription>\r\n    </EventTrigger>\r\n  </Triggers>\r\n  <Principals>\r\n    <Principal id=\""LocalSystem\"">\r\n      <UserId>S-1-5-18</UserId>\r\n      <RunLevel>LeastPrivilege</RunLevel>\r\n    </Principal>\r\n  </Principals>\r\n  <Settings>\r\n    <MultipleInstancesPolicy>IgnoreNew</MultipleInstancesPolicy>\r\n    <DisallowStartIfOnBatteries>false</DisallowStartIfOnBatteries>\r\n    <StopIfGoingOnBatteries>false</StopIfGoingOnBatteries>\r\n    <AllowHardTerminate>true</AllowHardTerminate>\r\n    <StartWhenAvailable>true</StartWhenAvailable>\r\n    <RunOnlyIfNetworkAvailable>true</RunOnlyIfNetworkAvailable>\r\n    <IdleSettings>\r\n      <StopOnIdleEnd>false</StopOnIdleEnd>\r\n      <RestartOnIdle>false</RestartOnIdle>\r\n    </IdleSettings>\r\n    <AllowStartOnDemand>true</AllowStartOnDemand>\r\n    <Enabled>true</Enabled>\r\n    <Hidden>false</Hidden>\r\n    <RunOnlyIfIdle>false</RunOnlyIfIdle>\r\n    <DisallowStartOnRemoteAppSession>false</DisallowStartOnRemoteAppSession>\r\n    <UseUnifiedSchedulingEngine>true</UseUnifiedSchedulingEngine>\r\n    <WakeToRun>false</WakeToRun>\r\n    <ExecutionTimeLimit>PT72H</ExecutionTimeLimit>\r\n    <Priority>7</Priority>\r\n  </Settings>\r\n  <Actions Context=\""LocalSystem\"">\r\n    <Exec>\r\n      <Command>%systemroot%\\system32\\usoclient.exe</Command>\r\n      <Arguments>StartScan</Arguments>\r\n    </Exec>\r\n  </Actions>\r\n</Task>"",Arg3=0x6,Arg4=0x7bc1fd2e0,Arg5=0x7bc1fd2c0,Arg6=0x3,Arg7=0x7bc1fd2a0,Arg8=0x1eea31060e0

...

regmon Time=1648746071.963075,PID=4776,PPID=600,TID=2436,ProcessName=""\\Device\\HarddiskVolume2\\Windows\\System32\\svchost.exe"",Method=NtSetValueKey,Key=""\\REGISTRY\\MACHINE\\SYSTEM\\SYSTEM\\WAAS\\WAASMEDIC\\TASKSTORE"",ValueName=""Schedule Scan"",Value=""'Microsoft\\Windows\\UpdateOrchestrator','<?xml version=\""1.0\"" encoding=\""UTF-16\""?>\r\n<Task version=\""1.6\"" xmlns=\""http://schemas.microsoft.com/windows/2004/02/mit/task\"">\r\n  <RegistrationInfo>\r\n    <Source>Microsoft Corporation</Source>\r\n    <Author>Microsoft Corporation</Author>\r\n    <Version>1.0</Version>\r\n    <Description>This task performs a scheduled Windows Update scan.</Description>\r\n    <URI>\\Microsoft\\Windows\\UpdateOrchestrator\\Schedule Scan</URI>\r\n    <SecurityDescriptor>D:P(A;;FA;;;SY)(A;;FRFX;;;LS)(A;;FRFX;;;BA)</SecurityDescriptor>\r\n  </RegistrationInfo>\r\n  <Triggers>\r\n    <TimeTrigger>\r\n      <Repetition>\r\n        <Interval>PT22H</Interval>\r\n        <StopAtDurationEnd>false</StopAtDurationEnd>\r\n      </Repetition>\r\n      <StartBoundary>2022-03-28T21:05:23+03:00</StartBoundary>\r\n      <Enabled>true</Enabled>\r\n      <RandomDelay>PT4H</RandomDelay>\r\n    </TimeTrigger>\r\n    <WnfStateChangeTrigger>\r\n      <Enabled>true</Enabled>\r\n      <Delay>PT2H5M</Delay>\r\n      <StateName>750CBCA3290B9641</StateName>\r\n      <Data>01</Data>\r\n      <DataOffset>0</DataOffset>\r\n    </WnfStateChangeTrigger>\r\n    <WnfStateChangeTrigger>\r\n      <Enabled>true</Enabled>\r\n      <StateName>7550BCA322028F02</StateName>\r\n    </WnfStateChangeTrigger>\r\n    <WnfStateChangeTrigger>\r\n      <Enabled>true</Enabled>\r\n      <StateName>7508BCA32E07C641</StateName>\r\n    </WnfStateChangeTrigger>\r\n    <EventTrigger>\r\n      <Enabled>true</Enabled>\r\n      <Subscription>&lt;QueryList&gt;&lt;Query Id=\""0\"" Path=\""System\""&gt;&lt;Select Path=\""System\""&gt;*[System[EventID=8202]]&lt;/Select&gt;&lt;/Query&gt;&lt;/QueryList&gt;</Subscription>\r\n    </EventTrigger>\r\n  </Triggers>\r\n  <Principals>\r\n    <Principal id=\""LocalSystem\"">\r\n      <UserId>S-1-5-18</UserId>\r\n      <RunLevel>LeastPrivilege</RunLevel>\r\n    </Principal>\r\n  </Principals>\r\n  <Settings>\r\n    <MultipleInstancesPolicy>IgnoreNew</MultipleInstancesPolicy>\r\n    <DisallowStartIfOnBatteries>false</DisallowStartIfOnBatteries>\r\n    <StopIfGoingOnBatteries>false</StopIfGoingOnBatteries>\r\n    <AllowHardTerminate>true</AllowHardTerminate>\r\n    <StartWhenAvailable>true</StartWhenAvailable>\r\n    <RunOnlyIfNetworkAvailable>true</RunOnlyIfNetworkAvailable>\r\n    <IdleSettings>\r\n      <StopOnIdleEnd>false</StopOnIdleEnd>\r\n      <RestartOnIdle>false</RestartOnIdle>\r\n    </IdleSettings>\r\n    <AllowStartOnDemand>true</AllowStartOnDemand>\r\n    <Enabled>true</Enabled>\r\n    <Hidden>false</Hidden>\r\n    <RunOnlyIfIdle>false</RunOnlyIfIdle>\r\n    <DisallowStartOnRemoteAppSession>false</DisallowStartOnRemoteAppSession>\r\n    <UseUnifiedSchedulingEngine>true</UseUnifiedSchedulingEngine>\r\n    <WakeToRun>false</WakeToRun>\r\n    <ExecutionTimeLimit>PT72H</ExecutionTimeLimit>\r\n    <Priority>7</Priority>\r\n  </Settings>\r\n  <Actions Context=\""LocalSystem\"">\r\n    <Exec>\r\n      <Command>%systemroot%\\system32\\usoclient.exe</Command>\r\n      <Arguments>StartScan</Arguments>\r\n    </Exec>\r\n  </Actions>\r\n</Task>',''""",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1409,2022-04-01T09:06:29Z,2022-04-01T14:58:44Z,2022-04-01T16:53:00Z,MERGED,True,3,36,2,https://github.com/skvl,Fix string escaping with library function g_strescape,1,[],https://github.com/tklengyel/drakvuf/pull/1409,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1409#issuecomment-1085900536,"There have been noticed multiple errors in apimon and regmon output with multi-line strings and strings with quotes and other symbols. E.g.:
regmon Time=1646227127.515052,PID=5604,PPID=624,TID=1972,ProcessName=""\Device\HarddiskVolume2\Windows\System32\svchost.exe"",Method=NtSetValueKey,Key=""\REGISTRY\MACHINE\SYSTEM\SYSTEM\WAAS\WAASMEDIC\TASKSTORE"",ValueName=""Schedule Scan"",Value=""'Microsoft\Windows\UpdateOrchestrator','<?xml version=""1.0"" encoding=""UTF-16""?>
<Task version=""1.6"" xmlns=""http://schemas.microsoft.com/windows/2004/02/mit/task"">
  <RegistrationInfo>
    <Source>Microsoft Corporation</Source>
    <Author>Microsoft Corporation</Author>
    <Version>1.0</Version>
    <Description>This task performs a scheduled Windows Update scan.</Description>
    <URI>\Microsoft\Windows\UpdateOrchestrator\Schedule Scan</URI>
    <SecurityDescriptor>D:P(A;;FA;;;SY)(A;;FRFX;;;LS)(A;;FRFX;;;BA)</SecurityDescriptor>
  </RegistrationInfo>
  <Triggers>
    <TimeTrigger>
      <Repetition>
        <Interval>PT22H</Interval>
        <StopAtDurationEnd>false</StopAtDurationEnd>
      </Repetition>
      <StartBoundary>2022-03-01T20:30:29+03:00</StartBoundary>
      <Enabled>true</Enabled>
      <RandomDelay>PT4H</RandomDelay>
    </TimeTrigger>
    <WnfStateChangeTrigger>
      <Enabled>true</Enabled>
      <Delay>PT2H5M</Delay>
      <StateName>750CBCA3290B9641</StateName>
      <Data>01</Data>
      <DataOffset>0</DataOffset>
    </WnfStateChangeTrigger>
    <WnfStateChangeTrigger>
      <Enabled>true</Enabled>
      <StateName>7550BCA322028F02</StateName>
    </WnfStateChangeTrigger>
    <WnfStateChangeTrigger>
      <Enabled>true</Enabled>
      <StateName>7508BCA32E07C641</StateName>
    </WnfStateChangeTrigger>
    <EventTrigger>
      <Enabled>true</Enabled>
      <Subscription>&lt;QueryList&gt;&lt;Query Id=""0"" Path=""System""&gt;&lt;Select Path=""System""&gt;*[System[EventID=8202]]&lt;/Select&gt;&lt;/Query&gt;&lt;/QueryList&gt;</Subscription>
    </EventTrigger>
  </Triggers>
  <Principals>
    <Principal id=""LocalSystem"">
      <UserId>S-1-5-18</UserId>
      <RunLevel>LeastPrivilege</RunLevel>
    </Principal>
  </Principals>
  <Settings>
    <MultipleInstancesPolicy>IgnoreNew</MultipleInstancesPolicy>
    <DisallowStartIfOnBatteries>false</DisallowStartIfOnBatteries>
    <StopIfGoingOnBatteries>false</StopIfGoingOnBatteries>
    <AllowHardTerminate>true</AllowHardTerminate>
    <StartWhenAvailable>true</StartWhenAvailable>
    <RunOnlyIfNetworkAvailable>true</RunOnlyIfNetworkAvailable>
    <IdleSettings>
      <StopOnIdleEnd>false</StopOnIdleEnd>
      <RestartOnIdle>false</RestartOnIdle>
    </IdleSettings>
    <AllowStartOnDemand>true</AllowStartOnDemand>
    <Enabled>true</Enabled>
    <Hidden>false</Hidden>
    <RunOnlyIfIdle>false</RunOnlyIfIdle>
    <DisallowStartOnRemoteAppSession>false</DisallowStartOnRemoteAppSession>
    <UseUnifiedSchedulingEngine>true</UseUnifiedSchedulingEngine>
    <WakeToRun>false</WakeToRun>
    <ExecutionTimeLimit>PT72H</ExecutionTimeLimit>
    <Priority>7</Priority>
  </Settings>
  <Actions Context=""LocalSystem"">
    <Exec>
      <Command>%systemroot%\system32\usoclient.exe</Command>
      <Arguments>StartScan</Arguments>
    </Exec>
  </Actions>
</Task>',''""

The GLib function g_strescape have been used as standard way to handle such strings. New output:
apimon Time=1648746071.951810,PID=4776,PPID=600,TID=2436,ProcessName=""\\Device\\HarddiskVolume2\\Windows\\System32\\svchost.exe"",Method=ITaskFolder::RegisterTask,Event=""api_called"",CLSID=""0F87369F-A4E5-4CFC-BD3E-73E6154572DD"",CalledFrom=0x7FF938FE64B3,ReturnValue=0x0,Arg0=0x1eea3105d70,Arg1=""Schedule Scan"",Arg2=""<?xml version=\""1.0\"" encoding=\""UTF-16\""?>\r\n<Task version=\""1.6\"" xmlns=\""http://schemas.microsoft.com/windows/2004/02/mit/task\"">\r\n  <RegistrationInfo>\r\n    <Source>Microsoft Corporation</Source>\r\n    <Author>Microsoft Corporation</Author>\r\n    <Version>1.0</Version>\r\n    <Description>This task performs a scheduled Windows Update scan.</Description>\r\n    <URI>\\Microsoft\\Windows\\UpdateOrchestrator\\Schedule Scan</URI>\r\n    <SecurityDescriptor>D:P(A;;FA;;;SY)(A;;FRFX;;;LS)(A;;FRFX;;;BA)</SecurityDescriptor>\r\n  </RegistrationInfo>\r\n  <Triggers>\r\n    <TimeTrigger>\r\n      <Repetition>\r\n        <Interval>PT22H</Interval>\r\n        <StopAtDurationEnd>false</StopAtDurationEnd>\r\n      </Repetition>\r\n      <StartBoundary>2022-03-28T21:05:23+03:00</StartBoundary>\r\n      <Enabled>true</Enabled>\r\n      <RandomDelay>PT4H</RandomDelay>\r\n    </TimeTrigger>\r\n    <WnfStateChangeTrigger>\r\n      <Enabled>true</Enabled>\r\n      <Delay>PT2H5M</Delay>\r\n      <StateName>750CBCA3290B9641</StateName>\r\n      <Data>01</Data>\r\n      <DataOffset>0</DataOffset>\r\n    </WnfStateChangeTrigger>\r\n    <WnfStateChangeTrigger>\r\n      <Enabled>true</Enabled>\r\n      <StateName>7550BCA322028F02</StateName>\r\n    </WnfStateChangeTrigger>\r\n    <WnfStateChangeTrigger>\r\n      <Enabled>true</Enabled>\r\n      <StateName>7508BCA32E07C641</StateName>\r\n    </WnfStateChangeTrigger>\r\n    <EventTrigger>\r\n      <Enabled>true</Enabled>\r\n      <Subscription>&lt;QueryList&gt;&lt;Query Id=\""0\"" Path=\""System\""&gt;&lt;Select Path=\""System\""&gt;*[System[EventID=8202]]&lt;/Select&gt;&lt;/Query&gt;&lt;/QueryList&gt;</Subscription>\r\n    </EventTrigger>\r\n  </Triggers>\r\n  <Principals>\r\n    <Principal id=\""LocalSystem\"">\r\n      <UserId>S-1-5-18</UserId>\r\n      <RunLevel>LeastPrivilege</RunLevel>\r\n    </Principal>\r\n  </Principals>\r\n  <Settings>\r\n    <MultipleInstancesPolicy>IgnoreNew</MultipleInstancesPolicy>\r\n    <DisallowStartIfOnBatteries>false</DisallowStartIfOnBatteries>\r\n    <StopIfGoingOnBatteries>false</StopIfGoingOnBatteries>\r\n    <AllowHardTerminate>true</AllowHardTerminate>\r\n    <StartWhenAvailable>true</StartWhenAvailable>\r\n    <RunOnlyIfNetworkAvailable>true</RunOnlyIfNetworkAvailable>\r\n    <IdleSettings>\r\n      <StopOnIdleEnd>false</StopOnIdleEnd>\r\n      <RestartOnIdle>false</RestartOnIdle>\r\n    </IdleSettings>\r\n    <AllowStartOnDemand>true</AllowStartOnDemand>\r\n    <Enabled>true</Enabled>\r\n    <Hidden>false</Hidden>\r\n    <RunOnlyIfIdle>false</RunOnlyIfIdle>\r\n    <DisallowStartOnRemoteAppSession>false</DisallowStartOnRemoteAppSession>\r\n    <UseUnifiedSchedulingEngine>true</UseUnifiedSchedulingEngine>\r\n    <WakeToRun>false</WakeToRun>\r\n    <ExecutionTimeLimit>PT72H</ExecutionTimeLimit>\r\n    <Priority>7</Priority>\r\n  </Settings>\r\n  <Actions Context=\""LocalSystem\"">\r\n    <Exec>\r\n      <Command>%systemroot%\\system32\\usoclient.exe</Command>\r\n      <Arguments>StartScan</Arguments>\r\n    </Exec>\r\n  </Actions>\r\n</Task>"",Arg3=0x6,Arg4=0x7bc1fd2e0,Arg5=0x7bc1fd2c0,Arg6=0x3,Arg7=0x7bc1fd2a0,Arg8=0x1eea31060e0

...

regmon Time=1648746071.963075,PID=4776,PPID=600,TID=2436,ProcessName=""\\Device\\HarddiskVolume2\\Windows\\System32\\svchost.exe"",Method=NtSetValueKey,Key=""\\REGISTRY\\MACHINE\\SYSTEM\\SYSTEM\\WAAS\\WAASMEDIC\\TASKSTORE"",ValueName=""Schedule Scan"",Value=""'Microsoft\\Windows\\UpdateOrchestrator','<?xml version=\""1.0\"" encoding=\""UTF-16\""?>\r\n<Task version=\""1.6\"" xmlns=\""http://schemas.microsoft.com/windows/2004/02/mit/task\"">\r\n  <RegistrationInfo>\r\n    <Source>Microsoft Corporation</Source>\r\n    <Author>Microsoft Corporation</Author>\r\n    <Version>1.0</Version>\r\n    <Description>This task performs a scheduled Windows Update scan.</Description>\r\n    <URI>\\Microsoft\\Windows\\UpdateOrchestrator\\Schedule Scan</URI>\r\n    <SecurityDescriptor>D:P(A;;FA;;;SY)(A;;FRFX;;;LS)(A;;FRFX;;;BA)</SecurityDescriptor>\r\n  </RegistrationInfo>\r\n  <Triggers>\r\n    <TimeTrigger>\r\n      <Repetition>\r\n        <Interval>PT22H</Interval>\r\n        <StopAtDurationEnd>false</StopAtDurationEnd>\r\n      </Repetition>\r\n      <StartBoundary>2022-03-28T21:05:23+03:00</StartBoundary>\r\n      <Enabled>true</Enabled>\r\n      <RandomDelay>PT4H</RandomDelay>\r\n    </TimeTrigger>\r\n    <WnfStateChangeTrigger>\r\n      <Enabled>true</Enabled>\r\n      <Delay>PT2H5M</Delay>\r\n      <StateName>750CBCA3290B9641</StateName>\r\n      <Data>01</Data>\r\n      <DataOffset>0</DataOffset>\r\n    </WnfStateChangeTrigger>\r\n    <WnfStateChangeTrigger>\r\n      <Enabled>true</Enabled>\r\n      <StateName>7550BCA322028F02</StateName>\r\n    </WnfStateChangeTrigger>\r\n    <WnfStateChangeTrigger>\r\n      <Enabled>true</Enabled>\r\n      <StateName>7508BCA32E07C641</StateName>\r\n    </WnfStateChangeTrigger>\r\n    <EventTrigger>\r\n      <Enabled>true</Enabled>\r\n      <Subscription>&lt;QueryList&gt;&lt;Query Id=\""0\"" Path=\""System\""&gt;&lt;Select Path=\""System\""&gt;*[System[EventID=8202]]&lt;/Select&gt;&lt;/Query&gt;&lt;/QueryList&gt;</Subscription>\r\n    </EventTrigger>\r\n  </Triggers>\r\n  <Principals>\r\n    <Principal id=\""LocalSystem\"">\r\n      <UserId>S-1-5-18</UserId>\r\n      <RunLevel>LeastPrivilege</RunLevel>\r\n    </Principal>\r\n  </Principals>\r\n  <Settings>\r\n    <MultipleInstancesPolicy>IgnoreNew</MultipleInstancesPolicy>\r\n    <DisallowStartIfOnBatteries>false</DisallowStartIfOnBatteries>\r\n    <StopIfGoingOnBatteries>false</StopIfGoingOnBatteries>\r\n    <AllowHardTerminate>true</AllowHardTerminate>\r\n    <StartWhenAvailable>true</StartWhenAvailable>\r\n    <RunOnlyIfNetworkAvailable>true</RunOnlyIfNetworkAvailable>\r\n    <IdleSettings>\r\n      <StopOnIdleEnd>false</StopOnIdleEnd>\r\n      <RestartOnIdle>false</RestartOnIdle>\r\n    </IdleSettings>\r\n    <AllowStartOnDemand>true</AllowStartOnDemand>\r\n    <Enabled>true</Enabled>\r\n    <Hidden>false</Hidden>\r\n    <RunOnlyIfIdle>false</RunOnlyIfIdle>\r\n    <DisallowStartOnRemoteAppSession>false</DisallowStartOnRemoteAppSession>\r\n    <UseUnifiedSchedulingEngine>true</UseUnifiedSchedulingEngine>\r\n    <WakeToRun>false</WakeToRun>\r\n    <ExecutionTimeLimit>PT72H</ExecutionTimeLimit>\r\n    <Priority>7</Priority>\r\n  </Settings>\r\n  <Actions Context=\""LocalSystem\"">\r\n    <Exec>\r\n      <Command>%systemroot%\\system32\\usoclient.exe</Command>\r\n      <Arguments>StartScan</Arguments>\r\n    </Exec>\r\n  </Actions>\r\n</Task>',''""",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1409,2022-04-01T09:06:29Z,2022-04-01T14:58:44Z,2022-04-01T16:53:00Z,MERGED,True,3,36,2,https://github.com/skvl,Fix string escaping with library function g_strescape,1,[],https://github.com/tklengyel/drakvuf/pull/1409,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1409#issuecomment-1086133134,"There have been noticed multiple errors in apimon and regmon output with multi-line strings and strings with quotes and other symbols. E.g.:
regmon Time=1646227127.515052,PID=5604,PPID=624,TID=1972,ProcessName=""\Device\HarddiskVolume2\Windows\System32\svchost.exe"",Method=NtSetValueKey,Key=""\REGISTRY\MACHINE\SYSTEM\SYSTEM\WAAS\WAASMEDIC\TASKSTORE"",ValueName=""Schedule Scan"",Value=""'Microsoft\Windows\UpdateOrchestrator','<?xml version=""1.0"" encoding=""UTF-16""?>
<Task version=""1.6"" xmlns=""http://schemas.microsoft.com/windows/2004/02/mit/task"">
  <RegistrationInfo>
    <Source>Microsoft Corporation</Source>
    <Author>Microsoft Corporation</Author>
    <Version>1.0</Version>
    <Description>This task performs a scheduled Windows Update scan.</Description>
    <URI>\Microsoft\Windows\UpdateOrchestrator\Schedule Scan</URI>
    <SecurityDescriptor>D:P(A;;FA;;;SY)(A;;FRFX;;;LS)(A;;FRFX;;;BA)</SecurityDescriptor>
  </RegistrationInfo>
  <Triggers>
    <TimeTrigger>
      <Repetition>
        <Interval>PT22H</Interval>
        <StopAtDurationEnd>false</StopAtDurationEnd>
      </Repetition>
      <StartBoundary>2022-03-01T20:30:29+03:00</StartBoundary>
      <Enabled>true</Enabled>
      <RandomDelay>PT4H</RandomDelay>
    </TimeTrigger>
    <WnfStateChangeTrigger>
      <Enabled>true</Enabled>
      <Delay>PT2H5M</Delay>
      <StateName>750CBCA3290B9641</StateName>
      <Data>01</Data>
      <DataOffset>0</DataOffset>
    </WnfStateChangeTrigger>
    <WnfStateChangeTrigger>
      <Enabled>true</Enabled>
      <StateName>7550BCA322028F02</StateName>
    </WnfStateChangeTrigger>
    <WnfStateChangeTrigger>
      <Enabled>true</Enabled>
      <StateName>7508BCA32E07C641</StateName>
    </WnfStateChangeTrigger>
    <EventTrigger>
      <Enabled>true</Enabled>
      <Subscription>&lt;QueryList&gt;&lt;Query Id=""0"" Path=""System""&gt;&lt;Select Path=""System""&gt;*[System[EventID=8202]]&lt;/Select&gt;&lt;/Query&gt;&lt;/QueryList&gt;</Subscription>
    </EventTrigger>
  </Triggers>
  <Principals>
    <Principal id=""LocalSystem"">
      <UserId>S-1-5-18</UserId>
      <RunLevel>LeastPrivilege</RunLevel>
    </Principal>
  </Principals>
  <Settings>
    <MultipleInstancesPolicy>IgnoreNew</MultipleInstancesPolicy>
    <DisallowStartIfOnBatteries>false</DisallowStartIfOnBatteries>
    <StopIfGoingOnBatteries>false</StopIfGoingOnBatteries>
    <AllowHardTerminate>true</AllowHardTerminate>
    <StartWhenAvailable>true</StartWhenAvailable>
    <RunOnlyIfNetworkAvailable>true</RunOnlyIfNetworkAvailable>
    <IdleSettings>
      <StopOnIdleEnd>false</StopOnIdleEnd>
      <RestartOnIdle>false</RestartOnIdle>
    </IdleSettings>
    <AllowStartOnDemand>true</AllowStartOnDemand>
    <Enabled>true</Enabled>
    <Hidden>false</Hidden>
    <RunOnlyIfIdle>false</RunOnlyIfIdle>
    <DisallowStartOnRemoteAppSession>false</DisallowStartOnRemoteAppSession>
    <UseUnifiedSchedulingEngine>true</UseUnifiedSchedulingEngine>
    <WakeToRun>false</WakeToRun>
    <ExecutionTimeLimit>PT72H</ExecutionTimeLimit>
    <Priority>7</Priority>
  </Settings>
  <Actions Context=""LocalSystem"">
    <Exec>
      <Command>%systemroot%\system32\usoclient.exe</Command>
      <Arguments>StartScan</Arguments>
    </Exec>
  </Actions>
</Task>',''""

The GLib function g_strescape have been used as standard way to handle such strings. New output:
apimon Time=1648746071.951810,PID=4776,PPID=600,TID=2436,ProcessName=""\\Device\\HarddiskVolume2\\Windows\\System32\\svchost.exe"",Method=ITaskFolder::RegisterTask,Event=""api_called"",CLSID=""0F87369F-A4E5-4CFC-BD3E-73E6154572DD"",CalledFrom=0x7FF938FE64B3,ReturnValue=0x0,Arg0=0x1eea3105d70,Arg1=""Schedule Scan"",Arg2=""<?xml version=\""1.0\"" encoding=\""UTF-16\""?>\r\n<Task version=\""1.6\"" xmlns=\""http://schemas.microsoft.com/windows/2004/02/mit/task\"">\r\n  <RegistrationInfo>\r\n    <Source>Microsoft Corporation</Source>\r\n    <Author>Microsoft Corporation</Author>\r\n    <Version>1.0</Version>\r\n    <Description>This task performs a scheduled Windows Update scan.</Description>\r\n    <URI>\\Microsoft\\Windows\\UpdateOrchestrator\\Schedule Scan</URI>\r\n    <SecurityDescriptor>D:P(A;;FA;;;SY)(A;;FRFX;;;LS)(A;;FRFX;;;BA)</SecurityDescriptor>\r\n  </RegistrationInfo>\r\n  <Triggers>\r\n    <TimeTrigger>\r\n      <Repetition>\r\n        <Interval>PT22H</Interval>\r\n        <StopAtDurationEnd>false</StopAtDurationEnd>\r\n      </Repetition>\r\n      <StartBoundary>2022-03-28T21:05:23+03:00</StartBoundary>\r\n      <Enabled>true</Enabled>\r\n      <RandomDelay>PT4H</RandomDelay>\r\n    </TimeTrigger>\r\n    <WnfStateChangeTrigger>\r\n      <Enabled>true</Enabled>\r\n      <Delay>PT2H5M</Delay>\r\n      <StateName>750CBCA3290B9641</StateName>\r\n      <Data>01</Data>\r\n      <DataOffset>0</DataOffset>\r\n    </WnfStateChangeTrigger>\r\n    <WnfStateChangeTrigger>\r\n      <Enabled>true</Enabled>\r\n      <StateName>7550BCA322028F02</StateName>\r\n    </WnfStateChangeTrigger>\r\n    <WnfStateChangeTrigger>\r\n      <Enabled>true</Enabled>\r\n      <StateName>7508BCA32E07C641</StateName>\r\n    </WnfStateChangeTrigger>\r\n    <EventTrigger>\r\n      <Enabled>true</Enabled>\r\n      <Subscription>&lt;QueryList&gt;&lt;Query Id=\""0\"" Path=\""System\""&gt;&lt;Select Path=\""System\""&gt;*[System[EventID=8202]]&lt;/Select&gt;&lt;/Query&gt;&lt;/QueryList&gt;</Subscription>\r\n    </EventTrigger>\r\n  </Triggers>\r\n  <Principals>\r\n    <Principal id=\""LocalSystem\"">\r\n      <UserId>S-1-5-18</UserId>\r\n      <RunLevel>LeastPrivilege</RunLevel>\r\n    </Principal>\r\n  </Principals>\r\n  <Settings>\r\n    <MultipleInstancesPolicy>IgnoreNew</MultipleInstancesPolicy>\r\n    <DisallowStartIfOnBatteries>false</DisallowStartIfOnBatteries>\r\n    <StopIfGoingOnBatteries>false</StopIfGoingOnBatteries>\r\n    <AllowHardTerminate>true</AllowHardTerminate>\r\n    <StartWhenAvailable>true</StartWhenAvailable>\r\n    <RunOnlyIfNetworkAvailable>true</RunOnlyIfNetworkAvailable>\r\n    <IdleSettings>\r\n      <StopOnIdleEnd>false</StopOnIdleEnd>\r\n      <RestartOnIdle>false</RestartOnIdle>\r\n    </IdleSettings>\r\n    <AllowStartOnDemand>true</AllowStartOnDemand>\r\n    <Enabled>true</Enabled>\r\n    <Hidden>false</Hidden>\r\n    <RunOnlyIfIdle>false</RunOnlyIfIdle>\r\n    <DisallowStartOnRemoteAppSession>false</DisallowStartOnRemoteAppSession>\r\n    <UseUnifiedSchedulingEngine>true</UseUnifiedSchedulingEngine>\r\n    <WakeToRun>false</WakeToRun>\r\n    <ExecutionTimeLimit>PT72H</ExecutionTimeLimit>\r\n    <Priority>7</Priority>\r\n  </Settings>\r\n  <Actions Context=\""LocalSystem\"">\r\n    <Exec>\r\n      <Command>%systemroot%\\system32\\usoclient.exe</Command>\r\n      <Arguments>StartScan</Arguments>\r\n    </Exec>\r\n  </Actions>\r\n</Task>"",Arg3=0x6,Arg4=0x7bc1fd2e0,Arg5=0x7bc1fd2c0,Arg6=0x3,Arg7=0x7bc1fd2a0,Arg8=0x1eea31060e0

...

regmon Time=1648746071.963075,PID=4776,PPID=600,TID=2436,ProcessName=""\\Device\\HarddiskVolume2\\Windows\\System32\\svchost.exe"",Method=NtSetValueKey,Key=""\\REGISTRY\\MACHINE\\SYSTEM\\SYSTEM\\WAAS\\WAASMEDIC\\TASKSTORE"",ValueName=""Schedule Scan"",Value=""'Microsoft\\Windows\\UpdateOrchestrator','<?xml version=\""1.0\"" encoding=\""UTF-16\""?>\r\n<Task version=\""1.6\"" xmlns=\""http://schemas.microsoft.com/windows/2004/02/mit/task\"">\r\n  <RegistrationInfo>\r\n    <Source>Microsoft Corporation</Source>\r\n    <Author>Microsoft Corporation</Author>\r\n    <Version>1.0</Version>\r\n    <Description>This task performs a scheduled Windows Update scan.</Description>\r\n    <URI>\\Microsoft\\Windows\\UpdateOrchestrator\\Schedule Scan</URI>\r\n    <SecurityDescriptor>D:P(A;;FA;;;SY)(A;;FRFX;;;LS)(A;;FRFX;;;BA)</SecurityDescriptor>\r\n  </RegistrationInfo>\r\n  <Triggers>\r\n    <TimeTrigger>\r\n      <Repetition>\r\n        <Interval>PT22H</Interval>\r\n        <StopAtDurationEnd>false</StopAtDurationEnd>\r\n      </Repetition>\r\n      <StartBoundary>2022-03-28T21:05:23+03:00</StartBoundary>\r\n      <Enabled>true</Enabled>\r\n      <RandomDelay>PT4H</RandomDelay>\r\n    </TimeTrigger>\r\n    <WnfStateChangeTrigger>\r\n      <Enabled>true</Enabled>\r\n      <Delay>PT2H5M</Delay>\r\n      <StateName>750CBCA3290B9641</StateName>\r\n      <Data>01</Data>\r\n      <DataOffset>0</DataOffset>\r\n    </WnfStateChangeTrigger>\r\n    <WnfStateChangeTrigger>\r\n      <Enabled>true</Enabled>\r\n      <StateName>7550BCA322028F02</StateName>\r\n    </WnfStateChangeTrigger>\r\n    <WnfStateChangeTrigger>\r\n      <Enabled>true</Enabled>\r\n      <StateName>7508BCA32E07C641</StateName>\r\n    </WnfStateChangeTrigger>\r\n    <EventTrigger>\r\n      <Enabled>true</Enabled>\r\n      <Subscription>&lt;QueryList&gt;&lt;Query Id=\""0\"" Path=\""System\""&gt;&lt;Select Path=\""System\""&gt;*[System[EventID=8202]]&lt;/Select&gt;&lt;/Query&gt;&lt;/QueryList&gt;</Subscription>\r\n    </EventTrigger>\r\n  </Triggers>\r\n  <Principals>\r\n    <Principal id=\""LocalSystem\"">\r\n      <UserId>S-1-5-18</UserId>\r\n      <RunLevel>LeastPrivilege</RunLevel>\r\n    </Principal>\r\n  </Principals>\r\n  <Settings>\r\n    <MultipleInstancesPolicy>IgnoreNew</MultipleInstancesPolicy>\r\n    <DisallowStartIfOnBatteries>false</DisallowStartIfOnBatteries>\r\n    <StopIfGoingOnBatteries>false</StopIfGoingOnBatteries>\r\n    <AllowHardTerminate>true</AllowHardTerminate>\r\n    <StartWhenAvailable>true</StartWhenAvailable>\r\n    <RunOnlyIfNetworkAvailable>true</RunOnlyIfNetworkAvailable>\r\n    <IdleSettings>\r\n      <StopOnIdleEnd>false</StopOnIdleEnd>\r\n      <RestartOnIdle>false</RestartOnIdle>\r\n    </IdleSettings>\r\n    <AllowStartOnDemand>true</AllowStartOnDemand>\r\n    <Enabled>true</Enabled>\r\n    <Hidden>false</Hidden>\r\n    <RunOnlyIfIdle>false</RunOnlyIfIdle>\r\n    <DisallowStartOnRemoteAppSession>false</DisallowStartOnRemoteAppSession>\r\n    <UseUnifiedSchedulingEngine>true</UseUnifiedSchedulingEngine>\r\n    <WakeToRun>false</WakeToRun>\r\n    <ExecutionTimeLimit>PT72H</ExecutionTimeLimit>\r\n    <Priority>7</Priority>\r\n  </Settings>\r\n  <Actions Context=\""LocalSystem\"">\r\n    <Exec>\r\n      <Command>%systemroot%\\system32\\usoclient.exe</Command>\r\n      <Arguments>StartScan</Arguments>\r\n    </Exec>\r\n  </Actions>\r\n</Task>',''""","New defect(s) Reported-by: Coverity Scan
Showing 3 of 3 defect(s)


** CID 390590:  Resource leaks  (RESOURCE_LEAK)
/src/libusermode/printers/printers.cpp: 211 in _ZNK14UnicodePrinter5printB5cxx11EP7drakvufP17drakvuf_trap_infom()


________________________________________________________________________________________________________
*** CID 390590:  Resource leaks  (RESOURCE_LEAK)
/src/libusermode/printers/printers.cpp: 211 in _ZNK14UnicodePrinter5printB5cxx11EP7drakvufP17drakvuf_trap_infom()
205             vmi_free_unicode_str(str_us);
206     
207         std::stringstream stream;
208         stream << name << ""="";
209         if (!config.print_no_addr)
210             stream << ""0x"" << std::hex << argument << "":"";
>>>     CID 390590:  Resource leaks  (RESOURCE_LEAK)
>>>     Failing to save or free storage allocated by ""g_strescape(str.data(), NULL)"" leaks it.
211         stream << ""\"""" << g_strescape(str.data(), nullptr) << ""\"""";
212         return stream.str();
213     }
214     
215     std::string UlongPrinter::print(drakvuf_t drakvuf, drakvuf_trap_info* info, uint64_t argument) const
216     {

** CID 390589:  Resource leaks  (RESOURCE_LEAK)
/src/libusermode/printers/printers.cpp: 149 in _ZNK22StringPrinterInterface5printB5cxx11EP7drakvufP17drakvuf_trap_infom()


________________________________________________________________________________________________________
*** CID 390589:  Resource leaks  (RESOURCE_LEAK)
/src/libusermode/printers/printers.cpp: 149 in _ZNK22StringPrinterInterface5printB5cxx11EP7drakvufP17drakvuf_trap_infom()
143         );
144         std::string str = getBuffer(drakvuf, &ctx);
145         std::stringstream stream;
146         stream << name << ""="";
147         if (!config.print_no_addr)
148             stream << ""0x"" << std::hex << argument << "":"";
>>>     CID 390589:  Resource leaks  (RESOURCE_LEAK)
>>>     Failing to save or free storage allocated by ""g_strescape(str.data(), NULL)"" leaks it.
149         stream << ""\"""" << g_strescape(str.data(), nullptr) << ""\"""";
150         return stream.str();
151     }
152     
153     std::string AsciiPrinter::getBuffer(drakvuf_t drakvuf, const access_context_t* ctx) const
154     {

** CID 390588:    (RESOURCE_LEAK)
/src/plugins/output_format/kvfmt.h: 187 in kvfmt::DataPrinter<fmt::Qstr<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, void>, void>::print<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>(std::basic_ostream<char, std::char_traits<char>>&, const fmt::Qstr<T1, void> &, char)()
/src/plugins/output_format/kvfmt.h: 187 in kvfmt::DataPrinter<fmt::Qstr<const char *, void>, void>::print<const char *>(std::basic_ostream<char, std::char_traits<char>>&, const fmt::Qstr<T1, void> &, char)()
/src/plugins/output_format/kvfmt.h: 187 in kvfmt::DataPrinter<fmt::Qstr<char *, void>, void>::print<char *>(std::basic_ostream<char, std::char_traits<char>>&, const fmt::Qstr<T1, void> &, char)()


________________________________________________________________________________________________________
*** CID 390588:    (RESOURCE_LEAK)
/src/plugins/output_format/kvfmt.h: 187 in kvfmt::DataPrinter<fmt::Qstr<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, void>, void>::print<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>(std::basic_ostream<char, std::char_traits<char>>&, const fmt::Qstr<T1, void> &, char)()
181             return true;
182         }
183     
184         template <class Tv = T>
185         static bool print(std::ostream& os, const fmt::Qstr<Tv>& data, char)
186         {
>>>     CID 390588:    (RESOURCE_LEAK)
>>>     Failing to save or free storage allocated by ""g_strescape(data.value.data(), NULL)"" leaks it.
187             os << '""' << g_strescape(data.value.data(), nullptr) << '""';
188             return true;
189         }
190     
191         template <class Tv = T>
192         static bool print(std::ostream& os, const std::function<bool(std::ostream&)>& printer, char)
/src/plugins/output_format/kvfmt.h: 187 in kvfmt::DataPrinter<fmt::Qstr<const char *, void>, void>::print<const char *>(std::basic_ostream<char, std::char_traits<char>>&, const fmt::Qstr<T1, void> &, char)()
181             return true;
182         }
183     
184         template <class Tv = T>
185         static bool print(std::ostream& os, const fmt::Qstr<Tv>& data, char)
186         {
>>>     CID 390588:    (RESOURCE_LEAK)
>>>     Failing to save or free storage allocated by ""g_strescape(data.value.data(), NULL)"" leaks it.
187             os << '""' << g_strescape(data.value.data(), nullptr) << '""';
188             return true;
189         }
190     
191         template <class Tv = T>
192         static bool print(std::ostream& os, const std::function<bool(std::ostream&)>& printer, char)
/src/plugins/output_format/kvfmt.h: 187 in kvfmt::DataPrinter<fmt::Qstr<char *, void>, void>::print<char *>(std::basic_ostream<char, std::char_traits<char>>&, const fmt::Qstr<T1, void> &, char)()
181             return true;
182         }
183     
184         template <class Tv = T>
185         static bool print(std::ostream& os, const fmt::Qstr<Tv>& data, char)
186         {
>>>     CID 390588:    (RESOURCE_LEAK)
>>>     Failing to save or free storage allocated by ""g_strescape(data.value.data(), NULL)"" leaks it.
187             os << '""' << g_strescape(data.value.data(), nullptr) << '""';
188             return true;
189         }",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1410,2022-04-01T09:09:42Z,2022-04-14T20:29:01Z,2022-04-14T20:29:01Z,MERGED,True,4,1,1,https://github.com/skvl,filetracer: fix KV output format for empty mask,1,[],https://github.com/tklengyel/drakvuf/pull/1410,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1410,"The KV output format been broken on empty mask field. E.g.:
filetracer Time=1648457161.131638,PID=1564,PPID=608,TID=5760,ProcessName=""\Device\HarddiskVolume2\Windows\servicing\TrustedInstaller.exe"",Method=NtCreateFile,FileName=""\??\C:\Windows\Logs\CBS\CBS.log"",FileHandle=0x11C,OBJ_CASE_INSENSITIVE=1,SE_DACL_PRESENT=1,Dacl=4,Type=""ACCESS_ALLOWED_ACE_TYPE"",DELETE=1,READ_CONTROL=1,WRITE_DAC=1,WRITE_OWNER=1,SYNCHRONIZE=1,STANDARD_RIGHTS_ALL=1,GENERIC_WRITE=1,GENERIC_READ=1,SID=""S-1-5-32-544"",Type=""ACCESS_ALLOWED_ACE_TYPE"",DELETE=1,READ_CONTROL=1,WRITE_DAC=1,WRITE_OWNER=1,SYNCHRONIZE=1,STANDARD_RIGHTS_ALL=1,GENERIC_WRITE=1,GENERIC_READ=1,SID=""S-1-5
-18"",Type=""ACCESS_ALLOWED_ACE_TYPE"",DELETE=1,SYNCHRONIZE=1,GENERIC_WRITE=1,GENERIC_READ=1,SID=""Local Service"",Type=""ACCESS_ALLOWED_ACE_TYPE"",DELETE=1,READ_CONTROL=1,WRITE_DAC=1,WRITE_OWNER=1,SYNCHRONIZE=1,STANDARD_RIGHTS_ALL=1,GENERIC_WRITE=1,GENERIC_READ=1,SID=""S-1-5-18"",Type=""ACCESS_ALLOWED_ACE_TYPE"",,SID="""",FILE_READ_ATTRIBUTES=1,SYNCHRONIZE=1,GENERIC_WRITE=1,GENERIC_READ=1,FILE_ATTRIBUTE_NORMAL=1,FILE_OPEN=1,FILE_SYNCHRONOUS_IO_NONALERT=1,FILE_NON_DIRECTORY_FILE=1,Status=""SUCCESS""

Note ,,SID= here.","The KV output format been broken on empty mask field. E.g.:
filetracer Time=1648457161.131638,PID=1564,PPID=608,TID=5760,ProcessName=""\Device\HarddiskVolume2\Windows\servicing\TrustedInstaller.exe"",Method=NtCreateFile,FileName=""\??\C:\Windows\Logs\CBS\CBS.log"",FileHandle=0x11C,OBJ_CASE_INSENSITIVE=1,SE_DACL_PRESENT=1,Dacl=4,Type=""ACCESS_ALLOWED_ACE_TYPE"",DELETE=1,READ_CONTROL=1,WRITE_DAC=1,WRITE_OWNER=1,SYNCHRONIZE=1,STANDARD_RIGHTS_ALL=1,GENERIC_WRITE=1,GENERIC_READ=1,SID=""S-1-5-32-544"",Type=""ACCESS_ALLOWED_ACE_TYPE"",DELETE=1,READ_CONTROL=1,WRITE_DAC=1,WRITE_OWNER=1,SYNCHRONIZE=1,STANDARD_RIGHTS_ALL=1,GENERIC_WRITE=1,GENERIC_READ=1,SID=""S-1-5
-18"",Type=""ACCESS_ALLOWED_ACE_TYPE"",DELETE=1,SYNCHRONIZE=1,GENERIC_WRITE=1,GENERIC_READ=1,SID=""Local Service"",Type=""ACCESS_ALLOWED_ACE_TYPE"",DELETE=1,READ_CONTROL=1,WRITE_DAC=1,WRITE_OWNER=1,SYNCHRONIZE=1,STANDARD_RIGHTS_ALL=1,GENERIC_WRITE=1,GENERIC_READ=1,SID=""S-1-5-18"",Type=""ACCESS_ALLOWED_ACE_TYPE"",,SID="""",FILE_READ_ATTRIBUTES=1,SYNCHRONIZE=1,GENERIC_WRITE=1,GENERIC_READ=1,FILE_ATTRIBUTE_NORMAL=1,FILE_OPEN=1,FILE_SYNCHRONOUS_IO_NONALERT=1,FILE_NON_DIRECTORY_FILE=1,Status=""SUCCESS""

Note ,,SID= here.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1410,2022-04-01T09:09:42Z,2022-04-14T20:29:01Z,2022-04-14T20:29:01Z,MERGED,True,4,1,1,https://github.com/skvl,filetracer: fix KV output format for empty mask,1,[],https://github.com/tklengyel/drakvuf/pull/1410,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1410#issuecomment-1085653910,"The KV output format been broken on empty mask field. E.g.:
filetracer Time=1648457161.131638,PID=1564,PPID=608,TID=5760,ProcessName=""\Device\HarddiskVolume2\Windows\servicing\TrustedInstaller.exe"",Method=NtCreateFile,FileName=""\??\C:\Windows\Logs\CBS\CBS.log"",FileHandle=0x11C,OBJ_CASE_INSENSITIVE=1,SE_DACL_PRESENT=1,Dacl=4,Type=""ACCESS_ALLOWED_ACE_TYPE"",DELETE=1,READ_CONTROL=1,WRITE_DAC=1,WRITE_OWNER=1,SYNCHRONIZE=1,STANDARD_RIGHTS_ALL=1,GENERIC_WRITE=1,GENERIC_READ=1,SID=""S-1-5-32-544"",Type=""ACCESS_ALLOWED_ACE_TYPE"",DELETE=1,READ_CONTROL=1,WRITE_DAC=1,WRITE_OWNER=1,SYNCHRONIZE=1,STANDARD_RIGHTS_ALL=1,GENERIC_WRITE=1,GENERIC_READ=1,SID=""S-1-5
-18"",Type=""ACCESS_ALLOWED_ACE_TYPE"",DELETE=1,SYNCHRONIZE=1,GENERIC_WRITE=1,GENERIC_READ=1,SID=""Local Service"",Type=""ACCESS_ALLOWED_ACE_TYPE"",DELETE=1,READ_CONTROL=1,WRITE_DAC=1,WRITE_OWNER=1,SYNCHRONIZE=1,STANDARD_RIGHTS_ALL=1,GENERIC_WRITE=1,GENERIC_READ=1,SID=""S-1-5-18"",Type=""ACCESS_ALLOWED_ACE_TYPE"",,SID="""",FILE_READ_ATTRIBUTES=1,SYNCHRONIZE=1,GENERIC_WRITE=1,GENERIC_READ=1,FILE_ATTRIBUTE_NORMAL=1,FILE_OPEN=1,FILE_SYNCHRONOUS_IO_NONALERT=1,FILE_NON_DIRECTORY_FILE=1,Status=""SUCCESS""

Note ,,SID= here.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1410,2022-04-01T09:09:42Z,2022-04-14T20:29:01Z,2022-04-14T20:29:01Z,MERGED,True,4,1,1,https://github.com/skvl,filetracer: fix KV output format for empty mask,1,[],https://github.com/tklengyel/drakvuf/pull/1410,https://github.com/skvl,3,https://github.com/tklengyel/drakvuf/pull/1410#issuecomment-1099052481,"The KV output format been broken on empty mask field. E.g.:
filetracer Time=1648457161.131638,PID=1564,PPID=608,TID=5760,ProcessName=""\Device\HarddiskVolume2\Windows\servicing\TrustedInstaller.exe"",Method=NtCreateFile,FileName=""\??\C:\Windows\Logs\CBS\CBS.log"",FileHandle=0x11C,OBJ_CASE_INSENSITIVE=1,SE_DACL_PRESENT=1,Dacl=4,Type=""ACCESS_ALLOWED_ACE_TYPE"",DELETE=1,READ_CONTROL=1,WRITE_DAC=1,WRITE_OWNER=1,SYNCHRONIZE=1,STANDARD_RIGHTS_ALL=1,GENERIC_WRITE=1,GENERIC_READ=1,SID=""S-1-5-32-544"",Type=""ACCESS_ALLOWED_ACE_TYPE"",DELETE=1,READ_CONTROL=1,WRITE_DAC=1,WRITE_OWNER=1,SYNCHRONIZE=1,STANDARD_RIGHTS_ALL=1,GENERIC_WRITE=1,GENERIC_READ=1,SID=""S-1-5
-18"",Type=""ACCESS_ALLOWED_ACE_TYPE"",DELETE=1,SYNCHRONIZE=1,GENERIC_WRITE=1,GENERIC_READ=1,SID=""Local Service"",Type=""ACCESS_ALLOWED_ACE_TYPE"",DELETE=1,READ_CONTROL=1,WRITE_DAC=1,WRITE_OWNER=1,SYNCHRONIZE=1,STANDARD_RIGHTS_ALL=1,GENERIC_WRITE=1,GENERIC_READ=1,SID=""S-1-5-18"",Type=""ACCESS_ALLOWED_ACE_TYPE"",,SID="""",FILE_READ_ATTRIBUTES=1,SYNCHRONIZE=1,GENERIC_WRITE=1,GENERIC_READ=1,FILE_ATTRIBUTE_NORMAL=1,FILE_OPEN=1,FILE_SYNCHRONOUS_IO_NONALERT=1,FILE_NON_DIRECTORY_FILE=1,Status=""SUCCESS""

Note ,,SID= here.","@tklengyel , could you restart checks please.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1411,2022-04-01T14:24:05Z,2022-04-01T15:10:50Z,2022-04-03T14:30:47Z,MERGED,True,159,6,13,https://github.com/tklengyel,Add basic scaffolding for Meson build system,2,[],https://github.com/tklengyel/drakvuf/pull/1411,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1411,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1413,2022-04-01T19:44:11Z,2022-04-01T20:33:17Z,2022-04-03T03:57:32Z,MERGED,True,84,68,7,https://github.com/tklengyel,Split meson.build into subfolders,2,[],https://github.com/tklengyel/drakvuf/pull/1413,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1413,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1414,2022-04-05T18:17:50Z,2022-04-05T20:44:34Z,2022-04-05T20:44:37Z,MERGED,True,56,51,1,https://github.com/tklengyel,Use g_direct_hash/equal for libdrakvuf hashtables,5,[],https://github.com/tklengyel/drakvuf/pull/1414,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1414,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1414,2022-04-05T18:17:50Z,2022-04-05T20:44:34Z,2022-04-05T20:44:37Z,MERGED,True,56,51,1,https://github.com/tklengyel,Use g_direct_hash/equal for libdrakvuf hashtables,5,[],https://github.com/tklengyel/drakvuf/pull/1414,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/1414#issuecomment-1089172483,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1415,2022-04-05T23:32:04Z,2022-04-06T15:37:15Z,2022-04-06T15:37:18Z,MERGED,True,385,400,59,https://github.com/tklengyel,Add plugins to meson build system and general cleanup,1,[],https://github.com/tklengyel/drakvuf/pull/1415,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1415,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1415,2022-04-05T23:32:04Z,2022-04-06T15:37:15Z,2022-04-06T15:37:18Z,MERGED,True,385,400,59,https://github.com/tklengyel,Add plugins to meson build system and general cleanup,1,[],https://github.com/tklengyel/drakvuf/pull/1415,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/1415#issuecomment-1089671182,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1415,2022-04-05T23:32:04Z,2022-04-06T15:37:15Z,2022-04-06T15:37:18Z,MERGED,True,385,400,59,https://github.com/tklengyel,Add plugins to meson build system and general cleanup,1,[],https://github.com/tklengyel/drakvuf/pull/1415,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1415#issuecomment-1090158462,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1415,2022-04-05T23:32:04Z,2022-04-06T15:37:15Z,2022-04-06T15:37:18Z,MERGED,True,385,400,59,https://github.com/tklengyel,Add plugins to meson build system and general cleanup,1,[],https://github.com/tklengyel/drakvuf/pull/1415,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1415#issuecomment-1090305331,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1415,2022-04-05T23:32:04Z,2022-04-06T15:37:15Z,2022-04-06T15:37:18Z,MERGED,True,385,400,59,https://github.com/tklengyel,Add plugins to meson build system and general cleanup,1,[],https://github.com/tklengyel/drakvuf/pull/1415,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1415#issuecomment-1090335090,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1417,2022-04-06T15:45:12Z,2022-04-07T13:33:42Z,2022-04-07T13:33:42Z,MERGED,True,7,7,1,https://github.com/BonusPlay,Fix UB from issue #1395 in plugins_ex part of libhook,3,[],https://github.com/tklengyel/drakvuf/pull/1417,https://github.com/BonusPlay,1,https://github.com/tklengyel/drakvuf/pull/1417,hopefully closes #1395,hopefully closes #1395,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1417,2022-04-06T15:45:12Z,2022-04-07T13:33:42Z,2022-04-07T13:33:42Z,MERGED,True,7,7,1,https://github.com/BonusPlay,Fix UB from issue #1395 in plugins_ex part of libhook,3,[],https://github.com/tklengyel/drakvuf/pull/1417,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1417#issuecomment-1090423173,hopefully closes #1395,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1417,2022-04-06T15:45:12Z,2022-04-07T13:33:42Z,2022-04-07T13:33:42Z,MERGED,True,7,7,1,https://github.com/BonusPlay,Fix UB from issue #1395 in plugins_ex part of libhook,3,[],https://github.com/tklengyel/drakvuf/pull/1417,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1417#issuecomment-1090572699,hopefully closes #1395,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1417,2022-04-06T15:45:12Z,2022-04-07T13:33:42Z,2022-04-07T13:33:42Z,MERGED,True,7,7,1,https://github.com/BonusPlay,Fix UB from issue #1395 in plugins_ex part of libhook,3,[],https://github.com/tklengyel/drakvuf/pull/1417,https://github.com/BonusPlay,4,https://github.com/tklengyel/drakvuf/pull/1417#issuecomment-1091742011,hopefully closes #1395,I believe this is ready to be merged.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1418,2022-04-08T01:09:46Z,2022-04-08T13:07:10Z,2022-04-08T13:07:13Z,MERGED,True,115,60,8,https://github.com/tklengyel,More plugins in meson,2,[],https://github.com/tklengyel/drakvuf/pull/1418,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1418,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1419,2022-04-11T12:18:35Z,2022-04-11T15:38:33Z,2022-05-11T15:22:58Z,MERGED,True,2,2,1,https://github.com/disaykin,"Fix option specifier for -F option. As a result of this bug, the toke…",1,[],https://github.com/tklengyel/drakvuf/pull/1419,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1419,…n passed after -F option was disappear.,…n passed after -F option was disappear.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1419,2022-04-11T12:18:35Z,2022-04-11T15:38:33Z,2022-05-11T15:22:58Z,MERGED,True,2,2,1,https://github.com/disaykin,"Fix option specifier for -F option. As a result of this bug, the toke…",1,[],https://github.com/tklengyel/drakvuf/pull/1419,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1419#issuecomment-1094979598,…n passed after -F option was disappear.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1420,2022-04-12T15:16:30Z,2022-04-13T00:35:38Z,2022-05-11T15:22:59Z,MERGED,True,21,20,3,https://github.com/disaykin,Handle INJECTOR_TIMEOUTED error on write-file on Linux,1,[],https://github.com/tklengyel/drakvuf/pull/1420,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1420,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1420,2022-04-12T15:16:30Z,2022-04-13T00:35:38Z,2022-05-11T15:22:59Z,MERGED,True,21,20,3,https://github.com/disaykin,Handle INJECTOR_TIMEOUTED error on write-file on Linux,1,[],https://github.com/tklengyel/drakvuf/pull/1420,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1420#issuecomment-1096862783,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1420,2022-04-12T15:16:30Z,2022-04-13T00:35:38Z,2022-05-11T15:22:59Z,MERGED,True,21,20,3,https://github.com/disaykin,Handle INJECTOR_TIMEOUTED error on write-file on Linux,1,[],https://github.com/tklengyel/drakvuf/pull/1420,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1420#issuecomment-1097281020,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1421,2022-04-12T19:16:31Z,2022-04-19T16:10:49Z,2022-04-19T16:10:51Z,MERGED,True,65,2,2,https://github.com/tklengyel,Add more plugins to Meson,1,[],https://github.com/tklengyel/drakvuf/pull/1421,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1421,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1422,2022-04-15T08:18:48Z,2022-04-19T16:10:40Z,2022-04-19T16:10:40Z,MERGED,True,868,6,10,https://github.com/skvl,Fix string escaping with Unicode support,3,[],https://github.com/tklengyel/drakvuf/pull/1422,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1422,"I didn't account Unicode strings in #1409 . The g_strescape breaks all non-ASCII characters. So in this PR I try to fix this.
The current approach isn't the best one. But I have added simple unit-tests to aid in feature development.","I didn't account Unicode strings in #1409 . The g_strescape breaks all non-ASCII characters. So in this PR I try to fix this.
The current approach isn't the best one. But I have added simple unit-tests to aid in feature development.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1422,2022-04-15T08:18:48Z,2022-04-19T16:10:40Z,2022-04-19T16:10:40Z,MERGED,True,868,6,10,https://github.com/skvl,Fix string escaping with Unicode support,3,[],https://github.com/tklengyel/drakvuf/pull/1422,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1422#issuecomment-1099955493,"I didn't account Unicode strings in #1409 . The g_strescape breaks all non-ASCII characters. So in this PR I try to fix this.
The current approach isn't the best one. But I have added simple unit-tests to aid in feature development.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1422,2022-04-15T08:18:48Z,2022-04-19T16:10:40Z,2022-04-19T16:10:40Z,MERGED,True,868,6,10,https://github.com/skvl,Fix string escaping with Unicode support,3,[],https://github.com/tklengyel/drakvuf/pull/1422,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1422#issuecomment-1100102415,"I didn't account Unicode strings in #1409 . The g_strescape breaks all non-ASCII characters. So in this PR I try to fix this.
The current approach isn't the best one. But I have added simple unit-tests to aid in feature development.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1423,2022-04-15T08:26:47Z,2022-04-15T13:14:06Z,2022-04-15T13:14:06Z,MERGED,True,110,72,2,https://github.com/skvl,procdump2: fix logical errors resulting in BSODs,1,[],https://github.com/tklengyel/drakvuf/pull/1423,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1423,"Fix logical errors:

On ""host""-process becomes target one.
On task timeout state switch.

Both errors result in BSODs.","Fix logical errors:

On ""host""-process becomes target one.
On task timeout state switch.

Both errors result in BSODs.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1423,2022-04-15T08:26:47Z,2022-04-15T13:14:06Z,2022-04-15T13:14:06Z,MERGED,True,110,72,2,https://github.com/skvl,procdump2: fix logical errors resulting in BSODs,1,[],https://github.com/tklengyel/drakvuf/pull/1423,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1423#issuecomment-1099960207,"Fix logical errors:

On ""host""-process becomes target one.
On task timeout state switch.

Both errors result in BSODs.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1424,2022-04-20T07:10:33Z,2022-04-20T14:47:29Z,2022-04-20T14:47:29Z,MERGED,True,2,1,1,https://github.com/skvl,procdump: fix logical error on state switch,1,[],https://github.com/tklengyel/drakvuf/pull/1424,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1424,The error occur due to state switch before if. This results in not removable tasks in list in rare cases. Thus plug-in could not stop in timeout provided via --procdump-timeout option.,The error occur due to state switch before if. This results in not removable tasks in list in rare cases. Thus plug-in could not stop in timeout provided via --procdump-timeout option.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1424,2022-04-20T07:10:33Z,2022-04-20T14:47:29Z,2022-04-20T14:47:29Z,MERGED,True,2,1,1,https://github.com/skvl,procdump: fix logical error on state switch,1,[],https://github.com/tklengyel/drakvuf/pull/1424,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1424#issuecomment-1103547382,The error occur due to state switch before if. This results in not removable tasks in list in rare cases. Thus plug-in could not stop in timeout provided via --procdump-timeout option.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1425,2022-04-20T11:54:30Z,2022-04-22T13:11:43Z,2022-05-11T15:24:13Z,MERGED,True,6,7,1,https://github.com/disaykin,Terminate sample process if requested before stopping plugins,1,[],https://github.com/tklengyel/drakvuf/pull/1425,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1425,Because we terminate the process to observe its behavior during termination.,Because we terminate the process to observe its behavior during termination.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1425,2022-04-20T11:54:30Z,2022-04-22T13:11:43Z,2022-05-11T15:24:13Z,MERGED,True,6,7,1,https://github.com/disaykin,Terminate sample process if requested before stopping plugins,1,[],https://github.com/tklengyel/drakvuf/pull/1425,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1425#issuecomment-1103845344,Because we terminate the process to observe its behavior during termination.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1425,2022-04-20T11:54:30Z,2022-04-22T13:11:43Z,2022-05-11T15:24:13Z,MERGED,True,6,7,1,https://github.com/disaykin,Terminate sample process if requested before stopping plugins,1,[],https://github.com/tklengyel/drakvuf/pull/1425,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1425#issuecomment-1104022096,Because we terminate the process to observe its behavior during termination.,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1426,2022-04-20T12:46:26Z,2022-05-24T07:29:18Z,2022-05-24T07:29:23Z,CLOSED,False,20,8,3,https://github.com/disaykin,Workaround possible PF injection in case of request_page_fault failure,1,[],https://github.com/tklengyel/drakvuf/pull/1426,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1426,"From drakvuf stderr:
[USERHOOK] Export info not accessible, page fault 774c0000
VMI_ERROR: xen_request_page_fault error -1 injecting page fault exception
[USERHOOK] Failed to request page fault for DTB 63cbb000, address 774c1000
[USERHOOK] Entered system service handler
[USERHOOK] Not suppressing service exception - not our fault

It looks like the vmi_request_page_fault returned response that it could not
inject a page fault, but it did. The situation happened only once.
I could not understand from the XEN source code how this could happen.
The hypervisor either returns an error or does what it was asked to do.","From drakvuf stderr:
[USERHOOK] Export info not accessible, page fault 774c0000
VMI_ERROR: xen_request_page_fault error -1 injecting page fault exception
[USERHOOK] Failed to request page fault for DTB 63cbb000, address 774c1000
[USERHOOK] Entered system service handler
[USERHOOK] Not suppressing service exception - not our fault

It looks like the vmi_request_page_fault returned response that it could not
inject a page fault, but it did. The situation happened only once.
I could not understand from the XEN source code how this could happen.
The hypervisor either returns an error or does what it was asked to do.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1426,2022-04-20T12:46:26Z,2022-05-24T07:29:18Z,2022-05-24T07:29:23Z,CLOSED,False,20,8,3,https://github.com/disaykin,Workaround possible PF injection in case of request_page_fault failure,1,[],https://github.com/tklengyel/drakvuf/pull/1426,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1426#issuecomment-1103890832,"From drakvuf stderr:
[USERHOOK] Export info not accessible, page fault 774c0000
VMI_ERROR: xen_request_page_fault error -1 injecting page fault exception
[USERHOOK] Failed to request page fault for DTB 63cbb000, address 774c1000
[USERHOOK] Entered system service handler
[USERHOOK] Not suppressing service exception - not our fault

It looks like the vmi_request_page_fault returned response that it could not
inject a page fault, but it did. The situation happened only once.
I could not understand from the XEN source code how this could happen.
The hypervisor either returns an error or does what it was asked to do.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1426,2022-04-20T12:46:26Z,2022-05-24T07:29:18Z,2022-05-24T07:29:23Z,CLOSED,False,20,8,3,https://github.com/disaykin,Workaround possible PF injection in case of request_page_fault failure,1,[],https://github.com/tklengyel/drakvuf/pull/1426,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1426#issuecomment-1104024023,"From drakvuf stderr:
[USERHOOK] Export info not accessible, page fault 774c0000
VMI_ERROR: xen_request_page_fault error -1 injecting page fault exception
[USERHOOK] Failed to request page fault for DTB 63cbb000, address 774c1000
[USERHOOK] Entered system service handler
[USERHOOK] Not suppressing service exception - not our fault

It looks like the vmi_request_page_fault returned response that it could not
inject a page fault, but it did. The situation happened only once.
I could not understand from the XEN source code how this could happen.
The hypervisor either returns an error or does what it was asked to do.","I could not understand from the XEN source code how this could happen. The hypervisor either returns an error or does what it was asked to do.

Ough, sounds like one of those heisenbugs due to some rare race-condition.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1426,2022-04-20T12:46:26Z,2022-05-24T07:29:18Z,2022-05-24T07:29:23Z,CLOSED,False,20,8,3,https://github.com/disaykin,Workaround possible PF injection in case of request_page_fault failure,1,[],https://github.com/tklengyel/drakvuf/pull/1426,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1426#issuecomment-1104030590,"From drakvuf stderr:
[USERHOOK] Export info not accessible, page fault 774c0000
VMI_ERROR: xen_request_page_fault error -1 injecting page fault exception
[USERHOOK] Failed to request page fault for DTB 63cbb000, address 774c1000
[USERHOOK] Entered system service handler
[USERHOOK] Not suppressing service exception - not our fault

It looks like the vmi_request_page_fault returned response that it could not
inject a page fault, but it did. The situation happened only once.
I could not understand from the XEN source code how this could happen.
The hypervisor either returns an error or does what it was asked to do.","Looking at arch/x86/hvm/dm.c:
    if ( cmpxchg(&v->arch.hvm.inject_event.vector,
                 HVM_EVENT_VECTOR_UNSET, HVM_EVENT_VECTOR_UPDATING) !=
         HVM_EVENT_VECTOR_UNSET )
        return -EBUSY;

Was there perhaps multiple calls to vmi_request_page_fault? In that case the second call could fail here if the vector hasn't been reset to HVM_EVENT_VECTOR_UNSET yet.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1426,2022-04-20T12:46:26Z,2022-05-24T07:29:18Z,2022-05-24T07:29:23Z,CLOSED,False,20,8,3,https://github.com/disaykin,Workaround possible PF injection in case of request_page_fault failure,1,[],https://github.com/tklengyel/drakvuf/pull/1426,https://github.com/disaykin,5,https://github.com/tklengyel/drakvuf/pull/1426#issuecomment-1104415325,"From drakvuf stderr:
[USERHOOK] Export info not accessible, page fault 774c0000
VMI_ERROR: xen_request_page_fault error -1 injecting page fault exception
[USERHOOK] Failed to request page fault for DTB 63cbb000, address 774c1000
[USERHOOK] Entered system service handler
[USERHOOK] Not suppressing service exception - not our fault

It looks like the vmi_request_page_fault returned response that it could not
inject a page fault, but it did. The situation happened only once.
I could not understand from the XEN source code how this could happen.
The hypervisor either returns an error or does what it was asked to do.","Looking at arch/x86/hvm/dm.c:
    if ( cmpxchg(&v->arch.hvm.inject_event.vector,
                 HVM_EVENT_VECTOR_UNSET, HVM_EVENT_VECTOR_UPDATING) !=
         HVM_EVENT_VECTOR_UNSET )
        return -EBUSY;

Was there perhaps multiple calls to vmi_request_page_fault? In that case the second call could fail here if the vector hasn't been reset to HVM_EVENT_VECTOR_UNSET yet.

I was thinking about this piece of code. But EBUSY == 16, not 1.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1426,2022-04-20T12:46:26Z,2022-05-24T07:29:18Z,2022-05-24T07:29:23Z,CLOSED,False,20,8,3,https://github.com/disaykin,Workaround possible PF injection in case of request_page_fault failure,1,[],https://github.com/tklengyel/drakvuf/pull/1426,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1426#issuecomment-1104516372,"From drakvuf stderr:
[USERHOOK] Export info not accessible, page fault 774c0000
VMI_ERROR: xen_request_page_fault error -1 injecting page fault exception
[USERHOOK] Failed to request page fault for DTB 63cbb000, address 774c1000
[USERHOOK] Entered system service handler
[USERHOOK] Not suppressing service exception - not our fault

It looks like the vmi_request_page_fault returned response that it could not
inject a page fault, but it did. The situation happened only once.
I could not understand from the XEN source code how this could happen.
The hypervisor either returns an error or does what it was asked to do.","LibVMI doesn't return the error code from the Xen side, it converts it to VMI_SUCCESS/VMI_FAILURE and VMI_FAILURE is 1.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1426,2022-04-20T12:46:26Z,2022-05-24T07:29:18Z,2022-05-24T07:29:23Z,CLOSED,False,20,8,3,https://github.com/disaykin,Workaround possible PF injection in case of request_page_fault failure,1,[],https://github.com/tklengyel/drakvuf/pull/1426,https://github.com/disaykin,7,https://github.com/tklengyel/drakvuf/pull/1426#issuecomment-1104828479,"From drakvuf stderr:
[USERHOOK] Export info not accessible, page fault 774c0000
VMI_ERROR: xen_request_page_fault error -1 injecting page fault exception
[USERHOOK] Failed to request page fault for DTB 63cbb000, address 774c1000
[USERHOOK] Entered system service handler
[USERHOOK] Not suppressing service exception - not our fault

It looks like the vmi_request_page_fault returned response that it could not
inject a page fault, but it did. The situation happened only once.
I could not understand from the XEN source code how this could happen.
The hypervisor either returns an error or does what it was asked to do.","The LibVMI library prints actual error code into stderr:
int rc = xen->libxcw.xc_hvm_inject_trap(xen->xchandle, xen->domainid,
                                        vcpu, X86_TRAP_page_fault,
                                        X86_TRAP_hw_exc,
                                        error_code, 0, virtual_address);
if (rc < 0) {
    errprint(""%s error %d injecting page fault exception\n"", __FUNCTION__, rc);
    return VMI_FAILURE;
}

Based on VMI_ERROR: xen_request_page_fault error -1 injecting page fault exception I conclude that this is or EPERM error, or buffer calloc error, or domain mutex acquisition failure.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1426,2022-04-20T12:46:26Z,2022-05-24T07:29:18Z,2022-05-24T07:29:23Z,CLOSED,False,20,8,3,https://github.com/disaykin,Workaround possible PF injection in case of request_page_fault failure,1,[],https://github.com/tklengyel/drakvuf/pull/1426,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/1426#issuecomment-1105516049,"From drakvuf stderr:
[USERHOOK] Export info not accessible, page fault 774c0000
VMI_ERROR: xen_request_page_fault error -1 injecting page fault exception
[USERHOOK] Failed to request page fault for DTB 63cbb000, address 774c1000
[USERHOOK] Entered system service handler
[USERHOOK] Not suppressing service exception - not our fault

It looks like the vmi_request_page_fault returned response that it could not
inject a page fault, but it did. The situation happened only once.
I could not understand from the XEN source code how this could happen.
The hypervisor either returns an error or does what it was asked to do.","If domain mutex acquisition failure is at play that would mean this call is only safe to make when the whole VM is paused, not just the vCPU. And only one such call can be made at a time. So I think this page-fault injection needs better guard-rails around it to prevent random failures.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1427,2022-04-20T20:14:59Z,2022-04-22T19:44:57Z,2022-04-22T20:51:14Z,MERGED,True,1970,773,14,https://github.com/delvinru,Procmon for linux,3,[],https://github.com/tklengyel/drakvuf/pull/1427,https://github.com/delvinru,1,https://github.com/tklengyel/drakvuf/pull/1427,"Hi, I have added support for linux systems for the procmon plugin.
The plugin was tested on the following system:
Linux ubuntu 5.13.0-39-generic #44~20.04.1-Ubuntu SMP Thu Mar 24 16:43:35 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux

Distributor ID: Ubuntu
Description:    Ubuntu 20.04.4 LTS
Release:        20.04
Codename:       focal
I note that this plugin will not work on kernel versions below 5.9, because the plugin is based on do_execveat_common to which all sys_execve calls come in newer version.
I also upgrade the linux_get_process_name function, which can now output the full name of the process, and therefore also improves the filetracer plugin. Now, instead of the short comm name, the full name of the process is printed.
As an example, the output of the plugin:
{
    ""Plugin"": ""procmon"",
    ""TimeStamp"": ""1650485324.685135"",
    ""PID"": 1203,
    ""TID"": 1203,
    ""PPID"": 1078,
    ""ProcessName"": ""/usr/bin/bash"",
    ""ThreadName"": ""bash"",
    ""Method"": ""do_execveat_common.isra.0"",
    ""NewPid"": 1291,
    ""NewTid"": 1291,
    ""CommandLine"": ""ls --color=auto -la"",
    ""ImagePathName"": ""/usr/bin/ls""
}","Hi, I have added support for linux systems for the procmon plugin.
The plugin was tested on the following system:
Linux ubuntu 5.13.0-39-generic #44~20.04.1-Ubuntu SMP Thu Mar 24 16:43:35 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux

Distributor ID: Ubuntu
Description:    Ubuntu 20.04.4 LTS
Release:        20.04
Codename:       focal
I note that this plugin will not work on kernel versions below 5.9, because the plugin is based on do_execveat_common to which all sys_execve calls come in newer version.
I also upgrade the linux_get_process_name function, which can now output the full name of the process, and therefore also improves the filetracer plugin. Now, instead of the short comm name, the full name of the process is printed.
As an example, the output of the plugin:
{
    ""Plugin"": ""procmon"",
    ""TimeStamp"": ""1650485324.685135"",
    ""PID"": 1203,
    ""TID"": 1203,
    ""PPID"": 1078,
    ""ProcessName"": ""/usr/bin/bash"",
    ""ThreadName"": ""bash"",
    ""Method"": ""do_execveat_common.isra.0"",
    ""NewPid"": 1291,
    ""NewTid"": 1291,
    ""CommandLine"": ""ls --color=auto -la"",
    ""ImagePathName"": ""/usr/bin/ls""
}",True,"{'THUMBS_UP': ['https://github.com/tklengyel', 'https://github.com/greg0r0']}"
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1427,2022-04-20T20:14:59Z,2022-04-22T19:44:57Z,2022-04-22T20:51:14Z,MERGED,True,1970,773,14,https://github.com/delvinru,Procmon for linux,3,[],https://github.com/tklengyel/drakvuf/pull/1427,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1427#issuecomment-1104417793,"Hi, I have added support for linux systems for the procmon plugin.
The plugin was tested on the following system:
Linux ubuntu 5.13.0-39-generic #44~20.04.1-Ubuntu SMP Thu Mar 24 16:43:35 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux

Distributor ID: Ubuntu
Description:    Ubuntu 20.04.4 LTS
Release:        20.04
Codename:       focal
I note that this plugin will not work on kernel versions below 5.9, because the plugin is based on do_execveat_common to which all sys_execve calls come in newer version.
I also upgrade the linux_get_process_name function, which can now output the full name of the process, and therefore also improves the filetracer plugin. Now, instead of the short comm name, the full name of the process is printed.
As an example, the output of the plugin:
{
    ""Plugin"": ""procmon"",
    ""TimeStamp"": ""1650485324.685135"",
    ""PID"": 1203,
    ""TID"": 1203,
    ""PPID"": 1078,
    ""ProcessName"": ""/usr/bin/bash"",
    ""ThreadName"": ""bash"",
    ""Method"": ""do_execveat_common.isra.0"",
    ""NewPid"": 1291,
    ""NewTid"": 1291,
    ""CommandLine"": ""ls --color=auto -la"",
    ""ImagePathName"": ""/usr/bin/ls""
}",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1427,2022-04-20T20:14:59Z,2022-04-22T19:44:57Z,2022-04-22T20:51:14Z,MERGED,True,1970,773,14,https://github.com/delvinru,Procmon for linux,3,[],https://github.com/tklengyel/drakvuf/pull/1427,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1427#issuecomment-1105518394,"Hi, I have added support for linux systems for the procmon plugin.
The plugin was tested on the following system:
Linux ubuntu 5.13.0-39-generic #44~20.04.1-Ubuntu SMP Thu Mar 24 16:43:35 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux

Distributor ID: Ubuntu
Description:    Ubuntu 20.04.4 LTS
Release:        20.04
Codename:       focal
I note that this plugin will not work on kernel versions below 5.9, because the plugin is based on do_execveat_common to which all sys_execve calls come in newer version.
I also upgrade the linux_get_process_name function, which can now output the full name of the process, and therefore also improves the filetracer plugin. Now, instead of the short comm name, the full name of the process is printed.
As an example, the output of the plugin:
{
    ""Plugin"": ""procmon"",
    ""TimeStamp"": ""1650485324.685135"",
    ""PID"": 1203,
    ""TID"": 1203,
    ""PPID"": 1078,
    ""ProcessName"": ""/usr/bin/bash"",
    ""ThreadName"": ""bash"",
    ""Method"": ""do_execveat_common.isra.0"",
    ""NewPid"": 1291,
    ""NewTid"": 1291,
    ""CommandLine"": ""ls --color=auto -la"",
    ""ImagePathName"": ""/usr/bin/ls""
}",@drakvuf-jenkins Test this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1427,2022-04-20T20:14:59Z,2022-04-22T19:44:57Z,2022-04-22T20:51:14Z,MERGED,True,1970,773,14,https://github.com/delvinru,Procmon for linux,3,[],https://github.com/tklengyel/drakvuf/pull/1427,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1427#issuecomment-1105519610,"Hi, I have added support for linux systems for the procmon plugin.
The plugin was tested on the following system:
Linux ubuntu 5.13.0-39-generic #44~20.04.1-Ubuntu SMP Thu Mar 24 16:43:35 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux

Distributor ID: Ubuntu
Description:    Ubuntu 20.04.4 LTS
Release:        20.04
Codename:       focal
I note that this plugin will not work on kernel versions below 5.9, because the plugin is based on do_execveat_common to which all sys_execve calls come in newer version.
I also upgrade the linux_get_process_name function, which can now output the full name of the process, and therefore also improves the filetracer plugin. Now, instead of the short comm name, the full name of the process is printed.
As an example, the output of the plugin:
{
    ""Plugin"": ""procmon"",
    ""TimeStamp"": ""1650485324.685135"",
    ""PID"": 1203,
    ""TID"": 1203,
    ""PPID"": 1078,
    ""ProcessName"": ""/usr/bin/bash"",
    ""ThreadName"": ""bash"",
    ""Method"": ""do_execveat_common.isra.0"",
    ""NewPid"": 1291,
    ""NewTid"": 1291,
    ""CommandLine"": ""ls --color=auto -la"",
    ""ImagePathName"": ""/usr/bin/ls""
}","Fantastic addition, thanks for sending the PR.",True,{'THUMBS_UP': ['https://github.com/delvinru']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1427,2022-04-20T20:14:59Z,2022-04-22T19:44:57Z,2022-04-22T20:51:14Z,MERGED,True,1970,773,14,https://github.com/delvinru,Procmon for linux,3,[],https://github.com/tklengyel/drakvuf/pull/1427,https://github.com/delvinru,5,https://github.com/tklengyel/drakvuf/pull/1427#issuecomment-1105633502,"Hi, I have added support for linux systems for the procmon plugin.
The plugin was tested on the following system:
Linux ubuntu 5.13.0-39-generic #44~20.04.1-Ubuntu SMP Thu Mar 24 16:43:35 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux

Distributor ID: Ubuntu
Description:    Ubuntu 20.04.4 LTS
Release:        20.04
Codename:       focal
I note that this plugin will not work on kernel versions below 5.9, because the plugin is based on do_execveat_common to which all sys_execve calls come in newer version.
I also upgrade the linux_get_process_name function, which can now output the full name of the process, and therefore also improves the filetracer plugin. Now, instead of the short comm name, the full name of the process is printed.
As an example, the output of the plugin:
{
    ""Plugin"": ""procmon"",
    ""TimeStamp"": ""1650485324.685135"",
    ""PID"": 1203,
    ""TID"": 1203,
    ""PPID"": 1078,
    ""ProcessName"": ""/usr/bin/bash"",
    ""ThreadName"": ""bash"",
    ""Method"": ""do_execveat_common.isra.0"",
    ""NewPid"": 1291,
    ""NewTid"": 1291,
    ""CommandLine"": ""ls --color=auto -la"",
    ""ImagePathName"": ""/usr/bin/ls""
}","Sorry, my bad, i fixed problems🙈",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1427,2022-04-20T20:14:59Z,2022-04-22T19:44:57Z,2022-04-22T20:51:14Z,MERGED,True,1970,773,14,https://github.com/delvinru,Procmon for linux,3,[],https://github.com/tklengyel/drakvuf/pull/1427,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1427#issuecomment-1105819616,"Hi, I have added support for linux systems for the procmon plugin.
The plugin was tested on the following system:
Linux ubuntu 5.13.0-39-generic #44~20.04.1-Ubuntu SMP Thu Mar 24 16:43:35 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux

Distributor ID: Ubuntu
Description:    Ubuntu 20.04.4 LTS
Release:        20.04
Codename:       focal
I note that this plugin will not work on kernel versions below 5.9, because the plugin is based on do_execveat_common to which all sys_execve calls come in newer version.
I also upgrade the linux_get_process_name function, which can now output the full name of the process, and therefore also improves the filetracer plugin. Now, instead of the short comm name, the full name of the process is printed.
As an example, the output of the plugin:
{
    ""Plugin"": ""procmon"",
    ""TimeStamp"": ""1650485324.685135"",
    ""PID"": 1203,
    ""TID"": 1203,
    ""PPID"": 1078,
    ""ProcessName"": ""/usr/bin/bash"",
    ""ThreadName"": ""bash"",
    ""Method"": ""do_execveat_common.isra.0"",
    ""NewPid"": 1291,
    ""NewTid"": 1291,
    ""CommandLine"": ""ls --color=auto -la"",
    ""ImagePathName"": ""/usr/bin/ls""
}",@drakvuf-jenkins Test this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1427,2022-04-20T20:14:59Z,2022-04-22T19:44:57Z,2022-04-22T20:51:14Z,MERGED,True,1970,773,14,https://github.com/delvinru,Procmon for linux,3,[],https://github.com/tklengyel/drakvuf/pull/1427,https://github.com/delvinru,7,https://github.com/tklengyel/drakvuf/pull/1427#issuecomment-1106226548,"Hi, I have added support for linux systems for the procmon plugin.
The plugin was tested on the following system:
Linux ubuntu 5.13.0-39-generic #44~20.04.1-Ubuntu SMP Thu Mar 24 16:43:35 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux

Distributor ID: Ubuntu
Description:    Ubuntu 20.04.4 LTS
Release:        20.04
Codename:       focal
I note that this plugin will not work on kernel versions below 5.9, because the plugin is based on do_execveat_common to which all sys_execve calls come in newer version.
I also upgrade the linux_get_process_name function, which can now output the full name of the process, and therefore also improves the filetracer plugin. Now, instead of the short comm name, the full name of the process is printed.
As an example, the output of the plugin:
{
    ""Plugin"": ""procmon"",
    ""TimeStamp"": ""1650485324.685135"",
    ""PID"": 1203,
    ""TID"": 1203,
    ""PPID"": 1078,
    ""ProcessName"": ""/usr/bin/bash"",
    ""ThreadName"": ""bash"",
    ""Method"": ""do_execveat_common.isra.0"",
    ""NewPid"": 1291,
    ""NewTid"": 1291,
    ""CommandLine"": ""ls --color=auto -la"",
    ""ImagePathName"": ""/usr/bin/ls""
}","After researching the error for which the pipeline does not pass, I came to the following conclusion:

In different kernel versions, the suffix isra.0 can be added, as for example in ubuntu 20.04 due to an additional flag when compiling the kernel. More information: click.
Kernel symbols comparisons on ubuntu 20.04 and debian 11:

// Ubuntu 20.04
""do_execveat_common.isra.0"": {
    ""type"": {
        ""kind"": ""base"",
        ""name"": ""void""
      },
      ""address"": 281472849310624
}

// Debian 11
""do_execveat_common"": {
      ""type"": {
        ""kind"": ""base"",
        ""name"": ""void""
      },
      ""address"": 281472848932752
},
As you can see the name is different.

Job DRAKVUF-debian-stretch in ci is running an old version of debian with a kernel that is not suitable for this plugin. (wrote about the limitations above).

As addition, debian 11 can't just be installed in xen, like ubuntu, for example (more information, Debian Installer section). With the default installation approach or using xen-tools or something else, drakvuf will not be able to initialize correctly, even if you adjust the default config.
We'll have to tweak the iso a little and then everything will be set as needed and drakvuf will work. Great guide: https://lists.debian.org/debian-user/2021/08/msg01339.html
Tested Debian version:
Linux debian 5.10.0-13-amd64 #1 SMP Debian 5.10.106-1 (2022-03-17) x86_64 GNU/Linux

Distributor ID: Debian
Description:    Debian GNU/Linux 11 (bullseye)
Release:        11
Codename:       bullseye",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1427,2022-04-20T20:14:59Z,2022-04-22T19:44:57Z,2022-04-22T20:51:14Z,MERGED,True,1970,773,14,https://github.com/delvinru,Procmon for linux,3,[],https://github.com/tklengyel/drakvuf/pull/1427,https://github.com/tklengyel,8,https://github.com/tklengyel/drakvuf/pull/1427#issuecomment-1106505690,"Hi, I have added support for linux systems for the procmon plugin.
The plugin was tested on the following system:
Linux ubuntu 5.13.0-39-generic #44~20.04.1-Ubuntu SMP Thu Mar 24 16:43:35 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux

Distributor ID: Ubuntu
Description:    Ubuntu 20.04.4 LTS
Release:        20.04
Codename:       focal
I note that this plugin will not work on kernel versions below 5.9, because the plugin is based on do_execveat_common to which all sys_execve calls come in newer version.
I also upgrade the linux_get_process_name function, which can now output the full name of the process, and therefore also improves the filetracer plugin. Now, instead of the short comm name, the full name of the process is printed.
As an example, the output of the plugin:
{
    ""Plugin"": ""procmon"",
    ""TimeStamp"": ""1650485324.685135"",
    ""PID"": 1203,
    ""TID"": 1203,
    ""PPID"": 1078,
    ""ProcessName"": ""/usr/bin/bash"",
    ""ThreadName"": ""bash"",
    ""Method"": ""do_execveat_common.isra.0"",
    ""NewPid"": 1291,
    ""NewTid"": 1291,
    ""CommandLine"": ""ls --color=auto -la"",
    ""ImagePathName"": ""/usr/bin/ls""
}",The plugin should just print a debug message that an old unsupported kernel is detected and exit out gracefully instead of erroring.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1427,2022-04-20T20:14:59Z,2022-04-22T19:44:57Z,2022-04-22T20:51:14Z,MERGED,True,1970,773,14,https://github.com/delvinru,Procmon for linux,3,[],https://github.com/tklengyel/drakvuf/pull/1427,https://github.com/tklengyel,9,https://github.com/tklengyel/drakvuf/pull/1427#issuecomment-1106786827,"Hi, I have added support for linux systems for the procmon plugin.
The plugin was tested on the following system:
Linux ubuntu 5.13.0-39-generic #44~20.04.1-Ubuntu SMP Thu Mar 24 16:43:35 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux

Distributor ID: Ubuntu
Description:    Ubuntu 20.04.4 LTS
Release:        20.04
Codename:       focal
I note that this plugin will not work on kernel versions below 5.9, because the plugin is based on do_execveat_common to which all sys_execve calls come in newer version.
I also upgrade the linux_get_process_name function, which can now output the full name of the process, and therefore also improves the filetracer plugin. Now, instead of the short comm name, the full name of the process is printed.
As an example, the output of the plugin:
{
    ""Plugin"": ""procmon"",
    ""TimeStamp"": ""1650485324.685135"",
    ""PID"": 1203,
    ""TID"": 1203,
    ""PPID"": 1078,
    ""ProcessName"": ""/usr/bin/bash"",
    ""ThreadName"": ""bash"",
    ""Method"": ""do_execveat_common.isra.0"",
    ""NewPid"": 1291,
    ""NewTid"": 1291,
    ""CommandLine"": ""ls --color=auto -la"",
    ""ImagePathName"": ""/usr/bin/ls""
}",@drakvuf-jenkins Test this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1427,2022-04-20T20:14:59Z,2022-04-22T19:44:57Z,2022-04-22T20:51:14Z,MERGED,True,1970,773,14,https://github.com/delvinru,Procmon for linux,3,[],https://github.com/tklengyel/drakvuf/pull/1427,https://github.com/tklengyel,10,https://github.com/tklengyel/drakvuf/pull/1427#issuecomment-1106807981,"Hi, I have added support for linux systems for the procmon plugin.
The plugin was tested on the following system:
Linux ubuntu 5.13.0-39-generic #44~20.04.1-Ubuntu SMP Thu Mar 24 16:43:35 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux

Distributor ID: Ubuntu
Description:    Ubuntu 20.04.4 LTS
Release:        20.04
Codename:       focal
I note that this plugin will not work on kernel versions below 5.9, because the plugin is based on do_execveat_common to which all sys_execve calls come in newer version.
I also upgrade the linux_get_process_name function, which can now output the full name of the process, and therefore also improves the filetracer plugin. Now, instead of the short comm name, the full name of the process is printed.
As an example, the output of the plugin:
{
    ""Plugin"": ""procmon"",
    ""TimeStamp"": ""1650485324.685135"",
    ""PID"": 1203,
    ""TID"": 1203,
    ""PPID"": 1078,
    ""ProcessName"": ""/usr/bin/bash"",
    ""ThreadName"": ""bash"",
    ""Method"": ""do_execveat_common.isra.0"",
    ""NewPid"": 1291,
    ""NewTid"": 1291,
    ""CommandLine"": ""ls --color=auto -la"",
    ""ImagePathName"": ""/usr/bin/ls""
}",LGTM,True,{'THUMBS_UP': ['https://github.com/delvinru']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1427,2022-04-20T20:14:59Z,2022-04-22T19:44:57Z,2022-04-22T20:51:14Z,MERGED,True,1970,773,14,https://github.com/delvinru,Procmon for linux,3,[],https://github.com/tklengyel/drakvuf/pull/1427,https://github.com/tklengyel,11,https://github.com/tklengyel/drakvuf/pull/1427#issuecomment-1106850487,"Hi, I have added support for linux systems for the procmon plugin.
The plugin was tested on the following system:
Linux ubuntu 5.13.0-39-generic #44~20.04.1-Ubuntu SMP Thu Mar 24 16:43:35 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux

Distributor ID: Ubuntu
Description:    Ubuntu 20.04.4 LTS
Release:        20.04
Codename:       focal
I note that this plugin will not work on kernel versions below 5.9, because the plugin is based on do_execveat_common to which all sys_execve calls come in newer version.
I also upgrade the linux_get_process_name function, which can now output the full name of the process, and therefore also improves the filetracer plugin. Now, instead of the short comm name, the full name of the process is printed.
As an example, the output of the plugin:
{
    ""Plugin"": ""procmon"",
    ""TimeStamp"": ""1650485324.685135"",
    ""PID"": 1203,
    ""TID"": 1203,
    ""PPID"": 1078,
    ""ProcessName"": ""/usr/bin/bash"",
    ""ThreadName"": ""bash"",
    ""Method"": ""do_execveat_common.isra.0"",
    ""NewPid"": 1291,
    ""NewTid"": 1291,
    ""CommandLine"": ""ls --color=auto -la"",
    ""ImagePathName"": ""/usr/bin/ls""
}","** CID 392391:  Null pointer dereferences  (NULL_RETURNS)
/src/plugins/procmon/linux.cpp: 288 in do_execveat_common_cb(drakvuf *, drakvuf_trap_info *)()


________________________________________________________________________________________________________
*** CID 392391:  Null pointer dereferences  (NULL_RETURNS)
/src/plugins/procmon/linux.cpp: 288 in do_execveat_common_cb(drakvuf *, drakvuf_trap_info *)()
282         if (!ret_addr)
283             return VMI_EVENT_RESPONSE_NONE;
284     
285         linux_procmon* procmon = (linux_procmon*)info->trap->data;
286     
287         linux_wrapper* lw = new (std::nothrow) linux_wrapper;
>>>     CID 392391:  Null pointer dereferences  (NULL_RETURNS)
>>>     Dereferencing ""lw"", which is known to be ""nullptr"".
288         lw->procmon = procmon;
289         lw->new_pid = info->proc_data.pid;
290         lw->new_tid = info->proc_data.tid;
291         lw->rsp = ret_addr;
292     
293         char* image_path_name = get_image_path_name(drakvuf, info);

** CID 392390:    (UNINIT_CTOR)
/src/plugins/procmon/linux.cpp: 408 in linux_procmon::linux_procmon(drakvuf *, output_format_t)()
/src/plugins/procmon/linux.cpp: 411 in linux_procmon::linux_procmon(drakvuf *, output_format_t)()


________________________________________________________________________________________________________
*** CID 392390:    (UNINIT_CTOR)
/src/plugins/procmon/linux.cpp: 408 in linux_procmon::linux_procmon(drakvuf *, output_format_t)()
402     
403         if (!register_trap(drakvuf, ""do_execveat_common.isra.0"", &trap[0], do_execveat_common_cb))
404         {
405             if (!register_trap(drakvuf, ""do_execveat_common"", &trap[0], do_execveat_common_cb))
406             {
407                 PRINT_DEBUG(""[PROCMON] Method do_execveat_common not found. You are probably using an older kernel version below 5.9\n"");
>>>     CID 392390:    (UNINIT_CTOR)
>>>     Non-static class member ""os"" is not initialized in this constructor nor in any functions that it calls.
408                 return;
409             }
410         }
/src/plugins/procmon/linux.cpp: 411 in linux_procmon::linux_procmon(drakvuf *, output_format_t)()
405             if (!register_trap(drakvuf, ""do_execveat_common"", &trap[0], do_execveat_common_cb))
406             {
407                 PRINT_DEBUG(""[PROCMON] Method do_execveat_common not found. You are probably using an older kernel version below 5.9\n"");
408                 return;
409             }
410         }
>>>     CID 392390:    (UNINIT_CTOR)
>>>     Non-static class member ""os"" is not initialized in this constructor nor in any functions that it calls.

** CID 392389:    (UNINIT_CTOR)
/src/plugins/procmon/procmon.cpp: 115 in procmon::procmon(drakvuf *, output_format_t)()
/src/plugins/procmon/procmon.cpp: 115 in procmon::procmon(drakvuf *, output_format_t)()


________________________________________________________________________________________________________
*** CID 392389:    (UNINIT_CTOR)
/src/plugins/procmon/procmon.cpp: 115 in procmon::procmon(drakvuf *, output_format_t)()
109     procmon::procmon(drakvuf_t drakvuf, output_format_t output) : pluginex(drakvuf, output), os(drakvuf_get_os_type(drakvuf))
110     {
111         if (this->os == VMI_OS_WINDOWS)
112             this->wp = new win_procmon(drakvuf, output);
113         else
114             this->lp = new linux_procmon(drakvuf, output);
>>>     CID 392389:    (UNINIT_CTOR)
>>>     Non-static class member ""lp"" is not initialized in this constructor nor in any functions that it calls.
115     }
116     
117     procmon::~procmon()
118     {
119         if (this->os == VMI_OS_WINDOWS)
120             delete this->wp;
/src/plugins/procmon/procmon.cpp: 115 in procmon::procmon(drakvuf *, output_format_t)()
109     procmon::procmon(drakvuf_t drakvuf, output_format_t output) : pluginex(drakvuf, output), os(drakvuf_get_os_type(drakvuf))
110     {
111         if (this->os == VMI_OS_WINDOWS)
112             this->wp = new win_procmon(drakvuf, output);
113         else
114             this->lp = new linux_procmon(drakvuf, output);
>>>     CID 392389:    (UNINIT_CTOR)
>>>     Non-static class member ""wp"" is not initialized in this constructor nor in any functions that it calls.
115     }
116     
117     procmon::~procmon()
118     {
119         if (this->os == VMI_OS_WINDOWS)
120             delete this->wp;

** CID 392388:  Resource leaks  (RESOURCE_LEAK)
/src/libdrakvuf/linux-processes.c: 303 in d_path()


________________________________________________________________________________________________________
*** CID 392388:  Resource leaks  (RESOURCE_LEAK)
/src/libdrakvuf/linux-processes.c: 303 in d_path()
297     static GString* d_path(drakvuf_t drakvuf, addr_t process_base, addr_t path)
298     {
299         GString* b = g_string_new("""");
300     
301         addr_t root;
302         if (!get_fs_root_rcu(drakvuf, process_base, &root))
>>>     CID 392388:  Resource leaks  (RESOURCE_LEAK)
>>>     Variable ""b"" going out of scope leaks the storage it points to.
303             return NULL;
304     
305         prepend_path(drakvuf, path, root, b);
306         return b;
307     }
308",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1428,2022-04-22T08:44:24Z,2022-04-22T13:11:30Z,2022-05-05T10:49:47Z,MERGED,True,6,7,1,https://github.com/disaykin,procdump2: fix a logical error due to witch an unitialized plugin did…,1,[],https://github.com/tklengyel/drakvuf/pull/1428,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1428,… not stop,… not stop,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1428,2022-04-22T08:44:24Z,2022-04-22T13:11:30Z,2022-05-05T10:49:47Z,MERGED,True,6,7,1,https://github.com/disaykin,procdump2: fix a logical error due to witch an unitialized plugin did…,1,[],https://github.com/tklengyel/drakvuf/pull/1428,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1428#issuecomment-1106199826,… not stop,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1429,2022-04-24T12:26:27Z,2022-04-27T19:01:41Z,2022-04-27T19:01:41Z,CLOSED,False,12,7,2,https://github.com/delvinru,Fix memory leak in procmon,1,[],https://github.com/tklengyel/drakvuf/pull/1429,https://github.com/delvinru,1,https://github.com/tklengyel/drakvuf/pull/1429,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1429,2022-04-24T12:26:27Z,2022-04-27T19:01:41Z,2022-04-27T19:01:41Z,CLOSED,False,12,7,2,https://github.com/delvinru,Fix memory leak in procmon,1,[],https://github.com/tklengyel/drakvuf/pull/1429,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1429#issuecomment-1107831072,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1429,2022-04-24T12:26:27Z,2022-04-27T19:01:41Z,2022-04-27T19:01:41Z,CLOSED,False,12,7,2,https://github.com/delvinru,Fix memory leak in procmon,1,[],https://github.com/tklengyel/drakvuf/pull/1429,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1429#issuecomment-1107883836,,@drakvuf-jenkins Test this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1429,2022-04-24T12:26:27Z,2022-04-27T19:01:41Z,2022-04-27T19:01:41Z,CLOSED,False,12,7,2,https://github.com/delvinru,Fix memory leak in procmon,1,[],https://github.com/tklengyel/drakvuf/pull/1429,https://github.com/delvinru,4,https://github.com/tklengyel/drakvuf/pull/1429#issuecomment-1107892671,,"Ok, i have no idea how to fix this problem.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1430,2022-04-27T00:45:09Z,2022-04-27T21:09:41Z,2022-04-27T21:09:43Z,MERGED,True,10,12,2,https://github.com/tklengyel,Minor cleanup of libdrakvuf headers,1,[],https://github.com/tklengyel/drakvuf/pull/1430,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1430,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1430,2022-04-27T00:45:09Z,2022-04-27T21:09:41Z,2022-04-27T21:09:43Z,MERGED,True,10,12,2,https://github.com/tklengyel,Minor cleanup of libdrakvuf headers,1,[],https://github.com/tklengyel/drakvuf/pull/1430,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/1430#issuecomment-1111372854,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1431,2022-04-27T15:47:07Z,2022-04-27T19:01:32Z,2022-04-27T19:01:34Z,MERGED,True,5,5,1,https://github.com/tklengyel,Fix memory leak in linux-processes,1,[],https://github.com/tklengyel/drakvuf/pull/1431,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1431,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1432,2022-04-27T22:02:08Z,2022-04-28T14:34:29Z,2022-04-28T14:34:32Z,MERGED,True,25,5,4,https://github.com/tklengyel,Build packages for Jammy,6,[],https://github.com/tklengyel/drakvuf/pull/1432,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1432,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1433,2022-04-28T20:00:21Z,2022-04-28T20:00:55Z,2022-04-28T20:00:57Z,MERGED,True,6,10,1,https://github.com/tklengyel,Drop using actions/upload-release-asset,1,[],https://github.com/tklengyel/drakvuf/pull/1433,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1433,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1435,2022-05-05T04:08:58Z,2022-05-07T01:30:59Z,2022-05-11T15:22:59Z,MERGED,True,24,18,3,https://github.com/disaykin,* Fix 'Failed to find offsets for array of structure names and subsym…,1,[],https://github.com/tklengyel/drakvuf/pull/1435,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1435,"…bols' error on linux

Refactor json-profile.c","…bols' error on linux

Refactor json-profile.c",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1435,2022-05-05T04:08:58Z,2022-05-07T01:30:59Z,2022-05-11T15:22:59Z,MERGED,True,24,18,3,https://github.com/disaykin,* Fix 'Failed to find offsets for array of structure names and subsym…,1,[],https://github.com/tklengyel/drakvuf/pull/1435,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1435#issuecomment-1118143065,"…bols' error on linux

Refactor json-profile.c",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1435,2022-05-05T04:08:58Z,2022-05-07T01:30:59Z,2022-05-11T15:22:59Z,MERGED,True,24,18,3,https://github.com/disaykin,* Fix 'Failed to find offsets for array of structure names and subsym…,1,[],https://github.com/tklengyel/drakvuf/pull/1435,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1435#issuecomment-1118606352,"…bols' error on linux

Refactor json-profile.c",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1435,2022-05-05T04:08:58Z,2022-05-07T01:30:59Z,2022-05-11T15:22:59Z,MERGED,True,24,18,3,https://github.com/disaykin,* Fix 'Failed to find offsets for array of structure names and subsym…,1,[],https://github.com/tklengyel/drakvuf/pull/1435,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1435#issuecomment-1119167640,"…bols' error on linux

Refactor json-profile.c",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1436,2022-05-05T05:09:13Z,2022-05-06T00:45:11Z,2022-05-11T15:22:58Z,MERGED,True,12,27,1,https://github.com/disaykin,win-processes: remove some copy-paste,1,[],https://github.com/tklengyel/drakvuf/pull/1436,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1436,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1436,2022-05-05T05:09:13Z,2022-05-06T00:45:11Z,2022-05-11T15:22:58Z,MERGED,True,12,27,1,https://github.com/disaykin,win-processes: remove some copy-paste,1,[],https://github.com/tklengyel/drakvuf/pull/1436,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1436#issuecomment-1118177684,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1436,2022-05-05T05:09:13Z,2022-05-06T00:45:11Z,2022-05-11T15:22:58Z,MERGED,True,12,27,1,https://github.com/disaykin,win-processes: remove some copy-paste,1,[],https://github.com/tklengyel/drakvuf/pull/1436,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1436#issuecomment-1118607495,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1437,2022-05-05T10:52:45Z,2022-05-06T00:44:44Z,2022-05-11T15:22:59Z,MERGED,True,9,2,1,https://github.com/disaykin,linux-procmon: Fix AddressSanitizer: alloc-dealloc-mismatch (operator…,1,[],https://github.com/tklengyel/drakvuf/pull/1437,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1437,… new vs free),… new vs free),True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1437,2022-05-05T10:52:45Z,2022-05-06T00:44:44Z,2022-05-11T15:22:59Z,MERGED,True,9,2,1,https://github.com/disaykin,linux-procmon: Fix AddressSanitizer: alloc-dealloc-mismatch (operator…,1,[],https://github.com/tklengyel/drakvuf/pull/1437,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1437#issuecomment-1118416626,… new vs free),Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1437,2022-05-05T10:52:45Z,2022-05-06T00:44:44Z,2022-05-11T15:22:59Z,MERGED,True,9,2,1,https://github.com/disaykin,linux-procmon: Fix AddressSanitizer: alloc-dealloc-mismatch (operator…,1,[],https://github.com/tklengyel/drakvuf/pull/1437,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1437#issuecomment-1118608304,… new vs free),@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1438,2022-05-05T13:34:04Z,2022-05-05T14:09:56Z,2022-05-05T14:09:58Z,MERGED,True,5,3,1,https://github.com/tklengyel,Fix deb package build on PR,1,[],https://github.com/tklengyel/drakvuf/pull/1438,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1438,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1439,2022-05-08T22:03:51Z,2022-05-08T22:50:39Z,2022-05-08T22:50:41Z,MERGED,True,2,2,2,https://github.com/tklengyel,Update Xen and LibVMI submodules,1,[],https://github.com/tklengyel/drakvuf/pull/1439,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1439,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1440,2022-05-08T23:04:47Z,2022-05-08T23:35:26Z,2022-05-08T23:35:28Z,MERGED,True,34,34,8,https://github.com/tklengyel,Pin non-official github action by hash,2,[],https://github.com/tklengyel/drakvuf/pull/1440,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1440,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1441,2022-05-09T00:38:15Z,2022-05-09T01:01:06Z,2022-05-09T01:01:09Z,CLOSED,False,51,60,9,https://github.com/tklengyel,autoupdate configure.ac,3,[],https://github.com/tklengyel/drakvuf/pull/1441,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1441,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1442,2022-05-11T15:33:56Z,2022-05-11T18:12:43Z,2022-05-13T10:05:55Z,MERGED,True,3,3,1,https://github.com/disaykin,linux-injector: Fix target process check in cr3 callback,1,[],https://github.com/tklengyel/drakvuf/pull/1442,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1442,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1442,2022-05-11T15:33:56Z,2022-05-11T18:12:43Z,2022-05-13T10:05:55Z,MERGED,True,3,3,1,https://github.com/disaykin,linux-injector: Fix target process check in cr3 callback,1,[],https://github.com/tklengyel/drakvuf/pull/1442,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1442#issuecomment-1123937523,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1443,2022-05-13T10:19:15Z,2022-05-13T15:46:09Z,2022-05-13T20:34:01Z,MERGED,True,17,56,1,https://github.com/disaykin,linux-processes: deduplicate get_process_userid and get_process_tid functions,1,[],https://github.com/tklengyel/drakvuf/pull/1443,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1443,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1443,2022-05-13T10:19:15Z,2022-05-13T15:46:09Z,2022-05-13T20:34:01Z,MERGED,True,17,56,1,https://github.com/disaykin,linux-processes: deduplicate get_process_userid and get_process_tid functions,1,[],https://github.com/tklengyel/drakvuf/pull/1443,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1443#issuecomment-1125887664,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1443,2022-05-13T10:19:15Z,2022-05-13T15:46:09Z,2022-05-13T20:34:01Z,MERGED,True,17,56,1,https://github.com/disaykin,linux-processes: deduplicate get_process_userid and get_process_tid functions,1,[],https://github.com/tklengyel/drakvuf/pull/1443,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1443#issuecomment-1125955853,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1443,2022-05-13T10:19:15Z,2022-05-13T15:46:09Z,2022-05-13T20:34:01Z,MERGED,True,17,56,1,https://github.com/disaykin,linux-processes: deduplicate get_process_userid and get_process_tid functions,1,[],https://github.com/tklengyel/drakvuf/pull/1443,https://github.com/disaykin,4,https://github.com/tklengyel/drakvuf/pull/1443#issuecomment-1125985619,,@tklengyel Test fails on win7,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1443,2022-05-13T10:19:15Z,2022-05-13T15:46:09Z,2022-05-13T20:34:01Z,MERGED,True,17,56,1,https://github.com/disaykin,linux-processes: deduplicate get_process_userid and get_process_tid functions,1,[],https://github.com/tklengyel/drakvuf/pull/1443,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1443#issuecomment-1126126290,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1443,2022-05-13T10:19:15Z,2022-05-13T15:46:09Z,2022-05-13T20:34:01Z,MERGED,True,17,56,1,https://github.com/disaykin,linux-processes: deduplicate get_process_userid and get_process_tid functions,1,[],https://github.com/tklengyel/drakvuf/pull/1443,https://github.com/tklengyel,6,https://github.com/tklengyel/drakvuf/pull/1443#issuecomment-1126154448,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1444,2022-05-13T12:05:47Z,2022-05-13T15:46:19Z,2022-05-13T20:34:16Z,MERGED,True,91,35,15,https://github.com/disaykin,plugins: add namespaces for private structures,1,[],https://github.com/tklengyel/drakvuf/pull/1444,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1444,"Do not use structures with the same name in different translation units.
This results in undefined behavior because the linker mistakenly merges
them into a single symbol.
As a result, we can get the following error in runtime:
free(): invalid pointer","Do not use structures with the same name in different translation units.
This results in undefined behavior because the linker mistakenly merges
them into a single symbol.
As a result, we can get the following error in runtime:
free(): invalid pointer",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1444,2022-05-13T12:05:47Z,2022-05-13T15:46:19Z,2022-05-13T20:34:16Z,MERGED,True,91,35,15,https://github.com/disaykin,plugins: add namespaces for private structures,1,[],https://github.com/tklengyel/drakvuf/pull/1444,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1444#issuecomment-1125986697,"Do not use structures with the same name in different translation units.
This results in undefined behavior because the linker mistakenly merges
them into a single symbol.
As a result, we can get the following error in runtime:
free(): invalid pointer",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1444,2022-05-13T12:05:47Z,2022-05-13T15:46:19Z,2022-05-13T20:34:16Z,MERGED,True,91,35,15,https://github.com/disaykin,plugins: add namespaces for private structures,1,[],https://github.com/tklengyel/drakvuf/pull/1444,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1444#issuecomment-1126127530,"Do not use structures with the same name in different translation units.
This results in undefined behavior because the linker mistakenly merges
them into a single symbol.
As a result, we can get the following error in runtime:
free(): invalid pointer",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1444,2022-05-13T12:05:47Z,2022-05-13T15:46:19Z,2022-05-13T20:34:16Z,MERGED,True,91,35,15,https://github.com/disaykin,plugins: add namespaces for private structures,1,[],https://github.com/tklengyel/drakvuf/pull/1444,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1444#issuecomment-1126154242,"Do not use structures with the same name in different translation units.
This results in undefined behavior because the linker mistakenly merges
them into a single symbol.
As a result, we can get the following error in runtime:
free(): invalid pointer",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1445,2022-05-16T12:34:38Z,2022-05-16T15:06:24Z,2022-05-16T15:06:24Z,MERGED,True,491,197,7,https://github.com/archercreat,Rootkitmon v2,8,[],https://github.com/tklengyel/drakvuf/pull/1445,https://github.com/archercreat,1,https://github.com/tklengyel/drakvuf/pull/1445,"Hi there!
I've added new detection techniques to rootkitmon plugin like ci.dll critical structures hooks, ObjectType callbacks, DriverObject!FastIoDispatch and much more.
I've unified reporting mechanism and added readme :)","Hi there!
I've added new detection techniques to rootkitmon plugin like ci.dll critical structures hooks, ObjectType callbacks, DriverObject!FastIoDispatch and much more.
I've unified reporting mechanism and added readme :)",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1445,2022-05-16T12:34:38Z,2022-05-16T15:06:24Z,2022-05-16T15:06:24Z,MERGED,True,491,197,7,https://github.com/archercreat,Rootkitmon v2,8,[],https://github.com/tklengyel/drakvuf/pull/1445,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1445#issuecomment-1127617554,"Hi there!
I've added new detection techniques to rootkitmon plugin like ci.dll critical structures hooks, ObjectType callbacks, DriverObject!FastIoDispatch and much more.
I've unified reporting mechanism and added readme :)",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1445,2022-05-16T12:34:38Z,2022-05-16T15:06:24Z,2022-05-16T15:06:24Z,MERGED,True,491,197,7,https://github.com/archercreat,Rootkitmon v2,8,[],https://github.com/tklengyel/drakvuf/pull/1445,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1445#issuecomment-1127650209,"Hi there!
I've added new detection techniques to rootkitmon plugin like ci.dll critical structures hooks, ObjectType callbacks, DriverObject!FastIoDispatch and much more.
I've unified reporting mechanism and added readme :)",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1446,2022-05-16T13:16:23Z,2022-05-16T23:13:54Z,2022-05-16T23:13:54Z,MERGED,True,850,231,12,https://github.com/archercreat,dkommon update,5,[],https://github.com/tklengyel/drakvuf/pull/1446,https://github.com/archercreat,1,https://github.com/tklengyel/drakvuf/pull/1446,Added an ability to monitor hidden services within services.exe process. A simple PoC of this technique could be found here https://github.com/archercreat/srvhide.,Added an ability to monitor hidden services within services.exe process. A simple PoC of this technique could be found here https://github.com/archercreat/srvhide.,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1446,2022-05-16T13:16:23Z,2022-05-16T23:13:54Z,2022-05-16T23:13:54Z,MERGED,True,850,231,12,https://github.com/archercreat,dkommon update,5,[],https://github.com/tklengyel/drakvuf/pull/1446,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1446#issuecomment-1127660920,Added an ability to monitor hidden services within services.exe process. A simple PoC of this technique could be found here https://github.com/archercreat/srvhide.,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1446,2022-05-16T13:16:23Z,2022-05-16T23:13:54Z,2022-05-16T23:13:54Z,MERGED,True,850,231,12,https://github.com/archercreat,dkommon update,5,[],https://github.com/tklengyel/drakvuf/pull/1446,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1446#issuecomment-1127668051,Added an ability to monitor hidden services within services.exe process. A simple PoC of this technique could be found here https://github.com/archercreat/srvhide.,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1446,2022-05-16T13:16:23Z,2022-05-16T23:13:54Z,2022-05-16T23:13:54Z,MERGED,True,850,231,12,https://github.com/archercreat,dkommon update,5,[],https://github.com/tklengyel/drakvuf/pull/1446,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1446#issuecomment-1127971365,Added an ability to monitor hidden services within services.exe process. A simple PoC of this technique could be found here https://github.com/archercreat/srvhide.,Please rebase on master,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1447,2022-05-16T13:28:47Z,2022-05-16T17:59:46Z,2022-05-16T17:59:46Z,MERGED,True,25,30,2,https://github.com/archercreat,callbackmon: move static variables into class instance,2,[],https://github.com/tklengyel/drakvuf/pull/1447,https://github.com/archercreat,1,https://github.com/tklengyel/drakvuf/pull/1447,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1447,2022-05-16T13:28:47Z,2022-05-16T17:59:46Z,2022-05-16T17:59:46Z,MERGED,True,25,30,2,https://github.com/archercreat,callbackmon: move static variables into class instance,2,[],https://github.com/tklengyel/drakvuf/pull/1447,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1447#issuecomment-1127676273,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1447,2022-05-16T13:28:47Z,2022-05-16T17:59:46Z,2022-05-16T17:59:46Z,MERGED,True,25,30,2,https://github.com/archercreat,callbackmon: move static variables into class instance,2,[],https://github.com/tklengyel/drakvuf/pull/1447,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1447#issuecomment-1127792421,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1448,2022-05-17T11:43:30Z,2022-05-23T17:11:35Z,2022-05-24T07:29:41Z,MERGED,True,83,9,6,https://github.com/disaykin,linux-filetracer: Fix some issues on FileName formatting,1,[],https://github.com/tklengyel/drakvuf/pull/1448,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1448,"fix double escaping of FileName value in JSON; and
fix incorrect formatting of FileName value in KV.","fix double escaping of FileName value in JSON; and
fix incorrect formatting of FileName value in KV.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1448,2022-05-17T11:43:30Z,2022-05-23T17:11:35Z,2022-05-24T07:29:41Z,MERGED,True,83,9,6,https://github.com/disaykin,linux-filetracer: Fix some issues on FileName formatting,1,[],https://github.com/tklengyel/drakvuf/pull/1448,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1448#issuecomment-1128766322,"fix double escaping of FileName value in JSON; and
fix incorrect formatting of FileName value in KV.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1448,2022-05-17T11:43:30Z,2022-05-23T17:11:35Z,2022-05-24T07:29:41Z,MERGED,True,83,9,6,https://github.com/disaykin,linux-filetracer: Fix some issues on FileName formatting,1,[],https://github.com/tklengyel/drakvuf/pull/1448,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1448#issuecomment-1128913829,"fix double escaping of FileName value in JSON; and
fix incorrect formatting of FileName value in KV.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1449,2022-05-23T14:40:47Z,2022-05-23T17:11:43Z,2022-05-24T07:29:52Z,MERGED,True,4,0,1,https://github.com/disaykin,json: do not escape forward slashes on new versions of json-c library,1,[],https://github.com/tklengyel/drakvuf/pull/1449,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1449,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1449,2022-05-23T14:40:47Z,2022-05-23T17:11:43Z,2022-05-24T07:29:52Z,MERGED,True,4,0,1,https://github.com/disaykin,json: do not escape forward slashes on new versions of json-c library,1,[],https://github.com/tklengyel/drakvuf/pull/1449,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1449#issuecomment-1134764792,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1449,2022-05-23T14:40:47Z,2022-05-23T17:11:43Z,2022-05-24T07:29:52Z,MERGED,True,4,0,1,https://github.com/disaykin,json: do not escape forward slashes on new versions of json-c library,1,[],https://github.com/tklengyel/drakvuf/pull/1449,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1449#issuecomment-1134822377,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1450,2022-05-24T09:30:31Z,,2022-06-03T16:48:01Z,OPEN,False,292,199,14,https://github.com/skvl,libuserhook: load page with MmCopyVirtualMemory instead of direct PF,3,[],https://github.com/tklengyel/drakvuf/pull/1450,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1450,"This fixes ""SYSTEM_SERVICE_EXCEPTION"" BSOD.
The logical error results from relaying on system service handler for PF bypass. From STDERR (with my comments):
# VM-exit ""X""
## Hook return from ""NtMapViewOfSection"" - ""map_view_of_section_ret_cb"".
1652304522.355615               Trap added @ PA 0x287a153 RPA 0xff085153 Page 10362 for NtMapViewOfSection ret.

# VM-exit ""Х+1""
## Export table not fully loaded - inject #PF.
1652304522.358859 [USERHOOK] Export info not accessible, page fault 202000

# VM-exit ""Х+1""
## ""Entered system service handler"" message is expected. And time delta is too small.
## Export table is expected to be fully loaded. Search for ""imm32!ImmEnumInputContext"".
## ""vmi_translate_sym2v"" fails. Set ""target.state = HOOK_FAILED"" and continue other ""targets"".
1652304522.358922 [USERHOOK] Failed to hook ImmEnumInputContext: failed to translate symbol to address
## Traverse all ""targets"" for the ""DLL"" and mark it hooked: ""dll_meta->v.is_hooked = true"".
1652304522.358941 [USERHOOK] Done, flag DLL as hooked
## For every plug-in call it's ""post_cb"".
1652304522.358977 [APIMON] DLL hooked - done
1652304522.358997 [RPCMON] DLL hooked - done
1652304522.359011 [HIDEVM] DLL hooked - done
## Remove breakpoint from ""NtMapViewOfSection ret"".
1652304522.359034 Removing breakpoint trap from 0x287a153.
1652304522.359053 Removing breakpoint trap from 0x287a153.
1652304522.359193 Removed memtrap for GFN 0x287a in altp2m view 1
1652304522.359225 Removed memtrap for GFN 0xff085 in altp2m view 1

# VM-exit ""X+2""
1652304522.364722 [USERHOOK] Entered system service handler
1652304522.364771 [USERHOOK] Not suppressing service exception - not our fault

# BSOD is here (message from ""bsodmon"" in STDOUT)

1652304522.365096 DRAKVUF polling loop finished
1652304522.365123 Finished DRAKVUF main loop

One could notice that between messages 1652304522.358859 [USERHOOK] Export info not accessible, page fault 202000 and 1652304522.358922 [USERHOOK] Failed to hook ImmEnumInputContext: failed to translate symbol to address:

No message Entered system service handler.
The time delta is about 100 micro sec. This value is too small. There is about 3000 micro sec between X and X+1. And about 5500 micro sec between X+1 and X+2.

I have decided to use approach from procdump2 plug-in: inject MmCopyVirtualMemory. This function:

handles all page faults for us;
there is no need to to allocate buffer in non paged pool we could read small value onto the stack;
we could speed up the whole drakvuf by removing hook from system service handler.

I have leaved some of debug messages for the nearest future. It would be helpful if some issue occur.","This fixes ""SYSTEM_SERVICE_EXCEPTION"" BSOD.
The logical error results from relaying on system service handler for PF bypass. From STDERR (with my comments):
# VM-exit ""X""
## Hook return from ""NtMapViewOfSection"" - ""map_view_of_section_ret_cb"".
1652304522.355615               Trap added @ PA 0x287a153 RPA 0xff085153 Page 10362 for NtMapViewOfSection ret.

# VM-exit ""Х+1""
## Export table not fully loaded - inject #PF.
1652304522.358859 [USERHOOK] Export info not accessible, page fault 202000

# VM-exit ""Х+1""
## ""Entered system service handler"" message is expected. And time delta is too small.
## Export table is expected to be fully loaded. Search for ""imm32!ImmEnumInputContext"".
## ""vmi_translate_sym2v"" fails. Set ""target.state = HOOK_FAILED"" and continue other ""targets"".
1652304522.358922 [USERHOOK] Failed to hook ImmEnumInputContext: failed to translate symbol to address
## Traverse all ""targets"" for the ""DLL"" and mark it hooked: ""dll_meta->v.is_hooked = true"".
1652304522.358941 [USERHOOK] Done, flag DLL as hooked
## For every plug-in call it's ""post_cb"".
1652304522.358977 [APIMON] DLL hooked - done
1652304522.358997 [RPCMON] DLL hooked - done
1652304522.359011 [HIDEVM] DLL hooked - done
## Remove breakpoint from ""NtMapViewOfSection ret"".
1652304522.359034 Removing breakpoint trap from 0x287a153.
1652304522.359053 Removing breakpoint trap from 0x287a153.
1652304522.359193 Removed memtrap for GFN 0x287a in altp2m view 1
1652304522.359225 Removed memtrap for GFN 0xff085 in altp2m view 1

# VM-exit ""X+2""
1652304522.364722 [USERHOOK] Entered system service handler
1652304522.364771 [USERHOOK] Not suppressing service exception - not our fault

# BSOD is here (message from ""bsodmon"" in STDOUT)

1652304522.365096 DRAKVUF polling loop finished
1652304522.365123 Finished DRAKVUF main loop

One could notice that between messages 1652304522.358859 [USERHOOK] Export info not accessible, page fault 202000 and 1652304522.358922 [USERHOOK] Failed to hook ImmEnumInputContext: failed to translate symbol to address:

No message Entered system service handler.
The time delta is about 100 micro sec. This value is too small. There is about 3000 micro sec between X and X+1. And about 5500 micro sec between X+1 and X+2.

I have decided to use approach from procdump2 plug-in: inject MmCopyVirtualMemory. This function:

handles all page faults for us;
there is no need to to allocate buffer in non paged pool we could read small value onto the stack;
we could speed up the whole drakvuf by removing hook from system service handler.

I have leaved some of debug messages for the nearest future. It would be helpful if some issue occur.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1450,2022-05-24T09:30:31Z,,2022-06-03T16:48:01Z,OPEN,False,292,199,14,https://github.com/skvl,libuserhook: load page with MmCopyVirtualMemory instead of direct PF,3,[],https://github.com/tklengyel/drakvuf/pull/1450,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1450#issuecomment-1135649810,"This fixes ""SYSTEM_SERVICE_EXCEPTION"" BSOD.
The logical error results from relaying on system service handler for PF bypass. From STDERR (with my comments):
# VM-exit ""X""
## Hook return from ""NtMapViewOfSection"" - ""map_view_of_section_ret_cb"".
1652304522.355615               Trap added @ PA 0x287a153 RPA 0xff085153 Page 10362 for NtMapViewOfSection ret.

# VM-exit ""Х+1""
## Export table not fully loaded - inject #PF.
1652304522.358859 [USERHOOK] Export info not accessible, page fault 202000

# VM-exit ""Х+1""
## ""Entered system service handler"" message is expected. And time delta is too small.
## Export table is expected to be fully loaded. Search for ""imm32!ImmEnumInputContext"".
## ""vmi_translate_sym2v"" fails. Set ""target.state = HOOK_FAILED"" and continue other ""targets"".
1652304522.358922 [USERHOOK] Failed to hook ImmEnumInputContext: failed to translate symbol to address
## Traverse all ""targets"" for the ""DLL"" and mark it hooked: ""dll_meta->v.is_hooked = true"".
1652304522.358941 [USERHOOK] Done, flag DLL as hooked
## For every plug-in call it's ""post_cb"".
1652304522.358977 [APIMON] DLL hooked - done
1652304522.358997 [RPCMON] DLL hooked - done
1652304522.359011 [HIDEVM] DLL hooked - done
## Remove breakpoint from ""NtMapViewOfSection ret"".
1652304522.359034 Removing breakpoint trap from 0x287a153.
1652304522.359053 Removing breakpoint trap from 0x287a153.
1652304522.359193 Removed memtrap for GFN 0x287a in altp2m view 1
1652304522.359225 Removed memtrap for GFN 0xff085 in altp2m view 1

# VM-exit ""X+2""
1652304522.364722 [USERHOOK] Entered system service handler
1652304522.364771 [USERHOOK] Not suppressing service exception - not our fault

# BSOD is here (message from ""bsodmon"" in STDOUT)

1652304522.365096 DRAKVUF polling loop finished
1652304522.365123 Finished DRAKVUF main loop

One could notice that between messages 1652304522.358859 [USERHOOK] Export info not accessible, page fault 202000 and 1652304522.358922 [USERHOOK] Failed to hook ImmEnumInputContext: failed to translate symbol to address:

No message Entered system service handler.
The time delta is about 100 micro sec. This value is too small. There is about 3000 micro sec between X and X+1. And about 5500 micro sec between X+1 and X+2.

I have decided to use approach from procdump2 plug-in: inject MmCopyVirtualMemory. This function:

handles all page faults for us;
there is no need to to allocate buffer in non paged pool we could read small value onto the stack;
we could speed up the whole drakvuf by removing hook from system service handler.

I have leaved some of debug messages for the nearest future. It would be helpful if some issue occur.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1450,2022-05-24T09:30:31Z,,2022-06-03T16:48:01Z,OPEN,False,292,199,14,https://github.com/skvl,libuserhook: load page with MmCopyVirtualMemory instead of direct PF,3,[],https://github.com/tklengyel/drakvuf/pull/1450,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1450#issuecomment-1135998587,"This fixes ""SYSTEM_SERVICE_EXCEPTION"" BSOD.
The logical error results from relaying on system service handler for PF bypass. From STDERR (with my comments):
# VM-exit ""X""
## Hook return from ""NtMapViewOfSection"" - ""map_view_of_section_ret_cb"".
1652304522.355615               Trap added @ PA 0x287a153 RPA 0xff085153 Page 10362 for NtMapViewOfSection ret.

# VM-exit ""Х+1""
## Export table not fully loaded - inject #PF.
1652304522.358859 [USERHOOK] Export info not accessible, page fault 202000

# VM-exit ""Х+1""
## ""Entered system service handler"" message is expected. And time delta is too small.
## Export table is expected to be fully loaded. Search for ""imm32!ImmEnumInputContext"".
## ""vmi_translate_sym2v"" fails. Set ""target.state = HOOK_FAILED"" and continue other ""targets"".
1652304522.358922 [USERHOOK] Failed to hook ImmEnumInputContext: failed to translate symbol to address
## Traverse all ""targets"" for the ""DLL"" and mark it hooked: ""dll_meta->v.is_hooked = true"".
1652304522.358941 [USERHOOK] Done, flag DLL as hooked
## For every plug-in call it's ""post_cb"".
1652304522.358977 [APIMON] DLL hooked - done
1652304522.358997 [RPCMON] DLL hooked - done
1652304522.359011 [HIDEVM] DLL hooked - done
## Remove breakpoint from ""NtMapViewOfSection ret"".
1652304522.359034 Removing breakpoint trap from 0x287a153.
1652304522.359053 Removing breakpoint trap from 0x287a153.
1652304522.359193 Removed memtrap for GFN 0x287a in altp2m view 1
1652304522.359225 Removed memtrap for GFN 0xff085 in altp2m view 1

# VM-exit ""X+2""
1652304522.364722 [USERHOOK] Entered system service handler
1652304522.364771 [USERHOOK] Not suppressing service exception - not our fault

# BSOD is here (message from ""bsodmon"" in STDOUT)

1652304522.365096 DRAKVUF polling loop finished
1652304522.365123 Finished DRAKVUF main loop

One could notice that between messages 1652304522.358859 [USERHOOK] Export info not accessible, page fault 202000 and 1652304522.358922 [USERHOOK] Failed to hook ImmEnumInputContext: failed to translate symbol to address:

No message Entered system service handler.
The time delta is about 100 micro sec. This value is too small. There is about 3000 micro sec between X and X+1. And about 5500 micro sec between X+1 and X+2.

I have decided to use approach from procdump2 plug-in: inject MmCopyVirtualMemory. This function:

handles all page faults for us;
there is no need to to allocate buffer in non paged pool we could read small value onto the stack;
we could speed up the whole drakvuf by removing hook from system service handler.

I have leaved some of debug messages for the nearest future. It would be helpful if some issue occur.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1450,2022-05-24T09:30:31Z,,2022-06-03T16:48:01Z,OPEN,False,292,199,14,https://github.com/skvl,libuserhook: load page with MmCopyVirtualMemory instead of direct PF,3,[],https://github.com/tklengyel/drakvuf/pull/1450,https://github.com/skvl,4,https://github.com/tklengyel/drakvuf/pull/1450#issuecomment-1143719158,"This fixes ""SYSTEM_SERVICE_EXCEPTION"" BSOD.
The logical error results from relaying on system service handler for PF bypass. From STDERR (with my comments):
# VM-exit ""X""
## Hook return from ""NtMapViewOfSection"" - ""map_view_of_section_ret_cb"".
1652304522.355615               Trap added @ PA 0x287a153 RPA 0xff085153 Page 10362 for NtMapViewOfSection ret.

# VM-exit ""Х+1""
## Export table not fully loaded - inject #PF.
1652304522.358859 [USERHOOK] Export info not accessible, page fault 202000

# VM-exit ""Х+1""
## ""Entered system service handler"" message is expected. And time delta is too small.
## Export table is expected to be fully loaded. Search for ""imm32!ImmEnumInputContext"".
## ""vmi_translate_sym2v"" fails. Set ""target.state = HOOK_FAILED"" and continue other ""targets"".
1652304522.358922 [USERHOOK] Failed to hook ImmEnumInputContext: failed to translate symbol to address
## Traverse all ""targets"" for the ""DLL"" and mark it hooked: ""dll_meta->v.is_hooked = true"".
1652304522.358941 [USERHOOK] Done, flag DLL as hooked
## For every plug-in call it's ""post_cb"".
1652304522.358977 [APIMON] DLL hooked - done
1652304522.358997 [RPCMON] DLL hooked - done
1652304522.359011 [HIDEVM] DLL hooked - done
## Remove breakpoint from ""NtMapViewOfSection ret"".
1652304522.359034 Removing breakpoint trap from 0x287a153.
1652304522.359053 Removing breakpoint trap from 0x287a153.
1652304522.359193 Removed memtrap for GFN 0x287a in altp2m view 1
1652304522.359225 Removed memtrap for GFN 0xff085 in altp2m view 1

# VM-exit ""X+2""
1652304522.364722 [USERHOOK] Entered system service handler
1652304522.364771 [USERHOOK] Not suppressing service exception - not our fault

# BSOD is here (message from ""bsodmon"" in STDOUT)

1652304522.365096 DRAKVUF polling loop finished
1652304522.365123 Finished DRAKVUF main loop

One could notice that between messages 1652304522.358859 [USERHOOK] Export info not accessible, page fault 202000 and 1652304522.358922 [USERHOOK] Failed to hook ImmEnumInputContext: failed to translate symbol to address:

No message Entered system service handler.
The time delta is about 100 micro sec. This value is too small. There is about 3000 micro sec between X and X+1. And about 5500 micro sec between X+1 and X+2.

I have decided to use approach from procdump2 plug-in: inject MmCopyVirtualMemory. This function:

handles all page faults for us;
there is no need to to allocate buffer in non paged pool we could read small value onto the stack;
we could speed up the whole drakvuf by removing hook from system service handler.

I have leaved some of debug messages for the nearest future. It would be helpful if some issue occur.","@tklengyel , what's the error?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1450,2022-05-24T09:30:31Z,,2022-06-03T16:48:01Z,OPEN,False,292,199,14,https://github.com/skvl,libuserhook: load page with MmCopyVirtualMemory instead of direct PF,3,[],https://github.com/tklengyel/drakvuf/pull/1450,https://github.com/tklengyel,5,https://github.com/tklengyel/drakvuf/pull/1450#issuecomment-1143744871,"This fixes ""SYSTEM_SERVICE_EXCEPTION"" BSOD.
The logical error results from relaying on system service handler for PF bypass. From STDERR (with my comments):
# VM-exit ""X""
## Hook return from ""NtMapViewOfSection"" - ""map_view_of_section_ret_cb"".
1652304522.355615               Trap added @ PA 0x287a153 RPA 0xff085153 Page 10362 for NtMapViewOfSection ret.

# VM-exit ""Х+1""
## Export table not fully loaded - inject #PF.
1652304522.358859 [USERHOOK] Export info not accessible, page fault 202000

# VM-exit ""Х+1""
## ""Entered system service handler"" message is expected. And time delta is too small.
## Export table is expected to be fully loaded. Search for ""imm32!ImmEnumInputContext"".
## ""vmi_translate_sym2v"" fails. Set ""target.state = HOOK_FAILED"" and continue other ""targets"".
1652304522.358922 [USERHOOK] Failed to hook ImmEnumInputContext: failed to translate symbol to address
## Traverse all ""targets"" for the ""DLL"" and mark it hooked: ""dll_meta->v.is_hooked = true"".
1652304522.358941 [USERHOOK] Done, flag DLL as hooked
## For every plug-in call it's ""post_cb"".
1652304522.358977 [APIMON] DLL hooked - done
1652304522.358997 [RPCMON] DLL hooked - done
1652304522.359011 [HIDEVM] DLL hooked - done
## Remove breakpoint from ""NtMapViewOfSection ret"".
1652304522.359034 Removing breakpoint trap from 0x287a153.
1652304522.359053 Removing breakpoint trap from 0x287a153.
1652304522.359193 Removed memtrap for GFN 0x287a in altp2m view 1
1652304522.359225 Removed memtrap for GFN 0xff085 in altp2m view 1

# VM-exit ""X+2""
1652304522.364722 [USERHOOK] Entered system service handler
1652304522.364771 [USERHOOK] Not suppressing service exception - not our fault

# BSOD is here (message from ""bsodmon"" in STDOUT)

1652304522.365096 DRAKVUF polling loop finished
1652304522.365123 Finished DRAKVUF main loop

One could notice that between messages 1652304522.358859 [USERHOOK] Export info not accessible, page fault 202000 and 1652304522.358922 [USERHOOK] Failed to hook ImmEnumInputContext: failed to translate symbol to address:

No message Entered system service handler.
The time delta is about 100 micro sec. This value is too small. There is about 3000 micro sec between X and X+1. And about 5500 micro sec between X+1 and X+2.

I have decided to use approach from procdump2 plug-in: inject MmCopyVirtualMemory. This function:

handles all page faults for us;
there is no need to to allocate buffer in non paged pool we could read small value onto the stack;
we could speed up the whole drakvuf by removing hook from system service handler.

I have leaved some of debug messages for the nearest future. It would be helpful if some issue occur.",@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1450,2022-05-24T09:30:31Z,,2022-06-03T16:48:01Z,OPEN,False,292,199,14,https://github.com/skvl,libuserhook: load page with MmCopyVirtualMemory instead of direct PF,3,[],https://github.com/tklengyel/drakvuf/pull/1450,https://github.com/icedevml,6,https://github.com/tklengyel/drakvuf/pull/1450#issuecomment-1146169719,"This fixes ""SYSTEM_SERVICE_EXCEPTION"" BSOD.
The logical error results from relaying on system service handler for PF bypass. From STDERR (with my comments):
# VM-exit ""X""
## Hook return from ""NtMapViewOfSection"" - ""map_view_of_section_ret_cb"".
1652304522.355615               Trap added @ PA 0x287a153 RPA 0xff085153 Page 10362 for NtMapViewOfSection ret.

# VM-exit ""Х+1""
## Export table not fully loaded - inject #PF.
1652304522.358859 [USERHOOK] Export info not accessible, page fault 202000

# VM-exit ""Х+1""
## ""Entered system service handler"" message is expected. And time delta is too small.
## Export table is expected to be fully loaded. Search for ""imm32!ImmEnumInputContext"".
## ""vmi_translate_sym2v"" fails. Set ""target.state = HOOK_FAILED"" and continue other ""targets"".
1652304522.358922 [USERHOOK] Failed to hook ImmEnumInputContext: failed to translate symbol to address
## Traverse all ""targets"" for the ""DLL"" and mark it hooked: ""dll_meta->v.is_hooked = true"".
1652304522.358941 [USERHOOK] Done, flag DLL as hooked
## For every plug-in call it's ""post_cb"".
1652304522.358977 [APIMON] DLL hooked - done
1652304522.358997 [RPCMON] DLL hooked - done
1652304522.359011 [HIDEVM] DLL hooked - done
## Remove breakpoint from ""NtMapViewOfSection ret"".
1652304522.359034 Removing breakpoint trap from 0x287a153.
1652304522.359053 Removing breakpoint trap from 0x287a153.
1652304522.359193 Removed memtrap for GFN 0x287a in altp2m view 1
1652304522.359225 Removed memtrap for GFN 0xff085 in altp2m view 1

# VM-exit ""X+2""
1652304522.364722 [USERHOOK] Entered system service handler
1652304522.364771 [USERHOOK] Not suppressing service exception - not our fault

# BSOD is here (message from ""bsodmon"" in STDOUT)

1652304522.365096 DRAKVUF polling loop finished
1652304522.365123 Finished DRAKVUF main loop

One could notice that between messages 1652304522.358859 [USERHOOK] Export info not accessible, page fault 202000 and 1652304522.358922 [USERHOOK] Failed to hook ImmEnumInputContext: failed to translate symbol to address:

No message Entered system service handler.
The time delta is about 100 micro sec. This value is too small. There is about 3000 micro sec between X and X+1. And about 5500 micro sec between X+1 and X+2.

I have decided to use approach from procdump2 plug-in: inject MmCopyVirtualMemory. This function:

handles all page faults for us;
there is no need to to allocate buffer in non paged pool we could read small value onto the stack;
we could speed up the whole drakvuf by removing hook from system service handler.

I have leaved some of debug messages for the nearest future. It would be helpful if some issue occur.","Hi! Thanks for the proposed fix.
Do I understand correctly that you want to rely on injecting MmCopyVirtualMemory instead of requesting a page fault directly, but you use 0xdeadbeafdeadbeaf as the target address for the function? So the function is supposed to load the memory and then fail because the target buffer doesn't exist?",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1451,2022-05-24T10:19:33Z,2022-05-24T16:02:33Z,2022-05-24T16:02:33Z,MERGED,True,232,123,3,https://github.com/skvl,Procdump2 fixes,2,[],https://github.com/tklengyel/drakvuf/pull/1451,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1451,"Fix multiple logical errors which result in BSODs
Re-factor the code","Fix multiple logical errors which result in BSODs
Re-factor the code",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1451,2022-05-24T10:19:33Z,2022-05-24T16:02:33Z,2022-05-24T16:02:33Z,MERGED,True,232,123,3,https://github.com/skvl,Procdump2 fixes,2,[],https://github.com/tklengyel/drakvuf/pull/1451,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1451#issuecomment-1135724286,"Fix multiple logical errors which result in BSODs
Re-factor the code",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1451,2022-05-24T10:19:33Z,2022-05-24T16:02:33Z,2022-05-24T16:02:33Z,MERGED,True,232,123,3,https://github.com/skvl,Procdump2 fixes,2,[],https://github.com/tklengyel/drakvuf/pull/1451,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1451#issuecomment-1136004432,"Fix multiple logical errors which result in BSODs
Re-factor the code",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1452,2022-05-24T16:52:19Z,2022-05-24T17:33:52Z,2022-05-24T17:33:54Z,MERGED,True,8,11,2,https://github.com/tklengyel,Don't use unsafe strcpy,1,[],https://github.com/tklengyel/drakvuf/pull/1452,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1452,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1452,2022-05-24T16:52:19Z,2022-05-24T17:33:52Z,2022-05-24T17:33:54Z,MERGED,True,8,11,2,https://github.com/tklengyel,Don't use unsafe strcpy,1,[],https://github.com/tklengyel/drakvuf/pull/1452,https://github.com/tklengyel,2,https://github.com/tklengyel/drakvuf/pull/1452#issuecomment-1136203731,,@drakvuf-jenkins Retest this please,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1453,2022-05-27T00:52:58Z,2022-05-27T01:23:27Z,2022-05-27T01:23:29Z,MERGED,True,56,3,3,https://github.com/tklengyel,Add more plugins to Meson build,1,[],https://github.com/tklengyel/drakvuf/pull/1453,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1453,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1454,2022-05-27T01:25:03Z,2022-05-27T01:45:30Z,2022-05-27T01:45:33Z,MERGED,True,33,209,21,https://github.com/tklengyel,Fix cppcheck warnings,1,[],https://github.com/tklengyel/drakvuf/pull/1454,https://github.com/tklengyel,1,https://github.com/tklengyel/drakvuf/pull/1454,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1455,2022-05-30T22:58:24Z,2022-05-31T14:23:14Z,2022-05-31T14:23:24Z,MERGED,True,109,106,6,https://github.com/piotr-krysiuk,Fix libinjector timeouts,3,[],https://github.com/tklengyel/drakvuf/pull/1455,https://github.com/piotr-krysiuk,1,https://github.com/tklengyel/drakvuf/pull/1455,"libinjector, win: Fix intermittent timeouts
After restoring the saved CPU registers, each injection method waits
for the next trap before exiting the injector loop. This means that
the target thread, continuing to execute the original program, needs
to trigger the same trap before the injector can finish. And that leads
to unpredictable waits. For example, waits of a few minutes were
observed when testing injector against explorer.exe under Windows 7
Enterprise (x64). Further, injector could wait forever in case the
target thread never revisits the trap.
The waits were introduced when refactoring injection methods in commit
3fdb370 (""win_injector: seperate readfile and writefile to
different files  (#1319)"").
Fix this issue by arranging for the injector loop to exit immediately
after restoring the saved CPU registers.","libinjector, win: Fix intermittent timeouts
After restoring the saved CPU registers, each injection method waits
for the next trap before exiting the injector loop. This means that
the target thread, continuing to execute the original program, needs
to trigger the same trap before the injector can finish. And that leads
to unpredictable waits. For example, waits of a few minutes were
observed when testing injector against explorer.exe under Windows 7
Enterprise (x64). Further, injector could wait forever in case the
target thread never revisits the trap.
The waits were introduced when refactoring injection methods in commit
3fdb370 (""win_injector: seperate readfile and writefile to
different files  (#1319)"").
Fix this issue by arranging for the injector loop to exit immediately
after restoring the saved CPU registers.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1455,2022-05-30T22:58:24Z,2022-05-31T14:23:14Z,2022-05-31T14:23:24Z,MERGED,True,109,106,6,https://github.com/piotr-krysiuk,Fix libinjector timeouts,3,[],https://github.com/tklengyel/drakvuf/pull/1455,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1455#issuecomment-1141525852,"libinjector, win: Fix intermittent timeouts
After restoring the saved CPU registers, each injection method waits
for the next trap before exiting the injector loop. This means that
the target thread, continuing to execute the original program, needs
to trigger the same trap before the injector can finish. And that leads
to unpredictable waits. For example, waits of a few minutes were
observed when testing injector against explorer.exe under Windows 7
Enterprise (x64). Further, injector could wait forever in case the
target thread never revisits the trap.
The waits were introduced when refactoring injection methods in commit
3fdb370 (""win_injector: seperate readfile and writefile to
different files  (#1319)"").
Fix this issue by arranging for the injector loop to exit immediately
after restoring the saved CPU registers.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1455,2022-05-30T22:58:24Z,2022-05-31T14:23:14Z,2022-05-31T14:23:24Z,MERGED,True,109,106,6,https://github.com/piotr-krysiuk,Fix libinjector timeouts,3,[],https://github.com/tklengyel/drakvuf/pull/1455,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1455#issuecomment-1142163456,"libinjector, win: Fix intermittent timeouts
After restoring the saved CPU registers, each injection method waits
for the next trap before exiting the injector loop. This means that
the target thread, continuing to execute the original program, needs
to trigger the same trap before the injector can finish. And that leads
to unpredictable waits. For example, waits of a few minutes were
observed when testing injector against explorer.exe under Windows 7
Enterprise (x64). Further, injector could wait forever in case the
target thread never revisits the trap.
The waits were introduced when refactoring injection methods in commit
3fdb370 (""win_injector: seperate readfile and writefile to
different files  (#1319)"").
Fix this issue by arranging for the injector loop to exit immediately
after restoring the saved CPU registers.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1455,2022-05-30T22:58:24Z,2022-05-31T14:23:14Z,2022-05-31T14:23:24Z,MERGED,True,109,106,6,https://github.com/piotr-krysiuk,Fix libinjector timeouts,3,[],https://github.com/tklengyel/drakvuf/pull/1455,https://github.com/tklengyel,4,https://github.com/tklengyel/drakvuf/pull/1455#issuecomment-1142204805,"libinjector, win: Fix intermittent timeouts
After restoring the saved CPU registers, each injection method waits
for the next trap before exiting the injector loop. This means that
the target thread, continuing to execute the original program, needs
to trigger the same trap before the injector can finish. And that leads
to unpredictable waits. For example, waits of a few minutes were
observed when testing injector against explorer.exe under Windows 7
Enterprise (x64). Further, injector could wait forever in case the
target thread never revisits the trap.
The waits were introduced when refactoring injection methods in commit
3fdb370 (""win_injector: seperate readfile and writefile to
different files  (#1319)"").
Fix this issue by arranging for the injector loop to exit immediately
after restoring the saved CPU registers.",Thanks for the PR!,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1457,2022-06-01T14:14:38Z,2022-06-01T16:44:39Z,2022-06-02T15:53:04Z,MERGED,True,392,304,12,https://github.com/disaykin,linux-injector: print injection info,1,[],https://github.com/tklengyel/drakvuf/pull/1457,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1457,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1457,2022-06-01T14:14:38Z,2022-06-01T16:44:39Z,2022-06-02T15:53:04Z,MERGED,True,392,304,12,https://github.com/disaykin,linux-injector: print injection info,1,[],https://github.com/tklengyel/drakvuf/pull/1457,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1457#issuecomment-1143668387,,Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1457,2022-06-01T14:14:38Z,2022-06-01T16:44:39Z,2022-06-02T15:53:04Z,MERGED,True,392,304,12,https://github.com/disaykin,linux-injector: print injection info,1,[],https://github.com/tklengyel/drakvuf/pull/1457,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1457#issuecomment-1143746401,,@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1458,2022-06-01T14:49:16Z,2022-06-01T16:44:48Z,2022-06-01T16:44:48Z,MERGED,True,16,0,1,https://github.com/skvl,libdrakvuf: print special names for kernel threads t,1,[],https://github.com/tklengyel/drakvuf/pull/1458,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1458,"The task_struct for Linux kernel threads contains null pointer (https://stackoverflow.com/a/25956682 , https://qr.ae/pvFGw3 ).
This results in errors like this:
1654086286.801804 Can't get exe_file from mm_struct

Thus we get empty names in some cases.
With the patch we set special name kthread-PID. This makes drakvuf output more clean.","The task_struct for Linux kernel threads contains null pointer (https://stackoverflow.com/a/25956682 , https://qr.ae/pvFGw3 ).
This results in errors like this:
1654086286.801804 Can't get exe_file from mm_struct

Thus we get empty names in some cases.
With the patch we set special name kthread-PID. This makes drakvuf output more clean.",True,{'THUMBS_UP': ['https://github.com/tklengyel']}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1458,2022-06-01T14:49:16Z,2022-06-01T16:44:48Z,2022-06-01T16:44:48Z,MERGED,True,16,0,1,https://github.com/skvl,libdrakvuf: print special names for kernel threads t,1,[],https://github.com/tklengyel/drakvuf/pull/1458,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1458#issuecomment-1143709176,"The task_struct for Linux kernel threads contains null pointer (https://stackoverflow.com/a/25956682 , https://qr.ae/pvFGw3 ).
This results in errors like this:
1654086286.801804 Can't get exe_file from mm_struct

Thus we get empty names in some cases.
With the patch we set special name kthread-PID. This makes drakvuf output more clean.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1458,2022-06-01T14:49:16Z,2022-06-01T16:44:48Z,2022-06-01T16:44:48Z,MERGED,True,16,0,1,https://github.com/skvl,libdrakvuf: print special names for kernel threads t,1,[],https://github.com/tklengyel/drakvuf/pull/1458,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1458#issuecomment-1143747268,"The task_struct for Linux kernel threads contains null pointer (https://stackoverflow.com/a/25956682 , https://qr.ae/pvFGw3 ).
This results in errors like this:
1654086286.801804 Can't get exe_file from mm_struct

Thus we get empty names in some cases.
With the patch we set special name kthread-PID. This makes drakvuf output more clean.",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1459,2022-06-01T14:56:37Z,2022-06-01T16:44:56Z,2022-06-01T16:44:56Z,MERGED,True,31,0,1,https://github.com/skvl,procmon: print initial process list for linux,1,[],https://github.com/tklengyel/drakvuf/pull/1459,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1459,"Print initial process list in procmon for Linux.
Relates to #1458","Print initial process list in procmon for Linux.
Relates to #1458",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1459,2022-06-01T14:56:37Z,2022-06-01T16:44:56Z,2022-06-01T16:44:56Z,MERGED,True,31,0,1,https://github.com/skvl,procmon: print initial process list for linux,1,[],https://github.com/tklengyel/drakvuf/pull/1459,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1459#issuecomment-1143717593,"Print initial process list in procmon for Linux.
Relates to #1458",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1459,2022-06-01T14:56:37Z,2022-06-01T16:44:56Z,2022-06-01T16:44:56Z,MERGED,True,31,0,1,https://github.com/skvl,procmon: print initial process list for linux,1,[],https://github.com/tklengyel/drakvuf/pull/1459,https://github.com/tklengyel,3,https://github.com/tklengyel/drakvuf/pull/1459#issuecomment-1143747650,"Print initial process list in procmon for Linux.
Relates to #1458",@drakvuf-jenkins This is OK to test,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1460,2022-06-03T10:56:14Z,,2022-06-03T11:11:37Z,OPEN,False,213,30,14,https://github.com/skvl,libinjector fix for Linux,3,[],https://github.com/tklengyel/drakvuf/pull/1460,https://github.com/skvl,1,https://github.com/tklengyel/drakvuf/pull/1460,"Fixes for several errors:

drakvuf_set_vcpu_regs corrupts the state of Linux VM.
Environment variables are not copied into execve syscall.

While experimenting with Linux I have experienced SIGSEGV error in host process after injection. By host I mean the process passed via -i option.
I have found that the trick in handle_gprs_registers function doesn't work for Linux:

The image shows that after the handle_gprs_registers expected RDI and RSI registers are correct. But after _int3_cb their values are wrong. With VNC windows one could see the ""Event Tracing"" log collected with echo 'syscalls:*' > /sys/kernel/debug/tracing/set_event.
I have switched to usual VMI_EVENT_RESPONSE_SET_REGISTERS instead of drakvuf_set_vcpu_regs. And this fixed the issues.
After the fix I have found other issue. GUI applications failed to start without DISPLAY variable. This been fixed by coping inherited environment variables from __environ array after vfork.","Fixes for several errors:

drakvuf_set_vcpu_regs corrupts the state of Linux VM.
Environment variables are not copied into execve syscall.

While experimenting with Linux I have experienced SIGSEGV error in host process after injection. By host I mean the process passed via -i option.
I have found that the trick in handle_gprs_registers function doesn't work for Linux:

The image shows that after the handle_gprs_registers expected RDI and RSI registers are correct. But after _int3_cb their values are wrong. With VNC windows one could see the ""Event Tracing"" log collected with echo 'syscalls:*' > /sys/kernel/debug/tracing/set_event.
I have switched to usual VMI_EVENT_RESPONSE_SET_REGISTERS instead of drakvuf_set_vcpu_regs. And this fixed the issues.
After the fix I have found other issue. GUI applications failed to start without DISPLAY variable. This been fixed by coping inherited environment variables from __environ array after vfork.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1460,2022-06-03T10:56:14Z,,2022-06-03T11:11:37Z,OPEN,False,213,30,14,https://github.com/skvl,libinjector fix for Linux,3,[],https://github.com/tklengyel/drakvuf/pull/1460,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1460#issuecomment-1145844677,"Fixes for several errors:

drakvuf_set_vcpu_regs corrupts the state of Linux VM.
Environment variables are not copied into execve syscall.

While experimenting with Linux I have experienced SIGSEGV error in host process after injection. By host I mean the process passed via -i option.
I have found that the trick in handle_gprs_registers function doesn't work for Linux:

The image shows that after the handle_gprs_registers expected RDI and RSI registers are correct. But after _int3_cb their values are wrong. With VNC windows one could see the ""Event Tracing"" log collected with echo 'syscalls:*' > /sys/kernel/debug/tracing/set_event.
I have switched to usual VMI_EVENT_RESPONSE_SET_REGISTERS instead of drakvuf_set_vcpu_regs. And this fixed the issues.
After the fix I have found other issue. GUI applications failed to start without DISPLAY variable. This been fixed by coping inherited environment variables from __environ array after vfork.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1461,2022-06-03T11:18:12Z,,2022-06-03T11:18:14Z,OPEN,False,7,0,3,https://github.com/disaykin,windows-injector: handle case of writing empty file,1,[],https://github.com/tklengyel/drakvuf/pull/1461,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1461,"In case of empty file writing, state machine has been in wrong step STEP5, because of falling through STEP6 without incrementing the step.","In case of empty file writing, state machine has been in wrong step STEP5, because of falling through STEP6 without incrementing the step.",True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1461,2022-06-03T11:18:12Z,,2022-06-03T11:18:14Z,OPEN,False,7,0,3,https://github.com/disaykin,windows-injector: handle case of writing empty file,1,[],https://github.com/tklengyel/drakvuf/pull/1461,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1461#issuecomment-1145862042,"In case of empty file writing, state machine has been in wrong step STEP5, because of falling through STEP6 without incrementing the step.",Can one of the admins verify this patch?,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1462,2022-06-03T12:28:52Z,,2022-06-03T12:28:54Z,OPEN,False,74,45,3,https://github.com/disaykin,linux-process: extract correct kernel thread names,1,[],https://github.com/tklengyel/drakvuf/pull/1462,https://github.com/disaykin,1,https://github.com/tklengyel/drakvuf/pull/1462,,,True,{}
tklengyel/drakvuf,https://github.com/tklengyel/drakvuf,1462,2022-06-03T12:28:52Z,,2022-06-03T12:28:54Z,OPEN,False,74,45,3,https://github.com/disaykin,linux-process: extract correct kernel thread names,1,[],https://github.com/tklengyel/drakvuf/pull/1462,https://github.com/drakvuf-jenkins,2,https://github.com/tklengyel/drakvuf/pull/1462#issuecomment-1145913565,,Can one of the admins verify this patch?,True,{}
