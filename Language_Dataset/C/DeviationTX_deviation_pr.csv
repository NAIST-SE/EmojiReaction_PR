DeviationTX/deviation,https://github.com/DeviationTX/deviation,1,2016-04-11T10:21:36Z,2016-04-12T17:44:10Z,2016-04-13T03:29:26Z,MERGED,True,92,0,4,https://github.com/silpstream,Add devo7e-256 target.,3,[],https://github.com/DeviationTX/deviation/pull/1,https://github.com/silpstream,1,https://github.com/DeviationTX/deviation/pull/1,"Hi Guys,
Could we officially add the ability to build targets for 7e transmitters that have been upgraded to RCT6 and RET6 processors?
For these targets, MODULAR has been removed. OPTIMIZE_DFU is still here as I can't quite figure out if we should remove it. Seems to work either way and I can't see an advantage to not having it.
Nothing else here has changed except for creating new targets and turning on more features in target_defs.h.
Targets added are: TARGET=devo7e_256 and TARGET=devo7e_512
target_def.h changes are:
add:
  #define HAS_PERMANENT_TIMER 1
  #define HAS_DATALOG         1
  #define HAS_LAYOUT_EDITOR   1

remove:
#define NO_LANGUAGE_SUPPORT 1 
Thanks!","Hi Guys,
Could we officially add the ability to build targets for 7e transmitters that have been upgraded to RCT6 and RET6 processors?
For these targets, MODULAR has been removed. OPTIMIZE_DFU is still here as I can't quite figure out if we should remove it. Seems to work either way and I can't see an advantage to not having it.
Nothing else here has changed except for creating new targets and turning on more features in target_defs.h.
Targets added are: TARGET=devo7e_256 and TARGET=devo7e_512
target_def.h changes are:
add:
  #define HAS_PERMANENT_TIMER 1
  #define HAS_DATALOG         1
  #define HAS_LAYOUT_EDITOR   1

remove:
#define NO_LANGUAGE_SUPPORT 1 
Thanks!",True,{'THUMBS_UP': ['https://github.com/goebish']}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1,2016-04-11T10:21:36Z,2016-04-12T17:44:10Z,2016-04-13T03:29:26Z,MERGED,True,92,0,4,https://github.com/silpstream,Add devo7e-256 target.,3,[],https://github.com/DeviationTX/deviation/pull/1,https://github.com/goebish,2,https://github.com/DeviationTX/deviation/pull/1#issuecomment-208590130,"Hi Guys,
Could we officially add the ability to build targets for 7e transmitters that have been upgraded to RCT6 and RET6 processors?
For these targets, MODULAR has been removed. OPTIMIZE_DFU is still here as I can't quite figure out if we should remove it. Seems to work either way and I can't see an advantage to not having it.
Nothing else here has changed except for creating new targets and turning on more features in target_defs.h.
Targets added are: TARGET=devo7e_256 and TARGET=devo7e_512
target_def.h changes are:
add:
  #define HAS_PERMANENT_TIMER 1
  #define HAS_DATALOG         1
  #define HAS_LAYOUT_EDITOR   1

remove:
#define NO_LANGUAGE_SUPPORT 1 
Thanks!",Approved.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1,2016-04-11T10:21:36Z,2016-04-12T17:44:10Z,2016-04-13T03:29:26Z,MERGED,True,92,0,4,https://github.com/silpstream,Add devo7e-256 target.,3,[],https://github.com/DeviationTX/deviation/pull/1,https://github.com/PhracturedBlue,3,https://github.com/DeviationTX/deviation/pull/1#issuecomment-208599012,"Hi Guys,
Could we officially add the ability to build targets for 7e transmitters that have been upgraded to RCT6 and RET6 processors?
For these targets, MODULAR has been removed. OPTIMIZE_DFU is still here as I can't quite figure out if we should remove it. Seems to work either way and I can't see an advantage to not having it.
Nothing else here has changed except for creating new targets and turning on more features in target_defs.h.
Targets added are: TARGET=devo7e_256 and TARGET=devo7e_512
target_def.h changes are:
add:
  #define HAS_PERMANENT_TIMER 1
  #define HAS_DATALOG         1
  #define HAS_LAYOUT_EDITOR   1

remove:
#define NO_LANGUAGE_SUPPORT 1 
Thanks!","I don't particularly like the implementation.
hacking devo7e stuff directly into src/Makefile and targets/devo/common/Makefile.inc is ugly.  main.c is modified for space-only changes which shouldn't be there and I'm not willing to support the devo7e_512 at this time since it brings no benefit over the 256.
Instead the implementation should be done like the devof4 (i.e. create a new target and reuse the 7e files where appropriate)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1,2016-04-11T10:21:36Z,2016-04-12T17:44:10Z,2016-04-13T03:29:26Z,MERGED,True,92,0,4,https://github.com/silpstream,Add devo7e-256 target.,3,[],https://github.com/DeviationTX/deviation/pull/1,https://github.com/silpstream,4,https://github.com/DeviationTX/deviation/pull/1#issuecomment-208856157,"Hi Guys,
Could we officially add the ability to build targets for 7e transmitters that have been upgraded to RCT6 and RET6 processors?
For these targets, MODULAR has been removed. OPTIMIZE_DFU is still here as I can't quite figure out if we should remove it. Seems to work either way and I can't see an advantage to not having it.
Nothing else here has changed except for creating new targets and turning on more features in target_defs.h.
Targets added are: TARGET=devo7e_256 and TARGET=devo7e_512
target_def.h changes are:
add:
  #define HAS_PERMANENT_TIMER 1
  #define HAS_DATALOG         1
  #define HAS_LAYOUT_EDITOR   1

remove:
#define NO_LANGUAGE_SUPPORT 1 
Thanks!","I'll change the code to reflect the coding conventions you guys prefer. However I can't really see any support problems with devo7e_512. It is there more for build convenience and choice. Supporting it along side the 256 branch doesn't require anything extra, and we can inform users that the current bootloader can be used on it but only supports upto 244kb. What extra work is there beyond allowing the directory to exist with a .ld file and pointers to the 256 files? Am I missing something?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1,2016-04-11T10:21:36Z,2016-04-12T17:44:10Z,2016-04-13T03:29:26Z,MERGED,True,92,0,4,https://github.com/silpstream,Add devo7e-256 target.,3,[],https://github.com/DeviationTX/deviation/pull/1,https://github.com/PhracturedBlue,5,https://github.com/DeviationTX/deviation/pull/1#issuecomment-208892846,"Hi Guys,
Could we officially add the ability to build targets for 7e transmitters that have been upgraded to RCT6 and RET6 processors?
For these targets, MODULAR has been removed. OPTIMIZE_DFU is still here as I can't quite figure out if we should remove it. Seems to work either way and I can't see an advantage to not having it.
Nothing else here has changed except for creating new targets and turning on more features in target_defs.h.
Targets added are: TARGET=devo7e_256 and TARGET=devo7e_512
target_def.h changes are:
add:
  #define HAS_PERMANENT_TIMER 1
  #define HAS_DATALOG         1
  #define HAS_LAYOUT_EDITOR   1

remove:
#define NO_LANGUAGE_SUPPORT 1 
Thanks!","Primarily because it adds no value.When it does add value, we can easily add it.  Until then I see no point.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1,2016-04-11T10:21:36Z,2016-04-12T17:44:10Z,2016-04-13T03:29:26Z,MERGED,True,92,0,4,https://github.com/silpstream,Add devo7e-256 target.,3,[],https://github.com/DeviationTX/deviation/pull/1,https://github.com/PhracturedBlue,6,https://github.com/DeviationTX/deviation/pull/1#issuecomment-208893532,"Hi Guys,
Could we officially add the ability to build targets for 7e transmitters that have been upgraded to RCT6 and RET6 processors?
For these targets, MODULAR has been removed. OPTIMIZE_DFU is still here as I can't quite figure out if we should remove it. Seems to work either way and I can't see an advantage to not having it.
Nothing else here has changed except for creating new targets and turning on more features in target_defs.h.
Targets added are: TARGET=devo7e_256 and TARGET=devo7e_512
target_def.h changes are:
add:
  #define HAS_PERMANENT_TIMER 1
  #define HAS_DATALOG         1
  #define HAS_LAYOUT_EDITOR   1

remove:
#define NO_LANGUAGE_SUPPORT 1 
Thanks!","Also, do not add the devo7e_256 to the Makefile.  The makefile controls the default builds (those that show up in the nightlies).  I will decide when and if to add it to the supported list.  I am wary that unsuspecting users will try to use it and end up with a bricked Tx which is why I am wary about it.  Just creating a new directory in 'target' is enough to enable the build",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1,2016-04-11T10:21:36Z,2016-04-12T17:44:10Z,2016-04-13T03:29:26Z,MERGED,True,92,0,4,https://github.com/silpstream,Add devo7e-256 target.,3,[],https://github.com/DeviationTX/deviation/pull/1,https://github.com/silpstream,7,https://github.com/DeviationTX/deviation/pull/1#issuecomment-208924403,"Hi Guys,
Could we officially add the ability to build targets for 7e transmitters that have been upgraded to RCT6 and RET6 processors?
For these targets, MODULAR has been removed. OPTIMIZE_DFU is still here as I can't quite figure out if we should remove it. Seems to work either way and I can't see an advantage to not having it.
Nothing else here has changed except for creating new targets and turning on more features in target_defs.h.
Targets added are: TARGET=devo7e_256 and TARGET=devo7e_512
target_def.h changes are:
add:
  #define HAS_PERMANENT_TIMER 1
  #define HAS_DATALOG         1
  #define HAS_LAYOUT_EDITOR   1

remove:
#define NO_LANGUAGE_SUPPORT 1 
Thanks!",Ok. Can do. :),True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1,2016-04-11T10:21:36Z,2016-04-12T17:44:10Z,2016-04-13T03:29:26Z,MERGED,True,92,0,4,https://github.com/silpstream,Add devo7e-256 target.,3,[],https://github.com/DeviationTX/deviation/pull/1,https://github.com/silpstream,8,https://github.com/DeviationTX/deviation/pull/1#issuecomment-208994349,"Hi Guys,
Could we officially add the ability to build targets for 7e transmitters that have been upgraded to RCT6 and RET6 processors?
For these targets, MODULAR has been removed. OPTIMIZE_DFU is still here as I can't quite figure out if we should remove it. Seems to work either way and I can't see an advantage to not having it.
Nothing else here has changed except for creating new targets and turning on more features in target_defs.h.
Targets added are: TARGET=devo7e_256 and TARGET=devo7e_512
target_def.h changes are:
add:
  #define HAS_PERMANENT_TIMER 1
  #define HAS_DATALOG         1
  #define HAS_LAYOUT_EDITOR   1

remove:
#define NO_LANGUAGE_SUPPORT 1 
Thanks!",I've reimplemented based on what you've mentioned above. Should be good to go unless there is something else you think I've missed. Thanks!,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1,2016-04-11T10:21:36Z,2016-04-12T17:44:10Z,2016-04-13T03:29:26Z,MERGED,True,92,0,4,https://github.com/silpstream,Add devo7e-256 target.,3,[],https://github.com/DeviationTX/deviation/pull/1,https://github.com/PhracturedBlue,9,https://github.com/DeviationTX/deviation/pull/1#issuecomment-209002117,"Hi Guys,
Could we officially add the ability to build targets for 7e transmitters that have been upgraded to RCT6 and RET6 processors?
For these targets, MODULAR has been removed. OPTIMIZE_DFU is still here as I can't quite figure out if we should remove it. Seems to work either way and I can't see an advantage to not having it.
Nothing else here has changed except for creating new targets and turning on more features in target_defs.h.
Targets added are: TARGET=devo7e_256 and TARGET=devo7e_512
target_def.h changes are:
add:
  #define HAS_PERMANENT_TIMER 1
  #define HAS_DATALOG         1
  #define HAS_LAYOUT_EDITOR   1

remove:
#define NO_LANGUAGE_SUPPORT 1 
Thanks!","getting close.  You should be able to link channels.c in the makefile.  For capabilities.h, you should just include the devo7e version (can't link it but shouldn't duplicate its contents).  This makes it easier to modify the devo7e and have the 256 variant tag along for free",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1,2016-04-11T10:21:36Z,2016-04-12T17:44:10Z,2016-04-13T03:29:26Z,MERGED,True,92,0,4,https://github.com/silpstream,Add devo7e-256 target.,3,[],https://github.com/DeviationTX/deviation/pull/1,https://github.com/silpstream,10,https://github.com/DeviationTX/deviation/pull/1#issuecomment-209019969,"Hi Guys,
Could we officially add the ability to build targets for 7e transmitters that have been upgraded to RCT6 and RET6 processors?
For these targets, MODULAR has been removed. OPTIMIZE_DFU is still here as I can't quite figure out if we should remove it. Seems to work either way and I can't see an advantage to not having it.
Nothing else here has changed except for creating new targets and turning on more features in target_defs.h.
Targets added are: TARGET=devo7e_256 and TARGET=devo7e_512
target_def.h changes are:
add:
  #define HAS_PERMANENT_TIMER 1
  #define HAS_DATALOG         1
  #define HAS_LAYOUT_EDITOR   1

remove:
#define NO_LANGUAGE_SUPPORT 1 
Thanks!",Done. I was initially thinking of adding in the pots mod that you made to those 2 files but we can cross that bridge later.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1,2016-04-11T10:21:36Z,2016-04-12T17:44:10Z,2016-04-13T03:29:26Z,MERGED,True,92,0,4,https://github.com/silpstream,Add devo7e-256 target.,3,[],https://github.com/DeviationTX/deviation/pull/1,https://github.com/silpstream,11,https://github.com/DeviationTX/deviation/pull/1#issuecomment-209025278,"Hi Guys,
Could we officially add the ability to build targets for 7e transmitters that have been upgraded to RCT6 and RET6 processors?
For these targets, MODULAR has been removed. OPTIMIZE_DFU is still here as I can't quite figure out if we should remove it. Seems to work either way and I can't see an advantage to not having it.
Nothing else here has changed except for creating new targets and turning on more features in target_defs.h.
Targets added are: TARGET=devo7e_256 and TARGET=devo7e_512
target_def.h changes are:
add:
  #define HAS_PERMANENT_TIMER 1
  #define HAS_DATALOG         1
  #define HAS_LAYOUT_EDITOR   1

remove:
#define NO_LANGUAGE_SUPPORT 1 
Thanks!",Thank you! :)),True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1,2016-04-11T10:21:36Z,2016-04-12T17:44:10Z,2016-04-13T03:29:26Z,MERGED,True,92,0,4,https://github.com/silpstream,Add devo7e-256 target.,3,[],https://github.com/DeviationTX/deviation/pull/1,https://github.com/mwm,12,https://github.com/DeviationTX/deviation/pull/1#issuecomment-209084876,"Hi Guys,
Could we officially add the ability to build targets for 7e transmitters that have been upgraded to RCT6 and RET6 processors?
For these targets, MODULAR has been removed. OPTIMIZE_DFU is still here as I can't quite figure out if we should remove it. Seems to work either way and I can't see an advantage to not having it.
Nothing else here has changed except for creating new targets and turning on more features in target_defs.h.
Targets added are: TARGET=devo7e_256 and TARGET=devo7e_512
target_def.h changes are:
add:
  #define HAS_PERMANENT_TIMER 1
  #define HAS_DATALOG         1
  #define HAS_LAYOUT_EDITOR   1

remove:
#define NO_LANGUAGE_SUPPORT 1 
Thanks!","For convenience, you do realize you can just do ""gmake TARGET=custom"" to build your own ""custom"" target, right?
It might be nice if we added a ""custom"" target line ""target: make TARGET=custom"" to the makefile, but that's not a big deal.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1,2016-04-11T10:21:36Z,2016-04-12T17:44:10Z,2016-04-13T03:29:26Z,MERGED,True,92,0,4,https://github.com/silpstream,Add devo7e-256 target.,3,[],https://github.com/DeviationTX/deviation/pull/1,https://github.com/silpstream,13,https://github.com/DeviationTX/deviation/pull/1#issuecomment-209211240,"Hi Guys,
Could we officially add the ability to build targets for 7e transmitters that have been upgraded to RCT6 and RET6 processors?
For these targets, MODULAR has been removed. OPTIMIZE_DFU is still here as I can't quite figure out if we should remove it. Seems to work either way and I can't see an advantage to not having it.
Nothing else here has changed except for creating new targets and turning on more features in target_defs.h.
Targets added are: TARGET=devo7e_256 and TARGET=devo7e_512
target_def.h changes are:
add:
  #define HAS_PERMANENT_TIMER 1
  #define HAS_DATALOG         1
  #define HAS_LAYOUT_EDITOR   1

remove:
#define NO_LANGUAGE_SUPPORT 1 
Thanks!",Yes I did. Thanks for mentioning it!,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,2,2016-04-11T12:09:27Z,2016-05-14T14:16:48Z,2018-11-05T21:55:08Z,CLOSED,False,1,1,1,https://github.com/goebish,Fix pncodes table for DSM2 protocol,1,[],https://github.com/DeviationTX/deviation/pull/2,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/2,"Fix pncodes table for DSM2 protocol, as found by Mike Blandford on rcgroups:
http://www.rcgroups.com/forums/showpost.php?p=34482519&postcount=3489","Fix pncodes table for DSM2 protocol, as found by Mike Blandford on rcgroups:
http://www.rcgroups.com/forums/showpost.php?p=34482519&postcount=3489",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,2,2016-04-11T12:09:27Z,2016-05-14T14:16:48Z,2018-11-05T21:55:08Z,CLOSED,False,1,1,1,https://github.com/goebish,Fix pncodes table for DSM2 protocol,1,[],https://github.com/DeviationTX/deviation/pull/2,https://github.com/goebish,2,https://github.com/DeviationTX/deviation/pull/2#issuecomment-208342362,"Fix pncodes table for DSM2 protocol, as found by Mike Blandford on rcgroups:
http://www.rcgroups.com/forums/showpost.php?p=34482519&postcount=3489","Looks like there's more to fix, don't pull right now, I'll give a green light once everything is done...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,2,2016-04-11T12:09:27Z,2016-05-14T14:16:48Z,2018-11-05T21:55:08Z,CLOSED,False,1,1,1,https://github.com/goebish,Fix pncodes table for DSM2 protocol,1,[],https://github.com/DeviationTX/deviation/pull/2,https://github.com/goebish,3,https://github.com/DeviationTX/deviation/pull/2#issuecomment-219222690,"Fix pncodes table for DSM2 protocol, as found by Mike Blandford on rcgroups:
http://www.rcgroups.com/forums/showpost.php?p=34482519&postcount=3489","Closing this PR for now, I'll create a new one when everything is done, I've to check a few stuffs with Pascal Langer first.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,3,2016-04-11T13:54:17Z,2016-04-11T23:09:04Z,2019-03-05T00:12:22Z,MERGED,True,4,2,1,https://github.com/goebish,Fix FlySky packet period,1,[],https://github.com/DeviationTX/deviation/pull/3,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/3,"Newer FlySky receivers don't work with a packet period of 1460us.
Quoting hpnuts:
""Turnigy 9X Flysky module v2 is 1533, New Flysky TX module for 9XR/9XR Pro is 1510 (the one using the internal antenna) , brand new V911 TX is 1490.
1460 does not work but increasing to 1480 works. I kept 1510 has a middle value and tested it on all my RXs: flysky RX 3&6&8 channels, V911 and F939.""","Newer FlySky receivers don't work with a packet period of 1460us.
Quoting hpnuts:
""Turnigy 9X Flysky module v2 is 1533, New Flysky TX module for 9XR/9XR Pro is 1510 (the one using the internal antenna) , brand new V911 TX is 1490.
1460 does not work but increasing to 1480 works. I kept 1510 has a middle value and tested it on all my RXs: flysky RX 3&6&8 channels, V911 and F939.""",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,3,2016-04-11T13:54:17Z,2016-04-11T23:09:04Z,2019-03-05T00:12:22Z,MERGED,True,4,2,1,https://github.com/goebish,Fix FlySky packet period,1,[],https://github.com/DeviationTX/deviation/pull/3,https://github.com/PhracturedBlue,2,https://github.com/DeviationTX/deviation/pull/3#issuecomment-208606170,"Newer FlySky receivers don't work with a packet period of 1460us.
Quoting hpnuts:
""Turnigy 9X Flysky module v2 is 1533, New Flysky TX module for 9XR/9XR Pro is 1510 (the one using the internal antenna) , brand new V911 TX is 1490.
1460 does not work but increasing to 1480 works. I kept 1510 has a middle value and tested it on all my RXs: flysky RX 3&6&8 channels, V911 and F939.""",I will pull this and hope we can get some testing before the 5.0 release,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,3,2016-04-11T13:54:17Z,2016-04-11T23:09:04Z,2019-03-05T00:12:22Z,MERGED,True,4,2,1,https://github.com/goebish,Fix FlySky packet period,1,[],https://github.com/DeviationTX/deviation/pull/3,https://github.com/goebish,3,https://github.com/DeviationTX/deviation/pull/3#issuecomment-208607213,"Newer FlySky receivers don't work with a packet period of 1460us.
Quoting hpnuts:
""Turnigy 9X Flysky module v2 is 1533, New Flysky TX module for 9XR/9XR Pro is 1510 (the one using the internal antenna) , brand new V911 TX is 1490.
1460 does not work but increasing to 1480 works. I kept 1510 has a middle value and tested it on all my RXs: flysky RX 3&6&8 channels, V911 and F939.""","I checked with an older FlySky RX, it's still working fine.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,4,2016-04-19T23:20:47Z,2016-11-11T07:10:41Z,2016-11-11T07:10:41Z,CLOSED,False,372,23,27,https://github.com/alibenpeng,fixed universaltx build,12,[],https://github.com/DeviationTX/deviation/pull/4,https://github.com/alibenpeng,1,https://github.com/DeviationTX/deviation/pull/4,The protocols that were added after the universaltx merge didn't have telemetry.h included and some other minor stuff.,The protocols that were added after the universaltx merge didn't have telemetry.h included and some other minor stuff.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,4,2016-04-19T23:20:47Z,2016-11-11T07:10:41Z,2016-11-11T07:10:41Z,CLOSED,False,372,23,27,https://github.com/alibenpeng,fixed universaltx build,12,[],https://github.com/DeviationTX/deviation/pull/4,https://github.com/victzh,2,https://github.com/DeviationTX/deviation/pull/4#issuecomment-259895714,The protocols that were added after the universaltx merge didn't have telemetry.h included and some other minor stuff.,Closing as lingering for too long without obvious benefits. Build is broken on Devo7E also.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,5,2016-05-06T18:34:31Z,2016-05-07T02:33:43Z,2016-05-07T02:33:43Z,CLOSED,False,8,2,2,https://github.com/hexfet,Restore inverse highlighting on 128x64 screens,1,[],https://github.com/DeviationTX/deviation/pull/5,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/5,"Commit 8bdf866 removed code that indicates selected box by inverting background.  This change restores the highlighting.
Other cosmetic changes on the Devo7e and 10 were also introduced with 8bdf but are not affected by this PR.

Labels in page heading (top row) are centered instead of left-justified
Top row underline missing on mixer list and mixer channel pages.
Maybe others...","Commit 8bdf866 removed code that indicates selected box by inverting background.  This change restores the highlighting.
Other cosmetic changes on the Devo7e and 10 were also introduced with 8bdf but are not affected by this PR.

Labels in page heading (top row) are centered instead of left-justified
Top row underline missing on mixer list and mixer channel pages.
Maybe others...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,5,2016-05-06T18:34:31Z,2016-05-07T02:33:43Z,2016-05-07T02:33:43Z,CLOSED,False,8,2,2,https://github.com/hexfet,Restore inverse highlighting on 128x64 screens,1,[],https://github.com/DeviationTX/deviation/pull/5,https://github.com/PhracturedBlue,2,https://github.com/DeviationTX/deviation/pull/5#issuecomment-217556219,"Commit 8bdf866 removed code that indicates selected box by inverting background.  This change restores the highlighting.
Other cosmetic changes on the Devo7e and 10 were also introduced with 8bdf but are not affected by this PR.

Labels in page heading (top row) are centered instead of left-justified
Top row underline missing on mixer list and mixer channel pages.
Maybe others...","I don't like this solution.  the code for color and black-and white should really be split.  The current conditionals are very confusing merging incompatible styles together.  I didn't realize that hadn't been done so I'll work on it, but I don't want to merge this pull request as it is.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,5,2016-05-06T18:34:31Z,2016-05-07T02:33:43Z,2016-05-07T02:33:43Z,CLOSED,False,8,2,2,https://github.com/hexfet,Restore inverse highlighting on 128x64 screens,1,[],https://github.com/DeviationTX/deviation/pull/5,https://github.com/hexfet,3,https://github.com/DeviationTX/deviation/pull/5#issuecomment-217561399,"Commit 8bdf866 removed code that indicates selected box by inverting background.  This change restores the highlighting.
Other cosmetic changes on the Devo7e and 10 were also introduced with 8bdf but are not affected by this PR.

Labels in page heading (top row) are centered instead of left-justified
Top row underline missing on mixer list and mixer channel pages.
Maybe others...","No argument here. Wasn't sure of the full intent of the change, but tracked down this part to keep the FrskyX testing going.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,5,2016-05-06T18:34:31Z,2016-05-07T02:33:43Z,2016-05-07T02:33:43Z,CLOSED,False,8,2,2,https://github.com/hexfet,Restore inverse highlighting on 128x64 screens,1,[],https://github.com/DeviationTX/deviation/pull/5,https://github.com/PhracturedBlue,4,https://github.com/DeviationTX/deviation/pull/5#issuecomment-217600122,"Commit 8bdf866 removed code that indicates selected box by inverting background.  This change restores the highlighting.
Other cosmetic changes on the Devo7e and 10 were also introduced with 8bdf but are not affected by this PR.

Labels in page heading (top row) are centered instead of left-justified
Top row underline missing on mixer list and mixer channel pages.
Maybe others...",this has been resolved now.  No need for this anymore,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,6,2016-05-08T20:57:25Z,2016-05-14T12:39:59Z,2016-05-18T16:56:02Z,MERGED,True,1446,200,24,https://github.com/hexfet,"Add protocol FrskyX, an implementation supporting Frsky X-series receivers",45,[],https://github.com/DeviationTX/deviation/pull/6,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/6,"Thanks to midelic and planger for providing the FrskyX implementation, and to all the testers and collaborators in http://www.deviationtx.com/forum/protocol-development/5356-new-frskyx-protocol.
This PR adds protocol FryskyX (frskyx_cc2500.c) which implements the Frsky D16 over-the-air protocol, including s.port and hub telemetry.  It also updates protocol Frsky (frsky2way_cc2500.c) to correctly support hub telemetry.  The HAS_EXTENDED_TELEMETRY definition is added to reduce the number of telemetry values in builds with limited memory (7e).  It is applied to Frsky and DSM telemetry.
The frskyx_cc2500.c file contains the FrskyX protocol implemented by midelic and planger, ported to Deviation. This is the Frysky ""D16"" protocol compatible with the Frsky X-series receivers.  The frsky_d_telem.inc file contains the hub telemetry decoder and is #included by both frskyx_cc2500.c and frsky2way_cc2500.c.  This adds working hub telemetry support to the Deviation Frsky implementation.  The other files in the PR contain changes to support additional telemetry values.
The FrskyX protocol supports up to 12 channels. Fixed ID binding is supported to link the transmitter wtih specific receivers.
The following protocol options are supported.
Freq-fine: Frequency offset adjustment. Range -127 to 127. Adjusts for variances betweeen CC2500 modules. Usually offset of 0 or -41 is required, but full range should be tested if there are problems with binding or range.  Default 0.
AD2GAIN: The VOLT2 telemetry value (AIN input on X4R) is multiplied by this value divided by 100. Allows adjustment for external resistor divider network.  Default 100 (gain of 1). Range is 1 to 2000 (gain of 0.01 to 20.00).
Failsafe: The Frsky failsafe options are fully supported. If the channel failsafe (in mixer channel config) is set this value is sent to the receiver every 9 seconds.  The receiver will use these values in failsafe mode unless the protocol option is set to RX.
For channels with failsafe set to off, the default Failsafe protocol option ""Hold"" commands the receiver to hold the last received channel values when the receiver enters failsafe mode.  The ""NoPulse"" setting causes the receiver to not send any signal on PPM outputs (Testing on X8R showed SBUS values went to minimum, but SBUS behavior is not specified by the protocol).  The ""RX"" setting prevents Deviation from sending failsafe settings so the receiver will use whatever failsafe values have been stored in the receiver.
Telemetry
Supports receiver telemetry, s.port and hub telemetry sensors as well as GPS.  All Devo transmitters support the s.port Frsky telemetry on the main page and in alarms.  The 128x64 telemetry test page is updated with additional values.  The supported telemetry values and their location on the Telemetry monitor page on the Devo10 are:



Misc
Bat
Cells




RSSI
VOLT1
CELL1


TEMP1
VOLT2
CELL2


TEMP2
VOLT3
CELL3


RPM
MIN CELL
CELL4


FUEL
ALL CELL
CELL5


ALTITUDE
VOLTA
CELL6


VARIO
CURRENT
DISCHARGE



The ALTITUDE value is reported as Above Ground Level.  The ground level is set to the first altitude telemetry value received.
The following values are calculated from received telemetry.  MIN CELL is the lowest reported CELL value.  ALL CELL is the total of all reported CELL values.  The Discharge derived value is total battery discharge amount in milliAmp-hours.
Due to space limitations the Devo7e only supports non-s.port telemetry (RSSI, VOLT1 for FrskyX.  Frsky adds VOLT2.)
The Frsky s.port telemetry provides for connecting up to 16 sensors of the same type (e.g. battery voltage).  Deviation supports multiple sensors of the same type, but only one telemetry value is saved.  The value most recently received from all the sensors of the same type is reported.
The value array in the Telemetry struct is changed from u16 to s32 to support negative vario values and altitude measured in centimeters.
In the radio protocol the values in packet[21] are not fully understood.  The current implementation works well enough for control and telemetry.  There is likely a forward data channel in packet[22-27].
The protocol supports up to 16 channels with 12 bit resolution.  Packets are transmitted every 9ms.","Thanks to midelic and planger for providing the FrskyX implementation, and to all the testers and collaborators in http://www.deviationtx.com/forum/protocol-development/5356-new-frskyx-protocol.
This PR adds protocol FryskyX (frskyx_cc2500.c) which implements the Frsky D16 over-the-air protocol, including s.port and hub telemetry.  It also updates protocol Frsky (frsky2way_cc2500.c) to correctly support hub telemetry.  The HAS_EXTENDED_TELEMETRY definition is added to reduce the number of telemetry values in builds with limited memory (7e).  It is applied to Frsky and DSM telemetry.
The frskyx_cc2500.c file contains the FrskyX protocol implemented by midelic and planger, ported to Deviation. This is the Frysky ""D16"" protocol compatible with the Frsky X-series receivers.  The frsky_d_telem.inc file contains the hub telemetry decoder and is #included by both frskyx_cc2500.c and frsky2way_cc2500.c.  This adds working hub telemetry support to the Deviation Frsky implementation.  The other files in the PR contain changes to support additional telemetry values.
The FrskyX protocol supports up to 12 channels. Fixed ID binding is supported to link the transmitter wtih specific receivers.
The following protocol options are supported.
Freq-fine: Frequency offset adjustment. Range -127 to 127. Adjusts for variances betweeen CC2500 modules. Usually offset of 0 or -41 is required, but full range should be tested if there are problems with binding or range.  Default 0.
AD2GAIN: The VOLT2 telemetry value (AIN input on X4R) is multiplied by this value divided by 100. Allows adjustment for external resistor divider network.  Default 100 (gain of 1). Range is 1 to 2000 (gain of 0.01 to 20.00).
Failsafe: The Frsky failsafe options are fully supported. If the channel failsafe (in mixer channel config) is set this value is sent to the receiver every 9 seconds.  The receiver will use these values in failsafe mode unless the protocol option is set to RX.
For channels with failsafe set to off, the default Failsafe protocol option ""Hold"" commands the receiver to hold the last received channel values when the receiver enters failsafe mode.  The ""NoPulse"" setting causes the receiver to not send any signal on PPM outputs (Testing on X8R showed SBUS values went to minimum, but SBUS behavior is not specified by the protocol).  The ""RX"" setting prevents Deviation from sending failsafe settings so the receiver will use whatever failsafe values have been stored in the receiver.
Telemetry
Supports receiver telemetry, s.port and hub telemetry sensors as well as GPS.  All Devo transmitters support the s.port Frsky telemetry on the main page and in alarms.  The 128x64 telemetry test page is updated with additional values.  The supported telemetry values and their location on the Telemetry monitor page on the Devo10 are:



Misc
Bat
Cells




RSSI
VOLT1
CELL1


TEMP1
VOLT2
CELL2


TEMP2
VOLT3
CELL3


RPM
MIN CELL
CELL4


FUEL
ALL CELL
CELL5


ALTITUDE
VOLTA
CELL6


VARIO
CURRENT
DISCHARGE



The ALTITUDE value is reported as Above Ground Level.  The ground level is set to the first altitude telemetry value received.
The following values are calculated from received telemetry.  MIN CELL is the lowest reported CELL value.  ALL CELL is the total of all reported CELL values.  The Discharge derived value is total battery discharge amount in milliAmp-hours.
Due to space limitations the Devo7e only supports non-s.port telemetry (RSSI, VOLT1 for FrskyX.  Frsky adds VOLT2.)
The Frsky s.port telemetry provides for connecting up to 16 sensors of the same type (e.g. battery voltage).  Deviation supports multiple sensors of the same type, but only one telemetry value is saved.  The value most recently received from all the sensors of the same type is reported.
The value array in the Telemetry struct is changed from u16 to s32 to support negative vario values and altitude measured in centimeters.
In the radio protocol the values in packet[21] are not fully understood.  The current implementation works well enough for control and telemetry.  There is likely a forward data channel in packet[22-27].
The protocol supports up to 16 channels with 12 bit resolution.  Packets are transmitted every 9ms.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,6,2016-05-08T20:57:25Z,2016-05-14T12:39:59Z,2016-05-18T16:56:02Z,MERGED,True,1446,200,24,https://github.com/hexfet,"Add protocol FrskyX, an implementation supporting Frsky X-series receivers",45,[],https://github.com/DeviationTX/deviation/pull/6,https://github.com/PhracturedBlue,2,https://github.com/DeviationTX/deviation/pull/6#issuecomment-217901943,"Thanks to midelic and planger for providing the FrskyX implementation, and to all the testers and collaborators in http://www.deviationtx.com/forum/protocol-development/5356-new-frskyx-protocol.
This PR adds protocol FryskyX (frskyx_cc2500.c) which implements the Frsky D16 over-the-air protocol, including s.port and hub telemetry.  It also updates protocol Frsky (frsky2way_cc2500.c) to correctly support hub telemetry.  The HAS_EXTENDED_TELEMETRY definition is added to reduce the number of telemetry values in builds with limited memory (7e).  It is applied to Frsky and DSM telemetry.
The frskyx_cc2500.c file contains the FrskyX protocol implemented by midelic and planger, ported to Deviation. This is the Frysky ""D16"" protocol compatible with the Frsky X-series receivers.  The frsky_d_telem.inc file contains the hub telemetry decoder and is #included by both frskyx_cc2500.c and frsky2way_cc2500.c.  This adds working hub telemetry support to the Deviation Frsky implementation.  The other files in the PR contain changes to support additional telemetry values.
The FrskyX protocol supports up to 12 channels. Fixed ID binding is supported to link the transmitter wtih specific receivers.
The following protocol options are supported.
Freq-fine: Frequency offset adjustment. Range -127 to 127. Adjusts for variances betweeen CC2500 modules. Usually offset of 0 or -41 is required, but full range should be tested if there are problems with binding or range.  Default 0.
AD2GAIN: The VOLT2 telemetry value (AIN input on X4R) is multiplied by this value divided by 100. Allows adjustment for external resistor divider network.  Default 100 (gain of 1). Range is 1 to 2000 (gain of 0.01 to 20.00).
Failsafe: The Frsky failsafe options are fully supported. If the channel failsafe (in mixer channel config) is set this value is sent to the receiver every 9 seconds.  The receiver will use these values in failsafe mode unless the protocol option is set to RX.
For channels with failsafe set to off, the default Failsafe protocol option ""Hold"" commands the receiver to hold the last received channel values when the receiver enters failsafe mode.  The ""NoPulse"" setting causes the receiver to not send any signal on PPM outputs (Testing on X8R showed SBUS values went to minimum, but SBUS behavior is not specified by the protocol).  The ""RX"" setting prevents Deviation from sending failsafe settings so the receiver will use whatever failsafe values have been stored in the receiver.
Telemetry
Supports receiver telemetry, s.port and hub telemetry sensors as well as GPS.  All Devo transmitters support the s.port Frsky telemetry on the main page and in alarms.  The 128x64 telemetry test page is updated with additional values.  The supported telemetry values and their location on the Telemetry monitor page on the Devo10 are:



Misc
Bat
Cells




RSSI
VOLT1
CELL1


TEMP1
VOLT2
CELL2


TEMP2
VOLT3
CELL3


RPM
MIN CELL
CELL4


FUEL
ALL CELL
CELL5


ALTITUDE
VOLTA
CELL6


VARIO
CURRENT
DISCHARGE



The ALTITUDE value is reported as Above Ground Level.  The ground level is set to the first altitude telemetry value received.
The following values are calculated from received telemetry.  MIN CELL is the lowest reported CELL value.  ALL CELL is the total of all reported CELL values.  The Discharge derived value is total battery discharge amount in milliAmp-hours.
Due to space limitations the Devo7e only supports non-s.port telemetry (RSSI, VOLT1 for FrskyX.  Frsky adds VOLT2.)
The Frsky s.port telemetry provides for connecting up to 16 sensors of the same type (e.g. battery voltage).  Deviation supports multiple sensors of the same type, but only one telemetry value is saved.  The value most recently received from all the sensors of the same type is reported.
The value array in the Telemetry struct is changed from u16 to s32 to support negative vario values and altitude measured in centimeters.
In the radio protocol the values in packet[21] are not fully understood.  The current implementation works well enough for control and telemetry.  There is likely a forward data channel in packet[22-27].
The protocol supports up to 16 channels with 12 bit resolution.  Packets are transmitted every 9ms.","It looks pretty good.  I don't really love the way 'frsky_d_telem.inc' is handled, but I don't have a better option right now.  may rename to ._c instead, as 'inc' has been used only for Makefiles so far.
Did you test with the 320x240 gui?  I see a bunch of change to the 128x64 gui, but nothing for the 320x240 one.
The change is quite large, so I'll want to spend a little more time staring at it before I merge it.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,6,2016-05-08T20:57:25Z,2016-05-14T12:39:59Z,2016-05-18T16:56:02Z,MERGED,True,1446,200,24,https://github.com/hexfet,"Add protocol FrskyX, an implementation supporting Frsky X-series receivers",45,[],https://github.com/DeviationTX/deviation/pull/6,https://github.com/hexfet,3,https://github.com/DeviationTX/deviation/pull/6#issuecomment-217979470,"Thanks to midelic and planger for providing the FrskyX implementation, and to all the testers and collaborators in http://www.deviationtx.com/forum/protocol-development/5356-new-frskyx-protocol.
This PR adds protocol FryskyX (frskyx_cc2500.c) which implements the Frsky D16 over-the-air protocol, including s.port and hub telemetry.  It also updates protocol Frsky (frsky2way_cc2500.c) to correctly support hub telemetry.  The HAS_EXTENDED_TELEMETRY definition is added to reduce the number of telemetry values in builds with limited memory (7e).  It is applied to Frsky and DSM telemetry.
The frskyx_cc2500.c file contains the FrskyX protocol implemented by midelic and planger, ported to Deviation. This is the Frysky ""D16"" protocol compatible with the Frsky X-series receivers.  The frsky_d_telem.inc file contains the hub telemetry decoder and is #included by both frskyx_cc2500.c and frsky2way_cc2500.c.  This adds working hub telemetry support to the Deviation Frsky implementation.  The other files in the PR contain changes to support additional telemetry values.
The FrskyX protocol supports up to 12 channels. Fixed ID binding is supported to link the transmitter wtih specific receivers.
The following protocol options are supported.
Freq-fine: Frequency offset adjustment. Range -127 to 127. Adjusts for variances betweeen CC2500 modules. Usually offset of 0 or -41 is required, but full range should be tested if there are problems with binding or range.  Default 0.
AD2GAIN: The VOLT2 telemetry value (AIN input on X4R) is multiplied by this value divided by 100. Allows adjustment for external resistor divider network.  Default 100 (gain of 1). Range is 1 to 2000 (gain of 0.01 to 20.00).
Failsafe: The Frsky failsafe options are fully supported. If the channel failsafe (in mixer channel config) is set this value is sent to the receiver every 9 seconds.  The receiver will use these values in failsafe mode unless the protocol option is set to RX.
For channels with failsafe set to off, the default Failsafe protocol option ""Hold"" commands the receiver to hold the last received channel values when the receiver enters failsafe mode.  The ""NoPulse"" setting causes the receiver to not send any signal on PPM outputs (Testing on X8R showed SBUS values went to minimum, but SBUS behavior is not specified by the protocol).  The ""RX"" setting prevents Deviation from sending failsafe settings so the receiver will use whatever failsafe values have been stored in the receiver.
Telemetry
Supports receiver telemetry, s.port and hub telemetry sensors as well as GPS.  All Devo transmitters support the s.port Frsky telemetry on the main page and in alarms.  The 128x64 telemetry test page is updated with additional values.  The supported telemetry values and their location on the Telemetry monitor page on the Devo10 are:



Misc
Bat
Cells




RSSI
VOLT1
CELL1


TEMP1
VOLT2
CELL2


TEMP2
VOLT3
CELL3


RPM
MIN CELL
CELL4


FUEL
ALL CELL
CELL5


ALTITUDE
VOLTA
CELL6


VARIO
CURRENT
DISCHARGE



The ALTITUDE value is reported as Above Ground Level.  The ground level is set to the first altitude telemetry value received.
The following values are calculated from received telemetry.  MIN CELL is the lowest reported CELL value.  ALL CELL is the total of all reported CELL values.  The Discharge derived value is total battery discharge amount in milliAmp-hours.
Due to space limitations the Devo7e only supports non-s.port telemetry (RSSI, VOLT1 for FrskyX.  Frsky adds VOLT2.)
The Frsky s.port telemetry provides for connecting up to 16 sensors of the same type (e.g. battery voltage).  Deviation supports multiple sensors of the same type, but only one telemetry value is saved.  The value most recently received from all the sensors of the same type is reported.
The value array in the Telemetry struct is changed from u16 to s32 to support negative vario values and altitude measured in centimeters.
In the radio protocol the values in packet[21] are not fully understood.  The current implementation works well enough for control and telemetry.  There is likely a forward data channel in packet[22-27].
The protocol supports up to 16 channels with 12 bit resolution.  Packets are transmitted every 9ms.","Couldn't think of a better way to share common code and be compatible with 7e modules.  Changing the extension makes sense.
The gui changes add the extended telemetry values to the 128x64 telemtest page, but those changes have not been made to the 320x240 telemtest page.  The 128x64 changes came mainly from mwm, and with discussions about wider telemetry changes I avoided adding them to the 320x240 telemetry test page.  I can add it but haven't looked yet.  Today the extended values can be placed in the 320x240 main page boxes and have been tested there by Alexandro.
With this size addition I expect some adjustments.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,6,2016-05-08T20:57:25Z,2016-05-14T12:39:59Z,2016-05-18T16:56:02Z,MERGED,True,1446,200,24,https://github.com/hexfet,"Add protocol FrskyX, an implementation supporting Frsky X-series receivers",45,[],https://github.com/DeviationTX/deviation/pull/6,https://github.com/PhracturedBlue,4,https://github.com/DeviationTX/deviation/pull/6#issuecomment-217986085,"Thanks to midelic and planger for providing the FrskyX implementation, and to all the testers and collaborators in http://www.deviationtx.com/forum/protocol-development/5356-new-frskyx-protocol.
This PR adds protocol FryskyX (frskyx_cc2500.c) which implements the Frsky D16 over-the-air protocol, including s.port and hub telemetry.  It also updates protocol Frsky (frsky2way_cc2500.c) to correctly support hub telemetry.  The HAS_EXTENDED_TELEMETRY definition is added to reduce the number of telemetry values in builds with limited memory (7e).  It is applied to Frsky and DSM telemetry.
The frskyx_cc2500.c file contains the FrskyX protocol implemented by midelic and planger, ported to Deviation. This is the Frysky ""D16"" protocol compatible with the Frsky X-series receivers.  The frsky_d_telem.inc file contains the hub telemetry decoder and is #included by both frskyx_cc2500.c and frsky2way_cc2500.c.  This adds working hub telemetry support to the Deviation Frsky implementation.  The other files in the PR contain changes to support additional telemetry values.
The FrskyX protocol supports up to 12 channels. Fixed ID binding is supported to link the transmitter wtih specific receivers.
The following protocol options are supported.
Freq-fine: Frequency offset adjustment. Range -127 to 127. Adjusts for variances betweeen CC2500 modules. Usually offset of 0 or -41 is required, but full range should be tested if there are problems with binding or range.  Default 0.
AD2GAIN: The VOLT2 telemetry value (AIN input on X4R) is multiplied by this value divided by 100. Allows adjustment for external resistor divider network.  Default 100 (gain of 1). Range is 1 to 2000 (gain of 0.01 to 20.00).
Failsafe: The Frsky failsafe options are fully supported. If the channel failsafe (in mixer channel config) is set this value is sent to the receiver every 9 seconds.  The receiver will use these values in failsafe mode unless the protocol option is set to RX.
For channels with failsafe set to off, the default Failsafe protocol option ""Hold"" commands the receiver to hold the last received channel values when the receiver enters failsafe mode.  The ""NoPulse"" setting causes the receiver to not send any signal on PPM outputs (Testing on X8R showed SBUS values went to minimum, but SBUS behavior is not specified by the protocol).  The ""RX"" setting prevents Deviation from sending failsafe settings so the receiver will use whatever failsafe values have been stored in the receiver.
Telemetry
Supports receiver telemetry, s.port and hub telemetry sensors as well as GPS.  All Devo transmitters support the s.port Frsky telemetry on the main page and in alarms.  The 128x64 telemetry test page is updated with additional values.  The supported telemetry values and their location on the Telemetry monitor page on the Devo10 are:



Misc
Bat
Cells




RSSI
VOLT1
CELL1


TEMP1
VOLT2
CELL2


TEMP2
VOLT3
CELL3


RPM
MIN CELL
CELL4


FUEL
ALL CELL
CELL5


ALTITUDE
VOLTA
CELL6


VARIO
CURRENT
DISCHARGE



The ALTITUDE value is reported as Above Ground Level.  The ground level is set to the first altitude telemetry value received.
The following values are calculated from received telemetry.  MIN CELL is the lowest reported CELL value.  ALL CELL is the total of all reported CELL values.  The Discharge derived value is total battery discharge amount in milliAmp-hours.
Due to space limitations the Devo7e only supports non-s.port telemetry (RSSI, VOLT1 for FrskyX.  Frsky adds VOLT2.)
The Frsky s.port telemetry provides for connecting up to 16 sensors of the same type (e.g. battery voltage).  Deviation supports multiple sensors of the same type, but only one telemetry value is saved.  The value most recently received from all the sensors of the same type is reported.
The value array in the Telemetry struct is changed from u16 to s32 to support negative vario values and altitude measured in centimeters.
In the radio protocol the values in packet[21] are not fully understood.  The current implementation works well enough for control and telemetry.  There is likely a forward data channel in packet[22-27].
The protocol supports up to 16 channels with 12 bit resolution.  Packets are transmitted every 9ms.",I'd rather have consistent support across all transmitters at each point in time.  So please add the extra fields to the 320x240 gui and change the extension from inc to ._c and resubmit.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,6,2016-05-08T20:57:25Z,2016-05-14T12:39:59Z,2016-05-18T16:56:02Z,MERGED,True,1446,200,24,https://github.com/hexfet,"Add protocol FrskyX, an implementation supporting Frsky X-series receivers",45,[],https://github.com/DeviationTX/deviation/pull/6,https://github.com/hexfet,5,https://github.com/DeviationTX/deviation/pull/6#issuecomment-218022753,"Thanks to midelic and planger for providing the FrskyX implementation, and to all the testers and collaborators in http://www.deviationtx.com/forum/protocol-development/5356-new-frskyx-protocol.
This PR adds protocol FryskyX (frskyx_cc2500.c) which implements the Frsky D16 over-the-air protocol, including s.port and hub telemetry.  It also updates protocol Frsky (frsky2way_cc2500.c) to correctly support hub telemetry.  The HAS_EXTENDED_TELEMETRY definition is added to reduce the number of telemetry values in builds with limited memory (7e).  It is applied to Frsky and DSM telemetry.
The frskyx_cc2500.c file contains the FrskyX protocol implemented by midelic and planger, ported to Deviation. This is the Frysky ""D16"" protocol compatible with the Frsky X-series receivers.  The frsky_d_telem.inc file contains the hub telemetry decoder and is #included by both frskyx_cc2500.c and frsky2way_cc2500.c.  This adds working hub telemetry support to the Deviation Frsky implementation.  The other files in the PR contain changes to support additional telemetry values.
The FrskyX protocol supports up to 12 channels. Fixed ID binding is supported to link the transmitter wtih specific receivers.
The following protocol options are supported.
Freq-fine: Frequency offset adjustment. Range -127 to 127. Adjusts for variances betweeen CC2500 modules. Usually offset of 0 or -41 is required, but full range should be tested if there are problems with binding or range.  Default 0.
AD2GAIN: The VOLT2 telemetry value (AIN input on X4R) is multiplied by this value divided by 100. Allows adjustment for external resistor divider network.  Default 100 (gain of 1). Range is 1 to 2000 (gain of 0.01 to 20.00).
Failsafe: The Frsky failsafe options are fully supported. If the channel failsafe (in mixer channel config) is set this value is sent to the receiver every 9 seconds.  The receiver will use these values in failsafe mode unless the protocol option is set to RX.
For channels with failsafe set to off, the default Failsafe protocol option ""Hold"" commands the receiver to hold the last received channel values when the receiver enters failsafe mode.  The ""NoPulse"" setting causes the receiver to not send any signal on PPM outputs (Testing on X8R showed SBUS values went to minimum, but SBUS behavior is not specified by the protocol).  The ""RX"" setting prevents Deviation from sending failsafe settings so the receiver will use whatever failsafe values have been stored in the receiver.
Telemetry
Supports receiver telemetry, s.port and hub telemetry sensors as well as GPS.  All Devo transmitters support the s.port Frsky telemetry on the main page and in alarms.  The 128x64 telemetry test page is updated with additional values.  The supported telemetry values and their location on the Telemetry monitor page on the Devo10 are:



Misc
Bat
Cells




RSSI
VOLT1
CELL1


TEMP1
VOLT2
CELL2


TEMP2
VOLT3
CELL3


RPM
MIN CELL
CELL4


FUEL
ALL CELL
CELL5


ALTITUDE
VOLTA
CELL6


VARIO
CURRENT
DISCHARGE



The ALTITUDE value is reported as Above Ground Level.  The ground level is set to the first altitude telemetry value received.
The following values are calculated from received telemetry.  MIN CELL is the lowest reported CELL value.  ALL CELL is the total of all reported CELL values.  The Discharge derived value is total battery discharge amount in milliAmp-hours.
Due to space limitations the Devo7e only supports non-s.port telemetry (RSSI, VOLT1 for FrskyX.  Frsky adds VOLT2.)
The Frsky s.port telemetry provides for connecting up to 16 sensors of the same type (e.g. battery voltage).  Deviation supports multiple sensors of the same type, but only one telemetry value is saved.  The value most recently received from all the sensors of the same type is reported.
The value array in the Telemetry struct is changed from u16 to s32 to support negative vario values and altitude measured in centimeters.
In the radio protocol the values in packet[21] are not fully understood.  The current implementation works well enough for control and telemetry.  There is likely a forward data channel in packet[22-27].
The protocol supports up to 16 channels with 12 bit resolution.  Packets are transmitted every 9ms.",How's this for the 320x240 telemetry test page layout?  The only value missing compared to 128x64 is Cell6 (maybe that should replace Min Cell?).,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,6,2016-05-08T20:57:25Z,2016-05-14T12:39:59Z,2016-05-18T16:56:02Z,MERGED,True,1446,200,24,https://github.com/hexfet,"Add protocol FrskyX, an implementation supporting Frsky X-series receivers",45,[],https://github.com/DeviationTX/deviation/pull/6,https://github.com/PhracturedBlue,6,https://github.com/DeviationTX/deviation/pull/6#issuecomment-218029578,"Thanks to midelic and planger for providing the FrskyX implementation, and to all the testers and collaborators in http://www.deviationtx.com/forum/protocol-development/5356-new-frskyx-protocol.
This PR adds protocol FryskyX (frskyx_cc2500.c) which implements the Frsky D16 over-the-air protocol, including s.port and hub telemetry.  It also updates protocol Frsky (frsky2way_cc2500.c) to correctly support hub telemetry.  The HAS_EXTENDED_TELEMETRY definition is added to reduce the number of telemetry values in builds with limited memory (7e).  It is applied to Frsky and DSM telemetry.
The frskyx_cc2500.c file contains the FrskyX protocol implemented by midelic and planger, ported to Deviation. This is the Frysky ""D16"" protocol compatible with the Frsky X-series receivers.  The frsky_d_telem.inc file contains the hub telemetry decoder and is #included by both frskyx_cc2500.c and frsky2way_cc2500.c.  This adds working hub telemetry support to the Deviation Frsky implementation.  The other files in the PR contain changes to support additional telemetry values.
The FrskyX protocol supports up to 12 channels. Fixed ID binding is supported to link the transmitter wtih specific receivers.
The following protocol options are supported.
Freq-fine: Frequency offset adjustment. Range -127 to 127. Adjusts for variances betweeen CC2500 modules. Usually offset of 0 or -41 is required, but full range should be tested if there are problems with binding or range.  Default 0.
AD2GAIN: The VOLT2 telemetry value (AIN input on X4R) is multiplied by this value divided by 100. Allows adjustment for external resistor divider network.  Default 100 (gain of 1). Range is 1 to 2000 (gain of 0.01 to 20.00).
Failsafe: The Frsky failsafe options are fully supported. If the channel failsafe (in mixer channel config) is set this value is sent to the receiver every 9 seconds.  The receiver will use these values in failsafe mode unless the protocol option is set to RX.
For channels with failsafe set to off, the default Failsafe protocol option ""Hold"" commands the receiver to hold the last received channel values when the receiver enters failsafe mode.  The ""NoPulse"" setting causes the receiver to not send any signal on PPM outputs (Testing on X8R showed SBUS values went to minimum, but SBUS behavior is not specified by the protocol).  The ""RX"" setting prevents Deviation from sending failsafe settings so the receiver will use whatever failsafe values have been stored in the receiver.
Telemetry
Supports receiver telemetry, s.port and hub telemetry sensors as well as GPS.  All Devo transmitters support the s.port Frsky telemetry on the main page and in alarms.  The 128x64 telemetry test page is updated with additional values.  The supported telemetry values and their location on the Telemetry monitor page on the Devo10 are:



Misc
Bat
Cells




RSSI
VOLT1
CELL1


TEMP1
VOLT2
CELL2


TEMP2
VOLT3
CELL3


RPM
MIN CELL
CELL4


FUEL
ALL CELL
CELL5


ALTITUDE
VOLTA
CELL6


VARIO
CURRENT
DISCHARGE



The ALTITUDE value is reported as Above Ground Level.  The ground level is set to the first altitude telemetry value received.
The following values are calculated from received telemetry.  MIN CELL is the lowest reported CELL value.  ALL CELL is the total of all reported CELL values.  The Discharge derived value is total battery discharge amount in milliAmp-hours.
Due to space limitations the Devo7e only supports non-s.port telemetry (RSSI, VOLT1 for FrskyX.  Frsky adds VOLT2.)
The Frsky s.port telemetry provides for connecting up to 16 sensors of the same type (e.g. battery voltage).  Deviation supports multiple sensors of the same type, but only one telemetry value is saved.  The value most recently received from all the sensors of the same type is reported.
The value array in the Telemetry struct is changed from u16 to s32 to support negative vario values and altitude measured in centimeters.
In the radio protocol the values in packet[21] are not fully understood.  The current implementation works well enough for control and telemetry.  There is likely a forward data channel in packet[22-27].
The protocol supports up to 16 channels with 12 bit resolution.  Packets are transmitted every 9ms.","It isn't pretty, but it'll do I think.  Thanks.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,6,2016-05-08T20:57:25Z,2016-05-14T12:39:59Z,2016-05-18T16:56:02Z,MERGED,True,1446,200,24,https://github.com/hexfet,"Add protocol FrskyX, an implementation supporting Frsky X-series receivers",45,[],https://github.com/DeviationTX/deviation/pull/6,https://github.com/hexfet,7,https://github.com/DeviationTX/deviation/pull/6#issuecomment-218323640,"Thanks to midelic and planger for providing the FrskyX implementation, and to all the testers and collaborators in http://www.deviationtx.com/forum/protocol-development/5356-new-frskyx-protocol.
This PR adds protocol FryskyX (frskyx_cc2500.c) which implements the Frsky D16 over-the-air protocol, including s.port and hub telemetry.  It also updates protocol Frsky (frsky2way_cc2500.c) to correctly support hub telemetry.  The HAS_EXTENDED_TELEMETRY definition is added to reduce the number of telemetry values in builds with limited memory (7e).  It is applied to Frsky and DSM telemetry.
The frskyx_cc2500.c file contains the FrskyX protocol implemented by midelic and planger, ported to Deviation. This is the Frysky ""D16"" protocol compatible with the Frsky X-series receivers.  The frsky_d_telem.inc file contains the hub telemetry decoder and is #included by both frskyx_cc2500.c and frsky2way_cc2500.c.  This adds working hub telemetry support to the Deviation Frsky implementation.  The other files in the PR contain changes to support additional telemetry values.
The FrskyX protocol supports up to 12 channels. Fixed ID binding is supported to link the transmitter wtih specific receivers.
The following protocol options are supported.
Freq-fine: Frequency offset adjustment. Range -127 to 127. Adjusts for variances betweeen CC2500 modules. Usually offset of 0 or -41 is required, but full range should be tested if there are problems with binding or range.  Default 0.
AD2GAIN: The VOLT2 telemetry value (AIN input on X4R) is multiplied by this value divided by 100. Allows adjustment for external resistor divider network.  Default 100 (gain of 1). Range is 1 to 2000 (gain of 0.01 to 20.00).
Failsafe: The Frsky failsafe options are fully supported. If the channel failsafe (in mixer channel config) is set this value is sent to the receiver every 9 seconds.  The receiver will use these values in failsafe mode unless the protocol option is set to RX.
For channels with failsafe set to off, the default Failsafe protocol option ""Hold"" commands the receiver to hold the last received channel values when the receiver enters failsafe mode.  The ""NoPulse"" setting causes the receiver to not send any signal on PPM outputs (Testing on X8R showed SBUS values went to minimum, but SBUS behavior is not specified by the protocol).  The ""RX"" setting prevents Deviation from sending failsafe settings so the receiver will use whatever failsafe values have been stored in the receiver.
Telemetry
Supports receiver telemetry, s.port and hub telemetry sensors as well as GPS.  All Devo transmitters support the s.port Frsky telemetry on the main page and in alarms.  The 128x64 telemetry test page is updated with additional values.  The supported telemetry values and their location on the Telemetry monitor page on the Devo10 are:



Misc
Bat
Cells




RSSI
VOLT1
CELL1


TEMP1
VOLT2
CELL2


TEMP2
VOLT3
CELL3


RPM
MIN CELL
CELL4


FUEL
ALL CELL
CELL5


ALTITUDE
VOLTA
CELL6


VARIO
CURRENT
DISCHARGE



The ALTITUDE value is reported as Above Ground Level.  The ground level is set to the first altitude telemetry value received.
The following values are calculated from received telemetry.  MIN CELL is the lowest reported CELL value.  ALL CELL is the total of all reported CELL values.  The Discharge derived value is total battery discharge amount in milliAmp-hours.
Due to space limitations the Devo7e only supports non-s.port telemetry (RSSI, VOLT1 for FrskyX.  Frsky adds VOLT2.)
The Frsky s.port telemetry provides for connecting up to 16 sensors of the same type (e.g. battery voltage).  Deviation supports multiple sensors of the same type, but only one telemetry value is saved.  The value most recently received from all the sensors of the same type is reported.
The value array in the Telemetry struct is changed from u16 to s32 to support negative vario values and altitude measured in centimeters.
In the radio protocol the values in packet[21] are not fully understood.  The current implementation works well enough for control and telemetry.  There is likely a forward data channel in packet[22-27].
The protocol supports up to 16 channels with 12 bit resolution.  Packets are transmitted every 9ms.","Yes, my aesthetic ranges from utilitarian to utilitarian.  Successful test reported in link in first post.
The hub telemetry is getting some more testing with Frysky (D8).  I've already got some changes but waiting for testing before pushing.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,7,2016-05-13T19:41:28Z,2016-06-04T00:52:58Z,2016-06-04T00:52:58Z,MERGED,True,73,53,9,https://github.com/pascallanger,Minor changes to enable portability to atmega,3,[],https://github.com/DeviationTX/deviation/pull/7,https://github.com/pascallanger,1,https://github.com/DeviationTX/deviation/pull/7,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,7,2016-05-13T19:41:28Z,2016-06-04T00:52:58Z,2016-06-04T00:52:58Z,MERGED,True,73,53,9,https://github.com/pascallanger,Minor changes to enable portability to atmega,3,[],https://github.com/DeviationTX/deviation/pull/7,https://github.com/mwm,2,https://github.com/DeviationTX/deviation/pull/7#issuecomment-219148329,,"More information, please. Like which Atmega cpu are we looking at. And is there some longer-term goal here?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,7,2016-05-13T19:41:28Z,2016-06-04T00:52:58Z,2016-06-04T00:52:58Z,MERGED,True,73,53,9,https://github.com/pascallanger,Minor changes to enable portability to atmega,3,[],https://github.com/DeviationTX/deviation/pull/7,https://github.com/pascallanger,3,https://github.com/DeviationTX/deviation/pull/7#issuecomment-219237958,,"PB and victzh contcated me to merge our efforts to develop protocols. I'm therefore trying to change the Multiprotocol code (https://github.com/pascallanger/DIY-Multiprotocol-TX-Module) to work directly with the deviation protocols. The long term goal is to share them and we all contribute to make them better. Today improvements are done in both sides but are not backported...

Pascal",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,7,2016-05-13T19:41:28Z,2016-06-04T00:52:58Z,2016-06-04T00:52:58Z,MERGED,True,73,53,9,https://github.com/pascallanger,Minor changes to enable portability to atmega,3,[],https://github.com/DeviationTX/deviation/pull/7,https://github.com/mwm,4,https://github.com/DeviationTX/deviation/pull/7#issuecomment-219266805,,"In that case, it might be better to put the protocols in a submodule repository that the two projects can pull in.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,7,2016-05-13T19:41:28Z,2016-06-04T00:52:58Z,2016-06-04T00:52:58Z,MERGED,True,73,53,9,https://github.com/pascallanger,Minor changes to enable portability to atmega,3,[],https://github.com/DeviationTX/deviation/pull/7,https://github.com/pascallanger,5,https://github.com/DeviationTX/deviation/pull/7#issuecomment-219272741,,Yes that the long term plan but as a first step I need the to make a couple of changes to be able to  compile everything. Changes that have no impact on your side.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,7,2016-05-13T19:41:28Z,2016-06-04T00:52:58Z,2016-06-04T00:52:58Z,MERGED,True,73,53,9,https://github.com/pascallanger,Minor changes to enable portability to atmega,3,[],https://github.com/DeviationTX/deviation/pull/7,https://github.com/victzh,6,https://github.com/DeviationTX/deviation/pull/7#issuecomment-221974486,,"Pascal, have you checked why dsm2 can't compile for Devo 7E? Probably not only dsm2. Check this Travis page for detailed log: https://travis-ci.org/DeviationTX/deviation/jobs/130180273",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,7,2016-05-13T19:41:28Z,2016-06-04T00:52:58Z,2016-06-04T00:52:58Z,MERGED,True,73,53,9,https://github.com/pascallanger,Minor changes to enable portability to atmega,3,[],https://github.com/DeviationTX/deviation/pull/7,https://github.com/victzh,7,https://github.com/DeviationTX/deviation/pull/7#issuecomment-222049263,,"Pascal, I managed to merge this pull request in my local repo and build it for Devo 7E. I will test it a bit and push it as a branch - it required regrouping the code a bit.
I merged couple of conflicts - you and goebish edited one file together.
Also, can you set your editor so that tabs will be written as 4 spaces in files, we don't use tabs.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,8,2016-05-14T11:49:25Z,2016-05-14T12:37:52Z,2019-03-05T00:12:13Z,MERGED,True,556,77,5,https://github.com/goebish,Add MoonTop MT99XX / EAchine H7 protocol,5,[],https://github.com/DeviationTX/deviation/pull/8,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/8,"Add MT99XX protocol (nrf24l01)
Formats option:

MT99XX  (MoonTop MT9916 and others)
H7  (EAchine H7)
YZ i6S (YI ZHAN i6S, warning: only 1 hardcoded TXID)
LS114  (LIANSHENG LS114, LS124 and others)

""standard"" channels mapping:

Channel 5: led light
Channel 6: flip
Channel 7: camera snapshot
Channel 8: video recording
Channel 9: headless

This pull request also includes unscrambled mode for XN297, as used by the YI ZHAN i6s, this mode is enabled by calling XN297_SetScrambledMode(XN297_UNSCRAMBLED); after NRF24L01_Initialize();
Calling NRF24L01_Initialize(); resets XN297 to scrambled mode (default).","Add MT99XX protocol (nrf24l01)
Formats option:

MT99XX  (MoonTop MT9916 and others)
H7  (EAchine H7)
YZ i6S (YI ZHAN i6S, warning: only 1 hardcoded TXID)
LS114  (LIANSHENG LS114, LS124 and others)

""standard"" channels mapping:

Channel 5: led light
Channel 6: flip
Channel 7: camera snapshot
Channel 8: video recording
Channel 9: headless

This pull request also includes unscrambled mode for XN297, as used by the YI ZHAN i6s, this mode is enabled by calling XN297_SetScrambledMode(XN297_UNSCRAMBLED); after NRF24L01_Initialize();
Calling NRF24L01_Initialize(); resets XN297 to scrambled mode (default).",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,9,2016-05-17T17:01:56Z,2016-05-31T12:32:07Z,2016-05-31T12:32:07Z,MERGED,True,675,5,11,https://github.com/silpstream,devo7e-256k: Enable up to four 3-way switches and 2 pots.,42,[],https://github.com/DeviationTX/deviation/pull/9,https://github.com/silpstream,1,https://github.com/DeviationTX/deviation/pull/9,"Enables up to four 3-way switches and 2 pots. Configuration is via hardware.ini and options stack similar to devo6s extra buttons.
Adds the ability to select [3x3, 3x4] with [2x1, 2x2] as combinations for switches
Adds the ability to select [potx2, potx1].
Previous 2x2, 3x1, and 3x2 switch mod still works.
Emulator has been updated also for this mod. Configuration is similarly done via hardware.ini.","Enables up to four 3-way switches and 2 pots. Configuration is via hardware.ini and options stack similar to devo6s extra buttons.
Adds the ability to select [3x3, 3x4] with [2x1, 2x2] as combinations for switches
Adds the ability to select [potx2, potx1].
Previous 2x2, 3x1, and 3x2 switch mod still works.
Emulator has been updated also for this mod. Configuration is similarly done via hardware.ini.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,9,2016-05-17T17:01:56Z,2016-05-31T12:32:07Z,2016-05-31T12:32:07Z,MERGED,True,675,5,11,https://github.com/silpstream,devo7e-256k: Enable up to four 3-way switches and 2 pots.,42,[],https://github.com/DeviationTX/deviation/pull/9,https://github.com/PhracturedBlue,2,https://github.com/DeviationTX/deviation/pull/9#issuecomment-221568250,"Enables up to four 3-way switches and 2 pots. Configuration is via hardware.ini and options stack similar to devo6s extra buttons.
Adds the ability to select [3x3, 3x4] with [2x1, 2x2] as combinations for switches
Adds the ability to select [potx2, potx1].
Previous 2x2, 3x1, and 3x2 switch mod still works.
Emulator has been updated also for this mod. Configuration is similarly done via hardware.ini.",Note...this code will likely need to be updated to support the recent changes to the makefile.  Please verify that it builds properly on master.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,9,2016-05-17T17:01:56Z,2016-05-31T12:32:07Z,2016-05-31T12:32:07Z,MERGED,True,675,5,11,https://github.com/silpstream,devo7e-256k: Enable up to four 3-way switches and 2 pots.,42,[],https://github.com/DeviationTX/deviation/pull/9,https://github.com/silpstream,3,https://github.com/DeviationTX/deviation/pull/9#issuecomment-221646868,"Enables up to four 3-way switches and 2 pots. Configuration is via hardware.ini and options stack similar to devo6s extra buttons.
Adds the ability to select [3x3, 3x4] with [2x1, 2x2] as combinations for switches
Adds the ability to select [potx2, potx1].
Previous 2x2, 3x1, and 3x2 switch mod still works.
Emulator has been updated also for this mod. Configuration is similarly done via hardware.ini.",Thanks for the heads up PB! Just finished some updates to support the recent changes. Tested both emu and tx on my end and it all checks out now.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,10,2016-05-21T01:55:50Z,2016-05-25T12:55:23Z,2016-12-01T22:38:10Z,MERGED,True,192,103,7,https://github.com/hexfet,Fix Frsky (D8) hub telemetry,20,[],https://github.com/DeviationTX/deviation/pull/10,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/10,Update based on better understanding of D8 over-the-air telemetry packet format.  Added more checks to discard bad packets.  Added new emulator test data.  Fix interpretation of some telemetry bytes based on testing.  Fix 7e crash on telemetry test page access.,Update based on better understanding of D8 over-the-air telemetry packet format.  Added more checks to discard bad packets.  Added new emulator test data.  Fix interpretation of some telemetry bytes based on testing.  Fix 7e crash on telemetry test page access.,True,{'THUMBS_UP': ['https://github.com/goebish']}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,11,2016-05-25T12:24:53Z,2016-05-25T12:29:34Z,2016-05-28T20:05:37Z,MERGED,True,3556,3510,388,https://github.com/PhracturedBlue,Merge AT9 development branch into master,68,[],https://github.com/DeviationTX/deviation/pull/11,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/11,"This is a major reworking of the GUI that includes significant code restructuring, in addition to converting the color interface to be menu based.","This is a major reworking of the GUI that includes significant code restructuring, in addition to converting the color interface to be menu based.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,12,2016-05-26T20:36:41Z,2016-05-26T20:46:58Z,2016-05-26T20:46:58Z,CLOSED,False,0,0,1,https://github.com/F-D-R,Corrected the AT9 arrows bitmap,1,[],https://github.com/DeviationTX/deviation/pull/12,https://github.com/F-D-R,1,https://github.com/DeviationTX/deviation/pull/12,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,13,2016-05-27T05:00:35Z,2016-05-27T16:00:07Z,2016-05-27T16:00:07Z,MERGED,True,0,0,1,https://github.com/F-D-R,Corrected the arrows bitmap of AT9,3,[],https://github.com/DeviationTX/deviation/pull/13,https://github.com/F-D-R,1,https://github.com/DeviationTX/deviation/pull/13,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,14,2016-05-28T20:27:20Z,2016-06-04T13:17:46Z,2016-06-06T03:55:48Z,MERGED,True,662,16,9,https://github.com/victzh,AT9 Discrete Logic 4-in-1 module support and common-proto,9,[],https://github.com/DeviationTX/deviation/pull/14,https://github.com/victzh,1,https://github.com/DeviationTX/deviation/pull/14,"This pull request contains two sets of changes:

Pascal's pull request #7, modified so it builds for Devo 7E
Support for the board with 4-in-1 and SPI flash for AT9

The purpose of this pull request is to check the code builds and to integrate it later. Don't apply automatically.","This pull request contains two sets of changes:

Pascal's pull request #7, modified so it builds for Devo 7E
Support for the board with 4-in-1 and SPI flash for AT9

The purpose of this pull request is to check the code builds and to integrate it later. Don't apply automatically.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,14,2016-05-28T20:27:20Z,2016-06-04T13:17:46Z,2016-06-06T03:55:48Z,MERGED,True,662,16,9,https://github.com/victzh,AT9 Discrete Logic 4-in-1 module support and common-proto,9,[],https://github.com/DeviationTX/deviation/pull/14,https://github.com/PhracturedBlue,2,https://github.com/DeviationTX/deviation/pull/14#issuecomment-222679013,"This pull request contains two sets of changes:

Pascal's pull request #7, modified so it builds for Devo 7E
Support for the board with 4-in-1 and SPI flash for AT9

The purpose of this pull request is to check the code builds and to integrate it later. Don't apply automatically.","It generally looks good.  I'm not sure about the at9-mod thing.  If I want to support this on all of the f* tx as well, it would mean a lot more targets and confusion for everyone.  I'm thinking it would make more sense to enable through the hardware.ini.  The big problem is---how do you know to use it instead?
We could choose to do like on the Devo12 and just have the media on the 2nd large drive, but that makes USB pretty annoying to work with.  Even better would be to detect the module directly, but we'd need to do this without breaking users without one.  I need to think on that some-more.  However, at an absolute minimum, please do not dulicate files between at9 and at9-mod.  See the devo7e-256 mod, and how files are reused either with a #include, or with changes to the Makefile.  AT9 support is not quite complete, and I dn't want to duplicate every change in 2 places.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,14,2016-05-28T20:27:20Z,2016-06-04T13:17:46Z,2016-06-06T03:55:48Z,MERGED,True,662,16,9,https://github.com/victzh,AT9 Discrete Logic 4-in-1 module support and common-proto,9,[],https://github.com/DeviationTX/deviation/pull/14,https://github.com/victzh,3,https://github.com/DeviationTX/deviation/pull/14#issuecomment-222692840,"This pull request contains two sets of changes:

Pascal's pull request #7, modified so it builds for Devo 7E
Support for the board with 4-in-1 and SPI flash for AT9

The purpose of this pull request is to check the code builds and to integrate it later. Don't apply automatically.","Detecting this module is relatively easy - check for direct connection of CYRF6936, then if failed check for it after using switching logic.
I'm not a fan of a separate target as well, the purpose of this pull request is for you to check that it's reasonable. I can merge it into main at9, but there is a slight problem - my build uses different media and it is hard to build depending on a definition in target_def.h. One media set is pbms for reduced color, another is full color Devo8 bmp set. Anyway, as a first step I'll reduce redundancy in files by referencing files in at9.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,14,2016-05-28T20:27:20Z,2016-06-04T13:17:46Z,2016-06-06T03:55:48Z,MERGED,True,662,16,9,https://github.com/victzh,AT9 Discrete Logic 4-in-1 module support and common-proto,9,[],https://github.com/DeviationTX/deviation/pull/14,https://github.com/PhracturedBlue,4,https://github.com/DeviationTX/deviation/pull/14#issuecomment-222697005,"This pull request contains two sets of changes:

Pascal's pull request #7, modified so it builds for Devo 7E
Support for the board with 4-in-1 and SPI flash for AT9

The purpose of this pull request is to check the code builds and to integrate it later. Don't apply automatically.","yeah, the media thing is a bit more complicated.  we have plenty of room on the AT9 so supporting both pbm and bmp in the firmware would be easy.  switching between them based on the hardware.ini will require that we stop hard-coding the extension and instead use a function to generate it.  I can work on adding support for that.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,14,2016-05-28T20:27:20Z,2016-06-04T13:17:46Z,2016-06-06T03:55:48Z,MERGED,True,662,16,9,https://github.com/victzh,AT9 Discrete Logic 4-in-1 module support and common-proto,9,[],https://github.com/DeviationTX/deviation/pull/14,https://github.com/victzh,5,https://github.com/DeviationTX/deviation/pull/14#issuecomment-223187970,"This pull request contains two sets of changes:

Pascal's pull request #7, modified so it builds for Devo 7E
Support for the board with 4-in-1 and SPI flash for AT9

The purpose of this pull request is to check the code builds and to integrate it later. Don't apply automatically.","Merged at9-mod into at9, now to compile for DL module support use
make TARGET=at9 HAS_4IN1_DL_SUPPORT=1",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,14,2016-05-28T20:27:20Z,2016-06-04T13:17:46Z,2016-06-06T03:55:48Z,MERGED,True,662,16,9,https://github.com/victzh,AT9 Discrete Logic 4-in-1 module support and common-proto,9,[],https://github.com/DeviationTX/deviation/pull/14,https://github.com/PhracturedBlue,6,https://github.com/DeviationTX/deviation/pull/14#issuecomment-223193981,"This pull request contains two sets of changes:

Pascal's pull request #7, modified so it builds for Devo 7E
Support for the board with 4-in-1 and SPI flash for AT9

The purpose of this pull request is to check the code builds and to integrate it later. Don't apply automatically.","It looks pretty good.  I don't like the name HAS_4IN1_DL_SUPPORT though.  Can you change it to 'HAS_4IN1_FLASH' instead?  it isn't really adding support, it is changing the behavior.  I'd also like to share the spi_flash code between all stm32 CPUs but I won't hold up the merge for that.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,14,2016-05-28T20:27:20Z,2016-06-04T13:17:46Z,2016-06-06T03:55:48Z,MERGED,True,662,16,9,https://github.com/victzh,AT9 Discrete Logic 4-in-1 module support and common-proto,9,[],https://github.com/DeviationTX/deviation/pull/14,https://github.com/victzh,7,https://github.com/DeviationTX/deviation/pull/14#issuecomment-223197111,"This pull request contains two sets of changes:

Pascal's pull request #7, modified so it builds for Devo 7E
Support for the board with 4-in-1 and SPI flash for AT9

The purpose of this pull request is to check the code builds and to integrate it later. Don't apply automatically.","I planned to merge the spi_code eventually.
I have strange behavior with CYRF6936 - I can bind DSMX module but it never receives channel values. I can't even bind Devo models. All other RF chips work fine.
Also, the main screen stopped re-drawing correctly. I'm trying to figure is it a race between the flash and radio or not. It does not re-draw even if I set protocol to 'None' in which case there is no RF time interrupt activity.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,14,2016-05-28T20:27:20Z,2016-06-04T13:17:46Z,2016-06-06T03:55:48Z,MERGED,True,662,16,9,https://github.com/victzh,AT9 Discrete Logic 4-in-1 module support and common-proto,9,[],https://github.com/DeviationTX/deviation/pull/14,https://github.com/PhracturedBlue,8,https://github.com/DeviationTX/deviation/pull/14#issuecomment-223198678,"This pull request contains two sets of changes:

Pascal's pull request #7, modified so it builds for Devo 7E
Support for the board with 4-in-1 and SPI flash for AT9

The purpose of this pull request is to check the code builds and to integrate it later. Don't apply automatically.","have you looked at it with a logic analyzer?  It should be very clear if you are getting the proper signals to the board.  whether the board actually works is a different question of course.  As for the scren redraw, I'll try it myself tomorrow and see if I can see what is going on.  Even with an interrupt during redraw, I don't see why a screen redraw would be affected by SPI.  Have you tried compiling with your SPI code disabled to make sure that still works?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,14,2016-05-28T20:27:20Z,2016-06-04T13:17:46Z,2016-06-06T03:55:48Z,MERGED,True,662,16,9,https://github.com/victzh,AT9 Discrete Logic 4-in-1 module support and common-proto,9,[],https://github.com/DeviationTX/deviation/pull/14,https://github.com/victzh,9,https://github.com/DeviationTX/deviation/pull/14#issuecomment-223210092,"This pull request contains two sets of changes:

Pascal's pull request #7, modified so it builds for Devo 7E
Support for the board with 4-in-1 and SPI flash for AT9

The purpose of this pull request is to check the code builds and to integrate it later. Don't apply automatically.","Rebuilt it after make clean, reinstalled filesystem - it works. Did not check Devo protocol, but DSMX and S-FHSS work. I added an ability to turn on/off modules for debugging, can be removed or modified later.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,14,2016-05-28T20:27:20Z,2016-06-04T13:17:46Z,2016-06-06T03:55:48Z,MERGED,True,662,16,9,https://github.com/victzh,AT9 Discrete Logic 4-in-1 module support and common-proto,9,[],https://github.com/DeviationTX/deviation/pull/14,https://github.com/PhracturedBlue,10,https://github.com/DeviationTX/deviation/pull/14#issuecomment-223278084,"This pull request contains two sets of changes:

Pascal's pull request #7, modified so it builds for Devo 7E
Support for the board with 4-in-1 and SPI flash for AT9

The purpose of this pull request is to check the code builds and to integrate it later. Don't apply automatically.","Sorry, one last thing.  in protocol.c, what is this?
+#if 0 // defined(HAS_4IN1_FLASH) && HAS_4IN1_FLASH

return 1;
+#else

Is it just leftover for debugging?  can you either use a proper condition for the if, remove it, or document why it is like it is?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,14,2016-05-28T20:27:20Z,2016-06-04T13:17:46Z,2016-06-06T03:55:48Z,MERGED,True,662,16,9,https://github.com/victzh,AT9 Discrete Logic 4-in-1 module support and common-proto,9,[],https://github.com/DeviationTX/deviation/pull/14,https://github.com/victzh,11,https://github.com/DeviationTX/deviation/pull/14#issuecomment-223296046,"This pull request contains two sets of changes:

Pascal's pull request #7, modified so it builds for Devo 7E
Support for the board with 4-in-1 and SPI flash for AT9

The purpose of this pull request is to check the code builds and to integrate it later. Don't apply automatically.",It is temporary debugging feature - it allows to turn on/off individual modules from hardware.ini. I'm not sure how hardware.ini should function for this module.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,14,2016-05-28T20:27:20Z,2016-06-04T13:17:46Z,2016-06-06T03:55:48Z,MERGED,True,662,16,9,https://github.com/victzh,AT9 Discrete Logic 4-in-1 module support and common-proto,9,[],https://github.com/DeviationTX/deviation/pull/14,https://github.com/victzh,12,https://github.com/DeviationTX/deviation/pull/14#issuecomment-223375012,"This pull request contains two sets of changes:

Pascal's pull request #7, modified so it builds for Devo 7E
Support for the board with 4-in-1 and SPI flash for AT9

The purpose of this pull request is to check the code builds and to integrate it later. Don't apply automatically.","If you prefer, I can reinstate the condition which disables [modules] section of hardware.ini altogether.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,14,2016-05-28T20:27:20Z,2016-06-04T13:17:46Z,2016-06-06T03:55:48Z,MERGED,True,662,16,9,https://github.com/victzh,AT9 Discrete Logic 4-in-1 module support and common-proto,9,[],https://github.com/DeviationTX/deviation/pull/14,https://github.com/PhracturedBlue,13,https://github.com/DeviationTX/deviation/pull/14#issuecomment-223729257,"This pull request contains two sets of changes:

Pascal's pull request #7, modified so it builds for Devo 7E
Support for the board with 4-in-1 and SPI flash for AT9

The purpose of this pull request is to check the code builds and to integrate it later. Don't apply automatically.","for some reason, github didn't refresh the pull request after I pulled the proto merge part.  can you refresh  and push to see if you can get it to refresh.  it is hard to review when the diff isn't accurate",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,14,2016-05-28T20:27:20Z,2016-06-04T13:17:46Z,2016-06-06T03:55:48Z,MERGED,True,662,16,9,https://github.com/victzh,AT9 Discrete Logic 4-in-1 module support and common-proto,9,[],https://github.com/DeviationTX/deviation/pull/14,https://github.com/victzh,14,https://github.com/DeviationTX/deviation/pull/14#issuecomment-223742170,"This pull request contains two sets of changes:

Pascal's pull request #7, modified so it builds for Devo 7E
Support for the board with 4-in-1 and SPI flash for AT9

The purpose of this pull request is to check the code builds and to integrate it later. Don't apply automatically.",It seems to be updated now.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,15,2016-05-29T19:09:40Z,2016-05-31T12:35:51Z,2016-05-31T12:35:51Z,MERGED,True,20,5,1,https://github.com/goebish,Add extra channels for JJRC H11D,1,[],https://github.com/DeviationTX/deviation/pull/15,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/15,"Add extra channels to H8_3D protocol for JJRC H11D:

Channel 7: camera snapshot
Channel 8: video recording
Channel 11 (3 positions): camera gimball down / up

Tested successfully by wasp09:
http://www.deviationtx.com/forum/protocol-development/4724-jjrc-h20-hex-quad?start=140#49519","Add extra channels to H8_3D protocol for JJRC H11D:

Channel 7: camera snapshot
Channel 8: video recording
Channel 11 (3 positions): camera gimball down / up

Tested successfully by wasp09:
http://www.deviationtx.com/forum/protocol-development/4724-jjrc-h20-hex-quad?start=140#49519",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,16,2016-06-02T05:01:28Z,2016-06-04T00:52:58Z,2020-02-13T19:00:23Z,MERGED,True,119,154,11,https://github.com/victzh,Unification of protocols between Deviation and Multiprotocol TX Arduino module,6,[],https://github.com/DeviationTX/deviation/pull/16,https://github.com/victzh,1,https://github.com/DeviationTX/deviation/pull/16,This is a replacement for pull request #7 which builds on Devo 7E.,This is a replacement for pull request #7 which builds on Devo 7E.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,17,2016-06-02T06:48:54Z,2016-06-02T08:21:35Z,2016-06-02T13:43:10Z,MERGED,True,6,1,1,https://github.com/goebish,Add accelerometer calibration flag for JJRC H20 / H11D,1,[],https://github.com/DeviationTX/deviation/pull/17,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/17,Push both stick bottom right to calibrate accelerometer on JJRC H20 / H11D,Push both stick bottom right to calibrate accelerometer on JJRC H20 / H11D,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,17,2016-06-02T06:48:54Z,2016-06-02T08:21:35Z,2016-06-02T13:43:10Z,MERGED,True,6,1,1,https://github.com/goebish,Add accelerometer calibration flag for JJRC H20 / H11D,1,[],https://github.com/DeviationTX/deviation/pull/17,https://github.com/PhracturedBlue,2,https://github.com/DeviationTX/deviation/pull/17#issuecomment-223276842,Push both stick bottom right to calibrate accelerometer on JJRC H20 / H11D,Can you also update the manual with this info as well?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,17,2016-06-02T06:48:54Z,2016-06-02T08:21:35Z,2016-06-02T13:43:10Z,MERGED,True,6,1,1,https://github.com/goebish,Add accelerometer calibration flag for JJRC H20 / H11D,1,[],https://github.com/DeviationTX/deviation/pull/17,https://github.com/goebish,3,https://github.com/DeviationTX/deviation/pull/17#issuecomment-223283166,Push both stick bottom right to calibrate accelerometer on JJRC H20 / H11D,"Oops, I just noticed there's no documentation at all for H8_3D protocol, I'll do it.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,17,2016-06-02T06:48:54Z,2016-06-02T08:21:35Z,2016-06-02T13:43:10Z,MERGED,True,6,1,1,https://github.com/goebish,Add accelerometer calibration flag for JJRC H20 / H11D,1,[],https://github.com/DeviationTX/deviation/pull/17,https://github.com/goebish,4,https://github.com/DeviationTX/deviation/pull/17#issuecomment-223295224,Push both stick bottom right to calibrate accelerometer on JJRC H20 / H11D,"Done.
DeviationTX/deviation-manual#6",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,18,2016-06-06T04:05:48Z,2016-06-06T14:02:04Z,2016-06-06T14:02:05Z,MERGED,True,4,1,1,https://github.com/victzh,Add frequency tuning options to S-FHSS,1,[],https://github.com/DeviationTX/deviation/pull/18,https://github.com/victzh,1,https://github.com/DeviationTX/deviation/pull/18,Users reported that these options help them to solve compatibility problem.,Users reported that these options help them to solve compatibility problem.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,19,2016-06-06T04:20:08Z,2016-06-06T14:01:41Z,2016-06-06T14:01:41Z,MERGED,True,4,1,1,https://github.com/victzh,Add frequency tuning options to S-FHSS,1,[],https://github.com/DeviationTX/deviation/pull/19,https://github.com/victzh,1,https://github.com/DeviationTX/deviation/pull/19,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,20,2016-06-06T13:35:24Z,2016-06-06T13:43:47Z,2019-03-05T00:12:12Z,MERGED,True,6,8,1,https://github.com/goebish,Fix rf channel hopping for H8_3D protocol,1,[],https://github.com/DeviationTX/deviation/pull/20,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/20,"Fix rf channel hopping calculation for H8_3D protocol, as noticed by mjbudden:
http://www.deviationtx.com/forum/protocol-development/4724-jjrc-h20-hex-quad?start=160#50020","Fix rf channel hopping calculation for H8_3D protocol, as noticed by mjbudden:
http://www.deviationtx.com/forum/protocol-development/4724-jjrc-h20-hex-quad?start=160#50020",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,20,2016-06-06T13:35:24Z,2016-06-06T13:43:47Z,2019-03-05T00:12:12Z,MERGED,True,6,8,1,https://github.com/goebish,Fix rf channel hopping for H8_3D protocol,1,[],https://github.com/DeviationTX/deviation/pull/20,https://github.com/PhracturedBlue,2,https://github.com/DeviationTX/deviation/pull/20#issuecomment-224004094,"Fix rf channel hopping calculation for H8_3D protocol, as noticed by mjbudden:
http://www.deviationtx.com/forum/protocol-development/4724-jjrc-h20-hex-quad?start=160#50020",you probably want to push this change to the 5.0 branch too,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,20,2016-06-06T13:35:24Z,2016-06-06T13:43:47Z,2019-03-05T00:12:12Z,MERGED,True,6,8,1,https://github.com/goebish,Fix rf channel hopping for H8_3D protocol,1,[],https://github.com/DeviationTX/deviation/pull/20,https://github.com/goebish,3,https://github.com/DeviationTX/deviation/pull/20#issuecomment-224010165,"Fix rf channel hopping calculation for H8_3D protocol, as noticed by mjbudden:
http://www.deviationtx.com/forum/protocol-development/4724-jjrc-h20-hex-quad?start=160#50020","Ok, done.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,21,2016-06-06T16:17:53Z,2016-06-06T16:22:31Z,2016-06-06T16:22:31Z,MERGED,True,12,9,1,https://github.com/goebish,Fix rf channel hopping for H8_3D protocol and add extra flags for JJRC H11D,1,[],https://github.com/DeviationTX/deviation/pull/21,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/21,Fix rf channel hopping for H8_3D protocol and add extra flags for JJRC H11D,Fix rf channel hopping for H8_3D protocol and add extra flags for JJRC H11D,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,22,2016-06-07T02:42:32Z,2016-06-07T03:24:33Z,2016-06-07T03:24:33Z,MERGED,True,2,4,1,https://github.com/hexfet,Fix D8 telemetry to properly handle negative temperature values,1,[],https://github.com/DeviationTX/deviation/pull/22,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/22,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,23,2016-06-07T04:25:06Z,2016-06-07T04:59:58Z,2016-06-07T04:59:58Z,MERGED,True,9,1,2,https://github.com/victzh,Restore AT9/flash functionality with unified spi_flash code,2,[],https://github.com/DeviationTX/deviation/pull/23,https://github.com/victzh,1,https://github.com/DeviationTX/deviation/pull/23,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,24,2016-06-09T00:05:30Z,2016-06-09T02:18:01Z,2016-06-10T00:39:53Z,MERGED,True,53,31,1,https://github.com/theseankelly,Merging a change to enable Crazyflie 2.0 from the defunct bitbucket repo into the github repo,1,[],https://github.com/DeviationTX/deviation/pull/24,https://github.com/theseankelly,1,https://github.com/DeviationTX/deviation/pull/24,"Original commit message from tobbeanton:
Ajusted thrust to work with Crazyflie 2.0 thrust-lock. Changed + to x mode rotation to be optional to have Crazyflie 2.0 in X mode.","Original commit message from tobbeanton:
Ajusted thrust to work with Crazyflie 2.0 thrust-lock. Changed + to x mode rotation to be optional to have Crazyflie 2.0 in X mode.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,25,2016-06-09T19:49:28Z,2016-07-12T14:33:05Z,2016-07-12T14:33:05Z,MERGED,True,160,0,1,https://github.com/mossmann,added protocol documentation for CX-10A/CX-10 blue,1,[],https://github.com/DeviationTX/deviation/pull/25,https://github.com/mossmann,1,https://github.com/DeviationTX/deviation/pull/25,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,25,2016-06-09T19:49:28Z,2016-07-12T14:33:05Z,2016-07-12T14:33:05Z,MERGED,True,160,0,1,https://github.com/mossmann,added protocol documentation for CX-10A/CX-10 blue,1,[],https://github.com/DeviationTX/deviation/pull/25,https://github.com/goebish,2,https://github.com/DeviationTX/deviation/pull/25#issuecomment-225008269,,"Hi mossmann, what a coincidence ... I just got a H1 and I was trying to decode gfsk from a CX10 transmitter today (well, from Deviation...), I think I almost got it but not completely, I'm a complete noob to SDR, could you share the scripts/grc/whatever you used to write this documentation please ?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,25,2016-06-09T19:49:28Z,2016-07-12T14:33:05Z,2016-07-12T14:33:05Z,MERGED,True,160,0,1,https://github.com/mossmann,added protocol documentation for CX-10A/CX-10 blue,1,[],https://github.com/DeviationTX/deviation/pull/25,https://github.com/goebish,3,https://github.com/DeviationTX/deviation/pull/25#issuecomment-225011270,,"There's a small mistake in the documentation, CX-10A is using the same protocol than CX-10 ""blue"".
The ""green"" one is slightly different (no VID, no handshake).",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,25,2016-06-09T19:49:28Z,2016-07-12T14:33:05Z,2016-07-12T14:33:05Z,MERGED,True,160,0,1,https://github.com/mossmann,added protocol documentation for CX-10A/CX-10 blue,1,[],https://github.com/DeviationTX/deviation/pull/25,https://github.com/mossmann,4,https://github.com/DeviationTX/deviation/pull/25#issuecomment-225373862,,"Dominic Spill and I did some stuff with Ubertooth One for our talk at
ToorCamp yesterday.  They gave away a CX-10A to every attendee.  Our
demo code is here:

https://github.com/dominicgs/sturdy-palm-tree/tree/cheerson

slides:

http://greatscottgadgets.com/slides/ossmann-spill-toorcamp-2016.pdf",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,25,2016-06-09T19:49:28Z,2016-07-12T14:33:05Z,2016-07-12T14:33:05Z,MERGED,True,160,0,1,https://github.com/mossmann,added protocol documentation for CX-10A/CX-10 blue,1,[],https://github.com/DeviationTX/deviation/pull/25,https://github.com/goebish,5,https://github.com/DeviationTX/deviation/pull/25#issuecomment-225374136,,Thank you very much for that and everything you do :),True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,25,2016-06-09T19:49:28Z,2016-07-12T14:33:05Z,2016-07-12T14:33:05Z,MERGED,True,160,0,1,https://github.com/mossmann,added protocol documentation for CX-10A/CX-10 blue,1,[],https://github.com/DeviationTX/deviation/pull/25,https://github.com/victzh,6,https://github.com/DeviationTX/deviation/pull/25#issuecomment-227906756,,"Michael, it's a nice surprise to see you here. I used your HackRF One to reverse engineer XN297, and goebish filled many blanks in my initial effort. With this chip becoming more and more popular in cheap Chinese quadcopters it was very useful to have such a powerful tool to spy directly on air - no amount of SPI tracing would help you understand that they used their own packet structure - preamble, address, and content encoding - all are different from their prototype, nRF24L01.
Thanks again for this amazing tool!",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,26,2016-06-16T17:25:07Z,2016-10-14T20:12:38Z,2016-10-14T20:12:38Z,MERGED,True,366,170,6,https://github.com/silpstream,devo7e-256 bugfix for original switch mod,14,[],https://github.com/DeviationTX/deviation/pull/26,https://github.com/silpstream,1,https://github.com/DeviationTX/deviation/pull/26,Bugfix for original extra switch mod in devo7e-256.,Bugfix for original extra switch mod in devo7e-256.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,26,2016-06-16T17:25:07Z,2016-10-14T20:12:38Z,2016-10-14T20:12:38Z,MERGED,True,366,170,6,https://github.com/silpstream,devo7e-256 bugfix for original switch mod,14,[],https://github.com/DeviationTX/deviation/pull/26,https://github.com/happyharrysco1,2,https://github.com/DeviationTX/deviation/pull/26#issuecomment-227009025,Bugfix for original extra switch mod in devo7e-256.,"tested and working fine on stock 7e firmware with no switch mods, ult7e with no switchmods and ult7e with 4x3, 2x2 and 2pots",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,26,2016-06-16T17:25:07Z,2016-10-14T20:12:38Z,2016-10-14T20:12:38Z,MERGED,True,366,170,6,https://github.com/silpstream,devo7e-256 bugfix for original switch mod,14,[],https://github.com/DeviationTX/deviation/pull/26,https://github.com/silpstream,3,https://github.com/DeviationTX/deviation/pull/26#issuecomment-232089418,Bugfix for original extra switch mod in devo7e-256.,"Hi Victzh, I'd be glad to. Problem is, I'm not quite sure how to do that. I'm not that great a programmer. Any chance you could point me in the right direction? Thanks a lot for taking a look at this!",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,27,2016-06-18T01:21:10Z,2016-06-20T15:54:19Z,2016-06-20T15:54:39Z,CLOSED,False,23,6,3,https://github.com/vfbl,Cc2500revsal,5,[],https://github.com/DeviationTX/deviation/pull/27,https://github.com/vfbl,1,https://github.com/DeviationTX/deviation/pull/27,"This is for CC2500 RF modules with GDO0 connected to RX_EN of PA/LNA and GD02 to TX_EN i.e. inverted, onboard. I have 2 of those from ebay. And another deviationtx member hit the same issue found this useful too.   To correct the inversion, add a line containing ""swap_control-cc2500 = 1"" into hardware.ini.  Without the fix, connection dropped a few feet away even with TX set to maximum output.","This is for CC2500 RF modules with GDO0 connected to RX_EN of PA/LNA and GD02 to TX_EN i.e. inverted, onboard. I have 2 of those from ebay. And another deviationtx member hit the same issue found this useful too.   To correct the inversion, add a line containing ""swap_control-cc2500 = 1"" into hardware.ini.  Without the fix, connection dropped a few feet away even with TX set to maximum output.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,27,2016-06-18T01:21:10Z,2016-06-20T15:54:19Z,2016-06-20T15:54:39Z,CLOSED,False,23,6,3,https://github.com/vfbl,Cc2500revsal,5,[],https://github.com/DeviationTX/deviation/pull/27,https://github.com/PhracturedBlue,2,https://github.com/DeviationTX/deviation/pull/27#issuecomment-226917436,"This is for CC2500 RF modules with GDO0 connected to RX_EN of PA/LNA and GD02 to TX_EN i.e. inverted, onboard. I have 2 of those from ebay. And another deviationtx member hit the same issue found this useful too.   To correct the inversion, add a line containing ""swap_control-cc2500 = 1"" into hardware.ini.  Without the fix, connection dropped a few feet away even with TX set to maximum output.","please provide a description for why this is needed.  Also, I do not like the name 'swap_control' it is completely uninformative",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,27,2016-06-18T01:21:10Z,2016-06-20T15:54:19Z,2016-06-20T15:54:39Z,CLOSED,False,23,6,3,https://github.com/vfbl,Cc2500revsal,5,[],https://github.com/DeviationTX/deviation/pull/27,https://github.com/vfbl,3,https://github.com/DeviationTX/deviation/pull/27#issuecomment-226923027,"This is for CC2500 RF modules with GDO0 connected to RX_EN of PA/LNA and GD02 to TX_EN i.e. inverted, onboard. I have 2 of those from ebay. And another deviationtx member hit the same issue found this useful too.   To correct the inversion, add a line containing ""swap_control-cc2500 = 1"" into hardware.ini.  Without the fix, connection dropped a few feet away even with TX set to maximum output.","This is for CC2500 RF modules with GDO0 connected to RX_EN of PA/LNA and GD02 to TX_EN i.e. inverted, onboard.  I have 2 of those from ebay.  And another deviationtx member hit the same issue found this useful (Changed from not operational to over 60m after the fix).
I cannot think of a short and informative name.  What would you suggest?  I guess if we include this we need some form of release notes to info users. Another way is to add an example line in hardware.ini with comments.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,27,2016-06-18T01:21:10Z,2016-06-20T15:54:19Z,2016-06-20T15:54:39Z,CLOSED,False,23,6,3,https://github.com/vfbl,Cc2500revsal,5,[],https://github.com/DeviationTX/deviation/pull/27,https://github.com/goebish,4,https://github.com/DeviationTX/deviation/pull/27#issuecomment-226928673,"This is for CC2500 RF modules with GDO0 connected to RX_EN of PA/LNA and GD02 to TX_EN i.e. inverted, onboard. I have 2 of those from ebay. And another deviationtx member hit the same issue found this useful too.   To correct the inversion, add a line containing ""swap_control-cc2500 = 1"" into hardware.ini.  Without the fix, connection dropped a few feet away even with TX set to maximum output.","Maybe you could name it swap_palna-cc2500, also add
; swap_palna-cc2500 = 1
in src\fs\common\hardware.ini
That would also require a note in the module installation guide, but I think the wiki hasn't been migrated to github yet.
https://bitbucket.org/PhracturedBlue/deviation/wiki/Enabling_modules",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,27,2016-06-18T01:21:10Z,2016-06-20T15:54:19Z,2016-06-20T15:54:39Z,CLOSED,False,23,6,3,https://github.com/vfbl,Cc2500revsal,5,[],https://github.com/DeviationTX/deviation/pull/27,https://github.com/PhracturedBlue,5,https://github.com/DeviationTX/deviation/pull/27#issuecomment-226937667,"This is for CC2500 RF modules with GDO0 connected to RX_EN of PA/LNA and GD02 to TX_EN i.e. inverted, onboard. I have 2 of those from ebay. And another deviationtx member hit the same issue found this useful too.   To correct the inversion, add a line containing ""swap_control-cc2500 = 1"" into hardware.ini.  Without the fix, connection dropped a few feet away even with TX set to maximum output.","I'm not going to accept this patch.  The problem you are solving needs a more general solution.  for instance, we need to be able to distinguish between the AWA24S and UYChina and DEVO Cyrf modules.
A more generic solution is to add a 'config' option to the modules section, so you can set:
config-cc2500 = 0x01
(which we would then define the options for.  It is actually less readable than what you have, but with proper documentation, it will be fine, and a lot more flexible",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,27,2016-06-18T01:21:10Z,2016-06-20T15:54:19Z,2016-06-20T15:54:39Z,CLOSED,False,23,6,3,https://github.com/vfbl,Cc2500revsal,5,[],https://github.com/DeviationTX/deviation/pull/27,https://github.com/vfbl,6,https://github.com/DeviationTX/deviation/pull/27#issuecomment-226940000,"This is for CC2500 RF modules with GDO0 connected to RX_EN of PA/LNA and GD02 to TX_EN i.e. inverted, onboard. I have 2 of those from ebay. And another deviationtx member hit the same issue found this useful too.   To correct the inversion, add a line containing ""swap_control-cc2500 = 1"" into hardware.ini.  Without the fix, connection dropped a few feet away even with TX set to maximum output.","AWA24S and UYChina Cyrf modules, what are those?  Where is the modules section?  Should I wait until the config option is in there?   Do you mean the modules section in hardware.ini?  If that is the case, we just rename things like change swap_control to config.
I actually have modd'ed both my modules by cutting rails and rewiring hardwarewise.  So no hurry for me.  Only the member who is using the firmware to swap the pin may not be able to use nightly builds until we have something in the stream.
Regards",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,27,2016-06-18T01:21:10Z,2016-06-20T15:54:19Z,2016-06-20T15:54:39Z,CLOSED,False,23,6,3,https://github.com/vfbl,Cc2500revsal,5,[],https://github.com/DeviationTX/deviation/pull/27,https://github.com/goebish,7,https://github.com/DeviationTX/deviation/pull/27#issuecomment-226941021,"This is for CC2500 RF modules with GDO0 connected to RX_EN of PA/LNA and GD02 to TX_EN i.e. inverted, onboard. I have 2 of those from ebay. And another deviationtx member hit the same issue found this useful too.   To correct the inversion, add a line containing ""swap_control-cc2500 = 1"" into hardware.ini.  Without the fix, connection dropped a few feet away even with TX set to maximum output.","AWA24S & BUYChina are replacement cyrf6936 for stock module or MULTIMOD.
Actually I find your solution is acceptable (with proper name), but it is for PhracturedBlue to decide and have the last word ;)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,27,2016-06-18T01:21:10Z,2016-06-20T15:54:19Z,2016-06-20T15:54:39Z,CLOSED,False,23,6,3,https://github.com/vfbl,Cc2500revsal,5,[],https://github.com/DeviationTX/deviation/pull/27,https://github.com/PhracturedBlue,8,https://github.com/DeviationTX/deviation/pull/27#issuecomment-226942269,"This is for CC2500 RF modules with GDO0 connected to RX_EN of PA/LNA and GD02 to TX_EN i.e. inverted, onboard. I have 2 of those from ebay. And another deviationtx member hit the same issue found this useful too.   To correct the inversion, add a line containing ""swap_control-cc2500 = 1"" into hardware.ini.  Without the fix, connection dropped a few feet away even with TX set to maximum output.","I just checked in some code that should work for you.
you can add defines in tx.h for module capabilities.  I added 'CC2500_REVERSE_GD02' for you.
you can now use that in cc2500.c to detect this alternate wiring (I didn't add this part for you)
You would then enable it in hardware.ini via:
config-cc2500 = 0x01
(maybe I'll allow using text instead in the future, but for now we'll keep it simple)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,27,2016-06-18T01:21:10Z,2016-06-20T15:54:19Z,2016-06-20T15:54:39Z,CLOSED,False,23,6,3,https://github.com/vfbl,Cc2500revsal,5,[],https://github.com/DeviationTX/deviation/pull/27,https://github.com/vfbl,9,https://github.com/DeviationTX/deviation/pull/27#issuecomment-226999435,"This is for CC2500 RF modules with GDO0 connected to RX_EN of PA/LNA and GD02 to TX_EN i.e. inverted, onboard. I have 2 of those from ebay. And another deviationtx member hit the same issue found this useful too.   To correct the inversion, add a line containing ""swap_control-cc2500 = 1"" into hardware.ini.  Without the fix, connection dropped a few feet away even with TX set to maximum output.","Thanks.  I can see you have added config.
How do I sync up my branch to your changes on the web?  Should I disgard the branch and start all over?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,27,2016-06-18T01:21:10Z,2016-06-20T15:54:19Z,2016-06-20T15:54:39Z,CLOSED,False,23,6,3,https://github.com/vfbl,Cc2500revsal,5,[],https://github.com/DeviationTX/deviation/pull/27,https://github.com/vfbl,10,https://github.com/DeviationTX/deviation/pull/27#issuecomment-227184674,"This is for CC2500 RF modules with GDO0 connected to RX_EN of PA/LNA and GD02 to TX_EN i.e. inverted, onboard. I have 2 of those from ebay. And another deviationtx member hit the same issue found this useful too.   To correct the inversion, add a line containing ""swap_control-cc2500 = 1"" into hardware.ini.  Without the fix, connection dropped a few feet away even with TX set to maximum output.","Let me start over with a new branch, instead of backing out the changes.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,28,2016-06-18T22:05:40Z,2016-06-19T00:18:02Z,2016-06-19T00:18:02Z,MERGED,True,3,2,1,https://github.com/victzh,"Fix [Deviation 0000704], S-FHSS freq tuning options incorrect initialization",2,[],https://github.com/DeviationTX/deviation/pull/28,https://github.com/victzh,1,https://github.com/DeviationTX/deviation/pull/28,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,29,2016-06-18T22:14:24Z,2016-06-19T00:18:17Z,2016-06-19T00:18:17Z,MERGED,True,3,2,1,https://github.com/victzh,"Fix [Deviation 0000704], S-FHSS freq tuning options incorrect initialization",1,[],https://github.com/DeviationTX/deviation/pull/29,https://github.com/victzh,1,https://github.com/DeviationTX/deviation/pull/29,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,30,2016-06-20T16:11:05Z,2016-06-20T17:19:30Z,2016-06-20T17:22:04Z,MERGED,True,14,6,1,https://github.com/vfbl,Add config-cc2500 0x01 for CC2500 modules with GDO0 connected to RX_E…,2,[],https://github.com/DeviationTX/deviation/pull/30,https://github.com/vfbl,1,https://github.com/DeviationTX/deviation/pull/30,"…N and GDO2 connected to TX_EN of PA/LNA.
Add config-cc2500 = 0x01 to modules section of hardware.ini to enable reversal.","…N and GDO2 connected to TX_EN of PA/LNA.
Add config-cc2500 = 0x01 to modules section of hardware.ini to enable reversal.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,30,2016-06-20T16:11:05Z,2016-06-20T17:19:30Z,2016-06-20T17:22:04Z,MERGED,True,14,6,1,https://github.com/vfbl,Add config-cc2500 0x01 for CC2500 modules with GDO0 connected to RX_E…,2,[],https://github.com/DeviationTX/deviation/pull/30,https://github.com/vfbl,2,https://github.com/DeviationTX/deviation/pull/30#issuecomment-227190534,"…N and GDO2 connected to TX_EN of PA/LNA.
Add config-cc2500 = 0x01 to modules section of hardware.ini to enable reversal.","Ar, just forgot to ask.
Would you want to use the config byte as bit map?  Then we check if the bit is set instead?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,30,2016-06-20T16:11:05Z,2016-06-20T17:19:30Z,2016-06-20T17:22:04Z,MERGED,True,14,6,1,https://github.com/vfbl,Add config-cc2500 0x01 for CC2500 modules with GDO0 connected to RX_E…,2,[],https://github.com/DeviationTX/deviation/pull/30,https://github.com/PhracturedBlue,3,https://github.com/DeviationTX/deviation/pull/30#issuecomment-227192782,"…N and GDO2 connected to TX_EN of PA/LNA.
Add config-cc2500 = 0x01 to modules section of hardware.ini to enable reversal.",I chose to use hex so we can use it as a bitmask if needed.  But with only one value it doesn't make any difference at this point.  My only request is that you use the CC2500_REVERSE_GD02 enum in the condition instead of '== 1' so that we have some idea of what it is supposed to do in 6 months time.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,30,2016-06-20T16:11:05Z,2016-06-20T17:19:30Z,2016-06-20T17:22:04Z,MERGED,True,14,6,1,https://github.com/vfbl,Add config-cc2500 0x01 for CC2500 modules with GDO0 connected to RX_E…,2,[],https://github.com/DeviationTX/deviation/pull/30,https://github.com/vfbl,4,https://github.com/DeviationTX/deviation/pull/30#issuecomment-227205463,"…N and GDO2 connected to TX_EN of PA/LNA.
Add config-cc2500 = 0x01 to modules section of hardware.ini to enable reversal.",Sorry I forgot about CC2500_REVERSE_GD02.   Let me change it now.  Hope I can.  :),True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,31,2016-08-05T07:23:47Z,2016-08-05T08:45:17Z,2016-08-05T08:45:17Z,MERGED,True,18,4,1,https://github.com/pascallanger,Added more channels for LS,1,[],https://github.com/DeviationTX/deviation/pull/31,https://github.com/pascallanger,1,https://github.com/DeviationTX/deviation/pull/31,"Channels for Invert, Video and Snapshot which are available on the LS215.","Channels for Invert, Video and Snapshot which are available on the LS215.",True,{'THUMBS_UP': ['https://github.com/goebish']}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,32,2016-08-18T23:38:19Z,2016-10-13T15:41:38Z,2016-10-13T15:41:38Z,MERGED,True,14,1,1,https://github.com/NathanBarguss,Adding a user option to disable Auto-Acknowledge on the YD717 Protocol's,3,[],https://github.com/DeviationTX/deviation/pull/32,https://github.com/NathanBarguss,1,https://github.com/DeviationTX/deviation/pull/32,"After swapping out the nrf24l01 in my 7e for the 4-in-1 module, I could no longer fly the Syma X7 without a huge amount of lag.
Some investigation later, and it turns out that Auto-Ack was the culprit, with the 4-in-1 not receiving the ACKs and wasting lots of time on re-transmits.
A fast fix was to allow the user to selectively disable AA.
More details:
http://www.deviationtx.com/forum/6-general-discussions/6230-my-devo-7e-4-in1-2x3-build-and-syma-x4-issues","After swapping out the nrf24l01 in my 7e for the 4-in-1 module, I could no longer fly the Syma X7 without a huge amount of lag.
Some investigation later, and it turns out that Auto-Ack was the culprit, with the 4-in-1 not receiving the ACKs and wasting lots of time on re-transmits.
A fast fix was to allow the user to selectively disable AA.
More details:
http://www.deviationtx.com/forum/6-general-discussions/6230-my-devo-7e-4-in1-2x3-build-and-syma-x4-issues",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,32,2016-08-18T23:38:19Z,2016-10-13T15:41:38Z,2016-10-13T15:41:38Z,MERGED,True,14,1,1,https://github.com/NathanBarguss,Adding a user option to disable Auto-Acknowledge on the YD717 Protocol's,3,[],https://github.com/DeviationTX/deviation/pull/32,https://github.com/mwm,2,https://github.com/DeviationTX/deviation/pull/32#issuecomment-240891781,"After swapping out the nrf24l01 in my 7e for the 4-in-1 module, I could no longer fly the Syma X7 without a huge amount of lag.
Some investigation later, and it turns out that Auto-Ack was the culprit, with the 4-in-1 not receiving the ACKs and wasting lots of time on re-transmits.
A fast fix was to allow the user to selectively disable AA.
More details:
http://www.deviationtx.com/forum/6-general-discussions/6230-my-devo-7e-4-in1-2x3-build-and-syma-x4-issues","I'm not convinced this is a good idea for a number of reasons.  First, the ack's not being received is a sign that your hardware isn't set up correctly, and I'm not sure we should make that easy to hide.
Second, I had the exact same issue with my V323, which uses the V202 protocol. Someone who's run into this ""fix"" on a Syma might expect the same thing to work on the V202, meaning we'll get pressure for another such kludge so people don't have to fix their broken hardware.
The more protocols this gets added to, the more likely it is that we'll run into one where the symptoms are from a different source, and disabling them won't fix things, and may indeed make things worse.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,32,2016-08-18T23:38:19Z,2016-10-13T15:41:38Z,2016-10-13T15:41:38Z,MERGED,True,14,1,1,https://github.com/NathanBarguss,Adding a user option to disable Auto-Acknowledge on the YD717 Protocol's,3,[],https://github.com/DeviationTX/deviation/pull/32,https://github.com/martinbudden,3,https://github.com/DeviationTX/deviation/pull/32#issuecomment-245118269,"After swapping out the nrf24l01 in my 7e for the 4-in-1 module, I could no longer fly the Syma X7 without a huge amount of lag.
Some investigation later, and it turns out that Auto-Ack was the culprit, with the 4-in-1 not receiving the ACKs and wasting lots of time on re-transmits.
A fast fix was to allow the user to selectively disable AA.
More details:
http://www.deviationtx.com/forum/6-general-discussions/6230-my-devo-7e-4-in1-2x3-build-and-syma-x4-issues",Another option would be to reduce the auto retry count - it's currently 10 which seems a bit much.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,32,2016-08-18T23:38:19Z,2016-10-13T15:41:38Z,2016-10-13T15:41:38Z,MERGED,True,14,1,1,https://github.com/NathanBarguss,Adding a user option to disable Auto-Acknowledge on the YD717 Protocol's,3,[],https://github.com/DeviationTX/deviation/pull/32,https://github.com/hexfet,4,https://github.com/DeviationTX/deviation/pull/32#issuecomment-250937805,"After swapping out the nrf24l01 in my 7e for the 4-in-1 module, I could no longer fly the Syma X7 without a huge amount of lag.
Some investigation later, and it turns out that Auto-Ack was the culprit, with the 4-in-1 not receiving the ACKs and wasting lots of time on re-transmits.
A fast fix was to allow the user to selectively disable AA.
More details:
http://www.deviationtx.com/forum/6-general-discussions/6230-my-devo-7e-4-in1-2x3-build-and-syma-x4-issues","I'm not opposed to this change.  The AA doesn't really add anything to the protocol since no data is returned from the aircraft.  I'd even support removing it completely, without the protocol option.  No reason we have to duplicate the protocol exactly.
Slightly better would be to require it for the bind phase only, so the tx won't exit the bind phase without getting a response from the aircraft.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,33,2016-08-21T16:45:05Z,2016-11-05T22:07:22Z,2016-11-17T00:25:01Z,MERGED,True,401,102,1,https://github.com/theseankelly,Implementation of telemetry support for the cflie protocol,1,[],https://github.com/DeviationTX/deviation/pull/33,https://github.com/theseankelly,1,https://github.com/DeviationTX/deviation/pull/33,This makes use of the crazyflie logging framework and uses the DSM telemetry type on deviationtx,This makes use of the crazyflie logging framework and uses the DSM telemetry type on deviationtx,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,33,2016-08-21T16:45:05Z,2016-11-05T22:07:22Z,2016-11-17T00:25:01Z,MERGED,True,401,102,1,https://github.com/theseankelly,Implementation of telemetry support for the cflie protocol,1,[],https://github.com/DeviationTX/deviation/pull/33,https://github.com/theseankelly,2,https://github.com/DeviationTX/deviation/pull/33#issuecomment-241444678,This makes use of the crazyflie logging framework and uses the DSM telemetry type on deviationtx,I've been testing this out on a Devo7e,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,33,2016-08-21T16:45:05Z,2016-11-05T22:07:22Z,2016-11-17T00:25:01Z,MERGED,True,401,102,1,https://github.com/theseankelly,Implementation of telemetry support for the cflie protocol,1,[],https://github.com/DeviationTX/deviation/pull/33,https://github.com/theseankelly,3,https://github.com/DeviationTX/deviation/pull/33#issuecomment-247194886,This makes use of the crazyflie logging framework and uses the DSM telemetry type on deviationtx,Ping :),True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,33,2016-08-21T16:45:05Z,2016-11-05T22:07:22Z,2016-11-17T00:25:01Z,MERGED,True,401,102,1,https://github.com/theseankelly,Implementation of telemetry support for the cflie protocol,1,[],https://github.com/DeviationTX/deviation/pull/33,https://github.com/theseankelly,4,https://github.com/DeviationTX/deviation/pull/33#issuecomment-251295277,This makes use of the crazyflie logging framework and uses the DSM telemetry type on deviationtx,"Alright -- reverted to using the GetDynamicPayloadSize function, sorry I missed that.
I'm already calling TELEMETRY_SetType in my init routine.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,33,2016-08-21T16:45:05Z,2016-11-05T22:07:22Z,2016-11-17T00:25:01Z,MERGED,True,401,102,1,https://github.com/theseankelly,Implementation of telemetry support for the cflie protocol,1,[],https://github.com/DeviationTX/deviation/pull/33,https://github.com/theseankelly,5,https://github.com/DeviationTX/deviation/pull/33#issuecomment-251296661,This makes use of the crazyflie logging framework and uses the DSM telemetry type on deviationtx,Forget it. I can't figure git out -- it looks like it made two of the files executable.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,33,2016-08-21T16:45:05Z,2016-11-05T22:07:22Z,2016-11-17T00:25:01Z,MERGED,True,401,102,1,https://github.com/theseankelly,Implementation of telemetry support for the cflie protocol,1,[],https://github.com/DeviationTX/deviation/pull/33,https://github.com/goebish,6,https://github.com/DeviationTX/deviation/pull/33#issuecomment-251352530,This makes use of the crazyflie logging framework and uses the DSM telemetry type on deviationtx,Would you like that I take care of it ?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,33,2016-08-21T16:45:05Z,2016-11-05T22:07:22Z,2016-11-17T00:25:01Z,MERGED,True,401,102,1,https://github.com/theseankelly,Implementation of telemetry support for the cflie protocol,1,[],https://github.com/DeviationTX/deviation/pull/33,https://github.com/victzh,7,https://github.com/DeviationTX/deviation/pull/33#issuecomment-251409738,This makes use of the crazyflie logging framework and uses the DSM telemetry type on deviationtx,"Goebish, please do. I have a cflie, I can test it.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,33,2016-08-21T16:45:05Z,2016-11-05T22:07:22Z,2016-11-17T00:25:01Z,MERGED,True,401,102,1,https://github.com/theseankelly,Implementation of telemetry support for the cflie protocol,1,[],https://github.com/DeviationTX/deviation/pull/33,https://github.com/theseankelly,8,https://github.com/DeviationTX/deviation/pull/33#issuecomment-251419747,This makes use of the crazyflie logging framework and uses the DSM telemetry type on deviationtx,"Finally figured it out via ""git update-index"" Now I know to set Git to ignore permission modifications on my windows environment.  Sorry for the hissy fit; I was planning on spinning up a Linux VM and re-merging my changes into a new branch and submitting a new pull request.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,33,2016-08-21T16:45:05Z,2016-11-05T22:07:22Z,2016-11-17T00:25:01Z,MERGED,True,401,102,1,https://github.com/theseankelly,Implementation of telemetry support for the cflie protocol,1,[],https://github.com/DeviationTX/deviation/pull/33,https://github.com/goebish,9,https://github.com/DeviationTX/deviation/pull/33#issuecomment-251420602,This makes use of the crazyflie logging framework and uses the DSM telemetry type on deviationtx,"Looks fine, one last thing: that's not necessary to modify telemetry.c, calling TELEMETRY_SetType from the protocol code is enough, that's what I meant above, sorry.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,33,2016-08-21T16:45:05Z,2016-11-05T22:07:22Z,2016-11-17T00:25:01Z,MERGED,True,401,102,1,https://github.com/theseankelly,Implementation of telemetry support for the cflie protocol,1,[],https://github.com/DeviationTX/deviation/pull/33,https://github.com/theseankelly,10,https://github.com/DeviationTX/deviation/pull/33#issuecomment-251969125,This makes use of the crazyflie logging framework and uses the DSM telemetry type on deviationtx,"Oh, got it -- I'll make that change and test it out in the next day or two.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,33,2016-08-21T16:45:05Z,2016-11-05T22:07:22Z,2016-11-17T00:25:01Z,MERGED,True,401,102,1,https://github.com/theseankelly,Implementation of telemetry support for the cflie protocol,1,[],https://github.com/DeviationTX/deviation/pull/33,https://github.com/theseankelly,11,https://github.com/DeviationTX/deviation/pull/33#issuecomment-253852524,This makes use of the crazyflie logging framework and uses the DSM telemetry type on deviationtx,"I've made the change to revert telemetry.c, but I've been doing a fair bit of travel and haven't been able to test it out",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,33,2016-08-21T16:45:05Z,2016-11-05T22:07:22Z,2016-11-17T00:25:01Z,MERGED,True,401,102,1,https://github.com/theseankelly,Implementation of telemetry support for the cflie protocol,1,[],https://github.com/DeviationTX/deviation/pull/33,https://github.com/goebish,12,https://github.com/DeviationTX/deviation/pull/33#issuecomment-254054867,This makes use of the crazyflie logging framework and uses the DSM telemetry type on deviationtx,"Looks good, Victzh, can you test with yours please ?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,33,2016-08-21T16:45:05Z,2016-11-05T22:07:22Z,2016-11-17T00:25:01Z,MERGED,True,401,102,1,https://github.com/theseankelly,Implementation of telemetry support for the cflie protocol,1,[],https://github.com/DeviationTX/deviation/pull/33,https://github.com/victzh,13,https://github.com/DeviationTX/deviation/pull/33#issuecomment-254065822,This makes use of the crazyflie logging framework and uses the DSM telemetry type on deviationtx,"Ok, I will.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,33,2016-08-21T16:45:05Z,2016-11-05T22:07:22Z,2016-11-17T00:25:01Z,MERGED,True,401,102,1,https://github.com/theseankelly,Implementation of telemetry support for the cflie protocol,1,[],https://github.com/DeviationTX/deviation/pull/33,https://github.com/victzh,14,https://github.com/DeviationTX/deviation/pull/33#issuecomment-258070121,This makes use of the crazyflie logging framework and uses the DSM telemetry type on deviationtx,"I finally checked it on my Devo 10 and cflie 1st gen. It reports some value in the F box, all other values stay uninitialized. Is it correct behavior?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,33,2016-08-21T16:45:05Z,2016-11-05T22:07:22Z,2016-11-17T00:25:01Z,MERGED,True,401,102,1,https://github.com/theseankelly,Implementation of telemetry support for the cflie protocol,1,[],https://github.com/DeviationTX/deviation/pull/33,https://github.com/theseankelly,15,https://github.com/DeviationTX/deviation/pull/33#issuecomment-258151683,This makes use of the crazyflie logging framework and uses the DSM telemetry type on deviationtx,"Yes and no -- the fact that telemetry lights up is good, and the 'F' box contains frameloss/dropped packet information. You should see things in the vBat box too. I had to make a change to the crazyflie firmware too, so double check you are running firmware after this commit: bitcraze/crazyflie-firmware@1cf75fb
Also, I'm not positive whether or not the CF1 supports telemetry.
I'm not traveling this upcoming weekend -- I'll test this out on Friday night or Saturday morning as well. Good data point to make sure the CF1 still works though -- it still flies properly, right?
Sorry for being so slow on this one. It's been an interesting couple of months.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,33,2016-08-21T16:45:05Z,2016-11-05T22:07:22Z,2016-11-17T00:25:01Z,MERGED,True,401,102,1,https://github.com/theseankelly,Implementation of telemetry support for the cflie protocol,1,[],https://github.com/DeviationTX/deviation/pull/33,https://github.com/victzh,16,https://github.com/DeviationTX/deviation/pull/33#issuecomment-258173604,This makes use of the crazyflie logging framework and uses the DSM telemetry type on deviationtx,"No, it's me who's slow. I'm trying to modify Deviation in several places and this juggling does not make it very effective.
Yes, it flies OK with telemetry on or off. I did a test run before updating Devo's firmware and did not notice any difference.
I never updated the firmware on my c-flie, I can try to do this. Is there a single source for c-flie 1 and 2?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,33,2016-08-21T16:45:05Z,2016-11-05T22:07:22Z,2016-11-17T00:25:01Z,MERGED,True,401,102,1,https://github.com/theseankelly,Implementation of telemetry support for the cflie protocol,1,[],https://github.com/DeviationTX/deviation/pull/33,https://github.com/theseankelly,17,https://github.com/DeviationTX/deviation/pull/33#issuecomment-258645145,This makes use of the crazyflie logging framework and uses the DSM telemetry type on deviationtx,"Tested and verified! Change is good to go.
If you're still curious: Yeah, cflie1 and cflie2 have a shared source base, some some platform specific extensions here and there (it appears logging should work on both). It looks like the latest official release has my logging change. https://github.com/bitcraze/crazyflie-firmware/releases/tag/2016.09",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,33,2016-08-21T16:45:05Z,2016-11-05T22:07:22Z,2016-11-17T00:25:01Z,MERGED,True,401,102,1,https://github.com/theseankelly,Implementation of telemetry support for the cflie protocol,1,[],https://github.com/DeviationTX/deviation/pull/33,https://github.com/victzh,18,https://github.com/DeviationTX/deviation/pull/33#issuecomment-258651515,This makes use of the crazyflie logging framework and uses the DSM telemetry type on deviationtx,"I built new version of cflie firmware but now struggling with flashing it. For OTA update I need client - another installation. For JTAG - the header is 1.27mm, I probably don't have such in my parts collection.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,34,2016-08-24T08:22:16Z,2016-11-11T07:04:16Z,2016-11-11T07:04:16Z,CLOSED,False,17,1,1,https://github.com/hughsie,Add a metadata table to the generated DFU file,1,[],https://github.com/DeviationTX/deviation/pull/34,https://github.com/hughsie,1,https://github.com/DeviationTX/deviation/pull/34,"This extra metadata allows flashing tools know that the firmware is already
obfuscated with an offset. Tools that don't understand the metadata table will
just ignore the extra data.
For more details, see https://github.com/hughsie/fwupd/blob/master/docs/dfu-metadata-store.md","This extra metadata allows flashing tools know that the firmware is already
obfuscated with an offset. Tools that don't understand the metadata table will
just ignore the extra data.
For more details, see https://github.com/hughsie/fwupd/blob/master/docs/dfu-metadata-store.md",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,34,2016-08-24T08:22:16Z,2016-11-11T07:04:16Z,2016-11-11T07:04:16Z,CLOSED,False,17,1,1,https://github.com/hughsie,Add a metadata table to the generated DFU file,1,[],https://github.com/DeviationTX/deviation/pull/34,https://github.com/hughsie,2,https://github.com/DeviationTX/deviation/pull/34#issuecomment-241993287,"This extra metadata allows flashing tools know that the firmware is already
obfuscated with an offset. Tools that don't understand the metadata table will
just ignore the extra data.
For more details, see https://github.com/hughsie/fwupd/blob/master/docs/dfu-metadata-store.md","I've also left the the Copyright and License fields commented out, please tell me if you want actual values there. Also, I've not tested with with the Walkera flash tool (software is supposed to read the footer len, not just assume a set size), so someone with the actual hardware will have to test that. Thanks!",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,34,2016-08-24T08:22:16Z,2016-11-11T07:04:16Z,2016-11-11T07:04:16Z,CLOSED,False,17,1,1,https://github.com/hughsie,Add a metadata table to the generated DFU file,1,[],https://github.com/DeviationTX/deviation/pull/34,https://github.com/mwm,3,https://github.com/DeviationTX/deviation/pull/34#issuecomment-242284201,"This extra metadata allows flashing tools know that the firmware is already
obfuscated with an offset. Tools that don't understand the metadata table will
just ignore the extra data.
For more details, see https://github.com/hughsie/fwupd/blob/master/docs/dfu-metadata-store.md","The resulting DFU files don't work in either the Walkera dfuse tool - it complains that the format is invalid - or the devention Uploader, which quietly fails to load the dfu files.
If you have a Windows box, you can download the Walkera dfuse tool from  https://drive.google.com/drive/folders/0B6SupsT8-3_BYXNQM1dOUlRYcGM. Just try loading one of the dfu files, and it will complain - no need to connect a transmitter to it.
For use on Unix or Unix-like systems, you can get the Deviation Uploader from http://www.deviationtx.com/downloads-new/category/161-dfu-usb-tool. It's a java binary, and needs both libusb and some java wrappers for it; it's known to work on ubuntu and OSX. Switch to the DFU tab and try opening the dfu files. It'll just fail (hey, it's beta software).
As for your questions: deviation doesn't do copyright assignment, so a Copyright field wouldn't be appropriate. The binary is distributed under the terms of the GPL 3 or later, so the license field is ok.
Also, I don't think we want to add the CipherKind field if the offset is 0, as that value is a no-op, so you should get an unencrypted dfu file.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,34,2016-08-24T08:22:16Z,2016-11-11T07:04:16Z,2016-11-11T07:04:16Z,CLOSED,False,17,1,1,https://github.com/hughsie,Add a metadata table to the generated DFU file,1,[],https://github.com/DeviationTX/deviation/pull/34,https://github.com/hughsie,4,https://github.com/DeviationTX/deviation/pull/34#issuecomment-242326435,"This extra metadata allows flashing tools know that the firmware is already
obfuscated with an offset. Tools that don't understand the metadata table will
just ignore the extra data.
For more details, see https://github.com/hughsie/fwupd/blob/master/docs/dfu-metadata-store.md","The resulting DFU files don't work in either the Walkera dfuse tool

Okay, that's disappointing. I couldn't get the java version to work on my system at all, but I did verify that the windows tool is rejecting the files as invalid. I don't suppose the source code for that is somewhere? I've made the other two changes, but it it breaks with the uploader (either one) this change probably isn't a good idea.
As a fallback (urgh) is there a known signature that's mangled as part of the encryption? Just so we can use a heuristic and find out if the firmware is already ""encrypted"" or not. Thanks.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,34,2016-08-24T08:22:16Z,2016-11-11T07:04:16Z,2016-11-11T07:04:16Z,CLOSED,False,17,1,1,https://github.com/hughsie,Add a metadata table to the generated DFU file,1,[],https://github.com/DeviationTX/deviation/pull/34,https://github.com/mwm,5,https://github.com/DeviationTX/deviation/pull/34#issuecomment-242335918,"This extra metadata allows flashing tools know that the firmware is already
obfuscated with an offset. Tools that don't understand the metadata table will
just ignore the extra data.
For more details, see https://github.com/hughsie/fwupd/blob/master/docs/dfu-metadata-store.md","No source for the Walkera tools. The Java uploader is in the bitbucket repository I sent you a link to.
I don't know of such a signature, but I didn't write the uploader. We might be able to live with breaking the Walkera tool, but there Java uploader is required for the newer transmitters.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,34,2016-08-24T08:22:16Z,2016-11-11T07:04:16Z,2016-11-11T07:04:16Z,CLOSED,False,17,1,1,https://github.com/hughsie,Add a metadata table to the generated DFU file,1,[],https://github.com/DeviationTX/deviation/pull/34,https://github.com/hughsie,6,https://github.com/DeviationTX/deviation/pull/34#issuecomment-242352186,"This extra metadata allows flashing tools know that the firmware is already
obfuscated with an offset. Tools that don't understand the metadata table will
just ignore the extra data.
For more details, see https://github.com/hughsie/fwupd/blob/master/docs/dfu-metadata-store.md","So looking at the DfuFile.java source file I see all the offsets from the end of the DfuSe section being a positive number. DFU actually specifies them the other way around, from the last byte in the file counting upwards. For instance,
    final byte [] ucDfuSignature = new byte[] {'U', 'F', 'D'};
    if (! Arrays.equals(Arrays.copyOfRange(data, start+8, start+11), ucDfuSignature)) {

should really be:
    final byte [] ucDfuSignature = new byte[] {'U', 'F', 'D'};
    if (! Arrays.equals(Arrays.copyOfRange(data, end-7, end-4), ucDfuSignature)) {

I guess because you're consuming only files that you wrote it's not a big deal, but it's going to break if the DFU group ever increase the size of the header. I don't know how much you care about this -- ""not at all"" would be perfectly valid.
Being logical about things, the only projects creating DFU files for the hardware is you guys and the vendor, so if you both crypt the firmware with the DEVO algorithm then the flashing tools can just be dumb and just flash the provided image without introducing an offset at flashing time.
I'm guessing you can't just flash a 7E image onto a 8S, and so we'd never have to deal with this in the flash tool. I'm fine if you want to close this PR.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,34,2016-08-24T08:22:16Z,2016-11-11T07:04:16Z,2016-11-11T07:04:16Z,CLOSED,False,17,1,1,https://github.com/hughsie,Add a metadata table to the generated DFU file,1,[],https://github.com/DeviationTX/deviation/pull/34,https://github.com/F-D-R,7,https://github.com/DeviationTX/deviation/pull/34#issuecomment-242356455,"This extra metadata allows flashing tools know that the firmware is already
obfuscated with an offset. Tools that don't understand the metadata table will
just ignore the extra data.
For more details, see https://github.com/hughsie/fwupd/blob/master/docs/dfu-metadata-store.md","Hi!
I've already suggested in the forums, that IMO we should hardcode the Walkera vendor ID to enable the obfuscation.
Walkera probably won't stop obfuscating, because that would break the compability with their own DfuSe tool, and if we used a different vendor ID for the not obfuscated DFUs (i.e. the ones for transmitters with a non-Walkera bootloader), it would at least prevent the use of the Walkera DfuSe Tool, which would ruine it anyway.
BTW I aggree, that the DFU parsing and checking need to be as flexible as we can, however if the DFU group would change the specification we (and Walkera as well) would need to change our implementations anyway...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,34,2016-08-24T08:22:16Z,2016-11-11T07:04:16Z,2016-11-11T07:04:16Z,CLOSED,False,17,1,1,https://github.com/hughsie,Add a metadata table to the generated DFU file,1,[],https://github.com/DeviationTX/deviation/pull/34,https://github.com/hughsie,8,https://github.com/DeviationTX/deviation/pull/34#issuecomment-242356944,"This extra metadata allows flashing tools know that the firmware is already
obfuscated with an offset. Tools that don't understand the metadata table will
just ignore the extra data.
For more details, see https://github.com/hughsie/fwupd/blob/master/docs/dfu-metadata-store.md","we should hardcode the Walkera vendor ID

Yes, this is a very good idea. Any non-Walkera bootloader should have a different VID:PID for sure.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,34,2016-08-24T08:22:16Z,2016-11-11T07:04:16Z,2016-11-11T07:04:16Z,CLOSED,False,17,1,1,https://github.com/hughsie,Add a metadata table to the generated DFU file,1,[],https://github.com/DeviationTX/deviation/pull/34,https://github.com/victzh,9,https://github.com/DeviationTX/deviation/pull/34#issuecomment-249948612,"This extra metadata allows flashing tools know that the firmware is already
obfuscated with an offset. Tools that don't understand the metadata table will
just ignore the extra data.
For more details, see https://github.com/hughsie/fwupd/blob/master/docs/dfu-metadata-store.md","So, what's the resolution for this pull request? Decline as currently unusable?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,34,2016-08-24T08:22:16Z,2016-11-11T07:04:16Z,2016-11-11T07:04:16Z,CLOSED,False,17,1,1,https://github.com/hughsie,Add a metadata table to the generated DFU file,1,[],https://github.com/DeviationTX/deviation/pull/34,https://github.com/victzh,10,https://github.com/DeviationTX/deviation/pull/34#issuecomment-259894935,"This extra metadata allows flashing tools know that the firmware is already
obfuscated with an offset. Tools that don't understand the metadata table will
just ignore the extra data.
For more details, see https://github.com/hughsie/fwupd/blob/master/docs/dfu-metadata-store.md",Closing as no way to merge it without disrupting usability for current users.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,35,2016-08-31T12:49:45Z,2016-09-07T20:22:50Z,2019-03-05T00:12:12Z,MERGED,True,398,0,3,https://github.com/goebish,Add FQ777 protocol for FQ777-124 with SSV7241 RF chip,9,[],https://github.com/DeviationTX/deviation/pull/35,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/35,"Add FQ777 protocol for FQ777-124 with SSV7241 RF chip
Channel mapping:

CH6: flip mode
CH9: headless mode
CH10: Return to Home

There's a format option with an unique value of ""124 SSV"" for now to make clear this is for the FQ777-124 with SSV7241 RF chip, not the one with XN297 (not captured/reversed yet).
This protocol has required quite a bit of work because SSV7241 had to be emulated with the nrf24l01, I only ported the protocol to Deviation, full credits go to:

btoschi
bikemike
planger (hpnuts)

Forums thread: http://www.deviationtx.com/forum/protocol-development/4884-fq777-124-pocket-drone","Add FQ777 protocol for FQ777-124 with SSV7241 RF chip
Channel mapping:

CH6: flip mode
CH9: headless mode
CH10: Return to Home

There's a format option with an unique value of ""124 SSV"" for now to make clear this is for the FQ777-124 with SSV7241 RF chip, not the one with XN297 (not captured/reversed yet).
This protocol has required quite a bit of work because SSV7241 had to be emulated with the nrf24l01, I only ported the protocol to Deviation, full credits go to:

btoschi
bikemike
planger (hpnuts)

Forums thread: http://www.deviationtx.com/forum/protocol-development/4884-fq777-124-pocket-drone",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,36,2016-09-03T17:04:46Z,2016-09-21T15:52:04Z,2016-09-21T15:52:04Z,MERGED,True,6,3,1,https://github.com/pascallanger,FrSky 1 way: Fixed ID and 8 channels,1,[],https://github.com/DeviationTX/deviation/pull/36,https://github.com/pascallanger,1,https://github.com/DeviationTX/deviation/pull/36,"ID is on 15 bits only not 16 bits.
The protocol is now supporting 8 channels and not only 4 has before.","ID is on 15 bits only not 16 bits.
The protocol is now supporting 8 channels and not only 4 has before.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,36,2016-09-03T17:04:46Z,2016-09-21T15:52:04Z,2016-09-21T15:52:04Z,MERGED,True,6,3,1,https://github.com/pascallanger,FrSky 1 way: Fixed ID and 8 channels,1,[],https://github.com/DeviationTX/deviation/pull/36,https://github.com/victzh,2,https://github.com/DeviationTX/deviation/pull/36#issuecomment-248655545,"ID is on 15 bits only not 16 bits.
The protocol is now supporting 8 channels and not only 4 has before.","OK, as nobody else is looking, I rely on Pascal's correctness and merge it.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,37,2016-09-05T18:10:42Z,2016-09-14T19:28:00Z,2016-09-15T06:15:47Z,MERGED,True,934,8,5,https://github.com/martinbudden,Initial commit of iNav protocol,8,[],https://github.com/DeviationTX/deviation/pull/37,https://github.com/martinbudden,1,https://github.com/DeviationTX/deviation/pull/37,"Added new iNav protocol, as to be included in https://github.com/iNavFlight/inav release 1.2","Added new iNav protocol, as to be included in https://github.com/iNavFlight/inav release 1.2",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,37,2016-09-05T18:10:42Z,2016-09-14T19:28:00Z,2016-09-15T06:15:47Z,MERGED,True,934,8,5,https://github.com/martinbudden,Initial commit of iNav protocol,8,[],https://github.com/DeviationTX/deviation/pull/37,https://github.com/martinbudden,2,https://github.com/DeviationTX/deviation/pull/37#issuecomment-246427227,"Added new iNav protocol, as to be included in https://github.com/iNavFlight/inav release 1.2","@goebish , I'm fairly happy with this protocol now. What needs to happen to get it into the deviationtx nightlies?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,37,2016-09-05T18:10:42Z,2016-09-14T19:28:00Z,2016-09-15T06:15:47Z,MERGED,True,934,8,5,https://github.com/martinbudden,Initial commit of iNav protocol,8,[],https://github.com/DeviationTX/deviation/pull/37,https://github.com/goebish,3,https://github.com/DeviationTX/deviation/pull/37#issuecomment-246428212,"Added new iNav protocol, as to be included in https://github.com/iNavFlight/inav release 1.2","It needs to be approved by a couple of people.
No objection on my side as this won't break anything anyway.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,37,2016-09-05T18:10:42Z,2016-09-14T19:28:00Z,2016-09-15T06:15:47Z,MERGED,True,934,8,5,https://github.com/martinbudden,Initial commit of iNav protocol,8,[],https://github.com/DeviationTX/deviation/pull/37,https://github.com/martinbudden,4,https://github.com/DeviationTX/deviation/pull/37#issuecomment-247244617,"Added new iNav protocol, as to be included in https://github.com/iNavFlight/inav release 1.2","Great, thanks for merging this in.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,38,2016-09-07T09:11:08Z,2016-09-07T20:38:33Z,2019-03-05T00:12:11Z,MERGED,True,27,3,1,https://github.com/goebish,Add H301 format,1,[],https://github.com/DeviationTX/deviation/pull/38,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/38,"Add H301 format to Hubsan protocol.

Channel 5: LEDs
Channel 6: stabilized / manual flight modes
Channel 8: video record
Channel 10: Return to Home

Forums thread: http://www.deviationtx.com/forum/protocol-development/5028-the-new-hubsans","Add H301 format to Hubsan protocol.

Channel 5: LEDs
Channel 6: stabilized / manual flight modes
Channel 8: video record
Channel 10: Return to Home

Forums thread: http://www.deviationtx.com/forum/protocol-development/5028-the-new-hubsans",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,39,2016-09-07T20:34:15Z,2016-09-07T20:40:51Z,2016-09-07T20:40:51Z,MERGED,True,11,5,1,https://github.com/goebish,Add E010 format to MJXq protocol,4,[],https://github.com/DeviationTX/deviation/pull/39,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/39,"Add E010 format to MJXq protocol, compatible with EAchine E010, NuHui NH-010 and probably JJRC H36 mini.

Channel 6: flip mode
Channel 9: Headless
Channel 10: RTH","Add E010 format to MJXq protocol, compatible with EAchine E010, NuHui NH-010 and probably JJRC H36 mini.

Channel 6: flip mode
Channel 9: Headless
Channel 10: RTH",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,40,2016-09-10T11:39:42Z,2016-09-10T11:42:18Z,2016-09-10T11:42:18Z,MERGED,True,11,9,1,https://github.com/goebish,Protocol e010 fixes,2,[],https://github.com/DeviationTX/deviation/pull/40,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/40,"disable dynamic trims while in headless mode
fix bind issue with some transmitter ID","disable dynamic trims while in headless mode
fix bind issue with some transmitter ID",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,41,2016-09-11T14:29:34Z,2016-09-11T14:35:07Z,2019-03-05T00:12:10Z,MERGED,True,2,2,1,https://github.com/goebish,Fix E010 didn't work with some transmitter ID,1,[],https://github.com/DeviationTX/deviation/pull/41,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/41,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,42,2016-09-16T10:47:05Z,2016-09-21T15:14:36Z,2019-03-05T00:12:09Z,MERGED,True,71,43,1,https://github.com/goebish,Add FQ777-951 format to Hontai protocol,4,[],https://github.com/DeviationTX/deviation/pull/42,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/42,"Add FQ777-951 format to Hontai protocol

channel 6: flip
channel 7: snapshot (FQ777-951C)
channel 8: video (FQ777-951C)
channel 9: headless","Add FQ777-951 format to Hontai protocol

channel 6: flip
channel 7: snapshot (FQ777-951C)
channel 8: video (FQ777-951C)
channel 9: headless",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,43,2016-10-01T20:56:12Z,2016-10-09T23:33:25Z,2016-12-06T02:15:47Z,MERGED,True,13,4,1,https://github.com/hexfet,Fix FrskyX dropout issue,19,[],https://github.com/DeviationTX/deviation/pull/43,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/43,"petsmith discovered that telemetry packets may have corrupted values, including for the s.port data length value in pkt[6].  This length was used for looping over the data and processing incorrect large values caused protocol timing issues resulting in dropouts.
Added additional checks on telemetry packet to fix the issue:

received packet length must match expected value
crc check on packet contents
length of s.port data must match expected value","petsmith discovered that telemetry packets may have corrupted values, including for the s.port data length value in pkt[6].  This length was used for looping over the data and processing incorrect large values caused protocol timing issues resulting in dropouts.
Added additional checks on telemetry packet to fix the issue:

received packet length must match expected value
crc check on packet contents
length of s.port data must match expected value",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,43,2016-10-01T20:56:12Z,2016-10-09T23:33:25Z,2016-12-06T02:15:47Z,MERGED,True,13,4,1,https://github.com/hexfet,Fix FrskyX dropout issue,19,[],https://github.com/DeviationTX/deviation/pull/43,https://github.com/hexfet,2,https://github.com/DeviationTX/deviation/pull/43#issuecomment-252520839,"petsmith discovered that telemetry packets may have corrupted values, including for the s.port data length value in pkt[6].  This length was used for looping over the data and processing incorrect large values caused protocol timing issues resulting in dropouts.
Added additional checks on telemetry packet to fix the issue:

received packet length must match expected value
crc check on packet contents
length of s.port data must match expected value",Merging as I approve also :)  I've tested this change with Frysky XSR receiver.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,43,2016-10-01T20:56:12Z,2016-10-09T23:33:25Z,2016-12-06T02:15:47Z,MERGED,True,13,4,1,https://github.com/hexfet,Fix FrskyX dropout issue,19,[],https://github.com/DeviationTX/deviation/pull/43,https://github.com/vladislavy,3,https://github.com/DeviationTX/deviation/pull/43#issuecomment-252813042,"petsmith discovered that telemetry packets may have corrupted values, including for the s.port data length value in pkt[6].  This length was used for looping over the data and processing incorrect large values caused protocol timing issues resulting in dropouts.
Added additional checks on telemetry packet to fix the issue:

received packet length must match expected value
crc check on packet contents
length of s.port data must match expected value","I have continuous reboot with FrSkyX protocol, at two my transmitters Devo8s + 4in1, but not at Devo12s + 4in1. All other CC2500 based protocols work fine. Both latest nightly build and v5.0.0 with latest protocols integrated.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,43,2016-10-01T20:56:12Z,2016-10-09T23:33:25Z,2016-12-06T02:15:47Z,MERGED,True,13,4,1,https://github.com/hexfet,Fix FrskyX dropout issue,19,[],https://github.com/DeviationTX/deviation/pull/43,https://github.com/hexfet,4,https://github.com/DeviationTX/deviation/pull/43#issuecomment-252814548,"petsmith discovered that telemetry packets may have corrupted values, including for the s.port data length value in pkt[6].  This length was used for looping over the data and processing incorrect large values caused protocol timing issues resulting in dropouts.
Added additional checks on telemetry packet to fix the issue:

received packet length must match expected value
crc check on packet contents
length of s.port data must match expected value","Please connect your 8s in USB mode, save the errors.txt file, and paste here.
Then edit the tx.ini file to change the first line, current_model, to a model that is not set for FrskyX protocol.
Turn the tx off and on to boot normally, go to the model and change the Fixed ID before selecting FrskyX.
This worked for me, though I'm surprised it happened to someone else.  My errors.txt file indicates the get_tx_id function gets stuck in an infinite loop, but haven't looked into it yet.  At first glance don't see how it could happen.
Best to open a bug report, or at least a forum comment.  This branch is closed.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,43,2016-10-01T20:56:12Z,2016-10-09T23:33:25Z,2016-12-06T02:15:47Z,MERGED,True,13,4,1,https://github.com/hexfet,Fix FrskyX dropout issue,19,[],https://github.com/DeviationTX/deviation/pull/43,https://github.com/vladislavy,5,https://github.com/DeviationTX/deviation/pull/43#issuecomment-252828263,"petsmith discovered that telemetry packets may have corrupted values, including for the s.port data length value in pkt[6].  This length was used for looping over the data and processing incorrect large values caused protocol timing issues resulting in dropouts.
Added additional checks on telemetry packet to fix the issue:

received packet length must match expected value
crc check on packet contents
length of s.port data must match expected value","It's definitely ""dead loop"" somewhere at while loops:
static void initialize(int bind)
{
CLOCK_StopTimer();
// initialize statics since 7e modules don't initialize
fine = Model.proto_opts[PROTO_OPTS_FREQFINE];
fixed_id = (u16) get_tx_id();
failsafe_count = 0;
chan_offset = 0;
FS_flag = 0;
channr = 0;
chanskip = 0;
ctr = 0;
seq_last_sent = 0;
seq_last_rcvd = 8;
while (!chanskip)
chanskip = (get_tx_id() & 0xfefefefe) % 47;
while((chanskip - ctr) % 4)
ctr = (ctr + 1) % 4;
counter_rst = (chanskip - ctr) >> 2;
...
If I comment out both ""while"" transmitter boot normally.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,43,2016-10-01T20:56:12Z,2016-10-09T23:33:25Z,2016-12-06T02:15:47Z,MERGED,True,13,4,1,https://github.com/hexfet,Fix FrskyX dropout issue,19,[],https://github.com/DeviationTX/deviation/pull/43,https://github.com/hexfet,6,https://github.com/DeviationTX/deviation/pull/43#issuecomment-252907145,"petsmith discovered that telemetry packets may have corrupted values, including for the s.port data length value in pkt[6].  This length was used for looping over the data and processing incorrect large values caused protocol timing issues resulting in dropouts.
Added additional checks on telemetry packet to fix the issue:

received packet length must match expected value
crc check on packet contents
length of s.port data must match expected value","Thanks!  I'd never looked closely at that code before. The first loop will never terminate if get_tx_id returns 0, or a number with one bits only in the last bit of each nibble, or a multiple of 47 that's unchanged by the and operation.
get_tx_id always returns the same value for a given transmitter and fixed ID.  A random number would work - maybe seed from the clock?  I'll give it a little thought.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,44,2016-10-02T19:34:48Z,2016-10-04T14:43:43Z,2019-03-05T00:12:08Z,MERGED,True,317,0,3,https://github.com/goebish,Add Assan protocol,7,[],https://github.com/DeviationTX/deviation/pull/44,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/44,"Add Assan protocol for nrf24l01.
Ported from DIY-Multiprotocol-TX-Module
Forums thread: http://www.deviationtx.com/forum/protocol-development/2038-what-about-assan","Add Assan protocol for nrf24l01.
Ported from DIY-Multiprotocol-TX-Module
Forums thread: http://www.deviationtx.com/forum/protocol-development/2038-what-about-assan",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,45,2016-10-13T09:46:07Z,2016-10-13T09:54:37Z,2016-10-13T09:54:37Z,MERGED,True,8,9,1,https://github.com/vladislavy,Removed redefinition of BIND_COUNT at fq777 protocol,1,[],https://github.com/DeviationTX/deviation/pull/45,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/45,Removed redefinition of BIND_COUNT,Removed redefinition of BIND_COUNT,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,46,2016-10-13T11:00:46Z,2016-10-13T21:34:16Z,2016-10-13T21:34:16Z,MERGED,True,43,13,3,https://github.com/vladislavy,RF Scanner improvement,3,[],https://github.com/DeviationTX/deviation/pull/46,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/46,Changed the scanning algorithm. Now you can see even jumping FHSS channels. Added the attenuator option (0dB or -20dB) for strong/near RF sources.,Changed the scanning algorithm. Now you can see even jumping FHSS channels. Added the attenuator option (0dB or -20dB) for strong/near RF sources.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,47,2016-10-14T02:42:09Z,2016-10-15T04:35:03Z,2016-12-06T02:16:01Z,MERGED,True,40,38,2,https://github.com/hexfet,Fixes for Frsky S.Port and Hub telemetry,15,[],https://github.com/DeviationTX/deviation/pull/47,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/47,"Mostly fixes for scaling and data interpretation.  Based on testing with XSR (S.Port) and D4RII (hub) receivers, and these sensor simulator libraries for S.Port and hub telemetry.
No real sensor test reports yet, but this is an improvement over existing code.","Mostly fixes for scaling and data interpretation.  Based on testing with XSR (S.Port) and D4RII (hub) receivers, and these sensor simulator libraries for S.Port and hub telemetry.
No real sensor test reports yet, but this is an improvement over existing code.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,47,2016-10-14T02:42:09Z,2016-10-15T04:35:03Z,2016-12-06T02:16:01Z,MERGED,True,40,38,2,https://github.com/hexfet,Fixes for Frsky S.Port and Hub telemetry,15,[],https://github.com/DeviationTX/deviation/pull/47,https://github.com/hexfet,2,https://github.com/DeviationTX/deviation/pull/47#issuecomment-253962228,"Mostly fixes for scaling and data interpretation.  Based on testing with XSR (S.Port) and D4RII (hub) receivers, and these sensor simulator libraries for S.Port and hub telemetry.
No real sensor test reports yet, but this is an improvement over existing code.",Merging as improvement on existing code.  And have more changes incoming :),True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,48,2016-10-14T04:13:16Z,2016-10-15T04:36:18Z,2016-10-15T04:36:18Z,MERGED,True,11,8,1,https://github.com/vladislavy,CYRF_FindBestChannels() improvement,1,[],https://github.com/DeviationTX/deviation/pull/48,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/48,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,49,2016-10-16T12:21:27Z,2016-10-24T20:54:30Z,2019-03-05T00:12:07Z,MERGED,True,46,11,1,https://github.com/goebish,Add JXD-506 format option to V202 protocol,2,[],https://github.com/DeviationTX/deviation/pull/49,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/49,"Add JXD-506 format option to V202 protocol
Channel mapping:
Same than standard V202 except for channels 10-12

Channel 10: start / stop engines
Channel 11: emergency stop
Channel 12: gimbal control

Throttle stick needs to be centered before the quad can be armed.
I also modified the documentation.
Compatibility tested with JXD-506, JJRC H28WH and Yizhan i8h
http://www.deviationtx.com/forum/protocol-development/6440-jxd-506-potentially-jjrc-h28wh","Add JXD-506 format option to V202 protocol
Channel mapping:
Same than standard V202 except for channels 10-12

Channel 10: start / stop engines
Channel 11: emergency stop
Channel 12: gimbal control

Throttle stick needs to be centered before the quad can be armed.
I also modified the documentation.
Compatibility tested with JXD-506, JJRC H28WH and Yizhan i8h
http://www.deviationtx.com/forum/protocol-development/6440-jxd-506-potentially-jjrc-h28wh",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,50,2016-10-16T13:50:08Z,2016-10-26T15:02:16Z,2019-03-05T00:12:06Z,MERGED,True,579,0,3,https://github.com/goebish,Add Protocol for Turnigy / Flysky AFHDS 2A receivers,20,[],https://github.com/DeviationTX/deviation/pull/50,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/50,"Add Protocol for Turnigy / Flysky AFHDS 2A receivers
Requires A7105 module
I consider this pull request as a draft because:

telemetry is not complete, only a couple of sensors are implemented (RX Volt, RSSI dB), I've to implement a new telemetry type as some sensors are not found in other telemetry types (RX error rate, noise, SNR ...)
RX ID is stored as protocol options though it shouldn't be altered by the user

So a bit of work is still required, but the protocol is fully functional already, it has been tested with pretty much every existing AFHDS 2A receivers: http://www.deviationtx.com/forum/protocol-development/5251-flysky-afhds-2a-protocol-as-used-i10-i6-it4

failsafe works
output types can be selected in protocol options, PWM / PPM / IBUS / SBUS
servo refresh rate can be set for PWM output","Add Protocol for Turnigy / Flysky AFHDS 2A receivers
Requires A7105 module
I consider this pull request as a draft because:

telemetry is not complete, only a couple of sensors are implemented (RX Volt, RSSI dB), I've to implement a new telemetry type as some sensors are not found in other telemetry types (RX error rate, noise, SNR ...)
RX ID is stored as protocol options though it shouldn't be altered by the user

So a bit of work is still required, but the protocol is fully functional already, it has been tested with pretty much every existing AFHDS 2A receivers: http://www.deviationtx.com/forum/protocol-development/5251-flysky-afhds-2a-protocol-as-used-i10-i6-it4

failsafe works
output types can be selected in protocol options, PWM / PPM / IBUS / SBUS
servo refresh rate can be set for PWM output",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,51,2016-10-17T01:56:40Z,2016-11-08T23:32:25Z,2016-12-06T02:15:53Z,MERGED,True,132,70,10,https://github.com/hexfet,Update FrskyX protocol to echo S.Port telemetry to trainer port,11,[],https://github.com/DeviationTX/deviation/pull/51,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/51,"Echoes each raw telemetry packet to trainer port.  If PPM In is being used the sending is disabled. The S.Port CRC is calculated and added as this value is not received over-the-air.
The bit rate is 57600 for compatibility with devices designed to read s.port telemetry directly.  The trainer port output would need to be inverted for input to those devices.
If PPM In is in use, then changed to None, the S.Port output will not start until the tx is power-cycled.","Echoes each raw telemetry packet to trainer port.  If PPM In is being used the sending is disabled. The S.Port CRC is calculated and added as this value is not received over-the-air.
The bit rate is 57600 for compatibility with devices designed to read s.port telemetry directly.  The trainer port output would need to be inverted for input to those devices.
If PPM In is in use, then changed to None, the S.Port output will not start until the tx is power-cycled.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,51,2016-10-17T01:56:40Z,2016-11-08T23:32:25Z,2016-12-06T02:15:53Z,MERGED,True,132,70,10,https://github.com/hexfet,Update FrskyX protocol to echo S.Port telemetry to trainer port,11,[],https://github.com/DeviationTX/deviation/pull/51,https://github.com/hexfet,2,https://github.com/DeviationTX/deviation/pull/51#issuecomment-258724221,"Echoes each raw telemetry packet to trainer port.  If PPM In is being used the sending is disabled. The S.Port CRC is calculated and added as this value is not received over-the-air.
The bit rate is 57600 for compatibility with devices designed to read s.port telemetry directly.  The trainer port output would need to be inverted for input to those devices.
If PPM In is in use, then changed to None, the S.Port output will not start until the tx is power-cycled.","To address victzh's comments the following changes are made:

Add defines to fully isolate UART_* functions from physical USART port
change at9 target to use  common/devo/uart.c
revert changes to universaltx and x9d files.  These are not part of standard build and not clear UART_* changes are applicable to these projects.

Also:

s.port data to trainer port data rate changed to 57,600bps
bug fix for swapped hour and minute values in GPS hub telemetry",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,52,2016-10-17T05:25:08Z,2016-10-25T21:25:31Z,2016-10-25T21:25:31Z,MERGED,True,178,116,1,https://github.com/vladislavy,Changes at DSM2/X protocol,2,[],https://github.com/DeviationTX/deviation/pull/52,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/52,"Changes at DSM2/X protocol:

Removed unnecessary CYRF programming.
Changed use of channels maps. Now protocol will use 3 channel maps only => up to 7 channels, 8 to 12 channels and channels map for ""High Speed"" 11ms mode.
Corrected error at PN codes table.
Added ""OrangeRX"" protocol option to fix error at PN codes table.
Added ""High Speed"" 11ms protocol option. It work for 8-10 channels modes only.
Added ""CYRF reset"" in case TX mode and RX mode freezed with telemetry enabled. It's very rare case, but really can happen.
Initial implementation for ""Flight Log"" filtering. It's remove ""Spektrum telemetry range warning"" garbage. It's do not fit to Devo7e and cut out from code for Devo7e.
Added negative GPS altitude (below sea level).

All changes tested and work fine.","Changes at DSM2/X protocol:

Removed unnecessary CYRF programming.
Changed use of channels maps. Now protocol will use 3 channel maps only => up to 7 channels, 8 to 12 channels and channels map for ""High Speed"" 11ms mode.
Corrected error at PN codes table.
Added ""OrangeRX"" protocol option to fix error at PN codes table.
Added ""High Speed"" 11ms protocol option. It work for 8-10 channels modes only.
Added ""CYRF reset"" in case TX mode and RX mode freezed with telemetry enabled. It's very rare case, but really can happen.
Initial implementation for ""Flight Log"" filtering. It's remove ""Spektrum telemetry range warning"" garbage. It's do not fit to Devo7e and cut out from code for Devo7e.
Added negative GPS altitude (below sea level).

All changes tested and work fine.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,53,2016-10-23T11:54:55Z,2016-10-26T14:51:42Z,2019-03-05T00:12:03Z,MERGED,True,94,49,1,https://github.com/goebish,Add protocol for JJRC H26WH,7,[],https://github.com/DeviationTX/deviation/pull/53,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/53,"Add JJRC H26WH format option to MJXq protocol.
Channel 5: Arm
As for the H26D, this sub-format has only one set of RF channels, interferences can will occur if multiple Deviated transmitters are using this sub format simultaneously.
This PR also replaces the semi arbitrary txid for E010 with a list (8) of IDs/RF channels captured from stock transmitters, this fixes this issue: goebish/nrf24_multipro#17
The MJXq protocol is a strange beast, looks like every sub-format is using a different TXID/RF channel relationship, they're not interchangeable.","Add JJRC H26WH format option to MJXq protocol.
Channel 5: Arm
As for the H26D, this sub-format has only one set of RF channels, interferences can will occur if multiple Deviated transmitters are using this sub format simultaneously.
This PR also replaces the semi arbitrary txid for E010 with a list (8) of IDs/RF channels captured from stock transmitters, this fixes this issue: goebish/nrf24_multipro#17
The MJXq protocol is a strange beast, looks like every sub-format is using a different TXID/RF channel relationship, they're not interchangeable.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,54,2016-10-26T06:13:15Z,2016-10-26T14:51:57Z,2016-10-26T14:51:57Z,MERGED,True,69,53,3,https://github.com/vladislavy,DSM2/X protocol updates,3,[],https://github.com/DeviationTX/deviation/pull/54,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/54,"Added ""F.Log filter"" protocol option. The ""Flight Log"" filtering can be problematic at range test mode.


""cyrf6936.c""  code clean up. Commented out debugging message. Also, we don't need enable IRQ bits, since RF chips don't use hardware IRQ.


Updated DSM.txt. Fixed error at PN codes table. Fixed typos.","Added ""F.Log filter"" protocol option. The ""Flight Log"" filtering can be problematic at range test mode.


""cyrf6936.c""  code clean up. Commented out debugging message. Also, we don't need enable IRQ bits, since RF chips don't use hardware IRQ.


Updated DSM.txt. Fixed error at PN codes table. Fixed typos.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,55,2016-10-27T08:22:05Z,2016-10-28T18:48:32Z,2016-10-28T18:48:32Z,MERGED,True,52,52,3,https://github.com/vladislavy,DSM telemetry update,3,[],https://github.com/DeviationTX/deviation/pull/55,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/55,Corrected name for ESC sensor.,Corrected name for ESC sensor.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,56,2016-10-29T09:54:38Z,2016-10-31T15:38:01Z,2016-10-31T15:38:01Z,MERGED,True,134,161,3,https://github.com/vladislavy, DSM telemetry update #2 ,5,[],https://github.com/DeviationTX/deviation/pull/56,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/56,"Fixed all errors that I can find. Changed the sensor names to be shorter (no more than 7 symbols) and more recognizable. Now ""Telemetry config"" page work fine for all telemetry sensors.","Fixed all errors that I can find. Changed the sensor names to be shorter (no more than 7 symbols) and more recognizable. Now ""Telemetry config"" page work fine for all telemetry sensors.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,56,2016-10-29T09:54:38Z,2016-10-31T15:38:01Z,2016-10-31T15:38:01Z,MERGED,True,134,161,3,https://github.com/vladislavy, DSM telemetry update #2 ,5,[],https://github.com/DeviationTX/deviation/pull/56,https://github.com/vladislavy,2,https://github.com/DeviationTX/deviation/pull/56#issuecomment-257136913,"Fixed all errors that I can find. Changed the sensor names to be shorter (no more than 7 symbols) and more recognizable. Now ""Telemetry config"" page work fine for all telemetry sensors.",Added some additional corrections. I think it's final version.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,56,2016-10-29T09:54:38Z,2016-10-31T15:38:01Z,2016-10-31T15:38:01Z,MERGED,True,134,161,3,https://github.com/vladislavy, DSM telemetry update #2 ,5,[],https://github.com/DeviationTX/deviation/pull/56,https://github.com/vladislavy,3,https://github.com/DeviationTX/deviation/pull/56#issuecomment-257137982,"Fixed all errors that I can find. Changed the sensor names to be shorter (no more than 7 symbols) and more recognizable. Now ""Telemetry config"" page work fine for all telemetry sensors.",Sorry. Forget to delete some comments.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,56,2016-10-29T09:54:38Z,2016-10-31T15:38:01Z,2016-10-31T15:38:01Z,MERGED,True,134,161,3,https://github.com/vladislavy, DSM telemetry update #2 ,5,[],https://github.com/DeviationTX/deviation/pull/56,https://github.com/vladislavy,4,https://github.com/DeviationTX/deviation/pull/56#issuecomment-257217684,"Fixed all errors that I can find. Changed the sensor names to be shorter (no more than 7 symbols) and more recognizable. Now ""Telemetry config"" page work fine for all telemetry sensors.","Upss, I did not know that it will be automatically merged with the previous pull request.
However, it is tested by Deviation Devo7e build with Nine Eagles YAK54 and all works fine.

Fixed wrong CYRF preamble (bytes order reversed) and code clean up.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,56,2016-10-29T09:54:38Z,2016-10-31T15:38:01Z,2016-10-31T15:38:01Z,MERGED,True,134,161,3,https://github.com/vladislavy, DSM telemetry update #2 ,5,[],https://github.com/DeviationTX/deviation/pull/56,https://github.com/goebish,5,https://github.com/DeviationTX/deviation/pull/56#issuecomment-257318935,"Fixed all errors that I can find. Changed the sensor names to be shorter (no more than 7 symbols) and more recognizable. Now ""Telemetry config"" page work fine for all telemetry sensors.",You should create new branches instead of committing to your master branch ;),True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,56,2016-10-29T09:54:38Z,2016-10-31T15:38:01Z,2016-10-31T15:38:01Z,MERGED,True,134,161,3,https://github.com/vladislavy, DSM telemetry update #2 ,5,[],https://github.com/DeviationTX/deviation/pull/56,https://github.com/vladislavy,6,https://github.com/DeviationTX/deviation/pull/56#issuecomment-257322917,"Fixed all errors that I can find. Changed the sensor names to be shorter (no more than 7 symbols) and more recognizable. Now ""Telemetry config"" page work fine for all telemetry sensors.","OK, I will try to create new branch next time.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,57,2016-11-02T14:31:58Z,2016-11-03T00:00:59Z,2016-11-03T00:00:59Z,MERGED,True,45,50,1,https://github.com/vladislavy,DEVO protocol update,1,[],https://github.com/DeviationTX/deviation/pull/57,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/57,"Nothing new, added comments for CYRF programming and code clean up.","Nothing new, added comments for CYRF programming and code clean up.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,58,2016-11-07T05:18:45Z,2016-11-08T23:48:16Z,2016-11-08T23:48:16Z,MERGED,True,60,86,2,https://github.com/vladislavy,DSM2/X protocol update,2,[],https://github.com/DeviationTX/deviation/pull/58,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/58,"All counter types and some data types changed to 32bits to shrink module binary. Enabled protocol options for Devo7e users. Now Devo7e users can use protocol options ""Telemetry"" Off/On and ""OrangeRx"" No/Yes.","All counter types and some data types changed to 32bits to shrink module binary. Enabled protocol options for Devo7e users. Now Devo7e users can use protocol options ""Telemetry"" Off/On and ""OrangeRx"" No/Yes.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,59,2016-11-09T05:28:51Z,2016-11-11T00:37:27Z,2016-12-01T15:12:07Z,MERGED,True,53,17,8,https://github.com/hexfet,Add LQI and LRSSI telemetry values to Frsky and FrskyX,5,[],https://github.com/DeviationTX/deviation/pull/59,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/59,"The LQI (Link Quality Indicator) and LRSSI (Local RSSI) indicate the quality and signal strength of the telemetry signal from the receiver.  The LQI can be used as a guide for adjusting the fine frequency protocol option.  Lower LQI is better and values under 50 are typical.  The LRSSI units is (approximately) dBm.
Above paragraph is from the manual entry (which I already updated thinking I'd added this to PR 51 - can revert if not accepted).","The LQI (Link Quality Indicator) and LRSSI (Local RSSI) indicate the quality and signal strength of the telemetry signal from the receiver.  The LQI can be used as a guide for adjusting the fine frequency protocol option.  Lower LQI is better and values under 50 are typical.  The LRSSI units is (approximately) dBm.
Above paragraph is from the manual entry (which I already updated thinking I'd added this to PR 51 - can revert if not accepted).",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,59,2016-11-09T05:28:51Z,2016-11-11T00:37:27Z,2016-12-01T15:12:07Z,MERGED,True,53,17,8,https://github.com/hexfet,Add LQI and LRSSI telemetry values to Frsky and FrskyX,5,[],https://github.com/DeviationTX/deviation/pull/59,https://github.com/vladislavy,2,https://github.com/DeviationTX/deviation/pull/59#issuecomment-259484747,"The LQI (Link Quality Indicator) and LRSSI (Local RSSI) indicate the quality and signal strength of the telemetry signal from the receiver.  The LQI can be used as a guide for adjusting the fine frequency protocol option.  Lower LQI is better and values under 50 are typical.  The LRSSI units is (approximately) dBm.
Above paragraph is from the manual entry (which I already updated thinking I'd added this to PR 51 - can revert if not accepted).","I think ""break"" after ""return"" will never be used:
case TELEM_FRSKY_LRSSI:     return 255; break;",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,59,2016-11-09T05:28:51Z,2016-11-11T00:37:27Z,2016-12-01T15:12:07Z,MERGED,True,53,17,8,https://github.com/hexfet,Add LQI and LRSSI telemetry values to Frsky and FrskyX,5,[],https://github.com/DeviationTX/deviation/pull/59,https://github.com/hexfet,3,https://github.com/DeviationTX/deviation/pull/59#issuecomment-259510567,"The LQI (Link Quality Indicator) and LRSSI (Local RSSI) indicate the quality and signal strength of the telemetry signal from the receiver.  The LQI can be used as a guide for adjusting the fine frequency protocol option.  Lower LQI is better and values under 50 are typical.  The LRSSI units is (approximately) dBm.
Above paragraph is from the manual entry (which I already updated thinking I'd added this to PR 51 - can revert if not accepted).",Thanks!  Code is updated.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,60,2016-11-27T22:17:43Z,2016-12-01T00:37:47Z,2016-12-01T03:09:31Z,MERGED,True,255,88,2,https://github.com/silver13,Bayang telemetry for h8 opensource firmware,12,[],https://github.com/DeviationTX/deviation/pull/60,https://github.com/silver13,1,https://github.com/DeviationTX/deviation/pull/60,"This adds telemetry for the bayang protocol , which works with the opensource firmware at https://github.com/silver13/h8mini-testing
The protocol works the normal , original way when telemetry is not enabled.
When telemetry is enabled, the protocol switches to rx and waits for telemetry after the packet is sent.
The code polls at 1000 but sends every second call when telemetry is off, to maintain original timing with telemetry off.. With telemetry on it sends with a 5000 period to allow for reception time. Due to this timing differences, a different bind frame is sent when telemetry is enabled, to prevent the tx from binding to a quad without telemetry, and work at possibly degraded performance.
Telemetry values:
I used the DSM type, currently 2 voltages and quad reception rate / tx telemetry rate are implemented.
Some guys in the H8 thread have already tried this code on devo 7e and devo10, and they had positive feedback. The code size difference is approx +800 bytes
Original post where I tried the protocol - might have additional info
https://www.rcgroups.com/forums/showpost.php?p=36279599&postcount=6575","This adds telemetry for the bayang protocol , which works with the opensource firmware at https://github.com/silver13/h8mini-testing
The protocol works the normal , original way when telemetry is not enabled.
When telemetry is enabled, the protocol switches to rx and waits for telemetry after the packet is sent.
The code polls at 1000 but sends every second call when telemetry is off, to maintain original timing with telemetry off.. With telemetry on it sends with a 5000 period to allow for reception time. Due to this timing differences, a different bind frame is sent when telemetry is enabled, to prevent the tx from binding to a quad without telemetry, and work at possibly degraded performance.
Telemetry values:
I used the DSM type, currently 2 voltages and quad reception rate / tx telemetry rate are implemented.
Some guys in the H8 thread have already tried this code on devo 7e and devo10, and they had positive feedback. The code size difference is approx +800 bytes
Original post where I tried the protocol - might have additional info
https://www.rcgroups.com/forums/showpost.php?p=36279599&postcount=6575",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,60,2016-11-27T22:17:43Z,2016-12-01T00:37:47Z,2016-12-01T03:09:31Z,MERGED,True,255,88,2,https://github.com/silver13,Bayang telemetry for h8 opensource firmware,12,[],https://github.com/DeviationTX/deviation/pull/60,https://github.com/silver13,2,https://github.com/DeviationTX/deviation/pull/60#issuecomment-263152015,"This adds telemetry for the bayang protocol , which works with the opensource firmware at https://github.com/silver13/h8mini-testing
The protocol works the normal , original way when telemetry is not enabled.
When telemetry is enabled, the protocol switches to rx and waits for telemetry after the packet is sent.
The code polls at 1000 but sends every second call when telemetry is off, to maintain original timing with telemetry off.. With telemetry on it sends with a 5000 period to allow for reception time. Due to this timing differences, a different bind frame is sent when telemetry is enabled, to prevent the tx from binding to a quad without telemetry, and work at possibly degraded performance.
Telemetry values:
I used the DSM type, currently 2 voltages and quad reception rate / tx telemetry rate are implemented.
Some guys in the H8 thread have already tried this code on devo 7e and devo10, and they had positive feedback. The code size difference is approx +800 bytes
Original post where I tried the protocol - might have additional info
https://www.rcgroups.com/forums/showpost.php?p=36279599&postcount=6575","without modifying it , the changes are not saved correctly when main page items are changed to display telemetry. More precisely, they are not loaded after a power down.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,60,2016-11-27T22:17:43Z,2016-12-01T00:37:47Z,2016-12-01T03:09:31Z,MERGED,True,255,88,2,https://github.com/silver13,Bayang telemetry for h8 opensource firmware,12,[],https://github.com/DeviationTX/deviation/pull/60,https://github.com/goebish,3,https://github.com/DeviationTX/deviation/pull/60#issuecomment-263152099,"This adds telemetry for the bayang protocol , which works with the opensource firmware at https://github.com/silver13/h8mini-testing
The protocol works the normal , original way when telemetry is not enabled.
When telemetry is enabled, the protocol switches to rx and waits for telemetry after the packet is sent.
The code polls at 1000 but sends every second call when telemetry is off, to maintain original timing with telemetry off.. With telemetry on it sends with a 5000 period to allow for reception time. Due to this timing differences, a different bind frame is sent when telemetry is enabled, to prevent the tx from binding to a quad without telemetry, and work at possibly degraded performance.
Telemetry values:
I used the DSM type, currently 2 voltages and quad reception rate / tx telemetry rate are implemented.
Some guys in the H8 thread have already tried this code on devo 7e and devo10, and they had positive feedback. The code size difference is approx +800 bytes
Original post where I tried the protocol - might have additional info
https://www.rcgroups.com/forums/showpost.php?p=36279599&postcount=6575","Ah ok I thought it was not necessary, I've to check other protocols then ...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,60,2016-11-27T22:17:43Z,2016-12-01T00:37:47Z,2016-12-01T03:09:31Z,MERGED,True,255,88,2,https://github.com/silver13,Bayang telemetry for h8 opensource firmware,12,[],https://github.com/DeviationTX/deviation/pull/60,https://github.com/silver13,4,https://github.com/DeviationTX/deviation/pull/60#issuecomment-263152134,"This adds telemetry for the bayang protocol , which works with the opensource firmware at https://github.com/silver13/h8mini-testing
The protocol works the normal , original way when telemetry is not enabled.
When telemetry is enabled, the protocol switches to rx and waits for telemetry after the packet is sent.
The code polls at 1000 but sends every second call when telemetry is off, to maintain original timing with telemetry off.. With telemetry on it sends with a 5000 period to allow for reception time. Due to this timing differences, a different bind frame is sent when telemetry is enabled, to prevent the tx from binding to a quad without telemetry, and work at possibly degraded performance.
Telemetry values:
I used the DSM type, currently 2 voltages and quad reception rate / tx telemetry rate are implemented.
Some guys in the H8 thread have already tried this code on devo 7e and devo10, and they had positive feedback. The code size difference is approx +800 bytes
Original post where I tried the protocol - might have additional info
https://www.rcgroups.com/forums/showpost.php?p=36279599&postcount=6575","yes, at least one ( clie flier) also does not save",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,60,2016-11-27T22:17:43Z,2016-12-01T00:37:47Z,2016-12-01T03:09:31Z,MERGED,True,255,88,2,https://github.com/silver13,Bayang telemetry for h8 opensource firmware,12,[],https://github.com/DeviationTX/deviation/pull/60,https://github.com/goebish,5,https://github.com/DeviationTX/deviation/pull/60#issuecomment-263152228,"This adds telemetry for the bayang protocol , which works with the opensource firmware at https://github.com/silver13/h8mini-testing
The protocol works the normal , original way when telemetry is not enabled.
When telemetry is enabled, the protocol switches to rx and waits for telemetry after the packet is sent.
The code polls at 1000 but sends every second call when telemetry is off, to maintain original timing with telemetry off.. With telemetry on it sends with a 5000 period to allow for reception time. Due to this timing differences, a different bind frame is sent when telemetry is enabled, to prevent the tx from binding to a quad without telemetry, and work at possibly degraded performance.
Telemetry values:
I used the DSM type, currently 2 voltages and quad reception rate / tx telemetry rate are implemented.
Some guys in the H8 thread have already tried this code on devo 7e and devo10, and they had positive feedback. The code size difference is approx +800 bytes
Original post where I tried the protocol - might have additional info
https://www.rcgroups.com/forums/showpost.php?p=36279599&postcount=6575","Ok, and that's my fault because I told the author it was not necessary ...
I'll handle that.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,60,2016-11-27T22:17:43Z,2016-12-01T00:37:47Z,2016-12-01T03:09:31Z,MERGED,True,255,88,2,https://github.com/silver13,Bayang telemetry for h8 opensource firmware,12,[],https://github.com/DeviationTX/deviation/pull/60,https://github.com/silver13,6,https://github.com/DeviationTX/deviation/pull/60#issuecomment-264030305,"This adds telemetry for the bayang protocol , which works with the opensource firmware at https://github.com/silver13/h8mini-testing
The protocol works the normal , original way when telemetry is not enabled.
When telemetry is enabled, the protocol switches to rx and waits for telemetry after the packet is sent.
The code polls at 1000 but sends every second call when telemetry is off, to maintain original timing with telemetry off.. With telemetry on it sends with a 5000 period to allow for reception time. Due to this timing differences, a different bind frame is sent when telemetry is enabled, to prevent the tx from binding to a quad without telemetry, and work at possibly degraded performance.
Telemetry values:
I used the DSM type, currently 2 voltages and quad reception rate / tx telemetry rate are implemented.
Some guys in the H8 thread have already tried this code on devo 7e and devo10, and they had positive feedback. The code size difference is approx +800 bytes
Original post where I tried the protocol - might have additional info
https://www.rcgroups.com/forums/showpost.php?p=36279599&postcount=6575","I updated the code after running indent
no actual code changes were made",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,60,2016-11-27T22:17:43Z,2016-12-01T00:37:47Z,2016-12-01T03:09:31Z,MERGED,True,255,88,2,https://github.com/silver13,Bayang telemetry for h8 opensource firmware,12,[],https://github.com/DeviationTX/deviation/pull/60,https://github.com/silver13,7,https://github.com/DeviationTX/deviation/pull/60#issuecomment-264067044,"This adds telemetry for the bayang protocol , which works with the opensource firmware at https://github.com/silver13/h8mini-testing
The protocol works the normal , original way when telemetry is not enabled.
When telemetry is enabled, the protocol switches to rx and waits for telemetry after the packet is sent.
The code polls at 1000 but sends every second call when telemetry is off, to maintain original timing with telemetry off.. With telemetry on it sends with a 5000 period to allow for reception time. Due to this timing differences, a different bind frame is sent when telemetry is enabled, to prevent the tx from binding to a quad without telemetry, and work at possibly degraded performance.
Telemetry values:
I used the DSM type, currently 2 voltages and quad reception rate / tx telemetry rate are implemented.
Some guys in the H8 thread have already tried this code on devo 7e and devo10, and they had positive feedback. The code size difference is approx +800 bytes
Original post where I tried the protocol - might have additional info
https://www.rcgroups.com/forums/showpost.php?p=36279599&postcount=6575",Excellent,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,61,2016-12-02T02:09:24Z,2016-12-02T06:18:11Z,2016-12-06T02:16:43Z,MERGED,True,12,5,2,https://github.com/hexfet,Update Frsky to fix hub telemetry,3,[],https://github.com/DeviationTX/deviation/pull/61,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/61,"When receiving hub telemetry the receiver expects the sequence number in the telemetry packet to be echoed back in packet[4] of transmitted packets.  Without this acknowledgement the D4R-II receiver only cycles through 0-7 sequence numbers and repeats unacknowledged data.  When the proper response is sent the D4R-II cycles the sequence number 0-31 without repeating data.
The change to CC2500_SetTxRxMode() turns off the LNA before enabling the PA when entering transmit mode.  Wasn't causing a problem; just good practice.","When receiving hub telemetry the receiver expects the sequence number in the telemetry packet to be echoed back in packet[4] of transmitted packets.  Without this acknowledgement the D4R-II receiver only cycles through 0-7 sequence numbers and repeats unacknowledged data.  When the proper response is sent the D4R-II cycles the sequence number 0-31 without repeating data.
The change to CC2500_SetTxRxMode() turns off the LNA before enabling the PA when entering transmit mode.  Wasn't causing a problem; just good practice.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,62,2016-12-03T10:42:59Z,2016-12-03T10:45:47Z,2016-12-03T10:45:47Z,MERGED,True,1,1,1,https://github.com/vladislavy,Fix touch on XY graphs,1,[],https://github.com/DeviationTX/deviation/pull/62,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/62,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,63,2016-12-03T11:18:21Z,2016-12-03T11:19:05Z,2016-12-03T11:19:05Z,MERGED,True,56,28,4,https://github.com/vladislavy,"Revert ""Prevent flashing during main-screen update""",4,[],https://github.com/DeviationTX/deviation/pull/63,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/63,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,64,2016-12-03T11:33:26Z,2016-12-03T11:33:36Z,2016-12-03T11:33:36Z,MERGED,True,9,53,2,https://github.com/vladislavy,Unlink B/W label code from color label code. Prevent flashing during main-screen update.,2,[],https://github.com/DeviationTX/deviation/pull/64,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/64,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,65,2016-12-03T14:25:28Z,2016-12-03T14:34:48Z,2016-12-03T14:34:48Z,MERGED,True,6137,1218,54,https://github.com/vladislavy,Protocols integration,27,[],https://github.com/DeviationTX/deviation/pull/65,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/65,"Bunch of changes: renew protocols, add new protocols, changes for renewed protocols integration.","Bunch of changes: renew protocols, add new protocols, changes for renewed protocols integration.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,66,2016-12-03T14:40:43Z,2016-12-03T14:43:20Z,2016-12-03T14:43:20Z,MERGED,True,43,13,3,https://github.com/vladislavy,RF Scanner update,3,[],https://github.com/DeviationTX/deviation/pull/66,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/66,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,67,2016-12-06T05:35:59Z,2016-12-06T20:40:26Z,2016-12-06T20:40:27Z,MERGED,True,3,3,3,https://github.com/vladislavy,Add newline at end of file,3,[],https://github.com/DeviationTX/deviation/pull/67,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/67,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,68,2016-12-06T11:42:01Z,2016-12-06T11:58:52Z,2016-12-06T11:58:52Z,CLOSED,False,1,7,2,https://github.com/vladislavy,Fix warning: comparison between signed and unsigned,4,[],https://github.com/DeviationTX/deviation/pull/68,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/68,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,68,2016-12-06T11:42:01Z,2016-12-06T11:58:52Z,2016-12-06T11:58:52Z,CLOSED,False,1,7,2,https://github.com/vladislavy,Fix warning: comparison between signed and unsigned,4,[],https://github.com/DeviationTX/deviation/pull/68,https://github.com/vladislavy,2,https://github.com/DeviationTX/deviation/pull/68#issuecomment-265131933,,"Ooops, I use temp branches for different fixes, but anyway they automatically merged.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,69,2016-12-07T04:15:26Z,2016-12-07T04:45:26Z,2016-12-07T04:45:26Z,MERGED,True,1,1,1,https://github.com/vladislavy,Fix warning: comparison between signed and unsigned,1,[],https://github.com/DeviationTX/deviation/pull/69,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/69,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,70,2016-12-07T04:49:55Z,2016-12-07T15:34:36Z,2016-12-07T15:34:36Z,MERGED,True,344,0,14,https://github.com/victzh,Devo12e,6,[],https://github.com/DeviationTX/deviation/pull/70,https://github.com/victzh,1,https://github.com/DeviationTX/deviation/pull/70,Add support for Devo 12E. PhracturedBlue's initial version with couple of my bug fixes.,Add support for Devo 12E. PhracturedBlue's initial version with couple of my bug fixes.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,71,2016-12-07T05:35:43Z,2016-12-07T07:05:13Z,2016-12-07T07:05:13Z,MERGED,True,0,14,1,https://github.com/vladislavy,Fix warning. Deleted unused functions.,1,[],https://github.com/DeviationTX/deviation/pull/71,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/71,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,72,2016-12-07T09:55:27Z,2016-12-07T21:13:47Z,2016-12-07T21:13:47Z,MERGED,True,4,0,3,https://github.com/vladislavy,Fix warnings: unused parameter,3,[],https://github.com/DeviationTX/deviation/pull/72,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/72,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,73,2016-12-07T13:14:28Z,2016-12-07T21:13:29Z,2016-12-13T11:28:27Z,MERGED,True,1,2,1,https://github.com/vladislavy,Fix warnings for DevoF4,1,[],https://github.com/DeviationTX/deviation/pull/73,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/73,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,74,2016-12-09T14:35:26Z,2016-12-13T23:58:21Z,2019-03-05T00:12:02Z,MERGED,True,2,2,1,https://github.com/goebish,Fix telemetry items loading for CFlie and AFHDS 2A protocols,1,[],https://github.com/DeviationTX/deviation/pull/74,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/74,Fix telemetry items loading for CFlie and AFHDS 2A protocols,Fix telemetry items loading for CFlie and AFHDS 2A protocols,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,75,2016-12-15T12:14:31Z,2016-12-16T08:06:49Z,2019-03-05T00:12:01Z,MERGED,True,79,29,1,https://github.com/goebish,Add CX20 format option to Flysky protocol,5,[],https://github.com/DeviationTX/deviation/pull/75,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/75,"Add CX20 format option to Flysky protocol + bring protocol optimizations from multi-module to deviation.
CX20 protocol tested on the forums, I checked by myself that the Flysky (AFHDS) protocol is still working.","Add CX20 format option to Flysky protocol + bring protocol optimizations from multi-module to deviation.
CX20 protocol tested on the forums, I checked by myself that the Flysky (AFHDS) protocol is still working.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,76,2016-12-16T08:59:54Z,2016-12-17T23:48:27Z,2016-12-17T23:48:27Z,MERGED,True,28,29,6,https://github.com/vladislavy,Fix telemetry items loading for CFlie and AFHDS 2A protocols,2,[],https://github.com/DeviationTX/deviation/pull/76,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/76,"Changed counters type to u32 or s32 for compacting binary (""config"" folder only).
After that I can fit ""Fix telemetry items loading for CFlie and AFHDS 2A protocols"" to Devo7e.","Changed counters type to u32 or s32 for compacting binary (""config"" folder only).
After that I can fit ""Fix telemetry items loading for CFlie and AFHDS 2A protocols"" to Devo7e.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,77,2016-12-16T18:22:18Z,2016-12-17T23:46:35Z,2016-12-17T23:46:35Z,MERGED,True,7,0,2,https://github.com/vladislavy,Fix initialize telemetry and set telemetry type for Frsky,1,[],https://github.com/DeviationTX/deviation/pull/77,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/77,"Properly initialize telemetry and set telemetry type by protocol, not by modelXX.ini file","Properly initialize telemetry and set telemetry type by protocol, not by modelXX.ini file",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,78,2016-12-17T10:26:31Z,2016-12-17T23:44:24Z,2019-03-05T00:12:00Z,MERGED,True,346,0,3,https://github.com/goebish,Add Q303 protocol,8,[],https://github.com/DeviationTX/deviation/pull/78,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/78,"Add WLToys Q303 protocol.
Channel 5: altitude hold
Channel 6: flip
Channel 7: snapshot
Channel 8: video
Channel 9: headless
Channel 10: RTH
Channel 11: camera gimbal (3 positions)","Add WLToys Q303 protocol.
Channel 5: altitude hold
Channel 6: flip
Channel 7: snapshot
Channel 8: video
Channel 9: headless
Channel 10: RTH
Channel 11: camera gimbal (3 positions)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,79,2016-12-18T07:18:22Z,2016-12-18T17:12:06Z,2016-12-19T14:55:44Z,MERGED,True,631,272,27,https://github.com/victzh,Add support for 4-in-1 SPI switch.,13,[],https://github.com/DeviationTX/deviation/pull/79,https://github.com/victzh,1,https://github.com/DeviationTX/deviation/pull/79,"This is support for 4-in-1 flash SPI switch module. The module is Banggood's 4-in-1 RF bare module http://www.banggood.com/DIY-2_4G-CC2500-NRF24L01-A7105-CYRF6936-Multi-RF-4-IN-1-Wireless-Module-p-1046308.html and add on ""motherboard"" which is plug compatible with Devo 10 connector. The module has an additional SPI flash to provide Devo F-series and Radiolink AT9 with normal FAT filesystem.","This is support for 4-in-1 flash SPI switch module. The module is Banggood's 4-in-1 RF bare module http://www.banggood.com/DIY-2_4G-CC2500-NRF24L01-A7105-CYRF6936-Multi-RF-4-IN-1-Wireless-Module-p-1046308.html and add on ""motherboard"" which is plug compatible with Devo 10 connector. The module has an additional SPI flash to provide Devo F-series and Radiolink AT9 with normal FAT filesystem.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,79,2016-12-18T07:18:22Z,2016-12-18T17:12:06Z,2016-12-19T14:55:44Z,MERGED,True,631,272,27,https://github.com/victzh,Add support for 4-in-1 SPI switch.,13,[],https://github.com/DeviationTX/deviation/pull/79,https://github.com/goebish,2,https://github.com/DeviationTX/deviation/pull/79#issuecomment-267966594,"This is support for 4-in-1 flash SPI switch module. The module is Banggood's 4-in-1 RF bare module http://www.banggood.com/DIY-2_4G-CC2500-NRF24L01-A7105-CYRF6936-Multi-RF-4-IN-1-Wireless-Module-p-1046308.html and add on ""motherboard"" which is plug compatible with Devo 10 connector. The module has an additional SPI flash to provide Devo F-series and Radiolink AT9 with normal FAT filesystem.","oops, looks like the linker is not happy with that for the AT9 build.
https://travis-ci.org/DeviationTX/deviation/builds/185102080",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,79,2016-12-18T07:18:22Z,2016-12-18T17:12:06Z,2016-12-19T14:55:44Z,MERGED,True,631,272,27,https://github.com/victzh,Add support for 4-in-1 SPI switch.,13,[],https://github.com/DeviationTX/deviation/pull/79,https://github.com/victzh,3,https://github.com/DeviationTX/deviation/pull/79#issuecomment-267983701,"This is support for 4-in-1 flash SPI switch module. The module is Banggood's 4-in-1 RF bare module http://www.banggood.com/DIY-2_4G-CC2500-NRF24L01-A7105-CYRF6936-Multi-RF-4-IN-1-Wireless-Module-p-1046308.html and add on ""motherboard"" which is plug compatible with Devo 10 connector. The module has an additional SPI flash to provide Devo F-series and Radiolink AT9 with normal FAT filesystem.","Yes, it's not in check in builds, so pull request is OK, but nightly build is not. I will fix it today.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,80,2016-12-19T18:46:37Z,2016-12-20T03:33:42Z,2016-12-20T03:33:42Z,MERGED,True,1,1,1,https://github.com/vladislavy,Fix modular protocols memory limit for DevoF7,1,[],https://github.com/DeviationTX/deviation/pull/80,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/80,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,81,2016-12-20T03:26:44Z,2016-12-20T03:34:41Z,2016-12-20T03:34:41Z,MERGED,True,29,14,8,https://github.com/victzh,Fix  nightly build.,3,[],https://github.com/DeviationTX/deviation/pull/81,https://github.com/victzh,1,https://github.com/DeviationTX/deviation/pull/81,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,82,2016-12-20T06:05:52Z,2016-12-20T20:01:04Z,2016-12-20T20:01:04Z,MERGED,True,0,24,1,https://github.com/vladislavy,"Delete ""protocol.ld"" for DevoF12E",1,[],https://github.com/DeviationTX/deviation/pull/82,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/82,Useless for non-modular protocols,Useless for non-modular protocols,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,83,2016-12-21T06:43:29Z,2016-12-21T16:47:58Z,2016-12-21T16:47:58Z,MERGED,True,39,55,17,https://github.com/vladislavy,Get rid of TELEMETRY_SetTypeByProtocol(),7,[],https://github.com/DeviationTX/deviation/pull/83,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/83,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,84,2016-12-21T18:13:32Z,2016-12-21T18:16:11Z,2016-12-21T18:16:11Z,MERGED,True,3,7,2,https://github.com/vladislavy,Change counters type to u32 or s32 for compacting binary,2,[],https://github.com/DeviationTX/deviation/pull/84,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/84,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,85,2016-12-21T18:31:58Z,2016-12-21T18:34:20Z,2016-12-21T18:34:20Z,MERGED,True,38,54,17,https://github.com/vladislavy,Get rid of TELEMETRY_SetTypeByProtocol(),6,[],https://github.com/DeviationTX/deviation/pull/85,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/85,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,86,2016-12-23T09:14:04Z,2016-12-23T09:20:19Z,2016-12-23T09:20:19Z,MERGED,True,35,37,18,https://github.com/vladislavy,Change counters type to u32 or s32 for compacting binary (pages/common only),3,[],https://github.com/DeviationTX/deviation/pull/86,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/86,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,87,2016-12-23T09:53:18Z,2016-12-23T09:56:24Z,2016-12-23T09:56:24Z,MERGED,True,346,0,3,https://github.com/vladislavy,Add Q303 protocol from goebish,1,[],https://github.com/DeviationTX/deviation/pull/87,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/87,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,88,2016-12-27T11:18:18Z,2017-01-04T20:33:26Z,2017-01-04T20:33:26Z,MERGED,True,435,256,1,https://github.com/TheRealMoeder,Rewrite of ESky150 protocol to include binding.,18,[],https://github.com/DeviationTX/deviation/pull/88,https://github.com/TheRealMoeder,1,https://github.com/DeviationTX/deviation/pull/88,http://www.deviationtx.com/forum/6-general-discussions/6446-esky-150x-which-protocol,http://www.deviationtx.com/forum/6-general-discussions/6446-esky-150x-which-protocol,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,89,2016-12-28T06:27:08Z,2017-01-04T23:57:39Z,2017-01-04T23:57:39Z,MERGED,True,70,32,3,https://github.com/vladislavy,"""protocol"" folder synchronization",3,[],https://github.com/DeviationTX/deviation/pull/89,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/89,"Since HAS_4IN1_FLASH is not defined it doesn't hurt to anything, but will simplify synchronization of protocols with ""master"" branch.","Since HAS_4IN1_FLASH is not defined it doesn't hurt to anything, but will simplify synchronization of protocols with ""master"" branch.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,90,2017-01-03T15:47:18Z,2017-01-04T20:35:38Z,2017-01-04T20:35:38Z,MERGED,True,232,42,5,https://github.com/goebish,Add Cheerson CX35 format to Q303 protocol,10,[],https://github.com/DeviationTX/deviation/pull/90,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/90,"Add Cheerson CX35 format to Q303 protocol
Channel 5: take off / descend
Channel 6: increment vTX channel (Devo beeps to indicate current channel)
Channel 7: snapshot
Channel 8: video
Channel 10: RTH
Channel 11: camera gimbal (full channel range)
Forums thread: https://www.deviationtx.com/forum/protocol-development/6503-cheerson-cx35","Add Cheerson CX35 format to Q303 protocol
Channel 5: take off / descend
Channel 6: increment vTX channel (Devo beeps to indicate current channel)
Channel 7: snapshot
Channel 8: video
Channel 10: RTH
Channel 11: camera gimbal (full channel range)
Forums thread: https://www.deviationtx.com/forum/protocol-development/6503-cheerson-cx35",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,91,2017-01-05T07:24:18Z,2017-01-05T07:26:41Z,2017-01-05T07:26:41Z,MERGED,True,435,256,1,https://github.com/vladislavy,"Rewrite of ESky150 protocol to include binding, from TheRealMoeder",1,[],https://github.com/DeviationTX/deviation/pull/91,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/91,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,92,2017-01-05T07:35:11Z,2017-01-05T07:37:27Z,2017-01-05T07:37:27Z,MERGED,True,195,40,1,https://github.com/vladislavy,"Add Cheerson CX35 format to Q303 protocol, from goebish",1,[],https://github.com/DeviationTX/deviation/pull/92,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/92,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,93,2017-01-06T18:02:12Z,2017-01-10T17:23:54Z,2017-01-10T17:23:54Z,MERGED,True,6,7,2,https://github.com/vladislavy,"Fix ""music"" pause (""xx=pause in ms"")",2,[],https://github.com/DeviationTX/deviation/pull/93,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/93,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,94,2017-01-07T07:12:14Z,2017-01-07T07:19:37Z,2017-01-07T07:19:37Z,MERGED,True,4,0,1,https://github.com/vladislavy," Fix ""music"" pause (""xx=pause in ms"")",1,[],https://github.com/DeviationTX/deviation/pull/94,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/94,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,95,2017-01-08T02:01:35Z,2017-01-10T17:28:34Z,2017-01-14T13:24:31Z,MERGED,True,17,3,3,https://github.com/xuyuan,Devo F7 input,3,[],https://github.com/DeviationTX/deviation/pull/95,https://github.com/xuyuan,1,https://github.com/DeviationTX/deviation/pull/95,"support HOLD/TRN and AUX2, tested with my devo F7","support HOLD/TRN and AUX2, tested with my devo F7",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,95,2017-01-08T02:01:35Z,2017-01-10T17:28:34Z,2017-01-14T13:24:31Z,MERGED,True,17,3,3,https://github.com/xuyuan,Devo F7 input,3,[],https://github.com/DeviationTX/deviation/pull/95,https://github.com/goebish,2,https://github.com/DeviationTX/deviation/pull/95#issuecomment-272622692,"support HOLD/TRN and AUX2, tested with my devo F7","Seems this has broken the f4 build as they share a common channels.c:
https://travis-ci.org/DeviationTX/deviation/builds/191880461",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,95,2017-01-08T02:01:35Z,2017-01-10T17:28:34Z,2017-01-14T13:24:31Z,MERGED,True,17,3,3,https://github.com/xuyuan,Devo F7 input,3,[],https://github.com/DeviationTX/deviation/pull/95,https://github.com/goebish,3,https://github.com/DeviationTX/deviation/pull/95#issuecomment-272623971,"support HOLD/TRN and AUX2, tested with my devo F7","Proposed a fix:
#100",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,96,2017-01-08T11:30:21Z,2017-01-10T17:28:19Z,2019-03-05T00:11:59Z,MERGED,True,6,3,1,https://github.com/goebish,Fix ASSAN transmitter ID,2,[],https://github.com/DeviationTX/deviation/pull/96,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/96,"Fix ASSAN transmitter ID
Fix bind with some ASSAN receivers:
https://www.deviationtx.com/forum/protocol-development/2038-what-about-assan?start=80#57674
After this patch, ASSAN receivers will need to rebind, sorry for that ...","Fix ASSAN transmitter ID
Fix bind with some ASSAN receivers:
https://www.deviationtx.com/forum/protocol-development/2038-what-about-assan?start=80#57674
After this patch, ASSAN receivers will need to rebind, sorry for that ...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,97,2017-01-10T17:59:19Z,2017-01-10T18:03:47Z,2017-01-10T18:03:47Z,MERGED,True,6,3,1,https://github.com/vladislavy,"Fix ASSAN transmitter ID, from goebish",1,[],https://github.com/DeviationTX/deviation/pull/97,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/97,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,98,2017-01-12T23:34:30Z,2017-01-15T18:31:37Z,2017-01-15T18:31:37Z,MERGED,True,16,1,1,https://github.com/silver13,faster byte reverse for xn297 routines,7,[],https://github.com/DeviationTX/deviation/pull/98,https://github.com/silver13,1,https://github.com/DeviationTX/deviation/pull/98,"This is a faster bit_reverse(x) routine using the ""rev"" asm instruction.
The rev instruction is available on cortex m3, and some other , but not on m0 for example.
I used a define to exclude it in the emulator build, the targets I have tried all build ( 7e , 8 , 12 , 12e and at7 ) and if this instruction is not available the compiler will throw an error so it's pretty easy to fix.
I have tested this with bayang protocol in the 7e version","This is a faster bit_reverse(x) routine using the ""rev"" asm instruction.
The rev instruction is available on cortex m3, and some other , but not on m0 for example.
I used a define to exclude it in the emulator build, the targets I have tried all build ( 7e , 8 , 12 , 12e and at7 ) and if this instruction is not available the compiler will throw an error so it's pretty easy to fix.
I have tested this with bayang protocol in the 7e version",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,98,2017-01-12T23:34:30Z,2017-01-15T18:31:37Z,2017-01-15T18:31:37Z,MERGED,True,16,1,1,https://github.com/silver13,faster byte reverse for xn297 routines,7,[],https://github.com/DeviationTX/deviation/pull/98,https://github.com/silver13,2,https://github.com/DeviationTX/deviation/pull/98#issuecomment-272663730,"This is a faster bit_reverse(x) routine using the ""rev"" asm instruction.
The rev instruction is available on cortex m3, and some other , but not on m0 for example.
I used a define to exclude it in the emulator build, the targets I have tried all build ( 7e , 8 , 12 , 12e and at7 ) and if this instruction is not available the compiler will throw an error so it's pretty easy to fix.
I have tested this with bayang protocol in the 7e version","I guess using #if ( __ARM_ARCH_ISA_THUMB==2) would detect cortex m3 and higher
I found this site which lists predefined macros for cortex:
http://micro-os-plus.sourceforge.net/wiki/Predefined_macros#ARM_Cortex-M4
I'll update the code later to use it, it does seem to work in a quick check",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,98,2017-01-12T23:34:30Z,2017-01-15T18:31:37Z,2017-01-15T18:31:37Z,MERGED,True,16,1,1,https://github.com/silver13,faster byte reverse for xn297 routines,7,[],https://github.com/DeviationTX/deviation/pull/98,https://github.com/silver13,3,https://github.com/DeviationTX/deviation/pull/98#issuecomment-272681025,"This is a faster bit_reverse(x) routine using the ""rev"" asm instruction.
The rev instruction is available on cortex m3, and some other , but not on m0 for example.
I used a define to exclude it in the emulator build, the targets I have tried all build ( 7e , 8 , 12 , 12e and at7 ) and if this instruction is not available the compiler will throw an error so it's pretty easy to fix.
I have tested this with bayang protocol in the 7e version","Should be included only on arm m3 or higher now , and gcc compiler , I have no way to rest on anything else apart from ARM however",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,99,2017-01-13T04:50:33Z,2017-01-13T04:52:54Z,2017-01-13T04:52:54Z,MERGED,True,2,2,1,https://github.com/vladislavy,"Improve interpretation of RSSI/RxBattery telemetry, from hexfet",1,[],https://github.com/DeviationTX/deviation/pull/99,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/99,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,100,2017-01-14T13:24:16Z,2017-01-14T15:52:01Z,2019-03-05T00:11:58Z,MERGED,True,133,1,2,https://github.com/goebish,Use separate channels.c for Devo F4 & F7,1,[],https://github.com/DeviationTX/deviation/pull/100,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/100,"Use separate channels.c for Devo F4 & F7, fix broken nightly build after this pull request:
#95","Use separate channels.c for Devo F4 & F7, fix broken nightly build after this pull request:
#95",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,101,2017-01-16T04:47:09Z,2017-01-16T04:50:12Z,2017-01-16T04:50:12Z,MERGED,True,16,1,1,https://github.com/vladislavy,"Faster byte reverse for xn297 routines, from  silver13",1,[],https://github.com/DeviationTX/deviation/pull/101,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/101,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,102,2017-01-18T04:28:14Z,2017-01-18T12:58:26Z,2017-01-18T12:58:26Z,MERGED,True,4,4,2,https://github.com/victzh,Use known good settings for F12E video.,1,[],https://github.com/DeviationTX/deviation/pull/102,https://github.com/victzh,1,https://github.com/DeviationTX/deviation/pull/102,1.3a settings work well for me. To test it for a wider audience we need to have nightly build available.,1.3a settings work well for me. To test it for a wider audience we need to have nightly build available.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,102,2017-01-18T04:28:14Z,2017-01-18T12:58:26Z,2017-01-18T12:58:26Z,MERGED,True,4,4,2,https://github.com/victzh,Use known good settings for F12E video.,1,[],https://github.com/DeviationTX/deviation/pull/102,https://github.com/vladislavy,2,https://github.com/DeviationTX/deviation/pull/102#issuecomment-273390529,1.3a settings work well for me. To test it for a wider audience we need to have nightly build available.,"I think we can use ""tw8816_init_1.3.h"" with one correction only:
-0x70,  0x60,
+0x70,  0x20,
it will be equal to ""tw8816_init_bl1.3a.h"" with skipped registers 0x9e - 0xAE. It was tested and works with both values of 0x70 register.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,103,2017-01-18T15:33:00Z,2017-01-18T15:41:02Z,2017-01-18T15:41:02Z,MERGED,True,1,0,1,https://github.com/F-D-R,Build languages for the DEVO 12E,1,[],https://github.com/DeviationTX/deviation/pull/103,https://github.com/F-D-R,1,https://github.com/DeviationTX/deviation/pull/103,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,104,2017-01-18T18:32:09Z,2017-01-19T08:24:25Z,2017-01-19T08:24:25Z,MERGED,True,3,3,1,https://github.com/vladislavy,Fix Devo12E emulator screen size,3,[],https://github.com/DeviationTX/deviation/pull/104,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/104,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,104,2017-01-18T18:32:09Z,2017-01-19T08:24:25Z,2017-01-19T08:24:25Z,MERGED,True,3,3,1,https://github.com/vladislavy,Fix Devo12E emulator screen size,3,[],https://github.com/DeviationTX/deviation/pull/104,https://github.com/vladislavy,2,https://github.com/DeviationTX/deviation/pull/104#issuecomment-273570026,,"Sorry, two different pull requests was merged.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,104,2017-01-18T18:32:09Z,2017-01-19T08:24:25Z,2017-01-19T08:24:25Z,MERGED,True,3,3,1,https://github.com/vladislavy,Fix Devo12E emulator screen size,3,[],https://github.com/DeviationTX/deviation/pull/104,https://github.com/victzh,3,https://github.com/DeviationTX/deviation/pull/104#issuecomment-273685842,,"Sorry, I modified repository directly and immediately regretted. We better have even one line fixes through pull requests. I fixed this one.
It effectively make this pull request only for screen size, the build fix is there already.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,105,2017-01-18T20:38:53Z,2017-01-19T05:28:35Z,2017-01-19T11:28:46Z,MERGED,True,6,2,1,https://github.com/F-D-R,Filesystem for the emu_devo12e,1,[],https://github.com/DeviationTX/deviation/pull/105,https://github.com/F-D-R,1,https://github.com/DeviationTX/deviation/pull/105,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,105,2017-01-18T20:38:53Z,2017-01-19T05:28:35Z,2017-01-19T11:28:46Z,MERGED,True,6,2,1,https://github.com/F-D-R,Filesystem for the emu_devo12e,1,[],https://github.com/DeviationTX/deviation/pull/105,https://github.com/vladislavy,2,https://github.com/DeviationTX/deviation/pull/105#issuecomment-273677449,,"I think will be better (in order to get ""filesystem/devo12e"", not ""filesystem/devo10""):
Makefile.inc

SCREENSIZE  := 128x64x1
FILESYSTEMS := common base_fonts 128x64x1
FONTS        = filesystem/$(FILESYSTEM)/media/12normal.fon 
filesystem/$(FILESYSTEM)/media/04b03.fon
LANGUAGE    := devo10
include target/common/emu/Makefile.inc

emu.h

#ifndef EMU_H
#define EMU_H
#define ZOOM_X 2
#define ZOOM_Y 2
#define EMU_STRING ""DEVO-12e-Emu""
#endif",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,105,2017-01-18T20:38:53Z,2017-01-19T05:28:35Z,2017-01-19T11:28:46Z,MERGED,True,6,2,1,https://github.com/F-D-R,Filesystem for the emu_devo12e,1,[],https://github.com/DeviationTX/deviation/pull/105,https://github.com/F-D-R,3,https://github.com/DeviationTX/deviation/pull/105#issuecomment-273683495,,"The other transmitters share the filesystem too, like for example the DEVO 6 uses the filesystem of the DEVO 8, because they are the same, just like the one of the 12E is the same as of the 10...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,105,2017-01-18T20:38:53Z,2017-01-19T05:28:35Z,2017-01-19T11:28:46Z,MERGED,True,6,2,1,https://github.com/F-D-R,Filesystem for the emu_devo12e,1,[],https://github.com/DeviationTX/deviation/pull/105,https://github.com/vladislavy,4,https://github.com/DeviationTX/deviation/pull/105#issuecomment-273685968,,"It was in a past. Now all transmitters use own filesystems, even they are the same.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,105,2017-01-18T20:38:53Z,2017-01-19T05:28:35Z,2017-01-19T11:28:46Z,MERGED,True,6,2,1,https://github.com/F-D-R,Filesystem for the emu_devo12e,1,[],https://github.com/DeviationTX/deviation/pull/105,https://github.com/F-D-R,5,https://github.com/DeviationTX/deviation/pull/105#issuecomment-273715325,,"I wasn't talking about wether the built zip includes it or not, but about the naming: the emu_devo6 build still contains the filesystem/devo8 folder, because they share the same filesystem content.
Did I understand you right?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,105,2017-01-18T20:38:53Z,2017-01-19T05:28:35Z,2017-01-19T11:28:46Z,MERGED,True,6,2,1,https://github.com/F-D-R,Filesystem for the emu_devo12e,1,[],https://github.com/DeviationTX/deviation/pull/105,https://github.com/F-D-R,6,https://github.com/DeviationTX/deviation/pull/105#issuecomment-273716890,,"I've compared to your suggestion, and found only one difference, that I haven't removed this line:
FILESYSTEM  := devo10
Is that what causes that the emu filesystem is named devo10, isn't it?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,105,2017-01-18T20:38:53Z,2017-01-19T05:28:35Z,2017-01-19T11:28:46Z,MERGED,True,6,2,1,https://github.com/F-D-R,Filesystem for the emu_devo12e,1,[],https://github.com/DeviationTX/deviation/pull/105,https://github.com/vladislavy,7,https://github.com/DeviationTX/deviation/pull/105#issuecomment-273727027,,"AND:
emu.h
#define FILESYSTEM_DIR ""filesystem/devo10""
emu_devo6 has ""filesystem\devo6"" folder. From a moment PB decided to have personal filesystems for all transmitters and emulators. Devo 12e have remainders from v5.0.0.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,105,2017-01-18T20:38:53Z,2017-01-19T05:28:35Z,2017-01-19T11:28:46Z,MERGED,True,6,2,1,https://github.com/F-D-R,Filesystem for the emu_devo12e,1,[],https://github.com/DeviationTX/deviation/pull/105,https://github.com/F-D-R,8,https://github.com/DeviationTX/deviation/pull/105#issuecomment-273751978,,"Yeah, I hasn't reached to the code yet., because the emulator didn't work at all without the filesystem.  :)
I will examine it further, but you can push those changes as well, because I can only do that in the evening...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,106,2017-01-19T05:43:30Z,2017-01-19T05:45:48Z,2017-01-19T05:45:48Z,MERGED,True,1,1,1,https://github.com/vladislavy,"Strengthen condition for ARM-specific instruction, from victzh",1,[],https://github.com/DeviationTX/deviation/pull/106,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/106,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,107,2017-01-19T07:18:39Z,2017-01-19T16:51:05Z,2017-01-19T16:51:05Z,MERGED,True,1,1,1,https://github.com/vladislavy,Fix devo12e emulator button map,1,[],https://github.com/DeviationTX/deviation/pull/107,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/107,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,108,2017-01-19T13:47:34Z,2017-01-19T16:52:15Z,2017-01-19T16:52:15Z,MERGED,True,0,2,2,https://github.com/vladislavy,Fix filesystem for the emu_devo12e,2,[],https://github.com/DeviationTX/deviation/pull/108,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/108,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,109,2017-01-19T14:23:21Z,2017-01-19T16:46:10Z,2019-03-05T00:09:44Z,MERGED,True,231,127,1,https://github.com/goebish,Add CX10D & CX10WD formats to Q303 protocol,11,[],https://github.com/DeviationTX/deviation/pull/109,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/109,"Add CX10D & CX10WD formats to Q303 protocol, also add (semi) arbitrary transmitter ID for CX35.
Channel 5: auto land (below 0) / manual (0) / auto take off (above 0)
Channel 6: flip
Forums thread: https://www.deviationtx.com/forum/protocol-development/6448-cx-10d-traces","Add CX10D & CX10WD formats to Q303 protocol, also add (semi) arbitrary transmitter ID for CX35.
Channel 5: auto land (below 0) / manual (0) / auto take off (above 0)
Channel 6: flip
Forums thread: https://www.deviationtx.com/forum/protocol-development/6448-cx-10d-traces",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,110,2017-01-19T17:04:28Z,2017-01-19T17:07:46Z,2017-01-19T17:07:46Z,MERGED,True,231,127,1,https://github.com/vladislavy,"Add CX10D & CX10WD formats to Q303 protocol, from goebish",1,[],https://github.com/DeviationTX/deviation/pull/110,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/110,"Add CX10D & CX10WD formats to Q303 protocol, also add (semi) arbitrary transmitter ID for CX35.
Channel 5: auto land (below 0) / manual (0) / auto take off (above 0)
Channel 6: flip
Forums thread: https://www.deviationtx.com/forum/protocol-development/6448-cx-10d-traces","Add CX10D & CX10WD formats to Q303 protocol, also add (semi) arbitrary transmitter ID for CX35.
Channel 5: auto land (below 0) / manual (0) / auto take off (above 0)
Channel 6: flip
Forums thread: https://www.deviationtx.com/forum/protocol-development/6448-cx-10d-traces",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,111,2017-01-19T17:19:33Z,2017-01-19T17:22:36Z,2017-01-19T17:22:36Z,MERGED,True,337,1,13,https://github.com/vladislavy,"Add ""Devo 12e""",3,[],https://github.com/DeviationTX/deviation/pull/111,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/111,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,112,2017-01-20T06:28:29Z,2017-01-20T06:30:49Z,2017-01-20T06:30:49Z,MERGED,True,881,6,11,https://github.com/vladislavy,"Update ""Devo 7e-256""",2,[],https://github.com/DeviationTX/deviation/pull/112,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/112,Update devo7e-256 capabilities to master branch (Nightly builds) state.,Update devo7e-256 capabilities to master branch (Nightly builds) state.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,113,2017-01-20T10:25:51Z,2017-01-20T10:28:10Z,2017-01-20T10:28:10Z,MERGED,True,5,5,2,https://github.com/vladislavy,Use known good settings for F12E video,2,[],https://github.com/DeviationTX/deviation/pull/113,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/113,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,114,2017-01-20T13:33:47Z,2017-01-20T13:36:44Z,2017-01-20T13:36:44Z,MERGED,True,150,4,5,https://github.com/vladislavy,Devo F7 input,5,[],https://github.com/DeviationTX/deviation/pull/114,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/114,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,115,2017-01-24T08:37:25Z,2017-01-26T04:24:39Z,2017-02-19T21:21:11Z,CLOSED,False,1,82,1,https://github.com/vladislavy,"Update ""src/gui/480x272x16/_gui.c""",1,[],https://github.com/DeviationTX/deviation/pull/115,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/115,"""src/gui/320x240x16/_gui.c"" and ""src/gui/480x272x16/_gui.c"" now are equal.
...
void _gui_draw_background(int x, int y, int w, int h)
{
LCD_DrawWindowedImageFromFile(x, y, ""media/backgrnd"" IMG_EXT, w, h, x, y);
}
...","""src/gui/320x240x16/_gui.c"" and ""src/gui/480x272x16/_gui.c"" now are equal.
...
void _gui_draw_background(int x, int y, int w, int h)
{
LCD_DrawWindowedImageFromFile(x, y, ""media/backgrnd"" IMG_EXT, w, h, x, y);
}
...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,115,2017-01-24T08:37:25Z,2017-01-26T04:24:39Z,2017-02-19T21:21:11Z,CLOSED,False,1,82,1,https://github.com/vladislavy,"Update ""src/gui/480x272x16/_gui.c""",1,[],https://github.com/DeviationTX/deviation/pull/115,https://github.com/F-D-R,2,https://github.com/DeviationTX/deviation/pull/115#issuecomment-275221665,"""src/gui/320x240x16/_gui.c"" and ""src/gui/480x272x16/_gui.c"" now are equal.
...
void _gui_draw_background(int x, int y, int w, int h)
{
LCD_DrawWindowedImageFromFile(x, y, ""media/backgrnd"" IMG_EXT, w, h, x, y);
}
...","I wouldn't like to merge this, because I've just made some changes (pill request #117 ), where I made this file to differ from the 320x240 equivalent: now it has the menu button with different size.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,115,2017-01-24T08:37:25Z,2017-01-26T04:24:39Z,2017-02-19T21:21:11Z,CLOSED,False,1,82,1,https://github.com/vladislavy,"Update ""src/gui/480x272x16/_gui.c""",1,[],https://github.com/DeviationTX/deviation/pull/115,https://github.com/vladislavy,3,https://github.com/DeviationTX/deviation/pull/115#issuecomment-275305068,"""src/gui/320x240x16/_gui.c"" and ""src/gui/480x272x16/_gui.c"" now are equal.
...
void _gui_draw_background(int x, int y, int w, int h)
{
LCD_DrawWindowedImageFromFile(x, y, ""media/backgrnd"" IMG_EXT, w, h, x, y);
}
...","No problem, it change nothing.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,115,2017-01-24T08:37:25Z,2017-01-26T04:24:39Z,2017-02-19T21:21:11Z,CLOSED,False,1,82,1,https://github.com/vladislavy,"Update ""src/gui/480x272x16/_gui.c""",1,[],https://github.com/DeviationTX/deviation/pull/115,https://github.com/F-D-R,4,https://github.com/DeviationTX/deviation/pull/115#issuecomment-280950069,"""src/gui/320x240x16/_gui.c"" and ""src/gui/480x272x16/_gui.c"" now are equal.
...
void _gui_draw_background(int x, int y, int w, int h)
{
LCD_DrawWindowedImageFromFile(x, y, ""media/backgrnd"" IMG_EXT, w, h, x, y);
}
...","I've changed the menuitems from buttons to labels, so there is no more need for different 320x240 and 480x272 code, so I applied your change and simply included the 320x240 variant in #156.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,116,2017-01-25T06:45:31Z,2017-01-26T04:28:03Z,2017-01-26T04:28:03Z,MERGED,True,321,200,176,https://github.com/vladislavy,"Reorganize filesystem build, from Geoffrey Hausheer",2,[],https://github.com/DeviationTX/deviation/pull/116,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/116,"To simplify synchronization of ""targets"" with the master branch.","To simplify synchronization of ""targets"" with the master branch.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,117,2017-01-25T20:09:24Z,2017-01-26T05:13:36Z,2017-01-26T06:27:52Z,MERGED,True,12,4,9,https://github.com/F-D-R,Color screen transparent menu,1,[],https://github.com/DeviationTX/deviation/pull/117,https://github.com/F-D-R,1,https://github.com/DeviationTX/deviation/pull/117,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,118,2017-01-25T21:55:36Z,2017-01-26T05:11:20Z,2017-01-26T05:11:20Z,MERGED,True,5,5,1,https://github.com/F-D-R,Enlargening and aligning buttons on the BW channel reorder page.,2,[],https://github.com/DeviationTX/deviation/pull/118,https://github.com/F-D-R,1,https://github.com/DeviationTX/deviation/pull/118,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,119,2017-01-26T05:04:24Z,2017-01-26T05:07:53Z,2017-01-26T05:07:53Z,MERGED,True,122,97,10,https://github.com/vladislavy,Support using .pbm files on 320x240 screen. Invert PBM images.,1,[],https://github.com/DeviationTX/deviation/pull/119,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/119,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,120,2017-01-26T05:19:40Z,2017-01-27T05:07:50Z,2017-01-27T05:07:50Z,MERGED,True,1,1,1,https://github.com/vladislavy,"Fix ""note_map""",1,[],https://github.com/DeviationTX/deviation/pull/120,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/120,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,121,2017-01-27T05:20:25Z,2017-01-28T05:06:49Z,2017-01-28T05:06:49Z,MERGED,True,15,32,8,https://github.com/vladislavy,"Cleanup ""targets""",1,[],https://github.com/DeviationTX/deviation/pull/121,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/121,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,122,2017-01-27T19:03:25Z,2017-01-27T19:12:24Z,2017-01-27T19:12:24Z,MERGED,True,181,17,1,https://github.com/F-D-R,Hungarian translation changes,1,[],https://github.com/DeviationTX/deviation/pull/122,https://github.com/F-D-R,1,https://github.com/DeviationTX/deviation/pull/122,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,123,2017-01-28T05:13:58Z,2017-01-28T05:16:16Z,2017-01-28T05:16:16Z,MERGED,True,2,2,1,https://github.com/vladislavy,"Fix ""zip"" command line",1,[],https://github.com/DeviationTX/deviation/pull/123,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/123,"zip -x option has to be last in command line. It will work with any Info-ZIP version, not v3.0 only.","zip -x option has to be last in command line. It will work with any Info-ZIP version, not v3.0 only.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,124,2017-01-28T05:21:50Z,2017-01-28T05:24:02Z,2017-01-28T05:24:02Z,MERGED,True,2,2,1,https://github.com/vladislavy,"Fix ""zip"" command line",1,[],https://github.com/DeviationTX/deviation/pull/124,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/124,"zip -x option has to be last in command line. It will work with any Info-ZIP version, not v3.0 only.","zip -x option has to be last in command line. It will work with any Info-ZIP version, not v3.0 only.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,125,2017-01-28T05:53:37Z,2017-01-28T05:55:44Z,2017-01-28T05:55:44Z,MERGED,True,15,28,7,https://github.com/vladislavy,"Cleanup ""targets""",1,[],https://github.com/DeviationTX/deviation/pull/125,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/125,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,126,2017-01-28T14:23:15Z,2017-01-28T17:53:10Z,2017-01-28T18:21:17Z,MERGED,True,57,53,12,https://github.com/F-D-R,Minor Hungarian language changes,2,[],https://github.com/DeviationTX/deviation/pull/126,https://github.com/F-D-R,1,https://github.com/DeviationTX/deviation/pull/126,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,126,2017-01-28T14:23:15Z,2017-01-28T17:53:10Z,2017-01-28T18:21:17Z,MERGED,True,57,53,12,https://github.com/F-D-R,Minor Hungarian language changes,2,[],https://github.com/DeviationTX/deviation/pull/126,https://github.com/F-D-R,2,https://github.com/DeviationTX/deviation/pull/126#issuecomment-275853210,,"Sorry, two commits went into one pull request!
How to create separate pull request for each commit?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,126,2017-01-28T14:23:15Z,2017-01-28T17:53:10Z,2017-01-28T18:21:17Z,MERGED,True,57,53,12,https://github.com/F-D-R,Minor Hungarian language changes,2,[],https://github.com/DeviationTX/deviation/pull/126,https://github.com/goebish,3,https://github.com/DeviationTX/deviation/pull/126#issuecomment-275853318,,Create one branch (from master) per pull request.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,126,2017-01-28T14:23:15Z,2017-01-28T17:53:10Z,2017-01-28T18:21:17Z,MERGED,True,57,53,12,https://github.com/F-D-R,Minor Hungarian language changes,2,[],https://github.com/DeviationTX/deviation/pull/126,https://github.com/F-D-R,4,https://github.com/DeviationTX/deviation/pull/126#issuecomment-275854066,,"OK, how can I do it, when I've already committed both into the master branch? :)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,126,2017-01-28T14:23:15Z,2017-01-28T17:53:10Z,2017-01-28T18:21:17Z,MERGED,True,57,53,12,https://github.com/F-D-R,Minor Hungarian language changes,2,[],https://github.com/DeviationTX/deviation/pull/126,https://github.com/goebish,5,https://github.com/DeviationTX/deviation/pull/126#issuecomment-275854261,,"That's too late then, you can reverse the last commit, but that's not very clean.
As a rule of thumb, you should never work directly on the master branch but create a new branch (in your repo) from master each time you start to work on something.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,126,2017-01-28T14:23:15Z,2017-01-28T17:53:10Z,2017-01-28T18:21:17Z,MERGED,True,57,53,12,https://github.com/F-D-R,Minor Hungarian language changes,2,[],https://github.com/DeviationTX/deviation/pull/126,https://github.com/F-D-R,6,https://github.com/DeviationTX/deviation/pull/126#issuecomment-275855554,,"Well, then I need someone to accept it on one...  :)
Thanks!",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,126,2017-01-28T14:23:15Z,2017-01-28T17:53:10Z,2017-01-28T18:21:17Z,MERGED,True,57,53,12,https://github.com/F-D-R,Minor Hungarian language changes,2,[],https://github.com/DeviationTX/deviation/pull/126,https://github.com/goebish,7,https://github.com/DeviationTX/deviation/pull/126#issuecomment-275855957,,"Are you using a git GUI ?
I've been using SourceTree (Mac / Win only ...) for a few years, it's very convenient to manage multiple projects, branches and remotes.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,126,2017-01-28T14:23:15Z,2017-01-28T17:53:10Z,2017-01-28T18:21:17Z,MERGED,True,57,53,12,https://github.com/F-D-R,Minor Hungarian language changes,2,[],https://github.com/DeviationTX/deviation/pull/126,https://github.com/F-D-R,8,https://github.com/DeviationTX/deviation/pull/126#issuecomment-275864918,,"No, I just use the command prompt on the client side, and the github site for the pull requests...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,127,2017-01-30T05:14:10Z,2017-01-30T05:16:22Z,2017-01-30T05:16:22Z,MERGED,True,4,0,1,https://github.com/vladislavy,"Update fine frequency setting when it is changed, from hexfet",1,[],https://github.com/DeviationTX/deviation/pull/127,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/127,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,128,2017-01-31T01:06:42Z,2017-01-31T11:33:43Z,2017-02-06T07:30:31Z,MERGED,True,2,2,2,https://github.com/hexfet,Increase maximum number of model files from 100 to 255,1,[],https://github.com/DeviationTX/deviation/pull/128,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/128,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,128,2017-01-31T01:06:42Z,2017-01-31T11:33:43Z,2017-02-06T07:30:31Z,MERGED,True,2,2,2,https://github.com/hexfet,Increase maximum number of model files from 100 to 255,1,[],https://github.com/DeviationTX/deviation/pull/128,https://github.com/vladislavy,2,https://github.com/DeviationTX/deviation/pull/128#issuecomment-277604262,,Transmitter reboot with large number of models. With >150 models transmitter reboot with any attempt to load new model. With lower number of models transmitter reboot at attempt to use selected model.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,129,2017-02-02T13:14:41Z,2017-02-02T20:40:20Z,2017-02-02T20:40:20Z,MERGED,True,2,2,2,https://github.com/vladislavy,Fix emulator zip build for Windows build environment,1,[],https://github.com/DeviationTX/deviation/pull/129,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/129,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,130,2017-02-03T04:05:32Z,2017-02-05T17:20:19Z,2017-02-05T17:20:19Z,MERGED,True,7,8,1,https://github.com/vladislavy,Fix emulator build warnings,1,[],https://github.com/DeviationTX/deviation/pull/130,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/130,"FLTK versions other than ""fltk-x.x.0"" are not suitable for dynamic builds. Therefore, next version we can use will be ""fltk-1.4.0"".","FLTK versions other than ""fltk-x.x.0"" are not suitable for dynamic builds. Therefore, next version we can use will be ""fltk-1.4.0"".",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,131,2017-02-03T04:41:09Z,2017-02-03T04:48:47Z,2017-02-03T04:48:47Z,MERGED,True,7,8,1,https://github.com/vladislavy,Fix emulator build warnings,1,[],https://github.com/DeviationTX/deviation/pull/131,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/131,"FLTK versions other than ""fltk-x.x.0"" are not suitable for dynamic builds. Therefore, next version we can use will be ""fltk-1.4.0"".","FLTK versions other than ""fltk-x.x.0"" are not suitable for dynamic builds. Therefore, next version we can use will be ""fltk-1.4.0"".",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,132,2017-02-03T10:16:34Z,2017-02-03T10:20:07Z,2017-02-03T10:20:07Z,MERGED,True,2,2,2,https://github.com/vladislavy,Fix emulator zip build for Windows build environment,1,[],https://github.com/DeviationTX/deviation/pull/132,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/132,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,133,2017-02-04T22:24:57Z,2017-02-05T07:33:18Z,2017-02-05T07:33:18Z,MERGED,True,72,54,1,https://github.com/hexfet,Frsky EU firmware support,4,[],https://github.com/DeviationTX/deviation/pull/133,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/133,"This change adds a FrskyX protocol option for EU firmware compatibility.  Select Format protocol option to EU to work with EU receiver firmware.  Set option to FCC for standard firmware.
Thanks to midelic and Mike for the implementation from the DIY multiprotocol project.","This change adds a FrskyX protocol option for EU firmware compatibility.  Select Format protocol option to EU to work with EU receiver firmware.  Set option to FCC for standard firmware.
Thanks to midelic and Mike for the implementation from the DIY multiprotocol project.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,134,2017-02-05T07:44:02Z,2017-02-05T07:46:32Z,2017-02-05T07:46:32Z,MERGED,True,71,53,1,https://github.com/vladislavy,"FrskyX EU firmware support, from hexfet",1,[],https://github.com/DeviationTX/deviation/pull/134,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/134,"This change adds a FrskyX protocol option for EU firmware compatibility. Select Format protocol option to EU to work with EU receiver firmware. Set option to FCC for standard firmware.
Thanks to midelic and Mike for the implementation from the DIY multiprotocol project.","This change adds a FrskyX protocol option for EU firmware compatibility. Select Format protocol option to EU to work with EU receiver firmware. Set option to FCC for standard firmware.
Thanks to midelic and Mike for the implementation from the DIY multiprotocol project.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,135,2017-02-05T11:15:31Z,2017-02-05T11:18:07Z,2017-02-05T11:18:07Z,MERGED,True,2,2,2,https://github.com/vladislavy,"Increase maximum number of model files from 100 to 255, from hexfet",1,[],https://github.com/DeviationTX/deviation/pull/135,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/135,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,136,2017-02-05T16:54:12Z,2017-02-05T17:20:07Z,2017-02-05T17:20:07Z,MERGED,True,1,4,1,https://github.com/F-D-R,Model icon leads to the model menu on color TXs,1,[],https://github.com/DeviationTX/deviation/pull/136,https://github.com/F-D-R,1,https://github.com/DeviationTX/deviation/pull/136,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,137,2017-02-06T05:21:58Z,2017-02-06T05:26:17Z,2017-02-12T18:07:37Z,MERGED,True,2,2,2,https://github.com/vladislavy,"Revert ""Increase maximum number of model files from 100 to 255, from hexfet""",1,[],https://github.com/DeviationTX/deviation/pull/137,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/137,Reverts #135,Reverts #135,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,138,2017-02-06T08:55:05Z,2017-02-06T12:17:58Z,2017-02-06T12:17:58Z,MERGED,True,5,5,1,https://github.com/vladislavy,Fix remove *.exe files with clean and distclean,1,[],https://github.com/DeviationTX/deviation/pull/138,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/138,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,139,2017-02-06T13:03:49Z,2017-02-06T13:07:34Z,2017-02-06T13:07:34Z,MERGED,True,5,5,1,https://github.com/vladislavy,Fix remove *.exe files with clean and distclean,1,[],https://github.com/DeviationTX/deviation/pull/139,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/139,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,140,2017-02-07T20:03:58Z,2017-02-07T20:14:21Z,2017-02-07T20:14:21Z,MERGED,True,1,0,1,https://github.com/F-D-R,Reset the watchdog within model_count to prevent reboot,1,[],https://github.com/DeviationTX/deviation/pull/140,https://github.com/F-D-R,1,https://github.com/DeviationTX/deviation/pull/140,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,141,2017-02-08T04:32:21Z,2017-02-08T04:34:55Z,2017-02-08T04:34:55Z,MERGED,True,2,1,1,https://github.com/vladislavy,Increase maximum number of model files from 100 to 200,1,[],https://github.com/DeviationTX/deviation/pull/141,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/141,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,142,2017-02-08T15:48:42Z,2017-02-08T15:56:03Z,2017-02-08T18:29:32Z,MERGED,True,1,3,1,https://github.com/vladislavy,Use fexists() to check model files,1,[],https://github.com/DeviationTX/deviation/pull/142,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/142,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,142,2017-02-08T15:48:42Z,2017-02-08T15:56:03Z,2017-02-08T18:29:32Z,MERGED,True,1,3,1,https://github.com/vladislavy,Use fexists() to check model files,1,[],https://github.com/DeviationTX/deviation/pull/142,https://github.com/PhracturedBlue,2,https://github.com/DeviationTX/deviation/pull/142#issuecomment-278404916,,Does fexists even exist in the filesystem code?  I don't remember implementing it for devofs and it may be disabled for petitfs.  What is the point  of this change?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,142,2017-02-08T15:48:42Z,2017-02-08T15:56:03Z,2017-02-08T18:29:32Z,MERGED,True,1,3,1,https://github.com/vladislavy,Use fexists() to check model files,1,[],https://github.com/DeviationTX/deviation/pull/142,https://github.com/vladislavy,3,https://github.com/DeviationTX/deviation/pull/142#issuecomment-278412367,,"misc.c
int fexists(const char *file)
{
   FILE *fh = fopen(file, ""r"");
   if(! fh)
       return 0;
   fclose(fh);
   return 1;
}


It used several times in code. I use it to save some space for devo7e.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,142,2017-02-08T15:48:42Z,2017-02-08T15:56:03Z,2017-02-08T18:29:32Z,MERGED,True,1,3,1,https://github.com/vladislavy,Use fexists() to check model files,1,[],https://github.com/DeviationTX/deviation/pull/142,https://github.com/PhracturedBlue,4,https://github.com/DeviationTX/deviation/pull/142#issuecomment-278418547,,"thanks for the response, looks good",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,143,2017-02-08T17:47:27Z,2017-02-09T07:17:31Z,2017-02-09T07:17:57Z,MERGED,True,81,84,35,https://github.com/F-D-R,Removed the unused fontColor from the button calls,1,[],https://github.com/DeviationTX/deviation/pull/143,https://github.com/F-D-R,1,https://github.com/DeviationTX/deviation/pull/143,"It spared some space too, the 7E image went from 113.71kB to 113.64kB.","It spared some space too, the 7E image went from 113.71kB to 113.64kB.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,143,2017-02-08T17:47:27Z,2017-02-09T07:17:31Z,2017-02-09T07:17:57Z,MERGED,True,81,84,35,https://github.com/F-D-R,Removed the unused fontColor from the button calls,1,[],https://github.com/DeviationTX/deviation/pull/143,https://github.com/vladislavy,2,https://github.com/DeviationTX/deviation/pull/143#issuecomment-278430420,"It spared some space too, the 7E image went from 113.71kB to 113.64kB.",I see one GUI_CreateButtonPlateText with white (0xffff) font color. If you remove font color what will be with white font color?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,143,2017-02-08T17:47:27Z,2017-02-09T07:17:31Z,2017-02-09T07:17:57Z,MERGED,True,81,84,35,https://github.com/F-D-R,Removed the unused fontColor from the button calls,1,[],https://github.com/DeviationTX/deviation/pull/143,https://github.com/F-D-R,3,https://github.com/DeviationTX/deviation/pull/143#issuecomment-278439860,"It spared some space too, the 7E image went from 113.71kB to 113.64kB.","No, that value was never used.
Inside the function it was assigned to a member of the button struct, but when it actually draws the button, it uses the color member of the font, which is an other member of the button.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,143,2017-02-08T17:47:27Z,2017-02-09T07:17:31Z,2017-02-09T07:17:57Z,MERGED,True,81,84,35,https://github.com/F-D-R,Removed the unused fontColor from the button calls,1,[],https://github.com/DeviationTX/deviation/pull/143,https://github.com/F-D-R,4,https://github.com/DeviationTX/deviation/pull/143#issuecomment-278456184,"It spared some space too, the 7E image went from 113.71kB to 113.64kB.","I would like to clear, that this change doesn't disable setting the button's font color, because that comes from the font definition in media/config.ini
These parameters were obsolete...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,144,2017-02-09T11:10:26Z,2017-02-09T19:49:52Z,2017-02-09T19:49:52Z,MERGED,True,1,1,1,https://github.com/vladislavy,Fix change model icon,1,[],https://github.com/DeviationTX/deviation/pull/144,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/144,"With ""u16 total_items"" devo10 emulator crashed if I try to change default model icon. With ""u8 total_items"" it is OK.
It was changed from ""u8"" to ""u16"" with ""Pull Request #128: Increase maximum number of model files from 100 to 255""","With ""u16 total_items"" devo10 emulator crashed if I try to change default model icon. With ""u8 total_items"" it is OK.
It was changed from ""u8"" to ""u16"" with ""Pull Request #128: Increase maximum number of model files from 100 to 255""",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,144,2017-02-09T11:10:26Z,2017-02-09T19:49:52Z,2017-02-09T19:49:52Z,MERGED,True,1,1,1,https://github.com/vladislavy,Fix change model icon,1,[],https://github.com/DeviationTX/deviation/pull/144,https://github.com/F-D-R,2,https://github.com/DeviationTX/deviation/pull/144#issuecomment-278630860,"With ""u16 total_items"" devo10 emulator crashed if I try to change default model icon. With ""u8 total_items"" it is OK.
It was changed from ""u8"" to ""u16"" with ""Pull Request #128: Increase maximum number of model files from 100 to 255""","I found this bug too: if the first list you open is the icon list, then emulator crashes (any of them), but if you opened an other list first, for example the model load, and only after that the icon list, then it works fine.
The TX fw doesn't have this problem.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,145,2017-02-10T19:15:52Z,2017-02-11T10:27:25Z,2017-02-11T10:27:25Z,MERGED,True,0,3,2,https://github.com/vladislavy,Remove useless remainder,2,[],https://github.com/DeviationTX/deviation/pull/145,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/145,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,146,2017-02-10T19:20:42Z,2017-02-10T19:23:19Z,2017-02-10T19:23:19Z,MERGED,True,0,2,1,https://github.com/vladislavy,Remove useless remainder,1,[],https://github.com/DeviationTX/deviation/pull/146,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/146,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,147,2017-02-11T09:50:42Z,2017-02-11T09:53:03Z,2017-02-11T09:53:03Z,MERGED,True,0,1,1,https://github.com/vladislavy,Remove useless remainder,1,[],https://github.com/DeviationTX/deviation/pull/147,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/147,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,148,2017-02-11T14:06:58Z,2017-02-13T13:46:52Z,2017-02-13T13:46:52Z,CLOSED,False,4,5,2,https://github.com/vladislavy,Move button's font definition into _DrawButton() method,1,[],https://github.com/DeviationTX/deviation/pull/148,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/148,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,148,2017-02-11T14:06:58Z,2017-02-13T13:46:52Z,2017-02-13T13:46:52Z,CLOSED,False,4,5,2,https://github.com/vladislavy,Move button's font definition into _DrawButton() method,1,[],https://github.com/DeviationTX/deviation/pull/148,https://github.com/F-D-R,2,https://github.com/DeviationTX/deviation/pull/148#issuecomment-279189473,,"I'm working on these things too, but rather on the color ones.
I want to write the button text with the same function, which draws the labels, because that has a lot more options, like text aligning and the likes...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,148,2017-02-11T14:06:58Z,2017-02-13T13:46:52Z,2017-02-13T13:46:52Z,CLOSED,False,4,5,2,https://github.com/vladislavy,Move button's font definition into _DrawButton() method,1,[],https://github.com/DeviationTX/deviation/pull/148,https://github.com/vladislavy,3,https://github.com/DeviationTX/deviation/pull/148#issuecomment-279313468,,"I think we need to synchronize all ""config.ini"" files and use same font names for all used GUI. For example, 128x64x1 ""config.ini"" has not [font-button] section, therefore BUTTON_FONT doesn't work normally for buttons. I think that all ""config.ini"" files must contain all font sections, even if font not used right now. It will be useful for future changes.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,148,2017-02-11T14:06:58Z,2017-02-13T13:46:52Z,2017-02-13T13:46:52Z,CLOSED,False,4,5,2,https://github.com/vladislavy,Move button's font definition into _DrawButton() method,1,[],https://github.com/DeviationTX/deviation/pull/148,https://github.com/F-D-R,4,https://github.com/DeviationTX/deviation/pull/148#issuecomment-279317672,,"I agree.
I would like more customization, that's why I introduced the [font-menu] too, but I'm not yet finished...
BTW do you remember how did we make the fonts? I'm not satisfied with the ones we've got.
For example the bold font, which is used for the model name on the color transmitters doesn't have the special characters, and I don't like the font used in the BW transmitters at all...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,148,2017-02-11T14:06:58Z,2017-02-13T13:46:52Z,2017-02-13T13:46:52Z,CLOSED,False,4,5,2,https://github.com/vladislavy,Move button's font definition into _DrawButton() method,1,[],https://github.com/DeviationTX/deviation/pull/148,https://github.com/vladislavy,5,https://github.com/DeviationTX/deviation/pull/148#issuecomment-279319439,,"Look to Makefile:
######################
#Necessary Font files#
######################
also
https://www.deviationtx.com/forum/how-to/1107-build-fonts-for-devo-10-or-devo-6-8#3577
I don't know can these fonts be used:
https://slackbuilds.org/repository/12.2/system/efont-unicode-bdf/",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,149,2017-02-12T14:43:42Z,2017-02-12T14:46:15Z,2017-02-12T14:46:15Z,MERGED,True,88,91,37,https://github.com/vladislavy,"Remove unused ""fontColor"" from the button calls, from FDR",1,[],https://github.com/DeviationTX/deviation/pull/149,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/149,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,150,2017-02-12T15:09:33Z,2017-02-12T15:15:20Z,2017-02-12T15:15:20Z,MERGED,True,56,21,8,https://github.com/vladislavy,"Add LQI and LRSSI telemetry values to Frsky and FrskyX, from hexfet",1,[],https://github.com/DeviationTX/deviation/pull/150,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/150,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,151,2017-02-12T16:55:43Z,2017-02-12T16:58:21Z,2017-02-12T16:58:21Z,MERGED,True,1,1,1,https://github.com/vladislavy,Make production type default for emulator build,1,[],https://github.com/DeviationTX/deviation/pull/151,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/151,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,152,2017-02-12T17:02:52Z,2017-02-15T15:42:02Z,2017-02-15T15:42:02Z,CLOSED,False,1,1,1,https://github.com/vladislavy,Make production type default for the emulator build,1,[],https://github.com/DeviationTX/deviation/pull/152,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/152,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,152,2017-02-12T17:02:52Z,2017-02-15T15:42:02Z,2017-02-15T15:42:02Z,CLOSED,False,1,1,1,https://github.com/vladislavy,Make production type default for the emulator build,1,[],https://github.com/DeviationTX/deviation/pull/152,https://github.com/F-D-R,2,https://github.com/DeviationTX/deviation/pull/152#issuecomment-279247135,,"What's the difference?
Is it only the debuglog screen in the menu?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,152,2017-02-12T17:02:52Z,2017-02-15T15:42:02Z,2017-02-15T15:42:02Z,CLOSED,False,1,1,1,https://github.com/vladislavy,Make production type default for the emulator build,1,[],https://github.com/DeviationTX/deviation/pull/152,https://github.com/vladislavy,3,https://github.com/DeviationTX/deviation/pull/152#issuecomment-279291588,,"Yes, I'm tired to add TYPE=prd to emulator build command line. The main build has long time TYPE=prd as default.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,152,2017-02-12T17:02:52Z,2017-02-15T15:42:02Z,2017-02-15T15:42:02Z,CLOSED,False,1,1,1,https://github.com/vladislavy,Make production type default for the emulator build,1,[],https://github.com/DeviationTX/deviation/pull/152,https://github.com/TheRealMoeder,4,https://github.com/DeviationTX/deviation/pull/152#issuecomment-279750040,,I disagree. I forgot example use buildtype_dev to display some debug information only on developer builds and emulators. What's the disadvantage of keeping  emulator builds dev by default?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,152,2017-02-12T17:02:52Z,2017-02-15T15:42:02Z,2017-02-15T15:42:02Z,CLOSED,False,1,1,1,https://github.com/vladislavy,Make production type default for the emulator build,1,[],https://github.com/DeviationTX/deviation/pull/152,https://github.com/vladislavy,5,https://github.com/DeviationTX/deviation/pull/152#issuecomment-279760624,,"I don't know how it will be with Linux, but with Windows if I press menu item ""Debuglog"" the emulator will crash. I can build the emulator developer version with TAPE=dev, but why I need developer version every time? Or every time add TAPE=prd for normal version?
P.S. By the way, v5.0.0 release emulator do not crash with menu item ""Debuglog"".",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,152,2017-02-12T17:02:52Z,2017-02-15T15:42:02Z,2017-02-15T15:42:02Z,CLOSED,False,1,1,1,https://github.com/vladislavy,Make production type default for the emulator build,1,[],https://github.com/DeviationTX/deviation/pull/152,https://github.com/TheRealMoeder,6,https://github.com/DeviationTX/deviation/pull/152#issuecomment-279802235,,Then we should look into fixing the problem in the windows emulator. The Linux emulator works fine for me on upstream code.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,152,2017-02-12T17:02:52Z,2017-02-15T15:42:02Z,2017-02-15T15:42:02Z,CLOSED,False,1,1,1,https://github.com/vladislavy,Make production type default for the emulator build,1,[],https://github.com/DeviationTX/deviation/pull/152,https://github.com/PhracturedBlue,7,https://github.com/DeviationTX/deviation/pull/152#issuecomment-279842973,,"I don't really see the point either  The primary purpose of the emulator is to debug stuff anyway.Sure I guess a couple of users may use it to test complex rules (and some new users may want to try the GUI before flashing), but that has to be the minority compared to developers using it to verify that new code works as expected.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,152,2017-02-12T17:02:52Z,2017-02-15T15:42:02Z,2017-02-15T15:42:02Z,CLOSED,False,1,1,1,https://github.com/vladislavy,Make production type default for the emulator build,1,[],https://github.com/DeviationTX/deviation/pull/152,https://github.com/vladislavy,8,https://github.com/DeviationTX/deviation/pull/152#issuecomment-279921524,,"I can't find point of emulator ""Debuglog"" problem at main branch, but for BRANCH_5.0 it started after Jan 25, 2017, ""Reorganize filesystem build, from Geoffrey Hausheer"". It change almost nothing except Makefiles. It looks like emulator don't know way to debuglog data.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,153,2017-02-13T16:39:30Z,2017-02-18T07:47:41Z,2017-02-18T07:47:41Z,MERGED,True,74,42,4,https://github.com/vladislavy,"Update and synchronize ""config.ini"" files",2,[],https://github.com/DeviationTX/deviation/pull/153,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/153,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,154,2017-02-18T10:50:38Z,2017-02-19T16:03:44Z,2017-02-19T21:22:59Z,CLOSED,False,132,1,19,https://github.com/vladislavy,"Add ""Ultimate Devo F12E"" (devof12e-4Mb)",2,[],https://github.com/DeviationTX/deviation/pull/154,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/154,Ultimate Devo F12E is modified Devo F12E with replaced flash memory chip UPCT25VF512A (512 Kbit) to SST25VF032B (32 Mbit). It has not devofs and use FAT filesystem (USB drive).,Ultimate Devo F12E is modified Devo F12E with replaced flash memory chip UPCT25VF512A (512 Kbit) to SST25VF032B (32 Mbit). It has not devofs and use FAT filesystem (USB drive).,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,154,2017-02-18T10:50:38Z,2017-02-19T16:03:44Z,2017-02-19T21:22:59Z,CLOSED,False,132,1,19,https://github.com/vladislavy,"Add ""Ultimate Devo F12E"" (devof12e-4Mb)",2,[],https://github.com/DeviationTX/deviation/pull/154,https://github.com/TheRealMoeder,2,https://github.com/DeviationTX/deviation/pull/154#issuecomment-280841366,Ultimate Devo F12E is modified Devo F12E with replaced flash memory chip UPCT25VF512A (512 Kbit) to SST25VF032B (32 Mbit). It has not devofs and use FAT filesystem (USB drive).,Looking good...,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,154,2017-02-18T10:50:38Z,2017-02-19T16:03:44Z,2017-02-19T21:22:59Z,CLOSED,False,132,1,19,https://github.com/vladislavy,"Add ""Ultimate Devo F12E"" (devof12e-4Mb)",2,[],https://github.com/DeviationTX/deviation/pull/154,https://github.com/F-D-R,3,https://github.com/DeviationTX/deviation/pull/154#issuecomment-280925789,Ultimate Devo F12E is modified Devo F12E with replaced flash memory chip UPCT25VF512A (512 Kbit) to SST25VF032B (32 Mbit). It has not devofs and use FAT filesystem (USB drive).,"I think the name is confusing.
4Mb is 4 megabits, but AFAIK the memory size is 4 megabytes, i.e. 4MB.
Furthermore I'm not sure that all HW change needs an own firmware. I know that the ultimate 7E has got its own too, but what if the users of F7 and F4 start to replace the flash chip too? :)
Otherwise it's a good job!",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,154,2017-02-18T10:50:38Z,2017-02-19T16:03:44Z,2017-02-19T21:22:59Z,CLOSED,False,132,1,19,https://github.com/vladislavy,"Add ""Ultimate Devo F12E"" (devof12e-4Mb)",2,[],https://github.com/DeviationTX/deviation/pull/154,https://github.com/F-D-R,4,https://github.com/DeviationTX/deviation/pull/154#issuecomment-280950239,Ultimate Devo F12E is modified Devo F12E with replaced flash memory chip UPCT25VF512A (512 Kbit) to SST25VF032B (32 Mbit). It has not devofs and use FAT filesystem (USB drive).,"Did you closed this because you will rename it, or because of the nonworking standard GUI?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,155,2017-02-19T07:57:07Z,2017-02-19T07:59:12Z,2017-02-19T07:59:12Z,MERGED,True,74,42,4,https://github.com/vladislavy,"Update and synchronize ""config.ini"" files",1,[],https://github.com/DeviationTX/deviation/pull/155,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/155,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,156,2017-02-19T16:22:44Z,2017-02-21T07:11:45Z,2017-02-21T07:13:07Z,MERGED,True,34,109,15,https://github.com/F-D-R,Changed the menuitems to labels instead of transparent buttons for the color menus,3,[],https://github.com/DeviationTX/deviation/pull/156,https://github.com/F-D-R,1,https://github.com/DeviationTX/deviation/pull/156,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,157,2017-02-20T04:57:01Z,2017-02-21T06:37:47Z,2017-02-21T06:37:47Z,MERGED,True,42,38,2,https://github.com/vladislavy,Fix dialog boxes for text GUI,1,[],https://github.com/DeviationTX/deviation/pull/157,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/157,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,158,2017-02-20T05:05:23Z,2017-02-21T06:40:37Z,2017-02-21T06:40:37Z,MERGED,True,15,139,2,https://github.com/vladislavy,"Add datalog page to ""text"" GUI",1,[],https://github.com/DeviationTX/deviation/pull/158,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/158,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,159,2017-02-20T05:10:10Z,2017-02-21T06:43:07Z,2017-02-21T06:43:07Z,MERGED,True,3,1,1,https://github.com/vladislavy,Fix asterisk and degree symbols for Devo F12E,1,[],https://github.com/DeviationTX/deviation/pull/159,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/159,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,160,2017-02-20T05:15:54Z,2017-02-21T06:45:45Z,2017-02-21T06:45:45Z,MERGED,True,2,8,2,https://github.com/vladislavy,"Fix ""Load/Save"" lists for text GUI",1,[],https://github.com/DeviationTX/deviation/pull/160,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/160,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,161,2017-02-20T05:20:54Z,2017-02-21T06:48:41Z,2017-02-21T06:48:41Z,MERGED,True,2,2,1,https://github.com/vladislavy,"Fix splash page for ""text"" GUI",1,[],https://github.com/DeviationTX/deviation/pull/161,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/161,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,162,2017-02-20T05:53:06Z,2017-02-21T06:51:17Z,2017-02-21T06:51:17Z,MERGED,True,1,7,1,https://github.com/vladislavy,"Update ""target_defs.h"" for Devo F12E",1,[],https://github.com/DeviationTX/deviation/pull/162,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/162,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,163,2017-02-20T07:50:40Z,2017-02-21T06:53:52Z,2017-02-21T06:53:52Z,MERGED,True,5,63,4,https://github.com/vladislavy,"Fix ""text"" GUI ""Standard"": ""Reverse"", ""Subtrim"" and ""Fail-safe"" pages",4,[],https://github.com/DeviationTX/deviation/pull/163,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/163,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,164,2017-02-20T13:34:27Z,2017-02-21T06:56:28Z,2017-02-21T06:56:28Z,MERGED,True,29,66,2,https://github.com/vladislavy,"Fix ""text"" GUI ""Standard"" - ""Travel Adjust"" page",2,[],https://github.com/DeviationTX/deviation/pull/164,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/164,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,165,2017-02-20T15:06:37Z,2017-02-21T06:59:42Z,2017-02-21T06:59:42Z,MERGED,True,18,45,2,https://github.com/vladislavy,"Fix ""text"" GUI ""Standard"" - ""Throttle Hold"" page",1,[],https://github.com/DeviationTX/deviation/pull/165,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/165,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,165,2017-02-20T15:06:37Z,2017-02-21T06:59:42Z,2017-02-21T06:59:42Z,MERGED,True,18,45,2,https://github.com/vladislavy,"Fix ""text"" GUI ""Standard"" - ""Throttle Hold"" page",1,[],https://github.com/DeviationTX/deviation/pull/165,https://github.com/TheRealMoeder,2,https://github.com/DeviationTX/deviation/pull/165#issuecomment-281103158,,Why so many separate pull requests? I'd suggest fixing all standard guis and then do one pull request. It may still consist of separate commits.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,165,2017-02-20T15:06:37Z,2017-02-21T06:59:42Z,2017-02-21T06:59:42Z,MERGED,True,18,45,2,https://github.com/vladislavy,"Fix ""text"" GUI ""Standard"" - ""Throttle Hold"" page",1,[],https://github.com/DeviationTX/deviation/pull/165,https://github.com/vladislavy,3,https://github.com/DeviationTX/deviation/pull/165#issuecomment-281105523,,I have bad knowledge how it work. Every time it happened by a way I don't expected.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,165,2017-02-20T15:06:37Z,2017-02-21T06:59:42Z,2017-02-21T06:59:42Z,MERGED,True,18,45,2,https://github.com/vladislavy,"Fix ""text"" GUI ""Standard"" - ""Throttle Hold"" page",1,[],https://github.com/DeviationTX/deviation/pull/165,https://github.com/goebish,4,https://github.com/DeviationTX/deviation/pull/165#issuecomment-281107068,,"create a local branch for your fixes
work on this branch, make as many commits as you want
push this branch to your github repo
make a pull request of this branch
if you push more commits to this branch they will be added to the pull request until it is merged.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,165,2017-02-20T15:06:37Z,2017-02-21T06:59:42Z,2017-02-21T06:59:42Z,MERGED,True,18,45,2,https://github.com/vladislavy,"Fix ""text"" GUI ""Standard"" - ""Throttle Hold"" page",1,[],https://github.com/DeviationTX/deviation/pull/165,https://github.com/TheRealMoeder,5,https://github.com/DeviationTX/deviation/pull/165#issuecomment-281114119,,"Exactly. I know git can be annoying when new to it, but putting a little effort into learning the git command line (look at the many tutorials on the Internet) really pays out. I've just recently been through this :)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,165,2017-02-20T15:06:37Z,2017-02-21T06:59:42Z,2017-02-21T06:59:42Z,MERGED,True,18,45,2,https://github.com/vladislavy,"Fix ""text"" GUI ""Standard"" - ""Throttle Hold"" page",1,[],https://github.com/DeviationTX/deviation/pull/165,https://github.com/goebish,6,https://github.com/DeviationTX/deviation/pull/165#issuecomment-281114603,,"I haven't used git command line for years except for a few exceptions.
I'm using SourceTree GUI, very convenient.
https://www.sourcetreeapp.com/
However, I'd still recommend to learn basic git command line just to understand how it works under the hood.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,165,2017-02-20T15:06:37Z,2017-02-21T06:59:42Z,2017-02-21T06:59:42Z,MERGED,True,18,45,2,https://github.com/vladislavy,"Fix ""text"" GUI ""Standard"" - ""Throttle Hold"" page",1,[],https://github.com/DeviationTX/deviation/pull/165,https://github.com/TheRealMoeder,7,https://github.com/DeviationTX/deviation/pull/165#issuecomment-281124400,,"I develop on a Linux VM, so I prefer command line or the built-in integration of my preferred editor (Atom).",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,166,2017-02-20T18:33:08Z,2017-02-21T05:03:03Z,2017-02-21T05:03:38Z,MERGED,True,5,3,1,https://github.com/F-D-R,Language selection bug,1,[],https://github.com/DeviationTX/deviation/pull/166,https://github.com/F-D-R,1,https://github.com/DeviationTX/deviation/pull/166,"If you selected a language, the language selection list was immediately opened again on the BW transmitters.","If you selected a language, the language selection list was immediately opened again on the BW transmitters.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,167,2017-02-21T07:23:12Z,2017-02-21T07:45:13Z,2017-02-21T07:45:13Z,MERGED,True,61,210,6,https://github.com/vladislavy,"Fix ""text"" GUI ""Standard"" - ""Gyrosense"", ""Switch assignment"" and ""Swa…",1,[],https://github.com/DeviationTX/deviation/pull/167,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/167,"…sh"" pages","…sh"" pages",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,168,2017-02-21T13:57:48Z,2017-02-21T14:05:35Z,2017-02-21T14:33:55Z,MERGED,True,3,0,1,https://github.com/vladislavy,"Fix XY-graph placeholder overlay ""Splash"" page for Devo F12E",1,[],https://github.com/DeviationTX/deviation/pull/168,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/168,"At boot time empty XY-graph placeholder overlay ""Splash"" and ""Safety Warning"" pages and cut off portion of image.","At boot time empty XY-graph placeholder overlay ""Splash"" and ""Safety Warning"" pages and cut off portion of image.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,169,2017-02-22T11:28:58Z,2017-02-23T06:37:42Z,2017-02-23T06:47:03Z,MERGED,True,123,350,6,https://github.com/vladislavy,"Fix ""text"" GUI ""Standard"" - ""Curves"" pages",1,[],https://github.com/DeviationTX/deviation/pull/169,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/169,"I can't find the reason why ""D/R & Expo"" page crashed with ""text"" GUI, so I send it as is. At least it is not worse then before.","I can't find the reason why ""D/R & Expo"" page crashed with ""text"" GUI, so I send it as is. At least it is not worse then before.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,170,2017-02-23T06:52:25Z,2017-02-23T07:13:57Z,2017-02-23T07:14:09Z,MERGED,True,1,2,1,https://github.com/vladislavy,"Fix ""HEADER_WIDGET_HEIGHT"" for Devo F12E",1,[],https://github.com/DeviationTX/deviation/pull/170,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/170,Minimal item size for Devo F12E is 2.,Minimal item size for Devo F12E is 2.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,171,2017-02-23T08:45:08Z,2017-02-23T08:53:07Z,2017-02-23T10:16:02Z,MERGED,True,6,6,1,https://github.com/TheRealMoeder,Make DR&Expo work again on F12E,4,[],https://github.com/DeviationTX/deviation/pull/171,https://github.com/TheRealMoeder,1,https://github.com/DeviationTX/deviation/pull/171,Layout still messed up!,Layout still messed up!,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,171,2017-02-23T08:45:08Z,2017-02-23T08:53:07Z,2017-02-23T10:16:02Z,MERGED,True,6,6,1,https://github.com/TheRealMoeder,Make DR&Expo work again on F12E,4,[],https://github.com/DeviationTX/deviation/pull/171,https://github.com/vladislavy,2,https://github.com/DeviationTX/deviation/pull/171#issuecomment-281952123,Layout still messed up!,"Thank you very match, now I understand how it work better. But, I think it is not fully correctly since ""value1"" and ""value2"" placed at one line, one by one. So I will use other values.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,172,2017-02-23T12:06:18Z,2017-02-23T13:42:25Z,2017-02-23T13:42:25Z,MERGED,True,45,65,7,https://github.com/vladislavy,"Fix ""text"" GUI ""Range"" and ""D/R & Expo"" pages",3,[],https://github.com/DeviationTX/deviation/pull/172,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/172,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,173,2017-02-23T15:46:35Z,2017-02-23T15:51:20Z,2017-02-23T15:55:45Z,MERGED,True,3,2,1,https://github.com/vladislavy,"Fix ""text"" GUI ""Standard"" - DR can't be greater 100%",1,[],https://github.com/DeviationTX/deviation/pull/173,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/173,"D/R can't be greater 100%, above 101% transmitter freeze and reboot.","D/R can't be greater 100%, above 101% transmitter freeze and reboot.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,174,2017-02-23T15:57:27Z,2017-02-24T15:06:00Z,2017-02-25T16:30:40Z,CLOSED,False,2,3,1,https://github.com/TheRealMoeder,"Revert ""Fix ""text"" GUI ""Standard"" - DR can't be greater 100%""",1,[],https://github.com/DeviationTX/deviation/pull/174,https://github.com/TheRealMoeder,1,https://github.com/DeviationTX/deviation/pull/174,"You are too fast! This doesn't solve the problem, actually it is worse than before: DR above 100 % can make sense, you now scale the rates differently so when selecting 125 % you actually have 100 %. That is not correct. The problem lies in the XYgraph indeed, which can be seen in the Devo10 emulator which also draws incorrectly above 100%, but at least doesn't crash the whole thing. I suggest reverting the commit.","You are too fast! This doesn't solve the problem, actually it is worse than before: DR above 100 % can make sense, you now scale the rates differently so when selecting 125 % you actually have 100 %. That is not correct. The problem lies in the XYgraph indeed, which can be seen in the Devo10 emulator which also draws incorrectly above 100%, but at least doesn't crash the whole thing. I suggest reverting the commit.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,174,2017-02-23T15:57:27Z,2017-02-24T15:06:00Z,2017-02-25T16:30:40Z,CLOSED,False,2,3,1,https://github.com/TheRealMoeder,"Revert ""Fix ""text"" GUI ""Standard"" - DR can't be greater 100%""",1,[],https://github.com/DeviationTX/deviation/pull/174,https://github.com/TheRealMoeder,2,https://github.com/DeviationTX/deviation/pull/174#issuecomment-282035431,"You are too fast! This doesn't solve the problem, actually it is worse than before: DR above 100 % can make sense, you now scale the rates differently so when selecting 125 % you actually have 100 %. That is not correct. The problem lies in the XYgraph indeed, which can be seen in the Devo10 emulator which also draws incorrectly above 100%, but at least doesn't crash the whole thing. I suggest reverting the commit.","I just checked....the internal scaling is correct, but the graph is not. Anyways, not the real solution to the problem. The bug is even more pronounced on devo10 emulator when you scale to 125% and then move the input to max or minimum, which makes a black vertikal line appear...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,174,2017-02-23T15:57:27Z,2017-02-24T15:06:00Z,2017-02-25T16:30:40Z,CLOSED,False,2,3,1,https://github.com/TheRealMoeder,"Revert ""Fix ""text"" GUI ""Standard"" - DR can't be greater 100%""",1,[],https://github.com/DeviationTX/deviation/pull/174,https://github.com/vladislavy,3,https://github.com/DeviationTX/deviation/pull/174#issuecomment-282044861,"You are too fast! This doesn't solve the problem, actually it is worse than before: DR above 100 % can make sense, you now scale the rates differently so when selecting 125 % you actually have 100 %. That is not correct. The problem lies in the XYgraph indeed, which can be seen in the Devo10 emulator which also draws incorrectly above 100%, but at least doesn't crash the whole thing. I suggest reverting the commit.",Advanced mixer have the same solution. I don't invent nothing new.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,174,2017-02-23T15:57:27Z,2017-02-24T15:06:00Z,2017-02-25T16:30:40Z,CLOSED,False,2,3,1,https://github.com/TheRealMoeder,"Revert ""Fix ""text"" GUI ""Standard"" - DR can't be greater 100%""",1,[],https://github.com/DeviationTX/deviation/pull/174,https://github.com/TheRealMoeder,4,https://github.com/DeviationTX/deviation/pull/174#issuecomment-282046566,"You are too fast! This doesn't solve the problem, actually it is worse than before: DR above 100 % can make sense, you now scale the rates differently so when selecting 125 % you actually have 100 %. That is not correct. The problem lies in the XYgraph indeed, which can be seen in the Devo10 emulator which also draws incorrectly above 100%, but at least doesn't crash the whole thing. I suggest reverting the commit.","True, but nevertheless wrong. I will see if I can spare voice alert time to look into it :)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,174,2017-02-23T15:57:27Z,2017-02-24T15:06:00Z,2017-02-25T16:30:40Z,CLOSED,False,2,3,1,https://github.com/TheRealMoeder,"Revert ""Fix ""text"" GUI ""Standard"" - DR can't be greater 100%""",1,[],https://github.com/DeviationTX/deviation/pull/174,https://github.com/vladislavy,5,https://github.com/DeviationTX/deviation/pull/174#issuecomment-282049788,"You are too fast! This doesn't solve the problem, actually it is worse than before: DR above 100 % can make sense, you now scale the rates differently so when selecting 125 % you actually have 100 %. That is not correct. The problem lies in the XYgraph indeed, which can be seen in the Devo10 emulator which also draws incorrectly above 100%, but at least doesn't crash the whole thing. I suggest reverting the commit.",From the beginning mixers have limit 100% and you can set up to 125% at channels properties. Then things were messed up by ability to set mixers up to 125%.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,174,2017-02-23T15:57:27Z,2017-02-24T15:06:00Z,2017-02-25T16:30:40Z,CLOSED,False,2,3,1,https://github.com/TheRealMoeder,"Revert ""Fix ""text"" GUI ""Standard"" - DR can't be greater 100%""",1,[],https://github.com/DeviationTX/deviation/pull/174,https://github.com/F-D-R,6,https://github.com/DeviationTX/deviation/pull/174#issuecomment-282054662,"You are too fast! This doesn't solve the problem, actually it is worse than before: DR above 100 % can make sense, you now scale the rates differently so when selecting 125 % you actually have 100 %. That is not correct. The problem lies in the XYgraph indeed, which can be seen in the Devo10 emulator which also draws incorrectly above 100%, but at least doesn't crash the whole thing. I suggest reverting the commit.",True...  :),True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,174,2017-02-23T15:57:27Z,2017-02-24T15:06:00Z,2017-02-25T16:30:40Z,CLOSED,False,2,3,1,https://github.com/TheRealMoeder,"Revert ""Fix ""text"" GUI ""Standard"" - DR can't be greater 100%""",1,[],https://github.com/DeviationTX/deviation/pull/174,https://github.com/TheRealMoeder,7,https://github.com/DeviationTX/deviation/pull/174#issuecomment-282101699,"You are too fast! This doesn't solve the problem, actually it is worse than before: DR above 100 % can make sense, you now scale the rates differently so when selecting 125 % you actually have 100 %. That is not correct. The problem lies in the XYgraph indeed, which can be seen in the Devo10 emulator which also draws incorrectly above 100%, but at least doesn't crash the whole thing. I suggest reverting the commit.","The question is what do we want? The current (to be honest never before questioned) solution has different scales on X and Y axis, which maximizes screen usage (which is good!). On the other hand the curves would probably look more to what you expect if they had the same scale on X and Y axis and we just don't show any line beyond the Channel input limits.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,174,2017-02-23T15:57:27Z,2017-02-24T15:06:00Z,2017-02-25T16:30:40Z,CLOSED,False,2,3,1,https://github.com/TheRealMoeder,"Revert ""Fix ""text"" GUI ""Standard"" - DR can't be greater 100%""",1,[],https://github.com/DeviationTX/deviation/pull/174,https://github.com/F-D-R,8,https://github.com/DeviationTX/deviation/pull/174#issuecomment-282143157,"You are too fast! This doesn't solve the problem, actually it is worse than before: DR above 100 % can make sense, you now scale the rates differently so when selecting 125 % you actually have 100 %. That is not correct. The problem lies in the XYgraph indeed, which can be seen in the Devo10 emulator which also draws incorrectly above 100%, but at least doesn't crash the whole thing. I suggest reverting the commit.","I don't know, the graph might be bad on the BW screens.
On the color screens it has a longer Y axis, because the Y can go up t +-125%, while the X axis is limited to the +-100% input range.
I thought that you question the defaul limited +-100% output range, which is not the whole throw, to allow the users to adjust it wider to fit the needed servo throw.
It would break the backward compatibility if we changed that.
On the other hand the graph is relatively easy to change...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,174,2017-02-23T15:57:27Z,2017-02-24T15:06:00Z,2017-02-25T16:30:40Z,CLOSED,False,2,3,1,https://github.com/TheRealMoeder,"Revert ""Fix ""text"" GUI ""Standard"" - DR can't be greater 100%""",1,[],https://github.com/DeviationTX/deviation/pull/174,https://github.com/TheRealMoeder,9,https://github.com/DeviationTX/deviation/pull/174#issuecomment-282212379,"You are too fast! This doesn't solve the problem, actually it is worse than before: DR above 100 % can make sense, you now scale the rates differently so when selecting 125 % you actually have 100 %. That is not correct. The problem lies in the XYgraph indeed, which can be seen in the Devo10 emulator which also draws incorrectly above 100%, but at least doesn't crash the whole thing. I suggest reverting the commit.","No, I don't want to change any of the handling, I was just wondering about the graph itself. They way it is done in the color screens seems better to me. If we have vertical screen space left on the pages it is needed, why not stick with the same solution of extending the y axis? But I admit this is not important and I'm fine with keeping things the way they are",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,175,2017-02-23T18:34:39Z,2017-02-24T07:59:29Z,2017-02-24T08:03:42Z,MERGED,True,12,24,2,https://github.com/vladislavy,"Fix language select page for ""text"" GUI",1,[],https://github.com/DeviationTX/deviation/pull/175,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/175,Just in case...,Just in case...,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,176,2017-02-23T22:00:48Z,2017-02-24T07:43:46Z,2017-02-24T07:43:56Z,MERGED,True,17,12,4,https://github.com/F-D-R,B&W GUI enhancements,3,[],https://github.com/DeviationTX/deviation/pull/176,https://github.com/F-D-R,1,https://github.com/DeviationTX/deviation/pull/176,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,177,2017-02-23T22:31:34Z,2017-02-26T14:49:38Z,2019-03-05T00:09:45Z,MERGED,True,391,3,5,https://github.com/goebish,Add GW008 protocol,7,[],https://github.com/DeviationTX/deviation/pull/177,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/177,"Add Global Drone GW008 protocol.
Channel 6: flip
There are 3 versions of this small quad, this protocol is for the one with a XNS104 IC in the stock Tx and PAN159CY IC in the quad (SOCs with built-in xn297 compatible RF).
The xn297 version is compatible with the CX10 protocol (green pcb).
The LT8910 version is not supported yet.
This PR also includes enhanced packet mode support for xn297 emulation (tx & rx).
Forum thread: https://www.deviationtx.com/forum/protocol-development/6420-global-drone-skull-drone-or-gw008","Add Global Drone GW008 protocol.
Channel 6: flip
There are 3 versions of this small quad, this protocol is for the one with a XNS104 IC in the stock Tx and PAN159CY IC in the quad (SOCs with built-in xn297 compatible RF).
The xn297 version is compatible with the CX10 protocol (green pcb).
The LT8910 version is not supported yet.
This PR also includes enhanced packet mode support for xn297 emulation (tx & rx).
Forum thread: https://www.deviationtx.com/forum/protocol-development/6420-global-drone-skull-drone-or-gw008",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,177,2017-02-23T22:31:34Z,2017-02-26T14:49:38Z,2019-03-05T00:09:45Z,MERGED,True,391,3,5,https://github.com/goebish,Add GW008 protocol,7,[],https://github.com/DeviationTX/deviation/pull/177,https://github.com/TheRealMoeder,2,https://github.com/DeviationTX/deviation/pull/177#issuecomment-282210758,"Add Global Drone GW008 protocol.
Channel 6: flip
There are 3 versions of this small quad, this protocol is for the one with a XNS104 IC in the stock Tx and PAN159CY IC in the quad (SOCs with built-in xn297 compatible RF).
The xn297 version is compatible with the CX10 protocol (green pcb).
The LT8910 version is not supported yet.
This PR also includes enhanced packet mode support for xn297 emulation (tx & rx).
Forum thread: https://www.deviationtx.com/forum/protocol-development/6420-global-drone-skull-drone-or-gw008","If there are three versions of the drone, do you think it is clever to just name this protocol GW008?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,177,2017-02-23T22:31:34Z,2017-02-26T14:49:38Z,2019-03-05T00:09:45Z,MERGED,True,391,3,5,https://github.com/goebish,Add GW008 protocol,7,[],https://github.com/DeviationTX/deviation/pull/177,https://github.com/goebish,3,https://github.com/DeviationTX/deviation/pull/177#issuecomment-282283523,"Add Global Drone GW008 protocol.
Channel 6: flip
There are 3 versions of this small quad, this protocol is for the one with a XNS104 IC in the stock Tx and PAN159CY IC in the quad (SOCs with built-in xn297 compatible RF).
The xn297 version is compatible with the CX10 protocol (green pcb).
The LT8910 version is not supported yet.
This PR also includes enhanced packet mode support for xn297 emulation (tx & rx).
Forum thread: https://www.deviationtx.com/forum/protocol-development/6420-global-drone-skull-drone-or-gw008","Any suggestion to rename it (8 characters max) ? Or can I just add a useless ""XNS104"" format option as I did for one of the FQ777 protocols ?
I think that's not a problem as long as it's stated in the model compatibility list that this protocol is only compatible with this particular model.
But I admit it's starting to be a mess, look at the CX10 for example, it has 5 (!) different protocols, and only 2 of them are sub-formats of the protocol that's named CX10.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,178,2017-02-24T08:23:43Z,2017-02-24T09:06:52Z,2017-02-24T09:06:52Z,MERGED,True,6,1,1,https://github.com/vladislavy,Fix Devo F7 main screen,2,[],https://github.com/DeviationTX/deviation/pull/178,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/178,The last 128x64x1 main screen changes destroy Devo F7 main screen.,The last 128x64x1 main screen changes destroy Devo F7 main screen.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,179,2017-02-24T11:04:53Z,2017-02-24T12:46:52Z,2017-02-24T12:46:52Z,MERGED,True,1,1,1,https://github.com/vladislavy,Fix 128x64x1 main_page.c,1,[],https://github.com/DeviationTX/deviation/pull/179,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/179,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,179,2017-02-24T11:04:53Z,2017-02-24T12:46:52Z,2017-02-24T12:46:52Z,MERGED,True,1,1,1,https://github.com/vladislavy,Fix 128x64x1 main_page.c,1,[],https://github.com/DeviationTX/deviation/pull/179,https://github.com/vladislavy,2,https://github.com/DeviationTX/deviation/pull/179#issuecomment-282266325,,"X, Y, width, height can't be numerical, we need to use macro variables because of ""text"" GUI.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,179,2017-02-24T11:04:53Z,2017-02-24T12:46:52Z,2017-02-24T12:46:52Z,MERGED,True,1,1,1,https://github.com/vladislavy,Fix 128x64x1 main_page.c,1,[],https://github.com/DeviationTX/deviation/pull/179,https://github.com/F-D-R,3,https://github.com/DeviationTX/deviation/pull/179#issuecomment-282266476,,"Do you mean ""text"" GUI?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,179,2017-02-24T11:04:53Z,2017-02-24T12:46:52Z,2017-02-24T12:46:52Z,MERGED,True,1,1,1,https://github.com/vladislavy,Fix 128x64x1 main_page.c,1,[],https://github.com/DeviationTX/deviation/pull/179,https://github.com/vladislavy,4,https://github.com/DeviationTX/deviation/pull/179#issuecomment-282266633,,"Sorry, yes it is ""text"" GUI. Corrected.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,180,2017-02-24T16:30:17Z,2017-02-24T16:47:03Z,2017-02-24T16:49:56Z,MERGED,True,1,1,1,https://github.com/vladislavy,"Fixed reboot at ""Telemetry monitor"" page for Frsky(X) protocol",1,[],https://github.com/DeviationTX/deviation/pull/180,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/180,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,181,2017-02-25T11:23:59Z,2017-02-26T23:30:34Z,2017-02-26T23:30:34Z,MERGED,True,50,9,7,https://github.com/vladislavy,"Add debuglog page for ""text"" GUI",1,[],https://github.com/DeviationTX/deviation/pull/181,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/181,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,182,2017-02-25T19:00:28Z,2017-03-01T15:15:19Z,2017-03-01T15:15:19Z,CLOSED,False,15,7,3,https://github.com/vladislavy,Fix change icon for Devo F12E,2,[],https://github.com/DeviationTX/deviation/pull/182,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/182,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,182,2017-02-25T19:00:28Z,2017-03-01T15:15:19Z,2017-03-01T15:15:19Z,CLOSED,False,15,7,3,https://github.com/vladislavy,Fix change icon for Devo F12E,2,[],https://github.com/DeviationTX/deviation/pull/182,https://github.com/vladislavy,2,https://github.com/DeviationTX/deviation/pull/182#issuecomment-282546538,,"With the second fix we can use BW *.pbm images from any editor, without editing the file header.
I don't know the initial idea, so I don't delete commented out code.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,183,2017-02-25T23:28:16Z,2017-02-26T13:57:17Z,2017-03-02T17:59:15Z,MERGED,True,330,261,52,https://github.com/F-D-R,Some GUI rework,12,[],https://github.com/DeviationTX/deviation/pull/183,https://github.com/F-D-R,1,https://github.com/DeviationTX/deviation/pull/183,"Separated the text align from the box type.
Enabled underline type for the color transmitters.
Introduced a label font type.
Converted the labels to the LABEL_FONT.
Some other GUI bug fixes...","Separated the text align from the box type.
Enabled underline type for the color transmitters.
Introduced a label font type.
Converted the labels to the LABEL_FONT.
Some other GUI bug fixes...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,183,2017-02-25T23:28:16Z,2017-02-26T13:57:17Z,2017-03-02T17:59:15Z,MERGED,True,330,261,52,https://github.com/F-D-R,Some GUI rework,12,[],https://github.com/DeviationTX/deviation/pull/183,https://github.com/vladislavy,2,https://github.com/DeviationTX/deviation/pull/183#issuecomment-282539466,"Separated the text align from the box type.
Enabled underline type for the color transmitters.
Introduced a label font type.
Converted the labels to the LABEL_FONT.
Some other GUI bug fixes...","Devo 10 model setup page has not labels, buttons only.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,183,2017-02-25T23:28:16Z,2017-02-26T13:57:17Z,2017-03-02T17:59:15Z,MERGED,True,330,261,52,https://github.com/F-D-R,Some GUI rework,12,[],https://github.com/DeviationTX/deviation/pull/183,https://github.com/F-D-R,3,https://github.com/DeviationTX/deviation/pull/183#issuecomment-282543835,"Separated the text align from the box type.
Enabled underline type for the color transmitters.
Introduced a label font type.
Converted the labels to the LABEL_FONT.
Some other GUI bug fixes...","It is because you don't have the new [font-label] section in the config.ini, which is included in the source.
I'll see how can I solve the compatibility with old config files...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,183,2017-02-25T23:28:16Z,2017-02-26T13:57:17Z,2017-03-02T17:59:15Z,MERGED,True,330,261,52,https://github.com/F-D-R,Some GUI rework,12,[],https://github.com/DeviationTX/deviation/pull/183,https://github.com/vladislavy,4,https://github.com/DeviationTX/deviation/pull/183#issuecomment-282546751,"Separated the text align from the box type.
Enabled underline type for the color transmitters.
Introduced a label font type.
Converted the labels to the LABEL_FONT.
Some other GUI bug fixes...","Sorry, I forget to copy new config.ini files. I think there is not need for it, it will be indicator to renew filesystem.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,183,2017-02-25T23:28:16Z,2017-02-26T13:57:17Z,2017-03-02T17:59:15Z,MERGED,True,330,261,52,https://github.com/F-D-R,Some GUI rework,12,[],https://github.com/DeviationTX/deviation/pull/183,https://github.com/vladislavy,5,https://github.com/DeviationTX/deviation/pull/183#issuecomment-283121020,"Separated the text align from the box type.
Enabled underline type for the color transmitters.
Introduced a label font type.
Converted the labels to the LABEL_FONT.
Some other GUI bug fixes...","FDR, I think that after these changes: the ""Mixer"" page have strange look after visit any ""Toggle select"" page (devo10 emulator). For Devo F12E the ""Mixer"" page become totally unusable after that, all labels started with selection symbol (filled >).",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,183,2017-02-25T23:28:16Z,2017-02-26T13:57:17Z,2017-03-02T17:59:15Z,MERGED,True,330,261,52,https://github.com/F-D-R,Some GUI rework,12,[],https://github.com/DeviationTX/deviation/pull/183,https://github.com/F-D-R,6,https://github.com/DeviationTX/deviation/pull/183#issuecomment-283263850,"Separated the text align from the box type.
Enabled underline type for the color transmitters.
Introduced a label font type.
Converted the labels to the LABEL_FONT.
Some other GUI bug fixes...","Yes, I read about that in your ultimate F12E thread, and I've already corrected it in #187",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,183,2017-02-25T23:28:16Z,2017-02-26T13:57:17Z,2017-03-02T17:59:15Z,MERGED,True,330,261,52,https://github.com/F-D-R,Some GUI rework,12,[],https://github.com/DeviationTX/deviation/pull/183,https://github.com/vladislavy,7,https://github.com/DeviationTX/deviation/pull/183#issuecomment-283655537,"Separated the text align from the box type.
Enabled underline type for the color transmitters.
Introduced a label font type.
Converted the labels to the LABEL_FONT.
Some other GUI bug fixes...","FDR, now I see the same problem with ""Channel monitor"" page, emu_devof12e.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,183,2017-02-25T23:28:16Z,2017-02-26T13:57:17Z,2017-03-02T17:59:15Z,MERGED,True,330,261,52,https://github.com/F-D-R,Some GUI rework,12,[],https://github.com/DeviationTX/deviation/pull/183,https://github.com/F-D-R,8,https://github.com/DeviationTX/deviation/pull/183#issuecomment-283665962,"Separated the text align from the box type.
Enabled underline type for the color transmitters.
Introduced a label font type.
Converted the labels to the LABEL_FONT.
Some other GUI bug fixes...","OK, I will check it later.
The channel monitor is one of the few pages, which still uses the generic labelDesc styling...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,183,2017-02-25T23:28:16Z,2017-02-26T13:57:17Z,2017-03-02T17:59:15Z,MERGED,True,330,261,52,https://github.com/F-D-R,Some GUI rework,12,[],https://github.com/DeviationTX/deviation/pull/183,https://github.com/F-D-R,9,https://github.com/DeviationTX/deviation/pull/183#issuecomment-283729572,"Separated the text align from the box type.
Enabled underline type for the color transmitters.
Introduced a label font type.
Converted the labels to the LABEL_FONT.
Some other GUI bug fixes...","OK, corrected and sent pull request #195",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,184,2017-02-26T14:59:57Z,2017-02-26T15:02:39Z,2017-02-26T15:02:39Z,MERGED,True,391,3,5,https://github.com/vladislavy,"Add GW008 protocol, from goebish",1,[],https://github.com/DeviationTX/deviation/pull/184,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/184,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,185,2017-02-27T07:26:30Z,2017-02-27T13:03:51Z,2017-02-27T13:03:51Z,MERGED,True,8,2,1,https://github.com/vladislavy,"Fix selection on ""curves"" pages for ""text"" GUI",1,[],https://github.com/DeviationTX/deviation/pull/185,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/185,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,186,2017-02-27T22:16:31Z,2017-02-28T19:51:48Z,2017-02-28T19:51:49Z,MERGED,True,236,207,42,https://github.com/F-D-R,More title and label font rework,4,[],https://github.com/DeviationTX/deviation/pull/186,https://github.com/F-D-R,1,https://github.com/DeviationTX/deviation/pull/186,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,187,2017-03-01T05:21:22Z,2017-03-01T14:26:08Z,2017-03-01T14:26:08Z,MERGED,True,1,0,1,https://github.com/F-D-R,Correction of the text based mixer page,1,[],https://github.com/DeviationTX/deviation/pull/187,https://github.com/F-D-R,1,https://github.com/DeviationTX/deviation/pull/187,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,188,2017-03-01T05:30:19Z,2017-03-01T15:15:44Z,2017-03-01T15:15:44Z,MERGED,True,12,8,2,https://github.com/vladislavy,"Fix label reminder after select for ""text"" GUI",2,[],https://github.com/DeviationTX/deviation/pull/188,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/188,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,189,2017-03-01T15:48:39Z,2017-03-01T15:51:58Z,2017-03-01T15:51:58Z,CLOSED,False,7,16,2,https://github.com/vladislavy,Fix mapped images and PBM files support,3,[],https://github.com/DeviationTX/deviation/pull/189,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/189,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,190,2017-03-01T16:07:45Z,2017-03-02T04:00:33Z,2017-03-02T04:03:45Z,MERGED,True,6,15,2,https://github.com/vladislavy,Fix mapped images support,2,[],https://github.com/DeviationTX/deviation/pull/190,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/190,"I don't know how it worked before, but image_read_header() read width only and always height=0.","I don't know how it worked before, but image_read_header() read width only and always height=0.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,191,2017-03-02T04:38:52Z,2017-03-02T11:23:04Z,2017-03-02T11:23:04Z,MERGED,True,158,10,5,https://github.com/vladislavy,Fix Latin supplement symbols for Devo F12E,3,[],https://github.com/DeviationTX/deviation/pull/191,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/191,The fix create basis for language support for languages based on Latin charset.,The fix create basis for language support for languages based on Latin charset.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,192,2017-03-02T05:15:58Z,2017-03-02T06:18:57Z,2017-03-02T06:18:57Z,MERGED,True,91,108,29,https://github.com/F-D-R,Use of BUTTON_FONT and TEXTSEL_FONT,1,[],https://github.com/DeviationTX/deviation/pull/192,https://github.com/F-D-R,1,https://github.com/DeviationTX/deviation/pull/192,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,193,2017-03-02T14:48:09Z,2017-03-02T15:30:17Z,2017-03-02T15:30:17Z,MERGED,True,10,7,2,https://github.com/vladislavy,"Fix ""text"" Datalog and Reorder pages",2,[],https://github.com/DeviationTX/deviation/pull/193,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/193,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,194,2017-03-02T16:51:06Z,2017-03-02T19:21:36Z,2017-03-02T19:21:36Z,MERGED,True,18,16,2,https://github.com/vladislavy,"Fix ""text"" GUI button and textsel",3,[],https://github.com/DeviationTX/deviation/pull/194,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/194,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,194,2017-03-02T16:51:06Z,2017-03-02T19:21:36Z,2017-03-02T19:21:36Z,MERGED,True,18,16,2,https://github.com/vladislavy,"Fix ""text"" GUI button and textsel",3,[],https://github.com/DeviationTX/deviation/pull/194,https://github.com/vladislavy,2,https://github.com/DeviationTX/deviation/pull/194#issuecomment-283717301,,"I'm not 100% sure it is right. First, I fix these lines, but it doesn't look nice with Devo F12E GUI, so I commented these lines out. Now Devo F7 GUI look nice too. I will delete these lines.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,195,2017-03-02T17:48:44Z,2017-03-02T19:09:18Z,2017-03-02T19:09:18Z,MERGED,True,1,0,1,https://github.com/F-D-R,Correction of the F12E's channel monitor,1,[],https://github.com/DeviationTX/deviation/pull/195,https://github.com/F-D-R,1,https://github.com/DeviationTX/deviation/pull/195,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,196,2017-03-02T17:54:13Z,2017-03-02T19:18:41Z,2017-03-02T19:18:41Z,MERGED,True,3,3,2,https://github.com/vladislavy,"Fix ""text"" main page for Devo F7",2,[],https://github.com/DeviationTX/deviation/pull/196,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/196,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,197,2017-03-03T05:32:00Z,2017-03-03T09:21:17Z,2017-03-03T09:21:17Z,MERGED,True,32,13,2,https://github.com/vladislavy,"Fix model setup page for ""text"" GUI",2,[],https://github.com/DeviationTX/deviation/pull/197,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/197,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,198,2017-03-03T15:17:40Z,2017-03-03T15:25:24Z,2017-03-03T15:25:24Z,MERGED,True,8,8,1,https://github.com/vladislavy,"Fix ""text"" GUI keyboard",1,[],https://github.com/DeviationTX/deviation/pull/198,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/198,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,199,2017-03-03T15:40:06Z,2017-03-04T10:32:22Z,2017-03-04T10:32:22Z,MERGED,True,62,115,1,https://github.com/vladislavy,More efficient characters mapping for devof12e,1,[],https://github.com/DeviationTX/deviation/pull/199,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/199,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,200,2017-03-03T18:13:53Z,2017-03-04T10:36:05Z,2017-03-04T10:36:05Z,MERGED,True,29,8,3,https://github.com/vladislavy,"Fix Telemetry config and Mixer pages for ""text"" GUI",3,[],https://github.com/DeviationTX/deviation/pull/200,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/200,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,201,2017-03-03T21:38:26Z,2017-03-04T10:41:45Z,2017-03-04T22:08:36Z,MERGED,True,87,93,21,https://github.com/F-D-R,"Adding LISTBOX_FONT, and eliminating the global labelDesc font",3,[],https://github.com/DeviationTX/deviation/pull/201,https://github.com/F-D-R,1,https://github.com/DeviationTX/deviation/pull/201,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,201,2017-03-03T21:38:26Z,2017-03-04T10:41:45Z,2017-03-04T22:08:36Z,MERGED,True,87,93,21,https://github.com/F-D-R,"Adding LISTBOX_FONT, and eliminating the global labelDesc font",3,[],https://github.com/DeviationTX/deviation/pull/201,https://github.com/vladislavy,2,https://github.com/DeviationTX/deviation/pull/201#issuecomment-284132355,,"FDR, even before this commit: if I visit ""Telemetry monitor"" pages (both pages or two or several times first page), next I try to change model icon, default icon disappeared or not, I walk on icons and emulator eventually crashed. I can't find the reason (emu_devof12e and emu_devo10).
Even with nightly build from 24.02.2017.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,201,2017-03-03T21:38:26Z,2017-03-04T10:41:45Z,2017-03-04T22:08:36Z,MERGED,True,87,93,21,https://github.com/F-D-R,"Adding LISTBOX_FONT, and eliminating the global labelDesc font",3,[],https://github.com/DeviationTX/deviation/pull/201,https://github.com/F-D-R,3,https://github.com/DeviationTX/deviation/pull/201#issuecomment-284141305,,"I don't think it has anything to do with these changes.
I went back to pull request #100 in 14th of january, and it was already wrong then.
I will look for the cause further. The official 5.0.0 hasn't got this but, but back then there was no list on the icon selection, but a textselect field...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,201,2017-03-03T21:38:26Z,2017-03-04T10:41:45Z,2017-03-04T22:08:36Z,MERGED,True,87,93,21,https://github.com/F-D-R,"Adding LISTBOX_FONT, and eliminating the global labelDesc font",3,[],https://github.com/DeviationTX/deviation/pull/201,https://github.com/vladislavy,4,https://github.com/DeviationTX/deviation/pull/201#issuecomment-284153944,,"It started after replace Listbox with Scrollable, and crashed only with default icon. If I don't touch default icon, emulator do not crash.
db1bef0",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,201,2017-03-03T21:38:26Z,2017-03-04T10:41:45Z,2017-03-04T22:08:36Z,MERGED,True,87,93,21,https://github.com/F-D-R,"Adding LISTBOX_FONT, and eliminating the global labelDesc font",3,[],https://github.com/DeviationTX/deviation/pull/201,https://github.com/F-D-R,5,https://github.com/DeviationTX/deviation/pull/201#issuecomment-284188251,,Pushed a temporary solution in #205,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,202,2017-03-04T13:52:07Z,2017-03-04T15:46:20Z,2017-03-04T15:46:20Z,CLOSED,False,4,4,2,https://github.com/vladislavy,"Update ""guiobj.h""",2,[],https://github.com/DeviationTX/deviation/pull/202,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/202,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,203,2017-03-04T15:06:57Z,2017-03-04T17:09:49Z,2017-03-04T17:09:49Z,MERGED,True,1,0,1,https://github.com/vladislavy,Fix emulator build warning for FrskyX,1,[],https://github.com/DeviationTX/deviation/pull/203,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/203,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,204,2017-03-04T17:14:56Z,2017-03-04T18:11:06Z,2017-03-04T18:11:06Z,MERGED,True,7,7,1,https://github.com/vladislavy,"Fix ""Main page config"" for ""text"" GUI",1,[],https://github.com/DeviationTX/deviation/pull/204,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/204,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,205,2017-03-04T22:07:12Z,2017-03-05T13:42:52Z,2017-03-05T13:42:52Z,CLOSED,False,3,7,2,https://github.com/F-D-R,Getting around the icon crash after telemetry page,2,[],https://github.com/DeviationTX/deviation/pull/205,https://github.com/F-D-R,1,https://github.com/DeviationTX/deviation/pull/205,"I couldn't find the bug itself, just got around it to prevent the crash.
Somehow the modeltype gets an invalid value...","I couldn't find the bug itself, just got around it to prevent the crash.
Somehow the modeltype gets an invalid value...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,205,2017-03-04T22:07:12Z,2017-03-05T13:42:52Z,2017-03-05T13:42:52Z,CLOSED,False,3,7,2,https://github.com/F-D-R,Getting around the icon crash after telemetry page,2,[],https://github.com/DeviationTX/deviation/pull/205,https://github.com/vladislavy,2,https://github.com/DeviationTX/deviation/pull/205#issuecomment-284207289,"I couldn't find the bug itself, just got around it to prevent the crash.
Somehow the modeltype gets an invalid value...","First, about type < 0, type always positive and we have compile warning.
Second, Default icon still disappeared, but emulator worked.
Third, emulator has slow response on Default and last icons, it seal on these icons. It looks like it want to load ""media\noicon.pbm""
Yes, I test it. Emulator load ""noicon.pbm"" instead Default icon and list icons without delays.
And, even without fix real devof12e work without problems. It seems it is one of mysterious Windows built emulator crashes.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,205,2017-03-04T22:07:12Z,2017-03-05T13:42:52Z,2017-03-05T13:42:52Z,CLOSED,False,3,7,2,https://github.com/F-D-R,Getting around the icon crash after telemetry page,2,[],https://github.com/DeviationTX/deviation/pull/205,https://github.com/vladislavy,3,https://github.com/DeviationTX/deviation/pull/205#issuecomment-284216019,"I couldn't find the bug itself, just got around it to prevent the crash.
Somehow the modeltype gets an invalid value...","Fixed it completely. Model Load/Save page can get dirty memory for struct model_page. In that case mp->modeltype can get any value, since mp->modeltype is not initialized at page init.
I placed the pull request.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,205,2017-03-04T22:07:12Z,2017-03-05T13:42:52Z,2017-03-05T13:42:52Z,CLOSED,False,3,7,2,https://github.com/F-D-R,Getting around the icon crash after telemetry page,2,[],https://github.com/DeviationTX/deviation/pull/205,https://github.com/F-D-R,4,https://github.com/DeviationTX/deviation/pull/205#issuecomment-284228634,"I couldn't find the bug itself, just got around it to prevent the crash.
Somehow the modeltype gets an invalid value...","Actually the ModelType is an enum, which is basically an int, so it can have negative value.
Of course it was only a workaround, and the final solution would be to not letting it have an invalid value, just like you did...
The valid range check does no harm, but the text based transmitters might not have the noicon anyway.
I will push again the telemetry page font changes though...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,206,2017-03-05T09:24:35Z,2017-03-06T06:10:22Z,2017-03-06T06:10:22Z,MERGED,True,15,3,5,https://github.com/vladislavy,Fix emulator reboot on Load/Save page,4,[],https://github.com/DeviationTX/deviation/pull/206,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/206,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,206,2017-03-05T09:24:35Z,2017-03-06T06:10:22Z,2017-03-06T06:10:22Z,MERGED,True,15,3,5,https://github.com/vladislavy,Fix emulator reboot on Load/Save page,4,[],https://github.com/DeviationTX/deviation/pull/206,https://github.com/vladislavy,2,https://github.com/DeviationTX/deviation/pull/206#issuecomment-284216273,,"Model Load/Save page can get dirty memory for struct model_page. In that case mp->modeltype can get any value, since mp->modeltype is not initialized at page init.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,207,2017-03-05T13:52:44Z,2017-03-05T15:02:01Z,2017-03-05T17:21:37Z,MERGED,True,2,7,1,https://github.com/F-D-R,BW telemetry page font changes,1,[],https://github.com/DeviationTX/deviation/pull/207,https://github.com/F-D-R,1,https://github.com/DeviationTX/deviation/pull/207,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,208,2017-03-06T07:59:28Z,2017-03-06T11:55:03Z,2017-03-06T11:55:03Z,CLOSED,False,2,2,1,https://github.com/vladislavy,Fix emulator crash at debuglog page,1,[],https://github.com/DeviationTX/deviation/pull/208,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/208,"FDR, all lines are centered at debuglog. Can you fix it to left aligned?","FDR, all lines are centered at debuglog. Can you fix it to left aligned?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,208,2017-03-06T07:59:28Z,2017-03-06T11:55:03Z,2017-03-06T11:55:03Z,CLOSED,False,2,2,1,https://github.com/vladislavy,Fix emulator crash at debuglog page,1,[],https://github.com/DeviationTX/deviation/pull/208,https://github.com/F-D-R,2,https://github.com/DeviationTX/deviation/pull/208#issuecomment-284343449,"FDR, all lines are centered at debuglog. Can you fix it to left aligned?","Aligning is no problem. Now it has the DEFAULT_FONT, which is center aligned by default, but I was thinking about if it deserves a separate list font type.
However in this bug fix you only partially initialized those arrays.
Shouldn't they be fully initialized, i.e. all the array elements?
Probably it is easier to set all those values with memset...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,208,2017-03-06T07:59:28Z,2017-03-06T11:55:03Z,2017-03-06T11:55:03Z,CLOSED,False,2,2,1,https://github.com/vladislavy,Fix emulator crash at debuglog page,1,[],https://github.com/DeviationTX/deviation/pull/208,https://github.com/vladislavy,3,https://github.com/DeviationTX/deviation/pull/208#issuecomment-284352281,"FDR, all lines are centered at debuglog. Can you fix it to left aligned?","It initialize all members of an array to the same value. Elements with missing values will be initialized to the same value. The ""volatile"" type doesn't allow to use memset.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,208,2017-03-06T07:59:28Z,2017-03-06T11:55:03Z,2017-03-06T11:55:03Z,CLOSED,False,2,2,1,https://github.com/vladislavy,Fix emulator crash at debuglog page,1,[],https://github.com/DeviationTX/deviation/pull/208,https://github.com/F-D-R,4,https://github.com/DeviationTX/deviation/pull/208#issuecomment-284356120,"FDR, all lines are centered at debuglog. Can you fix it to left aligned?","AFAIK all missing values of a fixed size array will be 0.
In the first case it is good, but would be the same without the initializer too, but only the first item of the line_pos will be 0xFF...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,209,2017-03-06T09:35:14Z,2017-03-07T19:05:39Z,2017-03-07T19:05:39Z,MERGED,True,2,0,1,https://github.com/vladislavy,Fix reboot with ENT long press at layout config page,1,[],https://github.com/DeviationTX/deviation/pull/209,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/209,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,210,2017-03-07T08:56:14Z,2017-03-07T19:06:22Z,2017-03-07T19:06:22Z,MERGED,True,9,7,1,https://github.com/vladislavy,"Fix ""text"" GUI_DrawLabelHelper()",1,[],https://github.com/DeviationTX/deviation/pull/210,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/210,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,211,2017-03-07T09:12:55Z,2017-03-09T04:05:13Z,2017-03-09T04:05:13Z,MERGED,True,12,7,1,https://github.com/vladislavy,Fix debuglog page,1,[],https://github.com/DeviationTX/deviation/pull/211,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/211,"Fix Windows built emulator crash at debuglog page
Fix debuglog circularity at debuglog page. Debuglog entries repeated 2, 3, 4... times at debuglog screen, depending from length of entries.

Now it is clear that the size of the debuglog is too small. It can contain very limited number of entries.
In my case it can contain 15 entries: ""Backlight: X"", thats all. 13 x 15 = 195 and debuglog size = 200.","Fix Windows built emulator crash at debuglog page
Fix debuglog circularity at debuglog page. Debuglog entries repeated 2, 3, 4... times at debuglog screen, depending from length of entries.

Now it is clear that the size of the debuglog is too small. It can contain very limited number of entries.
In my case it can contain 15 entries: ""Backlight: X"", thats all. 13 x 15 = 195 and debuglog size = 200.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,211,2017-03-07T09:12:55Z,2017-03-09T04:05:13Z,2017-03-09T04:05:13Z,MERGED,True,12,7,1,https://github.com/vladislavy,Fix debuglog page,1,[],https://github.com/DeviationTX/deviation/pull/211,https://github.com/vladislavy,2,https://github.com/DeviationTX/deviation/pull/211#issuecomment-284836960,"Fix Windows built emulator crash at debuglog page
Fix debuglog circularity at debuglog page. Debuglog entries repeated 2, 3, 4... times at debuglog screen, depending from length of entries.

Now it is clear that the size of the debuglog is too small. It can contain very limited number of entries.
In my case it can contain 15 entries: ""Backlight: X"", thats all. 13 x 15 = 195 and debuglog size = 200.","About debuglog size? I think more useful will be about 400 - 500. But I don't know why now it limited to 255. ctassert((DEBUG_WINDOW_SIZE < 255), debug_window_size_too_big);
May be it is devo7e limitation?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,211,2017-03-07T09:12:55Z,2017-03-09T04:05:13Z,2017-03-09T04:05:13Z,MERGED,True,12,7,1,https://github.com/vladislavy,Fix debuglog page,1,[],https://github.com/DeviationTX/deviation/pull/211,https://github.com/vladislavy,3,https://github.com/DeviationTX/deviation/pull/211#issuecomment-284954140,"Fix Windows built emulator crash at debuglog page
Fix debuglog circularity at debuglog page. Debuglog entries repeated 2, 3, 4... times at debuglog screen, depending from length of entries.

Now it is clear that the size of the debuglog is too small. It can contain very limited number of entries.
In my case it can contain 15 entries: ""Backlight: X"", thats all. 13 x 15 = 195 and debuglog size = 200.","OK, we can decrease NUM_ROWS 20 in order to not have empty lines with numbers on the screen. Why we need scroll for debuglog with 4-5 entries. Most debug messages are quite long.
Or do nothing and leave it as is.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,212,2017-03-07T19:49:55Z,2017-03-07T20:36:36Z,2017-03-07T20:36:47Z,CLOSED,False,2,2,2,https://github.com/F-D-R,Aligning the DebugLog left by using the LABEL_FONT,1,[],https://github.com/DeviationTX/deviation/pull/212,https://github.com/F-D-R,1,https://github.com/DeviationTX/deviation/pull/212,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,212,2017-03-07T19:49:55Z,2017-03-07T20:36:36Z,2017-03-07T20:36:47Z,CLOSED,False,2,2,2,https://github.com/F-D-R,Aligning the DebugLog left by using the LABEL_FONT,1,[],https://github.com/DeviationTX/deviation/pull/212,https://github.com/F-D-R,2,https://github.com/DeviationTX/deviation/pull/212#issuecomment-284850768,,I will rather create a new font type for the read only lists...,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,213,2017-03-07T21:48:29Z,2017-03-08T05:08:57Z,2017-03-08T05:11:12Z,MERGED,True,39,43,16,https://github.com/F-D-R,Creating LIST_FONT and removing MICRO_FONT,2,[],https://github.com/DeviationTX/deviation/pull/213,https://github.com/F-D-R,1,https://github.com/DeviationTX/deviation/pull/213,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,214,2017-03-08T06:02:33Z,2017-03-08T09:48:40Z,2017-03-08T09:48:40Z,MERGED,True,18,8,3,https://github.com/vladislavy,"Fix ""load layout"" for 320x240x16 GUI",1,[],https://github.com/DeviationTX/deviation/pull/214,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/214,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,215,2017-03-10T15:06:57Z,2017-03-10T16:24:42Z,2017-03-10T16:25:43Z,MERGED,True,1687,1685,2,https://github.com/F-D-R,Unix style line endings for all files,2,[],https://github.com/DeviationTX/deviation/pull/215,https://github.com/F-D-R,1,https://github.com/DeviationTX/deviation/pull/215,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,216,2017-03-10T16:53:42Z,2017-03-11T08:24:20Z,2017-03-11T08:24:20Z,MERGED,True,5,3,1,https://github.com/vladislavy,Fix TW8816_ReinitPixelClock(),1,[],https://github.com/DeviationTX/deviation/pull/216,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/216,"Previous version overwrite ""Flat Panel Horizontal Synchronization Period"" settings, if it changed.","Previous version overwrite ""Flat Panel Horizontal Synchronization Period"" settings, if it changed.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,217,2017-03-16T07:05:54Z,2017-03-16T11:06:41Z,2017-03-16T11:06:41Z,MERGED,True,7,2,2,https://github.com/petsmiths,Added a FrskyX protocol option to send RSSI back to receiver via last…,1,[],https://github.com/DeviationTX/deviation/pull/217,https://github.com/petsmiths,1,https://github.com/DeviationTX/deviation/pull/217,"… RC channel
Some of the popular FrskyX receivers, such as XSR, X4R, etc, can't send RSSI to FC.  I've added a protocol option to send RSSI back to receiver via the last RC channel.  The RSSI can then be used by FC to display on OSD.  The maximum protocol option has been increased from 4 to 5 due to FrskyX has reached the max.","… RC channel
Some of the popular FrskyX receivers, such as XSR, X4R, etc, can't send RSSI to FC.  I've added a protocol option to send RSSI back to receiver via the last RC channel.  The RSSI can then be used by FC to display on OSD.  The maximum protocol option has been increased from 4 to 5 due to FrskyX has reached the max.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,218,2017-03-17T01:15:21Z,2017-04-01T15:21:35Z,2017-04-01T15:21:35Z,MERGED,True,2520,107,88,https://github.com/TheRealMoeder,Introducing the vastly improved voice alert and voice menu feature,118,[],https://github.com/DeviationTX/deviation/pull/218,https://github.com/TheRealMoeder,1,https://github.com/DeviationTX/deviation/pull/218,based on the initial work by MWM and phantom-8,based on the initial work by MWM and phantom-8,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,218,2017-03-17T01:15:21Z,2017-04-01T15:21:35Z,2017-04-01T15:21:35Z,MERGED,True,2520,107,88,https://github.com/TheRealMoeder,Introducing the vastly improved voice alert and voice menu feature,118,[],https://github.com/DeviationTX/deviation/pull/218,https://github.com/TheRealMoeder,2,https://github.com/DeviationTX/deviation/pull/218#issuecomment-289854171,based on the initial work by MWM and phantom-8,what do you suggest?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,220,2017-03-19T16:18:22Z,2017-03-19T16:35:05Z,2017-03-19T16:35:05Z,MERGED,True,220,7,8,https://github.com/vladislavy,Add Multi-standard video support to Devo F12E,1,[],https://github.com/DeviationTX/deviation/pull/220,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/220,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,221,2017-03-19T16:42:00Z,2017-03-19T16:52:11Z,2017-03-19T16:52:11Z,MERGED,True,9,1,1,https://github.com/vladislavy,More safe TW8816 index page processing,1,[],https://github.com/DeviationTX/deviation/pull/221,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/221,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,222,2017-03-20T04:03:42Z,2017-03-20T06:29:40Z,2017-03-20T06:29:40Z,MERGED,True,1,1,1,https://github.com/vladislavy,"Fix select ""PAL 60"" standard for Devo F12E",1,[],https://github.com/DeviationTX/deviation/pull/222,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/222,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,223,2017-03-21T00:29:47Z,2017-03-21T06:45:02Z,2019-03-05T00:09:52Z,MERGED,True,35,2,2,https://github.com/goebish,Add Fayee FY805 format to MT99xx protocol,4,[],https://github.com/DeviationTX/deviation/pull/223,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/223,"Add Fayee FY805 format to MT99xx protocol, ported from MULTI-Module.
Channel 6: flips
Channel 9: headless
Forums thread: https://www.deviationtx.com/forum/protocol-development/5329-fayee-fy805-captures","Add Fayee FY805 format to MT99xx protocol, ported from MULTI-Module.
Channel 6: flips
Channel 9: headless
Forums thread: https://www.deviationtx.com/forum/protocol-development/5329-fayee-fy805-captures",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,223,2017-03-21T00:29:47Z,2017-03-21T06:45:02Z,2019-03-05T00:09:52Z,MERGED,True,35,2,2,https://github.com/goebish,Add Fayee FY805 format to MT99xx protocol,4,[],https://github.com/DeviationTX/deviation/pull/223,https://github.com/TheRealMoeder,2,https://github.com/DeviationTX/deviation/pull/223#issuecomment-287990911,"Add Fayee FY805 format to MT99xx protocol, ported from MULTI-Module.
Channel 6: flips
Channel 9: headless
Forums thread: https://www.deviationtx.com/forum/protocol-development/5329-fayee-fy805-captures",Maybe update deviation-manual as well...,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,223,2017-03-21T00:29:47Z,2017-03-21T06:45:02Z,2019-03-05T00:09:52Z,MERGED,True,35,2,2,https://github.com/goebish,Add Fayee FY805 format to MT99xx protocol,4,[],https://github.com/DeviationTX/deviation/pull/223,https://github.com/goebish,3,https://github.com/DeviationTX/deviation/pull/223#issuecomment-288019447,"Add Fayee FY805 format to MT99xx protocol, ported from MULTI-Module.
Channel 6: flips
Channel 9: headless
Forums thread: https://www.deviationtx.com/forum/protocol-development/5329-fayee-fy805-captures","Yes I'll update the manual and wiki as well, they're a few protocols late.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,224,2017-03-21T08:52:43Z,2017-03-21T08:55:07Z,2017-03-21T08:55:07Z,MERGED,True,34,1,1,https://github.com/vladislavy,"Add Fayee FY805 format to MT99xx protocol, from goebish",1,[],https://github.com/DeviationTX/deviation/pull/224,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/224,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,225,2017-03-21T09:42:10Z,2017-03-21T09:44:38Z,2017-03-21T09:44:38Z,MERGED,True,1,0,1,https://github.com/vladislavy,Fix emulator build warning for FrskyX,1,[],https://github.com/DeviationTX/deviation/pull/225,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/225,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,226,2017-03-21T10:10:38Z,2017-03-21T10:13:17Z,2017-03-21T10:13:17Z,MERGED,True,88,61,7,https://github.com/vladislavy,Fix text GUI,1,[],https://github.com/DeviationTX/deviation/pull/226,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/226,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,227,2017-03-21T10:20:03Z,2017-03-21T10:23:23Z,2017-03-21T10:23:24Z,MERGED,True,4,15,1,https://github.com/vladislavy,Fix read PBM file header,1,[],https://github.com/DeviationTX/deviation/pull/227,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/227,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,228,2017-03-21T10:48:45Z,2017-03-21T10:51:31Z,2017-03-21T10:51:31Z,MERGED,True,5,2,1,https://github.com/vladislavy,Fix XY-graph overlay Splash page for Devo F12E,1,[],https://github.com/DeviationTX/deviation/pull/228,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/228,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,229,2017-03-21T11:27:55Z,2017-03-21T11:30:32Z,2017-03-21T11:30:32Z,MERGED,True,12,7,1,https://github.com/vladislavy,Fix debuglog page,1,[],https://github.com/DeviationTX/deviation/pull/229,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/229,"Fix Windows built emulator crash at debuglog page
Fix debuglog circularity at debuglog page. Debuglog entries repeated 2, 3, 4... times at debuglog screen, depending from length of entries.","Fix Windows built emulator crash at debuglog page
Fix debuglog circularity at debuglog page. Debuglog entries repeated 2, 3, 4... times at debuglog screen, depending from length of entries.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,230,2017-03-22T06:54:38Z,2017-03-22T06:57:01Z,2017-03-22T06:57:01Z,MERGED,True,173,577,17,https://github.com/vladislavy,Fix text GUI pages,7,[],https://github.com/DeviationTX/deviation/pull/230,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/230,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,231,2017-03-22T07:27:20Z,2017-03-22T07:30:00Z,2017-03-22T07:30:00Z,MERGED,True,3,2,1,https://github.com/vladislavy,"Fix ""text"" GUI ""Standard"" - DR can't be greater 100%",1,[],https://github.com/DeviationTX/deviation/pull/231,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/231,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,232,2017-03-22T10:23:11Z,2017-03-22T10:26:13Z,2017-03-22T10:26:13Z,MERGED,True,113,350,11,https://github.com/vladislavy,Fix text GUI pages,6,[],https://github.com/DeviationTX/deviation/pull/232,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/232,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,233,2017-03-22T11:56:38Z,2017-03-22T11:59:18Z,2017-03-22T11:59:18Z,MERGED,True,70,136,10,https://github.com/vladislavy,Fix text GUI pages,3,[],https://github.com/DeviationTX/deviation/pull/233,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/233,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,234,2017-03-22T14:19:35Z,2017-03-22T14:35:41Z,2017-03-22T14:35:41Z,MERGED,True,176,38,13,https://github.com/vladislavy,Fix text GUI pages,9,[],https://github.com/DeviationTX/deviation/pull/234,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/234,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,235,2017-03-22T14:43:10Z,2017-03-22T15:09:18Z,2017-03-22T15:09:18Z,MERGED,True,238,9,11,https://github.com/vladislavy,Add Multi-standard video support to Devo F12E,2,[],https://github.com/DeviationTX/deviation/pull/235,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/235,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,238,2017-03-23T13:20:39Z,2017-03-23T19:10:08Z,2017-03-24T07:19:03Z,MERGED,True,2,2,2,https://github.com/F-D-R,Correcting underline for center and right aligned labels,1,[],https://github.com/DeviationTX/deviation/pull/238,https://github.com/F-D-R,1,https://github.com/DeviationTX/deviation/pull/238,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,239,2017-03-23T16:40:42Z,2017-03-23T16:43:45Z,2017-03-23T16:43:45Z,MERGED,True,83,230,4,https://github.com/vladislavy,Fix text GUI pages,2,[],https://github.com/DeviationTX/deviation/pull/239,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/239,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,240,2017-03-23T16:51:44Z,2017-03-23T16:54:27Z,2017-03-23T16:54:27Z,MERGED,True,135,50,4,https://github.com/vladislavy,"Fix text GUI ""Listbox""",1,[],https://github.com/DeviationTX/deviation/pull/240,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/240,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,241,2017-03-23T21:50:28Z,2017-03-24T06:17:36Z,2017-03-24T06:17:36Z,MERGED,True,312,0,3,https://github.com/goebish,Add EAchine DM002 protocol,5,[],https://github.com/DeviationTX/deviation/pull/241,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/241,"Add EAchine DM002 protocol
Protocol name: DM002
Mapping:
Channel 5: Leds
Channel 6: Flip
Channel 7: video record (feature is in the stock Tx, however the DM002 does not have a recording camera)
Channel 8: camera snapshot (same)
Channel 9: Headless
Channel 10: RTH
There are only 2 hardcoded transmitter IDs, choosing an even or odd transmitter ID in deviation switch between them.
Forums thread: https://www.deviationtx.com/forum/protocol-development/6975-dm002-protocol-contains-captures","Add EAchine DM002 protocol
Protocol name: DM002
Mapping:
Channel 5: Leds
Channel 6: Flip
Channel 7: video record (feature is in the stock Tx, however the DM002 does not have a recording camera)
Channel 8: camera snapshot (same)
Channel 9: Headless
Channel 10: RTH
There are only 2 hardcoded transmitter IDs, choosing an even or odd transmitter ID in deviation switch between them.
Forums thread: https://www.deviationtx.com/forum/protocol-development/6975-dm002-protocol-contains-captures",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,242,2017-03-25T08:32:55Z,2017-03-25T22:17:40Z,2017-03-25T22:17:40Z,MERGED,True,29,10,2,https://github.com/vladislavy,"Fix text GUI ""Trims"" page",1,[],https://github.com/DeviationTX/deviation/pull/242,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/242,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,243,2017-03-27T07:29:11Z,2017-03-27T08:22:20Z,2017-03-27T08:22:20Z,MERGED,True,2,2,1,https://github.com/vladislavy,Fix GUI_DrawXYGraph(),1,[],https://github.com/DeviationTX/deviation/pull/243,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/243,GUI_DrawXYGraph() has miscalculation for point and axis position.,GUI_DrawXYGraph() has miscalculation for point and axis position.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,244,2017-03-27T08:12:01Z,2017-03-27T08:58:09Z,2017-03-27T08:58:09Z,MERGED,True,8,8,2,https://github.com/vladislavy,Fix XY-graph scaling for 128x64x1 GUI,1,[],https://github.com/DeviationTX/deviation/pull/244,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/244,"With corrected scaling XY-graph has more nice look (straight line) with ""Scale=125%"".","With corrected scaling XY-graph has more nice look (straight line) with ""Scale=125%"".",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,245,2017-03-27T08:35:50Z,2017-03-27T08:51:02Z,2017-03-27T08:51:02Z,MERGED,True,2,2,1,https://github.com/vladislavy,Fix GUI_DrawXYGraph(),1,[],https://github.com/DeviationTX/deviation/pull/245,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/245,GUI_DrawXYGraph() has miscalculation for point and axis position.,GUI_DrawXYGraph() has miscalculation for point and axis position.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,245,2017-03-27T08:35:50Z,2017-03-27T08:51:02Z,2017-03-27T08:51:02Z,MERGED,True,2,2,1,https://github.com/vladislavy,Fix GUI_DrawXYGraph(),1,[],https://github.com/DeviationTX/deviation/pull/245,https://github.com/vladislavy,2,https://github.com/DeviationTX/deviation/pull/245#issuecomment-289392125,GUI_DrawXYGraph() has miscalculation for point and axis position.,Incorrect width calculation for numerator. Calculation for denominator is right.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,246,2017-03-27T09:03:43Z,2017-03-27T09:20:51Z,2017-03-27T09:20:51Z,MERGED,True,8,8,2,https://github.com/vladislavy,Fix XY-graph scaling for 128x64x1 GUI,1,[],https://github.com/DeviationTX/deviation/pull/246,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/246,"With corrected scaling XY-graph has more nice look (straight line) with ""Scale=125%"".","With corrected scaling XY-graph has more nice look (straight line) with ""Scale=125%"".",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,247,2017-03-27T17:30:21Z,2017-03-28T06:04:15Z,2017-03-28T06:04:15Z,MERGED,True,1,0,1,https://github.com/vladislavy,Disable screen dimmer function if video enabled and vice versa,1,[],https://github.com/DeviationTX/deviation/pull/247,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/247,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,250,2017-03-28T20:48:12Z,2017-04-03T13:19:26Z,2017-04-03T13:19:26Z,CLOSED,False,12,10,5,https://github.com/TheRealMoeder,Add Saving music for color GUI,1,[],https://github.com/DeviationTX/deviation/pull/250,https://github.com/TheRealMoeder,1,https://github.com/DeviationTX/deviation/pull/250,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,250,2017-03-28T20:48:12Z,2017-04-03T13:19:26Z,2017-04-03T13:19:26Z,CLOSED,False,12,10,5,https://github.com/TheRealMoeder,Add Saving music for color GUI,1,[],https://github.com/DeviationTX/deviation/pull/250,https://github.com/TheRealMoeder,2,https://github.com/DeviationTX/deviation/pull/250#issuecomment-290444466,,"It's played whenever you need to press save (b&w)  /ok(color) or else the changes will not be saved, in mixer setup. Changing for example transmitter configuration  gets always saved when exiting the menu, so we have to differentiate. Either this or we completely remove play music saving for all screens",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,250,2017-03-28T20:48:12Z,2017-04-03T13:19:26Z,2017-04-03T13:19:26Z,CLOSED,False,12,10,5,https://github.com/TheRealMoeder,Add Saving music for color GUI,1,[],https://github.com/DeviationTX/deviation/pull/250,https://github.com/F-D-R,3,https://github.com/DeviationTX/deviation/pull/250#issuecomment-290466161,,"But still, those changes are not yet saved then.
I don't see too much value in that, because the problem usually is that some people doesn't recognize there is a Save/OK button at all, so they exit without saving...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,250,2017-03-28T20:48:12Z,2017-04-03T13:19:26Z,2017-04-03T13:19:26Z,CLOSED,False,12,10,5,https://github.com/TheRealMoeder,Add Saving music for color GUI,1,[],https://github.com/DeviationTX/deviation/pull/250,https://github.com/TheRealMoeder,4,https://github.com/DeviationTX/deviation/pull/250#issuecomment-290927716,,"I agree, shouldn't we then do the opposite and remove MUSIC_SAVING from B&W screens as well?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,250,2017-03-28T20:48:12Z,2017-04-03T13:19:26Z,2017-04-03T13:19:26Z,CLOSED,False,12,10,5,https://github.com/TheRealMoeder,Add Saving music for color GUI,1,[],https://github.com/DeviationTX/deviation/pull/250,https://github.com/F-D-R,5,https://github.com/DeviationTX/deviation/pull/250#issuecomment-290934698,,"If you ask me, yes we should, just to be consistent across the whole Devo line...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,250,2017-03-28T20:48:12Z,2017-04-03T13:19:26Z,2017-04-03T13:19:26Z,CLOSED,False,12,10,5,https://github.com/TheRealMoeder,Add Saving music for color GUI,1,[],https://github.com/DeviationTX/deviation/pull/250,https://github.com/TheRealMoeder,6,https://github.com/DeviationTX/deviation/pull/250#issuecomment-291140126,,Agreed.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,251,2017-03-30T12:59:08Z,2017-03-30T15:17:07Z,2017-03-30T15:17:08Z,MERGED,True,1,1,1,https://github.com/vladislavy,Reverse AUX4 and AUX6 inputs to be uniform with Devo12,1,[],https://github.com/DeviationTX/deviation/pull/251,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/251,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,252,2017-03-31T21:15:00Z,2017-04-02T15:18:20Z,2017-04-02T15:18:20Z,MERGED,True,166,41,2,https://github.com/theseankelly,cflie_nrf24l01 protocol support for CPPM CRTP commander type,1,[],https://github.com/DeviationTX/deviation/pull/252,https://github.com/theseankelly,1,https://github.com/DeviationTX/deviation/pull/252,Adding support for a new packet type for the Crazyflie 2.0 -- CPPM emulation via the NRF radio. Allows for flexible channel support and re-mapping. Eliminates need to hardcode max angle/rates in the deviation protocol code.,Adding support for a new packet type for the Crazyflie 2.0 -- CPPM emulation via the NRF radio. Allows for flexible channel support and re-mapping. Eliminates need to hardcode max angle/rates in the deviation protocol code.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,252,2017-03-31T21:15:00Z,2017-04-02T15:18:20Z,2017-04-02T15:18:20Z,MERGED,True,166,41,2,https://github.com/theseankelly,cflie_nrf24l01 protocol support for CPPM CRTP commander type,1,[],https://github.com/DeviationTX/deviation/pull/252,https://github.com/theseankelly,2,https://github.com/DeviationTX/deviation/pull/252#issuecomment-290922105,Adding support for a new packet type for the Crazyflie 2.0 -- CPPM emulation via the NRF radio. Allows for flexible channel support and re-mapping. Eliminates need to hardcode max angle/rates in the deviation protocol code.,"Definitely will scrub tabs -- I never use tabs on purpose unless the coding convention calls for them. My mistake.
Will add documentation as well",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,252,2017-03-31T21:15:00Z,2017-04-02T15:18:20Z,2017-04-02T15:18:20Z,MERGED,True,166,41,2,https://github.com/theseankelly,cflie_nrf24l01 protocol support for CPPM CRTP commander type,1,[],https://github.com/DeviationTX/deviation/pull/252,https://github.com/theseankelly,3,https://github.com/DeviationTX/deviation/pull/252#issuecomment-290942261,Adding support for a new packet type for the Crazyflie 2.0 -- CPPM emulation via the NRF radio. Allows for flexible channel support and re-mapping. Eliminates need to hardcode max angle/rates in the deviation protocol code.,"Docs added, found one tab and removed it.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,252,2017-03-31T21:15:00Z,2017-04-02T15:18:20Z,2017-04-02T15:18:20Z,MERGED,True,166,41,2,https://github.com/theseankelly,cflie_nrf24l01 protocol support for CPPM CRTP commander type,1,[],https://github.com/DeviationTX/deviation/pull/252,https://github.com/F-D-R,4,https://github.com/DeviationTX/deviation/pull/252#issuecomment-290942812,Adding support for a new packet type for the Crazyflie 2.0 -- CPPM emulation via the NRF radio. Allows for flexible channel support and re-mapping. Eliminates need to hardcode max angle/rates in the deviation protocol code.,"I've found a lot more in this block:
static u8 toc_size;				// Size of the TOC read from the crazyflie static u8 next_toc_variable;	// State variable keeping track of the next var to read static u8 vbat_var_id;			// ID of the vbatMV variable static u8 extvbat_var_id;		// ID of the extVbatMV variable 
...but yes, that one was which I spotted first.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,252,2017-03-31T21:15:00Z,2017-04-02T15:18:20Z,2017-04-02T15:18:20Z,MERGED,True,166,41,2,https://github.com/theseankelly,cflie_nrf24l01 protocol support for CPPM CRTP commander type,1,[],https://github.com/DeviationTX/deviation/pull/252,https://github.com/theseankelly,5,https://github.com/DeviationTX/deviation/pull/252#issuecomment-290955311,Adding support for a new packet type for the Crazyflie 2.0 -- CPPM emulation via the NRF radio. Allows for flexible channel support and re-mapping. Eliminates need to hardcode max angle/rates in the deviation protocol code.,Gotcha. I missed that 'cuz it's from a previous commit and was using 'git diff' to find the tabs. Scrubbed the whole file for '\t' and I believe I've got them all now.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,252,2017-03-31T21:15:00Z,2017-04-02T15:18:20Z,2017-04-02T15:18:20Z,MERGED,True,166,41,2,https://github.com/theseankelly,cflie_nrf24l01 protocol support for CPPM CRTP commander type,1,[],https://github.com/DeviationTX/deviation/pull/252,https://github.com/TheRealMoeder,6,https://github.com/DeviationTX/deviation/pull/252#issuecomment-290971160,Adding support for a new packet type for the Crazyflie 2.0 -- CPPM emulation via the NRF radio. Allows for flexible channel support and re-mapping. Eliminates need to hardcode max angle/rates in the deviation protocol code.,Although I actually meant documentation in deviation-manual. But we now it can be easily added there as well,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,253,2017-04-02T08:16:44Z,2017-04-02T23:45:40Z,2017-04-03T06:08:50Z,MERGED,True,4,2,3,https://github.com/TheRealMoeder,"Fix compiler warning, ensure welcome message if no splash page, fix emu7e build",4,[],https://github.com/DeviationTX/deviation/pull/253,https://github.com/TheRealMoeder,1,https://github.com/DeviationTX/deviation/pull/253,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,253,2017-04-02T08:16:44Z,2017-04-02T23:45:40Z,2017-04-03T06:08:50Z,MERGED,True,4,2,3,https://github.com/TheRealMoeder,"Fix compiler warning, ensure welcome message if no splash page, fix emu7e build",4,[],https://github.com/DeviationTX/deviation/pull/253,https://github.com/vladislavy,2,https://github.com/DeviationTX/deviation/pull/253#issuecomment-290987068,,"There is not sense to have separate case for default, it's only for compiler do not think that possible to have vpt unassigned. At any case VOICE_SRC_MIXER will be default, but compiler don't know about it.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,253,2017-04-02T08:16:44Z,2017-04-02T23:45:40Z,2017-04-03T06:08:50Z,MERGED,True,4,2,3,https://github.com/TheRealMoeder,"Fix compiler warning, ensure welcome message if no splash page, fix emu7e build",4,[],https://github.com/DeviationTX/deviation/pull/253,https://github.com/TheRealMoeder,3,https://github.com/DeviationTX/deviation/pull/253#issuecomment-291004263,,"Updated pull request, I guess this is now the most reasonable and memory sparing approach ;)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,253,2017-04-02T08:16:44Z,2017-04-02T23:45:40Z,2017-04-03T06:08:50Z,MERGED,True,4,2,3,https://github.com/TheRealMoeder,"Fix compiler warning, ensure welcome message if no splash page, fix emu7e build",4,[],https://github.com/DeviationTX/deviation/pull/253,https://github.com/TheRealMoeder,4,https://github.com/DeviationTX/deviation/pull/253#issuecomment-291045544,,"No it won't, because voice even without menu does by far not fit on the 7e, unless we exclude standard mixer gui",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,253,2017-04-02T08:16:44Z,2017-04-02T23:45:40Z,2017-04-03T06:08:50Z,MERGED,True,4,2,3,https://github.com/TheRealMoeder,"Fix compiler warning, ensure welcome message if no splash page, fix emu7e build",4,[],https://github.com/DeviationTX/deviation/pull/253,https://github.com/F-D-R,5,https://github.com/DeviationTX/deviation/pull/253#issuecomment-291056213,,"I see, thanks...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,254,2017-04-03T04:41:36Z,2017-04-03T04:43:52Z,2017-04-03T04:43:52Z,MERGED,True,179,54,14,https://github.com/vladislavy,cflie_nrf24l01 protocol support for CPPM CRTP commander type,1,[],https://github.com/DeviationTX/deviation/pull/254,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/254,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,255,2017-04-03T13:22:40Z,2017-04-03T14:22:35Z,2017-04-03T14:22:35Z,MERGED,True,6,6,1,https://github.com/TheRealMoeder,change travis matrix to zips,2,[],https://github.com/DeviationTX/deviation/pull/255,https://github.com/TheRealMoeder,1,https://github.com/DeviationTX/deviation/pull/255,to truly check build process before nightly builds,to truly check build process before nightly builds,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,255,2017-04-03T13:22:40Z,2017-04-03T14:22:35Z,2017-04-03T14:22:35Z,MERGED,True,6,6,1,https://github.com/TheRealMoeder,change travis matrix to zips,2,[],https://github.com/DeviationTX/deviation/pull/255,https://github.com/TheRealMoeder,2,https://github.com/DeviationTX/deviation/pull/255#issuecomment-291158105,to truly check build process before nightly builds,Since this is the  definite fix (see Travis logs) I will go ahead and merge  so we have nightlies back tomorrow...,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,256,2017-04-03T16:08:37Z,2017-04-03T19:04:19Z,2017-04-03T19:04:19Z,MERGED,True,1,1,1,https://github.com/vladislavy,Fix devof12e main page for countdown timer with negative value,1,[],https://github.com/DeviationTX/deviation/pull/256,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/256,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,257,2017-04-06T04:08:23Z,2017-04-06T07:11:27Z,2017-04-06T07:11:27Z,MERGED,True,1,0,1,https://github.com/vladislavy,Fix no button inputs after renaming mixer,1,[],https://github.com/DeviationTX/deviation/pull/257,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/257,https://www.deviationtx.com/forum/7-development/7008-devo-12s-no-button-inputs-after-renaming-mixer#61205,https://www.deviationtx.com/forum/7-development/7008-devo-12s-no-button-inputs-after-renaming-mixer#61205,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,258,2017-04-07T05:05:37Z,2017-04-07T07:25:01Z,2017-04-07T07:25:01Z,MERGED,True,8,2,2,https://github.com/vladislavy,Complete fix no button inputs after renaming mixer,1,[],https://github.com/DeviationTX/deviation/pull/258,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/258,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,259,2017-04-10T18:20:15Z,2017-04-13T07:21:55Z,2017-04-13T07:21:55Z,MERGED,True,33,1,2,https://github.com/F-D-R,Hungarian language changes,2,[],https://github.com/DeviationTX/deviation/pull/259,https://github.com/F-D-R,1,https://github.com/DeviationTX/deviation/pull/259,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,259,2017-04-10T18:20:15Z,2017-04-13T07:21:55Z,2017-04-13T07:21:55Z,MERGED,True,33,1,2,https://github.com/F-D-R,Hungarian language changes,2,[],https://github.com/DeviationTX/deviation/pull/259,https://github.com/TheRealMoeder,2,https://github.com/DeviationTX/deviation/pull/259#issuecomment-293044181,,"The build for devo12 fails because not enough lines are allocated:
ERROR: Not enough stringspace allocated: filesystem/devo12/language/lang.afr:   360 lines,  3792 bytes,  118 bytes/line filesystem/devo12/language/lang.cn :   254 lines,  2985 bytes,  111 bytes/line filesystem/devo12/language/lang.dut:   156 lines,  1656 bytes,  146 bytes/line filesystem/devo12/language/lang.es :   229 lines,  2769 bytes,  167 bytes/line filesystem/devo12/language/lang.fr :   257 lines,  2988 bytes,  141 bytes/line filesystem/devo12/language/lang.ger:   335 lines,  4035 bytes,  155 bytes/line filesystem/devo12/language/lang.hu :   433 lines,  5192 bytes,  184 bytes/line filesystem/devo12/language/lang.it :   280 lines,  3376 bytes,  154 bytes/line filesystem/devo12/language/lang.ro :   357 lines,  3941 bytes,  167 bytes/line filesystem/devo12/language/lang.ru :   360 lines,  7269 bytes,  267 bytes/line filesystem/devo12/language/lang.tw :   253 lines,  3084 bytes,  109 bytes/line devo12                             :     1 lines filesystem/devo12                  :   433 lines,  7269 bytes,  267 bytes/line Total                              :   433 lines,  7269 bytes,  267 bytes/line Allocated                          :   430 lines,  8192 bytes,  300 bytes/line",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,259,2017-04-10T18:20:15Z,2017-04-13T07:21:55Z,2017-04-13T07:21:55Z,MERGED,True,33,1,2,https://github.com/F-D-R,Hungarian language changes,2,[],https://github.com/DeviationTX/deviation/pull/259,https://github.com/F-D-R,3,https://github.com/DeviationTX/deviation/pull/259#issuecomment-293071643,,"Yep, I realized that, and increased the string count.
I hope it will still fit in...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,260,2017-04-13T14:17:17Z,2017-04-14T00:01:43Z,2017-04-14T00:01:43Z,MERGED,True,16,20,1,https://github.com/vladislavy,Fix LCD dimensions for Devo F7 and Devo F4 (24x12),1,[],https://github.com/DeviationTX/deviation/pull/260,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/260,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,261,2017-04-19T19:47:35Z,2017-05-16T06:11:03Z,2017-05-16T06:11:20Z,MERGED,True,4,4,1,https://github.com/mwm,Fix  4ch_dr.ini template,2,[],https://github.com/DeviationTX/deviation/pull/261,https://github.com/mwm,1,https://github.com/DeviationTX/deviation/pull/261,Fix SRC for first mixer in AIL & ELE channels .,Fix SRC for first mixer in AIL & ELE channels .,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,261,2017-04-19T19:47:35Z,2017-05-16T06:11:03Z,2017-05-16T06:11:20Z,MERGED,True,4,4,1,https://github.com/mwm,Fix  4ch_dr.ini template,2,[],https://github.com/DeviationTX/deviation/pull/261,https://github.com/vladislavy,2,https://github.com/DeviationTX/deviation/pull/261#issuecomment-295580667,Fix SRC for first mixer in AIL & ELE channels .,"Most likely it has to be:
[channel1]
template=expo_dr
[mixer]
src=ELE
dest=CH1
[mixer]
src=ELE
dest=CH1
switch=ELE_DR
scalar=60

[channel2]
template=expo_dr
[mixer]
src=AIL
dest=CH2
[mixer]
src=AIL
dest=CH2
switch=AIL_DR
scalar=60",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,262,2017-04-21T01:41:18Z,2017-04-21T07:32:13Z,2017-04-21T07:32:13Z,MERGED,True,6,4,1,https://github.com/silver13,Added extra channel for bayang protocol,2,[],https://github.com/DeviationTX/deviation/pull/262,https://github.com/silver13,1,https://github.com/DeviationTX/deviation/pull/262,"This is the ""emergency stop channel"" which works on the boldclash b-03 quad. Because of the altitude hold, this is needed if the quad fails to detect landing. Uses channel 12.
There are 2 other channels which are not implemented due to lack of room ( all 12 channels are used ) they are auto takeoff/land and ""heavy lift mode"" whatever that is, not as important as stop channel.
Tested on 7e
A new model file needs to be made because the number of channels is saved in it, and this is channel 12, it won't show otherwise.
The quad acts on channel change only.","This is the ""emergency stop channel"" which works on the boldclash b-03 quad. Because of the altitude hold, this is needed if the quad fails to detect landing. Uses channel 12.
There are 2 other channels which are not implemented due to lack of room ( all 12 channels are used ) they are auto takeoff/land and ""heavy lift mode"" whatever that is, not as important as stop channel.
Tested on 7e
A new model file needs to be made because the number of channels is saved in it, and this is channel 12, it won't show otherwise.
The quad acts on channel change only.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,263,2017-05-03T18:35:44Z,2017-05-03T19:32:07Z,2017-05-03T19:32:07Z,MERGED,True,1,1,1,https://github.com/TheRealMoeder,Increase number of custom mp3 files,1,[],https://github.com/DeviationTX/deviation/pull/263,https://github.com/TheRealMoeder,1,https://github.com/DeviationTX/deviation/pull/263,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,264,2017-05-05T20:50:40Z,2017-05-06T09:58:17Z,2017-05-06T09:58:18Z,MERGED,True,143,79,1,https://github.com/Morlacus,Update lang.fr,2,[],https://github.com/DeviationTX/deviation/pull/264,https://github.com/Morlacus,1,https://github.com/DeviationTX/deviation/pull/264,dditions to the French lanquage file. May be some texts I added are too long. I do not know if there is a limit. I corrected 2 entries which were wrong and changed 'low rate' in 'petit déb' instead of 'grand déb' and 'high rate' in 'grand déb' instead of 'petit déb'. This could puzzle french users which have already the current translation.,dditions to the French lanquage file. May be some texts I added are too long. I do not know if there is a limit. I corrected 2 entries which were wrong and changed 'low rate' in 'petit déb' instead of 'grand déb' and 'high rate' in 'grand déb' instead of 'petit déb'. This could puzzle french users which have already the current translation.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,264,2017-05-05T20:50:40Z,2017-05-06T09:58:17Z,2017-05-06T09:58:18Z,MERGED,True,143,79,1,https://github.com/Morlacus,Update lang.fr,2,[],https://github.com/DeviationTX/deviation/pull/264,https://github.com/goebish,2,https://github.com/DeviationTX/deviation/pull/264#issuecomment-299580392,dditions to the French lanquage file. May be some texts I added are too long. I do not know if there is a limit. I corrected 2 entries which were wrong and changed 'low rate' in 'petit déb' instead of 'grand déb' and 'high rate' in 'grand déb' instead of 'petit déb'. This could puzzle french users which have already the current translation.,"I'd rather use ""taux élevé"" and ""taux bas""",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,264,2017-05-05T20:50:40Z,2017-05-06T09:58:17Z,2017-05-06T09:58:18Z,MERGED,True,143,79,1,https://github.com/Morlacus,Update lang.fr,2,[],https://github.com/DeviationTX/deviation/pull/264,https://github.com/Morlacus,3,https://github.com/DeviationTX/deviation/pull/264#issuecomment-299619208,dditions to the French lanquage file. May be some texts I added are too long. I do not know if there is a limit. I corrected 2 entries which were wrong and changed 'low rate' in 'petit déb' instead of 'grand déb' and 'high rate' in 'grand déb' instead of 'petit déb'. This could puzzle french users which have already the current translation.,"In French we speak of ""Débattements"" (Déb)  for the travel   of a control surface. As concerns D/R the standard spelling are ""grand"", ""moyen"" and ""petit"" ""débattement"" The original translation were correct except an inversion between high and low which were not congruent with the english.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,264,2017-05-05T20:50:40Z,2017-05-06T09:58:17Z,2017-05-06T09:58:18Z,MERGED,True,143,79,1,https://github.com/Morlacus,Update lang.fr,2,[],https://github.com/DeviationTX/deviation/pull/264,https://github.com/goebish,4,https://github.com/DeviationTX/deviation/pull/264#issuecomment-299625113,dditions to the French lanquage file. May be some texts I added are too long. I do not know if there is a limit. I corrected 2 entries which were wrong and changed 'low rate' in 'petit déb' instead of 'grand déb' and 'high rate' in 'grand déb' instead of 'petit déb'. This could puzzle french users which have already the current translation.,"Ok, I'm French but I always set my stuffs to English language, so you're probably right ;)
However, I'll check with the emulators to make sure string lengths aren't an issue.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,264,2017-05-05T20:50:40Z,2017-05-06T09:58:17Z,2017-05-06T09:58:18Z,MERGED,True,143,79,1,https://github.com/Morlacus,Update lang.fr,2,[],https://github.com/DeviationTX/deviation/pull/264,https://github.com/Morlacus,5,https://github.com/DeviationTX/deviation/pull/264#issuecomment-299627025,dditions to the French lanquage file. May be some texts I added are too long. I do not know if there is a limit. I corrected 2 entries which were wrong and changed 'low rate' in 'petit déb' instead of 'grand déb' and 'high rate' in 'grand déb' instead of 'petit déb'. This could puzzle french users which have already the current translation.,"Ok thanks . There is one translation for which I am not very satisfied. It is for Toggle. I tried Basculant but there is possibly better translations. If the string is not too long, Icône basculant or Icône basc would may be better.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,265,2017-05-06T00:56:02Z,2017-05-08T04:46:13Z,2019-03-05T00:01:00Z,MERGED,True,57,9,1,https://github.com/goebish,AFHDS 2A telemetry update,9,[],https://github.com/DeviationTX/deviation/pull/265,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/265,"Telemetry update for Flysky/Turnigy AFHDS 2A protocol

RSSI now reported as a positive number, allowing to set an alarm (min = 60, the lower the better)
Report Link Quality as LQI (max = 100, the higher the better), probably a better indicator than RSSI
External IBUS voltage sensors support, only 1 for 7e (modular build), 2 for other platforms, VOLT2 & VOLT3
External IBUS RPM sensor support, only 1 sensor supported (not available on 7e)
Built in external voltage sensor support (IA6C, X6B RXs...), not available on 7e
External IBUS temperature sensor support, not tested, not available on 7e","Telemetry update for Flysky/Turnigy AFHDS 2A protocol

RSSI now reported as a positive number, allowing to set an alarm (min = 60, the lower the better)
Report Link Quality as LQI (max = 100, the higher the better), probably a better indicator than RSSI
External IBUS voltage sensors support, only 1 for 7e (modular build), 2 for other platforms, VOLT2 & VOLT3
External IBUS RPM sensor support, only 1 sensor supported (not available on 7e)
Built in external voltage sensor support (IA6C, X6B RXs...), not available on 7e
External IBUS temperature sensor support, not tested, not available on 7e",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,265,2017-05-06T00:56:02Z,2017-05-08T04:46:13Z,2019-03-05T00:01:00Z,MERGED,True,57,9,1,https://github.com/goebish,AFHDS 2A telemetry update,9,[],https://github.com/DeviationTX/deviation/pull/265,https://github.com/goebish,2,https://github.com/DeviationTX/deviation/pull/265#issuecomment-299738814,"Telemetry update for Flysky/Turnigy AFHDS 2A protocol

RSSI now reported as a positive number, allowing to set an alarm (min = 60, the lower the better)
Report Link Quality as LQI (max = 100, the higher the better), probably a better indicator than RSSI
External IBUS voltage sensors support, only 1 for 7e (modular build), 2 for other platforms, VOLT2 & VOLT3
External IBUS RPM sensor support, only 1 sensor supported (not available on 7e)
Built in external voltage sensor support (IA6C, X6B RXs...), not available on 7e
External IBUS temperature sensor support, not tested, not available on 7e","It can be merged now, everything is confirmed working.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,266,2017-05-07T18:52:58Z,2017-05-08T13:25:04Z,2019-03-05T00:09:58Z,MERGED,True,158,45,1,https://github.com/goebish,Add H20H format to H8_3D protocol ,4,[],https://github.com/DeviationTX/deviation/pull/266,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/266,"Add H20H format to H8_3D protocol

CH5 = motors on/off","Add H20H format to H8_3D protocol

CH5 = motors on/off",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,267,2017-05-09T06:42:24Z,2017-05-10T04:33:32Z,2017-05-10T04:33:32Z,MERGED,True,88,21,13,https://github.com/victzh,"Add AT9 save config, handle rotary encoder properly",9,[],https://github.com/DeviationTX/deviation/pull/267,https://github.com/victzh,1,https://github.com/DeviationTX/deviation/pull/267,"Added saving configuration for hard power switch TXs (AT9).
Rotary encoder define introduced, HAS_ROTARY_ENCODER
Rotary encoder handling improved: removed auto-repeat at intermediate position (really inconvenient with actual rotary encoder, not emulator), keyboard interprets rotary movement as horizontal with carry to next/prev row.","Added saving configuration for hard power switch TXs (AT9).
Rotary encoder define introduced, HAS_ROTARY_ENCODER
Rotary encoder handling improved: removed auto-repeat at intermediate position (really inconvenient with actual rotary encoder, not emulator), keyboard interprets rotary movement as horizontal with carry to next/prev row.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,268,2017-05-10T15:29:17Z,2017-05-10T15:32:05Z,2017-05-10T15:32:05Z,MERGED,True,312,0,3,https://github.com/vladislavy,"Add DM002 protocol, from  goebish",1,[],https://github.com/DeviationTX/deviation/pull/268,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/268,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,269,2017-05-13T18:55:12Z,2017-05-13T19:14:20Z,2017-05-13T19:14:20Z,MERGED,True,3,3,1,https://github.com/TheRealMoeder,Allow more than 255 voice files.,1,[],https://github.com/DeviationTX/deviation/pull/269,https://github.com/TheRealMoeder,1,https://github.com/DeviationTX/deviation/pull/269,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,270,2017-05-16T10:20:32Z,2017-05-18T16:37:45Z,2019-03-05T00:00:45Z,MERGED,True,8,0,1,https://github.com/goebish,AFHDS-2A LQI output protocol option,3,[],https://github.com/DeviationTX/deviation/pull/270,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/270,"Add a protocol option to output LQI on an AUX channel, allowing OSDs to display signal quality.
discussion: https://www.deviationtx.com/forum/protocol-development/5251-flysky-afhds-2a-protocol-as-used-i10-i6-it4?start=480#62315","Add a protocol option to output LQI on an AUX channel, allowing OSDs to display signal quality.
discussion: https://www.deviationtx.com/forum/protocol-development/5251-flysky-afhds-2a-protocol-as-used-i10-i6-it4?start=480#62315",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,271,2017-05-18T15:16:42Z,2017-05-18T16:36:40Z,2017-05-18T16:36:40Z,MERGED,True,145,69,2,https://github.com/theseankelly,CFlie: Adding 'simple' telemetry mode,1,[],https://github.com/DeviationTX/deviation/pull/271,https://github.com/theseankelly,1,https://github.com/DeviationTX/deviation/pull/271,"Added 'simple' telemetry mode that reads RSSI and VBat (if present) out
of the NRF ACK packet. This will be faster and require less overhead
than establishing a full CRTP logging session, but cannot be extended
beyond RSSI/Internal VBat.
Also did a bit of refactoring of the CRTP logging code, and added RSSI
to the logging block.","Added 'simple' telemetry mode that reads RSSI and VBat (if present) out
of the NRF ACK packet. This will be faster and require less overhead
than establishing a full CRTP logging session, but cannot be extended
beyond RSSI/Internal VBat.
Also did a bit of refactoring of the CRTP logging code, and added RSSI
to the logging block.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,272,2017-05-19T04:33:11Z,2017-05-19T04:39:23Z,2017-05-19T04:39:23Z,MERGED,True,9,1,2,https://github.com/vladislavy,"AFHDS-2A LQI output protocol option, from goebish",1,[],https://github.com/DeviationTX/deviation/pull/272,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/272,"Add a protocol option to output LQI on an AUX channel, allowing OSDs to display signal quality.
discussion: https://www.deviationtx.com/forum/protocol-development/5251-flysky-afhds-2a-protocol-as-used-i10-i6-it4?start=480#62315","Add a protocol option to output LQI on an AUX channel, allowing OSDs to display signal quality.
discussion: https://www.deviationtx.com/forum/protocol-development/5251-flysky-afhds-2a-protocol-as-used-i10-i6-it4?start=480#62315",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,273,2017-05-19T04:46:02Z,2017-05-19T04:49:04Z,2017-05-19T04:49:04Z,MERGED,True,146,70,2,https://github.com/vladislavy,"CFlie: Adding 'simple' telemetry mode, from theseankelly",1,[],https://github.com/DeviationTX/deviation/pull/273,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/273,"Added 'simple' telemetry mode that reads RSSI and VBat (if present) out
of the NRF ACK packet. This will be faster and require less overhead
than establishing a full CRTP logging session, but cannot be extended
beyond RSSI/Internal VBat.
Also did a bit of refactoring of the CRTP logging code, and added RSSI
to the logging block.","Added 'simple' telemetry mode that reads RSSI and VBat (if present) out
of the NRF ACK packet. This will be faster and require less overhead
than establishing a full CRTP logging session, but cannot be extended
beyond RSSI/Internal VBat.
Also did a bit of refactoring of the CRTP logging code, and added RSSI
to the logging block.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,274,2017-05-26T04:34:42Z,2017-05-26T10:20:50Z,2017-05-26T10:20:50Z,MERGED,True,30,24,1,https://github.com/Texacate,precompute constants to save ROM space on devo7E,1,[],https://github.com/DeviationTX/deviation/pull/274,https://github.com/Texacate,1,https://github.com/DeviationTX/deviation/pull/274,saves about 0.06kB,saves about 0.06kB,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,275,2017-05-27T08:49:05Z,2017-05-29T01:27:08Z,2019-03-05T00:09:59Z,MERGED,True,45,4,1,https://github.com/goebish,Protocol H20 Mini & H30 Mini,4,[],https://github.com/DeviationTX/deviation/pull/275,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/275,Adds H20 Mini and H30 Mini format options to the H8 3D protocol.,Adds H20 Mini and H30 Mini format options to the H8 3D protocol.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,276,2017-06-04T19:17:48Z,2017-06-04T22:28:33Z,2019-03-05T00:01:12Z,MERGED,True,1,1,1,https://github.com/goebish,Fix AFHDS-2A temperature telemetry,1,[],https://github.com/DeviationTX/deviation/pull/276,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/276,Fix AFHDS-2A temperature telemetry value,Fix AFHDS-2A temperature telemetry value,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,277,2017-06-30T17:15:46Z,2017-06-30T21:26:07Z,2017-06-30T21:26:07Z,MERGED,True,1,1,1,https://github.com/vladislavy,"Fix use of Devo12 ""mymedia\toggle3.bmp""",1,[],https://github.com/DeviationTX/deviation/pull/277,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/277,"The space character after ""mymedia/toggle3 "" break use of ""mymedia/toggle3.bmp"".","The space character after ""mymedia/toggle3 "" break use of ""mymedia/toggle3.bmp"".",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,278,2017-07-01T19:50:19Z,2017-07-03T05:21:02Z,2017-07-03T05:21:02Z,MERGED,True,6,6,1,https://github.com/TheRealMoeder,Fix decimal placing for several telemetry values,3,[],https://github.com/DeviationTX/deviation/pull/278,https://github.com/TheRealMoeder,1,https://github.com/DeviationTX/deviation/pull/278,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,279,2017-07-09T01:54:57Z,2017-07-09T07:48:47Z,2017-07-09T07:48:47Z,MERGED,True,3,1,1,https://github.com/hexfet,Improve FrskyX extended telemetry error recovery,5,[],https://github.com/DeviationTX/deviation/pull/279,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/279,Update sequence number logic to send invalid sequence indicator when invalid sequence detected. Works to resync telemetry stream more quickly.  Improves extended telemetry performance with EU firmware version.  Also tested with non-EU firmware.,Update sequence number logic to send invalid sequence indicator when invalid sequence detected. Works to resync telemetry stream more quickly.  Improves extended telemetry performance with EU firmware version.  Also tested with non-EU firmware.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,280,2017-07-16T19:28:33Z,2017-09-05T21:32:00Z,2017-09-09T20:21:43Z,MERGED,True,58,11,7,https://github.com/TheRealMoeder,Add threshold before triggering alarm beep/voice,3,[],https://github.com/DeviationTX/deviation/pull/280,https://github.com/TheRealMoeder,1,https://github.com/DeviationTX/deviation/pull/280,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,280,2017-07-16T19:28:33Z,2017-09-05T21:32:00Z,2017-09-09T20:21:43Z,MERGED,True,58,11,7,https://github.com/TheRealMoeder,Add threshold before triggering alarm beep/voice,3,[],https://github.com/DeviationTX/deviation/pull/280,https://github.com/vladislavy,2,https://github.com/DeviationTX/deviation/pull/280#issuecomment-315666533,,"I don't know how it works, but it doesn't fit to ""text"" GUI ""Telemetry Config"" page. I'm not sure it can be fitted to Devo F7 (LCD_WIDTH 24). DSMX ""Jc.RPM"" can be more than 100000.
Also, Devo F7 can't display ""@"" symbol. Maybe will be better to use ""space"" as separator.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,280,2017-07-16T19:28:33Z,2017-09-05T21:32:00Z,2017-09-09T20:21:43Z,MERGED,True,58,11,7,https://github.com/TheRealMoeder,Add threshold before triggering alarm beep/voice,3,[],https://github.com/DeviationTX/deviation/pull/280,https://github.com/vladislavy,3,https://github.com/DeviationTX/deviation/pull/280#issuecomment-315670362,,"src/pages/text/telemconfig_page.c
...
#if LCD_WIDTH == 66
//devof12e
enum {
    LABEL_X    = 0,
    LABEL_W    = 2*ITEM_SPACE,
    TEXTSEL1_X = 3*ITEM_SPACE,
    TEXTSEL1_W = 7*ITEM_SPACE,
    TEXTSEL2_X = 12*ITEM_SPACE,
    TEXTSEL2_W = 3*ITEM_SPACE,
    TEXTSEL3_X = 17*ITEM_SPACE,
    TEXTSEL3_W = 9*ITEM_SPACE,
    MSG_X      = 10*ITEM_SPACE,
    MSG_Y      = 5*ITEM_SPACE,
};
#else
enum {
    LABEL_X    = 0,
    LABEL_W    = 1*ITEM_SPACE,
    TEXTSEL1_X = 2*ITEM_SPACE,
    TEXTSEL1_W = 7*ITEM_SPACE,
    TEXTSEL2_X = 11*ITEM_SPACE,
    TEXTSEL2_W = 3*ITEM_SPACE,
    TEXTSEL3_X = 16*ITEM_SPACE,
    TEXTSEL3_W = 7*ITEM_SPACE,
    MSG_X      = 10*ITEM_SPACE,
    MSG_Y      = 5*ITEM_SPACE,
};
#endif
...


At least most of telemetry values with threshold will fit Devo F7.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,280,2017-07-16T19:28:33Z,2017-09-05T21:32:00Z,2017-09-09T20:21:43Z,MERGED,True,58,11,7,https://github.com/TheRealMoeder,Add threshold before triggering alarm beep/voice,3,[],https://github.com/DeviationTX/deviation/pull/280,https://github.com/TheRealMoeder,4,https://github.com/DeviationTX/deviation/pull/280#issuecomment-315842515,,"Sorry, I always forget about text gui...I'll take a look at the emulator.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,280,2017-07-16T19:28:33Z,2017-09-05T21:32:00Z,2017-09-09T20:21:43Z,MERGED,True,58,11,7,https://github.com/TheRealMoeder,Add threshold before triggering alarm beep/voice,3,[],https://github.com/DeviationTX/deviation/pull/280,https://github.com/vladislavy,5,https://github.com/DeviationTX/deviation/pull/280#issuecomment-323648275,,"In src/pages/128x64x1/telemconfig_page.c
#define ALARM_TH_SPACER ""@""
redefined ALARM_TH_SPACER at  src/pages/text/telemconfig_page.c
So, ALARM_TH_SPACER always is ""@""
It has to be moved up, before #endif //OVERRIDE_PLACEMENT",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,280,2017-07-16T19:28:33Z,2017-09-05T21:32:00Z,2017-09-09T20:21:43Z,MERGED,True,58,11,7,https://github.com/TheRealMoeder,Add threshold before triggering alarm beep/voice,3,[],https://github.com/DeviationTX/deviation/pull/280,https://github.com/TheRealMoeder,6,https://github.com/DeviationTX/deviation/pull/280#issuecomment-324439891,,Sorry for the lazy coding and testing! This is what happens when you're trying to help without having enough spare time ;),True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,280,2017-07-16T19:28:33Z,2017-09-05T21:32:00Z,2017-09-09T20:21:43Z,MERGED,True,58,11,7,https://github.com/TheRealMoeder,Add threshold before triggering alarm beep/voice,3,[],https://github.com/DeviationTX/deviation/pull/280,https://github.com/TheRealMoeder,7,https://github.com/DeviationTX/deviation/pull/280#issuecomment-327009281,,Anything else keeping this from having approvals? I'm happy to improve the feature.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,280,2017-07-16T19:28:33Z,2017-09-05T21:32:00Z,2017-09-09T20:21:43Z,MERGED,True,58,11,7,https://github.com/TheRealMoeder,Add threshold before triggering alarm beep/voice,3,[],https://github.com/DeviationTX/deviation/pull/280,https://github.com/F-D-R,8,https://github.com/DeviationTX/deviation/pull/280#issuecomment-327067250,,Why did the relation field become button based?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,280,2017-07-16T19:28:33Z,2017-09-05T21:32:00Z,2017-09-09T20:21:43Z,MERGED,True,58,11,7,https://github.com/TheRealMoeder,Add threshold before triggering alarm beep/voice,3,[],https://github.com/DeviationTX/deviation/pull/280,https://github.com/TheRealMoeder,9,https://github.com/DeviationTX/deviation/pull/280#issuecomment-327071243,,It has been a long time ( since commit 006efde) . You can test the alarm sound when pushing it. I will update the manual accordingly.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,280,2017-07-16T19:28:33Z,2017-09-05T21:32:00Z,2017-09-09T20:21:43Z,MERGED,True,58,11,7,https://github.com/TheRealMoeder,Add threshold before triggering alarm beep/voice,3,[],https://github.com/DeviationTX/deviation/pull/280,https://github.com/F-D-R,10,https://github.com/DeviationTX/deviation/pull/280#issuecomment-327084185,,"I see, thanks!",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,281,2017-07-21T01:00:36Z,2017-07-23T17:09:43Z,2017-07-23T17:09:43Z,MERGED,True,1,0,1,https://github.com/xuyuan,bugfix: break when audio_player found,1,[],https://github.com/DeviationTX/deviation/pull/281,https://github.com/xuyuan,1,https://github.com/DeviationTX/deviation/pull/281,"""audiofx"" was ignored","""audiofx"" was ignored",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,283,2017-08-01T04:13:17Z,2017-08-01T07:47:57Z,2017-08-01T07:47:57Z,MERGED,True,47,29,1,https://github.com/hexfet,Frskyx sequence number algorithm improvement,4,[],https://github.com/DeviationTX/deviation/pull/283,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/283,Detailed information about the FrskyX packet sequence number algorithm was posted here a few days ago.  Thanks to Mike Blanford.   With this change missed packets are recovered without resetting the telemetry link so overall telemetry throughput is increased.  Tested on XSR with both FCC and EU firmware.,Detailed information about the FrskyX packet sequence number algorithm was posted here a few days ago.  Thanks to Mike Blanford.   With this change missed packets are recovered without resetting the telemetry link so overall telemetry throughput is increased.  Tested on XSR with both FCC and EU firmware.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,284,2017-08-02T06:40:27Z,2017-08-04T18:29:45Z,2019-03-05T00:10:02Z,MERGED,True,14,8,1,https://github.com/goebish,Add one txid to DM002 protocol,1,[],https://github.com/DeviationTX/deviation/pull/284,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/284,Add one txid to DM002 protocol,Add one txid to DM002 protocol,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,286,2017-08-12T22:21:39Z,2017-08-24T15:48:21Z,2017-08-24T15:48:21Z,CLOSED,False,1072,1,16,https://github.com/bartremes,Branch 5.0,3,[],https://github.com/DeviationTX/deviation/pull/286,https://github.com/bartremes,1,https://github.com/DeviationTX/deviation/pull/286,"devof7-512 folder added. for devof7 with 512k memory
please merge with branch 5.0 and master so it will build with nightly builds.
for mine modified memory devof7 its is working bur please check at:
src/target/devof7-512/devof7-512_opt.ld

rom (rx) : ORIGIN = 0x08003000, LENGTH = 116K /not shure if this is correct for teh 512k/
ram (rwx) : ORIGIN = 0x20000000, LENGTH = 16K /not shure if this is correct/

thanks","devof7-512 folder added. for devof7 with 512k memory
please merge with branch 5.0 and master so it will build with nightly builds.
for mine modified memory devof7 its is working bur please check at:
src/target/devof7-512/devof7-512_opt.ld

rom (rx) : ORIGIN = 0x08003000, LENGTH = 116K /not shure if this is correct for teh 512k/
ram (rwx) : ORIGIN = 0x20000000, LENGTH = 16K /not shure if this is correct/

thanks",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,286,2017-08-12T22:21:39Z,2017-08-24T15:48:21Z,2017-08-24T15:48:21Z,CLOSED,False,1072,1,16,https://github.com/bartremes,Branch 5.0,3,[],https://github.com/DeviationTX/deviation/pull/286,https://github.com/F-D-R,2,https://github.com/DeviationTX/deviation/pull/286#issuecomment-322121865,"devof7-512 folder added. for devof7 with 512k memory
please merge with branch 5.0 and master so it will build with nightly builds.
for mine modified memory devof7 its is working bur please check at:
src/target/devof7-512/devof7-512_opt.ld

rom (rx) : ORIGIN = 0x08003000, LENGTH = 116K /not shure if this is correct for teh 512k/
ram (rwx) : ORIGIN = 0x20000000, LENGTH = 16K /not shure if this is correct/

thanks","AFAIK the 5.0 branch isn't built with the nightly, but Vlad maintains it and posts the builds in the forum...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,286,2017-08-12T22:21:39Z,2017-08-24T15:48:21Z,2017-08-24T15:48:21Z,CLOSED,False,1072,1,16,https://github.com/bartremes,Branch 5.0,3,[],https://github.com/DeviationTX/deviation/pull/286,https://github.com/vladislavy,3,https://github.com/DeviationTX/deviation/pull/286#issuecomment-322143749,"devof7-512 folder added. for devof7 with 512k memory
please merge with branch 5.0 and master so it will build with nightly builds.
for mine modified memory devof7 its is working bur please check at:
src/target/devof7-512/devof7-512_opt.ld

rom (rx) : ORIGIN = 0x08003000, LENGTH = 116K /not shure if this is correct for teh 512k/
ram (rwx) : ORIGIN = 0x20000000, LENGTH = 16K /not shure if this is correct/

thanks","I don't see any sense to add ""Devo F"" series to BRANCH 5.0. Use ""master"" branch.
I don't see any flash memory type detection or indication. So, I think it works by pure accident.
What is the flash memory chip and how/where it's installed?
It's not a good idea to copy all target files to a new target. Will be better to use includes from Devo F7 target. This way you need edit one target only for all clones (similarly to Devo7e-256).",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,286,2017-08-12T22:21:39Z,2017-08-24T15:48:21Z,2017-08-24T15:48:21Z,CLOSED,False,1072,1,16,https://github.com/bartremes,Branch 5.0,3,[],https://github.com/DeviationTX/deviation/pull/286,https://github.com/TheRealMoeder,4,https://github.com/DeviationTX/deviation/pull/286#issuecomment-324671314,"devof7-512 folder added. for devof7 with 512k memory
please merge with branch 5.0 and master so it will build with nightly builds.
for mine modified memory devof7 its is working bur please check at:
src/target/devof7-512/devof7-512_opt.ld

rom (rx) : ORIGIN = 0x08003000, LENGTH = 116K /not shure if this is correct for teh 512k/
ram (rwx) : ORIGIN = 0x20000000, LENGTH = 16K /not shure if this is correct/

thanks",Shouldn't we close this  as you (vlad) are close to a PR for extra memory code for all devo f series transmitters?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,288,2017-08-17T19:02:48Z,2017-08-18T04:03:06Z,2017-11-02T20:06:47Z,MERGED,True,1,2,1,https://github.com/TheRealMoeder,"Add missing ""break"" to make mux delay working again",1,[],https://github.com/DeviationTX/deviation/pull/288,https://github.com/TheRealMoeder,1,https://github.com/DeviationTX/deviation/pull/288,Fix for issue #287,Fix for issue #287,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,289,2017-08-29T13:13:23Z,2017-08-29T13:19:25Z,2017-08-29T13:19:25Z,CLOSED,False,20,15,2,https://github.com/vladislavy,Fix flash memory type detection for Devo F series,1,[],https://github.com/DeviationTX/deviation/pull/289,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/289,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,290,2017-08-30T07:20:12Z,2017-08-31T04:10:27Z,2017-08-31T04:10:28Z,MERGED,True,149,3,21,https://github.com/vladislavy,Add devof12e-XMS,2,[],https://github.com/DeviationTX/deviation/pull/290,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/290,For modded Devo F12E with upgraded flash memory chip,For modded Devo F12E with upgraded flash memory chip,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,290,2017-08-30T07:20:12Z,2017-08-31T04:10:27Z,2017-08-31T04:10:28Z,MERGED,True,149,3,21,https://github.com/vladislavy,Add devof12e-XMS,2,[],https://github.com/DeviationTX/deviation/pull/290,https://github.com/TheRealMoeder,2,https://github.com/DeviationTX/deviation/pull/290#issuecomment-325996152,For modded Devo F12E with upgraded flash memory chip,did you try to fit both devofs  and fat into a single f12e build? that would actually be the most end-user friendly solution...,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,290,2017-08-30T07:20:12Z,2017-08-31T04:10:27Z,2017-08-31T04:10:28Z,MERGED,True,149,3,21,https://github.com/vladislavy,Add devof12e-XMS,2,[],https://github.com/DeviationTX/deviation/pull/290,https://github.com/vladislavy,3,https://github.com/DeviationTX/deviation/pull/290#issuecomment-326004700,For modded Devo F12E with upgraded flash memory chip,I'm in doubt that it is possible.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,291,2017-08-31T03:50:38Z,2017-09-01T04:10:31Z,2017-09-01T04:10:31Z,MERGED,True,17,1,3,https://github.com/DavidBoone,Add 3pos trim switch functionality,1,[],https://github.com/DeviationTX/deviation/pull/291,https://github.com/DavidBoone,1,https://github.com/DeviationTX/deviation/pull/291,"Adds the ability to use the momentary trim switches as 3 pos switches.  ie, normal resting position is centred (0), while pressing the trim one way or the other results in a momentary deflection in one direction (-100) or the other (+100).
I used this together with ""Adjustments"" in Betaflight to allow easy adjustments to my PID's.","Adds the ability to use the momentary trim switches as 3 pos switches.  ie, normal resting position is centred (0), while pressing the trim one way or the other results in a momentary deflection in one direction (-100) or the other (+100).
I used this together with ""Adjustments"" in Betaflight to allow easy adjustments to my PID's.",True,{'THUMBS_UP': ['https://github.com/tracernz']}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,291,2017-08-31T03:50:38Z,2017-09-01T04:10:31Z,2017-09-01T04:10:31Z,MERGED,True,17,1,3,https://github.com/DavidBoone,Add 3pos trim switch functionality,1,[],https://github.com/DeviationTX/deviation/pull/291,https://github.com/F-D-R,2,https://github.com/DeviationTX/deviation/pull/291#issuecomment-326191491,"Adds the ability to use the momentary trim switches as 3 pos switches.  ie, normal resting position is centred (0), while pressing the trim one way or the other results in a momentary deflection in one direction (-100) or the other (+100).
I used this together with ""Adjustments"" in Betaflight to allow easy adjustments to my PID's.","You could achieve this functionality before with two momentary trim switches (and two virtual channels) mixed into one channel, but of course I see that with you solution it is much easier.
Is this function used that often?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,291,2017-08-31T03:50:38Z,2017-09-01T04:10:31Z,2017-09-01T04:10:31Z,MERGED,True,17,1,3,https://github.com/DavidBoone,Add 3pos trim switch functionality,1,[],https://github.com/DeviationTX/deviation/pull/291,https://github.com/TheRealMoeder,3,https://github.com/DeviationTX/deviation/pull/291#issuecomment-326342211,"Adds the ability to use the momentary trim switches as 3 pos switches.  ie, normal resting position is centred (0), while pressing the trim one way or the other results in a momentary deflection in one direction (-100) or the other (+100).
I used this together with ""Adjustments"" in Betaflight to allow easy adjustments to my PID's.","I agree this is not that big of a change, but makes for a lot easier setup of a trim switch as a 3way switch. And thanks for updating the manual as well!",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,292,2017-09-04T06:10:20Z,2017-09-11T04:32:16Z,2017-09-11T04:32:16Z,MERGED,True,207,1,20,https://github.com/vladislavy,Add devof7-XMS and devof4-XMS,3,[],https://github.com/DeviationTX/deviation/pull/292,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/292,"For modded Devo F7 and Devo F4, with upgraded flash memory chip.","For modded Devo F7 and Devo F4, with upgraded flash memory chip.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,292,2017-09-04T06:10:20Z,2017-09-11T04:32:16Z,2017-09-11T04:32:16Z,MERGED,True,207,1,20,https://github.com/vladislavy,Add devof7-XMS and devof4-XMS,3,[],https://github.com/DeviationTX/deviation/pull/292,https://github.com/vladislavy,2,https://github.com/DeviationTX/deviation/pull/292#issuecomment-326938648,"For modded Devo F7 and Devo F4, with upgraded flash memory chip.","They have minor differences. 30 models by default, datalog support, devof12e-XMS has language support.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,292,2017-09-04T06:10:20Z,2017-09-11T04:32:16Z,2017-09-11T04:32:16Z,MERGED,True,207,1,20,https://github.com/vladislavy,Add devof7-XMS and devof4-XMS,3,[],https://github.com/DeviationTX/deviation/pull/292,https://github.com/TheRealMoeder,3,https://github.com/DeviationTX/deviation/pull/292#issuecomment-326942645,"For modded Devo F7 and Devo F4, with upgraded flash memory chip.","In devo7e we have also the emulator with features not available on TX (main page configuration). Can't we do the same for F-line? Datalog seems useless on emulator anyways, language can't hurt in the emulator to help configuration and all models >30 would be ignored when uploaded to TX.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,292,2017-09-04T06:10:20Z,2017-09-11T04:32:16Z,2017-09-11T04:32:16Z,MERGED,True,207,1,20,https://github.com/vladislavy,Add devof7-XMS and devof4-XMS,3,[],https://github.com/DeviationTX/deviation/pull/292,https://github.com/vladislavy,4,https://github.com/DeviationTX/deviation/pull/292#issuecomment-326981595,"For modded Devo F7 and Devo F4, with upgraded flash memory chip.","With devo7e it's the only way to setup main screen layout. I'm not sure that it's a good idea to add fake features to the emulator. There will be even more questions from users.
I do not have a definite solution. We can simply remove the emulators for the Devo F-XMS line and forget about it.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,292,2017-09-04T06:10:20Z,2017-09-11T04:32:16Z,2017-09-11T04:32:16Z,MERGED,True,207,1,20,https://github.com/vladislavy,Add devof7-XMS and devof4-XMS,3,[],https://github.com/DeviationTX/deviation/pull/292,https://github.com/TheRealMoeder,5,https://github.com/DeviationTX/deviation/pull/292#issuecomment-326995295,"For modded Devo F7 and Devo F4, with upgraded flash memory chip.","I don't think they are necessarily a bad idea, I just don't know if we really need them. I can live with having them, I just like the keep it simple idea. On the other hand, a user soldering a memory chip is probably not a novice :P. You have two approvals,  I vote ""neutral"", so go ahead and merge :)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,293,2017-09-12T04:44:54Z,2017-09-12T08:54:07Z,2017-09-12T08:54:07Z,CLOSED,False,6,10,1,https://github.com/vladislavy,"Fix sounds for devo12 ""mymedia\sound.ini""",1,[],https://github.com/DeviationTX/deviation/pull/293,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/293,"""mymedia/sound.ini"" must be processed for each function call, not just the first time.","""mymedia/sound.ini"" must be processed for each function call, not just the first time.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,293,2017-09-12T04:44:54Z,2017-09-12T08:54:07Z,2017-09-12T08:54:07Z,CLOSED,False,6,10,1,https://github.com/vladislavy,"Fix sounds for devo12 ""mymedia\sound.ini""",1,[],https://github.com/DeviationTX/deviation/pull/293,https://github.com/vladislavy,2,https://github.com/DeviationTX/deviation/pull/293#issuecomment-328756550,"""mymedia/sound.ini"" must be processed for each function call, not just the first time.","I don't understand, it has #ifdef DEVO12_TARGET_H",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,294,2017-09-12T09:08:40Z,2017-09-13T04:49:15Z,2017-09-13T04:49:15Z,MERGED,True,3,1,1,https://github.com/vladislavy,"Fix sounds for devo12 ""mymedia\sound.ini""",2,[],https://github.com/DeviationTX/deviation/pull/294,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/294,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,294,2017-09-12T09:08:40Z,2017-09-13T04:49:15Z,2017-09-13T04:49:15Z,MERGED,True,3,1,1,https://github.com/vladislavy,"Fix sounds for devo12 ""mymedia\sound.ini""",2,[],https://github.com/DeviationTX/deviation/pull/294,https://github.com/TheRealMoeder,2,https://github.com/DeviationTX/deviation/pull/294#issuecomment-328838644,,"BTW, you could have just pushed the second commit to the existing branch devo12 in your repo, and the first pull request would have been automatically updated. No need to close and open a new PR.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,294,2017-09-12T09:08:40Z,2017-09-13T04:49:15Z,2017-09-13T04:49:15Z,MERGED,True,3,1,1,https://github.com/vladislavy,"Fix sounds for devo12 ""mymedia\sound.ini""",2,[],https://github.com/DeviationTX/deviation/pull/294,https://github.com/TheRealMoeder,3,https://github.com/DeviationTX/deviation/pull/294#issuecomment-328978960,,"Wait...doesn't it have to be:
edit: update:


#ifdef DEVO12_TARGET_H
static u8 checked;
if(!checked) {
static char filename[] = ""media/sound.ini\0\0\0""; // placeholder for longer folder name
FILE *fh;
fh = fopen(""mymedia/sound.ini"", ""r"");
if(fh) {
sprintf(filename, ""mymedia/sound.ini"");
fclose(fh);
}
checked = 1;
}
#else
Currently we would once again overwrite 'filename' every time MUSIC_GetSound is called on devo12s",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,294,2017-09-12T09:08:40Z,2017-09-13T04:49:15Z,2017-09-13T04:49:15Z,MERGED,True,3,1,1,https://github.com/vladislavy,"Fix sounds for devo12 ""mymedia\sound.ini""",2,[],https://github.com/DeviationTX/deviation/pull/294,https://github.com/vladislavy,4,https://github.com/DeviationTX/deviation/pull/294#issuecomment-329050607,,"static char filename[] = ""media/sound.ini\0\0\0""; initialized once only, at first function call. On subsequent calls, filename[] will have the last assigned value. I don't see the difference.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,295,2017-09-13T06:15:26Z,2017-09-13T06:24:02Z,2017-09-13T06:24:02Z,MERGED,True,3,1,1,https://github.com/vladislavy,"Fix sounds for devo12 ""mymedia\sound.ini""",1,[],https://github.com/DeviationTX/deviation/pull/295,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/295,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,296,2017-09-14T05:09:09Z,2017-09-25T03:38:07Z,2017-09-25T03:38:07Z,MERGED,True,6,2,2,https://github.com/vladislavy,"Fix Devo12 ""mymedia"" calls",1,[],https://github.com/DeviationTX/deviation/pull/296,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/296,"It doesn't fix any current error, since these functions are called only once, but it looks more correct.","It doesn't fix any current error, since these functions are called only once, but it looks more correct.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,298,2017-09-21T11:49:14Z,2017-09-25T03:40:46Z,2017-09-25T03:40:46Z,MERGED,True,1,1,1,https://github.com/vladislavy,Fix issue #297 - move layout items at 320x240 GUI,1,[],https://github.com/DeviationTX/deviation/pull/298,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/298,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,299,2017-09-27T05:59:03Z,2017-09-28T05:04:55Z,2017-09-28T05:04:55Z,MERGED,True,1,0,1,https://github.com/vladislavy,Add language files to devo7e-256 emulator,1,[],https://github.com/DeviationTX/deviation/pull/299,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/299,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,301,2017-09-28T18:10:00Z,2017-10-02T08:49:37Z,2017-10-02T08:49:37Z,CLOSED,False,11,6,2,https://github.com/vladislavy,Fix quick pages for 128x64 GUI,2,[],https://github.com/DeviationTX/deviation/pull/301,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/301,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,301,2017-09-28T18:10:00Z,2017-10-02T08:49:37Z,2017-10-02T08:49:37Z,CLOSED,False,11,6,2,https://github.com/vladislavy,Fix quick pages for 128x64 GUI,2,[],https://github.com/DeviationTX/deviation/pull/301,https://github.com/vladislavy,2,https://github.com/DeviationTX/deviation/pull/301#issuecomment-332919731,,See issue #300,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,302,2017-10-02T08:57:41Z,2017-10-10T13:04:56Z,2017-10-10T13:04:56Z,MERGED,True,19,28,3,https://github.com/vladislavy,Fix Quick Pages,1,[],https://github.com/DeviationTX/deviation/pull/302,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/302,See issue #300,See issue #300,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,303,2017-10-10T14:00:58Z,2017-10-19T22:41:15Z,2017-10-19T22:41:15Z,MERGED,True,37,2,3,https://github.com/vladislavy,Add empty quick page for external OSD,1,[],https://github.com/DeviationTX/deviation/pull/303,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/303,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,304,2017-10-12T07:15:01Z,2017-10-19T22:36:22Z,2017-10-19T22:36:22Z,MERGED,True,12,37,1,https://github.com/vladislavy,Fix text GUI trim bargraph,2,[],https://github.com/DeviationTX/deviation/pull/304,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/304,"It fix devoF7 trim cursor position for first presses. it's the integer rounding problem, x / y changed to (x + y / 2) / y.","It fix devoF7 trim cursor position for first presses. it's the integer rounding problem, x / y changed to (x + y / 2) / y.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,305,2017-10-13T05:58:02Z,2017-11-13T04:37:22Z,2017-11-13T04:37:22Z,CLOSED,False,11,0,1,https://github.com/vladislavy,"Fix switch mapping for devo7e-256 with ""nostock"" hardware option",1,[],https://github.com/DeviationTX/deviation/pull/305,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/305,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,305,2017-10-13T05:58:02Z,2017-11-13T04:37:22Z,2017-11-13T04:37:22Z,CLOSED,False,11,0,1,https://github.com/vladislavy,"Fix switch mapping for devo7e-256 with ""nostock"" hardware option",1,[],https://github.com/DeviationTX/deviation/pull/305,https://github.com/vladislavy,2,https://github.com/DeviationTX/deviation/pull/305#issuecomment-338894728,,"It doesn't hurt to anything but help me to support T8SG builds. This fix disable switch mapping for removed FMOD and HOLD switches, with enabled ""nostock"" hardware option.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,306,2017-10-21T12:29:19Z,2017-10-21T18:16:17Z,2019-03-05T00:10:04Z,MERGED,True,10,2,1,https://github.com/goebish,Fix AFHDS 2A channel scaling & tx power not in sync,2,[],https://github.com/DeviationTX/deviation/pull/306,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/306,"AFHDS 2A channel scaling was slightly off, as reported here:
https://www.deviationtx.com/forum/protocol-development/5251-flysky-afhds-2a-protocol-as-used-i10-i6-it4?start=540#64452
edit: also fixes this issue
https://www.deviationtx.com/forum/6-general-discussions/7357-devo-7e-problem-changing-output-power-afhds-2a","AFHDS 2A channel scaling was slightly off, as reported here:
https://www.deviationtx.com/forum/protocol-development/5251-flysky-afhds-2a-protocol-as-used-i10-i6-it4?start=540#64452
edit: also fixes this issue
https://www.deviationtx.com/forum/6-general-discussions/7357-devo-7e-problem-changing-output-power-afhds-2a",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,307,2017-10-22T14:57:28Z,2017-10-22T17:27:29Z,2017-10-23T15:10:01Z,MERGED,True,64,20,1,https://github.com/TheRealMoeder,Support for new Bayang X16 with altitude hold feature,1,[],https://github.com/DeviationTX/deviation/pull/307,https://github.com/TheRealMoeder,1,https://github.com/DeviationTX/deviation/pull/307,"Introduces Protocol format ""X16-AH""","Introduces Protocol format ""X16-AH""",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,308,2017-10-22T17:44:27Z,2017-10-23T03:38:28Z,2019-03-05T00:10:08Z,MERGED,True,12,1,1,https://github.com/goebish,Add IRDRONE format to Bayang protocol,1,[],https://github.com/DeviationTX/deviation/pull/308,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/308,"Add IRDRONE format to Bayang protocol
Nothing special, standard channel mapping.
https://www.deviationtx.com/forum/protocol-development/7402-irdrone-ghost-x5-wifi-camera-xn297lbx-capture","Add IRDRONE format to Bayang protocol
Nothing special, standard channel mapping.
https://www.deviationtx.com/forum/protocol-development/7402-irdrone-ghost-x5-wifi-camera-xn297lbx-capture",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,309,2017-10-25T02:18:49Z,2017-10-25T05:03:57Z,2017-10-25T05:03:57Z,MERGED,True,2,1,1,https://github.com/hexfet, Fix min/max limit values on LRSSI so alarm can be set on LRSSI. ,2,[],https://github.com/DeviationTX/deviation/pull/309,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/309,Adjust min/max values to match actual possible range (-7 to -198).  The LRSSI value is an estimate in dBm according to the procedure of section 17.3 of the datasheet.,Adjust min/max values to match actual possible range (-7 to -198).  The LRSSI value is an estimate in dBm according to the procedure of section 17.3 of the datasheet.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,310,2017-10-25T19:23:49Z,2017-10-26T17:50:12Z,2017-10-26T17:50:12Z,MERGED,True,120,129,10,https://github.com/TheRealMoeder,Improve voice startup and shutdown message timing and fix FrSkyX serial port handling,6,[],https://github.com/DeviationTX/deviation/pull/310,https://github.com/TheRealMoeder,1,https://github.com/DeviationTX/deviation/pull/310,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,312,2017-11-04T20:41:13Z,2017-11-05T07:54:58Z,2017-11-05T07:54:58Z,MERGED,True,3,2,1,https://github.com/TheRealMoeder, Prevent mux voice from triggering sound before welcome has played.,2,[],https://github.com/DeviationTX/deviation/pull/312,https://github.com/TheRealMoeder,1,https://github.com/DeviationTX/deviation/pull/312,"I know this is not the perfect solution, as it discards mux voice alert completely on transmitter startup, on the other hand mixers get checked so early after startup there really seems to be no choice to it unless we start digging deeper.","I know this is not the perfect solution, as it discards mux voice alert completely on transmitter startup, on the other hand mixers get checked so early after startup there really seems to be no choice to it unless we start digging deeper.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,313,2017-11-09T11:51:54Z,2017-11-12T23:18:23Z,2017-11-12T23:18:23Z,MERGED,True,8,7,2,https://github.com/vladislavy,Fix vertical alignment for TINY_FONT (128x64x1 GUI),2,[],https://github.com/DeviationTX/deviation/pull/313,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/313,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,315,2017-11-10T23:20:42Z,2017-11-11T09:44:05Z,2019-04-15T09:10:19Z,MERGED,True,86,4,6,https://github.com/goebish,Add fine frequency tuning option to A7105 protocols,6,[],https://github.com/DeviationTX/deviation/pull/315,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/315,"Add fine frequency tuning option to A7105 protocols, same as CC2500 protocols.
This is required for some A7105 modules or Rx with inaccurate crystal oscillators.
Forums thread: https://www.deviationtx.com/forum/6-general-discussions/7376-jumper-t8sg-and-e010s-flysky-afhds-latency
More and more people are having the same issue with 256 kbps xn297 protocols (eg E010), unfortunately there's nothing we can do in software to fine tune the nrf24l01. X-in-1 modules manufacturers should use better accuracy crystals, especially for the nrf24l01 (+/-20ppm because of the xn297 emulation, despite the nrf24 datasheet specifies +/-60ppm,  ...). I'll expose the issue to Jumper.","Add fine frequency tuning option to A7105 protocols, same as CC2500 protocols.
This is required for some A7105 modules or Rx with inaccurate crystal oscillators.
Forums thread: https://www.deviationtx.com/forum/6-general-discussions/7376-jumper-t8sg-and-e010s-flysky-afhds-latency
More and more people are having the same issue with 256 kbps xn297 protocols (eg E010), unfortunately there's nothing we can do in software to fine tune the nrf24l01. X-in-1 modules manufacturers should use better accuracy crystals, especially for the nrf24l01 (+/-20ppm because of the xn297 emulation, despite the nrf24 datasheet specifies +/-60ppm,  ...). I'll expose the issue to Jumper.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,315,2017-11-10T23:20:42Z,2017-11-11T09:44:05Z,2019-04-15T09:10:19Z,MERGED,True,86,4,6,https://github.com/goebish,Add fine frequency tuning option to A7105 protocols,6,[],https://github.com/DeviationTX/deviation/pull/315,https://github.com/alanchan2772,2,https://github.com/DeviationTX/deviation/pull/315#issuecomment-483168893,"Add fine frequency tuning option to A7105 protocols, same as CC2500 protocols.
This is required for some A7105 modules or Rx with inaccurate crystal oscillators.
Forums thread: https://www.deviationtx.com/forum/6-general-discussions/7376-jumper-t8sg-and-e010s-flysky-afhds-latency
More and more people are having the same issue with 256 kbps xn297 protocols (eg E010), unfortunately there's nothing we can do in software to fine tune the nrf24l01. X-in-1 modules manufacturers should use better accuracy crystals, especially for the nrf24l01 (+/-20ppm because of the xn297 emulation, despite the nrf24 datasheet specifies +/-60ppm,  ...). I'll expose the issue to Jumper.","hello,can you please help to add freq-fine turning option to E010 protocoles,thank you very much!",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,315,2017-11-10T23:20:42Z,2017-11-11T09:44:05Z,2019-04-15T09:10:19Z,MERGED,True,86,4,6,https://github.com/goebish,Add fine frequency tuning option to A7105 protocols,6,[],https://github.com/DeviationTX/deviation/pull/315,https://github.com/goebish,3,https://github.com/DeviationTX/deviation/pull/315#issuecomment-483169135,"Add fine frequency tuning option to A7105 protocols, same as CC2500 protocols.
This is required for some A7105 modules or Rx with inaccurate crystal oscillators.
Forums thread: https://www.deviationtx.com/forum/6-general-discussions/7376-jumper-t8sg-and-e010s-flysky-afhds-latency
More and more people are having the same issue with 256 kbps xn297 protocols (eg E010), unfortunately there's nothing we can do in software to fine tune the nrf24l01. X-in-1 modules manufacturers should use better accuracy crystals, especially for the nrf24l01 (+/-20ppm because of the xn297 emulation, despite the nrf24 datasheet specifies +/-60ppm,  ...). I'll expose the issue to Jumper.","I wish I could, but that's not possible with the nrf24l01 :(",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,315,2017-11-10T23:20:42Z,2017-11-11T09:44:05Z,2019-04-15T09:10:19Z,MERGED,True,86,4,6,https://github.com/goebish,Add fine frequency tuning option to A7105 protocols,6,[],https://github.com/DeviationTX/deviation/pull/315,https://github.com/alanchan2772,4,https://github.com/DeviationTX/deviation/pull/315#issuecomment-483169824,"Add fine frequency tuning option to A7105 protocols, same as CC2500 protocols.
This is required for some A7105 modules or Rx with inaccurate crystal oscillators.
Forums thread: https://www.deviationtx.com/forum/6-general-discussions/7376-jumper-t8sg-and-e010s-flysky-afhds-latency
More and more people are having the same issue with 256 kbps xn297 protocols (eg E010), unfortunately there's nothing we can do in software to fine tune the nrf24l01. X-in-1 modules manufacturers should use better accuracy crystals, especially for the nrf24l01 (+/-20ppm because of the xn297 emulation, despite the nrf24 datasheet specifies +/-60ppm,  ...). I'll expose the issue to Jumper.","oh,so bad!",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,315,2017-11-10T23:20:42Z,2017-11-11T09:44:05Z,2019-04-15T09:10:19Z,MERGED,True,86,4,6,https://github.com/goebish,Add fine frequency tuning option to A7105 protocols,6,[],https://github.com/DeviationTX/deviation/pull/315,https://github.com/alanchan2772,5,https://github.com/DeviationTX/deviation/pull/315#issuecomment-483170465,"Add fine frequency tuning option to A7105 protocols, same as CC2500 protocols.
This is required for some A7105 modules or Rx with inaccurate crystal oscillators.
Forums thread: https://www.deviationtx.com/forum/6-general-discussions/7376-jumper-t8sg-and-e010s-flysky-afhds-latency
More and more people are having the same issue with 256 kbps xn297 protocols (eg E010), unfortunately there's nothing we can do in software to fine tune the nrf24l01. X-in-1 modules manufacturers should use better accuracy crystals, especially for the nrf24l01 (+/-20ppm because of the xn297 emulation, despite the nrf24 datasheet specifies +/-60ppm,  ...). I'll expose the issue to Jumper.",i heat the h36 can change the frequence a little,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,315,2017-11-10T23:20:42Z,2017-11-11T09:44:05Z,2019-04-15T09:10:19Z,MERGED,True,86,4,6,https://github.com/goebish,Add fine frequency tuning option to A7105 protocols,6,[],https://github.com/DeviationTX/deviation/pull/315,https://github.com/goebish,6,https://github.com/DeviationTX/deviation/pull/315#issuecomment-483170602,"Add fine frequency tuning option to A7105 protocols, same as CC2500 protocols.
This is required for some A7105 modules or Rx with inaccurate crystal oscillators.
Forums thread: https://www.deviationtx.com/forum/6-general-discussions/7376-jumper-t8sg-and-e010s-flysky-afhds-latency
More and more people are having the same issue with 256 kbps xn297 protocols (eg E010), unfortunately there's nothing we can do in software to fine tune the nrf24l01. X-in-1 modules manufacturers should use better accuracy crystals, especially for the nrf24l01 (+/-20ppm because of the xn297 emulation, despite the nrf24 datasheet specifies +/-60ppm,  ...). I'll expose the issue to Jumper.",some technical info here: #836,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,315,2017-11-10T23:20:42Z,2017-11-11T09:44:05Z,2019-04-15T09:10:19Z,MERGED,True,86,4,6,https://github.com/goebish,Add fine frequency tuning option to A7105 protocols,6,[],https://github.com/DeviationTX/deviation/pull/315,https://github.com/alanchan2772,7,https://github.com/DeviationTX/deviation/pull/315#issuecomment-483171732,"Add fine frequency tuning option to A7105 protocols, same as CC2500 protocols.
This is required for some A7105 modules or Rx with inaccurate crystal oscillators.
Forums thread: https://www.deviationtx.com/forum/6-general-discussions/7376-jumper-t8sg-and-e010s-flysky-afhds-latency
More and more people are having the same issue with 256 kbps xn297 protocols (eg E010), unfortunately there's nothing we can do in software to fine tune the nrf24l01. X-in-1 modules manufacturers should use better accuracy crystals, especially for the nrf24l01 (+/-20ppm because of the xn297 emulation, despite the nrf24 datasheet specifies +/-60ppm,  ...). I'll expose the issue to Jumper.",thank you very much! you are good man!,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,316,2017-11-11T13:18:44Z,2017-11-11T13:23:31Z,2017-11-11T13:23:31Z,MERGED,True,87,5,7,https://github.com/vladislavy,"Add fine frequency tuning option to A7105 protocols, from goebish",1,[],https://github.com/DeviationTX/deviation/pull/316,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/316,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,317,2017-11-11T17:17:28Z,2017-11-12T16:17:51Z,2017-11-12T16:17:51Z,MERGED,True,20,22,1,https://github.com/vladislavy,Fix S-FHSS protocol servo throw,1,[],https://github.com/DeviationTX/deviation/pull/317,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/317,Tested up to 150%,Tested up to 150%,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,317,2017-11-11T17:17:28Z,2017-11-12T16:17:51Z,2017-11-12T16:17:51Z,MERGED,True,20,22,1,https://github.com/vladislavy,Fix S-FHSS protocol servo throw,1,[],https://github.com/DeviationTX/deviation/pull/317,https://github.com/goebish,2,https://github.com/DeviationTX/deviation/pull/317#issuecomment-343680081,Tested up to 150%,"Do you have a genuine Futaba FHSS transmitter ?
Looks like this protocol is not working well, with most receivers only the 4 first channels are working.
I've neither a Futaba TX or RX, so I can't help with that ...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,317,2017-11-11T17:17:28Z,2017-11-12T16:17:51Z,2017-11-12T16:17:51Z,MERGED,True,20,22,1,https://github.com/vladislavy,Fix S-FHSS protocol servo throw,1,[],https://github.com/DeviationTX/deviation/pull/317,https://github.com/vladislavy,3,https://github.com/DeviationTX/deviation/pull/317#issuecomment-343681219,Tested up to 150%,"I have Futaba 14SG, but havn't S-FHSS receiver. User Poldi reported that Align R6GF receiver can use all 6 channels.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,317,2017-11-11T17:17:28Z,2017-11-12T16:17:51Z,2017-11-12T16:17:51Z,MERGED,True,20,22,1,https://github.com/vladislavy,Fix S-FHSS protocol servo throw,1,[],https://github.com/DeviationTX/deviation/pull/317,https://github.com/vladislavy,4,https://github.com/DeviationTX/deviation/pull/317#issuecomment-343747822,Tested up to 150%,What does it mean?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,317,2017-11-11T17:17:28Z,2017-11-12T16:17:51Z,2017-11-12T16:17:51Z,MERGED,True,20,22,1,https://github.com/vladislavy,Fix S-FHSS protocol servo throw,1,[],https://github.com/DeviationTX/deviation/pull/317,https://github.com/goebish,5,https://github.com/DeviationTX/deviation/pull/317#issuecomment-343748135,Tested up to 150%,"Just someone that made a mistake, he posted an empty message referencing this PR in the other PR, I deleted it.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,318,2017-11-12T22:48:16Z,2017-11-13T05:14:25Z,2017-11-13T05:14:26Z,MERGED,True,12,6,1,https://github.com/hexfet,Fix binding when auto-acknowledge is disabled.,1,[],https://github.com/DeviationTX/deviation/pull/318,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/318,"The Use A.ACK option was added recently to accommodate nRF clone chips that don't support auto-acknowledge correctly.  This change missed updating the bind procedure, which uses auto-ack to skip binding if an already bound receiver is detected. The fix is to always go through the bind procedure when the option is set to No.
Reported in forum post.
Also fixes spelling.","The Use A.ACK option was added recently to accommodate nRF clone chips that don't support auto-acknowledge correctly.  This change missed updating the bind procedure, which uses auto-ack to skip binding if an already bound receiver is detected. The fix is to always go through the bind procedure when the option is set to No.
Reported in forum post.
Also fixes spelling.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,319,2017-11-13T18:54:07Z,2017-11-13T19:03:52Z,2017-11-13T19:03:52Z,MERGED,True,724,7,13,https://github.com/vladislavy,Add T8SG target,4,[],https://github.com/DeviationTX/deviation/pull/319,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/319,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,320,2017-11-13T20:07:18Z,2017-11-13T21:09:11Z,2017-11-13T21:09:11Z,MERGED,True,1,0,1,https://github.com/TheRealMoeder,Add T8SG to Travis builds,1,[],https://github.com/DeviationTX/deviation/pull/320,https://github.com/TheRealMoeder,1,https://github.com/DeviationTX/deviation/pull/320,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,321,2017-11-14T03:59:48Z,2017-11-14T04:03:10Z,2017-11-14T04:03:10Z,MERGED,True,722,7,13,https://github.com/vladislavy,Add T8SG target,4,[],https://github.com/DeviationTX/deviation/pull/321,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/321,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,322,2017-11-15T05:04:31Z,2017-11-15T17:33:58Z,2017-11-15T17:33:58Z,MERGED,True,4,4,1,https://github.com/vladislavy,Fix Frsky-V8 protocol,3,[],https://github.com/DeviationTX/deviation/pull/322,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/322,"Values multiply by 1.5:
throw 100%: 400 * 1.5 = 600
center: 1500 * 1.5 = 2250 = 0x8CA","Values multiply by 1.5:
throw 100%: 400 * 1.5 = 600
center: 1500 * 1.5 = 2250 = 0x8CA",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,323,2017-11-17T23:14:20Z,2017-11-17T23:49:48Z,2017-11-17T23:49:48Z,MERGED,True,6,6,1,https://github.com/hexfet,Frskyx timing,3,[],https://github.com/DeviationTX/deviation/pull/323,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/323,"Timing change fixes issue with telemetry when using LBT option.  Enters receive mode a little sooner and listens a little longer.  This change comes from the DIY-Multimodule project.
Have tested with Frsky XSR receiver.  Both CPPM and SBUS outputs are unaffected.","Timing change fixes issue with telemetry when using LBT option.  Enters receive mode a little sooner and listens a little longer.  This change comes from the DIY-Multimodule project.
Have tested with Frsky XSR receiver.  Both CPPM and SBUS outputs are unaffected.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,324,2017-11-21T05:07:04Z,2017-11-21T09:21:17Z,2017-11-21T09:31:16Z,MERGED,True,19,1,2,https://github.com/F-D-R,Hungarian language update,2,[],https://github.com/DeviationTX/deviation/pull/324,https://github.com/F-D-R,1,https://github.com/DeviationTX/deviation/pull/324,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,324,2017-11-21T05:07:04Z,2017-11-21T09:21:17Z,2017-11-21T09:31:16Z,MERGED,True,19,1,2,https://github.com/F-D-R,Hungarian language update,2,[],https://github.com/DeviationTX/deviation/pull/324,https://github.com/vladislavy,2,https://github.com/DeviationTX/deviation/pull/324#issuecomment-345928645,,"Not enough space for Devo12 language strings.
/config/language.c
#define MAX_STRINGS 440
change to
#define MAX_STRINGS 450",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,324,2017-11-21T05:07:04Z,2017-11-21T09:21:17Z,2017-11-21T09:31:16Z,MERGED,True,19,1,2,https://github.com/F-D-R,Hungarian language update,2,[],https://github.com/DeviationTX/deviation/pull/324,https://github.com/F-D-R,3,https://github.com/DeviationTX/deviation/pull/324#issuecomment-345946993,,"Oops!
We've run into the string table length limitation...
I will correct it this evening.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,325,2017-11-22T20:15:13Z,2017-11-22T20:45:11Z,2017-11-22T21:07:01Z,MERGED,True,244,18,1,https://github.com/F-D-R,Modifying 04b03 font to have hungarian characters,1,[],https://github.com/DeviationTX/deviation/pull/325,https://github.com/F-D-R,1,https://github.com/DeviationTX/deviation/pull/325,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,326,2017-11-23T16:50:44Z,2017-11-23T22:01:45Z,2019-03-05T00:10:12Z,MERGED,True,50,16,1,https://github.com/goebish,S-FHSS fix,3,[],https://github.com/DeviationTX/deviation/pull/326,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/326,"Fix for some S-FHSS receiver that didn't receive channel 4-8, now the RSFSB-B that's shipped with the T8SG has all8 channels working.
Add failsafe support","Fix for some S-FHSS receiver that didn't receive channel 4-8, now the RSFSB-B that's shipped with the T8SG has all8 channels working.
Add failsafe support",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,326,2017-11-23T16:50:44Z,2017-11-23T22:01:45Z,2019-03-05T00:10:12Z,MERGED,True,50,16,1,https://github.com/goebish,S-FHSS fix,3,[],https://github.com/DeviationTX/deviation/pull/326,https://github.com/goebish,2,https://github.com/DeviationTX/deviation/pull/326#issuecomment-346701794,"Fix for some S-FHSS receiver that didn't receive channel 4-8, now the RSFSB-B that's shipped with the T8SG has all8 channels working.
Add failsafe support",rcgroups + trial & error ;),True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,327,2017-11-23T22:43:27Z,2018-02-25T17:54:38Z,2018-02-25T17:54:38Z,MERGED,True,103,129,10,https://github.com/hexfet,Timer-based PPM protocol,8,[],https://github.com/DeviationTX/deviation/pull/327,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/327,"Uses timer to generate ppm output pulses, replacing current method of bit-banging based on clock timer callbacks.  This improves control of the pulse width to reduce jitter.
The implementation is based on the timer code that had been commented-out in pwm.c, which needed fixes for defines and co-operation with usart using the same pin.  The basic logic was correct.  Some usart code is also updated for co-operation.
This has been tested with devo10 and t8sg.  Needs devo12 and modular build testing as those are slightly different.  Test builds available.","Uses timer to generate ppm output pulses, replacing current method of bit-banging based on clock timer callbacks.  This improves control of the pulse width to reduce jitter.
The implementation is based on the timer code that had been commented-out in pwm.c, which needed fixes for defines and co-operation with usart using the same pin.  The basic logic was correct.  Some usart code is also updated for co-operation.
This has been tested with devo10 and t8sg.  Needs devo12 and modular build testing as those are slightly different.  Test builds available.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,327,2017-11-23T22:43:27Z,2018-02-25T17:54:38Z,2018-02-25T17:54:38Z,MERGED,True,103,129,10,https://github.com/hexfet,Timer-based PPM protocol,8,[],https://github.com/DeviationTX/deviation/pull/327,https://github.com/F-D-R,2,https://github.com/DeviationTX/deviation/pull/327#issuecomment-346889257,"Uses timer to generate ppm output pulses, replacing current method of bit-banging based on clock timer callbacks.  This improves control of the pulse width to reduce jitter.
The implementation is based on the timer code that had been commented-out in pwm.c, which needed fixes for defines and co-operation with usart using the same pin.  The basic logic was correct.  Some usart code is also updated for co-operation.
This has been tested with devo10 and t8sg.  Needs devo12 and modular build testing as those are slightly different.  Test builds available.",I guess we should wait until somebody test this on the 7E/12 then...,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,327,2017-11-23T22:43:27Z,2018-02-25T17:54:38Z,2018-02-25T17:54:38Z,MERGED,True,103,129,10,https://github.com/hexfet,Timer-based PPM protocol,8,[],https://github.com/DeviationTX/deviation/pull/327,https://github.com/hexfet,3,https://github.com/DeviationTX/deviation/pull/327#issuecomment-346907354,"Uses timer to generate ppm output pulses, replacing current method of bit-banging based on clock timer callbacks.  This improves control of the pulse width to reduce jitter.
The implementation is based on the timer code that had been commented-out in pwm.c, which needed fixes for defines and co-operation with usart using the same pin.  The basic logic was correct.  Some usart code is also updated for co-operation.
This has been tested with devo10 and t8sg.  Needs devo12 and modular build testing as those are slightly different.  Test builds available.","Yes, before merging I think.  The 12 uses a different pin for ppm, and the modular build makefile had to be changed to include the libopencm3 library.  Went ahead with the PR for review and comments.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,327,2017-11-23T22:43:27Z,2018-02-25T17:54:38Z,2018-02-25T17:54:38Z,MERGED,True,103,129,10,https://github.com/hexfet,Timer-based PPM protocol,8,[],https://github.com/DeviationTX/deviation/pull/327,https://github.com/TheRealMoeder,4,https://github.com/DeviationTX/deviation/pull/327#issuecomment-346928204,"Uses timer to generate ppm output pulses, replacing current method of bit-banging based on clock timer callbacks.  This improves control of the pulse width to reduce jitter.
The implementation is based on the timer code that had been commented-out in pwm.c, which needed fixes for defines and co-operation with usart using the same pin.  The basic logic was correct.  Some usart code is also updated for co-operation.
This has been tested with devo10 and t8sg.  Needs devo12 and modular build testing as those are slightly different.  Test builds available.","How exact has testing to be? My scope is not yet with me after moving, I only have the the cheap LA available, which obviously can't do jitter analysis. But if it's just a matter of checking the PPM output, I could test the 7e modular build",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,327,2017-11-23T22:43:27Z,2018-02-25T17:54:38Z,2018-02-25T17:54:38Z,MERGED,True,103,129,10,https://github.com/hexfet,Timer-based PPM protocol,8,[],https://github.com/DeviationTX/deviation/pull/327,https://github.com/F-D-R,5,https://github.com/DeviationTX/deviation/pull/327#issuecomment-346933924,"Uses timer to generate ppm output pulses, replacing current method of bit-banging based on clock timer callbacks.  This improves control of the pulse width to reduce jitter.
The implementation is based on the timer code that had been commented-out in pwm.c, which needed fixes for defines and co-operation with usart using the same pin.  The basic logic was correct.  Some usart code is also updated for co-operation.
This has been tested with devo10 and t8sg.  Needs devo12 and modular build testing as those are slightly different.  Test builds available.",I think that will do for now...,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,327,2017-11-23T22:43:27Z,2018-02-25T17:54:38Z,2018-02-25T17:54:38Z,MERGED,True,103,129,10,https://github.com/hexfet,Timer-based PPM protocol,8,[],https://github.com/DeviationTX/deviation/pull/327,https://github.com/hexfet,6,https://github.com/DeviationTX/deviation/pull/327#issuecomment-346958100,"Uses timer to generate ppm output pulses, replacing current method of bit-banging based on clock timer callbacks.  This improves control of the pulse width to reduce jitter.
The implementation is based on the timer code that had been commented-out in pwm.c, which needed fixes for defines and co-operation with usart using the same pin.  The basic logic was correct.  Some usart code is also updated for co-operation.
This has been tested with devo10 and t8sg.  Needs devo12 and modular build testing as those are slightly different.  Test builds available.","Yes, I think even just testing with the trainer input of another transmitter would be fine.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,327,2017-11-23T22:43:27Z,2018-02-25T17:54:38Z,2018-02-25T17:54:38Z,MERGED,True,103,129,10,https://github.com/hexfet,Timer-based PPM protocol,8,[],https://github.com/DeviationTX/deviation/pull/327,https://github.com/TheRealMoeder,7,https://github.com/DeviationTX/deviation/pull/327#issuecomment-351348824,"Uses timer to generate ppm output pulses, replacing current method of bit-banging based on clock timer callbacks.  This improves control of the pulse width to reduce jitter.
The implementation is based on the timer code that had been commented-out in pwm.c, which needed fixes for defines and co-operation with usart using the same pin.  The basic logic was correct.  Some usart code is also updated for co-operation.
This has been tested with devo10 and t8sg.  Needs devo12 and modular build testing as those are slightly different.  Test builds available.","Please be patient, I just have not had the time to run the tests yet",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,327,2017-11-23T22:43:27Z,2018-02-25T17:54:38Z,2018-02-25T17:54:38Z,MERGED,True,103,129,10,https://github.com/hexfet,Timer-based PPM protocol,8,[],https://github.com/DeviationTX/deviation/pull/327,https://github.com/OpenUAS,8,https://github.com/DeviationTX/deviation/pull/327#issuecomment-358575382,"Uses timer to generate ppm output pulses, replacing current method of bit-banging based on clock timer callbacks.  This improves control of the pulse width to reduce jitter.
The implementation is based on the timer code that had been commented-out in pwm.c, which needed fixes for defines and co-operation with usart using the same pin.  The basic logic was correct.  Some usart code is also updated for co-operation.
This has been tested with devo10 and t8sg.  Needs devo12 and modular build testing as those are slightly different.  Test builds available.",@TheRealMoeder could you find some time to test @hexfet nice improvement? TIA,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,327,2017-11-23T22:43:27Z,2018-02-25T17:54:38Z,2018-02-25T17:54:38Z,MERGED,True,103,129,10,https://github.com/hexfet,Timer-based PPM protocol,8,[],https://github.com/DeviationTX/deviation/pull/327,https://github.com/hexfet,9,https://github.com/DeviationTX/deviation/pull/327#issuecomment-364624502,"Uses timer to generate ppm output pulses, replacing current method of bit-banging based on clock timer callbacks.  This improves control of the pulse width to reduce jitter.
The implementation is based on the timer code that had been commented-out in pwm.c, which needed fixes for defines and co-operation with usart using the same pin.  The basic logic was correct.  Some usart code is also updated for co-operation.
This has been tested with devo10 and t8sg.  Needs devo12 and modular build testing as those are slightly different.  Test builds available.","Doing some more testing today and seeing some inconsistencies.
I made a modular build for my t8sg to test.  It works fine.  That leaves just the devo12 variation untested.   It would be better to go ahead and merge I think.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,327,2017-11-23T22:43:27Z,2018-02-25T17:54:38Z,2018-02-25T17:54:38Z,MERGED,True,103,129,10,https://github.com/hexfet,Timer-based PPM protocol,8,[],https://github.com/DeviationTX/deviation/pull/327,https://github.com/hexfet,10,https://github.com/DeviationTX/deviation/pull/327#issuecomment-364824538,"Uses timer to generate ppm output pulses, replacing current method of bit-banging based on clock timer callbacks.  This improves control of the pulse width to reduce jitter.
The implementation is based on the timer code that had been commented-out in pwm.c, which needed fixes for defines and co-operation with usart using the same pin.  The basic logic was correct.  Some usart code is also updated for co-operation.
This has been tested with devo10 and t8sg.  Needs devo12 and modular build testing as those are slightly different.  Test builds available.","There is a problem with this implementation in a modular build. Not sure how my first test worked.  Would like opinions on the best solution.
The issue is with the ISR in target/common/devo/protocol/pwm.c.  In a modular build this code is linked into the protocol .mod file, so the address in the vector table is not correct when the code is run.
One way to fix this would be to set the address in the vector table at runtime when the ppmout protocol is loaded.  But I think this would take some post-processing to find the ISR offset in the .mod file and then patch it somewhere it could be found at runtime.  Or is there an easy way to get a function offset in the .mod file at runtime?
Another option is to move the pwm.c code into the dfu file.  The disadvantage is using more flash in the modular build.  Also I'm not sure how to make it happen in the makefiles.
Are there other options?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,327,2017-11-23T22:43:27Z,2018-02-25T17:54:38Z,2018-02-25T17:54:38Z,MERGED,True,103,129,10,https://github.com/hexfet,Timer-based PPM protocol,8,[],https://github.com/DeviationTX/deviation/pull/327,https://github.com/hexfet,11,https://github.com/DeviationTX/deviation/pull/327#issuecomment-365499827,"Uses timer to generate ppm output pulses, replacing current method of bit-banging based on clock timer callbacks.  This improves control of the pulse width to reduce jitter.
The implementation is based on the timer code that had been commented-out in pwm.c, which needed fixes for defines and co-operation with usart using the same pin.  The basic logic was correct.  Some usart code is also updated for co-operation.
This has been tested with devo10 and t8sg.  Needs devo12 and modular build testing as those are slightly different.  Test builds available.","Setting the interrupt vector at runtime is not possible because the vector table is stored in flash (so much for late-night programming :/)  I've moved the pwm.c code out of the .mod file which increases the size of the modular builds by 448 bytes, moving from 115.27 to 115.71 KB.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,327,2017-11-23T22:43:27Z,2018-02-25T17:54:38Z,2018-02-25T17:54:38Z,MERGED,True,103,129,10,https://github.com/hexfet,Timer-based PPM protocol,8,[],https://github.com/DeviationTX/deviation/pull/327,https://github.com/hexfet,12,https://github.com/DeviationTX/deviation/pull/327#issuecomment-365827807,"Uses timer to generate ppm output pulses, replacing current method of bit-banging based on clock timer callbacks.  This improves control of the pulse width to reduce jitter.
The implementation is based on the timer code that had been commented-out in pwm.c, which needed fixes for defines and co-operation with usart using the same pin.  The basic logic was correct.  Some usart code is also updated for co-operation.
This has been tested with devo10 and t8sg.  Needs devo12 and modular build testing as those are slightly different.  Test builds available.",Moved only the timer interrupt service routine to flash.  Now the modular build rom memory usage is just 96 bytes more than the master branch.  Test builds are updated.  I've tested both normal and modular builds on t8sg.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,328,2017-11-28T00:28:35Z,2017-11-28T19:28:19Z,2018-01-17T04:33:07Z,MERGED,True,43,2,5,https://github.com/nknotts,Add ability to specify display scale/format string,3,[],https://github.com/DeviationTX/deviation/pull/328,https://github.com/nknotts,1,https://github.com/DeviationTX/deviation/pull/328,"I wanted to be able to specify channels in ranges other than [-100, 100] %. For example, I may want to map [-100, 100] % to [-1000, 1000] RPM. I've added the ability to specify the scale factor as well as the sprintf format string to facilitate this. To override, specify display-scale=xxx and/or display-format=sss in a particular channel section of model.ini. If display-scale or display-format are not specified, the default format is used. These options are only exposed by manually editting the model.ini file.","I wanted to be able to specify channels in ranges other than [-100, 100] %. For example, I may want to map [-100, 100] % to [-1000, 1000] RPM. I've added the ability to specify the scale factor as well as the sprintf format string to facilitate this. To override, specify display-scale=xxx and/or display-format=sss in a particular channel section of model.ini. If display-scale or display-format are not specified, the default format is used. These options are only exposed by manually editting the model.ini file.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,328,2017-11-28T00:28:35Z,2017-11-28T19:28:19Z,2018-01-17T04:33:07Z,MERGED,True,43,2,5,https://github.com/nknotts,Add ability to specify display scale/format string,3,[],https://github.com/DeviationTX/deviation/pull/328,https://github.com/F-D-R,2,https://github.com/DeviationTX/deviation/pull/328#issuecomment-347474703,"I wanted to be able to specify channels in ranges other than [-100, 100] %. For example, I may want to map [-100, 100] % to [-1000, 1000] RPM. I've added the ability to specify the scale factor as well as the sprintf format string to facilitate this. To override, specify display-scale=xxx and/or display-format=sss in a particular channel section of model.ini. If display-scale or display-format are not specified, the default format is used. These options are only exposed by manually editting the model.ini file.","Will this integer division be able to provide the required output?:
sprintf(tempstring, val_format, val_raw/val_scale);
To be honest I don't know the range used in val_raw, but I can imagine cases, when a less then one divider is needed, or when simply the integer divider steps cause too large change on the result, i.e. lack of precision...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,328,2017-11-28T00:28:35Z,2017-11-28T19:28:19Z,2018-01-17T04:33:07Z,MERGED,True,43,2,5,https://github.com/nknotts,Add ability to specify display scale/format string,3,[],https://github.com/DeviationTX/deviation/pull/328,https://github.com/nknotts,3,https://github.com/DeviationTX/deviation/pull/328#issuecomment-347498701,"I wanted to be able to specify channels in ranges other than [-100, 100] %. For example, I may want to map [-100, 100] % to [-1000, 1000] RPM. I've added the ability to specify the scale factor as well as the sprintf format string to facilitate this. To override, specify display-scale=xxx and/or display-format=sss in a particular channel section of model.ini. If display-scale or display-format are not specified, the default format is used. These options are only exposed by manually editting the model.ini file.","I discovered via inspection of the code that the normal range for val_raw was [-10,000 10,000].
This can be seen by src/pages/common/_main_page.c#L86
sprintf(tempstring, ""%3d%%"", RANGE_TO_PCT(MIXER_GetChannel(idx - (NUM_RTC + NUM_TIMERS + NUM_TELEM + 1), APPLY_SAFETY | APPLY_SCALAR)));
and
/src/mixer.h#L13
//MAX = 10000
//MIN = -10000
#define CHAN_MULTIPLIER 100
#define PCT_TO_RANGE(x) ((x) * CHAN_MULTIPLIER)
#define RANGE_TO_PCT(x) ((x) / CHAN_MULTIPLIER)

My intention was to make this change as minimally invasive as possible. I considered making the division a floating point operation but was unsure of how to measure the performance impact of doing so. For the ranges I desired, decimal devision worked well.
If floating point math is out, I could add a comment or two to help clarify.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,328,2017-11-28T00:28:35Z,2017-11-28T19:28:19Z,2018-01-17T04:33:07Z,MERGED,True,43,2,5,https://github.com/nknotts,Add ability to specify display scale/format string,3,[],https://github.com/DeviationTX/deviation/pull/328,https://github.com/F-D-R,4,https://github.com/DeviationTX/deviation/pull/328#issuecomment-347504802,"I wanted to be able to specify channels in ranges other than [-100, 100] %. For example, I may want to map [-100, 100] % to [-1000, 1000] RPM. I've added the ability to specify the scale factor as well as the sprintf format string to facilitate this. To override, specify display-scale=xxx and/or display-format=sss in a particular channel section of model.ini. If display-scale or display-format are not specified, the default format is used. These options are only exposed by manually editting the model.ini file.","I see, thanks.
I can't say if a floating point operation could cause performance issues (I doubt), but you point about the minimalist approach is valid. I just want to be sure it is future proof enough...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,328,2017-11-28T00:28:35Z,2017-11-28T19:28:19Z,2018-01-17T04:33:07Z,MERGED,True,43,2,5,https://github.com/nknotts,Add ability to specify display scale/format string,3,[],https://github.com/DeviationTX/deviation/pull/328,https://github.com/F-D-R,5,https://github.com/DeviationTX/deviation/pull/328#issuecomment-347505225,"I wanted to be able to specify channels in ranges other than [-100, 100] %. For example, I may want to map [-100, 100] % to [-1000, 1000] RPM. I've added the ability to specify the scale factor as well as the sprintf format string to facilitate this. To override, specify display-scale=xxx and/or display-format=sss in a particular channel section of model.ini. If display-scale or display-format are not specified, the default format is used. These options are only exposed by manually editting the model.ini file.",Let's wait for what the others think about this... :),True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,328,2017-11-28T00:28:35Z,2017-11-28T19:28:19Z,2018-01-17T04:33:07Z,MERGED,True,43,2,5,https://github.com/nknotts,Add ability to specify display scale/format string,3,[],https://github.com/DeviationTX/deviation/pull/328,https://github.com/F-D-R,6,https://github.com/DeviationTX/deviation/pull/328#issuecomment-347515582,"I wanted to be able to specify channels in ranges other than [-100, 100] %. For example, I may want to map [-100, 100] % to [-1000, 1000] RPM. I've added the ability to specify the scale factor as well as the sprintf format string to facilitate this. To override, specify display-scale=xxx and/or display-format=sss in a particular channel section of model.ini. If display-scale or display-format are not specified, the default format is used. These options are only exposed by manually editting the model.ini file.","AFAIK we don't have a documentation about the model.ini format, only MWM wrote a tutorial about that (http://rc.mired.org/p/writing-deviationtx-model.html).
However the manual indeed has a section about the only feature which has no GUI implementation, the safety system: https://www.deviationtx.com/manuals/html-devo8-en/ch_mainpage.html#safety-system",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,328,2017-11-28T00:28:35Z,2017-11-28T19:28:19Z,2018-01-17T04:33:07Z,MERGED,True,43,2,5,https://github.com/nknotts,Add ability to specify display scale/format string,3,[],https://github.com/DeviationTX/deviation/pull/328,https://github.com/vladislavy,7,https://github.com/DeviationTX/deviation/pull/328#issuecomment-358194331,"I wanted to be able to specify channels in ranges other than [-100, 100] %. For example, I may want to map [-100, 100] % to [-1000, 1000] RPM. I've added the ability to specify the scale factor as well as the sprintf format string to facilitate this. To override, specify display-scale=xxx and/or display-format=sss in a particular channel section of model.ini. If display-scale or display-format are not specified, the default format is used. These options are only exposed by manually editting the model.ini file.",It doesn't work for virtual channels values at main screen boxes. See issues.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,329,2017-12-07T16:09:45Z,2017-12-08T04:02:12Z,2017-12-08T04:02:12Z,MERGED,True,7,7,1,https://github.com/vladislavy,Change CC2500 output power values,1,[],https://github.com/DeviationTX/deviation/pull/329,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/329,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,331,2017-12-13T03:38:30Z,2017-12-13T17:57:20Z,2017-12-13T17:57:20Z,MERGED,True,1,6,1,https://github.com/vladislavy,Fix Devo F7 backlight,1,[],https://github.com/DeviationTX/deviation/pull/331,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/331,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,332,2017-12-13T13:21:41Z,2017-12-15T08:24:38Z,2017-12-15T08:24:38Z,MERGED,True,2,2,1,https://github.com/vladislavy,Fix vertical alignment for TINY_FONT (128x64x1 GUI),1,[],https://github.com/DeviationTX/deviation/pull/332,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/332,"Fix issue ""Main page text #330""","Fix issue ""Main page text #330""",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,332,2017-12-13T13:21:41Z,2017-12-15T08:24:38Z,2017-12-15T08:24:38Z,MERGED,True,2,2,1,https://github.com/vladislavy,Fix vertical alignment for TINY_FONT (128x64x1 GUI),1,[],https://github.com/DeviationTX/deviation/pull/332,https://github.com/vladislavy,2,https://github.com/DeviationTX/deviation/pull/332#issuecomment-351389874,"Fix issue ""Main page text #330""",I leave these lines commented out for next case with TYNY_FONT alignment.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,333,2017-12-15T13:12:04Z,2017-12-17T10:50:48Z,2017-12-17T10:50:48Z,MERGED,True,1,8,2,https://github.com/vladislavy,Fix vertical alignment for BDF fonts ,2,[],https://github.com/DeviationTX/deviation/pull/333,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/333,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,334,2017-12-28T03:46:29Z,2017-12-28T07:52:03Z,2017-12-28T07:52:03Z,MERGED,True,2,2,2,https://github.com/vladislavy,Fix misprint,2,[],https://github.com/DeviationTX/deviation/pull/334,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/334,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,335,2017-12-28T08:20:08Z,2017-12-28T08:26:32Z,2017-12-28T08:26:32Z,MERGED,True,2,2,2,https://github.com/vladislavy,Fix misprint,2,[],https://github.com/DeviationTX/deviation/pull/335,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/335,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,338,2018-01-05T19:56:13Z,2018-01-06T08:48:12Z,2018-01-06T08:48:12Z,MERGED,True,24,25,7,https://github.com/TheRealMoeder,Code cleanup,2,[],https://github.com/DeviationTX/deviation/pull/338,https://github.com/TheRealMoeder,1,https://github.com/DeviationTX/deviation/pull/338,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,339,2018-01-11T04:47:00Z,2018-01-11T11:11:33Z,2018-01-11T11:11:33Z,MERGED,True,4,2,1,https://github.com/vladislavy,Fix T8SG LCD_Init(),2,[],https://github.com/DeviationTX/deviation/pull/339,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/339,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,341,2018-01-17T15:48:36Z,2018-01-17T16:36:04Z,2018-01-17T16:36:04Z,MERGED,True,8,2,1,https://github.com/nknotts,#340 fix MIXER_GetChannelDisplayScale/Format,1,[],https://github.com/DeviationTX/deviation/pull/341,https://github.com/nknotts,1,https://github.com/DeviationTX/deviation/pull/341,I've fixed MIXER_GetChannelDisplayScale/MIXER_GetChannelDisplayFormat when used with a virtual channel (discovered in #340). I added a similar check used by MIXER_ApplyLimits and MIXER_GetLimit.,I've fixed MIXER_GetChannelDisplayScale/MIXER_GetChannelDisplayFormat when used with a virtual channel (discovered in #340). I added a similar check used by MIXER_ApplyLimits and MIXER_GetLimit.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,342,2018-01-18T11:40:46Z,2018-01-19T19:27:06Z,2018-01-24T13:53:49Z,MERGED,True,0,8,1,https://github.com/nknotts,model.c: fix duplicate de/serialization of 'display-scale',1,[],https://github.com/DeviationTX/deviation/pull/342,https://github.com/nknotts,1,https://github.com/DeviationTX/deviation/pull/342,https://www.deviationtx.com/forum/builds/7571-strange-behavior-of-devo-10,https://www.deviationtx.com/forum/builds/7571-strange-behavior-of-devo-10,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,342,2018-01-18T11:40:46Z,2018-01-19T19:27:06Z,2018-01-24T13:53:49Z,MERGED,True,0,8,1,https://github.com/nknotts,model.c: fix duplicate de/serialization of 'display-scale',1,[],https://github.com/DeviationTX/deviation/pull/342,https://github.com/nknotts,2,https://github.com/DeviationTX/deviation/pull/342#issuecomment-358624063,https://www.deviationtx.com/forum/builds/7571-strange-behavior-of-devo-10,"All entries in _seclimit are de/serialized via the write_int/assign_int functions. To prevent the duplications, I removed the additional de/serialization code for 'display-scale'.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,343,2018-01-19T17:33:38Z,2018-01-19T19:26:27Z,2018-01-19T19:26:28Z,MERGED,True,15,9,2,https://github.com/hexfet,Fix Frsky volt3 telemetry display,1,[],https://github.com/DeviationTX/deviation/pull/343,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/343,"The Volt3 value was incorrectly labeled Volt5/TelemV5 when configuring alerts and main page boxes.  Changed to display correctly.  Added comments where enums must be in order for correct display.
This will break model files that have configured an alert or display box for Volt5/TelemV5, but the effect is just to set the alert/box content to None.  Doubtful anyone has tried to display this since Volt3 is not normally in the Frsky telemetry stream.","The Volt3 value was incorrectly labeled Volt5/TelemV5 when configuring alerts and main page boxes.  Changed to display correctly.  Added comments where enums must be in order for correct display.
This will break model files that have configured an alert or display box for Volt5/TelemV5, but the effect is just to set the alert/box content to None.  Doubtful anyone has tried to display this since Volt3 is not normally in the Frsky telemetry stream.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,344,2018-01-20T06:59:59Z,2018-01-20T07:03:43Z,2018-01-20T07:03:43Z,MERGED,True,15,9,2,https://github.com/vladislavy,"Fix Frsky volt3 telemetry display, from hexfet",1,[],https://github.com/DeviationTX/deviation/pull/344,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/344,"The Volt3 value was incorrectly labeled Volt5/TelemV5 when configuring alerts and main page boxes. Changed to display correctly. Added comments where enums must be in order for correct display.
This will break model files that have configured an alert or display box for Volt5/TelemV5, but the effect is just to set the alert/box content to None. Doubtful anyone has tried to display this since Volt3 is not normally in the Frsky telemetry stream.","The Volt3 value was incorrectly labeled Volt5/TelemV5 when configuring alerts and main page boxes. Changed to display correctly. Added comments where enums must be in order for correct display.
This will break model files that have configured an alert or display box for Volt5/TelemV5, but the effect is just to set the alert/box content to None. Doubtful anyone has tried to display this since Volt3 is not normally in the Frsky telemetry stream.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,345,2018-01-26T08:33:48Z,2018-01-26T11:29:48Z,2018-01-26T11:29:48Z,MERGED,True,4,4,2,https://github.com/vladislavy,Fix battery alarm limits for devof4,2,[],https://github.com/DeviationTX/deviation/pull/345,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/345,"Devo F4 can be used with 4xAA battery. But, battery alarm limits can't be changed by user.","Devo F4 can be used with 4xAA battery. But, battery alarm limits can't be changed by user.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,346,2018-01-29T10:31:31Z,2018-01-30T05:07:55Z,2018-01-30T05:07:55Z,MERGED,True,2,4,1,https://github.com/vladislavy,Revert fix for #600,1,[],https://github.com/DeviationTX/deviation/pull/346,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/346,"2c5dda0#diff-37a3cf31eac0c0a3ec01d4a28a7f9d6d
The reason; it breaks intended functionality.
https://www.deviationtx.com/forum/3-feedback-questions/1274-independent-trims-for-flight-modes?start=40#67242","2c5dda0#diff-37a3cf31eac0c0a3ec01d4a28a7f9d6d
The reason; it breaks intended functionality.
https://www.deviationtx.com/forum/3-feedback-questions/1274-independent-trims-for-flight-modes?start=40#67242",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,347,2018-01-30T05:44:13Z,2018-01-31T05:04:07Z,2018-01-31T05:04:07Z,MERGED,True,8,6,3,https://github.com/vladislavy,Add support for 6 independent trims set,1,[],https://github.com/DeviationTX/deviation/pull/347,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/347,"You can use 4-6 contiguous virtual channels to setup 4-6 pos switch, then assign to trims ""Switch"" the first used virtual channel and you will have 4-6 independent trims set. The virtual channels switch at any state should have only single channel with +100% value, all others -100%. It's intended for for 4-6 flight modes with independent trims settings.","You can use 4-6 contiguous virtual channels to setup 4-6 pos switch, then assign to trims ""Switch"" the first used virtual channel and you will have 4-6 independent trims set. The virtual channels switch at any state should have only single channel with +100% value, all others -100%. It's intended for for 4-6 flight modes with independent trims settings.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,348,2018-01-30T14:44:34Z,2018-01-30T14:51:58Z,2018-01-30T14:51:58Z,MERGED,True,14,2,1,https://github.com/vladislavy,Fix Makefile for Windows environment,1,[],https://github.com/DeviationTX/deviation/pull/348,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/348,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,349,2018-01-30T15:09:12Z,2018-02-05T04:01:00Z,2018-02-05T04:01:01Z,MERGED,True,14,3,1,https://github.com/vladislavy,Fix Makefile for Windows environment,2,[],https://github.com/DeviationTX/deviation/pull/349,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/349,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,349,2018-01-30T15:09:12Z,2018-02-05T04:01:00Z,2018-02-05T04:01:01Z,MERGED,True,14,3,1,https://github.com/vladislavy,Fix Makefile for Windows environment,2,[],https://github.com/DeviationTX/deviation/pull/349,https://github.com/vladislavy,2,https://github.com/DeviationTX/deviation/pull/349#issuecomment-361829888,,"If it will be ""release_$1: zip_$1 zip_win_$1 fs_$1"" then you will try to build ""devo8"" emu but not ""emu_devo8"". See ""both_$1: $1 emu_$1"". It's related to options with multiple entries.
I have tested all options. Now all options works fine.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,350,2018-02-01T06:31:32Z,2018-02-01T06:37:53Z,2018-02-01T06:37:53Z,MERGED,True,11,2,3,https://github.com/vladislavy,"Add 3pos momentary trim switch, from DavidBoone",1,[],https://github.com/DeviationTX/deviation/pull/350,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/350,"Adds the ability to use the momentary trim switches as 3 pos switches. ie, normal resting position is centred (0), while pressing the trim one way or the other results in a momentary deflection in one direction (-100) or the other (+100).","Adds the ability to use the momentary trim switches as 3 pos switches. ie, normal resting position is centred (0), while pressing the trim one way or the other results in a momentary deflection in one direction (-100) or the other (+100).",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,351,2018-02-01T06:49:47Z,2018-02-01T06:53:33Z,2018-02-01T06:53:33Z,MERGED,True,8,6,3,https://github.com/vladislavy,Add support for 6 independent trims set,1,[],https://github.com/DeviationTX/deviation/pull/351,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/351,"You can use 4-6 contiguous virtual channels to setup 4-6 pos switch, then assign to trims ""Switch"" the first used virtual channel and you will have 4-6 independent trims set. The virtual channels switch at any state should have only single channel with +100% value, all others -100%. It's intended for for 4-6 flight modes with independent trims settings.","You can use 4-6 contiguous virtual channels to setup 4-6 pos switch, then assign to trims ""Switch"" the first used virtual channel and you will have 4-6 independent trims set. The virtual channels switch at any state should have only single channel with +100% value, all others -100%. It's intended for for 4-6 flight modes with independent trims settings.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,352,2018-02-02T11:27:42Z,2018-02-13T03:46:37Z,2018-02-13T03:46:37Z,MERGED,True,2,6,2,https://github.com/vladislavy,Cleanup devo7e-256 and t8sg Makefile.inc,2,[],https://github.com/DeviationTX/deviation/pull/352,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/352,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,355,2018-02-08T12:50:18Z,2018-02-08T12:54:01Z,2018-02-08T12:54:01Z,MERGED,True,325,113,6,https://github.com/vladislavy,Add flash memory type detection,1,[],https://github.com/DeviationTX/deviation/pull/355,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/355,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,356,2018-02-08T13:06:04Z,2018-02-08T13:09:30Z,2018-02-08T13:09:30Z,MERGED,True,136,2,20,https://github.com/vladislavy,Add devof12e-XMS,1,[],https://github.com/DeviationTX/deviation/pull/356,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/356,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,357,2018-02-08T13:34:23Z,2018-02-08T13:40:11Z,2018-02-08T13:40:11Z,MERGED,True,122,0,21,https://github.com/vladislavy,Add devof7-XMS,1,[],https://github.com/DeviationTX/deviation/pull/357,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/357,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,358,2018-02-08T13:43:31Z,2018-02-08T13:49:38Z,2018-02-08T13:49:38Z,MERGED,True,1,1,1,https://github.com/vladislavy,Add devof7-XMS to Makefile,1,[],https://github.com/DeviationTX/deviation/pull/358,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/358,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,359,2018-02-08T13:53:20Z,2018-02-08T13:57:02Z,2018-02-08T13:57:02Z,MERGED,True,94,1,11,https://github.com/vladislavy,Add devof4-XMS,1,[],https://github.com/DeviationTX/deviation/pull/359,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/359,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,360,2018-02-11T10:05:30Z,2018-02-13T03:57:33Z,2018-02-13T03:57:33Z,MERGED,True,4,6,4,https://github.com/vladislavy,"Cleanup devof4, devof7 and devof12e target_defs.h",4,[],https://github.com/DeviationTX/deviation/pull/360,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/360,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,361,2018-02-13T11:47:02Z,2018-02-13T11:51:45Z,2018-02-13T11:51:46Z,MERGED,True,0,14,14,https://github.com/vladislavy,"Delete unused ""NUM_TOGGLES""",1,[],https://github.com/DeviationTX/deviation/pull/361,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/361,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,362,2018-02-13T13:26:55Z,2018-02-19T06:16:11Z,2018-02-19T06:16:11Z,MERGED,True,1,17,16,https://github.com/vladislavy,"Delete unused ""NUM_TOGGLES""",1,[],https://github.com/DeviationTX/deviation/pull/362,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/362,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,363,2018-02-14T06:23:59Z,2018-02-19T06:15:11Z,2018-02-19T06:15:11Z,MERGED,True,1,1,1,https://github.com/vladislavy,Disable 4IN1_FLASH support for T8SG,1,[],https://github.com/DeviationTX/deviation/pull/363,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/363,It has not sense for transmitter with integrated 4in1 module. Probably we can disable 4IN1_FLASH support for all transmitters with plenty flash memory.,It has not sense for transmitter with integrated 4in1 module. Probably we can disable 4IN1_FLASH support for all transmitters with plenty flash memory.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,364,2018-02-19T15:19:14Z,2018-02-25T09:51:40Z,2018-02-25T09:51:40Z,MERGED,True,119,212,3,https://github.com/vladislavy,"Modify and cleanup devof12e ""lcd.c""",1,[],https://github.com/DeviationTX/deviation/pull/364,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/364,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,364,2018-02-19T15:19:14Z,2018-02-25T09:51:40Z,2018-02-25T09:51:40Z,MERGED,True,119,212,3,https://github.com/vladislavy,"Modify and cleanup devof12e ""lcd.c""",1,[],https://github.com/DeviationTX/deviation/pull/364,https://github.com/vladislavy,2,https://github.com/DeviationTX/deviation/pull/364#issuecomment-367257847,,"I started from code cleanup and ended with modification. The original version has two different types of status check for different stages. I changed it to uniform and deleted unnecessary functions. Also, the I2C1_ReadBufferDMA() use DMA to read several bytes to buffer, I changed it to same way as for write (using i2c read) and deleted unnecessary functions and headers. Now it takes about 100 bytes less memory. Tested by about half a hour with menu navigation, scrolling icons and use video PAL and NTSC: = all OK, no errors at debug log.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,365,2018-02-20T16:56:17Z,2018-02-24T20:31:22Z,2018-02-24T20:31:22Z,MERGED,True,135,64,2,https://github.com/vladislavy,"Add Microchip SST26VFxxxB, Macronix MX25Lxxxxx and Adesto AT25DFxx1A",1,[],https://github.com/DeviationTX/deviation/pull/365,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/365,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,366,2018-02-22T04:44:54Z,2018-02-25T09:49:25Z,2018-02-25T09:49:25Z,MERGED,True,9,7,5,https://github.com/vladislavy,"Add ""HAS_SWITCHES_NOSTOCK"" option",2,[],https://github.com/DeviationTX/deviation/pull/366,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/366,It will simplify adding devo7e-256 clones like T8SG and IR8M.,It will simplify adding devo7e-256 clones like T8SG and IR8M.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,367,2018-02-22T05:23:33Z,2018-02-22T05:27:16Z,2018-02-22T05:27:16Z,MERGED,True,9,7,5,https://github.com/vladislavy,"Add ""HAS_SWITCHES_NOSTOCK"" option",1,[],https://github.com/DeviationTX/deviation/pull/367,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/367,It will simplify adding devo7e-256 clones like T8SG and IR8M.,It will simplify adding devo7e-256 clones like T8SG and IR8M.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,368,2018-02-22T14:28:31Z,2018-02-25T14:20:46Z,2018-02-25T14:20:46Z,MERGED,True,42,2,4,https://github.com/vladislavy,Add selectable and configurable drawn background,2,[],https://github.com/DeviationTX/deviation/pull/368,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/368,"You can select to draw background instead a background image for color GUI. This will greatly speed up the drawing of the pages. You can set header color and background color. The settings are in ""config.ini"" file. By default used background image.
[background]
  drawn_background=0
  bg_color=50A0D8
  hd_color=707070","You can select to draw background instead a background image for color GUI. This will greatly speed up the drawing of the pages. You can set header color and background color. The settings are in ""config.ini"" file. By default used background image.
[background]
  drawn_background=0
  bg_color=50A0D8
  hd_color=707070",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,368,2018-02-22T14:28:31Z,2018-02-25T14:20:46Z,2018-02-25T14:20:46Z,MERGED,True,42,2,4,https://github.com/vladislavy,Add selectable and configurable drawn background,2,[],https://github.com/DeviationTX/deviation/pull/368,https://github.com/F-D-R,2,https://github.com/DeviationTX/deviation/pull/368#issuecomment-368296401,"You can select to draw background instead a background image for color GUI. This will greatly speed up the drawing of the pages. You can set header color and background color. The settings are in ""config.ini"" file. By default used background image.
[background]
  drawn_background=0
  bg_color=50A0D8
  hd_color=707070","Why did you only include the drawing settings for the 480x320 type screens?
How would it work for the Devo8?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,368,2018-02-22T14:28:31Z,2018-02-25T14:20:46Z,2018-02-25T14:20:46Z,MERGED,True,42,2,4,https://github.com/vladislavy,Add selectable and configurable drawn background,2,[],https://github.com/DeviationTX/deviation/pull/368,https://github.com/vladislavy,3,https://github.com/DeviationTX/deviation/pull/368#issuecomment-368297238,"You can select to draw background instead a background image for color GUI. This will greatly speed up the drawing of the pages. You can set header color and background color. The settings are in ""config.ini"" file. By default used background image.
[background]
  drawn_background=0
  bg_color=50A0D8
  hd_color=707070","It's for both color screens 480x272x16 or 320x240x16
#if (LCD_WIDTH == 480) || (LCD_WIDTH == 320)
320x240x16 ""config.ini"" used for both screens:
FILESYSTEMS := common base_fonts 320x240x16 480x272x16
Tested with devo12, devo12-XMS and devo8.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,368,2018-02-22T14:28:31Z,2018-02-25T14:20:46Z,2018-02-25T14:20:46Z,MERGED,True,42,2,4,https://github.com/vladislavy,Add selectable and configurable drawn background,2,[],https://github.com/DeviationTX/deviation/pull/368,https://github.com/F-D-R,4,https://github.com/DeviationTX/deviation/pull/368#issuecomment-368312400,"You can select to draw background instead a background image for color GUI. This will greatly speed up the drawing of the pages. You can set header color and background color. The settings are in ""config.ini"" file. By default used background image.
[background]
  drawn_background=0
  bg_color=50A0D8
  hd_color=707070","Oops, sorry, I’ve missed that both values are widths... 😁
Don’t we have a switch for the color screens in general?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,369,2018-02-23T10:40:59Z,2018-02-25T09:48:20Z,2018-02-25T09:48:20Z,MERGED,True,3,1,1,https://github.com/vladislavy,"Fix ""Input monitor"" page",1,[],https://github.com/DeviationTX/deviation/pull/369,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/369,I think it fix issue -> Unused input bars not hidden in input monitor #248,I think it fix issue -> Unused input bars not hidden in input monitor #248,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,370,2018-02-23T12:40:29Z,2018-02-23T12:43:46Z,2018-02-23T12:43:46Z,MERGED,True,132,48,2,https://github.com/vladislavy,"Add Microchip SST26VFxxxB, Macronix MX25Lxxxxx and Adesto AT25DFxx1A",1,[],https://github.com/DeviationTX/deviation/pull/370,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/370,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,371,2018-02-23T12:54:10Z,2018-02-23T12:57:50Z,2018-02-23T12:57:50Z,MERGED,True,54,2,5,https://github.com/vladislavy,Add selectable and configurable drawn background,1,[],https://github.com/DeviationTX/deviation/pull/371,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/371,"You can select to draw background instead a background image for color GUI. This will greatly speed up the drawing of the pages. You can set header color and background color. The settings are in ""config.ini"" file. By default used background image.
[background]
  drawn_background=0
  bg_color=50A0D8
  hd_color=707070","You can select to draw background instead a background image for color GUI. This will greatly speed up the drawing of the pages. You can set header color and background color. The settings are in ""config.ini"" file. By default used background image.
[background]
  drawn_background=0
  bg_color=50A0D8
  hd_color=707070",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,372,2018-02-24T07:50:12Z,2018-02-25T09:50:01Z,2018-02-25T09:50:01Z,MERGED,True,2,2,1,https://github.com/vladislavy,"Fix color GUI ""Voice config"" page",1,[],https://github.com/DeviationTX/deviation/pull/372,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/372,"It fix the devo8 and devo12 ""Voice config"" page ""External voice currently not available"" has not [Exit] button as all other pages.","It fix the devo8 and devo12 ""Voice config"" page ""External voice currently not available"" has not [Exit] button as all other pages.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,373,2018-02-25T10:48:42Z,2018-02-25T10:52:44Z,2018-02-25T10:52:44Z,MERGED,True,119,212,3,https://github.com/vladislavy,"Modify and cleanup devof12e ""lcd.c""",1,[],https://github.com/DeviationTX/deviation/pull/373,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/373,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,374,2018-03-03T18:45:49Z,2018-03-04T15:58:10Z,2018-03-04T15:58:10Z,CLOSED,False,7,7,1,https://github.com/vladislavy,Fix reset toggle icon position after selection,1,[],https://github.com/DeviationTX/deviation/pull/374,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/374,Issue: The toggle icon position will reset to x=0 y=32 after toggle icon selection.,Issue: The toggle icon position will reset to x=0 y=32 after toggle icon selection.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,375,2018-03-04T03:32:22Z,2018-03-10T01:49:57Z,2018-03-10T01:49:57Z,MERGED,True,4,0,1,https://github.com/vladislavy,Fix startup sound volume with drawn background,1,[],https://github.com/DeviationTX/deviation/pull/375,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/375,With drawn background added delay 0.3sec in order to extended sound device be ready to set volume.,With drawn background added delay 0.3sec in order to extended sound device be ready to set volume.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,376,2018-03-05T05:20:38Z,2018-03-06T18:46:14Z,2018-03-06T18:46:14Z,CLOSED,False,4,1,1,https://github.com/vladislavy,Temporary fix for toggle icon position reset,1,[],https://github.com/DeviationTX/deviation/pull/376,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/376,"Issue: the main layout toggle icon position will reset to x=0 y=32 after toggle icon change/selection.
I can't find the specific reason, so it's temporary fix, all works right but not as it should work.","Issue: the main layout toggle icon position will reset to x=0 y=32 after toggle icon change/selection.
I can't find the specific reason, so it's temporary fix, all works right but not as it should work.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,377,2018-03-07T04:54:53Z,2018-03-12T04:07:14Z,2018-03-12T04:07:14Z,MERGED,True,14,8,2,https://github.com/vladislavy,Proper fix for issue #297 and introduced bug,1,[],https://github.com/DeviationTX/deviation/pull/377,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/377,"It will properly fix:

issue #297 - move layout items at 320x240 GUI,
introduced bug - the main layout toggle icon position will reset to x=0 y=32 after toggle icon change/selection,

Also, changed to remove dialog object, since remove dialog object by self will remove all hierarchical objects.","It will properly fix:

issue #297 - move layout items at 320x240 GUI,
introduced bug - the main layout toggle icon position will reset to x=0 y=32 after toggle icon change/selection,

Also, changed to remove dialog object, since remove dialog object by self will remove all hierarchical objects.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,378,2018-03-12T04:18:31Z,2018-03-12T04:22:19Z,2018-03-12T04:22:19Z,MERGED,True,105,2,13,https://github.com/vladislavy,Add devo12-XMS target,1,[],https://github.com/DeviationTX/deviation/pull/378,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/378,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,379,2018-03-12T05:04:15Z,2018-03-12T05:08:01Z,2018-03-12T05:08:01Z,MERGED,True,12,2,4,https://github.com/vladislavy,Disable datalog for devof4-XMS and devof7-XMS,1,[],https://github.com/DeviationTX/deviation/pull/379,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/379,Because of lack of memory for future updates.,Because of lack of memory for future updates.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,380,2018-03-12T05:40:47Z,2018-03-16T23:06:35Z,2018-03-16T23:06:35Z,MERGED,True,2,2,2,https://github.com/vladislavy,"Fix ""ENTRIES_BY_SCREENSIZE"" for 480x272x16 GUI",2,[],https://github.com/DeviationTX/deviation/pull/380,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/380,"Ten entries do not fit on the devo12 screen. See the ""Standard"" GUI ""Travel adjust"" page with 10-12 channels.","Ten entries do not fit on the devo12 screen. See the ""Standard"" GUI ""Travel adjust"" page with 10-12 channels.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,381,2018-03-13T09:44:52Z,2018-03-16T23:05:15Z,2018-03-16T23:05:15Z,MERGED,True,2,2,1,https://github.com/vladislavy,"Fix 128x64x1 ""Channel monitor->Stick input"" page",1,[],https://github.com/DeviationTX/deviation/pull/381,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/381,Labels input name and value overlapped.,Labels input name and value overlapped.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,382,2018-03-16T08:51:47Z,2018-03-16T08:56:24Z,2018-03-16T08:56:24Z,MERGED,True,212,47,19,https://github.com/vladislavy,Optimize GUI redraw,1,[],https://github.com/DeviationTX/deviation/pull/382,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/382,"Avoid full page redraw for any scrollable object change. It looks much more naturally if updated the scrollable area only, but not the full page.
Avoid full page redraw with every item position change at ""Main layout edit"" page.
Avoid full page redraw after close any dialog window.
Optimize redraw objects after close dialog window, redraw underlying objects only.","Avoid full page redraw for any scrollable object change. It looks much more naturally if updated the scrollable area only, but not the full page.
Avoid full page redraw with every item position change at ""Main layout edit"" page.
Avoid full page redraw after close any dialog window.
Optimize redraw objects after close dialog window, redraw underlying objects only.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,383,2018-03-17T10:29:16Z,2018-03-17T10:33:18Z,2018-03-17T10:33:18Z,MERGED,True,8,9,4,https://github.com/vladislavy,Fix display of text in startup warnings,1,[],https://github.com/DeviationTX/deviation/pull/383,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/383,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,384,2018-03-17T22:21:09Z,2018-03-18T22:40:53Z,2018-03-22T08:33:31Z,MERGED,True,399,0,3,https://github.com/hexfet,Add protocol for Corona V1/V2 and Flydream V3,15,[],https://github.com/DeviationTX/deviation/pull/384,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/384,"Ported Corona protocol from the DIY-Multiprotocol project, where it was recently added by Pascal.  Added support for Flydream with help from forum user Fernandez.","Ported Corona protocol from the DIY-Multiprotocol project, where it was recently added by Pascal.  Added support for Flydream with help from forum user Fernandez.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,384,2018-03-17T22:21:09Z,2018-03-18T22:40:53Z,2018-03-22T08:33:31Z,MERGED,True,399,0,3,https://github.com/hexfet,Add protocol for Corona V1/V2 and Flydream V3,15,[],https://github.com/DeviationTX/deviation/pull/384,https://github.com/hexfet,2,https://github.com/DeviationTX/deviation/pull/384#issuecomment-373958854,"Ported Corona protocol from the DIY-Multiprotocol project, where it was recently added by Pascal.  Added support for Flydream with help from forum user Fernandez.",Replaced code that generated the warning and removed the pragmas.  Not sure whether to blame windows for lack of pragma support or gcc for the false positive warning.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,384,2018-03-17T22:21:09Z,2018-03-18T22:40:53Z,2018-03-22T08:33:31Z,MERGED,True,399,0,3,https://github.com/hexfet,Add protocol for Corona V1/V2 and Flydream V3,15,[],https://github.com/DeviationTX/deviation/pull/384,https://github.com/vladislavy,3,https://github.com/DeviationTX/deviation/pull/384#issuecomment-375180113,"Ported Corona protocol from the DIY-Multiprotocol project, where it was recently added by Pascal.  Added support for Flydream with help from forum user Fernandez.",Corona protocol module after build has 4 bytes size (devo7e).,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,384,2018-03-17T22:21:09Z,2018-03-18T22:40:53Z,2018-03-22T08:33:31Z,MERGED,True,399,0,3,https://github.com/hexfet,Add protocol for Corona V1/V2 and Flydream V3,15,[],https://github.com/DeviationTX/deviation/pull/384,https://github.com/goebish,4,https://github.com/DeviationTX/deviation/pull/384#issuecomment-375217463,"Ported Corona protocol from the DIY-Multiprotocol project, where it was recently added by Pascal.  Added support for Flydream with help from forum user Fernandez.",Modular build fix: #390,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,385,2018-03-19T01:07:56Z,2018-03-19T07:58:36Z,2018-03-19T07:58:36Z,MERGED,True,58,22,21,https://github.com/hexfet,Support 16 channels for FrskyX and 14 for AFHDS,4,[],https://github.com/DeviationTX/deviation/pull/385,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/385,"Increase maximum channels supported in deviation to 16.  Enable 16 channels in FrskyX (tested) and AFHDS (not tested).
Add comments to dsm protocol with code to support Spektrum XPLUS module from vlad_vy.  Could be used by someone to make their own builds.  Enabling makes the protocol too big for modular builds.","Increase maximum channels supported in deviation to 16.  Enable 16 channels in FrskyX (tested) and AFHDS (not tested).
Add comments to dsm protocol with code to support Spektrum XPLUS module from vlad_vy.  Could be used by someone to make their own builds.  Enabling makes the protocol too big for modular builds.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,386,2018-03-19T05:05:20Z,2018-03-19T05:10:17Z,2018-03-19T05:10:17Z,MERGED,True,399,0,3,https://github.com/vladislavy,"Add protocol for Corona V1/V2 and Flydream V3, from hexfet",1,[],https://github.com/DeviationTX/deviation/pull/386,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/386,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,387,2018-03-19T06:42:54Z,2018-03-19T06:47:01Z,2018-03-19T06:47:02Z,MERGED,True,29,1,3,https://github.com/vladislavy,"Add ""External OSD"" page to devo ""F"" series",1,[],https://github.com/DeviationTX/deviation/pull/387,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/387,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,388,2018-03-19T08:29:17Z,2018-03-19T08:32:53Z,2018-03-19T08:32:53Z,MERGED,True,58,22,21,https://github.com/vladislavy,"Support 16 channels for FrskyX and 14 for AFHDS, from hexfet",1,[],https://github.com/DeviationTX/deviation/pull/388,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/388,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,389,2018-03-21T17:01:11Z,2018-03-28T08:42:37Z,2018-03-28T08:42:37Z,MERGED,True,5,5,1,https://github.com/vladislavy,Fix SPI_FlashBlockWriteEnable() for 4IN1_FLASH support,1,[],https://github.com/DeviationTX/deviation/pull/389,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/389,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,390,2018-03-22T08:32:22Z,2018-03-22T11:41:34Z,2019-03-05T00:10:13Z,MERGED,True,1,1,1,https://github.com/goebish,Fix Corona protocol modular build,1,[],https://github.com/DeviationTX/deviation/pull/390,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/390,Fix Corona protocol modular build,Fix Corona protocol modular build,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,391,2018-03-23T07:40:54Z,2018-03-29T08:44:12Z,2018-03-29T08:44:12Z,CLOSED,False,113,6,14,https://github.com/vladislavy,Add devo12-XMS target,2,[],https://github.com/DeviationTX/deviation/pull/391,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/391,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,391,2018-03-23T07:40:54Z,2018-03-29T08:44:12Z,2018-03-29T08:44:12Z,CLOSED,False,113,6,14,https://github.com/vladislavy,Add devo12-XMS target,2,[],https://github.com/DeviationTX/deviation/pull/391,https://github.com/F-D-R,2,https://github.com/DeviationTX/deviation/pull/391#issuecomment-375953882,,Couldn't we just detect the flash size and work according to the result?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,391,2018-03-23T07:40:54Z,2018-03-29T08:44:12Z,2018-03-29T08:44:12Z,CLOSED,False,113,6,14,https://github.com/vladislavy,Add devo12-XMS target,2,[],https://github.com/DeviationTX/deviation/pull/391,https://github.com/vladislavy,3,https://github.com/DeviationTX/deviation/pull/391#issuecomment-375955938,,"In that case all devo12 specific code need to be included to common code, and other significant changes. I don't think it will be worth the result.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,391,2018-03-23T07:40:54Z,2018-03-29T08:44:12Z,2018-03-29T08:44:12Z,CLOSED,False,113,6,14,https://github.com/vladislavy,Add devo12-XMS target,2,[],https://github.com/DeviationTX/deviation/pull/391,https://github.com/F-D-R,4,https://github.com/DeviationTX/deviation/pull/391#issuecomment-375996735,,"No, I thought in the DEVO 12 specific code, since it has specific memory management anyway, hasn't it?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,391,2018-03-23T07:40:54Z,2018-03-29T08:44:12Z,2018-03-29T08:44:12Z,CLOSED,False,113,6,14,https://github.com/vladislavy,Add devo12-XMS target,2,[],https://github.com/DeviationTX/deviation/pull/391,https://github.com/vladislavy,5,https://github.com/DeviationTX/deviation/pull/391#issuecomment-376043564,,"I don't understand. devo12-XMS use common code and devo12 replace some common code and add some specific code for media drive, at build time.
I thought about merging into a single universal build, but I can not find a simple way. And, what to do with library file for devo12?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,392,2018-03-24T14:24:54Z,2018-03-24T16:56:01Z,2018-03-24T16:56:02Z,MERGED,True,15,23,1,https://github.com/hexfet,Fix Corona protocol,2,[],https://github.com/DeviationTX/deviation/pull/392,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/392,Simpler fix for maybe-uninitialized warning that doesn't break the protocol.,Simpler fix for maybe-uninitialized warning that doesn't break the protocol.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,395,2018-04-17T14:43:40Z,2018-04-18T20:07:07Z,2018-04-18T20:07:07Z,MERGED,True,2,2,1,https://github.com/vladislavy,Fix devo7e emulator FMODE button,1,[],https://github.com/DeviationTX/deviation/pull/395,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/395,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,396,2018-04-18T22:55:50Z,2018-04-19T05:51:44Z,2018-04-19T05:51:44Z,MERGED,True,42,8,2,https://github.com/hexfet,Update UART_ API to support serial protocol development,1,[],https://github.com/DeviationTX/deviation/pull/396,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/396,Support for SBUS requires non-standard data rate and parity and stop bit changes.  Other serial protocols need similar control.,Support for SBUS requires non-standard data rate and parity and stop bit changes.  Other serial protocols need similar control.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,396,2018-04-18T22:55:50Z,2018-04-19T05:51:44Z,2018-04-19T05:51:44Z,MERGED,True,42,8,2,https://github.com/hexfet,Update UART_ API to support serial protocol development,1,[],https://github.com/DeviationTX/deviation/pull/396,https://github.com/hexfet,2,https://github.com/DeviationTX/deviation/pull/396#issuecomment-382555058,Support for SBUS requires non-standard data rate and parity and stop bit changes.  Other serial protocols need similar control.,"Considered creating a separate uart.h file instead of putting the enums in target.h, but couldn't find a good way to include it at the target.h level.  Would that be better?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,397,2018-04-21T20:30:39Z,2018-05-08T08:54:13Z,2018-05-08T08:54:13Z,MERGED,True,244,10,7,https://github.com/hexfet,Update UART API to support receiving data,7,[],https://github.com/DeviationTX/deviation/pull/397,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/397,"Adds UART_StartReceive and UART_StopReceive functions to UART API.  UART_StartReceive sets callback function that receives incoming serial data.
Adds UART_SetDuplex to set half duplex hardware support.
Adds TESTSER protocol as example implementation and test harness for UART_* functions.","Adds UART_StartReceive and UART_StopReceive functions to UART API.  UART_StartReceive sets callback function that receives incoming serial data.
Adds UART_SetDuplex to set half duplex hardware support.
Adds TESTSER protocol as example implementation and test harness for UART_* functions.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,397,2018-04-21T20:30:39Z,2018-05-08T08:54:13Z,2018-05-08T08:54:13Z,MERGED,True,244,10,7,https://github.com/hexfet,Update UART API to support receiving data,7,[],https://github.com/DeviationTX/deviation/pull/397,https://github.com/F-D-R,2,https://github.com/DeviationTX/deviation/pull/397#issuecomment-383330123,"Adds UART_StartReceive and UART_StopReceive functions to UART API.  UART_StartReceive sets callback function that receives incoming serial data.
Adds UART_SetDuplex to set half duplex hardware support.
Adds TESTSER protocol as example implementation and test harness for UART_* functions.","I would suggest not to commit it into the trunk, but provide as a test build...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,397,2018-04-21T20:30:39Z,2018-05-08T08:54:13Z,2018-05-08T08:54:13Z,MERGED,True,244,10,7,https://github.com/hexfet,Update UART API to support receiving data,7,[],https://github.com/DeviationTX/deviation/pull/397,https://github.com/hexfet,3,https://github.com/DeviationTX/deviation/pull/397#issuecomment-383332740,"Adds UART_StartReceive and UART_StopReceive functions to UART API.  UART_StartReceive sets callback function that receives incoming serial data.
Adds UART_SetDuplex to set half duplex hardware support.
Adds TESTSER protocol as example implementation and test harness for UART_* functions.","I can provide a test build, but not sure why you suggest these changes should not be committed.  This is a prerequisite for supporting CRSF, not throwaway code.  But it's not dependent on specific serial protocol so should be a separate PR.  Should've mentioned that I've tested on both t8sg and devo10.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,397,2018-04-21T20:30:39Z,2018-05-08T08:54:13Z,2018-05-08T08:54:13Z,MERGED,True,244,10,7,https://github.com/hexfet,Update UART API to support receiving data,7,[],https://github.com/DeviationTX/deviation/pull/397,https://github.com/F-D-R,4,https://github.com/DeviationTX/deviation/pull/397#issuecomment-387171464,"Adds UART_StartReceive and UART_StopReceive functions to UART API.  UART_StartReceive sets callback function that receives incoming serial data.
Adds UART_SetDuplex to set half duplex hardware support.
Adds TESTSER protocol as example implementation and test harness for UART_* functions.",Then why did you name it test serial?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,397,2018-04-21T20:30:39Z,2018-05-08T08:54:13Z,2018-05-08T08:54:13Z,MERGED,True,244,10,7,https://github.com/hexfet,Update UART API to support receiving data,7,[],https://github.com/DeviationTX/deviation/pull/397,https://github.com/hexfet,5,https://github.com/DeviationTX/deviation/pull/397#issuecomment-387219520,"Adds UART_StartReceive and UART_StopReceive functions to UART API.  UART_StartReceive sets callback function that receives incoming serial data.
Adds UART_SetDuplex to set half duplex hardware support.
Adds TESTSER protocol as example implementation and test harness for UART_* functions.",Since TESTRF is for testing RF chips it seemed TESTSER would be good for testing the serial port.  Would it be better to only include it in dev builds like TESTRF?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,397,2018-04-21T20:30:39Z,2018-05-08T08:54:13Z,2018-05-08T08:54:13Z,MERGED,True,244,10,7,https://github.com/hexfet,Update UART API to support receiving data,7,[],https://github.com/DeviationTX/deviation/pull/397,https://github.com/PhracturedBlue,6,https://github.com/DeviationTX/deviation/pull/397#issuecomment-387234503,"Adds UART_StartReceive and UART_StopReceive functions to UART API.  UART_StartReceive sets callback function that receives incoming serial data.
Adds UART_SetDuplex to set half duplex hardware support.
Adds TESTSER protocol as example implementation and test harness for UART_* functions.","Sorry to drop in like this, but I would probably do exactly that (put it in for dev only mode).  I was recently selecting a protocol on my Tx, and it actually takes a long time to scroll through and find the one you want these days.  I am actually thinking that if I can get back into working on Deviation, it probably makes sense to have a dedicated select-list page instead of the spinbox.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,397,2018-04-21T20:30:39Z,2018-05-08T08:54:13Z,2018-05-08T08:54:13Z,MERGED,True,244,10,7,https://github.com/hexfet,Update UART API to support receiving data,7,[],https://github.com/DeviationTX/deviation/pull/397,https://github.com/hexfet,7,https://github.com/DeviationTX/deviation/pull/397#issuecomment-387263610,"Adds UART_StartReceive and UART_StopReceive functions to UART API.  UART_StartReceive sets callback function that receives incoming serial data.
Adds UART_SetDuplex to set half duplex hardware support.
Adds TESTSER protocol as example implementation and test harness for UART_* functions.",Nice to see your handle PB.  The PR is updated to only include TESTSER in dev builds.  Also added fix in UART_SetDataRate as discussed here.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,398,2018-04-28T17:26:13Z,2018-04-28T17:31:07Z,2018-04-28T17:31:07Z,MERGED,True,14,1,4,https://github.com/vladislavy,"Add mux type ""beep""",1,[],https://github.com/DeviationTX/deviation/pull/398,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/398,"You can add beeps to mixer. Mux ""beep"" repeat input value without changes.","You can add beeps to mixer. Mux ""beep"" repeat input value without changes.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,399,2018-05-05T12:43:45Z,2018-05-05T12:48:49Z,2018-05-05T12:48:49Z,MERGED,True,5,1,2,https://github.com/vladislavy,"Beep only once for ""beep"" mux",1,[],https://github.com/DeviationTX/deviation/pull/399,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/399,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,400,2018-05-05T13:52:14Z,2018-05-07T17:53:36Z,2018-05-07T17:53:36Z,MERGED,True,13,5,2,https://github.com/vladislavy,"More reliable and beep only once ""beep"" mux",1,[],https://github.com/DeviationTX/deviation/pull/400,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/400,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,400,2018-05-05T13:52:14Z,2018-05-07T17:53:36Z,2018-05-07T17:53:36Z,MERGED,True,13,5,2,https://github.com/vladislavy,"More reliable and beep only once ""beep"" mux",1,[],https://github.com/DeviationTX/deviation/pull/400,https://github.com/TheRealMoeder,2,https://github.com/DeviationTX/deviation/pull/400#issuecomment-386826688,,Do you see any problems in using the same code for mux voice?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,400,2018-05-05T13:52:14Z,2018-05-07T17:53:36Z,2018-05-07T17:53:36Z,MERGED,True,13,5,2,https://github.com/vladislavy,"More reliable and beep only once ""beep"" mux",1,[],https://github.com/DeviationTX/deviation/pull/400,https://github.com/vladislavy,3,https://github.com/DeviationTX/deviation/pull/400#issuecomment-386853981,,"I can't test mux ""voice"". If you can test it, you can add the same code for voice with ""voice_lock"" latch.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,402,2018-05-10T03:40:00Z,2018-05-13T08:55:17Z,2018-05-13T08:55:17Z,MERGED,True,14,6,2,https://github.com/vladislavy,"More reliable and sound only once ""voice"" mux",1,[],https://github.com/DeviationTX/deviation/pull/402,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/402,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,403,2018-05-12T18:58:21Z,2018-05-13T08:54:55Z,2018-05-13T08:54:55Z,MERGED,True,2,2,1,https://github.com/netmute,Don't identify as USBHID mouse (fixes USBHID on Mac OSX),1,[],https://github.com/DeviationTX/deviation/pull/403,https://github.com/netmute,1,https://github.com/DeviationTX/deviation/pull/403,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,404,2018-05-16T08:31:24Z,2018-05-28T03:38:52Z,2018-05-28T03:38:52Z,MERGED,True,1434,6,23,https://github.com/vladislavy,Add Jumper T8SG V2,3,[],https://github.com/DeviationTX/deviation/pull/404,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/404,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,405,2018-05-16T08:36:48Z,2018-05-28T03:44:21Z,2018-05-28T03:44:21Z,MERGED,True,690,1,10,https://github.com/vladislavy,Add iRangeX IR8M,2,[],https://github.com/DeviationTX/deviation/pull/405,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/405,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,406,2018-05-16T09:47:31Z,2018-05-16T09:55:54Z,2018-05-16T09:55:54Z,MERGED,True,1425,5,22,https://github.com/vladislavy,Add Jumper T8SG V2,1,[],https://github.com/DeviationTX/deviation/pull/406,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/406,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,408,2018-05-19T10:20:58Z,2018-05-28T03:47:47Z,2018-05-28T03:47:47Z,MERGED,True,5,6,3,https://github.com/vladislavy,Fix display of text in startup warnings,1,[],https://github.com/DeviationTX/deviation/pull/408,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/408,"We can't use ""tempstring"" for early warnings (such as ""Missing modules""), since ""tempstring"" used by draw screen and will be overwritten before warning will draw.","We can't use ""tempstring"" for early warnings (such as ""Missing modules""), since ""tempstring"" used by draw screen and will be overwritten before warning will draw.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,409,2018-05-19T10:37:03Z,2018-06-26T02:31:51Z,2018-06-26T02:31:51Z,MERGED,True,211,49,16,https://github.com/vladislavy,Optimize GUI redraw,3,[],https://github.com/DeviationTX/deviation/pull/409,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/409,"Avoid full page redraw for any scrollable object change. It looks much more naturally if updated the scrollable area only, but not the full page.
Avoid full page redraw with every item position change at ""Main layout edit"" page.
Avoid full page redraw after close any dialog window.
Optimize redraw objects after close dialog window, redraw underlying objects only.","Avoid full page redraw for any scrollable object change. It looks much more naturally if updated the scrollable area only, but not the full page.
Avoid full page redraw with every item position change at ""Main layout edit"" page.
Avoid full page redraw after close any dialog window.
Optimize redraw objects after close dialog window, redraw underlying objects only.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,409,2018-05-19T10:37:03Z,2018-06-26T02:31:51Z,2018-06-26T02:31:51Z,MERGED,True,211,49,16,https://github.com/vladislavy,Optimize GUI redraw,3,[],https://github.com/DeviationTX/deviation/pull/409,https://github.com/vladislavy,2,https://github.com/DeviationTX/deviation/pull/409#issuecomment-391339930,"Avoid full page redraw for any scrollable object change. It looks much more naturally if updated the scrollable area only, but not the full page.
Avoid full page redraw with every item position change at ""Main layout edit"" page.
Avoid full page redraw after close any dialog window.
Optimize redraw objects after close dialog window, redraw underlying objects only.",At any case now we have for devo7e 200 bytes only. With this update devo7e don't fit by 200 bytes. It's question of time. We can skip this update and save some short time.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,409,2018-05-19T10:37:03Z,2018-06-26T02:31:51Z,2018-06-26T02:31:51Z,MERGED,True,211,49,16,https://github.com/vladislavy,Optimize GUI redraw,3,[],https://github.com/DeviationTX/deviation/pull/409,https://github.com/vladislavy,3,https://github.com/DeviationTX/deviation/pull/409#issuecomment-391354171,"Avoid full page redraw for any scrollable object change. It looks much more naturally if updated the scrollable area only, but not the full page.
Avoid full page redraw with every item position change at ""Main layout edit"" page.
Avoid full page redraw after close any dialog window.
Optimize redraw objects after close dialog window, redraw underlying objects only.","I can enable standard GUI and disable 4IN1_FLASH, devo7e will fit with 480 spare bytes.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,411,2018-05-29T13:51:36Z,2018-06-26T02:52:51Z,2018-06-26T02:52:51Z,MERGED,True,618,0,12,https://github.com/flagadajones,Add target emulator for t8sg t8sg_v2 t8sg_v2_plus,3,[],https://github.com/DeviationTX/deviation/pull/411,https://github.com/flagadajones,1,https://github.com/DeviationTX/deviation/pull/411,"Hi,
I've just add target emulator for :
t8sg
t8sg-v2
t8sg-v2-plus","Hi,
I've just add target emulator for :
t8sg
t8sg-v2
t8sg-v2-plus",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,411,2018-05-29T13:51:36Z,2018-06-26T02:52:51Z,2018-06-26T02:52:51Z,MERGED,True,618,0,12,https://github.com/flagadajones,Add target emulator for t8sg t8sg_v2 t8sg_v2_plus,3,[],https://github.com/DeviationTX/deviation/pull/411,https://github.com/flagadajones,2,https://github.com/DeviationTX/deviation/pull/411#issuecomment-392808407,"Hi,
I've just add target emulator for :
t8sg
t8sg-v2
t8sg-v2-plus",@TheRealMoeder just for the screen color :-)  t8sg V2 plus have Yellow OLED screen and  t8sgV2 an LCD screen,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,411,2018-05-29T13:51:36Z,2018-06-26T02:52:51Z,2018-06-26T02:52:51Z,MERGED,True,618,0,12,https://github.com/flagadajones,Add target emulator for t8sg t8sg_v2 t8sg_v2_plus,3,[],https://github.com/DeviationTX/deviation/pull/411,https://github.com/TheRealMoeder,3,https://github.com/DeviationTX/deviation/pull/411#issuecomment-393147004,"Hi,
I've just add target emulator for :
t8sg
t8sg-v2
t8sg-v2-plus","For me it is not a good reason to keep it. If you prefer yellow, do the V2 emulator in yellow color. But maintaing another target just for the display color in the emulator is surely not worth it, IMHO.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,411,2018-05-29T13:51:36Z,2018-06-26T02:52:51Z,2018-06-26T02:52:51Z,MERGED,True,618,0,12,https://github.com/flagadajones,Add target emulator for t8sg t8sg_v2 t8sg_v2_plus,3,[],https://github.com/DeviationTX/deviation/pull/411,https://github.com/vladislavy,4,https://github.com/DeviationTX/deviation/pull/411#issuecomment-393170060,"Hi,
I've just add target emulator for :
t8sg
t8sg-v2
t8sg-v2-plus","Anyway you can use devo7e-256 emulator with ""hardware.ini"" from respective transmitter (ir8m, t8sg, t8sg_v2, t8sg_v2_plus). The only difference will be incorrect switch mapping if you will import a model files from foreign transmitters. So I don't see great sense to have specific emulators for devo7e-256 clones.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,411,2018-05-29T13:51:36Z,2018-06-26T02:52:51Z,2018-06-26T02:52:51Z,MERGED,True,618,0,12,https://github.com/flagadajones,Add target emulator for t8sg t8sg_v2 t8sg_v2_plus,3,[],https://github.com/DeviationTX/deviation/pull/411,https://github.com/flagadajones,5,https://github.com/DeviationTX/deviation/pull/411#issuecomment-393184776,"Hi,
I've just add target emulator for :
t8sg
t8sg-v2
t8sg-v2-plus","as you want but emulator is not a simulator
an emulator definition extract

Emulators maintain the original look, feel, and behavior of the digital object, which is just as important as the digital data itself.  (Wikipedia)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,412,2018-05-31T13:27:07Z,2018-05-31T16:37:49Z,2018-06-01T09:49:43Z,MERGED,True,145,2,1,https://github.com/flagadajones,add french characters,1,[],https://github.com/DeviationTX/deviation/pull/412,https://github.com/flagadajones,1,https://github.com/DeviationTX/deviation/pull/412,"I added some accented characters  in 04b03 font used in translations :  é è ê ë à â ä,...","I added some accented characters  in 04b03 font used in translations :  é è ê ë à â ä,...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,413,2018-05-31T17:57:23Z,2018-06-07T04:04:18Z,2018-06-07T04:04:18Z,CLOSED,False,16315,4345,540,https://github.com/xtof-durr,Branch 5.0,369,[],https://github.com/DeviationTX/deviation/pull/413,https://github.com/xtof-durr,1,https://github.com/DeviationTX/deviation/pull/413,"It should read
M(x) = if(Switch) {  Curve( Src ) * Scale + Offset} else {0} + Trim
because Curve is a function, not a factor.","It should read
M(x) = if(Switch) {  Curve( Src ) * Scale + Offset} else {0} + Trim
because Curve is a function, not a factor.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,413,2018-05-31T17:57:23Z,2018-06-07T04:04:18Z,2018-06-07T04:04:18Z,CLOSED,False,16315,4345,540,https://github.com/xtof-durr,Branch 5.0,369,[],https://github.com/DeviationTX/deviation/pull/413,https://github.com/vladislavy,2,https://github.com/DeviationTX/deviation/pull/413#issuecomment-393752825,"It should read
M(x) = if(Switch) {  Curve( Src ) * Scale + Offset} else {0} + Trim
because Curve is a function, not a factor.",You try merge branch 5.0 to master. Will be better to make changes at master branch.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,416,2018-06-28T01:34:36Z,2018-08-27T16:51:59Z,2018-08-27T16:51:59Z,MERGED,True,48,6,12,https://github.com/hexfet,Telemetry reset,3,[],https://github.com/DeviationTX/deviation/pull/416,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/416,"Add feature to reset telemetry values on long press of Up button on telemetry monitor page.
For Frsky telemetry this resets the vario altitude ""ground level"" to the next received telemetry value, which zeroes the vario altitude telemetry value.  Also resets the battery discharge accumulator to zero, and minimum cell voltage.  The ground level value is saved in the model file to save the setting through power cycles - the value is fairly constant during a single day of flying in stable air.","Add feature to reset telemetry values on long press of Up button on telemetry monitor page.
For Frsky telemetry this resets the vario altitude ""ground level"" to the next received telemetry value, which zeroes the vario altitude telemetry value.  Also resets the battery discharge accumulator to zero, and minimum cell voltage.  The ground level value is saved in the model file to save the setting through power cycles - the value is fairly constant during a single day of flying in stable air.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,417,2018-06-28T01:44:54Z,2018-08-27T15:51:36Z,2018-08-27T15:51:36Z,MERGED,True,845,58,12,https://github.com/hexfet,Add serial protocols CRSF (Crossfire) and SBUS,9,[],https://github.com/DeviationTX/deviation/pull/417,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/417,These protocols use the serial port output on the trainer pin (and top module pin on t8sg v2 plus).  Modular builds do not include SBUS or CRSF telemetry due to memory limitations.,These protocols use the serial port output on the trainer pin (and top module pin on t8sg v2 plus).  Modular builds do not include SBUS or CRSF telemetry due to memory limitations.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,419,2018-08-24T22:02:13Z,2018-08-27T16:50:58Z,2018-08-27T16:50:58Z,MERGED,True,1587,59,14,https://github.com/hexfet,"Add protocol for MJX Bugs 3, 6, 8",95,[],https://github.com/DeviationTX/deviation/pull/419,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/419,"The Bugs3 protocol is used to control MJX Bugs3 and Bugs8 aircraft.
To bind first choose the bugs3 protocol and click Bind.  Then apply power to the aircraft.
The bind dialog will disappear if bind is successful.  The aircraft's radio id is stored in the model
Fixed ID field.  Do not change this value.
Channels used for controlling functions. Set channel value greater than zero to activate.

Arming is controlled by Channel 5
Lights are controlled by Channel 6
Flip is controlled by Channel 7
Camera is controlled by Channel 8
Video is controlled by Channel 9

Telemetry is supported for RSSI and voltage alarm. It uses the Frsky telemetry display with
signal strength reported in the RSSI field and battery voltage in VOLT1.
The bugs3 receiver only reports good/bad voltage. This is translated to VOLT1 values
of 8.4V for good and 6.0V for low voltage.","The Bugs3 protocol is used to control MJX Bugs3 and Bugs8 aircraft.
To bind first choose the bugs3 protocol and click Bind.  Then apply power to the aircraft.
The bind dialog will disappear if bind is successful.  The aircraft's radio id is stored in the model
Fixed ID field.  Do not change this value.
Channels used for controlling functions. Set channel value greater than zero to activate.

Arming is controlled by Channel 5
Lights are controlled by Channel 6
Flip is controlled by Channel 7
Camera is controlled by Channel 8
Video is controlled by Channel 9

Telemetry is supported for RSSI and voltage alarm. It uses the Frsky telemetry display with
signal strength reported in the RSSI field and battery voltage in VOLT1.
The bugs3 receiver only reports good/bad voltage. This is translated to VOLT1 values
of 8.4V for good and 6.0V for low voltage.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,420,2018-08-30T21:09:24Z,2018-08-31T15:18:35Z,2019-03-05T00:10:14Z,MERGED,True,25,2,1,https://github.com/goebish,Protocol Hubsan H122D / H123D,2,[],https://github.com/DeviationTX/deviation/pull/420,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/420,"Add extra channels to the Hubsan H501 sub-protocol.
Channel 12: H123D mode selection, 3-way: Sport 1 / Sport 2 / Acro
Channel 13: H122D flip mode
Forums thread: https://www.deviationtx.com/forum/model-configs/7773-hubsan-h122d-devo-10-model-ini","Add extra channels to the Hubsan H501 sub-protocol.
Channel 12: H123D mode selection, 3-way: Sport 1 / Sport 2 / Acro
Channel 13: H122D flip mode
Forums thread: https://www.deviationtx.com/forum/model-configs/7773-hubsan-h122d-devo-10-model-ini",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,420,2018-08-30T21:09:24Z,2018-08-31T15:18:35Z,2019-03-05T00:10:14Z,MERGED,True,25,2,1,https://github.com/goebish,Protocol Hubsan H122D / H123D,2,[],https://github.com/DeviationTX/deviation/pull/420,https://github.com/TheRealMoeder,2,https://github.com/DeviationTX/deviation/pull/420#issuecomment-417698886,"Add extra channels to the Hubsan H501 sub-protocol.
Channel 12: H123D mode selection, 3-way: Sport 1 / Sport 2 / Acro
Channel 13: H122D flip mode
Forums thread: https://www.deviationtx.com/forum/model-configs/7773-hubsan-h122d-devo-10-model-ini","Just looked into the manual, documentation of this protocol seems rather outdated ;)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,420,2018-08-30T21:09:24Z,2018-08-31T15:18:35Z,2019-03-05T00:10:14Z,MERGED,True,25,2,1,https://github.com/goebish,Protocol Hubsan H122D / H123D,2,[],https://github.com/DeviationTX/deviation/pull/420,https://github.com/goebish,3,https://github.com/DeviationTX/deviation/pull/420#issuecomment-417700571,"Add extra channels to the Hubsan H501 sub-protocol.
Channel 12: H123D mode selection, 3-way: Sport 1 / Sport 2 / Acro
Channel 13: H122D flip mode
Forums thread: https://www.deviationtx.com/forum/model-configs/7773-hubsan-h122d-devo-10-model-ini","I'll try to update it, I keep track of the compatibility / channels in the google doc spreadsheet.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,421,2018-08-31T15:19:33Z,2018-09-03T16:03:30Z,2018-09-03T16:03:30Z,MERGED,True,9,0,1,https://github.com/TheRealMoeder,Temporary fix for enabling device=buzzer in MUSIC_PlayValue,1,[],https://github.com/DeviationTX/deviation/pull/421,https://github.com/TheRealMoeder,1,https://github.com/DeviationTX/deviation/pull/421,More elaborate fix to come in the next version of the voice menu.,More elaborate fix to come in the next version of the voice menu.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,423,2018-09-02T11:50:57Z,2018-09-03T16:08:16Z,2019-03-05T00:10:15Z,MERGED,True,11,3,1,https://github.com/goebish,AFHDS 2A: Allow LQI output on Ch13 and Ch14,2,[],https://github.com/DeviationTX/deviation/pull/423,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/423,"Allow LQI output on Ch13 and Ch14, fixes #422
Add telemetry for 2nd temperature sensor, fixes #424","Allow LQI output on Ch13 and Ch14, fixes #422
Add telemetry for 2nd temperature sensor, fixes #424",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,426,2018-09-03T02:34:52Z,2018-09-03T16:06:30Z,2018-09-03T16:06:30Z,MERGED,True,644,0,3,https://github.com/hexfet,Add Hitec protocol,10,[],https://github.com/DeviationTX/deviation/pull/426,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/426,"Format protocol option selects between Optima and Minima receivers.
Freq fine protocol option available to adjust frequency.
Nine channels supported.
Telemetry supported using Frsky formatting.","Format protocol option selects between Optima and Minima receivers.
Freq fine protocol option available to adjust frequency.
Nine channels supported.
Telemetry supported using Frsky formatting.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,427,2018-09-03T05:34:27Z,2018-09-03T05:42:05Z,2018-09-03T05:42:05Z,MERGED,True,745,1,4,https://github.com/vladislavy,"Add protocol for MJX Bugs 3, 6, 8, from hexfet",1,[],https://github.com/DeviationTX/deviation/pull/427,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/427,"The Bugs3 protocol is used to control MJX Bugs3 and Bugs8 aircraft.
To bind first choose the bugs3 protocol and click Bind. Then apply power to the aircraft.
The bind dialog will disappear if bind is successful. The aircraft's radio id is stored in the model
Fixed ID field. Do not change this value.
Channels used for controlling functions. Set channel value greater than zero to activate.
Arming is controlled by Channel 5
Lights are controlled by Channel 6
Flip is controlled by Channel 7
Camera is controlled by Channel 8
Video is controlled by Channel 9
Angle/acro controlled by Channel 10. Channel > 0 is angle mode.

Telemetry is supported for RSSI and voltage alarm. It uses the Frsky telemetry display with
signal strength reported in the RSSI field and battery voltage in VOLT1.
The bugs3 receiver only reports good/bad voltage. This is translated to VOLT1 values
of 8.4V for good and 6.0V for low voltage.","The Bugs3 protocol is used to control MJX Bugs3 and Bugs8 aircraft.
To bind first choose the bugs3 protocol and click Bind. Then apply power to the aircraft.
The bind dialog will disappear if bind is successful. The aircraft's radio id is stored in the model
Fixed ID field. Do not change this value.
Channels used for controlling functions. Set channel value greater than zero to activate.
Arming is controlled by Channel 5
Lights are controlled by Channel 6
Flip is controlled by Channel 7
Camera is controlled by Channel 8
Video is controlled by Channel 9
Angle/acro controlled by Channel 10. Channel > 0 is angle mode.

Telemetry is supported for RSSI and voltage alarm. It uses the Frsky telemetry display with
signal strength reported in the RSSI field and battery voltage in VOLT1.
The bugs3 receiver only reports good/bad voltage. This is translated to VOLT1 values
of 8.4V for good and 6.0V for low voltage.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,428,2018-09-03T05:50:13Z,2018-09-03T05:53:32Z,2018-09-03T05:53:32Z,MERGED,True,25,2,1,https://github.com/vladislavy,"Protocol Hubsan H122D / H123D, from goebish",1,[],https://github.com/DeviationTX/deviation/pull/428,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/428,"Add extra channels to the Hubsan H501 sub-protocol.
Channel 12: H123D mode selection, 3-way: Sport 1 / Sport 2 / Acro
Channel 13: H122D flip mode
Forums thread: https://www.deviationtx.com/forum/model-configs/7773-hubsan-h122d-devo-10-model-ini","Add extra channels to the Hubsan H501 sub-protocol.
Channel 12: H123D mode selection, 3-way: Sport 1 / Sport 2 / Acro
Channel 13: H122D flip mode
Forums thread: https://www.deviationtx.com/forum/model-configs/7773-hubsan-h122d-devo-10-model-ini",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,429,2018-09-03T16:22:37Z,2018-09-03T16:29:42Z,2018-09-03T16:29:42Z,MERGED,True,645,1,3,https://github.com/vladislavy,"Add Hitec protocol, from hexfet",1,[],https://github.com/DeviationTX/deviation/pull/429,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/429,"Format protocol option selects between Optima and Minima receivers.
Freq fine protocol option available to adjust frequency.
Nine channels supported.
Telemetry supported using Frsky formatting.","Format protocol option selects between Optima and Minima receivers.
Freq fine protocol option available to adjust frequency.
Nine channels supported.
Telemetry supported using Frsky formatting.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,430,2018-09-03T16:34:39Z,2018-09-03T16:38:51Z,2018-09-03T16:38:51Z,MERGED,True,11,3,1,https://github.com/vladislavy,"AFHDS 2A: Allow LQI output on Ch13 and Ch14, from goebish",1,[],https://github.com/DeviationTX/deviation/pull/430,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/430,"Allow LQI output on Ch13 and Ch14, fixes #422
Add telemetry for 2nd temperature sensor, fixes #424","Allow LQI output on Ch13 and Ch14, fixes #422
Add telemetry for 2nd temperature sensor, fixes #424",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,432,2018-09-04T11:40:03Z,2018-09-05T13:28:43Z,2019-03-05T00:10:16Z,MERGED,True,17,10,1,https://github.com/goebish,Frsky D8: Add optional RSSI channel,1,[],https://github.com/DeviationTX/deviation/pull/432,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/432,"Add optional RSSI channel to Frsky D8 protocol, same as FrskyX (D16) and AFHDS-2A protocol.
Tested with D4R-II Rx and random Chinese D8 Rx.","Add optional RSSI channel to Frsky D8 protocol, same as FrskyX (D16) and AFHDS-2A protocol.
Tested with D4R-II Rx and random Chinese D8 Rx.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,434,2018-09-05T15:00:55Z,2018-09-05T19:21:36Z,2019-03-05T00:10:17Z,CLOSED,False,368,0,5,https://github.com/goebish,Protocol WFLY,6,[],https://github.com/DeviationTX/deviation/pull/434,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/434,"Add WFLY protocol, ported from MULTI, tested.
https://www.deviationtx.com/forum/protocol-development/7990-wfly-protocol","Add WFLY protocol, ported from MULTI, tested.
https://www.deviationtx.com/forum/protocol-development/7990-wfly-protocol",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,434,2018-09-05T15:00:55Z,2018-09-05T19:21:36Z,2019-03-05T00:10:17Z,CLOSED,False,368,0,5,https://github.com/goebish,Protocol WFLY,6,[],https://github.com/DeviationTX/deviation/pull/434,https://github.com/vladislavy,2,https://github.com/DeviationTX/deviation/pull/434#issuecomment-418794358,"Add WFLY protocol, ported from MULTI, tested.
https://www.deviationtx.com/forum/protocol-development/7990-wfly-protocol","Is something changed at ""install_nightlies.tar.enc"" ???",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,434,2018-09-05T15:00:55Z,2018-09-05T19:21:36Z,2019-03-05T00:10:17Z,CLOSED,False,368,0,5,https://github.com/goebish,Protocol WFLY,6,[],https://github.com/DeviationTX/deviation/pull/434,https://github.com/goebish,3,https://github.com/DeviationTX/deviation/pull/434#issuecomment-418796095,"Add WFLY protocol, ported from MULTI, tested.
https://www.deviationtx.com/forum/protocol-development/7990-wfly-protocol","I suppose no, probably only the date was modified (why would the content of this file be modified unintentionally ?), but git didn't allow me to do a partial commit after I merged my branch with master to fix conflicts in Makefile.inc
Do you prefer I make another PR ?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,434,2018-09-05T15:00:55Z,2018-09-05T19:21:36Z,2019-03-05T00:10:17Z,CLOSED,False,368,0,5,https://github.com/goebish,Protocol WFLY,6,[],https://github.com/DeviationTX/deviation/pull/434,https://github.com/goebish,4,https://github.com/DeviationTX/deviation/pull/434#issuecomment-418850870,"Add WFLY protocol, ported from MULTI, tested.
https://www.deviationtx.com/forum/protocol-development/7990-wfly-protocol","Closing this PR, will make another one",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,435,2018-09-05T19:32:17Z,2018-09-07T05:03:54Z,2019-03-05T00:10:20Z,MERGED,True,369,0,4,https://github.com/goebish,Add WFLY protocol,1,[],https://github.com/DeviationTX/deviation/pull/435,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/435,"Add WFLY protocol, ported from MULTI, tested.
https://www.deviationtx.com/forum/protocol-development/7990-wfly-protocol","Add WFLY protocol, ported from MULTI, tested.
https://www.deviationtx.com/forum/protocol-development/7990-wfly-protocol",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,436,2018-09-07T05:49:50Z,2018-09-07T05:57:33Z,2018-09-07T05:57:33Z,MERGED,True,369,0,4,https://github.com/vladislavy,"Add WFLY protocol, from goebish",1,[],https://github.com/DeviationTX/deviation/pull/436,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/436,"Add WFLY protocol, ported from MULTI, tested.
https://www.deviationtx.com/forum/protocol-development/7990-wfly-protocol","Add WFLY protocol, ported from MULTI, tested.
https://www.deviationtx.com/forum/protocol-development/7990-wfly-protocol",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,437,2018-09-12T18:48:07Z,2018-10-17T15:52:15Z,2018-10-17T15:52:15Z,MERGED,True,754,0,1,https://github.com/TheRealMoeder,Add portuguese language for menus (tks user mchaves),2,[],https://github.com/DeviationTX/deviation/pull/437,https://github.com/TheRealMoeder,1,https://github.com/DeviationTX/deviation/pull/437,https://www.deviationtx.com/forum/translations/7750-portuguese-br-translation,https://www.deviationtx.com/forum/translations/7750-portuguese-br-translation,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,443,2018-09-27T05:49:12Z,2018-11-06T09:48:46Z,2018-11-06T09:49:04Z,MERGED,True,4,6,2,https://github.com/markusgritsch,Fixed button debouncing,4,[],https://github.com/DeviationTX/deviation/pull/443,https://github.com/markusgritsch,1,https://github.com/DeviationTX/deviation/pull/443,"It seems button debouncing was planned, but the define for DEBOUNCE_WAIT_MS was never actually used.","It seems button debouncing was planned, but the define for DEBOUNCE_WAIT_MS was never actually used.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,443,2018-09-27T05:49:12Z,2018-11-06T09:48:46Z,2018-11-06T09:49:04Z,MERGED,True,4,6,2,https://github.com/markusgritsch,Fixed button debouncing,4,[],https://github.com/DeviationTX/deviation/pull/443,https://github.com/goebish,2,https://github.com/DeviationTX/deviation/pull/443#issuecomment-435823628,"It seems button debouncing was planned, but the define for DEBOUNCE_WAIT_MS was never actually used.","Seems you're having the same problem that I had recently, the 7e flash is full!
But you only have to save 4 bytes to make it build.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,443,2018-09-27T05:49:12Z,2018-11-06T09:48:46Z,2018-11-06T09:49:04Z,MERGED,True,4,6,2,https://github.com/markusgritsch,Fixed button debouncing,4,[],https://github.com/DeviationTX/deviation/pull/443,https://github.com/markusgritsch,3,https://github.com/DeviationTX/deviation/pull/443#issuecomment-435824614,"It seems button debouncing was planned, but the define for DEBOUNCE_WAIT_MS was never actually used.",By changing the integer literal from 20 to 80? Both values should fit in one byte...,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,443,2018-09-27T05:49:12Z,2018-11-06T09:48:46Z,2018-11-06T09:49:04Z,MERGED,True,4,6,2,https://github.com/markusgritsch,Fixed button debouncing,4,[],https://github.com/DeviationTX/deviation/pull/443,https://github.com/goebish,4,https://github.com/DeviationTX/deviation/pull/443#issuecomment-435825482,"It seems button debouncing was planned, but the define for DEBOUNCE_WAIT_MS was never actually used.","This is a 32 bit system, a single u8 takes 4 bytes, but I think it doesn't build anymore because some code (just some new protocol definitions in the case of the modular build...) was added to main trunk since your previous commit.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,443,2018-09-27T05:49:12Z,2018-11-06T09:48:46Z,2018-11-06T09:49:04Z,MERGED,True,4,6,2,https://github.com/markusgritsch,Fixed button debouncing,4,[],https://github.com/DeviationTX/deviation/pull/443,https://github.com/goebish,5,https://github.com/DeviationTX/deviation/pull/443#issuecomment-435828327,"It seems button debouncing was planned, but the define for DEBOUNCE_WAIT_MS was never actually used.",I'll check out how to save some space ...,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,443,2018-09-27T05:49:12Z,2018-11-06T09:48:46Z,2018-11-06T09:49:04Z,MERGED,True,4,6,2,https://github.com/markusgritsch,Fixed button debouncing,4,[],https://github.com/DeviationTX/deviation/pull/443,https://github.com/markusgritsch,6,https://github.com/DeviationTX/deviation/pull/443#issuecomment-435828867,"It seems button debouncing was planned, but the define for DEBOUNCE_WAIT_MS was never actually used.",Thanks!,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,443,2018-09-27T05:49:12Z,2018-11-06T09:48:46Z,2018-11-06T09:49:04Z,MERGED,True,4,6,2,https://github.com/markusgritsch,Fixed button debouncing,4,[],https://github.com/DeviationTX/deviation/pull/443,https://github.com/goebish,7,https://github.com/DeviationTX/deviation/pull/443#issuecomment-435832991,"It seems button debouncing was planned, but the define for DEBOUNCE_WAIT_MS was never actually used.","If everyone agrees, we can comment lines 43-47 in buttons.c, this is just some debug code, useless in production, that fixes this issue and would probably also save some bytes to add my latest protocol definition to the modular build ;)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,443,2018-09-27T05:49:12Z,2018-11-06T09:48:46Z,2018-11-06T09:49:04Z,MERGED,True,4,6,2,https://github.com/markusgritsch,Fixed button debouncing,4,[],https://github.com/DeviationTX/deviation/pull/443,https://github.com/goebish,8,https://github.com/DeviationTX/deviation/pull/443#issuecomment-435845170,"It seems button debouncing was planned, but the define for DEBOUNCE_WAIT_MS was never actually used.",edit: it still overflows by 4 bytes on Travis even with those lines commented (?).,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,443,2018-09-27T05:49:12Z,2018-11-06T09:48:46Z,2018-11-06T09:49:04Z,MERGED,True,4,6,2,https://github.com/markusgritsch,Fixed button debouncing,4,[],https://github.com/DeviationTX/deviation/pull/443,https://github.com/markusgritsch,9,https://github.com/DeviationTX/deviation/pull/443#issuecomment-435849838,"It seems button debouncing was planned, but the define for DEBOUNCE_WAIT_MS was never actually used.",I think printf gets removed anyway for this kind of builds (std.h:68),True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,443,2018-09-27T05:49:12Z,2018-11-06T09:48:46Z,2018-11-06T09:49:04Z,MERGED,True,4,6,2,https://github.com/markusgritsch,Fixed button debouncing,4,[],https://github.com/DeviationTX/deviation/pull/443,https://github.com/goebish,10,https://github.com/DeviationTX/deviation/pull/443#issuecomment-435850172,"It seems button debouncing was planned, but the define for DEBOUNCE_WAIT_MS was never actually used.","Yes, and seems the compiler is smart and also strips the then useless 'if' line that's just above.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,443,2018-09-27T05:49:12Z,2018-11-06T09:48:46Z,2018-11-06T09:49:04Z,MERGED,True,4,6,2,https://github.com/markusgritsch,Fixed button debouncing,4,[],https://github.com/DeviationTX/deviation/pull/443,https://github.com/goebish,11,https://github.com/DeviationTX/deviation/pull/443#issuecomment-435851040,"It seems button debouncing was planned, but the define for DEBOUNCE_WAIT_MS was never actually used.","A temporary solution would be to update the arm-gcc we're using for the automated build system.
The one I use, arm-gcc 4.8.3 2014-q1, produces slightly smaller binaries and can still build the modular version while the one in the container (4.8.3 2013-q4) can't.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,443,2018-09-27T05:49:12Z,2018-11-06T09:48:46Z,2018-11-06T09:49:04Z,MERGED,True,4,6,2,https://github.com/markusgritsch,Fixed button debouncing,4,[],https://github.com/DeviationTX/deviation/pull/443,https://github.com/goebish,12,https://github.com/DeviationTX/deviation/pull/443#issuecomment-435853647,"It seems button debouncing was planned, but the define for DEBOUNCE_WAIT_MS was never actually used.","Meanwhile, if everyone agrees, here's a simple working fix:
in buttons.c and .h, declare BUTTON_RegisterCallback as void instead of unsigned (it always returns 1 as it is and the return value is never checked actually).",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,443,2018-09-27T05:49:12Z,2018-11-06T09:48:46Z,2018-11-06T09:49:04Z,MERGED,True,4,6,2,https://github.com/markusgritsch,Fixed button debouncing,4,[],https://github.com/DeviationTX/deviation/pull/443,https://github.com/TheRealMoeder,13,https://github.com/DeviationTX/deviation/pull/443#issuecomment-435856858,"It seems button debouncing was planned, but the define for DEBOUNCE_WAIT_MS was never actually used.","The quick fix is fine. Concerning the arm gcc version: I remember versions greater than 2013q4 produced larger code, that's why we stuck with it. Guess it would make sense to run all recent versions for a test to see which makes the smallest binaries.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,443,2018-09-27T05:49:12Z,2018-11-06T09:48:46Z,2018-11-06T09:49:04Z,MERGED,True,4,6,2,https://github.com/markusgritsch,Fixed button debouncing,4,[],https://github.com/DeviationTX/deviation/pull/443,https://github.com/goebish,14,https://github.com/DeviationTX/deviation/pull/443#issuecomment-435857600,"It seems button debouncing was planned, but the define for DEBOUNCE_WAIT_MS was never actually used.","Test it but I'm sure the version I'm using has always produced smaller binaries, not only for the 7e, I had the same issue recently with the Devo12 build.
(I get angry when I can build my code locally then it fails on Travis 😝)
I'm under Windows (MinGW32) but that shouldn't matter.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,443,2018-09-27T05:49:12Z,2018-11-06T09:48:46Z,2018-11-06T09:49:04Z,MERGED,True,4,6,2,https://github.com/markusgritsch,Fixed button debouncing,4,[],https://github.com/DeviationTX/deviation/pull/443,https://github.com/markusgritsch,15,https://github.com/DeviationTX/deviation/pull/443#issuecomment-436192346,"It seems button debouncing was planned, but the define for DEBOUNCE_WAIT_MS was never actually used.","Which return 1? I thought, I already removed the line completely.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,443,2018-09-27T05:49:12Z,2018-11-06T09:48:46Z,2018-11-06T09:49:04Z,MERGED,True,4,6,2,https://github.com/markusgritsch,Fixed button debouncing,4,[],https://github.com/DeviationTX/deviation/pull/443,https://github.com/goebish,16,https://github.com/DeviationTX/deviation/pull/443#issuecomment-436192805,"It seems button debouncing was planned, but the define for DEBOUNCE_WAIT_MS was never actually used.","My bad, I didn't see it.
Everything is fine then ... let's merge 😄",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,444,2018-09-28T08:55:27Z,2018-10-17T15:55:27Z,2018-10-17T15:55:27Z,CLOSED,False,1,1,1,https://github.com/nitram509,fix nrf24l01 pin assigment in hardware.ini,1,[],https://github.com/DeviationTX/deviation/pull/444,https://github.com/nitram509,1,https://github.com/DeviationTX/deviation/pull/444,"While freshly installing the current 5.0.0 release,
I did get an error ""missing modules nrf24l01"".
This is because in default shipped hardware.ini,
the pin assignment in wrong.
This is a simple fix which hopefully solves a lot of people headaches.
Any feedback is welcome.","While freshly installing the current 5.0.0 release,
I did get an error ""missing modules nrf24l01"".
This is because in default shipped hardware.ini,
the pin assignment in wrong.
This is a simple fix which hopefully solves a lot of people headaches.
Any feedback is welcome.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,444,2018-09-28T08:55:27Z,2018-10-17T15:55:27Z,2018-10-17T15:55:27Z,CLOSED,False,1,1,1,https://github.com/nitram509,fix nrf24l01 pin assigment in hardware.ini,1,[],https://github.com/DeviationTX/deviation/pull/444,https://github.com/markusgritsch,2,https://github.com/DeviationTX/deviation/pull/444#issuecomment-427146844,"While freshly installing the current 5.0.0 release,
I did get an error ""missing modules nrf24l01"".
This is because in default shipped hardware.ini,
the pin assignment in wrong.
This is a simple fix which hopefully solves a lot of people headaches.
Any feedback is welcome.","I don't think this solves any issues. It totally depends, on which pin you soldered the CS wire. For example, on my Devo 7E I soldered it to the TMS pin (because this was suggested by the build instructions I used), so I had to use A13.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,444,2018-09-28T08:55:27Z,2018-10-17T15:55:27Z,2018-10-17T15:55:27Z,CLOSED,False,1,1,1,https://github.com/nitram509,fix nrf24l01 pin assigment in hardware.ini,1,[],https://github.com/DeviationTX/deviation/pull/444,https://github.com/nitram509,3,https://github.com/DeviationTX/deviation/pull/444#issuecomment-427274102,"While freshly installing the current 5.0.0 release,
I did get an error ""missing modules nrf24l01"".
This is because in default shipped hardware.ini,
the pin assignment in wrong.
This is a simple fix which hopefully solves a lot of people headaches.
Any feedback is welcome.","hmm, ok, wasn't aware of this - I was under the assumption, there is a common sense (like best practice) what to solder where.
feel free to cancel or merge this PR.
Thanks for the feedback.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,445,2018-10-05T10:40:26Z,2018-11-04T09:12:06Z,2018-11-04T09:12:06Z,MERGED,True,38,38,12,https://github.com/nitram509,fix typos in documentation,3,[],https://github.com/DeviationTX/deviation/pull/445,https://github.com/nitram509,1,https://github.com/DeviationTX/deviation/pull/445,"while I was briefly reading the documentation I found and fixed some typos.
I hope this helps a bit.
Any feedback welcome.","while I was briefly reading the documentation I found and fixed some typos.
I hope this helps a bit.
Any feedback welcome.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,445,2018-10-05T10:40:26Z,2018-11-04T09:12:06Z,2018-11-04T09:12:06Z,MERGED,True,38,38,12,https://github.com/nitram509,fix typos in documentation,3,[],https://github.com/DeviationTX/deviation/pull/445,https://github.com/nitram509,2,https://github.com/DeviationTX/deviation/pull/445#issuecomment-427333354,"while I was briefly reading the documentation I found and fixed some typos.
I hope this helps a bit.
Any feedback welcome.","very well catched.
thank you very much for the feedback.
new fix is on the way.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,445,2018-10-05T10:40:26Z,2018-11-04T09:12:06Z,2018-11-04T09:12:06Z,MERGED,True,38,38,12,https://github.com/nitram509,fix typos in documentation,3,[],https://github.com/DeviationTX/deviation/pull/445,https://github.com/nitram509,3,https://github.com/DeviationTX/deviation/pull/445#issuecomment-427400439,"while I was briefly reading the documentation I found and fixed some typos.
I hope this helps a bit.
Any feedback welcome.","thank you for the feedback, gentlemen.
I did update the wording.",True,{'THUMBS_UP': ['https://github.com/tracernz']}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,450,2018-10-12T15:13:27Z,2018-12-18T19:30:22Z,2018-12-18T19:30:22Z,CLOSED,False,4,3,2,https://github.com/vladislavy,"Fix mux ""beep"" for extended audio",2,[],https://github.com/DeviationTX/deviation/pull/450,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/450,It's related to issue #439,It's related to issue #439,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,450,2018-10-12T15:13:27Z,2018-12-18T19:30:22Z,2018-12-18T19:30:22Z,CLOSED,False,4,3,2,https://github.com/vladislavy,"Fix mux ""beep"" for extended audio",2,[],https://github.com/DeviationTX/deviation/pull/450,https://github.com/vladislavy,2,https://github.com/DeviationTX/deviation/pull/450#issuecomment-429372846,It's related to issue #439,"We finally has not memory for Devo7e. This change doesn't fit to Devo7e memory.
I think we need disable HAS_STANDARD_GUI for Devo7e.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,450,2018-10-12T15:13:27Z,2018-12-18T19:30:22Z,2018-12-18T19:30:22Z,CLOSED,False,4,3,2,https://github.com/vladislavy,"Fix mux ""beep"" for extended audio",2,[],https://github.com/DeviationTX/deviation/pull/450,https://github.com/TheRealMoeder,3,https://github.com/DeviationTX/deviation/pull/450#issuecomment-429377145,It's related to issue #439,That is the reason mux beep was only available in has extended audio,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,450,2018-10-12T15:13:27Z,2018-12-18T19:30:22Z,2018-12-18T19:30:22Z,CLOSED,False,4,3,2,https://github.com/vladislavy,"Fix mux ""beep"" for extended audio",2,[],https://github.com/DeviationTX/deviation/pull/450,https://github.com/Tygrys-1,4,https://github.com/DeviationTX/deviation/pull/450#issuecomment-429397846,It's related to issue #439,"That is the reason mux beep was only available in has extended audio

It is not a problem to have both mux beep and voice. It is the beep to just do a ""beep"". As trimmers can do beep whith voice mod enabled I think that the mux beep can also do this.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,450,2018-10-12T15:13:27Z,2018-12-18T19:30:22Z,2018-12-18T19:30:22Z,CLOSED,False,4,3,2,https://github.com/vladislavy,"Fix mux ""beep"" for extended audio",2,[],https://github.com/DeviationTX/deviation/pull/450,https://github.com/TheRealMoeder,5,https://github.com/DeviationTX/deviation/pull/450#issuecomment-447868366,It's related to issue #439,This is rather small and we have room for it in the ROM now. Please rebase to recheck with travis ci,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,450,2018-10-12T15:13:27Z,2018-12-18T19:30:22Z,2018-12-18T19:30:22Z,CLOSED,False,4,3,2,https://github.com/vladislavy,"Fix mux ""beep"" for extended audio",2,[],https://github.com/DeviationTX/deviation/pull/450,https://github.com/TheRealMoeder,6,https://github.com/DeviationTX/deviation/pull/450#issuecomment-448290487,It's related to issue #439,"I just ran the Travis job again, so no need for a rebase. But with 100 bytes it is pretty pricey, to be honest.
edit:
An adequate fix for the original issue would be just to play music MUSIC_KEY_PRESSING or MUSIC_MAXLEN instead of MUSIC_SAVING for mux beep.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,450,2018-10-12T15:13:27Z,2018-12-18T19:30:22Z,2018-12-18T19:30:22Z,CLOSED,False,4,3,2,https://github.com/vladislavy,"Fix mux ""beep"" for extended audio",2,[],https://github.com/DeviationTX/deviation/pull/450,https://github.com/Tygrys-1,7,https://github.com/DeviationTX/deviation/pull/450#issuecomment-448317391,It's related to issue #439,"This make sense. It should be something doing a ""beep"".",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,450,2018-10-12T15:13:27Z,2018-12-18T19:30:22Z,2018-12-18T19:30:22Z,CLOSED,False,4,3,2,https://github.com/vladislavy,"Fix mux ""beep"" for extended audio",2,[],https://github.com/DeviationTX/deviation/pull/450,https://github.com/TheRealMoeder,8,https://github.com/DeviationTX/deviation/pull/450#issuecomment-448341155,It's related to issue #439,"MUSIC_KEY_PRESSING isn't defined in the default sound.ini, but MUSIC_MAXLEN has the same default beep in sound.ini as MUSIC_SAVING, so I think we should go for this. As vladislavy doesn't have the branch in his repository anymore, I will close this PR and open a new one.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,451,2018-10-18T22:01:37Z,2018-11-03T16:36:45Z,2019-03-05T00:10:23Z,MERGED,True,501,0,3,https://github.com/goebish,Protocol MJX Bugs 3 Mini,23,[],https://github.com/DeviationTX/deviation/pull/451,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/451,"Adds Bugs3Mini protocol
Channel 5: Arm
Channel 6: Leds on/off
Channel 7: Flip mode
Channel 8: Snapshot (requires mjx wifi camera module)
Channel 9: Record video (requires mjx wifi camera module)
Channel 10: Angle / Acro mode
https://www.deviationtx.com/forum/protocol-development/7850-bugs-3-mini","Adds Bugs3Mini protocol
Channel 5: Arm
Channel 6: Leds on/off
Channel 7: Flip mode
Channel 8: Snapshot (requires mjx wifi camera module)
Channel 9: Record video (requires mjx wifi camera module)
Channel 10: Angle / Acro mode
https://www.deviationtx.com/forum/protocol-development/7850-bugs-3-mini",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,453,2018-11-03T21:19:55Z,2018-11-04T09:12:36Z,2019-03-05T00:10:43Z,MERGED,True,759,716,30,https://github.com/goebish,Protocols E012 and E015,4,[],https://github.com/DeviationTX/deviation/pull/453,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/453,"Add protocols for EAchine E012 and E015
Add Emulation layer for HS6200 transceiver to nrf24l01 interface
Move Beken chip init to nrf24l01 interface instead of repeating it in each protocols

E012 channel mapping:
Channel 6: Flip
Channel 9: Headless
Channel 10: RTH
E015 channel mapping:
Channel 5: Arm
Channel 6: Leds on / off
Channel 7: Flip
Channel 9: Headless
Channel 10: RTH
Forums thread: https://www.deviationtx.com/forum/protocol-development/8099-eachine-e015-flight-boat-car","Add protocols for EAchine E012 and E015
Add Emulation layer for HS6200 transceiver to nrf24l01 interface
Move Beken chip init to nrf24l01 interface instead of repeating it in each protocols

E012 channel mapping:
Channel 6: Flip
Channel 9: Headless
Channel 10: RTH
E015 channel mapping:
Channel 5: Arm
Channel 6: Leds on / off
Channel 7: Flip
Channel 9: Headless
Channel 10: RTH
Forums thread: https://www.deviationtx.com/forum/protocol-development/8099-eachine-e015-flight-boat-car",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,454,2018-11-04T06:15:24Z,2018-11-04T06:22:06Z,2018-11-04T06:22:06Z,MERGED,True,501,0,3,https://github.com/vladislavy,"Protocol MJX Bugs 3 Mini, from goebish",1,[],https://github.com/DeviationTX/deviation/pull/454,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/454,"Adds Bugs3Mini protocol
Channel 5: Arm
Channel 6: Leds on/off
Channel 7: Flip mode
Channel 8: Snapshot (requires mjx wifi camera module)
Channel 9: Record video (requires mjx wifi camera module)
Channel 10: Angle / Acro mode
https://www.deviationtx.com/forum/protocol-development/7850-bugs-3-mini","Adds Bugs3Mini protocol
Channel 5: Arm
Channel 6: Leds on/off
Channel 7: Flip mode
Channel 8: Snapshot (requires mjx wifi camera module)
Channel 9: Record video (requires mjx wifi camera module)
Channel 10: Angle / Acro mode
https://www.deviationtx.com/forum/protocol-development/7850-bugs-3-mini",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,455,2018-11-04T15:06:08Z,2018-12-16T19:10:37Z,2019-03-05T00:10:54Z,MERGED,True,413,15,6,https://github.com/goebish,"Protocol for Air Hogs ""Star Trek"" NCC-1701",6,['Protocol'],https://github.com/DeviationTX/deviation/pull/455,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/455,"Ported from MULTI, untested on Deviation.
Protocol: NCC1701
Channel 5: Warp
I had to discard it from the modular build (7e) or it wouldn't fit in ROM (https://travis-ci.org/goebish/deviation/jobs/450493916), looks like adding only a new protocol definition overflows the allowed space by 20 bytes ... Note that it happens on Travis (arm-gcc 4.8.3 2013-q4) while I can still build it with the arm gcc version I'm using locally (arm-gcc 4.8.3 2014-q1).
Perhaps we should change the version we're using on Travis (mine is only a few months newer) ? But the problem will still re-appear soon ...
Topic: https://www.deviationtx.com/forum/protocol-development/8101-star-trek-air-hogs","Ported from MULTI, untested on Deviation.
Protocol: NCC1701
Channel 5: Warp
I had to discard it from the modular build (7e) or it wouldn't fit in ROM (https://travis-ci.org/goebish/deviation/jobs/450493916), looks like adding only a new protocol definition overflows the allowed space by 20 bytes ... Note that it happens on Travis (arm-gcc 4.8.3 2013-q4) while I can still build it with the arm gcc version I'm using locally (arm-gcc 4.8.3 2014-q1).
Perhaps we should change the version we're using on Travis (mine is only a few months newer) ? But the problem will still re-appear soon ...
Topic: https://www.deviationtx.com/forum/protocol-development/8101-star-trek-air-hogs",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,455,2018-11-04T15:06:08Z,2018-12-16T19:10:37Z,2019-03-05T00:10:54Z,MERGED,True,413,15,6,https://github.com/goebish,"Protocol for Air Hogs ""Star Trek"" NCC-1701",6,['Protocol'],https://github.com/DeviationTX/deviation/pull/455,https://github.com/vladislavy,2,https://github.com/DeviationTX/deviation/pull/455#issuecomment-436137232,"Ported from MULTI, untested on Deviation.
Protocol: NCC1701
Channel 5: Warp
I had to discard it from the modular build (7e) or it wouldn't fit in ROM (https://travis-ci.org/goebish/deviation/jobs/450493916), looks like adding only a new protocol definition overflows the allowed space by 20 bytes ... Note that it happens on Travis (arm-gcc 4.8.3 2013-q4) while I can still build it with the arm gcc version I'm using locally (arm-gcc 4.8.3 2014-q1).
Perhaps we should change the version we're using on Travis (mine is only a few months newer) ? But the problem will still re-appear soon ...
Topic: https://www.deviationtx.com/forum/protocol-development/8101-star-trek-air-hogs",I suggest to disable STANDARD GUI for Devo7e to free some memory.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,455,2018-11-04T15:06:08Z,2018-12-16T19:10:37Z,2019-03-05T00:10:54Z,MERGED,True,413,15,6,https://github.com/goebish,"Protocol for Air Hogs ""Star Trek"" NCC-1701",6,['Protocol'],https://github.com/DeviationTX/deviation/pull/455,https://github.com/goebish,3,https://github.com/DeviationTX/deviation/pull/455#issuecomment-436995448,"Ported from MULTI, untested on Deviation.
Protocol: NCC1701
Channel 5: Warp
I had to discard it from the modular build (7e) or it wouldn't fit in ROM (https://travis-ci.org/goebish/deviation/jobs/450493916), looks like adding only a new protocol definition overflows the allowed space by 20 bytes ... Note that it happens on Travis (arm-gcc 4.8.3 2013-q4) while I can still build it with the arm gcc version I'm using locally (arm-gcc 4.8.3 2014-q1).
Perhaps we should change the version we're using on Travis (mine is only a few months newer) ? But the problem will still re-appear soon ...
Topic: https://www.deviationtx.com/forum/protocol-development/8101-star-trek-air-hogs","Let's wait until a decision is taken for STANDARD GUI on the 7e before merging this PR.
https://www.deviationtx.com/forum/7-development/8108-remove-standard-gui-from-devo-7e-build#71637
Until now, everyone seems to agree: they've never heard of the standard GUI before.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,455,2018-11-04T15:06:08Z,2018-12-16T19:10:37Z,2019-03-05T00:10:54Z,MERGED,True,413,15,6,https://github.com/goebish,"Protocol for Air Hogs ""Star Trek"" NCC-1701",6,['Protocol'],https://github.com/DeviationTX/deviation/pull/455,https://github.com/goebish,4,https://github.com/DeviationTX/deviation/pull/455#issuecomment-447522907,"Ported from MULTI, untested on Deviation.
Protocol: NCC1701
Channel 5: Warp
I had to discard it from the modular build (7e) or it wouldn't fit in ROM (https://travis-ci.org/goebish/deviation/jobs/450493916), looks like adding only a new protocol definition overflows the allowed space by 20 bytes ... Note that it happens on Travis (arm-gcc 4.8.3 2013-q4) while I can still build it with the arm gcc version I'm using locally (arm-gcc 4.8.3 2014-q1).
Perhaps we should change the version we're using on Travis (mine is only a few months newer) ? But the problem will still re-appear soon ...
Topic: https://www.deviationtx.com/forum/protocol-development/8101-star-trek-air-hogs","Thanks @howard0su !
I've a few more protocols on hold, I'll make a pull request for them tomorrow.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,455,2018-11-04T15:06:08Z,2018-12-16T19:10:37Z,2019-03-05T00:10:54Z,MERGED,True,413,15,6,https://github.com/goebish,"Protocol for Air Hogs ""Star Trek"" NCC-1701",6,['Protocol'],https://github.com/DeviationTX/deviation/pull/455,https://github.com/TheRealMoeder,5,https://github.com/DeviationTX/deviation/pull/455#issuecomment-447668305,"Ported from MULTI, untested on Deviation.
Protocol: NCC1701
Channel 5: Warp
I had to discard it from the modular build (7e) or it wouldn't fit in ROM (https://travis-ci.org/goebish/deviation/jobs/450493916), looks like adding only a new protocol definition overflows the allowed space by 20 bytes ... Note that it happens on Travis (arm-gcc 4.8.3 2013-q4) while I can still build it with the arm gcc version I'm using locally (arm-gcc 4.8.3 2014-q1).
Perhaps we should change the version we're using on Travis (mine is only a few months newer) ? But the problem will still re-appear soon ...
Topic: https://www.deviationtx.com/forum/protocol-development/8101-star-trek-air-hogs",Can you add it to the manual as well?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,455,2018-11-04T15:06:08Z,2018-12-16T19:10:37Z,2019-03-05T00:10:54Z,MERGED,True,413,15,6,https://github.com/goebish,"Protocol for Air Hogs ""Star Trek"" NCC-1701",6,['Protocol'],https://github.com/DeviationTX/deviation/pull/455,https://github.com/goebish,6,https://github.com/DeviationTX/deviation/pull/455#issuecomment-447668432,"Ported from MULTI, untested on Deviation.
Protocol: NCC1701
Channel 5: Warp
I had to discard it from the modular build (7e) or it wouldn't fit in ROM (https://travis-ci.org/goebish/deviation/jobs/450493916), looks like adding only a new protocol definition overflows the allowed space by 20 bytes ... Note that it happens on Travis (arm-gcc 4.8.3 2013-q4) while I can still build it with the arm gcc version I'm using locally (arm-gcc 4.8.3 2014-q1).
Perhaps we should change the version we're using on Travis (mine is only a few months newer) ? But the problem will still re-appear soon ...
Topic: https://www.deviationtx.com/forum/protocol-development/8101-star-trek-air-hogs",I will,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,455,2018-11-04T15:06:08Z,2018-12-16T19:10:37Z,2019-03-05T00:10:54Z,MERGED,True,413,15,6,https://github.com/goebish,"Protocol for Air Hogs ""Star Trek"" NCC-1701",6,['Protocol'],https://github.com/DeviationTX/deviation/pull/455,https://github.com/goebish,7,https://github.com/DeviationTX/deviation/pull/455#issuecomment-447673198,"Ported from MULTI, untested on Deviation.
Protocol: NCC1701
Channel 5: Warp
I had to discard it from the modular build (7e) or it wouldn't fit in ROM (https://travis-ci.org/goebish/deviation/jobs/450493916), looks like adding only a new protocol definition overflows the allowed space by 20 bytes ... Note that it happens on Travis (arm-gcc 4.8.3 2013-q4) while I can still build it with the arm gcc version I'm using locally (arm-gcc 4.8.3 2014-q1).
Perhaps we should change the version we're using on Travis (mine is only a few months newer) ? But the problem will still re-appear soon ...
Topic: https://www.deviationtx.com/forum/protocol-development/8101-star-trek-air-hogs","Done, thanks for the reminder.",True,{'THUMBS_UP': ['https://github.com/TheRealMoeder']}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,456,2018-11-04T21:51:49Z,2018-11-08T13:36:35Z,2019-03-05T00:10:42Z,MERGED,True,206,126,1,https://github.com/goebish,"Protocols SLT V2, Q100, Q200, MR100 ",5,['Protocol'],https://github.com/DeviationTX/deviation/pull/456,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/456,"Add sub formats V2, Q100, Q200 and MR100 to SLT protocol
Channel mapping:
Channel 9: Flight Mode
Channel 10: Flip
Channel 11: Video On
Channel 12: Video Off (Q200), Picture Snapshot (Q100 / MR100)
Channel 13: Calibrate (Q100 / Q200)
Topic: https://www.deviationtx.com/forum/protocol-development/8017-slt-sub-protocols","Add sub formats V2, Q100, Q200 and MR100 to SLT protocol
Channel mapping:
Channel 9: Flight Mode
Channel 10: Flip
Channel 11: Video On
Channel 12: Video Off (Q200), Picture Snapshot (Q100 / MR100)
Channel 13: Calibrate (Q100 / Q200)
Topic: https://www.deviationtx.com/forum/protocol-development/8017-slt-sub-protocols",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,457,2018-11-05T11:46:47Z,2018-11-05T11:52:22Z,2018-11-05T11:52:22Z,MERGED,True,759,716,30,https://github.com/vladislavy,"Protocols E012 and E015, from goebish",1,[],https://github.com/DeviationTX/deviation/pull/457,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/457,"Add protocols for EAchine E012 and E015
Add Emulation layer for HS6200 transceiver to nrf24l01 interface
Move Beken chip init to nrf24l01 interface instead of repeating it in each protocols

E012 channel mapping:
Channel 6: Flip
Channel 9: Headless
Channel 10: RTH
E015 channel mapping:
Channel 5: Arm
Channel 6: Leds on / off
Channel 7: Flip
Channel 9: Headless
Channel 10: RTH
Forums thread: https://www.deviationtx.com/forum/protocol-development/8099-eachine-e015-flight-boat-car","Add protocols for EAchine E012 and E015
Add Emulation layer for HS6200 transceiver to nrf24l01 interface
Move Beken chip init to nrf24l01 interface instead of repeating it in each protocols

E012 channel mapping:
Channel 6: Flip
Channel 9: Headless
Channel 10: RTH
E015 channel mapping:
Channel 5: Arm
Channel 6: Leds on / off
Channel 7: Flip
Channel 9: Headless
Channel 10: RTH
Forums thread: https://www.deviationtx.com/forum/protocol-development/8099-eachine-e015-flight-boat-car",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,460,2018-11-08T15:47:31Z,2018-11-08T15:51:24Z,2018-11-08T15:51:24Z,MERGED,True,206,126,1,https://github.com/vladislavy,"Protocols SLT V2, Q100, Q200, MR100, from goebish",1,[],https://github.com/DeviationTX/deviation/pull/460,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/460,"Add sub formats V2, Q100, Q200 and MR100 to SLT protocol
Channel mapping:
Channel 9: Flight Mode
Channel 10: Flip
Channel 11: Video On
Channel 12: Video Off (Q200), Picture Snapshot (Q100 / MR100)
Channel 13: Calibrate (Q100 / Q200)
Topic: https://www.deviationtx.com/forum/protocol-development/8017-slt-sub-protocols","Add sub formats V2, Q100, Q200 and MR100 to SLT protocol
Channel mapping:
Channel 9: Flight Mode
Channel 10: Flip
Channel 11: Video On
Channel 12: Video Off (Q200), Picture Snapshot (Q100 / MR100)
Channel 13: Calibrate (Q100 / Q200)
Topic: https://www.deviationtx.com/forum/protocol-development/8017-slt-sub-protocols",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,462,2018-11-20T07:17:18Z,2018-11-24T15:44:04Z,2018-11-24T15:44:04Z,CLOSED,False,116,68,19,https://github.com/howard0su,Enable Modular Build for f12e,11,[],https://github.com/DeviationTX/deviation/pull/462,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/462,"Fix modular build for frfkyx
Cleanup modular build and remove hack for uart.
Enable modular build for f12e via reserving 10K RAM","Fix modular build for frfkyx
Cleanup modular build and remove hack for uart.
Enable modular build for f12e via reserving 10K RAM",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,462,2018-11-20T07:17:18Z,2018-11-24T15:44:04Z,2018-11-24T15:44:04Z,CLOSED,False,116,68,19,https://github.com/howard0su,Enable Modular Build for f12e,11,[],https://github.com/DeviationTX/deviation/pull/462,https://github.com/TheRealMoeder,2,https://github.com/DeviationTX/deviation/pull/462#issuecomment-441320177,"Fix modular build for frfkyx
Cleanup modular build and remove hack for uart.
Enable modular build for f12e via reserving 10K RAM","I have no f12e for testing, although code seems reasonable. Any particular reason to include wfly as a default protocol module?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,462,2018-11-20T07:17:18Z,2018-11-24T15:44:04Z,2018-11-24T15:44:04Z,CLOSED,False,116,68,19,https://github.com/howard0su,Enable Modular Build for f12e,11,[],https://github.com/DeviationTX/deviation/pull/462,https://github.com/victzh,3,https://github.com/DeviationTX/deviation/pull/462#issuecomment-441336598,"Fix modular build for frfkyx
Cleanup modular build and remove hack for uart.
Enable modular build for f12e via reserving 10K RAM","I have no f12e for testing, although code seems reasonable. Any particular reason to include wfly as a default protocol module?

I agree, code seems reasonable.  I don't even know what wfly protocol is :-)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,462,2018-11-20T07:17:18Z,2018-11-24T15:44:04Z,2018-11-24T15:44:04Z,CLOSED,False,116,68,19,https://github.com/howard0su,Enable Modular Build for f12e,11,[],https://github.com/DeviationTX/deviation/pull/462,https://github.com/howard0su,4,https://github.com/DeviationTX/deviation/pull/462#issuecomment-441374806,"Fix modular build for frfkyx
Cleanup modular build and remove hack for uart.
Enable modular build for f12e via reserving 10K RAM","I have no f12e for testing, although code seems reasonable. Any particular reason to include wfly as a default protocol module?

I agree, code seems reasonable. I don't even know what wfly protocol is :-)

HAHA... it is because I have a F12E and only have three wfly receivers to play with. let's hold this change for a while because I am still struggle if this is right direction to enable modular build for f12e as it only have 64KB SPI.
I will split out some code change in this change and commit them first as they are anyway reasonable change.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,463,2018-11-22T07:04:43Z,2018-11-27T17:45:17Z,2018-11-27T17:45:17Z,CLOSED,False,63,59,9,https://github.com/howard0su,Enable LTO for non-modular build,4,['Minor'],https://github.com/DeviationTX/deviation/pull/463,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/463,"LTO build will further optimize the code to save more ROM and RAM. Also fix some warnings noticed by LTO linker.
Use devof12e build as example:
Before LTO:
ROM: 0x08004000 - 0x08039650 = 213.58kB
RAM: 0x20000000 - 0x200068b8 =  26.18kB
After LTO:
ROM: 0x08004000 - 0x08037500 = 205.25kB
RAM: 0x20000000 - 0x200067c8 =  25.95kB
Difference:
ROM: 8.30kB
RAM: 0.25kB","LTO build will further optimize the code to save more ROM and RAM. Also fix some warnings noticed by LTO linker.
Use devof12e build as example:
Before LTO:
ROM: 0x08004000 - 0x08039650 = 213.58kB
RAM: 0x20000000 - 0x200068b8 =  26.18kB
After LTO:
ROM: 0x08004000 - 0x08037500 = 205.25kB
RAM: 0x20000000 - 0x200067c8 =  25.95kB
Difference:
ROM: 8.30kB
RAM: 0.25kB",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,463,2018-11-22T07:04:43Z,2018-11-27T17:45:17Z,2018-11-27T17:45:17Z,CLOSED,False,63,59,9,https://github.com/howard0su,Enable LTO for non-modular build,4,['Minor'],https://github.com/DeviationTX/deviation/pull/463,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/463#issuecomment-441228929,"LTO build will further optimize the code to save more ROM and RAM. Also fix some warnings noticed by LTO linker.
Use devof12e build as example:
Before LTO:
ROM: 0x08004000 - 0x08039650 = 213.58kB
RAM: 0x20000000 - 0x200068b8 =  26.18kB
After LTO:
ROM: 0x08004000 - 0x08037500 = 205.25kB
RAM: 0x20000000 - 0x200067c8 =  25.95kB
Difference:
ROM: 8.30kB
RAM: 0.25kB",I believe we don't need link twice to optimize manually. LTO build should do better job.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,463,2018-11-22T07:04:43Z,2018-11-27T17:45:17Z,2018-11-27T17:45:17Z,CLOSED,False,63,59,9,https://github.com/howard0su,Enable LTO for non-modular build,4,['Minor'],https://github.com/DeviationTX/deviation/pull/463,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/463#issuecomment-441374487,"LTO build will further optimize the code to save more ROM and RAM. Also fix some warnings noticed by LTO linker.
Use devof12e build as example:
Before LTO:
ROM: 0x08004000 - 0x08039650 = 213.58kB
RAM: 0x20000000 - 0x200068b8 =  26.18kB
After LTO:
ROM: 0x08004000 - 0x08037500 = 205.25kB
RAM: 0x20000000 - 0x200067c8 =  25.95kB
Difference:
ROM: 8.30kB
RAM: 0.25kB",yes. build is a bit slower but the ROM & RAM is smaller. I cannot figure out a way to expose the symbols for MODULAR build since LTO build will figure out PROTO_Stubs are not really running.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,463,2018-11-22T07:04:43Z,2018-11-27T17:45:17Z,2018-11-27T17:45:17Z,CLOSED,False,63,59,9,https://github.com/howard0su,Enable LTO for non-modular build,4,['Minor'],https://github.com/DeviationTX/deviation/pull/463,https://github.com/howard0su,4,https://github.com/DeviationTX/deviation/pull/463#issuecomment-441405873,"LTO build will further optimize the code to save more ROM and RAM. Also fix some warnings noticed by LTO linker.
Use devof12e build as example:
Before LTO:
ROM: 0x08004000 - 0x08039650 = 213.58kB
RAM: 0x20000000 - 0x200068b8 =  26.18kB
After LTO:
ROM: 0x08004000 - 0x08037500 = 205.25kB
RAM: 0x20000000 - 0x200067c8 =  25.95kB
Difference:
ROM: 8.30kB
RAM: 0.25kB",Seems lang generation has some problem. let me figure it out.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,463,2018-11-22T07:04:43Z,2018-11-27T17:45:17Z,2018-11-27T17:45:17Z,CLOSED,False,63,59,9,https://github.com/howard0su,Enable LTO for non-modular build,4,['Minor'],https://github.com/DeviationTX/deviation/pull/463,https://github.com/howard0su,5,https://github.com/DeviationTX/deviation/pull/463#issuecomment-441417624,"LTO build will further optimize the code to save more ROM and RAM. Also fix some warnings noticed by LTO linker.
Use devof12e build as example:
Before LTO:
ROM: 0x08004000 - 0x08039650 = 213.58kB
RAM: 0x20000000 - 0x200068b8 =  26.18kB
After LTO:
ROM: 0x08004000 - 0x08037500 = 205.25kB
RAM: 0x20000000 - 0x200067c8 =  25.95kB
Difference:
ROM: 8.30kB
RAM: 0.25kB",Fixed. I parse the elf file instead obj file for the final string list. I believe this should be faster and more accurate.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,463,2018-11-22T07:04:43Z,2018-11-27T17:45:17Z,2018-11-27T17:45:17Z,CLOSED,False,63,59,9,https://github.com/howard0su,Enable LTO for non-modular build,4,['Minor'],https://github.com/DeviationTX/deviation/pull/463,https://github.com/hexfet,6,https://github.com/DeviationTX/deviation/pull/463#issuecomment-441505317,"LTO build will further optimize the code to save more ROM and RAM. Also fix some warnings noticed by LTO linker.
Use devof12e build as example:
Before LTO:
ROM: 0x08004000 - 0x08039650 = 213.58kB
RAM: 0x20000000 - 0x200068b8 =  26.18kB
After LTO:
ROM: 0x08004000 - 0x08037500 = 205.25kB
RAM: 0x20000000 - 0x200067c8 =  25.95kB
Difference:
ROM: 8.30kB
RAM: 0.25kB","A build with the latest changes does not work for T8SG Plus.  The transmitter powers off as soon as the power button is released.  No sounds, no display.  A build from current master works fine.  I thought I tested a build from the previous commit prior to my last comment, but must've loaded the wrong file.  A build of 82f0401 for T8SG Plus does not work either.  The errors.txt file was empty which indicates the problem is not an unrecoverable exception.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,463,2018-11-22T07:04:43Z,2018-11-27T17:45:17Z,2018-11-27T17:45:17Z,CLOSED,False,63,59,9,https://github.com/howard0su,Enable LTO for non-modular build,4,['Minor'],https://github.com/DeviationTX/deviation/pull/463,https://github.com/vladislavy,7,https://github.com/DeviationTX/deviation/pull/463#issuecomment-441523901,"LTO build will further optimize the code to save more ROM and RAM. Also fix some warnings noticed by LTO linker.
Use devof12e build as example:
Before LTO:
ROM: 0x08004000 - 0x08039650 = 213.58kB
RAM: 0x20000000 - 0x200068b8 =  26.18kB
After LTO:
ROM: 0x08004000 - 0x08037500 = 205.25kB
RAM: 0x20000000 - 0x200067c8 =  25.95kB
Difference:
ROM: 8.30kB
RAM: 0.25kB","I suspect LTO trying to use variables with same names as single global variable. I seen warnings about use variables with different types, but same names. E.g. variable ""state"", u8 and u16, from different files. If variables with same name from different modules have the same type, we don't get any warning.
If this is the case, we can get many problems.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,463,2018-11-22T07:04:43Z,2018-11-27T17:45:17Z,2018-11-27T17:45:17Z,CLOSED,False,63,59,9,https://github.com/howard0su,Enable LTO for non-modular build,4,['Minor'],https://github.com/DeviationTX/deviation/pull/463,https://github.com/howard0su,8,https://github.com/DeviationTX/deviation/pull/463#issuecomment-441862310,"LTO build will further optimize the code to save more ROM and RAM. Also fix some warnings noticed by LTO linker.
Use devof12e build as example:
Before LTO:
ROM: 0x08004000 - 0x08039650 = 213.58kB
RAM: 0x20000000 - 0x200068b8 =  26.18kB
After LTO:
ROM: 0x08004000 - 0x08037500 = 205.25kB
RAM: 0x20000000 - 0x200067c8 =  25.95kB
Difference:
ROM: 8.30kB
RAM: 0.25kB","there is warning like that. That's why I noticed some variables in protocol/ is not marked as static. Also LTO warns the type name with different definition as well.
I will look at the issue.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,463,2018-11-22T07:04:43Z,2018-11-27T17:45:17Z,2018-11-27T17:45:17Z,CLOSED,False,63,59,9,https://github.com/howard0su,Enable LTO for non-modular build,4,['Minor'],https://github.com/DeviationTX/deviation/pull/463,https://github.com/hexfet,9,https://github.com/DeviationTX/deviation/pull/463#issuecomment-441891230,"LTO build will further optimize the code to save more ROM and RAM. Also fix some warnings noticed by LTO linker.
Use devof12e build as example:
Before LTO:
ROM: 0x08004000 - 0x08039650 = 213.58kB
RAM: 0x20000000 - 0x200068b8 =  26.18kB
After LTO:
ROM: 0x08004000 - 0x08037500 = 205.25kB
RAM: 0x20000000 - 0x200067c8 =  25.95kB
Difference:
ROM: 8.30kB
RAM: 0.25kB","I tried with Devo10 with latest lto branch and the tx is bricked. Turn power switch on and nothing happens, and same with the EXT switch held down.  Guessing somehow the bootloader got corrupted.  Will track down how to recover.
Just to verify the test I tried the lto build on T8Sg Plus again, and same behavior as before.  Immediately powers off, but still able to access the bootloader.  Build from master works fine.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,463,2018-11-22T07:04:43Z,2018-11-27T17:45:17Z,2018-11-27T17:45:17Z,CLOSED,False,63,59,9,https://github.com/howard0su,Enable LTO for non-modular build,4,['Minor'],https://github.com/DeviationTX/deviation/pull/463,https://github.com/howard0su,10,https://github.com/DeviationTX/deviation/pull/463#issuecomment-442151754,"LTO build will further optimize the code to save more ROM and RAM. Also fix some warnings noticed by LTO linker.
Use devof12e build as example:
Before LTO:
ROM: 0x08004000 - 0x08039650 = 213.58kB
RAM: 0x20000000 - 0x200068b8 =  26.18kB
After LTO:
ROM: 0x08004000 - 0x08037500 = 205.25kB
RAM: 0x20000000 - 0x200067c8 =  25.95kB
Difference:
ROM: 8.30kB
RAM: 0.25kB","I tried with Devo10 with latest lto branch and the tx is bricked. Turn power switch on and nothing happens, and same with the EXT switch held down. Guessing somehow the bootloader got corrupted. Will track down how to recover.
Just to verify the test I tried the lto build on T8Sg Plus again, and same behavior as before. Immediately powers off, but still able to access the bootloader. Build from master works fine.

sorry to hear that. I tried the bits on my f12e. I have to unplug battery and hold ent and turn on to get back update screen. I think boot loader should be fine.
I will close the PR until I figure out the problem. Don't want to more ppl to try this.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,464,2018-11-24T15:23:22Z,2018-12-19T21:58:17Z,2018-12-20T15:03:21Z,MERGED,True,87,92,19,https://github.com/howard0su,Improve module build,20,[],https://github.com/DeviationTX/deviation/pull/464,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/464,"Module Build is enhanced to make sure:

firmware code is built with the macro ENABLE_MODULAR.
The code used in module is built with macro MODULAR and force long jump. No code is mixed used in firmware or module.
Make sure other platform can enable modular to avoid hard code obj in ld command line like objs/devo7e/uart.o
Split out protospi code into a C file as the size of function is too large to inline in some compilers.","Module Build is enhanced to make sure:

firmware code is built with the macro ENABLE_MODULAR.
The code used in module is built with macro MODULAR and force long jump. No code is mixed used in firmware or module.
Make sure other platform can enable modular to avoid hard code obj in ld command line like objs/devo7e/uart.o
Split out protospi code into a C file as the size of function is too large to inline in some compilers.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,464,2018-11-24T15:23:22Z,2018-12-19T21:58:17Z,2018-12-20T15:03:21Z,MERGED,True,87,92,19,https://github.com/howard0su,Improve module build,20,[],https://github.com/DeviationTX/deviation/pull/464,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/464#issuecomment-442491823,"Module Build is enhanced to make sure:

firmware code is built with the macro ENABLE_MODULAR.
The code used in module is built with macro MODULAR and force long jump. No code is mixed used in firmware or module.
Make sure other platform can enable modular to avoid hard code obj in ld command line like objs/devo7e/uart.o
Split out protospi code into a C file as the size of function is too large to inline in some compilers.",can I get review on this?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,464,2018-11-24T15:23:22Z,2018-12-19T21:58:17Z,2018-12-20T15:03:21Z,MERGED,True,87,92,19,https://github.com/howard0su,Improve module build,20,[],https://github.com/DeviationTX/deviation/pull/464,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/464#issuecomment-442699689,"Module Build is enhanced to make sure:

firmware code is built with the macro ENABLE_MODULAR.
The code used in module is built with macro MODULAR and force long jump. No code is mixed used in firmware or module.
Make sure other platform can enable modular to avoid hard code obj in ld command line like objs/devo7e/uart.o
Split out protospi code into a C file as the size of function is too large to inline in some compilers.",I have a f12e and I tested it with both modular and non-modular build with the change.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,464,2018-11-24T15:23:22Z,2018-12-19T21:58:17Z,2018-12-20T15:03:21Z,MERGED,True,87,92,19,https://github.com/howard0su,Improve module build,20,[],https://github.com/DeviationTX/deviation/pull/464,https://github.com/hexfet,4,https://github.com/DeviationTX/deviation/pull/464#issuecomment-443079260,"Module Build is enhanced to make sure:

firmware code is built with the macro ENABLE_MODULAR.
The code used in module is built with macro MODULAR and force long jump. No code is mixed used in firmware or module.
Make sure other platform can enable modular to avoid hard code obj in ld command line like objs/devo7e/uart.o
Split out protospi code into a C file as the size of function is too large to inline in some compilers.","I think it's good, but don't have a limited memory tx.  Did you test SBUS or CRSF output with modular build?
What's the advantage of adding ENABLE_MODULAR?  When do I use it instead of MODULAR?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,464,2018-11-24T15:23:22Z,2018-12-19T21:58:17Z,2018-12-20T15:03:21Z,MERGED,True,87,92,19,https://github.com/howard0su,Improve module build,20,[],https://github.com/DeviationTX/deviation/pull/464,https://github.com/howard0su,5,https://github.com/DeviationTX/deviation/pull/464#issuecomment-443367247,"Module Build is enhanced to make sure:

firmware code is built with the macro ENABLE_MODULAR.
The code used in module is built with macro MODULAR and force long jump. No code is mixed used in firmware or module.
Make sure other platform can enable modular to avoid hard code obj in ld command line like objs/devo7e/uart.o
Split out protospi code into a C file as the size of function is too large to inline in some compilers.","No. I am not familiar with such features. Let me research a bit.
ENABLE_MODULAR means the code is compile for main firmware but when MODULAR build is enabled (devo7e).
MODULEAR means the code is compile for module (of course MODULAR build is enabled).
I have to use two macros as some code need be compiled in both main firmware and module like uart.c.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,464,2018-11-24T15:23:22Z,2018-12-19T21:58:17Z,2018-12-20T15:03:21Z,MERGED,True,87,92,19,https://github.com/howard0su,Improve module build,20,[],https://github.com/DeviationTX/deviation/pull/464,https://github.com/hexfet,6,https://github.com/DeviationTX/deviation/pull/464#issuecomment-443391526,"Module Build is enhanced to make sure:

firmware code is built with the macro ENABLE_MODULAR.
The code used in module is built with macro MODULAR and force long jump. No code is mixed used in firmware or module.
Make sure other platform can enable modular to avoid hard code obj in ld command line like objs/devo7e/uart.o
Split out protospi code into a C file as the size of function is too large to inline in some compilers.","Okay, I understand the reason.
However this change breaks the modular builds.  All the protocol files (*.mod) are zero length for both devo7e and devof7.  Building with the docker environment.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,464,2018-11-24T15:23:22Z,2018-12-19T21:58:17Z,2018-12-20T15:03:21Z,MERGED,True,87,92,19,https://github.com/howard0su,Improve module build,20,[],https://github.com/DeviationTX/deviation/pull/464,https://github.com/howard0su,7,https://github.com/DeviationTX/deviation/pull/464#issuecomment-443506121,"Module Build is enhanced to make sure:

firmware code is built with the macro ENABLE_MODULAR.
The code used in module is built with macro MODULAR and force long jump. No code is mixed used in firmware or module.
Make sure other platform can enable modular to avoid hard code obj in ld command line like objs/devo7e/uart.o
Split out protospi code into a C file as the size of function is too large to inline in some compilers.",I revert the last change and rebase to master. The mod file has correct size. Can u help test on Devo7e as I don't have that TX on hand.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,464,2018-11-24T15:23:22Z,2018-12-19T21:58:17Z,2018-12-20T15:03:21Z,MERGED,True,87,92,19,https://github.com/howard0su,Improve module build,20,[],https://github.com/DeviationTX/deviation/pull/464,https://github.com/hexfet,8,https://github.com/DeviationTX/deviation/pull/464#issuecomment-444315889,"Module Build is enhanced to make sure:

firmware code is built with the macro ENABLE_MODULAR.
The code used in module is built with macro MODULAR and force long jump. No code is mixed used in firmware or module.
Make sure other platform can enable modular to avoid hard code obj in ld command line like objs/devo7e/uart.o
Split out protospi code into a C file as the size of function is too large to inline in some compilers.",The protocol files have reasonable sizes now.  Unfortunately I don't have a 7e or other tx to test modular build easily.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,464,2018-11-24T15:23:22Z,2018-12-19T21:58:17Z,2018-12-20T15:03:21Z,MERGED,True,87,92,19,https://github.com/howard0su,Improve module build,20,[],https://github.com/DeviationTX/deviation/pull/464,https://github.com/howard0su,9,https://github.com/DeviationTX/deviation/pull/464#issuecomment-446487849,"Module Build is enhanced to make sure:

firmware code is built with the macro ENABLE_MODULAR.
The code used in module is built with macro MODULAR and force long jump. No code is mixed used in firmware or module.
Make sure other platform can enable modular to avoid hard code obj in ld command line like objs/devo7e/uart.o
Split out protospi code into a C file as the size of function is too large to inline in some compilers.","Rebase with the latest master.
Tested on F12E and Devo7e Tx. Ready to go.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,464,2018-11-24T15:23:22Z,2018-12-19T21:58:17Z,2018-12-20T15:03:21Z,MERGED,True,87,92,19,https://github.com/howard0su,Improve module build,20,[],https://github.com/DeviationTX/deviation/pull/464,https://github.com/TheRealMoeder,10,https://github.com/DeviationTX/deviation/pull/464#issuecomment-446508433,"Module Build is enhanced to make sure:

firmware code is built with the macro ENABLE_MODULAR.
The code used in module is built with macro MODULAR and force long jump. No code is mixed used in firmware or module.
Make sure other platform can enable modular to avoid hard code obj in ld command line like objs/devo7e/uart.o
Split out protospi code into a C file as the size of function is too large to inline in some compilers.",Did you check crsf/sbus serial output on trainer port?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,464,2018-11-24T15:23:22Z,2018-12-19T21:58:17Z,2018-12-20T15:03:21Z,MERGED,True,87,92,19,https://github.com/howard0su,Improve module build,20,[],https://github.com/DeviationTX/deviation/pull/464,https://github.com/howard0su,11,https://github.com/DeviationTX/deviation/pull/464#issuecomment-446522986,"Module Build is enhanced to make sure:

firmware code is built with the macro ENABLE_MODULAR.
The code used in module is built with macro MODULAR and force long jump. No code is mixed used in firmware or module.
Make sure other platform can enable modular to avoid hard code obj in ld command line like objs/devo7e/uart.o
Split out protospi code into a C file as the size of function is too large to inline in some compilers.",no. How to do so?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,464,2018-11-24T15:23:22Z,2018-12-19T21:58:17Z,2018-12-20T15:03:21Z,MERGED,True,87,92,19,https://github.com/howard0su,Improve module build,20,[],https://github.com/DeviationTX/deviation/pull/464,https://github.com/hexfet,12,https://github.com/DeviationTX/deviation/pull/464#issuecomment-446795563,"Module Build is enhanced to make sure:

firmware code is built with the macro ENABLE_MODULAR.
The code used in module is built with macro MODULAR and force long jump. No code is mixed used in firmware or module.
Make sure other platform can enable modular to avoid hard code obj in ld command line like objs/devo7e/uart.o
Split out protospi code into a C file as the size of function is too large to inline in some compilers.","The serial protocols are output on the trainer port tip connection.  Use a logic analyzer or FTDI to look at the data, or run the signal into a flight controller.  CRSF is 400000bps, 8 data bits, no parity, 1 stop bit.  SBUS is 100000,8,E,2.  Would be good to check ppm out and in as well.
My concern is that the interrupt service routines in uart.c, pwm_rom.c, and ppmin.c need to be located in ROM even in modular builds.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,464,2018-11-24T15:23:22Z,2018-12-19T21:58:17Z,2018-12-20T15:03:21Z,MERGED,True,87,92,19,https://github.com/howard0su,Improve module build,20,[],https://github.com/DeviationTX/deviation/pull/464,https://github.com/howard0su,13,https://github.com/DeviationTX/deviation/pull/464#issuecomment-446800871,"Module Build is enhanced to make sure:

firmware code is built with the macro ENABLE_MODULAR.
The code used in module is built with macro MODULAR and force long jump. No code is mixed used in firmware or module.
Make sure other platform can enable modular to avoid hard code obj in ld command line like objs/devo7e/uart.o
Split out protospi code into a C file as the size of function is too large to inline in some compilers.",i see. this is valid point. let me check.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,464,2018-11-24T15:23:22Z,2018-12-19T21:58:17Z,2018-12-20T15:03:21Z,MERGED,True,87,92,19,https://github.com/howard0su,Improve module build,20,[],https://github.com/DeviationTX/deviation/pull/464,https://github.com/howard0su,14,https://github.com/DeviationTX/deviation/pull/464#issuecomment-446844358,"Module Build is enhanced to make sure:

firmware code is built with the macro ENABLE_MODULAR.
The code used in module is built with macro MODULAR and force long jump. No code is mixed used in firmware or module.
Make sure other platform can enable modular to avoid hard code obj in ld command line like objs/devo7e/uart.o
Split out protospi code into a C file as the size of function is too large to inline in some compilers.","I checked lst file for ISRs:
master build:
$ grep _isr devo7e.list
08005c44 <tim4_isr>:
08005cd0 <exti1_isr>:
0800602c <exti2_isr>:
080063dc <dma1_channel4_isr>:
08006418 <usart1_isr>:
080067a0 <tim1_up_isr>:
08006a3c <exti9_5_isr>:
08008210 <usb_lp_can_rx0_isr>:
this PR build:
$ grep _isr devo7e.list
08005c44 <tim4_isr>:
08005cd0 <exti1_isr>:
0800602c <exti2_isr>:
080063c8 <dma1_channel4_isr>:
08006404 <usart1_isr>:
0800678c <tim1_up_isr>:
08006a28 <exti9_5_isr>:
080081f4 <usb_lp_can_rx0_isr>:
for checking trainer output, I may need build a hardware. Is trainer port is TTL so that I can connect to USB-to-TTL adapter?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,464,2018-11-24T15:23:22Z,2018-12-19T21:58:17Z,2018-12-20T15:03:21Z,MERGED,True,87,92,19,https://github.com/howard0su,Improve module build,20,[],https://github.com/DeviationTX/deviation/pull/464,https://github.com/howard0su,15,https://github.com/DeviationTX/deviation/pull/464#issuecomment-446935398,"Module Build is enhanced to make sure:

firmware code is built with the macro ENABLE_MODULAR.
The code used in module is built with macro MODULAR and force long jump. No code is mixed used in firmware or module.
Make sure other platform can enable modular to avoid hard code obj in ld command line like objs/devo7e/uart.o
Split out protospi code into a C file as the size of function is too large to inline in some compilers.",I attached a log analyzer. I can see PPM has the output. but I didn't find CRSF data even with master build. I believe something wrong with my log analyzer to capture the data.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,464,2018-11-24T15:23:22Z,2018-12-19T21:58:17Z,2018-12-20T15:03:21Z,MERGED,True,87,92,19,https://github.com/howard0su,Improve module build,20,[],https://github.com/DeviationTX/deviation/pull/464,https://github.com/hexfet,16,https://github.com/DeviationTX/deviation/pull/464#issuecomment-447209780,"Module Build is enhanced to make sure:

firmware code is built with the macro ENABLE_MODULAR.
The code used in module is built with macro MODULAR and force long jump. No code is mixed used in firmware or module.
Make sure other platform can enable modular to avoid hard code obj in ld command line like objs/devo7e/uart.o
Split out protospi code into a C file as the size of function is too large to inline in some compilers.","I made a modular build for T8+ to test this.
Howard I see the same results for modular build.  The PPM protocol works, but not CRSF or SBUS.  One explanation is that the ISRs in uart.c are not located correctly.  The PPM ISR is in the pwm_rom.c file and is working correctly.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,464,2018-11-24T15:23:22Z,2018-12-19T21:58:17Z,2018-12-20T15:03:21Z,MERGED,True,87,92,19,https://github.com/howard0su,Improve module build,20,[],https://github.com/DeviationTX/deviation/pull/464,https://github.com/howard0su,17,https://github.com/DeviationTX/deviation/pull/464#issuecomment-447221959,"Module Build is enhanced to make sure:

firmware code is built with the macro ENABLE_MODULAR.
The code used in module is built with macro MODULAR and force long jump. No code is mixed used in firmware or module.
Make sure other platform can enable modular to avoid hard code obj in ld command line like objs/devo7e/uart.o
Split out protospi code into a C file as the size of function is too large to inline in some compilers.","@hexfet I checked code. the usart_isr is also in the rom not in the module. Did you test master branch? In our testing, i don't have CRSF output from master branch build as well. it can cause by something else?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,464,2018-11-24T15:23:22Z,2018-12-19T21:58:17Z,2018-12-20T15:03:21Z,MERGED,True,87,92,19,https://github.com/howard0su,Improve module build,20,[],https://github.com/DeviationTX/deviation/pull/464,https://github.com/howard0su,18,https://github.com/DeviationTX/deviation/pull/464#issuecomment-447359150,"Module Build is enhanced to make sure:

firmware code is built with the macro ENABLE_MODULAR.
The code used in module is built with macro MODULAR and force long jump. No code is mixed used in firmware or module.
Make sure other platform can enable modular to avoid hard code obj in ld command line like objs/devo7e/uart.o
Split out protospi code into a C file as the size of function is too large to inline in some compilers.","Based on the whole night testing, I believe CRSF is broken in master as well. It should not related to this change. And I also notice WFLY module doesn't work in devo7e as well.
Anyone can explain a bit what is difference when running as a module. I read the code and didn't really find difference.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,464,2018-11-24T15:23:22Z,2018-12-19T21:58:17Z,2018-12-20T15:03:21Z,MERGED,True,87,92,19,https://github.com/howard0su,Improve module build,20,[],https://github.com/DeviationTX/deviation/pull/464,https://github.com/hexfet,19,https://github.com/DeviationTX/deviation/pull/464#issuecomment-447534168,"Module Build is enhanced to make sure:

firmware code is built with the macro ENABLE_MODULAR.
The code used in module is built with macro MODULAR and force long jump. No code is mixed used in firmware or module.
Make sure other platform can enable modular to avoid hard code obj in ld command line like objs/devo7e/uart.o
Split out protospi code into a C file as the size of function is too large to inline in some compilers.","You are right.  The CRSF protocol is broken for modular builds in master.  Testing with a modular build of T8+ with SBUS and TESTSER also enabled, the serial output did not work for any of them.
Then confirmed that moving the ISR code from uart.c to pwm_rom.c fixes the issue.  Judging by the name, this code gets located in Flash.
I've never fully dug into the modular file compile and link steps so need to do that to understand why the ISRs end up in the protocol modules.  There may not be any better solution than putting the ISRs in separate files.  The vector table is in Flash. Relocating it to RAM and updating at protocol load time, or cementing the ISR addresses in RAM and putting those addresses in a Flash vector table would be worse options.
Running as a module means the protocol code is not compiled into Flash, but into separate binaries with the .mod extension that are stored in the filesystem and loaded into RAM when the protocol is selected.  The PROTOCMD interface is the communication link to the dynamically loaded code.  The memory-limited transmitters reserve 4KB of RAM to load the .mod files.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,464,2018-11-24T15:23:22Z,2018-12-19T21:58:17Z,2018-12-20T15:03:21Z,MERGED,True,87,92,19,https://github.com/howard0su,Improve module build,20,[],https://github.com/DeviationTX/deviation/pull/464,https://github.com/howard0su,20,https://github.com/DeviationTX/deviation/pull/464#issuecomment-447538215,"Module Build is enhanced to make sure:

firmware code is built with the macro ENABLE_MODULAR.
The code used in module is built with macro MODULAR and force long jump. No code is mixed used in firmware or module.
Make sure other platform can enable modular to avoid hard code obj in ld command line like objs/devo7e/uart.o
Split out protospi code into a C file as the size of function is too large to inline in some compilers.","This still doesn't explain well. I checked devo7.map, here is three ISRs related, (2 for uart, 1 for pwm). I also cannot find ISR code in crsf_uart.mod.
`
2359  .text.dma1_channel4_isr
2360                 0x08006b4c       0x3c objs/devo7e/uart.o
2361                 0x08006b4c                dma1_channel4_isr
2362  .text.usart1_isr
2363                 0x08006b88       0x24 objs/devo7e/uart.o
2364                 0x08006b88                usart1_isr
2311  .text.tim1_up_isr
2312                 0x0800662c       0x3c objs/devo7e/pwm_rom.o
2313                 0x0800662c                tim1_up_isr
more closely looking, vector table is even correct:
15  800306c:   95 cb 01 08 95 cb 01 08 95 cb 01 08 4d 6b 00 08     ............Mk..
16  800307c:   95 cb 01 08 95 cb 01 08 95 cb 01 08 95 cb 01 08     ................
17  800308c:   95 cb 01 08 49 81 00 08 95 cb 01 08 95 cb 01 08     ....I...........
18  800309c:   ad 64 00 08 95 cb 01 08 2d 66 00 08 95 cb 01 08     .d......-f......
19  80030ac:   95 cb 01 08 95 cb 01 08 95 cb 01 08 cd 5a 00 08     .............Z..
20  80030bc:   95 cb 01 08 95 cb 01 08 95 cb 01 08 95 cb 01 08     ................
21  80030cc:   95 cb 01 08 95 cb 01 08 89 6b 00 08 95 cb 01 08     .........k......
22  80030dc:   95 cb 01 08 95 cb 01 08 95 cb 01 08 95 cb 01 08     ................
23  80030ec:   95 cb 01 08 95 cb 01 08 95 cb 01 08 95 cb 01 08     ................
24  80030fc:   95 cb 01 08 95 cb 01 08 95 cb 01 08 95 cb 01 08     ................
25  800310c:   95 cb 01 08 95 cb 01 08 95 cb 01 08 95 cb 01 08     ................
26  800311c:   95 cb 01 08 95 cb 01 08 95 cb 01 08 95 cb 01 08     ................
27  800312c:   95 cb 01 08 95 cb 01 08 95 cb 01 08 95 cb 01 08     ................
28  800313c:   95 cb 01 08 95 cb 01 08 95 cb 01 08 95 cb 01 08     ................
29  800314c:   95 cb 01 08                                         ....
08006b88 <usart1_isr>:
08006b4c <dma1_channel4_isr>:
`",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,464,2018-11-24T15:23:22Z,2018-12-19T21:58:17Z,2018-12-20T15:03:21Z,MERGED,True,87,92,19,https://github.com/howard0su,Improve module build,20,[],https://github.com/DeviationTX/deviation/pull/464,https://github.com/TheRealMoeder,21,https://github.com/DeviationTX/deviation/pull/464#issuecomment-447627656,"Module Build is enhanced to make sure:

firmware code is built with the macro ENABLE_MODULAR.
The code used in module is built with macro MODULAR and force long jump. No code is mixed used in firmware or module.
Make sure other platform can enable modular to avoid hard code obj in ld command line like objs/devo7e/uart.o
Split out protospi code into a C file as the size of function is too large to inline in some compilers.",@hexfet so we can merge this as well?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,464,2018-11-24T15:23:22Z,2018-12-19T21:58:17Z,2018-12-20T15:03:21Z,MERGED,True,87,92,19,https://github.com/howard0su,Improve module build,20,[],https://github.com/DeviationTX/deviation/pull/464,https://github.com/howard0su,22,https://github.com/DeviationTX/deviation/pull/464#issuecomment-447695707,"Module Build is enhanced to make sure:

firmware code is built with the macro ENABLE_MODULAR.
The code used in module is built with macro MODULAR and force long jump. No code is mixed used in firmware or module.
Make sure other platform can enable modular to avoid hard code obj in ld command line like objs/devo7e/uart.o
Split out protospi code into a C file as the size of function is too large to inline in some compilers.",rebase again.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,464,2018-11-24T15:23:22Z,2018-12-19T21:58:17Z,2018-12-20T15:03:21Z,MERGED,True,87,92,19,https://github.com/howard0su,Improve module build,20,[],https://github.com/DeviationTX/deviation/pull/464,https://github.com/howard0su,23,https://github.com/DeviationTX/deviation/pull/464#issuecomment-448424175,"Module Build is enhanced to make sure:

firmware code is built with the macro ENABLE_MODULAR.
The code used in module is built with macro MODULAR and force long jump. No code is mixed used in firmware or module.
Make sure other platform can enable modular to avoid hard code obj in ld command line like objs/devo7e/uart.o
Split out protospi code into a C file as the size of function is too large to inline in some compilers.","need a bit time to cleanup protospi.
static const struct mcu_pin CYRF_RESET_PIN ={GPIOB, GPIO11};
static const struct mcu_pin AVR_RESET_PIN ={GPIO_BANK_JTCK_SWCLK, GPIO_JTCK_SWCLK};
This part is really ugly to define a static in header file.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,464,2018-11-24T15:23:22Z,2018-12-19T21:58:17Z,2018-12-20T15:03:21Z,MERGED,True,87,92,19,https://github.com/howard0su,Improve module build,20,[],https://github.com/DeviationTX/deviation/pull/464,https://github.com/howard0su,24,https://github.com/DeviationTX/deviation/pull/464#issuecomment-448540052,"Module Build is enhanced to make sure:

firmware code is built with the macro ENABLE_MODULAR.
The code used in module is built with macro MODULAR and force long jump. No code is mixed used in firmware or module.
Make sure other platform can enable modular to avoid hard code obj in ld command line like objs/devo7e/uart.o
Split out protospi code into a C file as the size of function is too large to inline in some compilers.",Done with cleanup,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,464,2018-11-24T15:23:22Z,2018-12-19T21:58:17Z,2018-12-20T15:03:21Z,MERGED,True,87,92,19,https://github.com/howard0su,Improve module build,20,[],https://github.com/DeviationTX/deviation/pull/464,https://github.com/howard0su,25,https://github.com/DeviationTX/deviation/pull/464#issuecomment-448594918,"Module Build is enhanced to make sure:

firmware code is built with the macro ENABLE_MODULAR.
The code used in module is built with macro MODULAR and force long jump. No code is mixed used in firmware or module.
Make sure other platform can enable modular to avoid hard code obj in ld command line like objs/devo7e/uart.o
Split out protospi code into a C file as the size of function is too large to inline in some compilers.",please squeeze when merge.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,465,2018-11-24T15:31:04Z,2019-02-25T01:13:30Z,2019-02-25T01:13:30Z,CLOSED,False,3,1,1,https://github.com/howard0su,fix frskyx_cc2500 in modular build when telemetry is enabled,1,[],https://github.com/DeviationTX/deviation/pull/465,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/465,modular build doesn't support data section. So we should not use initial value for static variables. Initialize it during UART setup.,modular build doesn't support data section. So we should not use initial value for static variables. Initialize it during UART setup.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,465,2018-11-24T15:31:04Z,2019-02-25T01:13:30Z,2019-02-25T01:13:30Z,CLOSED,False,3,1,1,https://github.com/howard0su,fix frskyx_cc2500 in modular build when telemetry is enabled,1,[],https://github.com/DeviationTX/deviation/pull/465,https://github.com/hexfet,2,https://github.com/DeviationTX/deviation/pull/465#issuecomment-441407443,modular build doesn't support data section. So we should not use initial value for static variables. Initialize it during UART setup.,"Your comment is correct, but this code is excluded from modular builds by the HAS_EXTENDED_TELEMETRY check at line 388.  I feel the intent is clearer with the code as it is.  None of the extended telemetry processing is included in modular builds.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,465,2018-11-24T15:31:04Z,2019-02-25T01:13:30Z,2019-02-25T01:13:30Z,CLOSED,False,3,1,1,https://github.com/howard0su,fix frskyx_cc2500 in modular build when telemetry is enabled,1,[],https://github.com/DeviationTX/deviation/pull/465,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/465#issuecomment-441417128,modular build doesn't support data section. So we should not use initial value for static variables. Initialize it during UART setup.,this is noticed when I enable modular build for f12e. Any reason we cannot support extended telemetry in modular build?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,465,2018-11-24T15:31:04Z,2019-02-25T01:13:30Z,2019-02-25T01:13:30Z,CLOSED,False,3,1,1,https://github.com/howard0su,fix frskyx_cc2500 in modular build when telemetry is enabled,1,[],https://github.com/DeviationTX/deviation/pull/465,https://github.com/goebish,4,https://github.com/DeviationTX/deviation/pull/465#issuecomment-441423297,modular build doesn't support data section. So we should not use initial value for static variables. Initialize it during UART setup.,That's because the resulting .mod would be bigger than 4 kB.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,465,2018-11-24T15:31:04Z,2019-02-25T01:13:30Z,2019-02-25T01:13:30Z,CLOSED,False,3,1,1,https://github.com/howard0su,fix frskyx_cc2500 in modular build when telemetry is enabled,1,[],https://github.com/DeviationTX/deviation/pull/465,https://github.com/howard0su,5,https://github.com/DeviationTX/deviation/pull/465#issuecomment-441425648,modular build doesn't support data section. So we should not use initial value for static variables. Initialize it during UART setup.,"That's because the resulting .mod would be bigger than 4 kB.

I see. again devo7e only issue... but for other models which has 64KB ram, we can enlarge the limit beyond 4KB.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,465,2018-11-24T15:31:04Z,2019-02-25T01:13:30Z,2019-02-25T01:13:30Z,CLOSED,False,3,1,1,https://github.com/howard0su,fix frskyx_cc2500 in modular build when telemetry is enabled,1,[],https://github.com/DeviationTX/deviation/pull/465,https://github.com/hexfet,6,https://github.com/DeviationTX/deviation/pull/465#issuecomment-441505670,modular build doesn't support data section. So we should not use initial value for static variables. Initialize it during UART setup.,I'm not opposed to such a change (but I don't have an affected transmitter).,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,465,2018-11-24T15:31:04Z,2019-02-25T01:13:30Z,2019-02-25T01:13:30Z,CLOSED,False,3,1,1,https://github.com/howard0su,fix frskyx_cc2500 in modular build when telemetry is enabled,1,[],https://github.com/DeviationTX/deviation/pull/465,https://github.com/howard0su,7,https://github.com/DeviationTX/deviation/pull/465#issuecomment-442275923,modular build doesn't support data section. So we should not use initial value for static variables. Initialize it during UART setup.,"we don't have any TX so far enabled modular which also enable extended_telemetry. but this is code defect I noticed when I was trying to enable modular build for f12e. Later on, I want to hold on that change as f12e has really small SPI flash which may not be right direction to have modules.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,465,2018-11-24T15:31:04Z,2019-02-25T01:13:30Z,2019-02-25T01:13:30Z,CLOSED,False,3,1,1,https://github.com/howard0su,fix frskyx_cc2500 in modular build when telemetry is enabled,1,[],https://github.com/DeviationTX/deviation/pull/465,https://github.com/hexfet,8,https://github.com/DeviationTX/deviation/pull/465#issuecomment-443081457,modular build doesn't support data section. So we should not use initial value for static variables. Initialize it during UART setup.,If you have a future PR that requires this change as part of adding a feature or fixing an issue it can be merged then. Right now it does neither so my vote is no. (recognize I could be biased),True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,466,2018-11-24T16:45:49Z,2018-11-27T20:46:45Z,2018-12-03T01:10:35Z,MERGED,True,18,9,10,https://github.com/howard0su,Fix warnings under new gcc,2,[],https://github.com/DeviationTX/deviation/pull/466,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/466,"Fix warnings notified by new gcc.

Access array out of range
explicit on fall through in switch branches.","Fix warnings notified by new gcc.

Access array out of range
explicit on fall through in switch branches.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,466,2018-11-24T16:45:49Z,2018-11-27T20:46:45Z,2018-12-03T01:10:35Z,MERGED,True,18,9,10,https://github.com/howard0su,Fix warnings under new gcc,2,[],https://github.com/DeviationTX/deviation/pull/466,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/466#issuecomment-441380325,"Fix warnings notified by new gcc.

Access array out of range
explicit on fall through in switch branches.",please help review the code. I intentionally didn't change any existing logic. But some state transition code in protocol is not super clear to me if it is right or not.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,466,2018-11-24T16:45:49Z,2018-11-27T20:46:45Z,2018-12-03T01:10:35Z,MERGED,True,18,9,10,https://github.com/howard0su,Fix warnings under new gcc,2,[],https://github.com/DeviationTX/deviation/pull/466,https://github.com/hexfet,3,https://github.com/DeviationTX/deviation/pull/466#issuecomment-441410573,"Fix warnings notified by new gcc.

Access array out of range
explicit on fall through in switch branches.","These changes cause new empty declaration warnings with the current compiler:
protocol/kn_nrf24l01.c:278:9: warning: empty declaration [enabled by default] FALLTHROUGH;
Not sure what you mean by ""new gcc"" but the version in the docker container is 4.8.3 20131129.  There has been some recent discussion about updating that version.
The gcc manual page has some options for disabling the warning based on comments.  That might be a backwards-compatible way of addressing the warnings produced by later gcc versions.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,466,2018-11-24T16:45:49Z,2018-11-27T20:46:45Z,2018-12-03T01:10:35Z,MERGED,True,18,9,10,https://github.com/howard0su,Fix warnings under new gcc,2,[],https://github.com/DeviationTX/deviation/pull/466,https://github.com/tracernz,4,https://github.com/DeviationTX/deviation/pull/466#issuecomment-441415895,"Fix warnings notified by new gcc.

Access array out of range
explicit on fall through in switch branches.","You can also just have a comment, which has always good practice anyway. I'm not super cool with the compiler interpreting comments but I understand why they did it.
case foo:
    do_thing(stuff);
    /* fallthrough */
case bar:
    unfudge(stuff);
    break;

GCC docs: https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wimplicit-fallthrough",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,467,2018-11-25T21:22:05Z,2018-12-05T20:16:40Z,2019-03-05T00:10:34Z,CLOSED,False,5,4,1,https://github.com/goebish,Remove standard GUI from Devo 7e build,2,[],https://github.com/DeviationTX/deviation/pull/467,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/467,"I've a few protocols on hold but the 7e won't accept any more protocol definitions, time to remove the standard GUI from the 7e build ?","I've a few protocols on hold but the 7e won't accept any more protocol definitions, time to remove the standard GUI from the 7e build ?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,467,2018-11-25T21:22:05Z,2018-12-05T20:16:40Z,2019-03-05T00:10:34Z,CLOSED,False,5,4,1,https://github.com/goebish,Remove standard GUI from Devo 7e build,2,[],https://github.com/DeviationTX/deviation/pull/467,https://github.com/vladislavy,2,https://github.com/DeviationTX/deviation/pull/467#issuecomment-441521809,"I've a few protocols on hold but the 7e won't accept any more protocol definitions, time to remove the standard GUI from the 7e build ?","We can enable some common features with it:
#define HAS_PERMANENT_TIMER 1
#define HAS_DATALOG         1
#define HAS_LAYOUT_EDITOR   1",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,467,2018-11-25T21:22:05Z,2018-12-05T20:16:40Z,2019-03-05T00:10:34Z,CLOSED,False,5,4,1,https://github.com/goebish,Remove standard GUI from Devo 7e build,2,[],https://github.com/DeviationTX/deviation/pull/467,https://github.com/TheRealMoeder,3,https://github.com/DeviationTX/deviation/pull/467#issuecomment-441728006,"I've a few protocols on hold but the 7e won't accept any more protocol definitions, time to remove the standard GUI from the 7e build ?","I'm OK with this (though I'd rather add voice (without menu, due to ram limitations) than data log. I requested a review from pb, since he always refrained from removing standard gui. But if we don't hear anything from him within a week or so, I guess we might as well merge.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,467,2018-11-25T21:22:05Z,2018-12-05T20:16:40Z,2019-03-05T00:10:34Z,CLOSED,False,5,4,1,https://github.com/goebish,Remove standard GUI from Devo 7e build,2,[],https://github.com/DeviationTX/deviation/pull/467,https://github.com/PhracturedBlue,4,https://github.com/DeviationTX/deviation/pull/467#issuecomment-442522014,"I've a few protocols on hold but the 7e won't accept any more protocol definitions, time to remove the standard GUI from the 7e build ?","has anyone collected data from users about this?  are you sure that end users primarily dont use the standard gui?
added the ""don't"" which was the question I meant to ask",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,467,2018-11-25T21:22:05Z,2018-12-05T20:16:40Z,2019-03-05T00:10:34Z,CLOSED,False,5,4,1,https://github.com/goebish,Remove standard GUI from Devo 7e build,2,[],https://github.com/DeviationTX/deviation/pull/467,https://github.com/goebish,5,https://github.com/DeviationTX/deviation/pull/467#issuecomment-442522734,"I've a few protocols on hold but the 7e won't accept any more protocol definitions, time to remove the standard GUI from the 7e build ?","Seems most people have never heard of the standard GUI
https://www.deviationtx.com/forum/7-development/8108-remove-standard-gui-from-devo-7e-build",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,467,2018-11-25T21:22:05Z,2018-12-05T20:16:40Z,2019-03-05T00:10:34Z,CLOSED,False,5,4,1,https://github.com/goebish,Remove standard GUI from Devo 7e build,2,[],https://github.com/DeviationTX/deviation/pull/467,https://github.com/PhracturedBlue,6,https://github.com/DeviationTX/deviation/pull/467#issuecomment-442526756,"I've a few protocols on hold but the 7e won't accept any more protocol definitions, time to remove the standard GUI from the 7e build ?","it may be interesting to check through the models saved in the wiki/forum and see how many use the standard GUI.  My big concern is that users upgrade to something that is supposed to be newer and better, and in the process lose features.  That is never fun for anyone who gets hit.
I wish I had finished the binary config-file implementation in the uploader (compiling and decompiling config-files during upload rather than on the Tx).  Supporting the .ini files takes up a huge amount of space.  Another idea I had was to actually support dynamic libraries on the ROM (vs on the filesystem).  We could then allow users to choose which 'features' to load and ensure that they fit.  I don't know how much overhead such a system would take though.
However, my guess is that there is not enough developer interest to solve this problem for the potentially marginal gain.  I think my only request is that a last official release is made with current features before removing the standard GUI for the 7e so that users who like it have an official version they can use with the latest features.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,467,2018-11-25T21:22:05Z,2018-12-05T20:16:40Z,2019-03-05T00:10:34Z,CLOSED,False,5,4,1,https://github.com/goebish,Remove standard GUI from Devo 7e build,2,[],https://github.com/DeviationTX/deviation/pull/467,https://github.com/howard0su,7,https://github.com/DeviationTX/deviation/pull/467#issuecomment-442700108,"I've a few protocols on hold but the 7e won't accept any more protocol definitions, time to remove the standard GUI from the 7e build ?","I believe LTO may help reduce the ROM size. but I am still struggle to figure out why it doesn't work.
We should limit the new features to put on devo7e even we can free up some ROM. Otherwise we will face the current situation very soon. We should face the reality that devo7e will not get all new/nice feature anymore due to ROM size limit.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,467,2018-11-25T21:22:05Z,2018-12-05T20:16:40Z,2019-03-05T00:10:34Z,CLOSED,False,5,4,1,https://github.com/goebish,Remove standard GUI from Devo 7e build,2,[],https://github.com/DeviationTX/deviation/pull/467,https://github.com/PhracturedBlue,8,https://github.com/DeviationTX/deviation/pull/467#issuecomment-442707119,"I've a few protocols on hold but the 7e won't accept any more protocol definitions, time to remove the standard GUI from the 7e build ?","i'll be very interested to see the results of LTO.  I also fully agree that devo7e shouldn't expect new features.  I am more concerned with removing existing ones at the moment though.  I would love a choose-your-build model, but it is very challenging to do without either precompiling lots of permutations or forcing everyone to be able to run a docker image (or maybe hosting a docker image that can take requests...)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,467,2018-11-25T21:22:05Z,2018-12-05T20:16:40Z,2019-03-05T00:10:34Z,CLOSED,False,5,4,1,https://github.com/goebish,Remove standard GUI from Devo 7e build,2,[],https://github.com/DeviationTX/deviation/pull/467,https://github.com/TheRealMoeder,9,https://github.com/DeviationTX/deviation/pull/467#issuecomment-442716328,"I've a few protocols on hold but the 7e won't accept any more protocol definitions, time to remove the standard GUI from the 7e build ?","Actually hosting a docker image  that can take requests is really simple, I did this for my deviation voicepacker 
https://moeder.pythonanywhere.com/voicepacker/default/index",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,467,2018-11-25T21:22:05Z,2018-12-05T20:16:40Z,2019-03-05T00:10:34Z,CLOSED,False,5,4,1,https://github.com/goebish,Remove standard GUI from Devo 7e build,2,[],https://github.com/DeviationTX/deviation/pull/467,https://github.com/PhracturedBlue,10,https://github.com/DeviationTX/deviation/pull/467#issuecomment-442966253,"I've a few protocols on hold but the 7e won't accept any more protocol definitions, time to remove the standard GUI from the 7e build ?","That is pretty cool.  If we could estimate the size of various features, we could probably use something like this to add a lot of flexibility for devo7e (and f7) builds",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,467,2018-11-25T21:22:05Z,2018-12-05T20:16:40Z,2019-03-05T00:10:34Z,CLOSED,False,5,4,1,https://github.com/goebish,Remove standard GUI from Devo 7e build,2,[],https://github.com/DeviationTX/deviation/pull/467,https://github.com/TheRealMoeder,11,https://github.com/DeviationTX/deviation/pull/467#issuecomment-442985430,"I've a few protocols on hold but the 7e won't accept any more protocol definitions, time to remove the standard GUI from the 7e build ?","Well, at first it was merely a proof of concept to myself, and the free pythonanywhere account is somewhat limited, but simple as it is it works quite well. Simple api calls to travis from the Python page with parameters passed, and the results being pushed to githubio. Running python on deviationtx.com would make room for more stuff. Most useful probably saving the build and providing a hashed Download link...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,467,2018-11-25T21:22:05Z,2018-12-05T20:16:40Z,2019-03-05T00:10:34Z,CLOSED,False,5,4,1,https://github.com/goebish,Remove standard GUI from Devo 7e build,2,[],https://github.com/DeviationTX/deviation/pull/467,https://github.com/howard0su,12,https://github.com/DeviationTX/deviation/pull/467#issuecomment-443363046,"I've a few protocols on hold but the 7e won't accept any more protocol definitions, time to remove the standard GUI from the 7e build ?",i was wrong. LTO for devo7e get overflow in ROM still.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,467,2018-11-25T21:22:05Z,2018-12-05T20:16:40Z,2019-03-05T00:10:34Z,CLOSED,False,5,4,1,https://github.com/goebish,Remove standard GUI from Devo 7e build,2,[],https://github.com/DeviationTX/deviation/pull/467,https://github.com/TheRealMoeder,13,https://github.com/DeviationTX/deviation/pull/467#issuecomment-450932747,"I've a few protocols on hold but the 7e won't accept any more protocol definitions, time to remove the standard GUI from the 7e build ?","Considering @howard0su 's work, what do you think of branching vlads work as version 5.1 and remove standard gui for nightly and future 6.0?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,467,2018-11-25T21:22:05Z,2018-12-05T20:16:40Z,2019-03-05T00:10:34Z,CLOSED,False,5,4,1,https://github.com/goebish,Remove standard GUI from Devo 7e build,2,[],https://github.com/DeviationTX/deviation/pull/467,https://github.com/hexfet,14,https://github.com/DeviationTX/deviation/pull/467#issuecomment-451050089,"I've a few protocols on hold but the 7e won't accept any more protocol definitions, time to remove the standard GUI from the 7e build ?","Sounds like a possible way forward.  Does vlad's branch include non-protocol changes to master?
Will anyone miss the 5.0 GUI?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,468,2018-11-27T04:32:36Z,2018-11-29T06:29:24Z,2018-12-03T01:09:06Z,MERGED,True,17,17,4,https://github.com/howard0su,Enable parallel build,2,[],https://github.com/DeviationTX/deviation/pull/468,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/468,"Fix the issues in Makefile to pass -j of sub make command. This save lots of time in dev enviroment when there is 32 CPUs.
Enable parallel build in travis to leverage this.","Fix the issues in Makefile to pass -j of sub make command. This save lots of time in dev enviroment when there is 32 CPUs.
Enable parallel build in travis to leverage this.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,468,2018-11-27T04:32:36Z,2018-11-29T06:29:24Z,2018-12-03T01:09:06Z,MERGED,True,17,17,4,https://github.com/howard0su,Enable parallel build,2,[],https://github.com/DeviationTX/deviation/pull/468,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/468#issuecomment-441916181,"Fix the issues in Makefile to pass -j of sub make command. This save lots of time in dev enviroment when there is 32 CPUs.
Enable parallel build in travis to leverage this.","this save 2minutes run time, and about 5 mins total time in travis.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,468,2018-11-27T04:32:36Z,2018-11-29T06:29:24Z,2018-12-03T01:09:06Z,MERGED,True,17,17,4,https://github.com/howard0su,Enable parallel build,2,[],https://github.com/DeviationTX/deviation/pull/468,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/468#issuecomment-442251580,"Fix the issues in Makefile to pass -j of sub make command. This save lots of time in dev enviroment when there is 32 CPUs.
Enable parallel build in travis to leverage this.","-j2 is recommended by trivas doc:
https://docs.travis-ci.com/user/speeding-up-the-build/
because travas VM is fixed size:
https://docs.travis-ci.com/user/reference/overview/#virtualization-environments",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,468,2018-11-27T04:32:36Z,2018-11-29T06:29:24Z,2018-12-03T01:09:06Z,MERGED,True,17,17,4,https://github.com/howard0su,Enable parallel build,2,[],https://github.com/DeviationTX/deviation/pull/468,https://github.com/TheRealMoeder,4,https://github.com/DeviationTX/deviation/pull/468#issuecomment-442495178,"Fix the issues in Makefile to pass -j of sub make command. This save lots of time in dev enviroment when there is 32 CPUs.
Enable parallel build in travis to leverage this.","Travis currently has only 2 cores, but hexfet's approach is more universal and makes building even faster on our developer machines ;)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,468,2018-11-27T04:32:36Z,2018-11-29T06:29:24Z,2018-12-03T01:09:06Z,MERGED,True,17,17,4,https://github.com/howard0su,Enable parallel build,2,[],https://github.com/DeviationTX/deviation/pull/468,https://github.com/victzh,5,https://github.com/DeviationTX/deviation/pull/468#issuecomment-442591565,"Fix the issues in Makefile to pass -j of sub make command. This save lots of time in dev enviroment when there is 32 CPUs.
Enable parallel build in travis to leverage this.","@howard0su, can you modify your pull request with -j$(nproc), please? It will not hard TravisCI build, but as @TheRealMoeder said enable faster build on dev machines.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,468,2018-11-27T04:32:36Z,2018-11-29T06:29:24Z,2018-12-03T01:09:06Z,MERGED,True,17,17,4,https://github.com/howard0su,Enable parallel build,2,[],https://github.com/DeviationTX/deviation/pull/468,https://github.com/TheRealMoeder,6,https://github.com/DeviationTX/deviation/pull/468#issuecomment-442594225,"Fix the issues in Makefile to pass -j of sub make command. This save lots of time in dev enviroment when there is 32 CPUs.
Enable parallel build in travis to leverage this.","Never mind my comment. Of course this commit is just fine, as -j 2 is only in travis.yml. Makefile can handle anything, it‘s up developers to run their own choice of -j...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,468,2018-11-27T04:32:36Z,2018-11-29T06:29:24Z,2018-12-03T01:09:06Z,MERGED,True,17,17,4,https://github.com/howard0su,Enable parallel build,2,[],https://github.com/DeviationTX/deviation/pull/468,https://github.com/howard0su,7,https://github.com/DeviationTX/deviation/pull/468#issuecomment-442713724,"Fix the issues in Makefile to pass -j of sub make command. This save lots of time in dev enviroment when there is 32 CPUs.
Enable parallel build in travis to leverage this.","@howard0su, can you modify your pull request with -j$(nproc), please? It will not hard TravisCI build, but as @TheRealMoeder said enable faster build on dev machines.

so I think @TheRealMoeder is fine with the change. can u commit?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,468,2018-11-27T04:32:36Z,2018-11-29T06:29:24Z,2018-12-03T01:09:06Z,MERGED,True,17,17,4,https://github.com/howard0su,Enable parallel build,2,[],https://github.com/DeviationTX/deviation/pull/468,https://github.com/TheRealMoeder,8,https://github.com/DeviationTX/deviation/pull/468#issuecomment-442721150,"Fix the issues in Makefile to pass -j of sub make command. This save lots of time in dev enviroment when there is 32 CPUs.
Enable parallel build in travis to leverage this.","We usually wait for two approvals before merging. As soon as someone else does approve, we will merge.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,468,2018-11-27T04:32:36Z,2018-11-29T06:29:24Z,2018-12-03T01:09:06Z,MERGED,True,17,17,4,https://github.com/howard0su,Enable parallel build,2,[],https://github.com/DeviationTX/deviation/pull/468,https://github.com/TheRealMoeder,9,https://github.com/DeviationTX/deviation/pull/468#issuecomment-442721305,"Fix the issues in Makefile to pass -j of sub make command. This save lots of time in dev enviroment when there is 32 CPUs.
Enable parallel build in travis to leverage this.",Oops.. I missed hexfets... Here we go,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,468,2018-11-27T04:32:36Z,2018-11-29T06:29:24Z,2018-12-03T01:09:06Z,MERGED,True,17,17,4,https://github.com/howard0su,Enable parallel build,2,[],https://github.com/DeviationTX/deviation/pull/468,https://github.com/TheRealMoeder,10,https://github.com/DeviationTX/deviation/pull/468#issuecomment-442790793,"Fix the issues in Makefile to pass -j of sub make command. This save lots of time in dev enviroment when there is 32 CPUs.
Enable parallel build in travis to leverage this.",@howard0su please fix issue #470,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,469,2018-11-27T16:23:23Z,2018-12-26T05:01:32Z,2018-12-26T05:01:32Z,CLOSED,False,229,188,11,https://github.com/howard0su,Refactor Font code to be in a seperate module,2,[],https://github.com/DeviationTX/deviation/pull/469,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/469,Create a separate module FONT to handle .fon file inside SPI flash.,Create a separate module FONT to handle .fon file inside SPI flash.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,469,2018-11-27T16:23:23Z,2018-12-26T05:01:32Z,2018-12-26T05:01:32Z,CLOSED,False,229,188,11,https://github.com/howard0su,Refactor Font code to be in a seperate module,2,[],https://github.com/DeviationTX/deviation/pull/469,https://github.com/TheRealMoeder,2,https://github.com/DeviationTX/deviation/pull/469#issuecomment-442495744,Create a separate module FONT to handle .fon file inside SPI flash.,And yet again we hit the devo7e flash ROM limit...,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,469,2018-11-27T16:23:23Z,2018-12-26T05:01:32Z,2018-12-26T05:01:32Z,CLOSED,False,229,188,11,https://github.com/howard0su,Refactor Font code to be in a seperate module,2,[],https://github.com/DeviationTX/deviation/pull/469,https://github.com/PhracturedBlue,3,https://github.com/DeviationTX/deviation/pull/469#issuecomment-442521248,Create a separate module FONT to handle .fon file inside SPI flash.,what is the reason for this change?  the fonts really are specific to the tx model (or specifically screen type).  the f7 for instance has hardcoded fonts and doesn't use the dynamic fonts,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,469,2018-11-27T16:23:23Z,2018-12-26T05:01:32Z,2018-12-26T05:01:32Z,CLOSED,False,229,188,11,https://github.com/howard0su,Refactor Font code to be in a seperate module,2,[],https://github.com/DeviationTX/deviation/pull/469,https://github.com/TheRealMoeder,4,https://github.com/DeviationTX/deviation/pull/469#issuecomment-442594904,Create a separate module FONT to handle .fon file inside SPI flash.,"what is the reason for this change? the fonts really are specific to the tx model (or specifically screen type). the f7 for instance has hardcoded fonts and doesn't use the dynamic fonts

Probably this: 
https://www.deviationtx.com/forum/7-development/8135-mini-font-for-cn-tw-ru",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,469,2018-11-27T16:23:23Z,2018-12-26T05:01:32Z,2018-12-26T05:01:32Z,CLOSED,False,229,188,11,https://github.com/howard0su,Refactor Font code to be in a seperate module,2,[],https://github.com/DeviationTX/deviation/pull/469,https://github.com/PhracturedBlue,5,https://github.com/DeviationTX/deviation/pull/469#issuecomment-442614306,Create a separate module FONT to handle .fon file inside SPI flash.,"I don't see why this complexity is needed on all platforms.  I don't mind the solution, but think it should be isolated to the F series Tx (and not moved to the gui or screen dirs).  if there is actually common code, it can be accessed from the common dir.  A solution tlike that shouldn't impact the dveo7e",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,469,2018-11-27T16:23:23Z,2018-12-26T05:01:32Z,2018-12-26T05:01:32Z,CLOSED,False,229,188,11,https://github.com/howard0su,Refactor Font code to be in a seperate module,2,[],https://github.com/DeviationTX/deviation/pull/469,https://github.com/howard0su,6,https://github.com/DeviationTX/deviation/pull/469#issuecomment-442698966,Create a separate module FONT to handle .fon file inside SPI flash.,"Font code is handle .fon file which should be a component shared across Tx. It is not specific for F serial. The new code is clean. Look at font.h, the API is pretty isolated.
Font code today is not clear isolated with LCD driver. but in theory, they should be different. I would like to clean up them for future reuse.
The size change should related to some function is not inlined anymore. It should be fixed after I figure out LTO build.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,469,2018-11-27T16:23:23Z,2018-12-26T05:01:32Z,2018-12-26T05:01:32Z,CLOSED,False,229,188,11,https://github.com/howard0su,Refactor Font code to be in a seperate module,2,[],https://github.com/DeviationTX/deviation/pull/469,https://github.com/howard0su,7,https://github.com/DeviationTX/deviation/pull/469#issuecomment-447611890,Create a separate module FONT to handle .fon file inside SPI flash.,close this for now. Seems I don't need a common font implementation for f12e localization support.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,469,2018-11-27T16:23:23Z,2018-12-26T05:01:32Z,2018-12-26T05:01:32Z,CLOSED,False,229,188,11,https://github.com/howard0su,Refactor Font code to be in a seperate module,2,[],https://github.com/DeviationTX/deviation/pull/469,https://github.com/howard0su,8,https://github.com/DeviationTX/deviation/pull/469#issuecomment-449027930,Create a separate module FONT to handle .fon file inside SPI flash.,This may needed for devo7e for localization support. keep it for now,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,471,2018-11-29T15:33:42Z,2018-12-01T02:50:43Z,2018-12-03T01:10:46Z,MERGED,True,2,0,1,https://github.com/howard0su,Add Linux emulation to travis dailybuild,1,[],https://github.com/DeviationTX/deviation/pull/471,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/471,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,471,2018-11-29T15:33:42Z,2018-12-01T02:50:43Z,2018-12-03T01:10:46Z,MERGED,True,2,0,1,https://github.com/howard0su,Add Linux emulation to travis dailybuild,1,[],https://github.com/DeviationTX/deviation/pull/471,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/471#issuecomment-443042267,,I don't use Windows to debug. So I am using Linux version of emulator. I think Linux version of Emulator is useful. And we should not let it get broken.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,472,2018-12-01T02:31:40Z,2019-01-12T23:41:11Z,2019-01-12T23:41:11Z,MERGED,True,957,339,20,https://github.com/hexfet,Add PXX protocol,56,['Protocol'],https://github.com/DeviationTX/deviation/pull/472,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/472,"The PXX protocol is an Frsky serial interface to their transmitter modules.  Primarily useful for R9M and XJT modules in the JR bay of the T8SG Plus, but protocol is available on the trainer jack of other transmitters.  Telemetry (s.port) is supported.
Protocol options available to specify failsafe (see FrskyX manual entry for details), country (must match radio module firmware), and receiver telemetry and pwm output controls.  Range check operation is supported.  Module power level settings correspond to top four deviation power settings.
Due to memory constraints PXX is available only in non-modular builds.
This PR also includes changing the PPM implementation to use DMA instead of interrupts.  Reduces overall interrupt load, and was low-hanging fruit because DMA is required for PXX.","The PXX protocol is an Frsky serial interface to their transmitter modules.  Primarily useful for R9M and XJT modules in the JR bay of the T8SG Plus, but protocol is available on the trainer jack of other transmitters.  Telemetry (s.port) is supported.
Protocol options available to specify failsafe (see FrskyX manual entry for details), country (must match radio module firmware), and receiver telemetry and pwm output controls.  Range check operation is supported.  Module power level settings correspond to top four deviation power settings.
Due to memory constraints PXX is available only in non-modular builds.
This PR also includes changing the PPM implementation to use DMA instead of interrupts.  Reduces overall interrupt load, and was low-hanging fruit because DMA is required for PXX.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,472,2018-12-01T02:31:40Z,2019-01-12T23:41:11Z,2019-01-12T23:41:11Z,MERGED,True,957,339,20,https://github.com/hexfet,Add PXX protocol,56,['Protocol'],https://github.com/DeviationTX/deviation/pull/472,https://github.com/TheRealMoeder,2,https://github.com/DeviationTX/deviation/pull/472#issuecomment-447660397,"The PXX protocol is an Frsky serial interface to their transmitter modules.  Primarily useful for R9M and XJT modules in the JR bay of the T8SG Plus, but protocol is available on the trainer jack of other transmitters.  Telemetry (s.port) is supported.
Protocol options available to specify failsafe (see FrskyX manual entry for details), country (must match radio module firmware), and receiver telemetry and pwm output controls.  Range check operation is supported.  Module power level settings correspond to top four deviation power settings.
Due to memory constraints PXX is available only in non-modular builds.
This PR also includes changing the PPM implementation to use DMA instead of interrupts.  Reduces overall interrupt load, and was low-hanging fruit because DMA is required for PXX.",Please add protocmd_channelmap,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,472,2018-12-01T02:31:40Z,2019-01-12T23:41:11Z,2019-01-12T23:41:11Z,MERGED,True,957,339,20,https://github.com/hexfet,Add PXX protocol,56,['Protocol'],https://github.com/DeviationTX/deviation/pull/472,https://github.com/vladislavy,3,https://github.com/DeviationTX/deviation/pull/472#issuecomment-449381380,"The PXX protocol is an Frsky serial interface to their transmitter modules.  Primarily useful for R9M and XJT modules in the JR bay of the T8SG Plus, but protocol is available on the trainer jack of other transmitters.  Telemetry (s.port) is supported.
Protocol options available to specify failsafe (see FrskyX manual entry for details), country (must match radio module firmware), and receiver telemetry and pwm output controls.  Range check operation is supported.  Module power level settings correspond to top four deviation power settings.
Due to memory constraints PXX is available only in non-modular builds.
This PR also includes changing the PPM implementation to use DMA instead of interrupts.  Reduces overall interrupt load, and was low-hanging fruit because DMA is required for PXX.","If test build is [hexfet]protocol_pxx deviation-devo12-v5.0.0-bb6c3ca, it can be flashed with Dfuse and it works.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,472,2018-12-01T02:31:40Z,2019-01-12T23:41:11Z,2019-01-12T23:41:11Z,MERGED,True,957,339,20,https://github.com/hexfet,Add PXX protocol,56,['Protocol'],https://github.com/DeviationTX/deviation/pull/472,https://github.com/vladislavy,4,https://github.com/DeviationTX/deviation/pull/472#issuecomment-449401950,"The PXX protocol is an Frsky serial interface to their transmitter modules.  Primarily useful for R9M and XJT modules in the JR bay of the T8SG Plus, but protocol is available on the trainer jack of other transmitters.  Telemetry (s.port) is supported.
Protocol options available to specify failsafe (see FrskyX manual entry for details), country (must match radio module firmware), and receiver telemetry and pwm output controls.  Range check operation is supported.  Module power level settings correspond to top four deviation power settings.
Due to memory constraints PXX is available only in non-modular builds.
This PR also includes changing the PPM implementation to use DMA instead of interrupts.  Reduces overall interrupt load, and was low-hanging fruit because DMA is required for PXX.","Moreover, we can decrease ROM size by 4096 (0x1000) with use OPTIMIZE_DFU := 1, as for devo7e.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,473,2018-12-02T14:27:18Z,2018-12-16T17:21:34Z,2018-12-16T17:21:34Z,MERGED,True,106,28,61,https://github.com/howard0su,Move channel map into individual module,1,[],https://github.com/DeviationTX/deviation/pull/473,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/473,"ChannelMap is always reference with Model.Protocol. Replace it with a CurrentChannelMap and leave the logic to decide the channel map to individual module. This save 244bytes from devo7e.
ROM: 0x08003000 - 0x0801ff10 = 115.77kB
RAM: 0x20000000 - 0x20002894 =  10.14kB
Didn't remove map from protocol.h where it is not used anymore. Use it as a documentation.","ChannelMap is always reference with Model.Protocol. Replace it with a CurrentChannelMap and leave the logic to decide the channel map to individual module. This save 244bytes from devo7e.
ROM: 0x08003000 - 0x0801ff10 = 115.77kB
RAM: 0x20000000 - 0x20002894 =  10.14kB
Didn't remove map from protocol.h where it is not used anymore. Use it as a documentation.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,473,2018-12-02T14:27:18Z,2018-12-16T17:21:34Z,2018-12-16T17:21:34Z,MERGED,True,106,28,61,https://github.com/howard0su,Move channel map into individual module,1,[],https://github.com/DeviationTX/deviation/pull/473,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/473#issuecomment-443512203,"ChannelMap is always reference with Model.Protocol. Replace it with a CurrentChannelMap and leave the logic to decide the channel map to individual module. This save 244bytes from devo7e.
ROM: 0x08003000 - 0x0801ff10 = 115.77kB
RAM: 0x20000000 - 0x20002894 =  10.14kB
Didn't remove map from protocol.h where it is not used anymore. Use it as a documentation.",Please help testing the change as I don't have devo7e.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,473,2018-12-02T14:27:18Z,2018-12-16T17:21:34Z,2018-12-16T17:21:34Z,MERGED,True,106,28,61,https://github.com/howard0su,Move channel map into individual module,1,[],https://github.com/DeviationTX/deviation/pull/473,https://github.com/TheRealMoeder,3,https://github.com/DeviationTX/deviation/pull/473#issuecomment-443775263,"ChannelMap is always reference with Model.Protocol. Replace it with a CurrentChannelMap and leave the logic to decide the channel map to individual module. This save 244bytes from devo7e.
ROM: 0x08003000 - 0x0801ff10 = 115.77kB
RAM: 0x20000000 - 0x20002894 =  10.14kB
Didn't remove map from protocol.h where it is not used anymore. Use it as a documentation.","Just from a quick code check, how are channels with no mapping handled in your change?
`
PROTODEF(PROTOCOL_PPM, TX_MODULE_LAST,  NULL, PPMOUT_Cmds, ""PPM"")
PROTODEF(PROTOCOL_USBHID, TX_MODULE_LAST,  NULL, USBHID_Cmds, ""USBHID"")
PROTODEF(PROTOCOL_CRSF, TX_MODULE_LAST,  NULL, CRSF_Cmds, ""CRSF"")
#ifndef MODULAR
PROTODEF(PROTOCOL_SBUS, TX_MODULE_LAST,  NULL, SBUS_Cmds, ""SBUS"")
#endif
#ifdef BUILDTYPE_DEV
PROTODEF(PROTOCOL_TESTSER, TX_MODULE_LAST,  NULL, TESTSER_Cmds, ""TESTSER"")
PROTODEF(PROTOCOL_TESTRF, TX_MODULE_LAST,  NULL, TESTRF_Cmds, ""TESTRF"")
`",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,473,2018-12-02T14:27:18Z,2018-12-16T17:21:34Z,2018-12-16T17:21:34Z,MERGED,True,106,28,61,https://github.com/howard0su,Move channel map into individual module,1,[],https://github.com/DeviationTX/deviation/pull/473,https://github.com/howard0su,4,https://github.com/DeviationTX/deviation/pull/473#issuecomment-444190025,"ChannelMap is always reference with Model.Protocol. Replace it with a CurrentChannelMap and leave the logic to decide the channel map to individual module. This save 244bytes from devo7e.
ROM: 0x08003000 - 0x0801ff10 = 115.77kB
RAM: 0x20000000 - 0x20002894 =  10.14kB
Didn't remove map from protocol.h where it is not used anymore. Use it as a documentation.",good catch. I fixed in latest change.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,473,2018-12-02T14:27:18Z,2018-12-16T17:21:34Z,2018-12-16T17:21:34Z,MERGED,True,106,28,61,https://github.com/howard0su,Move channel map into individual module,1,[],https://github.com/DeviationTX/deviation/pull/473,https://github.com/TheRealMoeder,5,https://github.com/DeviationTX/deviation/pull/473#issuecomment-444262745,"ChannelMap is always reference with Model.Protocol. Replace it with a CurrentChannelMap and leave the logic to decide the channel map to individual module. This save 244bytes from devo7e.
ROM: 0x08003000 - 0x0801ff10 = 115.77kB
RAM: 0x20000000 - 0x20002894 =  10.14kB
Didn't remove map from protocol.h where it is not used anymore. Use it as a documentation.",I would suggest adding PROTOCMD-CHANNELDEF to all protocols to avoid confusion,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,473,2018-12-02T14:27:18Z,2018-12-16T17:21:34Z,2018-12-16T17:21:34Z,MERGED,True,106,28,61,https://github.com/howard0su,Move channel map into individual module,1,[],https://github.com/DeviationTX/deviation/pull/473,https://github.com/howard0su,6,https://github.com/DeviationTX/deviation/pull/473#issuecomment-444314238,"ChannelMap is always reference with Model.Protocol. Replace it with a CurrentChannelMap and leave the logic to decide the channel map to individual module. This save 244bytes from devo7e.
ROM: 0x08003000 - 0x0801ff10 = 115.77kB
RAM: 0x20000000 - 0x20002894 =  10.14kB
Didn't remove map from protocol.h where it is not used anymore. Use it as a documentation.",I was thinking about that. but I didn't do that rather leaving a default value. Because it will add code size when we do a non-modular build. what's your suggetion?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,473,2018-12-02T14:27:18Z,2018-12-16T17:21:34Z,2018-12-16T17:21:34Z,MERGED,True,106,28,61,https://github.com/howard0su,Move channel map into individual module,1,[],https://github.com/DeviationTX/deviation/pull/473,https://github.com/TheRealMoeder,7,https://github.com/DeviationTX/deviation/pull/473#issuecomment-444372994,"ChannelMap is always reference with Model.Protocol. Replace it with a CurrentChannelMap and leave the logic to decide the channel map to individual module. This save 244bytes from devo7e.
ROM: 0x08003000 - 0x0801ff10 = 115.77kB
RAM: 0x20000000 - 0x20002894 =  10.14kB
Didn't remove map from protocol.h where it is not used anymore. Use it as a documentation.","How about adding it commented out with the advice, that this is done behause it is the default mapping?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,473,2018-12-02T14:27:18Z,2018-12-16T17:21:34Z,2018-12-16T17:21:34Z,MERGED,True,106,28,61,https://github.com/howard0su,Move channel map into individual module,1,[],https://github.com/DeviationTX/deviation/pull/473,https://github.com/howard0su,8,https://github.com/DeviationTX/deviation/pull/473#issuecomment-444537547,"ChannelMap is always reference with Model.Protocol. Replace it with a CurrentChannelMap and leave the logic to decide the channel map to individual module. This save 244bytes from devo7e.
ROM: 0x08003000 - 0x0801ff10 = 115.77kB
RAM: 0x20000000 - 0x20002894 =  10.14kB
Didn't remove map from protocol.h where it is not used anymore. Use it as a documentation.",sounds good.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,473,2018-12-02T14:27:18Z,2018-12-16T17:21:34Z,2018-12-16T17:21:34Z,MERGED,True,106,28,61,https://github.com/howard0su,Move channel map into individual module,1,[],https://github.com/DeviationTX/deviation/pull/473,https://github.com/howard0su,9,https://github.com/DeviationTX/deviation/pull/473#issuecomment-445082311,"ChannelMap is always reference with Model.Protocol. Replace it with a CurrentChannelMap and leave the logic to decide the channel map to individual module. This save 244bytes from devo7e.
ROM: 0x08003000 - 0x0801ff10 = 115.77kB
RAM: 0x20000000 - 0x20002894 =  10.14kB
Didn't remove map from protocol.h where it is not used anymore. Use it as a documentation.",I prefer squeeze the changes into one when merge this PR.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,473,2018-12-02T14:27:18Z,2018-12-16T17:21:34Z,2018-12-16T17:21:34Z,MERGED,True,106,28,61,https://github.com/howard0su,Move channel map into individual module,1,[],https://github.com/DeviationTX/deviation/pull/473,https://github.com/howard0su,10,https://github.com/DeviationTX/deviation/pull/473#issuecomment-446491014,"ChannelMap is always reference with Model.Protocol. Replace it with a CurrentChannelMap and leave the logic to decide the channel map to individual module. This save 244bytes from devo7e.
ROM: 0x08003000 - 0x0801ff10 = 115.77kB
RAM: 0x20000000 - 0x20002894 =  10.14kB
Didn't remove map from protocol.h where it is not used anymore. Use it as a documentation.",Didn't pass the testing on the real hardware devo7e. Need debug.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,473,2018-12-02T14:27:18Z,2018-12-16T17:21:34Z,2018-12-16T17:21:34Z,MERGED,True,106,28,61,https://github.com/howard0su,Move channel map into individual module,1,[],https://github.com/DeviationTX/deviation/pull/473,https://github.com/howard0su,11,https://github.com/DeviationTX/deviation/pull/473#issuecomment-446775902,"ChannelMap is always reference with Model.Protocol. Replace it with a CurrentChannelMap and leave the logic to decide the channel map to individual module. This save 244bytes from devo7e.
ROM: 0x08003000 - 0x0801ff10 = 115.77kB
RAM: 0x20000000 - 0x20002894 =  10.14kB
Didn't remove map from protocol.h where it is not used anymore. Use it as a documentation.","Rebase with the master and fix the issue on devo7e.
I think this is ready to go. Please squeeze the changes when checkin.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,473,2018-12-02T14:27:18Z,2018-12-16T17:21:34Z,2018-12-16T17:21:34Z,MERGED,True,106,28,61,https://github.com/howard0su,Move channel map into individual module,1,[],https://github.com/DeviationTX/deviation/pull/473,https://github.com/howard0su,12,https://github.com/DeviationTX/deviation/pull/473#issuecomment-446844449,"ChannelMap is always reference with Model.Protocol. Replace it with a CurrentChannelMap and leave the logic to decide the channel map to individual module. This save 244bytes from devo7e.
ROM: 0x08003000 - 0x0801ff10 = 115.77kB
RAM: 0x20000000 - 0x20002894 =  10.14kB
Didn't remove map from protocol.h where it is not used anymore. Use it as a documentation.",need code review. thanks.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,473,2018-12-02T14:27:18Z,2018-12-16T17:21:34Z,2018-12-16T17:21:34Z,MERGED,True,106,28,61,https://github.com/howard0su,Move channel map into individual module,1,[],https://github.com/DeviationTX/deviation/pull/473,https://github.com/howard0su,13,https://github.com/DeviationTX/deviation/pull/473#issuecomment-447367049,"ChannelMap is always reference with Model.Protocol. Replace it with a CurrentChannelMap and leave the logic to decide the channel map to individual module. This save 244bytes from devo7e.
ROM: 0x08003000 - 0x0801ff10 = 115.77kB
RAM: 0x20000000 - 0x20002894 =  10.14kB
Didn't remove map from protocol.h where it is not used anymore. Use it as a documentation.",@hexfet please review.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,473,2018-12-02T14:27:18Z,2018-12-16T17:21:34Z,2018-12-16T17:21:34Z,MERGED,True,106,28,61,https://github.com/howard0su,Move channel map into individual module,1,[],https://github.com/DeviationTX/deviation/pull/473,https://github.com/howard0su,14,https://github.com/DeviationTX/deviation/pull/473#issuecomment-447647889,"ChannelMap is always reference with Model.Protocol. Replace it with a CurrentChannelMap and leave the logic to decide the channel map to individual module. This save 244bytes from devo7e.
ROM: 0x08003000 - 0x0801ff10 = 115.77kB
RAM: 0x20000000 - 0x20002894 =  10.14kB
Didn't remove map from protocol.h where it is not used anymore. Use it as a documentation.",rebased with master and cleanup some whitespace change.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,474,2018-12-02T16:09:01Z,2018-12-14T18:06:40Z,2018-12-14T18:06:40Z,MERGED,True,61,35,6,https://github.com/howard0su,rework the way to expose protocol data,5,[],https://github.com/DeviationTX/deviation/pull/474,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/474,"Use an array Protocols to expose various data to avoid big switch in the code.
This saves another 492bytes from devo7e build.","Use an array Protocols to expose various data to avoid big switch in the code.
This saves another 492bytes from devo7e build.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,474,2018-12-02T16:09:01Z,2018-12-14T18:06:40Z,2018-12-14T18:06:40Z,MERGED,True,61,35,6,https://github.com/howard0su,rework the way to expose protocol data,5,[],https://github.com/DeviationTX/deviation/pull/474,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/474#issuecomment-444603797,"Use an array Protocols to expose various data to avoid big switch in the code.
This saves another 492bytes from devo7e build.",Fixed in the latest change.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,474,2018-12-02T16:09:01Z,2018-12-14T18:06:40Z,2018-12-14T18:06:40Z,MERGED,True,61,35,6,https://github.com/howard0su,rework the way to expose protocol data,5,[],https://github.com/DeviationTX/deviation/pull/474,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/474#issuecomment-444882761,"Use an array Protocols to expose various data to avoid big switch in the code.
This saves another 492bytes from devo7e build.",I plan to buy a devo7e so that I can test by myself.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,474,2018-12-02T16:09:01Z,2018-12-14T18:06:40Z,2018-12-14T18:06:40Z,MERGED,True,61,35,6,https://github.com/howard0su,rework the way to expose protocol data,5,[],https://github.com/DeviationTX/deviation/pull/474,https://github.com/TheRealMoeder,4,https://github.com/DeviationTX/deviation/pull/474#issuecomment-444887942,"Use an array Protocols to expose various data to avoid big switch in the code.
This saves another 492bytes from devo7e build.","I actually was working on building a t8sg modular build last night, because
my devo7e is with someone else... Most stuff can be tested in the emulator
anyways.

Howard Su <notifications@github.com> schrieb am Do., 6. Dez. 2018 15:10:
…
 I plan to buy a devo7e so that I can test by myself.

 —
 You are receiving this because you commented.
 Reply to this email directly, view it on GitHub
 <#474 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AIQSI1jFEbdz9zyYDgKSrKxSEQQUM9C6ks5u2SVMgaJpZM4Y9eF4>
 .",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,474,2018-12-02T16:09:01Z,2018-12-14T18:06:40Z,2018-12-14T18:06:40Z,MERGED,True,61,35,6,https://github.com/howard0su,rework the way to expose protocol data,5,[],https://github.com/DeviationTX/deviation/pull/474,https://github.com/howard0su,5,https://github.com/DeviationTX/deviation/pull/474#issuecomment-445528658,"Use an array Protocols to expose various data to avoid big switch in the code.
This saves another 492bytes from devo7e build.","anyway, Just bought a second hand devo7e which only costs me $25, which is on the way now.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,474,2018-12-02T16:09:01Z,2018-12-14T18:06:40Z,2018-12-14T18:06:40Z,MERGED,True,61,35,6,https://github.com/howard0su,rework the way to expose protocol data,5,[],https://github.com/DeviationTX/deviation/pull/474,https://github.com/howard0su,6,https://github.com/DeviationTX/deviation/pull/474#issuecomment-446496604,"Use an array Protocols to expose various data to avoid big switch in the code.
This saves another 492bytes from devo7e build.",devo7e cannot do binding. need fix. please hold.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,474,2018-12-02T16:09:01Z,2018-12-14T18:06:40Z,2018-12-14T18:06:40Z,MERGED,True,61,35,6,https://github.com/howard0su,rework the way to expose protocol data,5,[],https://github.com/DeviationTX/deviation/pull/474,https://github.com/howard0su,7,https://github.com/DeviationTX/deviation/pull/474#issuecomment-446601178,"Use an array Protocols to expose various data to avoid big switch in the code.
This saves another 492bytes from devo7e build.",Verified on devof12e and devo7e. I think this is ready to go.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,474,2018-12-02T16:09:01Z,2018-12-14T18:06:40Z,2018-12-14T18:06:40Z,MERGED,True,61,35,6,https://github.com/howard0su,rework the way to expose protocol data,5,[],https://github.com/DeviationTX/deviation/pull/474,https://github.com/howard0su,8,https://github.com/DeviationTX/deviation/pull/474#issuecomment-446844984,"Use an array Protocols to expose various data to avoid big switch in the code.
This saves another 492bytes from devo7e build.",@hexfet can you enable modular build for t8sg with HAS_EXTENDED_TELEMETRY=1? I think you should be able to do so after apply PR #465.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,474,2018-12-02T16:09:01Z,2018-12-14T18:06:40Z,2018-12-14T18:06:40Z,MERGED,True,61,35,6,https://github.com/howard0su,rework the way to expose protocol data,5,[],https://github.com/DeviationTX/deviation/pull/474,https://github.com/hexfet,9,https://github.com/DeviationTX/deviation/pull/474#issuecomment-447210520,"Use an array Protocols to expose various data to avoid big switch in the code.
This saves another 492bytes from devo7e build.","I made a modular build for T8+ since my T8 is in pieces.   Here's the changeset.  The build is limited to 128K ROM to match builds for limited memory transmitters.
Even with full ROM size enabling extended telemetry for the modular build fails because some protocols won't fit into 4K of RAM.  DSM and FrskyX are two examples.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,474,2018-12-02T16:09:01Z,2018-12-14T18:06:40Z,2018-12-14T18:06:40Z,MERGED,True,61,35,6,https://github.com/howard0su,rework the way to expose protocol data,5,[],https://github.com/DeviationTX/deviation/pull/474,https://github.com/howard0su,10,https://github.com/DeviationTX/deviation/pull/474#issuecomment-447302944,"Use an array Protocols to expose various data to avoid big switch in the code.
This saves another 492bytes from devo7e build.","i see. i worked a change for f12e to enable 8K RAM for modules. anyway, i think I understand your intention here.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,475,2018-12-05T19:05:13Z,2018-12-06T16:41:05Z,2018-12-07T10:23:11Z,MERGED,True,7,7,3,https://github.com/howard0su,Make PROTO_TELEM_UNSUPPORTED to 0,2,[],https://github.com/DeviationTX/deviation/pull/475,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/475,"As most protocol doesn't support telemetry, make unsupport as 0 to save
ROM size 264 bytes. Also fixed the places which assumes the values.
For example of devof12e:
before:
ROM: 0x08004000 - 0x0803c13c = 224.31kB
RAM: 0x20000000 - 0x200069f8 =  26.49kB
After:
ROM: 0x08004000 - 0x0803c034 = 224.05kB
RAM: 0x20000000 - 0x200069f8 =  26.49kB","As most protocol doesn't support telemetry, make unsupport as 0 to save
ROM size 264 bytes. Also fixed the places which assumes the values.
For example of devof12e:
before:
ROM: 0x08004000 - 0x0803c13c = 224.31kB
RAM: 0x20000000 - 0x200069f8 =  26.49kB
After:
ROM: 0x08004000 - 0x0803c034 = 224.05kB
RAM: 0x20000000 - 0x200069f8 =  26.49kB",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,476,2018-12-08T08:03:36Z,2018-12-15T16:17:55Z,2018-12-18T21:13:24Z,MERGED,True,26,5,6,https://github.com/phobos-,Added dsm rssi telemetry,4,[],https://github.com/DeviationTX/deviation/pull/476,https://github.com/phobos-,1,https://github.com/DeviationTX/deviation/pull/476,"According to spec published by Spektrum:
https://www.spektrumrc.com/ProdInfo/Files/SPM_Telemetry_Developers_Specs.pdf
packet 7e should contain rssi for antenna a or antenna b.
This pr contains:

parsing additional 1 byte when telemetry packet is an RPM packet (0x7E).
adjustments to DSM telemetry screen.

Tested with T8SG V2 Plus and custom betaflight firmware that sends rssi telemetry.","According to spec published by Spektrum:
https://www.spektrumrc.com/ProdInfo/Files/SPM_Telemetry_Developers_Specs.pdf
packet 7e should contain rssi for antenna a or antenna b.
This pr contains:

parsing additional 1 byte when telemetry packet is an RPM packet (0x7E).
adjustments to DSM telemetry screen.

Tested with T8SG V2 Plus and custom betaflight firmware that sends rssi telemetry.",True,"{'THUMBS_UP': ['https://github.com/githubDLG'], 'HOORAY': ['https://github.com/githubDLG']}"
DeviationTX/deviation,https://github.com/DeviationTX/deviation,476,2018-12-08T08:03:36Z,2018-12-15T16:17:55Z,2018-12-18T21:13:24Z,MERGED,True,26,5,6,https://github.com/phobos-,Added dsm rssi telemetry,4,[],https://github.com/DeviationTX/deviation/pull/476,https://github.com/githubDLG,2,https://github.com/DeviationTX/deviation/pull/476#issuecomment-445443284,"According to spec published by Spektrum:
https://www.spektrumrc.com/ProdInfo/Files/SPM_Telemetry_Developers_Specs.pdf
packet 7e should contain rssi for antenna a or antenna b.
This pr contains:

parsing additional 1 byte when telemetry packet is an RPM packet (0x7E).
adjustments to DSM telemetry screen.

Tested with T8SG V2 Plus and custom betaflight firmware that sends rssi telemetry.","great job,man!!!!",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,476,2018-12-08T08:03:36Z,2018-12-15T16:17:55Z,2018-12-18T21:13:24Z,MERGED,True,26,5,6,https://github.com/phobos-,Added dsm rssi telemetry,4,[],https://github.com/DeviationTX/deviation/pull/476,https://github.com/TheRealMoeder,3,https://github.com/DeviationTX/deviation/pull/476#issuecomment-445447463,"According to spec published by Spektrum:
https://www.spektrumrc.com/ProdInfo/Files/SPM_Telemetry_Developers_Specs.pdf
packet 7e should contain rssi for antenna a or antenna b.
This pr contains:

parsing additional 1 byte when telemetry packet is an RPM packet (0x7E).
adjustments to DSM telemetry screen.

Tested with T8SG V2 Plus and custom betaflight firmware that sends rssi telemetry.",TELEMETRY_Alarm() in telemetry.c needs to be updated as well,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,476,2018-12-08T08:03:36Z,2018-12-15T16:17:55Z,2018-12-18T21:13:24Z,MERGED,True,26,5,6,https://github.com/phobos-,Added dsm rssi telemetry,4,[],https://github.com/DeviationTX/deviation/pull/476,https://github.com/howard0su,4,https://github.com/DeviationTX/deviation/pull/476#issuecomment-445697044,"According to spec published by Spektrum:
https://www.spektrumrc.com/ProdInfo/Files/SPM_Telemetry_Developers_Specs.pdf
packet 7e should contain rssi for antenna a or antenna b.
This pr contains:

parsing additional 1 byte when telemetry packet is an RPM packet (0x7E).
adjustments to DSM telemetry screen.

Tested with T8SG V2 Plus and custom betaflight firmware that sends rssi telemetry.","I suggest we cleanup telemetry a bit. In the ideal world, each different protocol should generate different set of defined telemetry values, which should be common between all protocols with some extension. As today, we have to modify telemetry code every time we have some new telemetry value from the protocols.
For example, we can do this:
enum
{
TELEM_VOLT = 1,
TELEM_TEMP = 11,
TELEM_RPM = 20,
};
enum {
TELEM_DEVO_VOLT1 = TELEM_VOLT,
TELEM_DEVO_VOLT2 = TELEM_VOLT + 1,
TELEM_DEVO_VOLT3 = TELEM_VOLT + 2,
TELEM_DEVO_TEMP1 = TELEM_TEMP + 1,
TELEM_DEVO_TEMP2 = TELEM_TEMP  + 2,
...............
};
In telemetry.c, we only handle the common defined telemetry values.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,476,2018-12-08T08:03:36Z,2018-12-15T16:17:55Z,2018-12-18T21:13:24Z,MERGED,True,26,5,6,https://github.com/phobos-,Added dsm rssi telemetry,4,[],https://github.com/DeviationTX/deviation/pull/476,https://github.com/phobos-,5,https://github.com/DeviationTX/deviation/pull/476#issuecomment-445957771,"According to spec published by Spektrum:
https://www.spektrumrc.com/ProdInfo/Files/SPM_Telemetry_Developers_Specs.pdf
packet 7e should contain rssi for antenna a or antenna b.
This pr contains:

parsing additional 1 byte when telemetry packet is an RPM packet (0x7E).
adjustments to DSM telemetry screen.

Tested with T8SG V2 Plus and custom betaflight firmware that sends rssi telemetry.","@TheRealMoeder thanks for the tips! I am not too familiar with the codebase, could you elaborate more what needs to be changed? Which file refers to color gui?
TELEMETRY_Alarm() works fine, it will just use the defaults. I was able to set up an alarm for rssi in my t8sg. What would be your suggested voice? Neither frsky nor crsf have anything set up for rssi, so I dont know which VOICE_UNIT_* should I choose.
@howard0su good idea, I'll try to implement it and update the pull request.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,476,2018-12-08T08:03:36Z,2018-12-15T16:17:55Z,2018-12-18T21:13:24Z,MERGED,True,26,5,6,https://github.com/phobos-,Added dsm rssi telemetry,4,[],https://github.com/DeviationTX/deviation/pull/476,https://github.com/TheRealMoeder,6,https://github.com/DeviationTX/deviation/pull/476#issuecomment-445968130,"According to spec published by Spektrum:
https://www.spektrumrc.com/ProdInfo/Files/SPM_Telemetry_Developers_Specs.pdf
packet 7e should contain rssi for antenna a or antenna b.
This pr contains:

parsing additional 1 byte when telemetry packet is an RPM packet (0x7E).
adjustments to DSM telemetry screen.

Tested with T8SG V2 Plus and custom betaflight firmware that sends rssi telemetry.","@TheRealMoeder thanks for the tips! I am not too familiar with the codebase, could you elaborate more what needs to be changed? Which file refers to color gui?

Please adapt deviation/src/pages/320x240x16/telemtest_page.c. Testing the GUI can be easily done using the emulators. Also please check the telemtest_page on text GUI (f7/f12e).

TELEMETRY_Alarm() works fine, it will just use the defaults. I was able to set up an alarm for rssi in my t8sg. What would be your suggested voice? Neither frsky nor crsf have anything set up for rssi, so I dont know which VOICE_UNIT_* should I choose.

Sorry, I thought I had implemented VOICE_UNIT_DBM. My bad.",True,"{'THUMBS_UP': ['https://github.com/phobos-'], 'LAUGH': ['https://github.com/githubDLG']}"
DeviationTX/deviation,https://github.com/DeviationTX/deviation,476,2018-12-08T08:03:36Z,2018-12-15T16:17:55Z,2018-12-18T21:13:24Z,MERGED,True,26,5,6,https://github.com/phobos-,Added dsm rssi telemetry,4,[],https://github.com/DeviationTX/deviation/pull/476,https://github.com/howard0su,7,https://github.com/DeviationTX/deviation/pull/476#issuecomment-446017922,"According to spec published by Spektrum:
https://www.spektrumrc.com/ProdInfo/Files/SPM_Telemetry_Developers_Specs.pdf
packet 7e should contain rssi for antenna a or antenna b.
This pr contains:

parsing additional 1 byte when telemetry packet is an RPM packet (0x7E).
adjustments to DSM telemetry screen.

Tested with T8SG V2 Plus and custom betaflight firmware that sends rssi telemetry.","@howard0su good idea, I'll try to implement it and update the pull request.
My suggestion doesn't apply to this PR. you can do it in a separate PR.",True,{'LAUGH': ['https://github.com/githubDLG']}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,476,2018-12-08T08:03:36Z,2018-12-15T16:17:55Z,2018-12-18T21:13:24Z,MERGED,True,26,5,6,https://github.com/phobos-,Added dsm rssi telemetry,4,[],https://github.com/DeviationTX/deviation/pull/476,https://github.com/phobos-,8,https://github.com/DeviationTX/deviation/pull/476#issuecomment-446514206,"According to spec published by Spektrum:
https://www.spektrumrc.com/ProdInfo/Files/SPM_Telemetry_Developers_Specs.pdf
packet 7e should contain rssi for antenna a or antenna b.
This pr contains:

parsing additional 1 byte when telemetry packet is an RPM packet (0x7E).
adjustments to DSM telemetry screen.

Tested with T8SG V2 Plus and custom betaflight firmware that sends rssi telemetry.",Added rssi to color gui:,True,{'LAUGH': ['https://github.com/githubDLG']}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,476,2018-12-08T08:03:36Z,2018-12-15T16:17:55Z,2018-12-18T21:13:24Z,MERGED,True,26,5,6,https://github.com/phobos-,Added dsm rssi telemetry,4,[],https://github.com/DeviationTX/deviation/pull/476,https://github.com/TheRealMoeder,9,https://github.com/DeviationTX/deviation/pull/476#issuecomment-447872651,"According to spec published by Spektrum:
https://www.spektrumrc.com/ProdInfo/Files/SPM_Telemetry_Developers_Specs.pdf
packet 7e should contain rssi for antenna a or antenna b.
This pr contains:

parsing additional 1 byte when telemetry packet is an RPM packet (0x7E).
adjustments to DSM telemetry screen.

Tested with T8SG V2 Plus and custom betaflight firmware that sends rssi telemetry.",I just noticed there is actually a VOICE_UNIT_DB implemented,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,476,2018-12-08T08:03:36Z,2018-12-15T16:17:55Z,2018-12-18T21:13:24Z,MERGED,True,26,5,6,https://github.com/phobos-,Added dsm rssi telemetry,4,[],https://github.com/DeviationTX/deviation/pull/476,https://github.com/phobos-,10,https://github.com/DeviationTX/deviation/pull/476#issuecomment-448372543,"According to spec published by Spektrum:
https://www.spektrumrc.com/ProdInfo/Files/SPM_Telemetry_Developers_Specs.pdf
packet 7e should contain rssi for antenna a or antenna b.
This pr contains:

parsing additional 1 byte when telemetry packet is an RPM packet (0x7E).
adjustments to DSM telemetry screen.

Tested with T8SG V2 Plus and custom betaflight firmware that sends rssi telemetry.","@TheRealMoeder good catch!
Added in #492",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,478,2018-12-10T08:50:48Z,2019-01-14T13:29:15Z,2019-01-14T23:36:22Z,MERGED,True,18,119468,676,https://github.com/howard0su,Integrate lastest libopencm3,2,[],https://github.com/DeviationTX/deviation/pull/478,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/478,"Use submodule to integrate libopencm3, remove the current in-tree version. This make integration newer build much easier.
Fix some build errors due to break change in libopencm3.
Interestingly, this saves a little of space for devo7e.
ROM: 0x08003000 - 0x0801ff34 = 115.80kB
RAM: 0x20000000 - 0x20002968 =  10.35kB","Use submodule to integrate libopencm3, remove the current in-tree version. This make integration newer build much easier.
Fix some build errors due to break change in libopencm3.
Interestingly, this saves a little of space for devo7e.
ROM: 0x08003000 - 0x0801ff34 = 115.80kB
RAM: 0x20000000 - 0x20002968 =  10.35kB",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,478,2018-12-10T08:50:48Z,2019-01-14T13:29:15Z,2019-01-14T23:36:22Z,MERGED,True,18,119468,676,https://github.com/howard0su,Integrate lastest libopencm3,2,[],https://github.com/DeviationTX/deviation/pull/478,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/478#issuecomment-445816617,"Use submodule to integrate libopencm3, remove the current in-tree version. This make integration newer build much easier.
Fix some build errors due to break change in libopencm3.
Interestingly, this saves a little of space for devo7e.
ROM: 0x08003000 - 0x0801ff34 = 115.80kB
RAM: 0x20000000 - 0x20002968 =  10.35kB",Tested in F12E Tx.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,478,2018-12-10T08:50:48Z,2019-01-14T13:29:15Z,2019-01-14T23:36:22Z,MERGED,True,18,119468,676,https://github.com/howard0su,Integrate lastest libopencm3,2,[],https://github.com/DeviationTX/deviation/pull/478,https://github.com/TheRealMoeder,3,https://github.com/DeviationTX/deviation/pull/478#issuecomment-445854027,"Use submodule to integrate libopencm3, remove the current in-tree version. This make integration newer build much easier.
Fix some build errors due to break change in libopencm3.
Interestingly, this saves a little of space for devo7e.
ROM: 0x08003000 - 0x0801ff34 = 115.80kB
RAM: 0x20000000 - 0x20002968 =  10.35kB","Looks Good, will try to test it tonight. I‘m just wondering of we should always use libopencm3 master or rather use a specific (current) commit, so things don‘t accidentally break in the near future.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,478,2018-12-10T08:50:48Z,2019-01-14T13:29:15Z,2019-01-14T23:36:22Z,MERGED,True,18,119468,676,https://github.com/howard0su,Integrate lastest libopencm3,2,[],https://github.com/DeviationTX/deviation/pull/478,https://github.com/howard0su,4,https://github.com/DeviationTX/deviation/pull/478#issuecomment-445854710,"Use submodule to integrate libopencm3, remove the current in-tree version. This make integration newer build much easier.
Fix some build errors due to break change in libopencm3.
Interestingly, this saves a little of space for devo7e.
ROM: 0x08003000 - 0x0801ff34 = 115.80kB
RAM: 0x20000000 - 0x20002968 =  10.35kB","submodule check-in the version to use in the tree. it will not automatically pump up when libopencm3 has changes. current one is:
Submodule libopencm3 added at 7e1d3d",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,478,2018-12-10T08:50:48Z,2019-01-14T13:29:15Z,2019-01-14T23:36:22Z,MERGED,True,18,119468,676,https://github.com/howard0su,Integrate lastest libopencm3,2,[],https://github.com/DeviationTX/deviation/pull/478,https://github.com/TheRealMoeder,5,https://github.com/DeviationTX/deviation/pull/478#issuecomment-445855526,"Use submodule to integrate libopencm3, remove the current in-tree version. This make integration newer build much easier.
Fix some build errors due to break change in libopencm3.
Interestingly, this saves a little of space for devo7e.
ROM: 0x08003000 - 0x0801ff34 = 115.80kB
RAM: 0x20000000 - 0x20002968 =  10.35kB","Ah ok, didn‘t know that, thanks.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,478,2018-12-10T08:50:48Z,2019-01-14T13:29:15Z,2019-01-14T23:36:22Z,MERGED,True,18,119468,676,https://github.com/howard0su,Integrate lastest libopencm3,2,[],https://github.com/DeviationTX/deviation/pull/478,https://github.com/PhracturedBlue,6,https://github.com/DeviationTX/deviation/pull/478#issuecomment-445869793,"Use submodule to integrate libopencm3, remove the current in-tree version. This make integration newer build much easier.
Fix some build errors due to break change in libopencm3.
Interestingly, this saves a little of space for devo7e.
ROM: 0x08003000 - 0x0801ff34 = 115.80kB
RAM: 0x20000000 - 0x20002968 =  10.35kB","I don't really love this to be honest.  We've had many subtle bugs with libopencm3 in the past, and using a submodule makes it much more difficult to patch them.  Also, I do not know if there are currently any libopencm3 patches applied to the last snapshot that haven't been backported.  Bugs in libopencm3 are not necessarily visible during compile, and can't be tested via emulators, so real hardware tests are the only way to find them.  I definitely recommend caution in changing this.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,478,2018-12-10T08:50:48Z,2019-01-14T13:29:15Z,2019-01-14T23:36:22Z,MERGED,True,18,119468,676,https://github.com/howard0su,Integrate lastest libopencm3,2,[],https://github.com/DeviationTX/deviation/pull/478,https://github.com/TheRealMoeder,7,https://github.com/DeviationTX/deviation/pull/478#issuecomment-445960867,"Use submodule to integrate libopencm3, remove the current in-tree version. This make integration newer build much easier.
Fix some build errors due to break change in libopencm3.
Interestingly, this saves a little of space for devo7e.
ROM: 0x08003000 - 0x0801ff34 = 115.80kB
RAM: 0x20000000 - 0x20002968 =  10.35kB","@PhracturedBlue thanks for your quick input, although you don't seem to have too much time and/or interest in Deviation right now. I checked the currently included library, there were 2 patches applied, both of which you created issues in libopencm3 for and both them have been resolved. I still agree we should do more testing on several devices for this (at least the ""main"" ones: devo7e (and -256-clones), 8, 10, 12",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,478,2018-12-10T08:50:48Z,2019-01-14T13:29:15Z,2019-01-14T23:36:22Z,MERGED,True,18,119468,676,https://github.com/howard0su,Integrate lastest libopencm3,2,[],https://github.com/DeviationTX/deviation/pull/478,https://github.com/howard0su,8,https://github.com/DeviationTX/deviation/pull/478#issuecomment-446022839,"Use submodule to integrate libopencm3, remove the current in-tree version. This make integration newer build much easier.
Fix some build errors due to break change in libopencm3.
Interestingly, this saves a little of space for devo7e.
ROM: 0x08003000 - 0x0801ff34 = 115.80kB
RAM: 0x20000000 - 0x20002968 =  10.35kB","agree with @PhracturedBlue we should be super careful with this change as it largely changed lots of code. I already tested this with my f12e and will test it on devo7e this week.
About submodule, it is fine to patch. We can either submit to the patch to upstream. or we can host a fork in our repo as well. But keep it separate and pull in as a submodule is more common practice these days on GitHub.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,478,2018-12-10T08:50:48Z,2019-01-14T13:29:15Z,2019-01-14T23:36:22Z,MERGED,True,18,119468,676,https://github.com/howard0su,Integrate lastest libopencm3,2,[],https://github.com/DeviationTX/deviation/pull/478,https://github.com/PhracturedBlue,9,https://github.com/DeviationTX/deviation/pull/478#issuecomment-446027433,"Use submodule to integrate libopencm3, remove the current in-tree version. This make integration newer build much easier.
Fix some build errors due to break change in libopencm3.
Interestingly, this saves a little of space for devo7e.
ROM: 0x08003000 - 0x0801ff34 = 115.80kB
RAM: 0x20000000 - 0x20002968 =  10.35kB","Other than doing sufficient testing I have no further complaint.  Also, please ensure the docker builds continue to work properly (I assume these still work ok)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,478,2018-12-10T08:50:48Z,2019-01-14T13:29:15Z,2019-01-14T23:36:22Z,MERGED,True,18,119468,676,https://github.com/howard0su,Integrate lastest libopencm3,2,[],https://github.com/DeviationTX/deviation/pull/478,https://github.com/howard0su,10,https://github.com/DeviationTX/deviation/pull/478#issuecomment-446072820,"Use submodule to integrate libopencm3, remove the current in-tree version. This make integration newer build much easier.
Fix some build errors due to break change in libopencm3.
Interestingly, this saves a little of space for devo7e.
ROM: 0x08003000 - 0x0801ff34 = 115.80kB
RAM: 0x20000000 - 0x20002968 =  10.35kB","docker need update to support submodule. We need add the following command after ""git clone"" as what travis is doing.
git submodule update --init --recursive",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,478,2018-12-10T08:50:48Z,2019-01-14T13:29:15Z,2019-01-14T23:36:22Z,MERGED,True,18,119468,676,https://github.com/howard0su,Integrate lastest libopencm3,2,[],https://github.com/DeviationTX/deviation/pull/478,https://github.com/howard0su,11,https://github.com/DeviationTX/deviation/pull/478#issuecomment-446502391,"Use submodule to integrate libopencm3, remove the current in-tree version. This make integration newer build much easier.
Fix some build errors due to break change in libopencm3.
Interestingly, this saves a little of space for devo7e.
ROM: 0x08003000 - 0x0801ff34 = 115.80kB
RAM: 0x20000000 - 0x20002968 =  10.35kB",tested on both f12e and 7e. verified.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,478,2018-12-10T08:50:48Z,2019-01-14T13:29:15Z,2019-01-14T23:36:22Z,MERGED,True,18,119468,676,https://github.com/howard0su,Integrate lastest libopencm3,2,[],https://github.com/DeviationTX/deviation/pull/478,https://github.com/TheRealMoeder,12,https://github.com/DeviationTX/deviation/pull/478#issuecomment-446507040,"Use submodule to integrate libopencm3, remove the current in-tree version. This make integration newer build much easier.
Fix some build errors due to break change in libopencm3.
Interestingly, this saves a little of space for devo7e.
ROM: 0x08003000 - 0x0801ff34 = 115.80kB
RAM: 0x20000000 - 0x20002968 =  10.35kB","Good. I will test on T8SG.
Still need testers for 8/12 at least.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,478,2018-12-10T08:50:48Z,2019-01-14T13:29:15Z,2019-01-14T23:36:22Z,MERGED,True,18,119468,676,https://github.com/howard0su,Integrate lastest libopencm3,2,[],https://github.com/DeviationTX/deviation/pull/478,https://github.com/howard0su,13,https://github.com/DeviationTX/deviation/pull/478#issuecomment-451758737,"Use submodule to integrate libopencm3, remove the current in-tree version. This make integration newer build much easier.
Fix some build errors due to break change in libopencm3.
Interestingly, this saves a little of space for devo7e.
ROM: 0x08003000 - 0x0801ff34 = 115.80kB
RAM: 0x20000000 - 0x20002968 =  10.35kB","@PhracturedBlue I tried the latest umass implementation inside libopencm3. Looks like there is still some bugs. We may need patch it locally. Can u fork a libopencm3 under deviation and create a submodule like this PR to that repro? In such way, we can have the local patch while easy to integrate with upstream.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,478,2018-12-10T08:50:48Z,2019-01-14T13:29:15Z,2019-01-14T23:36:22Z,MERGED,True,18,119468,676,https://github.com/howard0su,Integrate lastest libopencm3,2,[],https://github.com/DeviationTX/deviation/pull/478,https://github.com/PhracturedBlue,14,https://github.com/DeviationTX/deviation/pull/478#issuecomment-451760577,"Use submodule to integrate libopencm3, remove the current in-tree version. This make integration newer build much easier.
Fix some build errors due to break change in libopencm3.
Interestingly, this saves a little of space for devo7e.
ROM: 0x08003000 - 0x0801ff34 = 115.80kB
RAM: 0x20000000 - 0x20002968 =  10.35kB","Done:
https://github.com/DeviationTX/libopencm3",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,478,2018-12-10T08:50:48Z,2019-01-14T13:29:15Z,2019-01-14T23:36:22Z,MERGED,True,18,119468,676,https://github.com/howard0su,Integrate lastest libopencm3,2,[],https://github.com/DeviationTX/deviation/pull/478,https://github.com/howard0su,15,https://github.com/DeviationTX/deviation/pull/478#issuecomment-453515683,"Use submodule to integrate libopencm3, remove the current in-tree version. This make integration newer build much easier.
Fix some build errors due to break change in libopencm3.
Interestingly, this saves a little of space for devo7e.
ROM: 0x08003000 - 0x0801ff34 = 115.80kB
RAM: 0x20000000 - 0x20002968 =  10.35kB","Tested on


 Devo7e


 Devof12e


 Devo10 (from community)


 Devo12 (from community)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,478,2018-12-10T08:50:48Z,2019-01-14T13:29:15Z,2019-01-14T23:36:22Z,MERGED,True,18,119468,676,https://github.com/howard0su,Integrate lastest libopencm3,2,[],https://github.com/DeviationTX/deviation/pull/478,https://github.com/TheRealMoeder,16,https://github.com/DeviationTX/deviation/pull/478#issuecomment-453753152,"Use submodule to integrate libopencm3, remove the current in-tree version. This make integration newer build much easier.
Fix some build errors due to break change in libopencm3.
Interestingly, this saves a little of space for devo7e.
ROM: 0x08003000 - 0x0801ff34 = 115.80kB
RAM: 0x20000000 - 0x20002968 =  10.35kB",I can confirm bd625c8 works fine on t8sg(v2_plus),True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,478,2018-12-10T08:50:48Z,2019-01-14T13:29:15Z,2019-01-14T23:36:22Z,MERGED,True,18,119468,676,https://github.com/howard0su,Integrate lastest libopencm3,2,[],https://github.com/DeviationTX/deviation/pull/478,https://github.com/howard0su,17,https://github.com/DeviationTX/deviation/pull/478#issuecomment-453829625,"Use submodule to integrate libopencm3, remove the current in-tree version. This make integration newer build much easier.
Fix some build errors due to break change in libopencm3.
Interestingly, this saves a little of space for devo7e.
ROM: 0x08003000 - 0x0801ff34 = 115.80kB
RAM: 0x20000000 - 0x20002968 =  10.35kB",Rebase with the master and fix the places where timer_reset is introduced.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,478,2018-12-10T08:50:48Z,2019-01-14T13:29:15Z,2019-01-14T23:36:22Z,MERGED,True,18,119468,676,https://github.com/howard0su,Integrate lastest libopencm3,2,[],https://github.com/DeviationTX/deviation/pull/478,https://github.com/PhracturedBlue,18,https://github.com/DeviationTX/deviation/pull/478#issuecomment-453832070,"Use submodule to integrate libopencm3, remove the current in-tree version. This make integration newer build much easier.
Fix some build errors due to break change in libopencm3.
Interestingly, this saves a little of space for devo7e.
ROM: 0x08003000 - 0x0801ff34 = 115.80kB
RAM: 0x20000000 - 0x20002968 =  10.35kB",Am I missing something?  I don't see anything about timer_reset in the code-diff (it is hard to read due to having ~700 fles removed though),True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,478,2018-12-10T08:50:48Z,2019-01-14T13:29:15Z,2019-01-14T23:36:22Z,MERGED,True,18,119468,676,https://github.com/howard0su,Integrate lastest libopencm3,2,[],https://github.com/DeviationTX/deviation/pull/478,https://github.com/howard0su,19,https://github.com/DeviationTX/deviation/pull/478#issuecomment-453832452,"Use submodule to integrate libopencm3, remove the current in-tree version. This make integration newer build much easier.
Fix some build errors due to break change in libopencm3.
Interestingly, this saves a little of space for devo7e.
ROM: 0x08003000 - 0x0801ff34 = 115.80kB
RAM: 0x20000000 - 0x20002968 =  10.35kB","search timer_reset in
6c9fdea

…
On Sun, Jan 13, 2019 at 9:59 PM PhracturedBlue ***@***.***> wrote:
 Am I missing something? I don't see anything about timer_reset in the
 code-diff (it is hard to read due to having ~700 fles removed though)

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#478 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRAovNTvGte9iTRH-M7fGeeF4KRC2ks5vCzusgaJpZM4ZK5_A>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,478,2018-12-10T08:50:48Z,2019-01-14T13:29:15Z,2019-01-14T23:36:22Z,MERGED,True,18,119468,676,https://github.com/howard0su,Integrate lastest libopencm3,2,[],https://github.com/DeviationTX/deviation/pull/478,https://github.com/howard0su,20,https://github.com/DeviationTX/deviation/pull/478#issuecomment-453883821,"Use submodule to integrate libopencm3, remove the current in-tree version. This make integration newer build much easier.
Fix some build errors due to break change in libopencm3.
Interestingly, this saves a little of space for devo7e.
ROM: 0x08003000 - 0x0801ff34 = 115.80kB
RAM: 0x20000000 - 0x20002968 =  10.35kB","@PhracturedBlue please review the commit 8160370 directly, which avoid so many deleted file and make the change clean.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,478,2018-12-10T08:50:48Z,2019-01-14T13:29:15Z,2019-01-14T23:36:22Z,MERGED,True,18,119468,676,https://github.com/howard0su,Integrate lastest libopencm3,2,[],https://github.com/DeviationTX/deviation/pull/478,https://github.com/PhracturedBlue,21,https://github.com/DeviationTX/deviation/pull/478#issuecomment-453884865,"Use submodule to integrate libopencm3, remove the current in-tree version. This make integration newer build much easier.
Fix some build errors due to break change in libopencm3.
Interestingly, this saves a little of space for devo7e.
ROM: 0x08003000 - 0x0801ff34 = 115.80kB
RAM: 0x20000000 - 0x20002968 =  10.35kB","Thank you, that is much easier to validate.  Looks fine to me.  Please make sure peripherals like pwm and uart are working properly too.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,478,2018-12-10T08:50:48Z,2019-01-14T13:29:15Z,2019-01-14T23:36:22Z,MERGED,True,18,119468,676,https://github.com/howard0su,Integrate lastest libopencm3,2,[],https://github.com/DeviationTX/deviation/pull/478,https://github.com/howard0su,22,https://github.com/DeviationTX/deviation/pull/478#issuecomment-453895012,"Use submodule to integrate libopencm3, remove the current in-tree version. This make integration newer build much easier.
Fix some build errors due to break change in libopencm3.
Interestingly, this saves a little of space for devo7e.
ROM: 0x08003000 - 0x0801ff34 = 115.80kB
RAM: 0x20000000 - 0x20002968 =  10.35kB","can u review and approve the PR
DeviationTX/deviation-docker#3 ?

The change referenced the command used by travis-ci. It is not harmful even
there is no submodule.
…
On Mon, Jan 14, 2019 at 9:46 AM PhracturedBlue ***@***.***> wrote:
 ***@***.**** approved this pull request.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#478 (review)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRC8i1GovzhSUs0exqv9xeLhWoc26ks5vC-GJgaJpZM4ZK5_A>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,478,2018-12-10T08:50:48Z,2019-01-14T13:29:15Z,2019-01-14T23:36:22Z,MERGED,True,18,119468,676,https://github.com/howard0su,Integrate lastest libopencm3,2,[],https://github.com/DeviationTX/deviation/pull/478,https://github.com/howard0su,23,https://github.com/DeviationTX/deviation/pull/478#issuecomment-453967956,"Use submodule to integrate libopencm3, remove the current in-tree version. This make integration newer build much easier.
Fix some build errors due to break change in libopencm3.
Interestingly, this saves a little of space for devo7e.
ROM: 0x08003000 - 0x0801ff34 = 115.80kB
RAM: 0x20000000 - 0x20002968 =  10.35kB",This PR is ready to merge. Any concern?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,478,2018-12-10T08:50:48Z,2019-01-14T13:29:15Z,2019-01-14T23:36:22Z,MERGED,True,18,119468,676,https://github.com/howard0su,Integrate lastest libopencm3,2,[],https://github.com/DeviationTX/deviation/pull/478,https://github.com/howard0su,24,https://github.com/DeviationTX/deviation/pull/478#issuecomment-454005337,"Use submodule to integrate libopencm3, remove the current in-tree version. This make integration newer build much easier.
Fix some build errors due to break change in libopencm3.
Interestingly, this saves a little of space for devo7e.
ROM: 0x08003000 - 0x0801ff34 = 115.80kB
RAM: 0x20000000 - 0x20002968 =  10.35kB","Thanks.

If anyone experience error when pull the latest code, please run 'make
distclean' before doing so.
…
On Mon, Jan 14, 2019 at 9:29 PM PhracturedBlue ***@***.***> wrote:
 Merged #478 <#478> into
 master.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#478 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRFkS6b4-CsaTa9FozM_63I_bG00Pks5vDIYsgaJpZM4ZK5_A>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,478,2018-12-10T08:50:48Z,2019-01-14T13:29:15Z,2019-01-14T23:36:22Z,MERGED,True,18,119468,676,https://github.com/howard0su,Integrate lastest libopencm3,2,[],https://github.com/DeviationTX/deviation/pull/478,https://github.com/hexfet,25,https://github.com/DeviationTX/deviation/pull/478#issuecomment-454060068,"Use submodule to integrate libopencm3, remove the current in-tree version. This make integration newer build much easier.
Fix some build errors due to break change in libopencm3.
Interestingly, this saves a little of space for devo7e.
ROM: 0x08003000 - 0x0801ff34 = 115.80kB
RAM: 0x20000000 - 0x20002968 =  10.35kB","The build fails for me on Ubuntu due to DOS line endings in the libopencm3 python scripts.  Running dos2unix on the following files fixes the issue, but not sure that's the best solution:
libopencm3/scripts/genlink.py
libopencm3/scripts/irq2nvic_h
libopencm3/scripts/data/lpc43xx/csv2yaml.py
libopencm3/scripts/data/lpc43xx/gen.py
Edit: Copying the deviation .gitattributes file to the libopencm3 directory before updating the submodule also works.   It forces unix line endings on the local files.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,478,2018-12-10T08:50:48Z,2019-01-14T13:29:15Z,2019-01-14T23:36:22Z,MERGED,True,18,119468,676,https://github.com/howard0su,Integrate lastest libopencm3,2,[],https://github.com/DeviationTX/deviation/pull/478,https://github.com/PhracturedBlue,26,https://github.com/DeviationTX/deviation/pull/478#issuecomment-454103823,"Use submodule to integrate libopencm3, remove the current in-tree version. This make integration newer build much easier.
Fix some build errors due to break change in libopencm3.
Interestingly, this saves a little of space for devo7e.
ROM: 0x08003000 - 0x0801ff34 = 115.80kB
RAM: 0x20000000 - 0x20002968 =  10.35kB",Make should also identify that the libopencm3 is missing and provide a helpful message about loading it,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,478,2018-12-10T08:50:48Z,2019-01-14T13:29:15Z,2019-01-14T23:36:22Z,MERGED,True,18,119468,676,https://github.com/howard0su,Integrate lastest libopencm3,2,[],https://github.com/DeviationTX/deviation/pull/478,https://github.com/howard0su,27,https://github.com/DeviationTX/deviation/pull/478#issuecomment-454194074,"Use submodule to integrate libopencm3, remove the current in-tree version. This make integration newer build much easier.
Fix some build errors due to break change in libopencm3.
Interestingly, this saves a little of space for devo7e.
ROM: 0x08003000 - 0x0801ff34 = 115.80kB
RAM: 0x20000000 - 0x20002968 =  10.35kB","okay. I will add a check and prompt in Makefile.

@hexfet, I am using Deb to test and seems fine to me. can u double check
'git config --global -l' to see if you have any local settings around line
ending? If the issue as you mentioned, I prefer fix in libopencm3 instead
of our main repository.
…
On Tue, Jan 15, 2019 at 2:09 AM PhracturedBlue ***@***.***> wrote:
 Make should also identify that the libopencm3 is missing and provide a
 helpful message about loading it

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#478 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRE5Qm_baBehdGTjJmdBpb1O_r8mEks5vDMfJgaJpZM4ZK5_A>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,478,2018-12-10T08:50:48Z,2019-01-14T13:29:15Z,2019-01-14T23:36:22Z,MERGED,True,18,119468,676,https://github.com/howard0su,Integrate lastest libopencm3,2,[],https://github.com/DeviationTX/deviation/pull/478,https://github.com/hexfet,28,https://github.com/DeviationTX/deviation/pull/478#issuecomment-454205039,"Use submodule to integrate libopencm3, remove the current in-tree version. This make integration newer build much easier.
Fix some build errors due to break change in libopencm3.
Interestingly, this saves a little of space for devo7e.
ROM: 0x08003000 - 0x0801ff34 = 115.80kB
RAM: 0x20000000 - 0x20002968 =  10.35kB",Thanks Howard!  My config had core.autocrlf=true for some long-forgotten reason.  After removing it and re-initializing the submodule the build is successful.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,480,2018-12-11T00:54:46Z,2019-01-21T08:02:23Z,2019-01-21T08:02:24Z,MERGED,True,4,4,1,https://github.com/howard0su,Update to GCC-8-2018-q4-major,1,[],https://github.com/DeviationTX/deviation/pull/480,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/480,Upgrade the compiler to latest arm-none-eabi-gcc from ARM. The current compiler is too old to get any support. The new compiler gives better warnings and potentially leverage some new optimization technology.,Upgrade the compiler to latest arm-none-eabi-gcc from ARM. The current compiler is too old to get any support. The new compiler gives better warnings and potentially leverage some new optimization technology.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,480,2018-12-11T00:54:46Z,2019-01-21T08:02:23Z,2019-01-21T08:02:24Z,MERGED,True,4,4,1,https://github.com/howard0su,Update to GCC-8-2018-q4-major,1,[],https://github.com/DeviationTX/deviation/pull/480,https://github.com/TheRealMoeder,2,https://github.com/DeviationTX/deviation/pull/480#issuecomment-447660537,Upgrade the compiler to latest arm-none-eabi-gcc from ARM. The current compiler is too old to get any support. The new compiler gives better warnings and potentially leverage some new optimization technology.,Please add the matching PR to the deviation-docker image as well,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,480,2018-12-11T00:54:46Z,2019-01-21T08:02:23Z,2019-01-21T08:02:24Z,MERGED,True,4,4,1,https://github.com/howard0su,Update to GCC-8-2018-q4-major,1,[],https://github.com/DeviationTX/deviation/pull/480,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/480#issuecomment-447694681,Upgrade the compiler to latest arm-none-eabi-gcc from ARM. The current compiler is too old to get any support. The new compiler gives better warnings and potentially leverage some new optimization technology.,Let's do more testings before merge. I see couple of cases that new compiler can generate wrong code.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,480,2018-12-11T00:54:46Z,2019-01-21T08:02:23Z,2019-01-21T08:02:24Z,MERGED,True,4,4,1,https://github.com/howard0su,Update to GCC-8-2018-q4-major,1,[],https://github.com/DeviationTX/deviation/pull/480,https://github.com/howard0su,4,https://github.com/DeviationTX/deviation/pull/480#issuecomment-448648587,Upgrade the compiler to latest arm-none-eabi-gcc from ARM. The current compiler is too old to get any support. The new compiler gives better warnings and potentially leverage some new optimization technology.,"submitted PR for docker image:
DeviationTX/deviation-docker#2",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,480,2018-12-11T00:54:46Z,2019-01-21T08:02:23Z,2019-01-21T08:02:24Z,MERGED,True,4,4,1,https://github.com/howard0su,Update to GCC-8-2018-q4-major,1,[],https://github.com/DeviationTX/deviation/pull/480,https://github.com/howard0su,5,https://github.com/DeviationTX/deviation/pull/480#issuecomment-448996369,Upgrade the compiler to latest arm-none-eabi-gcc from ARM. The current compiler is too old to get any support. The new compiler gives better warnings and potentially leverage some new optimization technology.,"You can install the compiler for Windows/Linux/OSX here: https://developer.arm.com/open-source/gnu-toolchain/gnu-rm/downloads
Can I get more testings from devs?
How can I publish the test firmware to ask community to testing (maybe combined with openlibcm3 change?)?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,480,2018-12-11T00:54:46Z,2019-01-21T08:02:23Z,2019-01-21T08:02:24Z,MERGED,True,4,4,1,https://github.com/howard0su,Update to GCC-8-2018-q4-major,1,[],https://github.com/DeviationTX/deviation/pull/480,https://github.com/TheRealMoeder,6,https://github.com/DeviationTX/deviation/pull/480#issuecomment-448998395,Upgrade the compiler to latest arm-none-eabi-gcc from ARM. The current compiler is too old to get any support. The new compiler gives better warnings and potentially leverage some new optimization technology.,Easiest is probably posting them on the deviationtx.com forum in a new thread.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,480,2018-12-11T00:54:46Z,2019-01-21T08:02:23Z,2019-01-21T08:02:24Z,MERGED,True,4,4,1,https://github.com/howard0su,Update to GCC-8-2018-q4-major,1,[],https://github.com/DeviationTX/deviation/pull/480,https://github.com/howard0su,7,https://github.com/DeviationTX/deviation/pull/480#issuecomment-449000211,Upgrade the compiler to latest arm-none-eabi-gcc from ARM. The current compiler is too old to get any support. The new compiler gives better warnings and potentially leverage some new optimization technology.,where can i upload the firmware to host? Can i create a branch and some script to help me do the build + upload?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,480,2018-12-11T00:54:46Z,2019-01-21T08:02:23Z,2019-01-21T08:02:24Z,MERGED,True,4,4,1,https://github.com/howard0su,Update to GCC-8-2018-q4-major,1,[],https://github.com/DeviationTX/deviation/pull/480,https://github.com/TheRealMoeder,8,https://github.com/DeviationTX/deviation/pull/480#issuecomment-449008858,Upgrade the compiler to latest arm-none-eabi-gcc from ARM. The current compiler is too old to get any support. The new compiler gives better warnings and potentially leverage some new optimization technology.,@PhracturedBlue  or @F-D-R can give you developer permissions for deviationtx so you can upload files to the downloads section using a provided perl script.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,480,2018-12-11T00:54:46Z,2019-01-21T08:02:23Z,2019-01-21T08:02:24Z,MERGED,True,4,4,1,https://github.com/howard0su,Update to GCC-8-2018-q4-major,1,[],https://github.com/DeviationTX/deviation/pull/480,https://github.com/howard0su,9,https://github.com/DeviationTX/deviation/pull/480#issuecomment-449610470,Upgrade the compiler to latest arm-none-eabi-gcc from ARM. The current compiler is too old to get any support. The new compiler gives better warnings and potentially leverage some new optimization technology.,"there is an interesting bug for LTO in gcc-7: https://bugs.launchpad.net/gcc-arm-embedded/+bug/1747966
maybe LTO is not that stable in gcc.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,480,2018-12-11T00:54:46Z,2019-01-21T08:02:23Z,2019-01-21T08:02:24Z,MERGED,True,4,4,1,https://github.com/howard0su,Update to GCC-8-2018-q4-major,1,[],https://github.com/DeviationTX/deviation/pull/480,https://github.com/howard0su,10,https://github.com/DeviationTX/deviation/pull/480#issuecomment-449904709,Upgrade the compiler to latest arm-none-eabi-gcc from ARM. The current compiler is too old to get any support. The new compiler gives better warnings and potentially leverage some new optimization technology.,need update to q4 release which was released at Dec 12.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,480,2018-12-11T00:54:46Z,2019-01-21T08:02:23Z,2019-01-21T08:02:24Z,MERGED,True,4,4,1,https://github.com/howard0su,Update to GCC-8-2018-q4-major,1,[],https://github.com/DeviationTX/deviation/pull/480,https://github.com/howard0su,11,https://github.com/DeviationTX/deviation/pull/480#issuecomment-450127596,Upgrade the compiler to latest arm-none-eabi-gcc from ARM. The current compiler is too old to get any support. The new compiler gives better warnings and potentially leverage some new optimization technology.,"Interesting, the new compiler generate even smaller file:
GCC-7
devo7e:
ROM: 0x08003000 - 0x0801fd64 = 115.35kB
RAM: 0x20000000 - 0x20002a00 =  10.50kB
devo8:
ROM: 0x08004000 - 0x0803d854 = 230.08kB
RAM: 0x20000000 - 0x2000910c =  36.26kB
GCC-8:
ROM: 0x08003000 - 0x0801fa44 = 114.57kB
RAM: 0x20000000 - 0x20002894 =  10.14kB
ROM: 0x08004000 - 0x0803d6a8 = 229.66kB
RAM: 0x20000000 - 0x20008fac =  35.92kB",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,480,2018-12-11T00:54:46Z,2019-01-21T08:02:23Z,2019-01-21T08:02:24Z,MERGED,True,4,4,1,https://github.com/howard0su,Update to GCC-8-2018-q4-major,1,[],https://github.com/DeviationTX/deviation/pull/480,https://github.com/PhracturedBlue,12,https://github.com/DeviationTX/deviation/pull/480#issuecomment-451352902,Upgrade the compiler to latest arm-none-eabi-gcc from ARM. The current compiler is too old to get any support. The new compiler gives better warnings and potentially leverage some new optimization technology.,"Be really careful with this.  We've had issues in the past with compiler's generating broken code.  I think you should try to move, but definitely should try to get testing on all transmitters you can 1st.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,480,2018-12-11T00:54:46Z,2019-01-21T08:02:23Z,2019-01-21T08:02:24Z,MERGED,True,4,4,1,https://github.com/howard0su,Update to GCC-8-2018-q4-major,1,[],https://github.com/DeviationTX/deviation/pull/480,https://github.com/howard0su,13,https://github.com/DeviationTX/deviation/pull/480#issuecomment-451354811,Upgrade the compiler to latest arm-none-eabi-gcc from ARM. The current compiler is too old to get any support. The new compiler gives better warnings and potentially leverage some new optimization technology.,Of course. no rush to get this in. we need more testings.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,480,2018-12-11T00:54:46Z,2019-01-21T08:02:23Z,2019-01-21T08:02:24Z,MERGED,True,4,4,1,https://github.com/howard0su,Update to GCC-8-2018-q4-major,1,[],https://github.com/DeviationTX/deviation/pull/480,https://github.com/howard0su,14,https://github.com/DeviationTX/deviation/pull/480#issuecomment-451429840,Upgrade the compiler to latest arm-none-eabi-gcc from ARM. The current compiler is too old to get any support. The new compiler gives better warnings and potentially leverage some new optimization technology.,Can u give me permission to upload test build? Plan to post a test build with new compiler and new libopencm3.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,480,2018-12-11T00:54:46Z,2019-01-21T08:02:23Z,2019-01-21T08:02:24Z,MERGED,True,4,4,1,https://github.com/howard0su,Update to GCC-8-2018-q4-major,1,[],https://github.com/DeviationTX/deviation/pull/480,https://github.com/PhracturedBlue,15,https://github.com/DeviationTX/deviation/pull/480#issuecomment-451447793,Upgrade the compiler to latest arm-none-eabi-gcc from ARM. The current compiler is too old to get any support. The new compiler gives better warnings and potentially leverage some new optimization technology.,Done.  I have sent you an email with further instructions,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,480,2018-12-11T00:54:46Z,2019-01-21T08:02:23Z,2019-01-21T08:02:24Z,MERGED,True,4,4,1,https://github.com/howard0su,Update to GCC-8-2018-q4-major,1,[],https://github.com/DeviationTX/deviation/pull/480,https://github.com/howard0su,16,https://github.com/DeviationTX/deviation/pull/480#issuecomment-451815080,Upgrade the compiler to latest arm-none-eabi-gcc from ARM. The current compiler is too old to get any support. The new compiler gives better warnings and potentially leverage some new optimization technology.,@PhracturedBlue nice report for the size. First time I know the overall picture of the saving by new compiler.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,480,2018-12-11T00:54:46Z,2019-01-21T08:02:23Z,2019-01-21T08:02:24Z,MERGED,True,4,4,1,https://github.com/howard0su,Update to GCC-8-2018-q4-major,1,[],https://github.com/DeviationTX/deviation/pull/480,https://github.com/PhracturedBlue,17,https://github.com/DeviationTX/deviation/pull/480#issuecomment-451818098,Upgrade the compiler to latest arm-none-eabi-gcc from ARM. The current compiler is too old to get any support. The new compiler gives better warnings and potentially leverage some new optimization technology.,"Those are pretty sizeable gains.  As soon as we get some feedback for a couple different transmitters, I'm all for it.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,480,2018-12-11T00:54:46Z,2019-01-21T08:02:23Z,2019-01-21T08:02:24Z,MERGED,True,4,4,1,https://github.com/howard0su,Update to GCC-8-2018-q4-major,1,[],https://github.com/DeviationTX/deviation/pull/480,https://github.com/howard0su,18,https://github.com/DeviationTX/deviation/pull/480#issuecomment-453830818,Upgrade the compiler to latest arm-none-eabi-gcc from ARM. The current compiler is too old to get any support. The new compiler gives better warnings and potentially leverage some new optimization technology.,"Tested on:


 devof12e


 devo12


 devo7e


 devo10",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,480,2018-12-11T00:54:46Z,2019-01-21T08:02:23Z,2019-01-21T08:02:24Z,MERGED,True,4,4,1,https://github.com/howard0su,Update to GCC-8-2018-q4-major,1,[],https://github.com/DeviationTX/deviation/pull/480,https://github.com/TheRealMoeder,19,https://github.com/DeviationTX/deviation/pull/480#issuecomment-454169591,Upgrade the compiler to latest arm-none-eabi-gcc from ARM. The current compiler is too old to get any support. The new compiler gives better warnings and potentially leverage some new optimization technology.,"Please force-push again for CI run, thanks!",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,480,2018-12-11T00:54:46Z,2019-01-21T08:02:23Z,2019-01-21T08:02:24Z,MERGED,True,4,4,1,https://github.com/howard0su,Update to GCC-8-2018-q4-major,1,[],https://github.com/DeviationTX/deviation/pull/480,https://github.com/howard0su,20,https://github.com/DeviationTX/deviation/pull/480#issuecomment-454824568,Upgrade the compiler to latest arm-none-eabi-gcc from ARM. The current compiler is too old to get any support. The new compiler gives better warnings and potentially leverage some new optimization technology.,I plan to get this in next monday with the change in docker DeviationTX/deviation-docker#4 Do you think this is proper @PhracturedBlue @hexfet @TheRealMoeder ?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,481,2018-12-11T09:15:55Z,2018-12-13T08:43:05Z,2018-12-14T15:47:11Z,MERGED,True,2,0,1,https://github.com/howard0su,Don't use image size to create mapped gfx,1,[],https://github.com/DeviationTX/deviation/pull/481,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/481,"first, the code cannot handle any size other than 6x4.
second, the unit of image size is pixel, while mapped gfx window is
char. They cannot use mixed. Let's always use 6x4 for devof12e.","first, the code cannot handle any size other than 6x4.
second, the unit of image size is pixel, while mapped gfx window is
char. They cannot use mixed. Let's always use 6x4 for devof12e.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,481,2018-12-11T09:15:55Z,2018-12-13T08:43:05Z,2018-12-14T15:47:11Z,MERGED,True,2,0,1,https://github.com/howard0su,Don't use image size to create mapped gfx,1,[],https://github.com/DeviationTX/deviation/pull/481,https://github.com/TheRealMoeder,2,https://github.com/DeviationTX/deviation/pull/481#issuecomment-446133502,"first, the code cannot handle any size other than 6x4.
second, the unit of image size is pixel, while mapped gfx window is
char. They cannot use mixed. Let's always use 6x4 for devof12e.","Without reading the code, doesn't this apply to all text gui transmitters?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,481,2018-12-11T09:15:55Z,2018-12-13T08:43:05Z,2018-12-14T15:47:11Z,MERGED,True,2,0,1,https://github.com/howard0su,Don't use image size to create mapped gfx,1,[],https://github.com/DeviationTX/deviation/pull/481,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/481#issuecomment-446159060,"first, the code cannot handle any size other than 6x4.
second, the unit of image size is pixel, while mapped gfx window is
char. They cannot use mixed. Let's always use 6x4 for devof12e.",No. Only devof12e so far. As I notice this when doing other work for F12e.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,481,2018-12-11T09:15:55Z,2018-12-13T08:43:05Z,2018-12-14T15:47:11Z,MERGED,True,2,0,1,https://github.com/howard0su,Don't use image size to create mapped gfx,1,[],https://github.com/DeviationTX/deviation/pull/481,https://github.com/howard0su,4,https://github.com/DeviationTX/deviation/pull/481#issuecomment-446275195,"first, the code cannot handle any size other than 6x4.
second, the unit of image size is pixel, while mapped gfx window is
char. They cannot use mixed. Let's always use 6x4 for devof12e.","Looks like this only applies to f12e, as only f12e implemented mapped_gfx.
docker@6a6e5a8a95f4:/git/deviation/src$ git grep HAS_MAPPED_GFX
gui/text/_gui.c:#if HAS_MAPPED_GFX
gui/text/_mapped_gfx.h:#if ! HAS_MAPPED_GFX
gui/text/_mapped_gfx.h:#endif //HAS_MAPPED_GFX
pages/text/toggle_select.c:#if HAS_MAPPED_GFX
screen/text/lcd_gfx.c:#if HAS_MAPPED_GFX
screen/text/lcd_gfx.c:  #if HAS_MAPPED_GFX
target/devof12e-XMS/target_defs.h:#define HAS_MAPPED_GFX      1
target/devof12e/target_defs.h:#define HAS_MAPPED_GFX      1
target/devof4-XMS/target_defs.h:#define HAS_MAPPED_GFX      0
target/devof4/target_defs.h:#define HAS_MAPPED_GFX      0
target/devof7-XMS/target_defs.h:#define HAS_MAPPED_GFX      0
target/devof7/target_defs.h:#define HAS_MAPPED_GFX      0",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,482,2018-12-11T09:18:12Z,2018-12-15T16:19:10Z,2018-12-20T15:00:55Z,MERGED,True,708,645,10,https://github.com/howard0su,New LCD emulation for devof12e,2,[],https://github.com/DeviationTX/deviation/pull/482,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/482,"Use a low level emulatioin for LCD controller in devof12e so that we can
test LCD.c code in emulator.
While I am here, cleanup LCD.c to only contains the high level logic and leave the logic interfacing TW8816 chip to tw8816.c","Use a low level emulatioin for LCD controller in devof12e so that we can
test LCD.c code in emulator.
While I am here, cleanup LCD.c to only contains the high level logic and leave the logic interfacing TW8816 chip to tw8816.c",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,482,2018-12-11T09:18:12Z,2018-12-15T16:19:10Z,2018-12-20T15:00:55Z,MERGED,True,708,645,10,https://github.com/howard0su,New LCD emulation for devof12e,2,[],https://github.com/DeviationTX/deviation/pull/482,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/482#issuecomment-446128947,"Use a low level emulatioin for LCD controller in devof12e so that we can
test LCD.c code in emulator.
While I am here, cleanup LCD.c to only contains the high level logic and leave the logic interfacing TW8816 chip to tw8816.c",This is ongoing work to support localization for devof12e.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,482,2018-12-11T09:18:12Z,2018-12-15T16:19:10Z,2018-12-20T15:00:55Z,MERGED,True,708,645,10,https://github.com/howard0su,New LCD emulation for devof12e,2,[],https://github.com/DeviationTX/deviation/pull/482,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/482#issuecomment-446776841,"Use a low level emulatioin for LCD controller in devof12e so that we can
test LCD.c code in emulator.
While I am here, cleanup LCD.c to only contains the high level logic and leave the logic interfacing TW8816 chip to tw8816.c",tested on devof12e and emu_devof12e.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,482,2018-12-11T09:18:12Z,2018-12-15T16:19:10Z,2018-12-20T15:00:55Z,MERGED,True,708,645,10,https://github.com/howard0su,New LCD emulation for devof12e,2,[],https://github.com/DeviationTX/deviation/pull/482,https://github.com/TheRealMoeder,4,https://github.com/DeviationTX/deviation/pull/482#issuecomment-447810085,"Use a low level emulatioin for LCD controller in devof12e so that we can
test LCD.c code in emulator.
While I am here, cleanup LCD.c to only contains the high level logic and leave the logic interfacing TW8816 chip to tw8816.c",This seems to have broken nightlies...,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,483,2018-12-14T15:27:25Z,2018-12-16T23:46:52Z,2018-12-16T23:46:52Z,CLOSED,False,83,144,4,https://github.com/howard0su,Make CRSF and SBUS as one module with 2 protocols,3,[],https://github.com/DeviationTX/deviation/pull/483,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/483,CRSF and SBUS are largely same. So merge the code to use one source file.,CRSF and SBUS are largely same. So merge the code to use one source file.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,483,2018-12-14T15:27:25Z,2018-12-16T23:46:52Z,2018-12-16T23:46:52Z,CLOSED,False,83,144,4,https://github.com/howard0su,Make CRSF and SBUS as one module with 2 protocols,3,[],https://github.com/DeviationTX/deviation/pull/483,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/483#issuecomment-447359704,CRSF and SBUS are largely same. So merge the code to use one source file.,Need PR #474 to free up some space in order to pass the build.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,483,2018-12-14T15:27:25Z,2018-12-16T23:46:52Z,2018-12-16T23:46:52Z,CLOSED,False,83,144,4,https://github.com/howard0su,Make CRSF and SBUS as one module with 2 protocols,3,[],https://github.com/DeviationTX/deviation/pull/483,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/483#issuecomment-447574859,CRSF and SBUS are largely same. So merge the code to use one source file.,"@hexfet  why the following line calls Initialize instead of UART_Stop()?
case PROTOCMD_DEINIT: UART_Initialize(); return 0;",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,483,2018-12-14T15:27:25Z,2018-12-16T23:46:52Z,2018-12-16T23:46:52Z,CLOSED,False,83,144,4,https://github.com/howard0su,Make CRSF and SBUS as one module with 2 protocols,3,[],https://github.com/DeviationTX/deviation/pull/483,https://github.com/hexfet,4,https://github.com/DeviationTX/deviation/pull/483#issuecomment-447580817,CRSF and SBUS are largely same. So merge the code to use one source file.,It probably could be UART_Stop now since audio is now initialized on model load.  Some cleanup of uart usage is on my todo list.  See this post.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,483,2018-12-14T15:27:25Z,2018-12-16T23:46:52Z,2018-12-16T23:46:52Z,CLOSED,False,83,144,4,https://github.com/howard0su,Make CRSF and SBUS as one module with 2 protocols,3,[],https://github.com/DeviationTX/deviation/pull/483,https://github.com/howard0su,5,https://github.com/DeviationTX/deviation/pull/483#issuecomment-447611973,CRSF and SBUS are largely same. So merge the code to use one source file.,I will leave that to you and not touch it in this PR.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,485,2018-12-14T16:26:41Z,2018-12-16T17:19:26Z,2018-12-20T14:59:05Z,MERGED,True,4,1,2,https://github.com/howard0su,Fix emu build warning and error on OSX,1,[],https://github.com/DeviationTX/deviation/pull/485,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/485,cleanup OSX build as it is my main dev platform.,cleanup OSX build as it is my main dev platform.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,485,2018-12-14T16:26:41Z,2018-12-16T17:19:26Z,2018-12-20T14:59:05Z,MERGED,True,4,1,2,https://github.com/howard0su,Fix emu build warning and error on OSX,1,[],https://github.com/DeviationTX/deviation/pull/485,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/485#issuecomment-447647918,cleanup OSX build as it is my main dev platform.,rebase with master and fix conflict.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,486,2018-12-16T19:35:50Z,2018-12-19T16:02:59Z,2019-03-05T00:10:57Z,MERGED,True,319,0,3,https://github.com/goebish,Protocol for WLToys V911S,8,['Protocol'],https://github.com/DeviationTX/deviation/pull/486,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/486,"Add WLToys V911S protocol
Channel 5: calibrate
Forum: https://www.deviationtx.com/forum/protocol-development/8043-protocol-for-wl-heli-v911-s","Add WLToys V911S protocol
Channel 5: calibrate
Forum: https://www.deviationtx.com/forum/protocol-development/8043-protocol-for-wl-heli-v911-s",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,487,2018-12-16T22:56:22Z,2019-01-16T16:26:32Z,2019-01-16T16:26:45Z,CLOSED,False,98,46,5,https://github.com/hexfet,Uart modular fix,5,[],https://github.com/DeviationTX/deviation/pull/487,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/487,"Fix the UART based protocols in modular builds.  Splits the uart.c code into three files to produce a modular build that works correctly for CRSF and SBUS.  Would like a better solution than three separate files but haven't yet figured out a better solution.  Making this PR so others can see and hopefully spot why the uart doesn't transmit unless the code is organized this way.
SBUS added to modular build by this PR.","Fix the UART based protocols in modular builds.  Splits the uart.c code into three files to produce a modular build that works correctly for CRSF and SBUS.  Would like a better solution than three separate files but haven't yet figured out a better solution.  Making this PR so others can see and hopefully spot why the uart doesn't transmit unless the code is organized this way.
SBUS added to modular build by this PR.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,487,2018-12-16T22:56:22Z,2019-01-16T16:26:32Z,2019-01-16T16:26:45Z,CLOSED,False,98,46,5,https://github.com/hexfet,Uart modular fix,5,[],https://github.com/DeviationTX/deviation/pull/487,https://github.com/hexfet,2,https://github.com/DeviationTX/deviation/pull/487#issuecomment-447685037,"Fix the UART based protocols in modular builds.  Splits the uart.c code into three files to produce a modular build that works correctly for CRSF and SBUS.  Would like a better solution than three separate files but haven't yet figured out a better solution.  Making this PR so others can see and hopefully spot why the uart doesn't transmit unless the code is organized this way.
SBUS added to modular build by this PR.","This fix works but I can't explain why.  The UART_Send function is being located by the linker to the protocol .mod file.  It gets a valid RAM address, just like PWM_Initialize, so that doesn't seem to be a problem.  But if the ISRs are not put into a separate file then serial output doesn't work.
The UART_Send function is split into the target/common/devo/protocol directory because the makefile builds files in that directory for both modular and non-modular builds, but in the modular build those files are built during the protocol compilations.  The linker puts the UART_Send function in RAM instead of locating it in ROM and referencing it from the .mod code.  That's what's done for the other UART_ functions, but again not sure why.
Following is from a modular build of T8+.
/src$ readelf -s --dyn-syms t8sg_v2_plus.elf|grep UART_
  3108: 08006b45    32 FUNC    GLOBAL DEFAULT    1 UART_SetDataRate
  3165: 08006bd9    48 FUNC    GLOBAL DEFAULT    1 UART_StartReceive
  3216: 08006c09     6 FUNC    GLOBAL DEFAULT    1 UART_StopReceive
  3224: 08006c6d   248 FUNC    GLOBAL DEFAULT    1 UART_Initialize
  3251: 08006c55    24 FUNC    GLOBAL DEFAULT    1 UART_SetDuplex
  3477: 08006b65   116 FUNC    GLOBAL DEFAULT    1 UART_SetFormat
  3835: 08006c11    68 FUNC    GLOBAL DEFAULT    1 UART_Stop
/src$ readelf -s --dyn-syms objs/t8sg_v2_plus/crsf_uart.elf|grep UART_
   101: 08006bd9     0 NOTYPE  LOCAL  DEFAULT  ABS UART_StartReceive
   144: 08006c09     0 NOTYPE  LOCAL  DEFAULT  ABS UART_StopReceive
   348: 08006b65     0 NOTYPE  LOCAL  DEFAULT  ABS UART_SetFormat
   641: 08006c11     0 NOTYPE  LOCAL  DEFAULT  ABS UART_Stop
   898: 08006b45     0 NOTYPE  GLOBAL DEFAULT  ABS UART_SetDataRate
   910: 08006c6d     0 NOTYPE  GLOBAL DEFAULT  ABS UART_Initialize
   913: 08006c55     0 NOTYPE  GLOBAL DEFAULT  ABS UART_SetDuplex
   948: 2000420d   148 FUNC    GLOBAL DEFAULT    1 UART_Send
/src$ readelf -s --dyn-syms objs/t8sg_v2_plus/ppmout.elf|grep PWM_
   900: 20004151   240 FUNC    GLOBAL DEFAULT    1 PWM_Initialize
   958: 20004241    80 FUNC    GLOBAL DEFAULT    1 PWM_Stop",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,487,2018-12-16T22:56:22Z,2019-01-16T16:26:32Z,2019-01-16T16:26:45Z,CLOSED,False,98,46,5,https://github.com/hexfet,Uart modular fix,5,[],https://github.com/DeviationTX/deviation/pull/487,https://github.com/TheRealMoeder,3,https://github.com/DeviationTX/deviation/pull/487#issuecomment-448379425,"Fix the UART based protocols in modular builds.  Splits the uart.c code into three files to produce a modular build that works correctly for CRSF and SBUS.  Would like a better solution than three separate files but haven't yet figured out a better solution.  Making this PR so others can see and hopefully spot why the uart doesn't transmit unless the code is organized this way.
SBUS added to modular build by this PR.",edit: Nevermind...I misread the issue you had with this solution.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,487,2018-12-16T22:56:22Z,2019-01-16T16:26:32Z,2019-01-16T16:26:45Z,CLOSED,False,98,46,5,https://github.com/hexfet,Uart modular fix,5,[],https://github.com/DeviationTX/deviation/pull/487,https://github.com/howard0su,4,https://github.com/DeviationTX/deviation/pull/487#issuecomment-448866834,"Fix the UART based protocols in modular builds.  Splits the uart.c code into three files to produce a modular build that works correctly for CRSF and SBUS.  Would like a better solution than three separate files but haven't yet figured out a better solution.  Making this PR so others can see and hopefully spot why the uart doesn't transmit unless the code is organized this way.
SBUS added to modular build by this PR.",I believe we can only figure out the root cause is attach a JTAG to one TX and debug from there. Maybe I will find some time to do so in holiday.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,487,2018-12-16T22:56:22Z,2019-01-16T16:26:32Z,2019-01-16T16:26:45Z,CLOSED,False,98,46,5,https://github.com/hexfet,Uart modular fix,5,[],https://github.com/DeviationTX/deviation/pull/487,https://github.com/howard0su,5,https://github.com/DeviationTX/deviation/pull/487#issuecomment-449179801,"Fix the UART based protocols in modular builds.  Splits the uart.c code into three files to produce a modular build that works correctly for CRSF and SBUS.  Would like a better solution than three separate files but haven't yet figured out a better solution.  Making this PR so others can see and hopefully spot why the uart doesn't transmit unless the code is organized this way.
SBUS added to modular build by this PR.",@hexfet the change on modular build is checked in. Now the ISR code can be wrapper under the macro to make sure it is only compiled for main firmware when it is a modular build. So you may not need split into two files now.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,487,2018-12-16T22:56:22Z,2019-01-16T16:26:32Z,2019-01-16T16:26:45Z,CLOSED,False,98,46,5,https://github.com/hexfet,Uart modular fix,5,[],https://github.com/DeviationTX/deviation/pull/487,https://github.com/TheRealMoeder,6,https://github.com/DeviationTX/deviation/pull/487#issuecomment-453740333,"Fix the UART based protocols in modular builds.  Splits the uart.c code into three files to produce a modular build that works correctly for CRSF and SBUS.  Would like a better solution than three separate files but haven't yet figured out a better solution.  Making this PR so others can see and hopefully spot why the uart doesn't transmit unless the code is organized this way.
SBUS added to modular build by this PR.",Shall we merge this soon to fix uart?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,487,2018-12-16T22:56:22Z,2019-01-16T16:26:32Z,2019-01-16T16:26:45Z,CLOSED,False,98,46,5,https://github.com/hexfet,Uart modular fix,5,[],https://github.com/DeviationTX/deviation/pull/487,https://github.com/howard0su,7,https://github.com/DeviationTX/deviation/pull/487#issuecomment-453740656,"Fix the UART based protocols in modular builds.  Splits the uart.c code into three files to produce a modular build that works correctly for CRSF and SBUS.  Would like a better solution than three separate files but haven't yet figured out a better solution.  Making this PR so others can see and hopefully spot why the uart doesn't transmit unless the code is organized this way.
SBUS added to modular build by this PR.","Part of LTO work, I split out all ISR related code to a separate file which
is similar with this change. Let me test that change and if that one fix
the UART as well, I would prefer just merge LTO change without really
enable LTO. Since anyway, LTO work need that change.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,487,2018-12-16T22:56:22Z,2019-01-16T16:26:32Z,2019-01-16T16:26:45Z,CLOSED,False,98,46,5,https://github.com/hexfet,Uart modular fix,5,[],https://github.com/DeviationTX/deviation/pull/487,https://github.com/hexfet,8,https://github.com/DeviationTX/deviation/pull/487#issuecomment-454843546,"Fix the UART based protocols in modular builds.  Splits the uart.c code into three files to produce a modular build that works correctly for CRSF and SBUS.  Would like a better solution than three separate files but haven't yet figured out a better solution.  Making this PR so others can see and hopefully spot why the uart doesn't transmit unless the code is organized this way.
SBUS added to modular build by this PR.",Issue was fixed by #599.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,489,2018-12-17T11:45:16Z,2018-12-17T12:33:08Z,2018-12-20T14:58:55Z,MERGED,True,1,0,1,https://github.com/howard0su,Fix nightly build,1,[],https://github.com/DeviationTX/deviation/pull/489,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/489,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,490,2018-12-18T07:32:26Z,2018-12-18T07:44:24Z,2018-12-18T07:44:24Z,MERGED,True,412,15,6,https://github.com/vladislavy,"Protocol for Air Hogs ""Star Trek"" NCC-1701, from goebish",1,[],https://github.com/DeviationTX/deviation/pull/490,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/490,"Ported from MULTI, untested on Deviation.
Protocol: NCC1701
Channel 5: Warp
Topic: https://www.deviationtx.com/forum/protocol-development/8101-star-trek-air-hogs","Ported from MULTI, untested on Deviation.
Protocol: NCC1701
Channel 5: Warp
Topic: https://www.deviationtx.com/forum/protocol-development/8101-star-trek-air-hogs",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,491,2018-12-18T19:48:17Z,2018-12-19T21:55:32Z,2018-12-19T21:55:32Z,MERGED,True,2,4,2,https://github.com/TheRealMoeder,"Fix mux beep for ""extended_audio""",4,[],https://github.com/DeviationTX/deviation/pull/491,https://github.com/TheRealMoeder,1,https://github.com/DeviationTX/deviation/pull/491,"Fix for issue #439
See also the discussion in closed PR #450","Fix for issue #439
See also the discussion in closed PR #450",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,491,2018-12-18T19:48:17Z,2018-12-19T21:55:32Z,2018-12-19T21:55:32Z,MERGED,True,2,4,2,https://github.com/TheRealMoeder,"Fix mux beep for ""extended_audio""",4,[],https://github.com/DeviationTX/deviation/pull/491,https://github.com/TheRealMoeder,2,https://github.com/DeviationTX/deviation/pull/491#issuecomment-448358750,"Fix for issue #439
See also the discussion in closed PR #450",Please squash and merge...,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,492,2018-12-18T21:11:58Z,2018-12-19T06:22:17Z,2018-12-19T16:07:45Z,MERGED,True,11,1,2,https://github.com/phobos-,Added rssi telemetry sounds,1,[],https://github.com/DeviationTX/deviation/pull/492,https://github.com/phobos-,1,https://github.com/DeviationTX/deviation/pull/492,"This PR contains the following changes:

added VOICE_UNIT_DB sounds to all telemetry fields with 'd' as units.
fixed dsm rssi telemetry to have proper unit - 'd'.","This PR contains the following changes:

added VOICE_UNIT_DB sounds to all telemetry fields with 'd' as units.
fixed dsm rssi telemetry to have proper unit - 'd'.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,493,2018-12-19T13:03:37Z,2018-12-19T21:53:45Z,2018-12-20T14:58:41Z,MERGED,True,7,7,4,https://github.com/howard0su,Fix parallel build,2,[],https://github.com/DeviationTX/deviation/pull/493,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/493,"Add flock to make sure only one libopencm3 lib is built
Generate optimize.ld in each target folder","Add flock to make sure only one libopencm3 lib is built
Generate optimize.ld in each target folder",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,494,2018-12-19T13:08:43Z,2018-12-19T21:52:43Z,2018-12-20T14:58:32Z,MERGED,True,1,3,2,https://github.com/howard0su,Fix warnings,1,[],https://github.com/DeviationTX/deviation/pull/494,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/494,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,497,2018-12-19T15:11:22Z,2018-12-19T19:49:36Z,2018-12-20T14:58:24Z,MERGED,True,0,58,30,https://github.com/howard0su,Remove MUSIC_Play from protocol,2,[],https://github.com/DeviationTX/deviation/pull/497,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/497,Fix issue #495,Fix issue #495,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,498,2018-12-19T16:20:50Z,2018-12-20T02:02:50Z,2019-03-05T00:10:58Z,MERGED,True,259,1,3,https://github.com/goebish,Protocol for GD00X,11,['Protocol'],https://github.com/DeviationTX/deviation/pull/498,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/498,"Add protocol for C-17 Transport / GD006 DA62 fixed wing.
Protocol: GD00X
Channel 5: Lights on/off
Forum: https://www.deviationtx.com/forum/protocol-development/8120-c-17-transport","Add protocol for C-17 Transport / GD006 DA62 fixed wing.
Protocol: GD00X
Channel 5: Lights on/off
Forum: https://www.deviationtx.com/forum/protocol-development/8120-c-17-transport",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,499,2018-12-19T22:25:05Z,2018-12-20T13:21:30Z,2019-03-05T00:10:59Z,MERGED,True,0,229,32,https://github.com/goebish,Remove Beken BK2421 / BK2423 support,1,[],https://github.com/DeviationTX/deviation/pull/499,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/499,"Remove Beken BK2421/BK2423 support as a nrf24l01 alternative, only @hexfet used it and it's not required anymore.","Remove Beken BK2421/BK2423 support as a nrf24l01 alternative, only @hexfet used it and it's not required anymore.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,500,2018-12-20T05:20:34Z,2018-12-20T05:25:42Z,2018-12-20T05:25:42Z,MERGED,True,318,0,3,https://github.com/vladislavy,"Protocol for WLToys V911S, from goebish",1,[],https://github.com/DeviationTX/deviation/pull/500,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/500,"Add WLToys V911S protocol
Channel 5: calibrate
Forum: https://www.deviationtx.com/forum/protocol-development/8043-protocol-for-wl-heli-v911-s","Add WLToys V911S protocol
Channel 5: calibrate
Forum: https://www.deviationtx.com/forum/protocol-development/8043-protocol-for-wl-heli-v911-s",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,501,2018-12-20T05:46:39Z,2018-12-20T05:50:54Z,2018-12-20T05:50:54Z,MERGED,True,258,0,3,https://github.com/vladislavy,"Protocol for GD00X, from goebish",1,[],https://github.com/DeviationTX/deviation/pull/501,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/501,"Add protocol for C-17 Transport / GD006 DA62 fixed wing.
Protocol: GD00X
Channel 5: Lights on/off
Forum: https://www.deviationtx.com/forum/protocol-development/8120-c-17-transport","Add protocol for C-17 Transport / GD006 DA62 fixed wing.
Protocol: GD00X
Channel 5: Lights on/off
Forum: https://www.deviationtx.com/forum/protocol-development/8120-c-17-transport",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,502,2018-12-20T07:04:24Z,2018-12-20T11:59:51Z,2019-01-05T14:39:16Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix memory access out of range issue,1,[],https://github.com/DeviationTX/deviation/pull/502,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/502,This can lead to accidentally override other variable to zero.,This can lead to accidentally override other variable to zero.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,502,2018-12-20T07:04:24Z,2018-12-20T11:59:51Z,2019-01-05T14:39:16Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix memory access out of range issue,1,[],https://github.com/DeviationTX/deviation/pull/502,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/502#issuecomment-448895717,This can lead to accidentally override other variable to zero.,@goebish please help check.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,502,2018-12-20T07:04:24Z,2018-12-20T11:59:51Z,2019-01-05T14:39:16Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix memory access out of range issue,1,[],https://github.com/DeviationTX/deviation/pull/502,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/502#issuecomment-448902039,This can lead to accidentally override other variable to zero.,"this gets noticed by the new compiler.
protocol/v911s_nrf24l01.c: In function 'V911S_send_packet':
protocol/v911s_nrf24l01.c:136:9: warning: 'memset' writing 14 bytes into a region of size 13 overflows the destination [-Wstringop-overflow=]
memset(packet+3,0x00,14);
^~~~~~~~~~~~~~~~~~~~~~~~",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,502,2018-12-20T07:04:24Z,2018-12-20T11:59:51Z,2019-01-05T14:39:16Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix memory access out of range issue,1,[],https://github.com/DeviationTX/deviation/pull/502,https://github.com/vladislavy,4,https://github.com/DeviationTX/deviation/pull/502#issuecomment-448936249,This can lead to accidentally override other variable to zero.,"static u8 packet[V911S_PACKET_SIZE];
...
memset(packet+3, 0x00, V911S_PACKET_SIZE - 3);",True,"{'THUMBS_UP': ['https://github.com/howard0su', 'https://github.com/goebish']}"
DeviationTX/deviation,https://github.com/DeviationTX/deviation,502,2018-12-20T07:04:24Z,2018-12-20T11:59:51Z,2019-01-05T14:39:16Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix memory access out of range issue,1,[],https://github.com/DeviationTX/deviation/pull/502,https://github.com/pascallanger,5,https://github.com/DeviationTX/deviation/pull/502#issuecomment-448998355,This can lead to accidentally override other variable to zero.,"Thanks, I've updated my local repo. It will be pushed in the next commit. But as you said it does not have any impact since the packet table is large in Multi.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,502,2018-12-20T07:04:24Z,2018-12-20T11:59:51Z,2019-01-05T14:39:16Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix memory access out of range issue,1,[],https://github.com/DeviationTX/deviation/pull/502,https://github.com/TheRealMoeder,6,https://github.com/DeviationTX/deviation/pull/502#issuecomment-449001823,This can lead to accidentally override other variable to zero.,@goebish do you see any (dis)advantage in using a common packet table for all protocols?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,502,2018-12-20T07:04:24Z,2018-12-20T11:59:51Z,2019-01-05T14:39:16Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix memory access out of range issue,1,[],https://github.com/DeviationTX/deviation/pull/502,https://github.com/goebish,7,https://github.com/DeviationTX/deviation/pull/502#issuecomment-449002470,This can lead to accidentally override other variable to zero.,"That's what we should do, that would save quite a bit of RAM in non modular builds.
Also, we should use common functions for channel scaling, but that will take some extra ROM space for the modular build.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,502,2018-12-20T07:04:24Z,2018-12-20T11:59:51Z,2019-01-05T14:39:16Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix memory access out of range issue,1,[],https://github.com/DeviationTX/deviation/pull/502,https://github.com/TheRealMoeder,8,https://github.com/DeviationTX/deviation/pull/502#issuecomment-449003255,This can lead to accidentally override other variable to zero.,"I wonder if we could load more stuff into the Ram to relieve rom? We only use 10k out of 16k, if the output is correct.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,502,2018-12-20T07:04:24Z,2018-12-20T11:59:51Z,2019-01-05T14:39:16Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix memory access out of range issue,1,[],https://github.com/DeviationTX/deviation/pull/502,https://github.com/goebish,9,https://github.com/DeviationTX/deviation/pull/502#issuecomment-449003701,This can lead to accidentally override other variable to zero.,I think this would have minimal impact on ROM usage.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,502,2018-12-20T07:04:24Z,2018-12-20T11:59:51Z,2019-01-05T14:39:16Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix memory access out of range issue,1,[],https://github.com/DeviationTX/deviation/pull/502,https://github.com/pascallanger,10,https://github.com/DeviationTX/deviation/pull/502#issuecomment-449007920,This can lead to accidentally override other variable to zero.,"In Multi, a lot of tables freq hopping, packet, calib data... are shared across all the protocols. From a function perspective channel scaling, channel flags are also commonly shared.",True,{'THUMBS_UP': ['https://github.com/TheRealMoeder']}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,502,2018-12-20T07:04:24Z,2018-12-20T11:59:51Z,2019-01-05T14:39:16Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix memory access out of range issue,1,[],https://github.com/DeviationTX/deviation/pull/502,https://github.com/TheRealMoeder,11,https://github.com/DeviationTX/deviation/pull/502#issuecomment-449009886,This can lead to accidentally override other variable to zero.,"No, what I mean is we have probably 4k of ram ""left"" unused on devo7e, so as much could probably be saved from rom by creating a ""non vital functions"" module in addition to the protocols module... Or am I wrong here?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,502,2018-12-20T07:04:24Z,2018-12-20T11:59:51Z,2019-01-05T14:39:16Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix memory access out of range issue,1,[],https://github.com/DeviationTX/deviation/pull/502,https://github.com/howard0su,12,https://github.com/DeviationTX/deviation/pull/502#issuecomment-449011641,This can lead to accidentally override other variable to zero.,"I tried something like this before. I moved all packet as a shared data structure in main firmware and expose it as a reference to modular. It will not save any ROM but will save some RAM in non-modular build. and also give a little bit more RAM for modular to use. The net win is about 100 bytes. Not really much be meaningful.
I can go back dig my local repro to see if I still have those changes. but as I explained, I am not super exciting on this approach.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,502,2018-12-20T07:04:24Z,2018-12-20T11:59:51Z,2019-01-05T14:39:16Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix memory access out of range issue,1,[],https://github.com/DeviationTX/deviation/pull/502,https://github.com/goebish,13,https://github.com/DeviationTX/deviation/pull/502#issuecomment-449011800,This can lead to accidentally override other variable to zero.,"Having a small 1-2kB module with common protocol functions & declarations would be fine if technically feasible, but is it worth it ?
Channel scaling function doesn't take that much space.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,502,2018-12-20T07:04:24Z,2018-12-20T11:59:51Z,2019-01-05T14:39:16Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix memory access out of range issue,1,[],https://github.com/DeviationTX/deviation/pull/502,https://github.com/goebish,14,https://github.com/DeviationTX/deviation/pull/502#issuecomment-449012842,This can lead to accidentally override other variable to zero.,"Perhaps I'm not partial because I do not own a 7e, but removing STANDARD_GUI support from the 7e build would save a lot of discussions and hassle, cc @PhracturedBlue  ;)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,502,2018-12-20T07:04:24Z,2018-12-20T11:59:51Z,2019-01-05T14:39:16Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix memory access out of range issue,1,[],https://github.com/DeviationTX/deviation/pull/502,https://github.com/TheRealMoeder,15,https://github.com/DeviationTX/deviation/pull/502#issuecomment-449018983,This can lead to accidentally override other variable to zero.,"I wasn't only thinking protocol but also other stuff. On the other hand if we need the rom space for additional features we run into memory issues(e.g. Layout editor), although especially for gui there could also be a lot of memory spared. But on the general 7e issue I'm totally with you, even though I own one. The advent of ""devo7e-256-clones"" have made those the entry level deviation TX. I support the notion to make a branch 5.1 of the current state and start off with major changes like new gcc, libopencm3, telemetry haulover, voice haulover and removing standard gui in the new v6 development.",True,{'THUMBS_UP': ['https://github.com/goebish']}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,502,2018-12-20T07:04:24Z,2018-12-20T11:59:51Z,2019-01-05T14:39:16Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix memory access out of range issue,1,[],https://github.com/DeviationTX/deviation/pull/502,https://github.com/howard0su,16,https://github.com/DeviationTX/deviation/pull/502#issuecomment-449019020,This can lead to accidentally override other variable to zero.,"I think the current 7e is okay. This is current situation:
ROM: 0x08003000 - 0x0801fd54 = 115.33kB
RAM: 0x20000000 - 0x20002a00 =  10.50kB + 4KB for module",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,502,2018-12-20T07:04:24Z,2018-12-20T11:59:51Z,2019-01-05T14:39:16Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix memory access out of range issue,1,[],https://github.com/DeviationTX/deviation/pull/502,https://github.com/TheRealMoeder,17,https://github.com/DeviationTX/deviation/pull/502#issuecomment-449019889,This can lead to accidentally override other variable to zero.,"@howard0su yes, but already plenty of features have been left out (extended telemetry, data log, layout editor, voice support, language support (although the latter is mainly a ram issue, iirc))",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,502,2018-12-20T07:04:24Z,2018-12-20T11:59:51Z,2019-01-05T14:39:16Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix memory access out of range issue,1,[],https://github.com/DeviationTX/deviation/pull/502,https://github.com/howard0su,18,https://github.com/DeviationTX/deviation/pull/502#issuecomment-449020009,This can lead to accidentally override other variable to zero.,One possible solution for standard gui is moving it to emulator and produce the model file which is still be able to consume by Tx.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,502,2018-12-20T07:04:24Z,2018-12-20T11:59:51Z,2019-01-05T14:39:16Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix memory access out of range issue,1,[],https://github.com/DeviationTX/deviation/pull/502,https://github.com/howard0su,19,https://github.com/DeviationTX/deviation/pull/502#issuecomment-449020275,This can lead to accidentally override other variable to zero.,I am already working on some language support stuffs. let me file a issue to describe what in my mind.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,502,2018-12-20T07:04:24Z,2018-12-20T11:59:51Z,2019-01-05T14:39:16Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix memory access out of range issue,1,[],https://github.com/DeviationTX/deviation/pull/502,https://github.com/TheRealMoeder,20,https://github.com/DeviationTX/deviation/pull/502#issuecomment-450984845,This can lead to accidentally override other variable to zero.,"While browsing through the code the telemetry code again struck me as very ineffective. What do you think of moving telem_dsm.c, telem_devo.c and telem_frsky.c into additional modules and only loading them together with the according protocols? This could probably easily save 1 kB of ROM",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,502,2018-12-20T07:04:24Z,2018-12-20T11:59:51Z,2019-01-05T14:39:16Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix memory access out of range issue,1,[],https://github.com/DeviationTX/deviation/pull/502,https://github.com/howard0su,21,https://github.com/DeviationTX/deviation/pull/502#issuecomment-451025614,This can lead to accidentally override other variable to zero.,@TheRealMoeder I didn't find these modules in devo7e.map. So I believe that should not really matter. You can browse the map file to see if there is anything catch your eyes.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,502,2018-12-20T07:04:24Z,2018-12-20T11:59:51Z,2019-01-05T14:39:16Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix memory access out of range issue,1,[],https://github.com/DeviationTX/deviation/pull/502,https://github.com/TheRealMoeder,22,https://github.com/DeviationTX/deviation/pull/502#issuecomment-451474696,This can lead to accidentally override other variable to zero.,"There are big switches in all 3 files which are only needed in the associated protocols:
0x0800b880       0x7c objs/devo7e/telemetry.o
.text._devo_value
0x0800b8fc       0x1e objs/devo7e/telemetry.o
0x0800b8fc                _devo_value
fill         0x0800b91a        0x2
.text._devo_str_by_value
0x0800b91c       0x74 objs/devo7e/telemetry.o
0x0800b91c                _devo_str_by_value
.text._devo_name
0x0800b990       0x58 objs/devo7e/telemetry.o
0x0800b990                _devo_name
.text._devo_short_name
0x0800b9e8       0x58 objs/devo7e/telemetry.o
0x0800b9e8                _devo_short_name
.text._devo_get_max_value
0x0800ba40       0x34 objs/devo7e/telemetry.o
0x0800ba40                _devo_get_max_value
.text._devo_get_min_value
0x0800ba74       0x32 objs/devo7e/telemetry.o
0x0800ba74                _devo_get_min_value
fill         0x0800baa6        0x2
.text._dsm_value
0x0800baa8       0x28 objs/devo7e/telemetry.o
0x0800baa8                _dsm_value
.text._dsm_str_by_value
0x0800bad0       0xbc objs/devo7e/telemetry.o
0x0800bad0                _dsm_str_by_value
.text._dsm_name
0x0800bb8c      0x104 objs/devo7e/telemetry.o
0x0800bb8c                _dsm_name
.text._dsm_get_max_value
0x0800bc90       0x60 objs/devo7e/telemetry.o
0x0800bc90                _dsm_get_max_value
.text._dsm_get_min_value
0x0800bcf0       0x18 objs/devo7e/telemetry.o
0x0800bcf0                _dsm_get_min_value
.text._frsky_str_by_value
0x0800bd08       0x3c objs/devo7e/telemetry.o
0x0800bd08                _frsky_str_by_value
.text._frsky_short_name
0x0800bd44       0x5c objs/devo7e/telemetry.o
0x0800bd44                _frsky_short_name
.text._frsky_name
0x0800bda0       0x3c objs/devo7e/telemetry.o
0x0800bda0                _frsky_name
.text._frsky_get_max_value
0x0800bddc       0x18 objs/devo7e/telemetry.o
0x0800bddc                _frsky_get_max_value
.text._frsky_get_min_value
0x0800bdf4        0xc objs/devo7e/telemetry.o
0x0800bdf4                _frsky_get_min_value
Maybe move those files as includes to the according protocols and bump up reserved memory for modules to 5K? Looking at telemetry.c, even more space could be saved, if we had general _name/max/in/str etc functions available (for example via additional PROTOCMDS...??)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,502,2018-12-20T07:04:24Z,2018-12-20T11:59:51Z,2019-01-05T14:39:16Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix memory access out of range issue,1,[],https://github.com/DeviationTX/deviation/pull/502,https://github.com/PhracturedBlue,23,https://github.com/DeviationTX/deviation/pull/502#issuecomment-451481814,This can lead to accidentally override other variable to zero.,"As you noted one of the main reasons these functions are where they are is due to them applying to the largest protocols (frsky/dsm/devo) and not fitting in the 4k limit.  If I recall, there was a reason we kept the protocol files at 4k.  Maybe page alignment?  I can't think of any pages that are 4k aligned that would make a difference.  Maybe it was only the RAM limit on the 7e.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,502,2018-12-20T07:04:24Z,2018-12-20T11:59:51Z,2019-01-05T14:39:16Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix memory access out of range issue,1,[],https://github.com/DeviationTX/deviation/pull/502,https://github.com/TheRealMoeder,24,https://github.com/DeviationTX/deviation/pull/502#issuecomment-451490623,This can lead to accidentally override other variable to zero.,"From digging the forum archive, most I can find is in your original 7e thread back in 2013, which reads  like it was mostly the ram issue, since you had to strip down the gui ram requirement.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,502,2018-12-20T07:04:24Z,2018-12-20T11:59:51Z,2019-01-05T14:39:16Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix memory access out of range issue,1,[],https://github.com/DeviationTX/deviation/pull/502,https://github.com/howard0su,25,https://github.com/DeviationTX/deviation/pull/502#issuecomment-451493706,This can lead to accidentally override other variable to zero.,"devo7e is already tight on RAM. as I am working on loc support for devo7e, the issue mainly around RAM limit to store the loc strings. I vote remove standard UI in new version and keep module as 4KB.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,502,2018-12-20T07:04:24Z,2018-12-20T11:59:51Z,2019-01-05T14:39:16Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix memory access out of range issue,1,[],https://github.com/DeviationTX/deviation/pull/502,https://github.com/howard0su,26,https://github.com/DeviationTX/deviation/pull/502#issuecomment-451644308,This can lead to accidentally override other variable to zero.,"shall we consider to move USB functionality like UMASS out to a module?
When we enable USB, anyway the protocol code doesn't run anyway. if we can
move umass code out, the saving is much bigger than 1KB.
…
On Sat, Jan 5, 2019 at 12:18 AM TheRealMoeder ***@***.***> wrote:
 From digging the forum archive, most I can find is in your original 7e
 thread back in 2013, which reads like it was mostly the ram issue, since
 you had to strip down the gui ram requirement.

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#502 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRBnND1o1npjwl3pJGao61fqLRDB2ks5u_37igaJpZM4ZboF0>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,502,2018-12-20T07:04:24Z,2018-12-20T11:59:51Z,2019-01-05T14:39:16Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix memory access out of range issue,1,[],https://github.com/DeviationTX/deviation/pull/502,https://github.com/PhracturedBlue,27,https://github.com/DeviationTX/deviation/pull/502#issuecomment-451655541,This can lead to accidentally override other variable to zero.,"I've tried it before.  I think there is a requirement somewhere that makes it not work.  If you are successful, by all means though.  Maybe it was that the usb + mass storage (or the usb + serial) doesn't fit in 4k.  I don't recall.  I believe you could also save quite a bit of space  if you could use the mass storage driver from libopencm.  I spent a lot of time struggling with it, and in the end couldn't get it to work...but that was a couple years ago.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,502,2018-12-20T07:04:24Z,2018-12-20T11:59:51Z,2019-01-05T14:39:16Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix memory access out of range issue,1,[],https://github.com/DeviationTX/deviation/pull/502,https://github.com/PhracturedBlue,28,https://github.com/DeviationTX/deviation/pull/502#issuecomment-451656798,This can lead to accidentally override other variable to zero.,"Another thing to consider would be to load the page code in a module fashion (not overwriting the protocol memory, but define a new memory region that can hold the largest page and load the current page logic there).",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,502,2018-12-20T07:04:24Z,2018-12-20T11:59:51Z,2019-01-05T14:39:16Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix memory access out of range issue,1,[],https://github.com/DeviationTX/deviation/pull/502,https://github.com/howard0su,29,https://github.com/DeviationTX/deviation/pull/502#issuecomment-451659044,This can lead to accidentally override other variable to zero.,"Let me try mass driver in libopencm3.

Are u saying one page one module?
…
On Sat, Jan 5, 2019 at 9:50 PM PhracturedBlue ***@***.***> wrote:
 Another thing to consider would be to load the page code in a module
 fashion (not overwriting the protocol memory, but define a new memory
 region that can hold the largest page and load the current page logic
 there).

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#502 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRKiEw_fDoHB19YJxeT-5X9ckkO8bks5vAK2rgaJpZM4ZboF0>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,502,2018-12-20T07:04:24Z,2018-12-20T11:59:51Z,2019-01-05T14:39:16Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix memory access out of range issue,1,[],https://github.com/DeviationTX/deviation/pull/502,https://github.com/PhracturedBlue,30,https://github.com/DeviationTX/deviation/pull/502#issuecomment-451661033,This can lead to accidentally override other variable to zero.,"yes.  one page per module in a different reservation area than the protocol.  we already have a very clean page API, so it should be easy to do.  I don't think that page functions can be called from anywhere other than when the page is active (maybe the main page is special?)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,503,2018-12-20T07:35:04Z,2018-12-28T17:47:43Z,2018-12-29T00:18:58Z,MERGED,True,72,53,18,https://github.com/howard0su,Cleanup variable declaration,5,[],https://github.com/DeviationTX/deviation/pull/503,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/503,"Make sure we only declare variables in header files. Move allocation to .c file. Also declare the local variables with ""static"".","Make sure we only declare variables in header files. Move allocation to .c file. Also declare the local variables with ""static"".",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,503,2018-12-20T07:35:04Z,2018-12-28T17:47:43Z,2018-12-29T00:18:58Z,MERGED,True,72,53,18,https://github.com/howard0su,Cleanup variable declaration,5,[],https://github.com/DeviationTX/deviation/pull/503,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/503#issuecomment-448995360,"Make sure we only declare variables in header files. Move allocation to .c file. Also declare the local variables with ""static"".",@goebish can u help testing the change 9c0c37c as I don't have hardware to do so. This trick can help reduce the ROM size about 50bytes. I can see such practice in many protocols. We need consider to fix it.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,503,2018-12-20T07:35:04Z,2018-12-28T17:47:43Z,2018-12-29T00:18:58Z,MERGED,True,72,53,18,https://github.com/howard0su,Cleanup variable declaration,5,[],https://github.com/DeviationTX/deviation/pull/503,https://github.com/goebish,3,https://github.com/DeviationTX/deviation/pull/503#issuecomment-449000174,"Make sure we only declare variables in header files. Move allocation to .c file. Also declare the local variables with ""static"".","I tested with a Blade Inductrix, it works but default channel order is incorrect (probably not because of this PR), it should be TAER for DSM2/X but it's AETR now:
https://imgur.com/a/3pUC3gO",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,503,2018-12-20T07:35:04Z,2018-12-28T17:47:43Z,2018-12-29T00:18:58Z,MERGED,True,72,53,18,https://github.com/howard0su,Cleanup variable declaration,5,[],https://github.com/DeviationTX/deviation/pull/503,https://github.com/howard0su,4,https://github.com/DeviationTX/deviation/pull/503#issuecomment-449000732,"Make sure we only declare variables in header files. Move allocation to .c file. Also declare the local variables with ""static"".",I can be caused by my other change on channel mapping. let me check.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,503,2018-12-20T07:35:04Z,2018-12-28T17:47:43Z,2018-12-29T00:18:58Z,MERGED,True,72,53,18,https://github.com/howard0su,Cleanup variable declaration,5,[],https://github.com/DeviationTX/deviation/pull/503,https://github.com/goebish,5,https://github.com/DeviationTX/deviation/pull/503#issuecomment-449001039,"Make sure we only declare variables in header files. Move allocation to .c file. Also declare the local variables with ""static"".","After resetting the model it's defaulting to EATR now, which is still wrong.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,503,2018-12-20T07:35:04Z,2018-12-28T17:47:43Z,2018-12-29T00:18:58Z,MERGED,True,72,53,18,https://github.com/howard0su,Cleanup variable declaration,5,[],https://github.com/DeviationTX/deviation/pull/503,https://github.com/howard0su,6,https://github.com/DeviationTX/deviation/pull/503#issuecomment-449002456,"Make sure we only declare variables in header files. Move allocation to .c file. Also declare the local variables with ""static"".",cannot find obvious error. both dsm code and protocol.c code looks correct. need debug further.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,503,2018-12-20T07:35:04Z,2018-12-28T17:47:43Z,2018-12-29T00:18:58Z,MERGED,True,72,53,18,https://github.com/howard0su,Cleanup variable declaration,5,[],https://github.com/DeviationTX/deviation/pull/503,https://github.com/goebish,7,https://github.com/DeviationTX/deviation/pull/503#issuecomment-449005550,"Make sure we only declare variables in header files. Move allocation to .c file. Also declare the local variables with ""static"".",I confirm that a version dating from 1 week ago have correct default channel order for DSM2/DSMX.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,503,2018-12-20T07:35:04Z,2018-12-28T17:47:43Z,2018-12-29T00:18:58Z,MERGED,True,72,53,18,https://github.com/howard0su,Cleanup variable declaration,5,[],https://github.com/DeviationTX/deviation/pull/503,https://github.com/howard0su,8,https://github.com/DeviationTX/deviation/pull/503#issuecomment-449006792,"Make sure we only declare variables in header files. Move allocation to .c file. Also declare the local variables with ""static"".","I think i know why. Original the channel map doesn't require load the module. After my change, the channel map have to be loaded from module. In module configuration menu, we select DSMX then exit from the menu. The module is not loaded at all. So the channel map is incorrect. If you do BIND in the menu, the channel mapping is correct then.
We cannot delay load the module. Let me think about how to fix this.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,503,2018-12-20T07:35:04Z,2018-12-28T17:47:43Z,2018-12-29T00:18:58Z,MERGED,True,72,53,18,https://github.com/howard0su,Cleanup variable declaration,5,[],https://github.com/DeviationTX/deviation/pull/503,https://github.com/howard0su,9,https://github.com/DeviationTX/deviation/pull/503#issuecomment-449018110,"Make sure we only declare variables in header files. Move allocation to .c file. Also declare the local variables with ""static"".",check #504 which should fix channel map problem.,True,{'THUMBS_UP': ['https://github.com/goebish']}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,504,2018-12-20T14:32:09Z,2018-12-20T15:00:33Z,2018-12-20T16:14:12Z,MERGED,True,23,19,2,https://github.com/howard0su,Set channel mapping during PROTOCOL_Load,1,[],https://github.com/DeviationTX/deviation/pull/504,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/504,"We need channel mapping after we load the protocol, and before initialize the protocol. Fix this to align with the original logic.","We need channel mapping after we load the protocol, and before initialize the protocol. Fix this to align with the original logic.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,504,2018-12-20T14:32:09Z,2018-12-20T15:00:33Z,2018-12-20T16:14:12Z,MERGED,True,23,19,2,https://github.com/howard0su,Set channel mapping during PROTOCOL_Load,1,[],https://github.com/DeviationTX/deviation/pull/504,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/504#issuecomment-449018007,"We need channel mapping after we load the protocol, and before initialize the protocol. Fix this to align with the original logic.",this is a regression from my change on channel mapping. Please review and merge.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,507,2018-12-21T16:25:30Z,2018-12-23T15:56:52Z,2018-12-23T15:56:52Z,CLOSED,False,365,46,9,https://github.com/howard0su,Support color in DevoF12E,5,[],https://github.com/DeviationTX/deviation/pull/507,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/507,"Use invert color to display selected item.
update emu as well.","Use invert color to display selected item.
update emu as well.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,507,2018-12-21T16:25:30Z,2018-12-23T15:56:52Z,2018-12-23T15:56:52Z,CLOSED,False,365,46,9,https://github.com/howard0su,Support color in DevoF12E,5,[],https://github.com/DeviationTX/deviation/pull/507,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/507#issuecomment-449645358,"Use invert color to display selected item.
update emu as well.",needs more testing in real Tx.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,508,2018-12-22T12:34:45Z,2018-12-23T16:40:30Z,2018-12-25T16:22:42Z,MERGED,True,2,1,1,https://github.com/howard0su,Fix fltk build after migrate to latest osx,1,[],https://github.com/DeviationTX/deviation/pull/508,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/508,Latest OSX mojava has the build failure. Fix it via passing the correct CFLAGS and LDFLAGS.,Latest OSX mojava has the build failure. Fix it via passing the correct CFLAGS and LDFLAGS.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,508,2018-12-22T12:34:45Z,2018-12-23T16:40:30Z,2018-12-25T16:22:42Z,MERGED,True,2,1,1,https://github.com/howard0su,Fix fltk build after migrate to latest osx,1,[],https://github.com/DeviationTX/deviation/pull/508,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/508#issuecomment-449645327,Latest OSX mojava has the build failure. Fix it via passing the correct CFLAGS and LDFLAGS.,can i get this in? This is pretty straightforward change.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,510,2018-12-23T07:25:12Z,2018-12-28T18:47:51Z,2018-12-29T00:18:46Z,MERGED,True,3,17,3,https://github.com/howard0su,"Remove Delay, use usleep everywhere",1,[],https://github.com/DeviationTX/deviation/pull/510,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/510,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,511,2018-12-23T16:05:36Z,2018-12-28T17:20:31Z,2018-12-29T00:19:12Z,MERGED,True,159,42,3,https://github.com/howard0su,New Format of localization File,4,[],https://github.com/DeviationTX/deviation/pull/511,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/511,"This change introduced a new file format for lang.* under language folder. The file is formatted in the way:
Line 1: LanguageName
Line2-N: <16bit FNV Hash of english string>Localized String
The change increases the performance switching the language as we don't only read half of the content and don't need calculate hash as the hash is compute during build.
The change significantly reduces the size of localized file. After this change, I can successfully pack all localization files into 64KB SPI flash on F12E.","This change introduced a new file format for lang.* under language folder. The file is formatted in the way:
Line 1: LanguageName
Line2-N: <16bit FNV Hash of english string>Localized String
The change increases the performance switching the language as we don't only read half of the content and don't need calculate hash as the hash is compute during build.
The change significantly reduces the size of localized file. After this change, I can successfully pack all localization files into 64KB SPI flash on F12E.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,511,2018-12-23T16:05:36Z,2018-12-28T17:20:31Z,2018-12-29T00:19:12Z,MERGED,True,159,42,3,https://github.com/howard0su,New Format of localization File,4,[],https://github.com/DeviationTX/deviation/pull/511,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/511#issuecomment-449646047,"This change introduced a new file format for lang.* under language folder. The file is formatted in the way:
Line 1: LanguageName
Line2-N: <16bit FNV Hash of english string>Localized String
The change increases the performance switching the language as we don't only read half of the content and don't need calculate hash as the hash is compute during build.
The change significantly reduces the size of localized file. After this change, I can successfully pack all localization files into 64KB SPI flash on F12E.","Need someone testing on devo8. So far devo7e and devof12e doesn't support localization, which are the only TXs I have.
This change is another step towards full localization support for f12e.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,511,2018-12-23T16:05:36Z,2018-12-28T17:20:31Z,2018-12-29T00:19:12Z,MERGED,True,159,42,3,https://github.com/howard0su,New Format of localization File,4,[],https://github.com/DeviationTX/deviation/pull/511,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/511#issuecomment-449684825,"This change introduced a new file format for lang.* under language folder. The file is formatted in the way:
Line 1: LanguageName
Line2-N: <16bit FNV Hash of english string>Localized String
The change increases the performance switching the language as we don't only read half of the content and don't need calculate hash as the hash is compute during build.
The change significantly reduces the size of localized file. After this change, I can successfully pack all localization files into 64KB SPI flash on F12E.",Add back the support for old files. As we are sorting the strings in new format by hash. I assume the first hash byte is not ':' in new format. So I can avoid to add version number here. I verified that all of current languages works fine in emu_devo8.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,511,2018-12-23T16:05:36Z,2018-12-28T17:20:31Z,2018-12-29T00:19:12Z,MERGED,True,159,42,3,https://github.com/howard0su,New Format of localization File,4,[],https://github.com/DeviationTX/deviation/pull/511,https://github.com/howard0su,4,https://github.com/DeviationTX/deviation/pull/511#issuecomment-449743238,"This change introduced a new file format for lang.* under language folder. The file is formatted in the way:
Line 1: LanguageName
Line2-N: <16bit FNV Hash of english string>Localized String
The change increases the performance switching the language as we don't only read half of the content and don't need calculate hash as the hash is compute during build.
The change significantly reduces the size of localized file. After this change, I can successfully pack all localization files into 64KB SPI flash on F12E.",Can I get review on this change? Some additional work to create font file only contains the characters in localized string file depends on this.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,511,2018-12-23T16:05:36Z,2018-12-28T17:20:31Z,2018-12-29T00:19:12Z,MERGED,True,159,42,3,https://github.com/howard0su,New Format of localization File,4,[],https://github.com/DeviationTX/deviation/pull/511,https://github.com/howard0su,5,https://github.com/DeviationTX/deviation/pull/511#issuecomment-450360388,"This change introduced a new file format for lang.* under language folder. The file is formatted in the way:
Line 1: LanguageName
Line2-N: <16bit FNV Hash of english string>Localized String
The change increases the performance switching the language as we don't only read half of the content and don't need calculate hash as the hash is compute during build.
The change significantly reduces the size of localized file. After this change, I can successfully pack all localization files into 64KB SPI flash on F12E.",Need one more approve.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,512,2018-12-24T01:06:42Z,2019-01-23T04:28:36Z,2019-01-23T04:28:36Z,CLOSED,False,26,4,4,https://github.com/howard0su,Use ASCII only font for devo7e,1,['On Hold'],https://github.com/DeviationTX/deviation/pull/512,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/512,No localization support for devo7e. So generate a ascii (0-255) only font to reduce the size of ROM and the time to flash a devo7e.,No localization support for devo7e. So generate a ascii (0-255) only font to reduce the size of ROM and the time to flash a devo7e.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,512,2018-12-24T01:06:42Z,2019-01-23T04:28:36Z,2019-01-23T04:28:36Z,CLOSED,False,26,4,4,https://github.com/howard0su,Use ASCII only font for devo7e,1,['On Hold'],https://github.com/DeviationTX/deviation/pull/512,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/512#issuecomment-449673754,No localization support for devo7e. So generate a ascii (0-255) only font to reduce the size of ROM and the time to flash a devo7e.,this may applies to at9 15normal font as well. I don't have a at9 and don't know if there is a plan to support location for at9.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,512,2018-12-24T01:06:42Z,2019-01-23T04:28:36Z,2019-01-23T04:28:36Z,CLOSED,False,26,4,4,https://github.com/howard0su,Use ASCII only font for devo7e,1,['On Hold'],https://github.com/DeviationTX/deviation/pull/512,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/512#issuecomment-449743217,No localization support for devo7e. So generate a ascii (0-255) only font to reduce the size of ROM and the time to flash a devo7e.,"Can I get review on this change? Some additional work to create font file only contains the characters in localized string file depends on this.
I am new to Perl. Please review Perl change including coding style and naming.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,512,2018-12-24T01:06:42Z,2019-01-23T04:28:36Z,2019-01-23T04:28:36Z,CLOSED,False,26,4,4,https://github.com/howard0su,Use ASCII only font for devo7e,1,['On Hold'],https://github.com/DeviationTX/deviation/pull/512,https://github.com/hexfet,4,https://github.com/DeviationTX/deviation/pull/512#issuecomment-449886119,No localization support for devo7e. So generate a ascii (0-255) only font to reduce the size of ROM and the time to flash a devo7e.,"Shouldn't this apply to all transmitters with NO_LANGUAGE_SUPPORT defined in target_defs.h?  And that means it should not apply to devo7e-256.
Another reason to make it dependent on that define is to allow for people making their own custom builds that remove other features in order to enable language support.
I'm not a perl person either but those changes look okay to me.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,512,2018-12-24T01:06:42Z,2019-01-23T04:28:36Z,2019-01-23T04:28:36Z,CLOSED,False,26,4,4,https://github.com/howard0su,Use ASCII only font for devo7e,1,['On Hold'],https://github.com/DeviationTX/deviation/pull/512,https://github.com/howard0su,5,https://github.com/DeviationTX/deviation/pull/512#issuecomment-449897784,No localization support for devo7e. So generate a ascii (0-255) only font to reduce the size of ROM and the time to flash a devo7e.,"@hexfet you are right. I will revert the change for devo7e-256.
I think you made a good point that we need support a better customization system. In today's implementation, we cannot do the different build tasks based on the different definition in target_defs.h. I will start an issue to capture the work.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,512,2018-12-24T01:06:42Z,2019-01-23T04:28:36Z,2019-01-23T04:28:36Z,CLOSED,False,26,4,4,https://github.com/howard0su,Use ASCII only font for devo7e,1,['On Hold'],https://github.com/DeviationTX/deviation/pull/512,https://github.com/howard0su,6,https://github.com/DeviationTX/deviation/pull/512#issuecomment-449903092,No localization support for devo7e. So generate a ascii (0-255) only font to reduce the size of ROM and the time to flash a devo7e.,this is not required for some Tx which is not including 12/15normal.fon anyway.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,512,2018-12-24T01:06:42Z,2019-01-23T04:28:36Z,2019-01-23T04:28:36Z,CLOSED,False,26,4,4,https://github.com/howard0su,Use ASCII only font for devo7e,1,['On Hold'],https://github.com/DeviationTX/deviation/pull/512,https://github.com/TheRealMoeder,7,https://github.com/DeviationTX/deviation/pull/512#issuecomment-450314285,No localization support for devo7e. So generate a ascii (0-255) only font to reduce the size of ROM and the time to flash a devo7e.,How much Rom is there actually to gain? I was always thinking that we could possibly provide localized 7e builds by preprocessing lang files in the build process,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,512,2018-12-24T01:06:42Z,2019-01-23T04:28:36Z,2019-01-23T04:28:36Z,CLOSED,False,26,4,4,https://github.com/howard0su,Use ASCII only font for devo7e,1,['On Hold'],https://github.com/DeviationTX/deviation/pull/512,https://github.com/howard0su,8,https://github.com/DeviationTX/deviation/pull/512#issuecomment-450337442,No localization support for devo7e. So generate a ascii (0-255) only font to reduce the size of ROM and the time to flash a devo7e.,"This change is reduce spi flash needs.
I think you are referring the other change about changing localization file. But for now, I did not tried devo7e. Rom is not concern if we remove standard mixer. but RAM is:
region `ram' overflowed by 4340 bytes.
(I disable standard mixer and enable language support) the RAM comes from both localization file content which is 8K, plus font file RAM.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,512,2018-12-24T01:06:42Z,2019-01-23T04:28:36Z,2019-01-23T04:28:36Z,CLOSED,False,26,4,4,https://github.com/howard0su,Use ASCII only font for devo7e,1,['On Hold'],https://github.com/DeviationTX/deviation/pull/512,https://github.com/howard0su,9,https://github.com/DeviationTX/deviation/pull/512#issuecomment-450487705,No localization support for devo7e. So generate a ascii (0-255) only font to reduce the size of ROM and the time to flash a devo7e.,"Please hold, I am working on supporting localization for devo7e.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,512,2018-12-24T01:06:42Z,2019-01-23T04:28:36Z,2019-01-23T04:28:36Z,CLOSED,False,26,4,4,https://github.com/howard0su,Use ASCII only font for devo7e,1,['On Hold'],https://github.com/DeviationTX/deviation/pull/512,https://github.com/TheRealMoeder,10,https://github.com/DeviationTX/deviation/pull/512#issuecomment-456521301,No localization support for devo7e. So generate a ascii (0-255) only font to reduce the size of ROM and the time to flash a devo7e.,@howard0su shall we close this?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,512,2018-12-24T01:06:42Z,2019-01-23T04:28:36Z,2019-01-23T04:28:36Z,CLOSED,False,26,4,4,https://github.com/howard0su,Use ASCII only font for devo7e,1,['On Hold'],https://github.com/DeviationTX/deviation/pull/512,https://github.com/howard0su,11,https://github.com/DeviationTX/deviation/pull/512#issuecomment-456666189,No localization support for devo7e. So generate a ascii (0-255) only font to reduce the size of ROM and the time to flash a devo7e.,devo7e loc support is approaching finish. let's close this.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,513,2018-12-24T04:50:54Z,2019-01-04T09:45:10Z,2019-01-20T13:35:59Z,MERGED,True,52,24,5,https://github.com/howard0su,Change the default font size on AT9 to 15p,1,[],https://github.com/DeviationTX/deviation/pull/513,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/513,"Based on the change of generate ascii font file, we can pack 15normal.fon into the 64KB SPI flash on AT9. So switch it to 15p as default which is much more readable.","Based on the change of generate ascii font file, we can pack 15normal.fon into the 64KB SPI flash on AT9. So switch it to 15p as default which is much more readable.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,513,2018-12-24T04:50:54Z,2019-01-04T09:45:10Z,2019-01-20T13:35:59Z,MERGED,True,52,24,5,https://github.com/howard0su,Change the default font size on AT9 to 15p,1,[],https://github.com/DeviationTX/deviation/pull/513,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/513#issuecomment-449685951,"Based on the change of generate ascii font file, we can pack 15normal.fon into the 64KB SPI flash on AT9. So switch it to 15p as default which is much more readable.",No hardware to test. only verify on at9 emulator.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,513,2018-12-24T04:50:54Z,2019-01-04T09:45:10Z,2019-01-20T13:35:59Z,MERGED,True,52,24,5,https://github.com/howard0su,Change the default font size on AT9 to 15p,1,[],https://github.com/DeviationTX/deviation/pull/513,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/513#issuecomment-450492687,"Based on the change of generate ascii font file, we can pack 15normal.fon into the 64KB SPI flash on AT9. So switch it to 15p as default which is much more readable.","@hexfet if you like this change, I can cleanup this PR.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,513,2018-12-24T04:50:54Z,2019-01-04T09:45:10Z,2019-01-20T13:35:59Z,MERGED,True,52,24,5,https://github.com/howard0su,Change the default font size on AT9 to 15p,1,[],https://github.com/DeviationTX/deviation/pull/513,https://github.com/howard0su,4,https://github.com/DeviationTX/deviation/pull/513#issuecomment-451088025,"Based on the change of generate ascii font file, we can pack 15normal.fon into the 64KB SPI flash on AT9. So switch it to 15p as default which is much more readable.","@hexfet can I get a review and testing on real Tx?
I cleanup this PR to remove the dependency on #512. Let's get this in if this is proper change. #512 may take a while to see if we can get localization support on limit ROM.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,513,2018-12-24T04:50:54Z,2019-01-04T09:45:10Z,2019-01-20T13:35:59Z,MERGED,True,52,24,5,https://github.com/howard0su,Change the default font size on AT9 to 15p,1,[],https://github.com/DeviationTX/deviation/pull/513,https://github.com/hexfet,5,https://github.com/DeviationTX/deviation/pull/513#issuecomment-451173463,"Based on the change of generate ascii font file, we can pack 15normal.fon into the 64KB SPI flash on AT9. So switch it to 15p as default which is much more readable.",I don't have an at9 to test with.  It's probably best to go ahead with it and address any feedback if it comes.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,513,2018-12-24T04:50:54Z,2019-01-04T09:45:10Z,2019-01-20T13:35:59Z,MERGED,True,52,24,5,https://github.com/howard0su,Change the default font size on AT9 to 15p,1,[],https://github.com/DeviationTX/deviation/pull/513,https://github.com/PhracturedBlue,6,https://github.com/DeviationTX/deviation/pull/513#issuecomment-451353222,"Based on the change of generate ascii font file, we can pack 15normal.fon into the 64KB SPI flash on AT9. So switch it to 15p as default which is much more readable.",I don't think there is any reason to wait for someone with an AT9 before making this change.  Go ahead and merge it.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,514,2018-12-25T13:57:27Z,2018-12-25T14:01:31Z,2018-12-25T14:01:31Z,MERGED,True,0,229,32,https://github.com/vladislavy,"Remove Beken BK2421 / BK2423 support, from goebish",1,[],https://github.com/DeviationTX/deviation/pull/514,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/514,"Remove Beken BK2421/BK2423 support as a nrf24l01 alternative, only @hexfet used it and it's not required anymore.","Remove Beken BK2421/BK2423 support as a nrf24l01 alternative, only @hexfet used it and it's not required anymore.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,515,2018-12-25T14:37:55Z,2018-12-25T14:42:07Z,2018-12-25T14:42:07Z,MERGED,True,0,59,30,https://github.com/vladislavy,"Remove MUSIC_Play from protocol, from howard0su",1,[],https://github.com/DeviationTX/deviation/pull/515,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/515,Fix issue #495,Fix issue #495,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,517,2018-12-25T18:27:01Z,2018-12-28T17:49:25Z,2018-12-28T17:49:25Z,MERGED,True,3,3,1,https://github.com/hexfet,Fix issue with exiting USB mode in t8sg V2 transmitters. ,1,[],https://github.com/DeviationTX/deviation/pull/517,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/517,"After powering up in USB mode, the next press of the power button would cause immediate reset on T8SG V2 transmitters.  The CheckPowerSwitch function assumed it was being called every 5ms from the event loop.  That's not true after powering up in USB mode.  Changed the function to be independent of call rate.","After powering up in USB mode, the next press of the power button would cause immediate reset on T8SG V2 transmitters.  The CheckPowerSwitch function assumed it was being called every 5ms from the event loop.  That's not true after powering up in USB mode.  Changed the function to be independent of call rate.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,517,2018-12-25T18:27:01Z,2018-12-28T17:49:25Z,2018-12-28T17:49:25Z,MERGED,True,3,3,1,https://github.com/hexfet,Fix issue with exiting USB mode in t8sg V2 transmitters. ,1,[],https://github.com/DeviationTX/deviation/pull/517,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/517#issuecomment-449882449,"After powering up in USB mode, the next press of the power button would cause immediate reset on T8SG V2 transmitters.  The CheckPowerSwitch function assumed it was being called every 5ms from the event loop.  That's not true after powering up in USB mode.  Changed the function to be independent of call rate.","If the main loop is not every 5ms anymore, how about the handling of stick data? Should we stop the transmission when USB is ON?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,517,2018-12-25T18:27:01Z,2018-12-28T17:49:25Z,2018-12-28T17:49:25Z,MERGED,True,3,3,1,https://github.com/hexfet,Fix issue with exiting USB mode in t8sg V2 transmitters. ,1,[],https://github.com/DeviationTX/deviation/pull/517,https://github.com/hexfet,3,https://github.com/DeviationTX/deviation/pull/517#issuecomment-449884919,"After powering up in USB mode, the next press of the power button would cause immediate reset on T8SG V2 transmitters.  The CheckPowerSwitch function assumed it was being called every 5ms from the event loop.  That's not true after powering up in USB mode.  Changed the function to be independent of call rate.","There's no main loop running in this state.  The code is in an infinite loop in USB_Connect from line 55 of main.c.  Only way to exit this state is through the power switch.  Only the T8SG V2 transmitters have the momentary power switch that needs the ""debounce"" timing.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,519,2018-12-26T10:52:04Z,2018-12-26T10:56:52Z,2019-03-05T00:11:01Z,MERGED,True,12,11,1,https://github.com/goebish,Fix WFLY protocol,2,[],https://github.com/DeviationTX/deviation/pull/519,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/519,Protocol was lacking CLOCK_StopTimer(),Protocol was lacking CLOCK_StopTimer(),True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,520,2018-12-27T10:49:35Z,2019-01-19T07:42:36Z,2019-01-19T07:42:42Z,CLOSED,False,1444,118,12,https://github.com/howard0su,regenerate language file for loc,1,[],https://github.com/DeviationTX/deviation/pull/520,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/520,We should not commit this as it is. Several new reference strings are too similar with the existing ones. we should fix it. Work for #516.,We should not commit this as it is. Several new reference strings are too similar with the existing ones. we should fix it. Work for #516.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,520,2018-12-27T10:49:35Z,2019-01-19T07:42:36Z,2019-01-19T07:42:42Z,CLOSED,False,1444,118,12,https://github.com/howard0su,regenerate language file for loc,1,[],https://github.com/DeviationTX/deviation/pull/520,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/520#issuecomment-455757941,We should not commit this as it is. Several new reference strings are too similar with the existing ones. we should fix it. Work for #516.,close this as @PhracturedBlue will handle this.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,521,2018-12-28T00:58:27Z,2018-12-28T11:56:42Z,2018-12-28T13:34:46Z,MERGED,True,27,18,4,https://github.com/howard0su,Fix regression on channel mapping,1,[],https://github.com/DeviationTX/deviation/pull/521,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/521,Channel mapping doesn't work expected in some protocol modules due to the variables are not initialized proper in the modular. Use a number instead of pointer to return from modular and convert it to the real pointer in main firmware.,Channel mapping doesn't work expected in some protocol modules due to the variables are not initialized proper in the modular. Use a number instead of pointer to return from modular and convert it to the real pointer in main firmware.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,521,2018-12-28T00:58:27Z,2018-12-28T11:56:42Z,2018-12-28T13:34:46Z,MERGED,True,27,18,4,https://github.com/howard0su,Fix regression on channel mapping,1,[],https://github.com/DeviationTX/deviation/pull/521,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/521#issuecomment-450265050,Channel mapping doesn't work expected in some protocol modules due to the variables are not initialized proper in the modular. Use a number instead of pointer to return from modular and convert it to the real pointer in main firmware.,Fix issue #484 thank @goebish to point out the problem.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,522,2018-12-28T14:54:08Z,2019-01-20T13:35:40Z,2019-01-20T13:35:40Z,CLOSED,False,82,5,5,https://github.com/howard0su,Generate a mini fon file,3,[],https://github.com/DeviationTX/deviation/pull/522,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/522,"A mini font file only contains the font data for the characters which exist in localization files. Also support the filter out all ascii characters (<255), which F12E supports via its Font ROM.
The change is not ready to check-in. it depends on #511 #512.","A mini font file only contains the font data for the characters which exist in localization files. Also support the filter out all ascii characters (<255), which F12E supports via its Font ROM.
The change is not ready to check-in. it depends on #511 #512.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,522,2018-12-28T14:54:08Z,2019-01-20T13:35:40Z,2019-01-20T13:35:40Z,CLOSED,False,82,5,5,https://github.com/howard0su,Generate a mini fon file,3,[],https://github.com/DeviationTX/deviation/pull/522,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/522#issuecomment-450371828,"A mini font file only contains the font data for the characters which exist in localization files. Also support the filter out all ascii characters (<255), which F12E supports via its Font ROM.
The change is not ready to check-in. it depends on #511 #512.","The current format of font file doesn't work very well for mini font file. It can have too many ranges (285 ranges as it is today.) I am thinking to introduce a different format to work around this problems.

Just use a .H to include font into the main firmware. this is a good option for f12e as it only has 64KB SPI flash. And SPI flash needs store localization files.
A font file which list all the characters in the first level with the unicode and offset.

thoughts?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,523,2018-12-29T01:11:26Z,2018-12-31T01:16:22Z,2019-01-20T13:37:00Z,MERGED,True,14,15,1,https://github.com/howard0su,two buffer is not needed be static to save 16 bytes RAM,2,[],https://github.com/DeviationTX/deviation/pull/523,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/523,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,523,2018-12-29T01:11:26Z,2018-12-31T01:16:22Z,2019-01-20T13:37:00Z,MERGED,True,14,15,1,https://github.com/howard0su,two buffer is not needed be static to save 16 bytes RAM,2,[],https://github.com/DeviationTX/deviation/pull/523,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/523#issuecomment-450461748,,"reread the code, i believe the buffer doesn't need be static. change the code change.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,523,2018-12-29T01:11:26Z,2018-12-31T01:16:22Z,2019-01-20T13:37:00Z,MERGED,True,14,15,1,https://github.com/howard0su,two buffer is not needed be static to save 16 bytes RAM,2,[],https://github.com/DeviationTX/deviation/pull/523,https://github.com/hexfet,3,https://github.com/DeviationTX/deviation/pull/523#issuecomment-450463982,,Now the ROM and RAM usage is the same as master. No reason for the change.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,523,2018-12-29T01:11:26Z,2018-12-31T01:16:22Z,2019-01-20T13:37:00Z,MERGED,True,14,15,1,https://github.com/howard0su,two buffer is not needed be static to save 16 bytes RAM,2,[],https://github.com/DeviationTX/deviation/pull/523,https://github.com/howard0su,4,https://github.com/DeviationTX/deviation/pull/523#issuecomment-450476751,,"Interesting, ROM size increased a bit more. use devo8 as example: RAM do decrease 16bytes, but ROM increased a bit more.
Master:
ROM: 0x08004000 - 0x0803dca8 = 231.16kB
RAM: 0x20000000 - 0x20009010 =  36.02kB
After:
ROM: 0x08004000 - 0x0803dcd4 = 231.21kB
RAM: 0x20000000 - 0x20009000 =  36.00kB",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,523,2018-12-29T01:11:26Z,2018-12-31T01:16:22Z,2019-01-20T13:37:00Z,MERGED,True,14,15,1,https://github.com/howard0su,two buffer is not needed be static to save 16 bytes RAM,2,[],https://github.com/DeviationTX/deviation/pull/523,https://github.com/hexfet,5,https://github.com/DeviationTX/deviation/pull/523#issuecomment-450509391,,"Interesting.  I had compared the 7e and they are the same.  Not sure whether RAM or ROM is more precious in the non-modular builds.  Approving because I like this style better.
devo7e:
master:
ROM: 0x08003000 - 0x0801fdb0 = 115.42kB
RAM: 0x20000000 - 0x200028a0 =  10.16kB
ram_save:
ROM: 0x08003000 - 0x0801fdb0 = 115.42kB
RAM: 0x20000000 - 0x200028a0 =  10.16kB",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,523,2018-12-29T01:11:26Z,2018-12-31T01:16:22Z,2019-01-20T13:37:00Z,MERGED,True,14,15,1,https://github.com/howard0su,two buffer is not needed be static to save 16 bytes RAM,2,[],https://github.com/DeviationTX/deviation/pull/523,https://github.com/howard0su,6,https://github.com/DeviationTX/deviation/pull/523#issuecomment-450509733,,because the changed code only applies to extended audio. Devo7e does not support it.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,523,2018-12-29T01:11:26Z,2018-12-31T01:16:22Z,2019-01-20T13:37:00Z,MERGED,True,14,15,1,https://github.com/howard0su,two buffer is not needed be static to save 16 bytes RAM,2,[],https://github.com/DeviationTX/deviation/pull/523,https://github.com/TheRealMoeder,7,https://github.com/DeviationTX/deviation/pull/523#issuecomment-450517548,,"I actually liked commit 5b7a458 with one buffer, I still wonder though why it is more ROM efficient? I think the char buffer has to be renamed, otherwise results might get messy. Will have to see where this leaves us...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,523,2018-12-29T01:11:26Z,2018-12-31T01:16:22Z,2019-01-20T13:37:00Z,MERGED,True,14,15,1,https://github.com/howard0su,two buffer is not needed be static to save 16 bytes RAM,2,[],https://github.com/DeviationTX/deviation/pull/523,https://github.com/howard0su,8,https://github.com/DeviationTX/deviation/pull/523#issuecomment-450561538,,"okay, go back with one buffer approach. use 6 bytes RAM to save 36 bytes ROM.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,524,2018-12-29T09:14:49Z,2018-12-29T20:23:23Z,2019-01-10T11:33:47Z,MERGED,True,2,2,2,https://github.com/howard0su,Fix link warnings,1,[],https://github.com/DeviationTX/deviation/pull/524,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/524,Make sure we put extern in front of variable declaration in header files.,Make sure we put extern in front of variable declaration in header files.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,525,2018-12-29T13:09:15Z,2019-03-03T15:57:51Z,2019-03-03T15:57:51Z,MERGED,True,100,33,8,https://github.com/howard0su,Dynamic load localized string to reduce the RAM needs for loc string table,5,[],https://github.com/DeviationTX/deviation/pull/525,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/525,"We don't really need load all the localization string into memory and we can dynamic load the strings.
We cannot only load one string a time as we will have some functions like following breaks:
snprintf(str, sizeof(str), ""%s %s %s"", _tr(A), _tr(B));
So I maintain a relative smaller cache to fix the issue above.
Also, we have the places in the code to assume the pointer returns by _tr can be stored and used later. I should fix the places I noticed.
This change will be by default enabled on 7e first and slowly rollout to other Tx when Tx is short of RAM. this will save about 6KB RAM and also removed the requirement to increase RAM usage when there are more strings.","We don't really need load all the localization string into memory and we can dynamic load the strings.
We cannot only load one string a time as we will have some functions like following breaks:
snprintf(str, sizeof(str), ""%s %s %s"", _tr(A), _tr(B));
So I maintain a relative smaller cache to fix the issue above.
Also, we have the places in the code to assume the pointer returns by _tr can be stored and used later. I should fix the places I noticed.
This change will be by default enabled on 7e first and slowly rollout to other Tx when Tx is short of RAM. this will save about 6KB RAM and also removed the requirement to increase RAM usage when there are more strings.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,525,2018-12-29T13:09:15Z,2019-03-03T15:57:51Z,2019-03-03T15:57:51Z,MERGED,True,100,33,8,https://github.com/howard0su,Dynamic load localized string to reduce the RAM needs for loc string table,5,[],https://github.com/DeviationTX/deviation/pull/525,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/525#issuecomment-450912639,"We don't really need load all the localization string into memory and we can dynamic load the strings.
We cannot only load one string a time as we will have some functions like following breaks:
snprintf(str, sizeof(str), ""%s %s %s"", _tr(A), _tr(B));
So I maintain a relative smaller cache to fix the issue above.
Also, we have the places in the code to assume the pointer returns by _tr can be stored and used later. I should fix the places I noticed.
This change will be by default enabled on 7e first and slowly rollout to other Tx when Tx is short of RAM. this will save about 6KB RAM and also removed the requirement to increase RAM usage when there are more strings.","I figure out the problem is related to limited RAM. stack overflow. but after I fixed this, Tx keep rebooting.
For ROM size, still over 1148 bytes when enabling standard UI.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,525,2018-12-29T13:09:15Z,2019-03-03T15:57:51Z,2019-03-03T15:57:51Z,MERGED,True,100,33,8,https://github.com/howard0su,Dynamic load localized string to reduce the RAM needs for loc string table,5,[],https://github.com/DeviationTX/deviation/pull/525,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/525#issuecomment-451925772,"We don't really need load all the localization string into memory and we can dynamic load the strings.
We cannot only load one string a time as we will have some functions like following breaks:
snprintf(str, sizeof(str), ""%s %s %s"", _tr(A), _tr(B));
So I maintain a relative smaller cache to fix the issue above.
Also, we have the places in the code to assume the pointer returns by _tr can be stored and used later. I should fix the places I noticed.
This change will be by default enabled on 7e first and slowly rollout to other Tx when Tx is short of RAM. this will save about 6KB RAM and also removed the requirement to increase RAM usage when there are more strings.",need 120 more bytes,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,525,2018-12-29T13:09:15Z,2019-03-03T15:57:51Z,2019-03-03T15:57:51Z,MERGED,True,100,33,8,https://github.com/howard0su,Dynamic load localized string to reduce the RAM needs for loc string table,5,[],https://github.com/DeviationTX/deviation/pull/525,https://github.com/TheRealMoeder,4,https://github.com/DeviationTX/deviation/pull/525#issuecomment-451940360,"We don't really need load all the localization string into memory and we can dynamic load the strings.
We cannot only load one string a time as we will have some functions like following breaks:
snprintf(str, sizeof(str), ""%s %s %s"", _tr(A), _tr(B));
So I maintain a relative smaller cache to fix the issue above.
Also, we have the places in the code to assume the pointer returns by _tr can be stored and used later. I should fix the places I noticed.
This change will be by default enabled on 7e first and slowly rollout to other Tx when Tx is short of RAM. this will save about 6KB RAM and also removed the requirement to increase RAM usage when there are more strings.","Concerning our valuable Rom and ram on 7e, I honestly wonder if this the right way to do, or if we should rather extend the 7e build matrix and run a preprocessing script which converts all strings in the source code during build time. I don't believe that users will really switch languages once set up, so we basically have a lot of ""dead"" flash and ram during runtime.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,525,2018-12-29T13:09:15Z,2019-03-03T15:57:51Z,2019-03-03T15:57:51Z,MERGED,True,100,33,8,https://github.com/howard0su,Dynamic load localized string to reduce the RAM needs for loc string table,5,[],https://github.com/DeviationTX/deviation/pull/525,https://github.com/howard0su,5,https://github.com/DeviationTX/deviation/pull/525#issuecomment-451942923,"We don't really need load all the localization string into memory and we can dynamic load the strings.
We cannot only load one string a time as we will have some functions like following breaks:
snprintf(str, sizeof(str), ""%s %s %s"", _tr(A), _tr(B));
So I maintain a relative smaller cache to fix the issue above.
Also, we have the places in the code to assume the pointer returns by _tr can be stored and used later. I should fix the places I noticed.
This change will be by default enabled on 7e first and slowly rollout to other Tx when Tx is short of RAM. this will save about 6KB RAM and also removed the requirement to increase RAM usage when there are more strings.","I think this indeed a nice idea. If we can limit the translated text is
shorter than original one, we can do it in the binary. The later approach
is common used in the localize console games like GBA.
…
On Mon, Jan 7, 2019 at 9:49 PM TheRealMoeder ***@***.***> wrote:
 Concerning our valuable Rom and ram on 7e, I honestly wonder if this the
 right way to do, or if we should rather extend the 7e build matrix and run
 a preprocessing script which converts all strings in the source code during
 build time. I don't believe that users will really switch languages once
 set up, so we basically have a lot of ""dead"" flash and ram during runtime.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#525 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRDxk99TAaGKZO2ztr2OSGoe0wziDks5vA1CHgaJpZM4ZkkW3>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,525,2018-12-29T13:09:15Z,2019-03-03T15:57:51Z,2019-03-03T15:57:51Z,MERGED,True,100,33,8,https://github.com/howard0su,Dynamic load localized string to reduce the RAM needs for loc string table,5,[],https://github.com/DeviationTX/deviation/pull/525,https://github.com/PhracturedBlue,6,https://github.com/DeviationTX/deviation/pull/525#issuecomment-451943588,"We don't really need load all the localization string into memory and we can dynamic load the strings.
We cannot only load one string a time as we will have some functions like following breaks:
snprintf(str, sizeof(str), ""%s %s %s"", _tr(A), _tr(B));
So I maintain a relative smaller cache to fix the issue above.
Also, we have the places in the code to assume the pointer returns by _tr can be stored and used later. I should fix the places I noticed.
This change will be by default enabled on 7e first and slowly rollout to other Tx when Tx is short of RAM. this will save about 6KB RAM and also removed the requirement to increase RAM usage when there are more strings.","My ideal case would be to do it in DeviationUpload (so we don't need to host so many images).  I think we'd change _tr to point at a table of stings and then replace the table before upload.  No need to load the table into RAM or to do the matching calculation.  To avoid the need to update DeviationUpload right away, we could easily do this in a script which could be provided (and probably a compiled version for windows users).  It would take a little more ROM (and we'd need to figure out how to build the table such that it can be replaced given variable string lengths (maybe a table of offsets).  I would be really interested in the number of users who use languages other than English and how that overlaps with people with transmitters without language support.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,525,2018-12-29T13:09:15Z,2019-03-03T15:57:51Z,2019-03-03T15:57:51Z,MERGED,True,100,33,8,https://github.com/howard0su,Dynamic load localized string to reduce the RAM needs for loc string table,5,[],https://github.com/DeviationTX/deviation/pull/525,https://github.com/howard0su,7,https://github.com/DeviationTX/deviation/pull/525#issuecomment-451945192,"We don't really need load all the localization string into memory and we can dynamic load the strings.
We cannot only load one string a time as we will have some functions like following breaks:
snprintf(str, sizeof(str), ""%s %s %s"", _tr(A), _tr(B));
So I maintain a relative smaller cache to fix the issue above.
Also, we have the places in the code to assume the pointer returns by _tr can be stored and used later. I should fix the places I noticed.
This change will be by default enabled on 7e first and slowly rollout to other Tx when Tx is short of RAM. this will save about 6KB RAM and also removed the requirement to increase RAM usage when there are more strings.","at least in Chinese community, it is pretty high demand to have a localized
version. Many users took the risk to change SPI flash in order to get
localized.

I don't think we need really have a table. We can modify our linker script
to put the string tables named rodata.str.1 at the bottom of the elf file.
I think modify the current code is hard and make _tr accept a index
parameter is so ugly.
…
On Mon, Jan 7, 2019 at 10:01 PM PhracturedBlue ***@***.***> wrote:
 My ideal case would be to do it in DeviationUpload (so we don't need to
 host so many images). I think we'd change _tr to point at a table of stings
 and then replace the table before upload. No need to load the table into
 RAM or to do the matching calculation. To avoid the need to update
 DeviationUpload right away, we could easily do this in a script which could
 be provided (and probably a compiled version for windows users). It would
 take a little more ROM (and we'd need to figure out how to build the table
 such that it can be replaced given variable string lengths (maybe a table
 of offsets). I would be really interested in the number of users who use
 languages other than English and how that overlaps with people with
 transmitters without language support.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#525 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRO78LRCQnWzq7F6F9eg_eO09yX8vks5vA1M0gaJpZM4ZkkW3>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,525,2018-12-29T13:09:15Z,2019-03-03T15:57:51Z,2019-03-03T15:57:51Z,MERGED,True,100,33,8,https://github.com/howard0su,Dynamic load localized string to reduce the RAM needs for loc string table,5,[],https://github.com/DeviationTX/deviation/pull/525,https://github.com/PhracturedBlue,8,https://github.com/DeviationTX/deviation/pull/525#issuecomment-451958540,"We don't really need load all the localization string into memory and we can dynamic load the strings.
We cannot only load one string a time as we will have some functions like following breaks:
snprintf(str, sizeof(str), ""%s %s %s"", _tr(A), _tr(B));
So I maintain a relative smaller cache to fix the issue above.
Also, we have the places in the code to assume the pointer returns by _tr can be stored and used later. I should fix the places I noticed.
This change will be by default enabled on 7e first and slowly rollout to other Tx when Tx is short of RAM. this will save about 6KB RAM and also removed the requirement to increase RAM usage when there are more strings.","I was not suggesting _tr take a new parameter, but if we can make the linker do all the work, all the better.  On the other hand, it may well be that the only other language of any serious interest is Chinese, and we should just build an English and Chinese target.  I'd still prefer to patch the binary rather than support multiple targets though.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,525,2018-12-29T13:09:15Z,2019-03-03T15:57:51Z,2019-03-03T15:57:51Z,MERGED,True,100,33,8,https://github.com/howard0su,Dynamic load localized string to reduce the RAM needs for loc string table,5,[],https://github.com/DeviationTX/deviation/pull/525,https://github.com/TheRealMoeder,9,https://github.com/DeviationTX/deviation/pull/525#issuecomment-451960157,"We don't really need load all the localization string into memory and we can dynamic load the strings.
We cannot only load one string a time as we will have some functions like following breaks:
snprintf(str, sizeof(str), ""%s %s %s"", _tr(A), _tr(B));
So I maintain a relative smaller cache to fix the issue above.
Also, we have the places in the code to assume the pointer returns by _tr can be stored and used later. I should fix the places I noticed.
This change will be by default enabled on 7e first and slowly rollout to other Tx when Tx is short of RAM. this will save about 6KB RAM and also removed the requirement to increase RAM usage when there are more strings.","I think there is actually more localization used than you'd expect. At least there's quite some IT, DE and FR voice packs built (and those users are just a very small subset of all). Lang.pt has recently been updated as well, and the manual is currently in process of a japanese translation, so I think the need is definitely there. I also like the linker mod and binary patching approach!",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,525,2018-12-29T13:09:15Z,2019-03-03T15:57:51Z,2019-03-03T15:57:51Z,MERGED,True,100,33,8,https://github.com/howard0su,Dynamic load localized string to reduce the RAM needs for loc string table,5,[],https://github.com/DeviationTX/deviation/pull/525,https://github.com/howard0su,10,https://github.com/DeviationTX/deviation/pull/525#issuecomment-455571407,"We don't really need load all the localization string into memory and we can dynamic load the strings.
We cannot only load one string a time as we will have some functions like following breaks:
snprintf(str, sizeof(str), ""%s %s %s"", _tr(A), _tr(B));
So I maintain a relative smaller cache to fix the issue above.
Also, we have the places in the code to assume the pointer returns by _tr can be stored and used later. I should fix the places I noticed.
This change will be by default enabled on 7e first and slowly rollout to other Tx when Tx is short of RAM. this will save about 6KB RAM and also removed the requirement to increase RAM usage when there are more strings.",this finally get work in the real Tx. However it is still very easy to stack overflow and crash. Need reduce RAM and STACK continues.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,525,2018-12-29T13:09:15Z,2019-03-03T15:57:51Z,2019-03-03T15:57:51Z,MERGED,True,100,33,8,https://github.com/howard0su,Dynamic load localized string to reduce the RAM needs for loc string table,5,[],https://github.com/DeviationTX/deviation/pull/525,https://github.com/howard0su,11,https://github.com/DeviationTX/deviation/pull/525#issuecomment-455756433,"We don't really need load all the localization string into memory and we can dynamic load the strings.
We cannot only load one string a time as we will have some functions like following breaks:
snprintf(str, sizeof(str), ""%s %s %s"", _tr(A), _tr(B));
So I maintain a relative smaller cache to fix the issue above.
Also, we have the places in the code to assume the pointer returns by _tr can be stored and used later. I should fix the places I noticed.
This change will be by default enabled on 7e first and slowly rollout to other Tx when Tx is short of RAM. this will save about 6KB RAM and also removed the requirement to increase RAM usage when there are more strings.","Those changes were using for testing RAM size. it already reverted this.
The change is not ready to checkin. when display modal dialog, the code has some problem.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,525,2018-12-29T13:09:15Z,2019-03-03T15:57:51Z,2019-03-03T15:57:51Z,MERGED,True,100,33,8,https://github.com/howard0su,Dynamic load localized string to reduce the RAM needs for loc string table,5,[],https://github.com/DeviationTX/deviation/pull/525,https://github.com/TheRealMoeder,12,https://github.com/DeviationTX/deviation/pull/525#issuecomment-455756550,"We don't really need load all the localization string into memory and we can dynamic load the strings.
We cannot only load one string a time as we will have some functions like following breaks:
snprintf(str, sizeof(str), ""%s %s %s"", _tr(A), _tr(B));
So I maintain a relative smaller cache to fix the issue above.
Also, we have the places in the code to assume the pointer returns by _tr can be stored and used later. I should fix the places I noticed.
This change will be by default enabled on 7e first and slowly rollout to other Tx when Tx is short of RAM. this will save about 6KB RAM and also removed the requirement to increase RAM usage when there are more strings.","OK, I was just going through my github notifications and didn't notice you had already reverted the change",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,525,2018-12-29T13:09:15Z,2019-03-03T15:57:51Z,2019-03-03T15:57:51Z,MERGED,True,100,33,8,https://github.com/howard0su,Dynamic load localized string to reduce the RAM needs for loc string table,5,[],https://github.com/DeviationTX/deviation/pull/525,https://github.com/howard0su,13,https://github.com/DeviationTX/deviation/pull/525#issuecomment-455758083,"We don't really need load all the localization string into memory and we can dynamic load the strings.
We cannot only load one string a time as we will have some functions like following breaks:
snprintf(str, sizeof(str), ""%s %s %s"", _tr(A), _tr(B));
So I maintain a relative smaller cache to fix the issue above.
Also, we have the places in the code to assume the pointer returns by _tr can be stored and used later. I should fix the places I noticed.
This change will be by default enabled on 7e first and slowly rollout to other Tx when Tx is short of RAM. this will save about 6KB RAM and also removed the requirement to increase RAM usage when there are more strings.","for this change, i may need another target which drop standard mixer support.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,525,2018-12-29T13:09:15Z,2019-03-03T15:57:51Z,2019-03-03T15:57:51Z,MERGED,True,100,33,8,https://github.com/howard0su,Dynamic load localized string to reduce the RAM needs for loc string table,5,[],https://github.com/DeviationTX/deviation/pull/525,https://github.com/howard0su,14,https://github.com/DeviationTX/deviation/pull/525#issuecomment-456710037,"We don't really need load all the localization string into memory and we can dynamic load the strings.
We cannot only load one string a time as we will have some functions like following breaks:
snprintf(str, sizeof(str), ""%s %s %s"", _tr(A), _tr(B));
So I maintain a relative smaller cache to fix the issue above.
Also, we have the places in the code to assume the pointer returns by _tr can be stored and used later. I should fix the places I noticed.
This change will be by default enabled on 7e first and slowly rollout to other Tx when Tx is short of RAM. this will save about 6KB RAM and also removed the requirement to increase RAM usage when there are more strings.",Waiting for the changes to cleanup all the assumption about static of _tr returns. Also devo7e free up some ROM and RAM to hold this change.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,525,2018-12-29T13:09:15Z,2019-03-03T15:57:51Z,2019-03-03T15:57:51Z,MERGED,True,100,33,8,https://github.com/howard0su,Dynamic load localized string to reduce the RAM needs for loc string table,5,[],https://github.com/DeviationTX/deviation/pull/525,https://github.com/TheRealMoeder,15,https://github.com/DeviationTX/deviation/pull/525#issuecomment-459361427,"We don't really need load all the localization string into memory and we can dynamic load the strings.
We cannot only load one string a time as we will have some functions like following breaks:
snprintf(str, sizeof(str), ""%s %s %s"", _tr(A), _tr(B));
So I maintain a relative smaller cache to fix the issue above.
Also, we have the places in the code to assume the pointer returns by _tr can be stored and used later. I should fix the places I noticed.
This change will be by default enabled on 7e first and slowly rollout to other Tx when Tx is short of RAM. this will save about 6KB RAM and also removed the requirement to increase RAM usage when there are more strings.",Rom and Ram usage aren't too bad now. Has it proven to be stable?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,525,2018-12-29T13:09:15Z,2019-03-03T15:57:51Z,2019-03-03T15:57:51Z,MERGED,True,100,33,8,https://github.com/howard0su,Dynamic load localized string to reduce the RAM needs for loc string table,5,[],https://github.com/DeviationTX/deviation/pull/525,https://github.com/howard0su,16,https://github.com/DeviationTX/deviation/pull/525#issuecomment-459370359,"We don't really need load all the localization string into memory and we can dynamic load the strings.
We cannot only load one string a time as we will have some functions like following breaks:
snprintf(str, sizeof(str), ""%s %s %s"", _tr(A), _tr(B));
So I maintain a relative smaller cache to fix the issue above.
Also, we have the places in the code to assume the pointer returns by _tr can be stored and used later. I should fix the places I noticed.
This change will be by default enabled on 7e first and slowly rollout to other Tx when Tx is short of RAM. this will save about 6KB RAM and also removed the requirement to increase RAM usage when there are more strings.","Need more testings. And I am working on a change to move MSC (umass)
support into a protocol module (although it is not a protocol.) after that,
we should be able to have enough ROM & RAM.
…
On Thu, Jan 31, 2019 at 11:21 PM TheRealMoeder ***@***.***> wrote:
 Rom and Ram usage aren't too bad now. Has it proven to be stable?

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#525 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRAvkGdzwZ93xLVuf-8D4nEFRmrxfks5vIvwAgaJpZM4ZkkW3>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,525,2018-12-29T13:09:15Z,2019-03-03T15:57:51Z,2019-03-03T15:57:51Z,MERGED,True,100,33,8,https://github.com/howard0su,Dynamic load localized string to reduce the RAM needs for loc string table,5,[],https://github.com/DeviationTX/deviation/pull/525,https://github.com/howard0su,17,https://github.com/DeviationTX/deviation/pull/525#issuecomment-461789150,"We don't really need load all the localization string into memory and we can dynamic load the strings.
We cannot only load one string a time as we will have some functions like following breaks:
snprintf(str, sizeof(str), ""%s %s %s"", _tr(A), _tr(B));
So I maintain a relative smaller cache to fix the issue above.
Also, we have the places in the code to assume the pointer returns by _tr can be stored and used later. I should fix the places I noticed.
This change will be by default enabled on 7e first and slowly rollout to other Tx when Tx is short of RAM. this will save about 6KB RAM and also removed the requirement to increase RAM usage when there are more strings.",Plan to commit this after several community members tested this. any objection?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,525,2018-12-29T13:09:15Z,2019-03-03T15:57:51Z,2019-03-03T15:57:51Z,MERGED,True,100,33,8,https://github.com/howard0su,Dynamic load localized string to reduce the RAM needs for loc string table,5,[],https://github.com/DeviationTX/deviation/pull/525,https://github.com/howard0su,18,https://github.com/DeviationTX/deviation/pull/525#issuecomment-461789755,"We don't really need load all the localization string into memory and we can dynamic load the strings.
We cannot only load one string a time as we will have some functions like following breaks:
snprintf(str, sizeof(str), ""%s %s %s"", _tr(A), _tr(B));
So I maintain a relative smaller cache to fix the issue above.
Also, we have the places in the code to assume the pointer returns by _tr can be stored and used later. I should fix the places I noticed.
This change will be by default enabled on 7e first and slowly rollout to other Tx when Tx is short of RAM. this will save about 6KB RAM and also removed the requirement to increase RAM usage when there are more strings.",I plan to enable this on devo7e first then rollout to all the Tx to avoid 8KB limit for localized string table.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,525,2018-12-29T13:09:15Z,2019-03-03T15:57:51Z,2019-03-03T15:57:51Z,MERGED,True,100,33,8,https://github.com/howard0su,Dynamic load localized string to reduce the RAM needs for loc string table,5,[],https://github.com/DeviationTX/deviation/pull/525,https://github.com/PhracturedBlue,19,https://github.com/DeviationTX/deviation/pull/525#issuecomment-461819672,"We don't really need load all the localization string into memory and we can dynamic load the strings.
We cannot only load one string a time as we will have some functions like following breaks:
snprintf(str, sizeof(str), ""%s %s %s"", _tr(A), _tr(B));
So I maintain a relative smaller cache to fix the issue above.
Also, we have the places in the code to assume the pointer returns by _tr can be stored and used later. I should fix the places I noticed.
This change will be by default enabled on 7e first and slowly rollout to other Tx when Tx is short of RAM. this will save about 6KB RAM and also removed the requirement to increase RAM usage when there are more strings.","is it reasonable to assume that all cases where we use more than one _tr as an argument are likely to be cases that look like sprintf(_tr(format), _tr(val))?  There are not many of those where format contains '%s' looking at the language files.  How about the dialogs?  do they have cases with longer strings, and do we care?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,525,2018-12-29T13:09:15Z,2019-03-03T15:57:51Z,2019-03-03T15:57:51Z,MERGED,True,100,33,8,https://github.com/howard0su,Dynamic load localized string to reduce the RAM needs for loc string table,5,[],https://github.com/DeviationTX/deviation/pull/525,https://github.com/howard0su,20,https://github.com/DeviationTX/deviation/pull/525#issuecomment-461824351,"We don't really need load all the localization string into memory and we can dynamic load the strings.
We cannot only load one string a time as we will have some functions like following breaks:
snprintf(str, sizeof(str), ""%s %s %s"", _tr(A), _tr(B));
So I maintain a relative smaller cache to fix the issue above.
Also, we have the places in the code to assume the pointer returns by _tr can be stored and used later. I should fix the places I noticed.
This change will be by default enabled on 7e first and slowly rollout to other Tx when Tx is short of RAM. this will save about 6KB RAM and also removed the requirement to increase RAM usage when there are more strings.","it is more like this pattern. We can convert them into using tempstring_cpy if you think it is a better approach. I am struggling to find a way to explicit on that _tr returns a non-const string.
pages/common/standard/_gyrosense_page.c:        snprintf(tempstring, sizeof(tempstring), ""%s/%s7"", _tr(""AUX2""), _tr(""Ch""));
snprintf(tempstring, sizeof(tempstring), ""%s %s"",
_tr(""Press ENT to turn \nUSB drive""),
enable == 0 ? _tr(""On"") : _tr(""Off""));
the most complicate one:
sprintf(tempstring, ""%s\n%s\n\n%s... %s\n%s %s"",
_tr(""Deviation FW version:""), DeviationVersion,
_tr(""USB Filesystem is currently ""), enable == 0 ? _tr(""Off"") : _tr(""On""),
_tr(""Press 'Ent' to turn USB Filesystem""),
enable == 0 ? _tr(""On"") : _tr(""Off""));",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,525,2018-12-29T13:09:15Z,2019-03-03T15:57:51Z,2019-03-03T15:57:51Z,MERGED,True,100,33,8,https://github.com/howard0su,Dynamic load localized string to reduce the RAM needs for loc string table,5,[],https://github.com/DeviationTX/deviation/pull/525,https://github.com/howard0su,21,https://github.com/DeviationTX/deviation/pull/525#issuecomment-468584111,"We don't really need load all the localization string into memory and we can dynamic load the strings.
We cannot only load one string a time as we will have some functions like following breaks:
snprintf(str, sizeof(str), ""%s %s %s"", _tr(A), _tr(B));
So I maintain a relative smaller cache to fix the issue above.
Also, we have the places in the code to assume the pointer returns by _tr can be stored and used later. I should fix the places I noticed.
This change will be by default enabled on 7e first and slowly rollout to other Tx when Tx is short of RAM. this will save about 6KB RAM and also removed the requirement to increase RAM usage when there are more strings.","@PhracturedBlue please review again.
I would like this change applies to all Tx but we are not ready yet.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,526,2018-12-31T12:19:28Z,2019-01-01T15:31:48Z,2019-01-10T11:33:40Z,MERGED,True,85,45,2,https://github.com/howard0su,some additional CN/TW translations,1,[],https://github.com/DeviationTX/deviation/pull/526,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/526,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,527,2019-01-01T15:03:10Z,2019-01-01T15:31:18Z,2019-01-10T11:33:34Z,MERGED,True,8,7,1,https://github.com/howard0su,Fix CONFIG_EnableLanguage,1,[],https://github.com/DeviationTX/deviation/pull/527,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/527,this gets broken accidently when I introduce new format of language file.,this gets broken accidently when I introduce new format of language file.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,528,2019-01-02T06:47:32Z,2019-01-02T19:58:57Z,2019-01-10T11:33:26Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix typo in language file read,1,[],https://github.com/DeviationTX/deviation/pull/528,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/528,Moving back file cursor should use SEEK_CUR instead of SEEK_SET.,Moving back file cursor should use SEEK_CUR instead of SEEK_SET.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,529,2019-01-02T09:29:59Z,2019-01-03T15:30:14Z,2019-01-10T11:33:18Z,MERGED,True,57,42,1,https://github.com/howard0su,Reduce ROM usage of music module,2,[],https://github.com/DeviationTX/deviation/pull/529,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/529,"Parse the name of tone instead of a table.
Only store one scale of freq and caculate others.","Parse the name of tone instead of a table.
Only store one scale of freq and caculate others.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,529,2019-01-02T09:29:59Z,2019-01-03T15:30:14Z,2019-01-10T11:33:18Z,MERGED,True,57,42,1,https://github.com/howard0su,Reduce ROM usage of music module,2,[],https://github.com/DeviationTX/deviation/pull/529,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/529#issuecomment-450818363,"Parse the name of tone instead of a table.
Only store one scale of freq and caculate others.","Don't know how to test this. The ROM size saving is noticable:
Before:
ROM: 0x08003000 - 0x0801fdb0 = 115.42kB
RAM: 0x20000000 - 0x200028a0 =  10.16kB
After:
ROM: 0x08003000 - 0x0801fc78 = 115.12kB
RAM: 0x20000000 - 0x200028a0 =  10.16kB",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,529,2019-01-02T09:29:59Z,2019-01-03T15:30:14Z,2019-01-10T11:33:18Z,MERGED,True,57,42,1,https://github.com/howard0su,Reduce ROM usage of music module,2,[],https://github.com/DeviationTX/deviation/pull/529,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/529#issuecomment-450879830,"Parse the name of tone instead of a table.
Only store one scale of freq and caculate others.","verified on 7e, at least startup music works fine.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,529,2019-01-02T09:29:59Z,2019-01-03T15:30:14Z,2019-01-10T11:33:18Z,MERGED,True,57,42,1,https://github.com/howard0su,Reduce ROM usage of music module,2,[],https://github.com/DeviationTX/deviation/pull/529,https://github.com/howard0su,4,https://github.com/DeviationTX/deviation/pull/529#issuecomment-450912293,"Parse the name of tone instead of a table.
Only store one scale of freq and caculate others.",maybe we should have a longer music for startup. it is fine to compose music like that.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,529,2019-01-02T09:29:59Z,2019-01-03T15:30:14Z,2019-01-10T11:33:18Z,MERGED,True,57,42,1,https://github.com/howard0su,Reduce ROM usage of music module,2,[],https://github.com/DeviationTX/deviation/pull/529,https://github.com/TheRealMoeder,5,https://github.com/DeviationTX/deviation/pull/529#issuecomment-450980576,"Parse the name of tone instead of a table.
Only store one scale of freq and caculate others.","maybe we should have a longer music for startup. it is fine to compose music like that.

Every user is open to do so. Feel free to compose a deviation theme if you wish ;-)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,530,2019-01-02T14:46:37Z,2019-01-02T20:46:51Z,2019-01-10T11:33:07Z,MERGED,True,22,22,7,https://github.com/howard0su,Make some USB structure as const to save some RAM,1,[],https://github.com/DeviationTX/deviation/pull/530,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/530,Some versions of compiler can detect this but some cannot. Don't rely on compiler to do this instead of make it explicit on which structure is const. Also change the type to make sure no warnings.,Some versions of compiler can detect this but some cannot. Don't rely on compiler to do this instead of make it explicit on which structure is const. Also change the type to make sure no warnings.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,531,2019-01-02T14:47:10Z,2019-01-04T05:11:16Z,2019-01-20T13:35:56Z,CLOSED,False,7,5,3,https://github.com/howard0su,Proper use HAS_TOUCH macro,2,[],https://github.com/DeviationTX/deviation/pull/531,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/531,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,531,2019-01-02T14:47:10Z,2019-01-04T05:11:16Z,2019-01-20T13:35:56Z,CLOSED,False,7,5,3,https://github.com/howard0su,Proper use HAS_TOUCH macro,2,[],https://github.com/DeviationTX/deviation/pull/531,https://github.com/hexfet,2,https://github.com/DeviationTX/deviation/pull/531#issuecomment-450962311,,"What are your thoughts on the runtime usage of HAS_TOUCH in these files?
pages/320x240x16/main_page.c
pages/320x240x16/model_loadsave.c
pages/320x240x16/pages.c
pages/320x240x16/tx_configure.c
pages/common/_main_config.c
pages/common/_main_page.c
target/common/devo/spi_touch.c
timer.c",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,531,2019-01-02T14:47:10Z,2019-01-04T05:11:16Z,2019-01-20T13:35:56Z,CLOSED,False,7,5,3,https://github.com/howard0su,Proper use HAS_TOUCH macro,2,[],https://github.com/DeviationTX/deviation/pull/531,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/531#issuecomment-451064668,,you made right point. but those places the compiler already optmized out the dead code. I propose this is because SPITouch_Init somehow shows up in .map file as a function.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,531,2019-01-02T14:47:10Z,2019-01-04T05:11:16Z,2019-01-20T13:35:56Z,CLOSED,False,7,5,3,https://github.com/howard0su,Proper use HAS_TOUCH macro,2,[],https://github.com/DeviationTX/deviation/pull/531,https://github.com/PhracturedBlue,4,https://github.com/DeviationTX/deviation/pull/531#issuecomment-451352684,,"I don't really love this.  I specifically went through the code at one point and replaced #ifdefs with if()  wherever possible (I think this had to do with having the compiler do syntax checking, but it was a long time ago).  The compiler should be optimizing out this code already as it does elsewhere.  It would be worth understanding why this case is special.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,531,2019-01-02T14:47:10Z,2019-01-04T05:11:16Z,2019-01-20T13:35:56Z,CLOSED,False,7,5,3,https://github.com/howard0su,Proper use HAS_TOUCH macro,2,[],https://github.com/DeviationTX/deviation/pull/531,https://github.com/howard0su,5,https://github.com/DeviationTX/deviation/pull/531#issuecomment-451354842,,okay. make sense.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,532,2019-01-03T03:32:59Z,2019-01-08T19:04:15Z,2019-01-08T19:11:54Z,MERGED,True,330,128,18,https://github.com/hexfet,Reduce stick-to-air latency in some protocols with manual mixer scheduling,27,[],https://github.com/DeviationTX/deviation/pull/532,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/532,"New function allows protocols to schedule the input sampling and mixer calculations.  Provides a means for protocols to reduce input-to-air latency by having inputs sampled and mixers run just before the protocol packet is assembled.  Protocols not using the new API remain unchanged, with input sampling and mixer calculations running every 5ms independent of protocol timing.
Measurements and discussion of design considerations are in this thread.
Functions added:
void CLOCK_RunMixer(volatile int *sync): This function generates an interrupt to sample the ADC inputs and run the mixer calculations.  Protocols can use this function to cause updated Channels values to be ready just when they are needed by the protocol.  The sync variable is cleared to 0 when this function is called, then set to 1 when the mixer update is complete.  The time required to complete mixer calculations depends on the complexity of the mixers in the model.  Protocols can check this variable to ensure the mixer calculations are complete when used, and adjust timing to ensure the minimum latency.  See frskyx_cc2500.c for an example.
void CLOCK_StartMixer(): Starts mixers running on periodic 5ms timer (same as previous behavior).  This is the default and is called every time a new protocol is loaded.
The protocols that are updated to reduce latency by scheduling mixers in the protocol are: crsf, devo, flysky, frsky, frskyx, sbus, sfhss.  The sbus protocol also gets a new option to adjust packet interval.","New function allows protocols to schedule the input sampling and mixer calculations.  Provides a means for protocols to reduce input-to-air latency by having inputs sampled and mixers run just before the protocol packet is assembled.  Protocols not using the new API remain unchanged, with input sampling and mixer calculations running every 5ms independent of protocol timing.
Measurements and discussion of design considerations are in this thread.
Functions added:
void CLOCK_RunMixer(volatile int *sync): This function generates an interrupt to sample the ADC inputs and run the mixer calculations.  Protocols can use this function to cause updated Channels values to be ready just when they are needed by the protocol.  The sync variable is cleared to 0 when this function is called, then set to 1 when the mixer update is complete.  The time required to complete mixer calculations depends on the complexity of the mixers in the model.  Protocols can check this variable to ensure the mixer calculations are complete when used, and adjust timing to ensure the minimum latency.  See frskyx_cc2500.c for an example.
void CLOCK_StartMixer(): Starts mixers running on periodic 5ms timer (same as previous behavior).  This is the default and is called every time a new protocol is loaded.
The protocols that are updated to reduce latency by scheduling mixers in the protocol are: crsf, devo, flysky, frsky, frskyx, sbus, sfhss.  The sbus protocol also gets a new option to adjust packet interval.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,532,2019-01-03T03:32:59Z,2019-01-08T19:04:15Z,2019-01-08T19:11:54Z,MERGED,True,330,128,18,https://github.com/hexfet,Reduce stick-to-air latency in some protocols with manual mixer scheduling,27,[],https://github.com/DeviationTX/deviation/pull/532,https://github.com/PhracturedBlue,2,https://github.com/DeviationTX/deviation/pull/532#issuecomment-451290342,"New function allows protocols to schedule the input sampling and mixer calculations.  Provides a means for protocols to reduce input-to-air latency by having inputs sampled and mixers run just before the protocol packet is assembled.  Protocols not using the new API remain unchanged, with input sampling and mixer calculations running every 5ms independent of protocol timing.
Measurements and discussion of design considerations are in this thread.
Functions added:
void CLOCK_RunMixer(volatile int *sync): This function generates an interrupt to sample the ADC inputs and run the mixer calculations.  Protocols can use this function to cause updated Channels values to be ready just when they are needed by the protocol.  The sync variable is cleared to 0 when this function is called, then set to 1 when the mixer update is complete.  The time required to complete mixer calculations depends on the complexity of the mixers in the model.  Protocols can check this variable to ensure the mixer calculations are complete when used, and adjust timing to ensure the minimum latency.  See frskyx_cc2500.c for an example.
void CLOCK_StartMixer(): Starts mixers running on periodic 5ms timer (same as previous behavior).  This is the default and is called every time a new protocol is loaded.
The protocols that are updated to reduce latency by scheduling mixers in the protocol are: crsf, devo, flysky, frsky, frskyx, sbus, sfhss.  The sbus protocol also gets a new option to adjust packet interval.","Overall, I like this approach, though I am concerned what happens if it takes more time to calculate than one iteration of the protocol state machine.  That probably can't happen given the timings you've seen.
I'm actually really surprised that it can take 1.2msec to compute the Mixers.  That is a lot longer than I'd expect.
Also note that some Transmitters (like the devo12) have very noisey ADC circuits due to PCB layout, and I believe I ended up using much heavier averaging on them.  I don't know if it affects the overall timing or not though.
I didn't do a really deep dive into the patch, but I'd expect to see a lot of testing, especially for frsky which as I recall was a really problematic protocol from a timing perspective.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,532,2019-01-03T03:32:59Z,2019-01-08T19:04:15Z,2019-01-08T19:11:54Z,MERGED,True,330,128,18,https://github.com/hexfet,Reduce stick-to-air latency in some protocols with manual mixer scheduling,27,[],https://github.com/DeviationTX/deviation/pull/532,https://github.com/hexfet,3,https://github.com/DeviationTX/deviation/pull/532#issuecomment-451330820,"New function allows protocols to schedule the input sampling and mixer calculations.  Provides a means for protocols to reduce input-to-air latency by having inputs sampled and mixers run just before the protocol packet is assembled.  Protocols not using the new API remain unchanged, with input sampling and mixer calculations running every 5ms independent of protocol timing.
Measurements and discussion of design considerations are in this thread.
Functions added:
void CLOCK_RunMixer(volatile int *sync): This function generates an interrupt to sample the ADC inputs and run the mixer calculations.  Protocols can use this function to cause updated Channels values to be ready just when they are needed by the protocol.  The sync variable is cleared to 0 when this function is called, then set to 1 when the mixer update is complete.  The time required to complete mixer calculations depends on the complexity of the mixers in the model.  Protocols can check this variable to ensure the mixer calculations are complete when used, and adjust timing to ensure the minimum latency.  See frskyx_cc2500.c for an example.
void CLOCK_StartMixer(): Starts mixers running on periodic 5ms timer (same as previous behavior).  This is the default and is called every time a new protocol is loaded.
The protocols that are updated to reduce latency by scheduling mixers in the protocol are: crsf, devo, flysky, frsky, frskyx, sbus, sfhss.  The sbus protocol also gets a new option to adjust packet interval.","If the mixer calculations aren't complete by the next time they're needed, the previous recently calculated values remain in the Channels array and are used.  Generally this would just add one packet interval to the latency.  This could mean some channel values are older than others when used, but that already happens in the current implementation due to to mixer updates not being synchronized with protocol callbacks.
I didn't make any changes to ADC sampling but did look into it.  The devo12 is the only transmitter with different ADC settings.  It averages 10 times more samples than the other transmitters, but also uses a 10 times shorter ADC sample time.  The averaging covers roughly the same time interval for all transmitters, which is about 1.2-1.7 milliseconds depending on the number of analog inputs.  Would be interesting to test some different settings, but really not much to be gained in latency from the ADC sampling.
I've tested all these protocols on the bench, and flown flysky and sfhss (no noticeable difference in ""feel"" to me).  There is a test build available but I think only one user has tried it, so would like to see more testing.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,532,2019-01-03T03:32:59Z,2019-01-08T19:04:15Z,2019-01-08T19:11:54Z,MERGED,True,330,128,18,https://github.com/hexfet,Reduce stick-to-air latency in some protocols with manual mixer scheduling,27,[],https://github.com/DeviationTX/deviation/pull/532,https://github.com/PhracturedBlue,4,https://github.com/DeviationTX/deviation/pull/532#issuecomment-451333310,"New function allows protocols to schedule the input sampling and mixer calculations.  Provides a means for protocols to reduce input-to-air latency by having inputs sampled and mixers run just before the protocol packet is assembled.  Protocols not using the new API remain unchanged, with input sampling and mixer calculations running every 5ms independent of protocol timing.
Measurements and discussion of design considerations are in this thread.
Functions added:
void CLOCK_RunMixer(volatile int *sync): This function generates an interrupt to sample the ADC inputs and run the mixer calculations.  Protocols can use this function to cause updated Channels values to be ready just when they are needed by the protocol.  The sync variable is cleared to 0 when this function is called, then set to 1 when the mixer update is complete.  The time required to complete mixer calculations depends on the complexity of the mixers in the model.  Protocols can check this variable to ensure the mixer calculations are complete when used, and adjust timing to ensure the minimum latency.  See frskyx_cc2500.c for an example.
void CLOCK_StartMixer(): Starts mixers running on periodic 5ms timer (same as previous behavior).  This is the default and is called every time a new protocol is loaded.
The protocols that are updated to reduce latency by scheduling mixers in the protocol are: crsf, devo, flysky, frsky, frskyx, sbus, sfhss.  The sbus protocol also gets a new option to adjust packet interval.","sounds good.  I did substantial testing of the ADC when I implemented it originally.  I believe the values are pretty much optimized for Devo 8/10/12/7e (possibly a little conservative for the 8/10).  I know I tried to balance the latency against the uncertainty.  The 12 was an outlier in how noisy it was but I think the CPU used is much faster and the ADC resolves quicker?  I dunno, it was a long time ago.  I don't think we ever even looked at any of the other transmitters since the values we had were good enough.  If any of them implemented proper shielding of the analog wires, the averaging could certainly be reduced though.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,532,2019-01-03T03:32:59Z,2019-01-08T19:04:15Z,2019-01-08T19:11:54Z,MERGED,True,330,128,18,https://github.com/hexfet,Reduce stick-to-air latency in some protocols with manual mixer scheduling,27,[],https://github.com/DeviationTX/deviation/pull/532,https://github.com/phobos-,5,https://github.com/DeviationTX/deviation/pull/532#issuecomment-451370301,"New function allows protocols to schedule the input sampling and mixer calculations.  Provides a means for protocols to reduce input-to-air latency by having inputs sampled and mixers run just before the protocol packet is assembled.  Protocols not using the new API remain unchanged, with input sampling and mixer calculations running every 5ms independent of protocol timing.
Measurements and discussion of design considerations are in this thread.
Functions added:
void CLOCK_RunMixer(volatile int *sync): This function generates an interrupt to sample the ADC inputs and run the mixer calculations.  Protocols can use this function to cause updated Channels values to be ready just when they are needed by the protocol.  The sync variable is cleared to 0 when this function is called, then set to 1 when the mixer update is complete.  The time required to complete mixer calculations depends on the complexity of the mixers in the model.  Protocols can check this variable to ensure the mixer calculations are complete when used, and adjust timing to ensure the minimum latency.  See frskyx_cc2500.c for an example.
void CLOCK_StartMixer(): Starts mixers running on periodic 5ms timer (same as previous behavior).  This is the default and is called every time a new protocol is loaded.
The protocols that are updated to reduce latency by scheduling mixers in the protocol are: crsf, devo, flysky, frsky, frskyx, sbus, sfhss.  The sbus protocol also gets a new option to adjust packet interval.",I really anticipated this feature and am willing to test it. I can test frsky flysky and sfhss . If you modify dsm2/dsmx I can test it as well.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,532,2019-01-03T03:32:59Z,2019-01-08T19:04:15Z,2019-01-08T19:11:54Z,MERGED,True,330,128,18,https://github.com/hexfet,Reduce stick-to-air latency in some protocols with manual mixer scheduling,27,[],https://github.com/DeviationTX/deviation/pull/532,https://github.com/hexfet,6,https://github.com/DeviationTX/deviation/pull/532#issuecomment-451583115,"New function allows protocols to schedule the input sampling and mixer calculations.  Provides a means for protocols to reduce input-to-air latency by having inputs sampled and mixers run just before the protocol packet is assembled.  Protocols not using the new API remain unchanged, with input sampling and mixer calculations running every 5ms independent of protocol timing.
Measurements and discussion of design considerations are in this thread.
Functions added:
void CLOCK_RunMixer(volatile int *sync): This function generates an interrupt to sample the ADC inputs and run the mixer calculations.  Protocols can use this function to cause updated Channels values to be ready just when they are needed by the protocol.  The sync variable is cleared to 0 when this function is called, then set to 1 when the mixer update is complete.  The time required to complete mixer calculations depends on the complexity of the mixers in the model.  Protocols can check this variable to ensure the mixer calculations are complete when used, and adjust timing to ensure the minimum latency.  See frskyx_cc2500.c for an example.
void CLOCK_StartMixer(): Starts mixers running on periodic 5ms timer (same as previous behavior).  This is the default and is called every time a new protocol is loaded.
The protocols that are updated to reduce latency by scheduling mixers in the protocol are: crsf, devo, flysky, frsky, frskyx, sbus, sfhss.  The sbus protocol also gets a new option to adjust packet interval.","Edit: Hold off on testing.  Commit 459b introduced a breaking bug.  Not immediately obvious...
Modified DSM protocols for reduced latency, though the changes would not fit in modular builds.  Test build is updated (850d7dd) but I won't be able to test until tomorrow.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,532,2019-01-03T03:32:59Z,2019-01-08T19:04:15Z,2019-01-08T19:11:54Z,MERGED,True,330,128,18,https://github.com/hexfet,Reduce stick-to-air latency in some protocols with manual mixer scheduling,27,[],https://github.com/DeviationTX/deviation/pull/532,https://github.com/hexfet,7,https://github.com/DeviationTX/deviation/pull/532#issuecomment-451630646,"New function allows protocols to schedule the input sampling and mixer calculations.  Provides a means for protocols to reduce input-to-air latency by having inputs sampled and mixers run just before the protocol packet is assembled.  Protocols not using the new API remain unchanged, with input sampling and mixer calculations running every 5ms independent of protocol timing.
Measurements and discussion of design considerations are in this thread.
Functions added:
void CLOCK_RunMixer(volatile int *sync): This function generates an interrupt to sample the ADC inputs and run the mixer calculations.  Protocols can use this function to cause updated Channels values to be ready just when they are needed by the protocol.  The sync variable is cleared to 0 when this function is called, then set to 1 when the mixer update is complete.  The time required to complete mixer calculations depends on the complexity of the mixers in the model.  Protocols can check this variable to ensure the mixer calculations are complete when used, and adjust timing to ensure the minimum latency.  See frskyx_cc2500.c for an example.
void CLOCK_StartMixer(): Starts mixers running on periodic 5ms timer (same as previous behavior).  This is the default and is called every time a new protocol is loaded.
The protocols that are updated to reduce latency by scheduling mixers in the protocol are: crsf, devo, flysky, frsky, frskyx, sbus, sfhss.  The sbus protocol also gets a new option to adjust packet interval.","Reverted commit 459b which changed the mixer_sync implementation from passed pointer to global.  No idea why it fails.  The assembly code is very similar for both implementations, with the difference being the additional indirection.  But with the global implementation the runtime behavior seems to not be consistent with the assembly code in the list file.  For example, selecting an unmodified protocol so the mixer runs on a timer same as master, the comparison of mixer_sync to MIX_TIMER fails and the mixer is never run.  Will continue to look at the global implementation but reverting 459b gives a working test build (f6223b0), which is updated on the Test Builds page.
Except for DSM which seems to be buggy :)  Will debug that this weekend.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,532,2019-01-03T03:32:59Z,2019-01-08T19:04:15Z,2019-01-08T19:11:54Z,MERGED,True,330,128,18,https://github.com/hexfet,Reduce stick-to-air latency in some protocols with manual mixer scheduling,27,[],https://github.com/DeviationTX/deviation/pull/532,https://github.com/hexfet,8,https://github.com/DeviationTX/deviation/pull/532#issuecomment-451689877,"New function allows protocols to schedule the input sampling and mixer calculations.  Provides a means for protocols to reduce input-to-air latency by having inputs sampled and mixers run just before the protocol packet is assembled.  Protocols not using the new API remain unchanged, with input sampling and mixer calculations running every 5ms independent of protocol timing.
Measurements and discussion of design considerations are in this thread.
Functions added:
void CLOCK_RunMixer(volatile int *sync): This function generates an interrupt to sample the ADC inputs and run the mixer calculations.  Protocols can use this function to cause updated Channels values to be ready just when they are needed by the protocol.  The sync variable is cleared to 0 when this function is called, then set to 1 when the mixer update is complete.  The time required to complete mixer calculations depends on the complexity of the mixers in the model.  Protocols can check this variable to ensure the mixer calculations are complete when used, and adjust timing to ensure the minimum latency.  See frskyx_cc2500.c for an example.
void CLOCK_StartMixer(): Starts mixers running on periodic 5ms timer (same as previous behavior).  This is the default and is called every time a new protocol is loaded.
The protocols that are updated to reduce latency by scheduling mixers in the protocol are: crsf, devo, flysky, frsky, frskyx, sbus, sfhss.  The sbus protocol also gets a new option to adjust packet interval.","Fixed the issue with the global implementation - just a regular bug.  Fixed the DSM protocol.  Rebased to master.  The test build is updated (c8db6b4).
I've tested sfhss and dsmx.  Will make a post asking for testing on the forum after checking the others.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,532,2019-01-03T03:32:59Z,2019-01-08T19:04:15Z,2019-01-08T19:11:54Z,MERGED,True,330,128,18,https://github.com/hexfet,Reduce stick-to-air latency in some protocols with manual mixer scheduling,27,[],https://github.com/DeviationTX/deviation/pull/532,https://github.com/PhracturedBlue,9,https://github.com/DeviationTX/deviation/pull/532#issuecomment-451695203,"New function allows protocols to schedule the input sampling and mixer calculations.  Provides a means for protocols to reduce input-to-air latency by having inputs sampled and mixers run just before the protocol packet is assembled.  Protocols not using the new API remain unchanged, with input sampling and mixer calculations running every 5ms independent of protocol timing.
Measurements and discussion of design considerations are in this thread.
Functions added:
void CLOCK_RunMixer(volatile int *sync): This function generates an interrupt to sample the ADC inputs and run the mixer calculations.  Protocols can use this function to cause updated Channels values to be ready just when they are needed by the protocol.  The sync variable is cleared to 0 when this function is called, then set to 1 when the mixer update is complete.  The time required to complete mixer calculations depends on the complexity of the mixers in the model.  Protocols can check this variable to ensure the mixer calculations are complete when used, and adjust timing to ensure the minimum latency.  See frskyx_cc2500.c for an example.
void CLOCK_StartMixer(): Starts mixers running on periodic 5ms timer (same as previous behavior).  This is the default and is called every time a new protocol is loaded.
The protocols that are updated to reduce latency by scheduling mixers in the protocol are: crsf, devo, flysky, frsky, frskyx, sbus, sfhss.  The sbus protocol also gets a new option to adjust packet interval.","As I'm writing tests for the mixer now, I realized that this change may break the MUX_DELAY mechanism.  Have you tested it?
If not, please do...I'll have a test for it pretty soon which may help",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,532,2019-01-03T03:32:59Z,2019-01-08T19:04:15Z,2019-01-08T19:11:54Z,MERGED,True,330,128,18,https://github.com/hexfet,Reduce stick-to-air latency in some protocols with manual mixer scheduling,27,[],https://github.com/DeviationTX/deviation/pull/532,https://github.com/PhracturedBlue,10,https://github.com/DeviationTX/deviation/pull/532#issuecomment-451697685,"New function allows protocols to schedule the input sampling and mixer calculations.  Provides a means for protocols to reduce input-to-air latency by having inputs sampled and mixers run just before the protocol packet is assembled.  Protocols not using the new API remain unchanged, with input sampling and mixer calculations running every 5ms independent of protocol timing.
Measurements and discussion of design considerations are in this thread.
Functions added:
void CLOCK_RunMixer(volatile int *sync): This function generates an interrupt to sample the ADC inputs and run the mixer calculations.  Protocols can use this function to cause updated Channels values to be ready just when they are needed by the protocol.  The sync variable is cleared to 0 when this function is called, then set to 1 when the mixer update is complete.  The time required to complete mixer calculations depends on the complexity of the mixers in the model.  Protocols can check this variable to ensure the mixer calculations are complete when used, and adjust timing to ensure the minimum latency.  See frskyx_cc2500.c for an example.
void CLOCK_StartMixer(): Starts mixers running on periodic 5ms timer (same as previous behavior).  This is the default and is called every time a new protocol is loaded.
The protocols that are updated to reduce latency by scheduling mixers in the protocol are: crsf, devo, flysky, frsky, frskyx, sbus, sfhss.  The sbus protocol also gets a new option to adjust packet interval.","...on further thought, my tests won't help at all. since the problem is the frequency of calling the mixer which can't be tested in unit tests.  My guess is you'll need to keep track of the # of milliseconds since the last mixer update and use that to compute the delay.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,532,2019-01-03T03:32:59Z,2019-01-08T19:04:15Z,2019-01-08T19:11:54Z,MERGED,True,330,128,18,https://github.com/hexfet,Reduce stick-to-air latency in some protocols with manual mixer scheduling,27,[],https://github.com/DeviationTX/deviation/pull/532,https://github.com/phobos-,11,https://github.com/DeviationTX/deviation/pull/532#issuecomment-451725280,"New function allows protocols to schedule the input sampling and mixer calculations.  Provides a means for protocols to reduce input-to-air latency by having inputs sampled and mixers run just before the protocol packet is assembled.  Protocols not using the new API remain unchanged, with input sampling and mixer calculations running every 5ms independent of protocol timing.
Measurements and discussion of design considerations are in this thread.
Functions added:
void CLOCK_RunMixer(volatile int *sync): This function generates an interrupt to sample the ADC inputs and run the mixer calculations.  Protocols can use this function to cause updated Channels values to be ready just when they are needed by the protocol.  The sync variable is cleared to 0 when this function is called, then set to 1 when the mixer update is complete.  The time required to complete mixer calculations depends on the complexity of the mixers in the model.  Protocols can check this variable to ensure the mixer calculations are complete when used, and adjust timing to ensure the minimum latency.  See frskyx_cc2500.c for an example.
void CLOCK_StartMixer(): Starts mixers running on periodic 5ms timer (same as previous behavior).  This is the default and is called every time a new protocol is loaded.
The protocols that are updated to reduce latency by scheduling mixers in the protocol are: crsf, devo, flysky, frsky, frskyx, sbus, sfhss.  The sbus protocol also gets a new option to adjust packet interval.","I happen to have a MUX_DELAY in my mixer, I use it to have turtle and arm on one switch, it doesn't work without delay in velocidrone. Will test soon and report here.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,532,2019-01-03T03:32:59Z,2019-01-08T19:04:15Z,2019-01-08T19:11:54Z,MERGED,True,330,128,18,https://github.com/hexfet,Reduce stick-to-air latency in some protocols with manual mixer scheduling,27,[],https://github.com/DeviationTX/deviation/pull/532,https://github.com/phobos-,12,https://github.com/DeviationTX/deviation/pull/532#issuecomment-451736063,"New function allows protocols to schedule the input sampling and mixer calculations.  Provides a means for protocols to reduce input-to-air latency by having inputs sampled and mixers run just before the protocol packet is assembled.  Protocols not using the new API remain unchanged, with input sampling and mixer calculations running every 5ms independent of protocol timing.
Measurements and discussion of design considerations are in this thread.
Functions added:
void CLOCK_RunMixer(volatile int *sync): This function generates an interrupt to sample the ADC inputs and run the mixer calculations.  Protocols can use this function to cause updated Channels values to be ready just when they are needed by the protocol.  The sync variable is cleared to 0 when this function is called, then set to 1 when the mixer update is complete.  The time required to complete mixer calculations depends on the complexity of the mixers in the model.  Protocols can check this variable to ensure the mixer calculations are complete when used, and adjust timing to ensure the minimum latency.  See frskyx_cc2500.c for an example.
void CLOCK_StartMixer(): Starts mixers running on periodic 5ms timer (same as previous behavior).  This is the default and is called every time a new protocol is loaded.
The protocols that are updated to reduce latency by scheduling mixers in the protocol are: crsf, devo, flysky, frsky, frskyx, sbus, sfhss.  The sbus protocol also gets a new option to adjust packet interval.","OK, delay is working fine (maybe a little slower (?)), and so is dsmx, flysky afhds 2a and frsky x eu. I checked for packetloss in betaflight and it looks fine, nothing out of ordinary.
I didnt notice any side effects so far. I feel maybe 1% more confident, but it might be placebo effect.
Will test it some more.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,532,2019-01-03T03:32:59Z,2019-01-08T19:04:15Z,2019-01-08T19:11:54Z,MERGED,True,330,128,18,https://github.com/hexfet,Reduce stick-to-air latency in some protocols with manual mixer scheduling,27,[],https://github.com/DeviationTX/deviation/pull/532,https://github.com/PhracturedBlue,13,https://github.com/DeviationTX/deviation/pull/532#issuecomment-451740326,"New function allows protocols to schedule the input sampling and mixer calculations.  Provides a means for protocols to reduce input-to-air latency by having inputs sampled and mixers run just before the protocol packet is assembled.  Protocols not using the new API remain unchanged, with input sampling and mixer calculations running every 5ms independent of protocol timing.
Measurements and discussion of design considerations are in this thread.
Functions added:
void CLOCK_RunMixer(volatile int *sync): This function generates an interrupt to sample the ADC inputs and run the mixer calculations.  Protocols can use this function to cause updated Channels values to be ready just when they are needed by the protocol.  The sync variable is cleared to 0 when this function is called, then set to 1 when the mixer update is complete.  The time required to complete mixer calculations depends on the complexity of the mixers in the model.  Protocols can check this variable to ensure the mixer calculations are complete when used, and adjust timing to ensure the minimum latency.  See frskyx_cc2500.c for an example.
void CLOCK_StartMixer(): Starts mixers running on periodic 5ms timer (same as previous behavior).  This is the default and is called every time a new protocol is loaded.
The protocols that are updated to reduce latency by scheduling mixers in the protocol are: crsf, devo, flysky, frsky, frskyx, sbus, sfhss.  The sbus protocol also gets a new option to adjust packet interval.","Sorry, that isn't really what I meant.  I'm sure the delay will do something, but I expect it to be too slow and to potentially vary per protocol.  There is a specific rate we expect to see.  I believe the code says that the movement should be 60 degrees in channel-value / 20 seconds.
It certainly should not be arbitrarily defined.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,532,2019-01-03T03:32:59Z,2019-01-08T19:04:15Z,2019-01-08T19:11:54Z,MERGED,True,330,128,18,https://github.com/hexfet,Reduce stick-to-air latency in some protocols with manual mixer scheduling,27,[],https://github.com/DeviationTX/deviation/pull/532,https://github.com/hexfet,14,https://github.com/DeviationTX/deviation/pull/532#issuecomment-451785687,"New function allows protocols to schedule the input sampling and mixer calculations.  Provides a means for protocols to reduce input-to-air latency by having inputs sampled and mixers run just before the protocol packet is assembled.  Protocols not using the new API remain unchanged, with input sampling and mixer calculations running every 5ms independent of protocol timing.
Measurements and discussion of design considerations are in this thread.
Functions added:
void CLOCK_RunMixer(volatile int *sync): This function generates an interrupt to sample the ADC inputs and run the mixer calculations.  Protocols can use this function to cause updated Channels values to be ready just when they are needed by the protocol.  The sync variable is cleared to 0 when this function is called, then set to 1 when the mixer update is complete.  The time required to complete mixer calculations depends on the complexity of the mixers in the model.  Protocols can check this variable to ensure the mixer calculations are complete when used, and adjust timing to ensure the minimum latency.  See frskyx_cc2500.c for an example.
void CLOCK_StartMixer(): Starts mixers running on periodic 5ms timer (same as previous behavior).  This is the default and is called every time a new protocol is loaded.
The protocols that are updated to reduce latency by scheduling mixers in the protocol are: crsf, devo, flysky, frsky, frskyx, sbus, sfhss.  The sbus protocol also gets a new option to adjust packet interval.","It should only be different for the protocols that have optimized latency.  For all the rest the code is effectively unchanged (mixer run triggered every MEDIUM_PRIORITY_MSEC).  I've coded a fix but haven't tested yet.  Finally had nice weekend weather...
Thanks for the protocol testing.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,532,2019-01-03T03:32:59Z,2019-01-08T19:04:15Z,2019-01-08T19:11:54Z,MERGED,True,330,128,18,https://github.com/hexfet,Reduce stick-to-air latency in some protocols with manual mixer scheduling,27,[],https://github.com/DeviationTX/deviation/pull/532,https://github.com/hexfet,15,https://github.com/DeviationTX/deviation/pull/532#issuecomment-452128353,"New function allows protocols to schedule the input sampling and mixer calculations.  Provides a means for protocols to reduce input-to-air latency by having inputs sampled and mixers run just before the protocol packet is assembled.  Protocols not using the new API remain unchanged, with input sampling and mixer calculations running every 5ms independent of protocol timing.
Measurements and discussion of design considerations are in this thread.
Functions added:
void CLOCK_RunMixer(volatile int *sync): This function generates an interrupt to sample the ADC inputs and run the mixer calculations.  Protocols can use this function to cause updated Channels values to be ready just when they are needed by the protocol.  The sync variable is cleared to 0 when this function is called, then set to 1 when the mixer update is complete.  The time required to complete mixer calculations depends on the complexity of the mixers in the model.  Protocols can check this variable to ensure the mixer calculations are complete when used, and adjust timing to ensure the minimum latency.  See frskyx_cc2500.c for an example.
void CLOCK_StartMixer(): Starts mixers running on periodic 5ms timer (same as previous behavior).  This is the default and is called every time a new protocol is loaded.
The protocols that are updated to reduce latency by scheduling mixers in the protocol are: crsf, devo, flysky, frsky, frskyx, sbus, sfhss.  The sbus protocol also gets a new option to adjust packet interval.","The test build is updated (ca5de44).  Tested the delay mux (and apply limits) fix on T8+ and devo10.  Timing is the same when compared with master for both unmodified and reduced latency protocols within eyeball accuracy.  Timed with stopwatch, and compared transmitters running master and reduce_latency side-by-side.",True,{'HOORAY': ['https://github.com/brycedjohnson']}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,532,2019-01-03T03:32:59Z,2019-01-08T19:04:15Z,2019-01-08T19:11:54Z,MERGED,True,330,128,18,https://github.com/hexfet,Reduce stick-to-air latency in some protocols with manual mixer scheduling,27,[],https://github.com/DeviationTX/deviation/pull/532,https://github.com/brycedjohnson,16,https://github.com/DeviationTX/deviation/pull/532#issuecomment-452177225,"New function allows protocols to schedule the input sampling and mixer calculations.  Provides a means for protocols to reduce input-to-air latency by having inputs sampled and mixers run just before the protocol packet is assembled.  Protocols not using the new API remain unchanged, with input sampling and mixer calculations running every 5ms independent of protocol timing.
Measurements and discussion of design considerations are in this thread.
Functions added:
void CLOCK_RunMixer(volatile int *sync): This function generates an interrupt to sample the ADC inputs and run the mixer calculations.  Protocols can use this function to cause updated Channels values to be ready just when they are needed by the protocol.  The sync variable is cleared to 0 when this function is called, then set to 1 when the mixer update is complete.  The time required to complete mixer calculations depends on the complexity of the mixers in the model.  Protocols can check this variable to ensure the mixer calculations are complete when used, and adjust timing to ensure the minimum latency.  See frskyx_cc2500.c for an example.
void CLOCK_StartMixer(): Starts mixers running on periodic 5ms timer (same as previous behavior).  This is the default and is called every time a new protocol is loaded.
The protocols that are updated to reduce latency by scheduling mixers in the protocol are: crsf, devo, flysky, frsky, frskyx, sbus, sfhss.  The sbus protocol also gets a new option to adjust packet interval.",Let me know and I can run latency test setup for end to end latency for frsky_x and CSFR that I already have data for.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,532,2019-01-03T03:32:59Z,2019-01-08T19:04:15Z,2019-01-08T19:11:54Z,MERGED,True,330,128,18,https://github.com/hexfet,Reduce stick-to-air latency in some protocols with manual mixer scheduling,27,[],https://github.com/DeviationTX/deviation/pull/532,https://github.com/hexfet,17,https://github.com/DeviationTX/deviation/pull/532#issuecomment-452416903,"New function allows protocols to schedule the input sampling and mixer calculations.  Provides a means for protocols to reduce input-to-air latency by having inputs sampled and mixers run just before the protocol packet is assembled.  Protocols not using the new API remain unchanged, with input sampling and mixer calculations running every 5ms independent of protocol timing.
Measurements and discussion of design considerations are in this thread.
Functions added:
void CLOCK_RunMixer(volatile int *sync): This function generates an interrupt to sample the ADC inputs and run the mixer calculations.  Protocols can use this function to cause updated Channels values to be ready just when they are needed by the protocol.  The sync variable is cleared to 0 when this function is called, then set to 1 when the mixer update is complete.  The time required to complete mixer calculations depends on the complexity of the mixers in the model.  Protocols can check this variable to ensure the mixer calculations are complete when used, and adjust timing to ensure the minimum latency.  See frskyx_cc2500.c for an example.
void CLOCK_StartMixer(): Starts mixers running on periodic 5ms timer (same as previous behavior).  This is the default and is called every time a new protocol is loaded.
The protocols that are updated to reduce latency by scheduling mixers in the protocol are: crsf, devo, flysky, frsky, frskyx, sbus, sfhss.  The sbus protocol also gets a new option to adjust packet interval.","@brycedjohnson Thanks that would be great.  The results should be similar to the last test build.
Although the mixer code seems to be running faster.  Seeing 20us for minimum mixers model, and 740us with maximum mixers model.  Previously I'd seen values over 1ms for max mixers.  Using a different test method so that may be the difference.  Probably not a significant enough difference to show up in your tests.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,533,2019-01-03T09:08:21Z,2019-01-03T15:31:51Z,2019-01-03T15:31:51Z,MERGED,True,239,119,17,https://github.com/howard0su,Add Scanner support to 128x64x1 screen,9,[],https://github.com/DeviationTX/deviation/pull/533,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/533,The freq scanner is ported over to 128x64 screen Tx including devo10/devo12e/t8sg/devo7e-256.,The freq scanner is ported over to 128x64 screen Tx including devo10/devo12e/t8sg/devo7e-256.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,533,2019-01-03T09:08:21Z,2019-01-03T15:31:51Z,2019-01-03T15:31:51Z,MERGED,True,239,119,17,https://github.com/howard0su,Add Scanner support to 128x64x1 screen,9,[],https://github.com/DeviationTX/deviation/pull/533,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/533#issuecomment-451138956,The freq scanner is ported over to 128x64 screen Tx including devo10/devo12e/t8sg/devo7e-256.,I don't have real hardware to test. please help.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,534,2019-01-04T04:00:21Z,2019-01-07T03:06:30Z,2019-01-10T11:32:28Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix perl build on Windows,2,[],https://github.com/DeviationTX/deviation/pull/534,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/534,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,534,2019-01-04T04:00:21Z,2019-01-07T03:06:30Z,2019-01-10T11:32:28Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix perl build on Windows,2,[],https://github.com/DeviationTX/deviation/pull/534,https://github.com/PhracturedBlue,2,https://github.com/DeviationTX/deviation/pull/534#issuecomment-451351022,,"Why is this change needed?  The '<' should force little-endian conversion, which I think is what is desired?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,534,2019-01-04T04:00:21Z,2019-01-07T03:06:30Z,2019-01-10T11:32:28Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix perl build on Windows,2,[],https://github.com/DeviationTX/deviation/pull/534,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/534#issuecomment-451354763,,"@goebish reported that perl on windows doesn't support ""S<"".",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,534,2019-01-04T04:00:21Z,2019-01-07T03:06:30Z,2019-01-10T11:32:28Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix perl build on Windows,2,[],https://github.com/DeviationTX/deviation/pull/534,https://github.com/PhracturedBlue,4,https://github.com/DeviationTX/deviation/pull/534#issuecomment-451355809,,You probably know better than I do.  Is it worth using 2 bytes and manually specifying the order?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,534,2019-01-04T04:00:21Z,2019-01-07T03:06:30Z,2019-01-10T11:32:28Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix perl build on Windows,2,[],https://github.com/DeviationTX/deviation/pull/534,https://github.com/howard0su,5,https://github.com/DeviationTX/deviation/pull/534#issuecomment-451359533,,"Yes, have to. otherwise lang.* cannot fit into 64kb flash with other media.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,534,2019-01-04T04:00:21Z,2019-01-07T03:06:30Z,2019-01-10T11:32:28Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix perl build on Windows,2,[],https://github.com/DeviationTX/deviation/pull/534,https://github.com/hexfet,6,https://github.com/DeviationTX/deviation/pull/534#issuecomment-451511721,,"The byte order modifier works on my Windows perl 5.1.2.  Doesn't make sense a feature like that would be OS dependent.  I don't build deviation on windows though.  What was the failure?
Wouldn't this change mean the output file would be different if built on a big-endian machine?  Which may never happen - don't have one myself to test on.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,534,2019-01-04T04:00:21Z,2019-01-07T03:06:30Z,2019-01-10T11:32:28Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix perl build on Windows,2,[],https://github.com/DeviationTX/deviation/pull/534,https://github.com/goebish,7,https://github.com/DeviationTX/deviation/pull/534#issuecomment-451512669,,"It doesn't work on my side, Windows, perl 5.8.8 msys-int64
5b3d421#commitcomment-31830468",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,534,2019-01-04T04:00:21Z,2019-01-07T03:06:30Z,2019-01-10T11:32:28Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix perl build on Windows,2,[],https://github.com/DeviationTX/deviation/pull/534,https://github.com/PhracturedBlue,8,https://github.com/DeviationTX/deviation/pull/534#issuecomment-451513723,,but it should probably be 'CC' (with appropriate casting) instead of 'S' to ensure the endianness?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,534,2019-01-04T04:00:21Z,2019-01-07T03:06:30Z,2019-01-10T11:32:28Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix perl build on Windows,2,[],https://github.com/DeviationTX/deviation/pull/534,https://github.com/howard0su,9,https://github.com/DeviationTX/deviation/pull/534#issuecomment-451789426,,verified with hexdump new and old language files.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,535,2019-01-04T06:55:19Z,2019-01-05T16:22:05Z,2019-01-10T11:32:06Z,MERGED,True,1546,0,15,https://github.com/howard0su,Introduce CuTest as Unittest framework,11,[],https://github.com/DeviationTX/deviation/pull/535,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/535,"Introduce CuTest framework. And run unittest as part of CI run. The unittest code will be in each individual C file following the naming convention as the following:

#ifdef TEST
#include ""CuTest.h""
void TestXTZ(CuTest *t)
{
}
#endif

The code will only compiled in TARGET=test build. test build is also a EMULATOR build.
I use the recent change in music.c as an example to show how to use this unittest framework. There are several telemetry decode test code can be converted into this framework.","Introduce CuTest framework. And run unittest as part of CI run. The unittest code will be in each individual C file following the naming convention as the following:

#ifdef TEST
#include ""CuTest.h""
void TestXTZ(CuTest *t)
{
}
#endif

The code will only compiled in TARGET=test build. test build is also a EMULATOR build.
I use the recent change in music.c as an example to show how to use this unittest framework. There are several telemetry decode test code can be converted into this framework.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,535,2019-01-04T06:55:19Z,2019-01-05T16:22:05Z,2019-01-10T11:32:06Z,MERGED,True,1546,0,15,https://github.com/howard0su,Introduce CuTest as Unittest framework,11,[],https://github.com/DeviationTX/deviation/pull/535,https://github.com/PhracturedBlue,2,https://github.com/DeviationTX/deviation/pull/535#issuecomment-451451113,"Introduce CuTest framework. And run unittest as part of CI run. The unittest code will be in each individual C file following the naming convention as the following:

#ifdef TEST
#include ""CuTest.h""
void TestXTZ(CuTest *t)
{
}
#endif

The code will only compiled in TARGET=test build. test build is also a EMULATOR build.
I use the recent change in music.c as an example to show how to use this unittest framework. There are several telemetry decode test code can be converted into this framework.","Thank you for doing this.  I really wish I had invested in unit tests when we started writing Deviation.  I have to say that I am not at all familiar with doing unit testing in C.  Why did you pick CUnit CuTest?  Also, I don't really like having my tests mixed with my source code, but not having tried this in C before, I'm not sure there are a lot of options.  Could we instead include the code to test into a test harness rather than using a new target?  As I said, I'm not really sure what options we have here.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,535,2019-01-04T06:55:19Z,2019-01-05T16:22:05Z,2019-01-10T11:32:06Z,MERGED,True,1546,0,15,https://github.com/howard0su,Introduce CuTest as Unittest framework,11,[],https://github.com/DeviationTX/deviation/pull/535,https://github.com/PhracturedBlue,3,https://github.com/DeviationTX/deviation/pull/535#issuecomment-451453997,"Introduce CuTest framework. And run unittest as part of CI run. The unittest code will be in each individual C file following the naming convention as the following:

#ifdef TEST
#include ""CuTest.h""
void TestXTZ(CuTest *t)
{
}
#endif

The code will only compiled in TARGET=test build. test build is also a EMULATOR build.
I use the recent change in music.c as an example to show how to use this unittest framework. There are several telemetry decode test code can be converted into this framework.","Also, in my experience, it is very important to have code-coverage runs alongside unit tests to see what has been covered.  I'd like to see that included automatically during the test (so that the test can easily be built and run and generate reports via make).  I haven't used it before, but 'gcovr' looks like it generates reports similar to what coverage.py does (which I have used and found incredibly helpful in building code coverage).  I think I'll be able to spare some cycles to help write some tests once we're finalized on the infrastructure.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,535,2019-01-04T06:55:19Z,2019-01-05T16:22:05Z,2019-01-10T11:32:06Z,MERGED,True,1546,0,15,https://github.com/howard0su,Introduce CuTest as Unittest framework,11,[],https://github.com/DeviationTX/deviation/pull/535,https://github.com/howard0su,4,https://github.com/DeviationTX/deviation/pull/535#issuecomment-451498283,"Introduce CuTest framework. And run unittest as part of CI run. The unittest code will be in each individual C file following the naming convention as the following:

#ifdef TEST
#include ""CuTest.h""
void TestXTZ(CuTest *t)
{
}
#endif

The code will only compiled in TARGET=test build. test build is also a EMULATOR build.
I use the recent change in music.c as an example to show how to use this unittest framework. There are several telemetry decode test code can be converted into this framework.","Why choosing CuTest over other C unit test framework
Most C unit test framework has almost identical feature sets. For example, CUnit provides the same feature as CuTest. I choose CuTest. Mainly because I was using it before. And second reason is that it only 2 files (.c + .h) and super easy to integrate.


Test harness
in many scenarios, we are writing the test cases for static variables and static functions. This requires the test code have to be in the same compile unit (.c) file. Of course, we can use the trick to #include another file which contains the test code.


However,  I don't like this approach. In the same file, you can easily write your test code by reference the function prototype and variables. The test code can served as documentation as well. In some modern languages, it is common to have the test code stay close with the code to be tested.


code coverage data
Yes. code coverage is important as well. I already enable collecting coverage data in this PR. When test.elf runs, it will generate the coverage data. We can use gcov or Lcov to generate nice report.


build test as a target
This simplified the build process and maintain cost. As the current code need lots of stubs here and there, making test as a target leverage the current build infra. And we don't need maintain a separated build scripts.
It is not hard to have a independent Makefile to build test. However it requires work to create those stubs. I don't like to get to that.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,535,2019-01-04T06:55:19Z,2019-01-05T16:22:05Z,2019-01-10T11:32:06Z,MERGED,True,1546,0,15,https://github.com/howard0su,Introduce CuTest as Unittest framework,11,[],https://github.com/DeviationTX/deviation/pull/535,https://github.com/PhracturedBlue,5,https://github.com/DeviationTX/deviation/pull/535#issuecomment-451499105,"Introduce CuTest framework. And run unittest as part of CI run. The unittest code will be in each individual C file following the naming convention as the following:

#ifdef TEST
#include ""CuTest.h""
void TestXTZ(CuTest *t)
{
}
#endif

The code will only compiled in TARGET=test build. test build is also a EMULATOR build.
I use the recent change in music.c as an example to show how to use this unittest framework. There are several telemetry decode test code can be converted into this framework.",CUnit (as an example) seems to supply a mock functionality which is something i can see a lot of use for.  I'd like to try an alternate approach and see how it goes before going forward.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,535,2019-01-04T06:55:19Z,2019-01-05T16:22:05Z,2019-01-10T11:32:06Z,MERGED,True,1546,0,15,https://github.com/howard0su,Introduce CuTest as Unittest framework,11,[],https://github.com/DeviationTX/deviation/pull/535,https://github.com/howard0su,6,https://github.com/DeviationTX/deviation/pull/535#issuecomment-451500907,"Introduce CuTest framework. And run unittest as part of CI run. The unittest code will be in each individual C file following the naming convention as the following:

#ifdef TEST
#include ""CuTest.h""
void TestXTZ(CuTest *t)
{
}
#endif

The code will only compiled in TARGET=test build. test build is also a EMULATOR build.
I use the recent change in music.c as an example to show how to use this unittest framework. There are several telemetry decode test code can be converted into this framework.","sure. if you believe CUnit is better option, I can help integrate it. not too much work.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,535,2019-01-04T06:55:19Z,2019-01-05T16:22:05Z,2019-01-10T11:32:06Z,MERGED,True,1546,0,15,https://github.com/howard0su,Introduce CuTest as Unittest framework,11,[],https://github.com/DeviationTX/deviation/pull/535,https://github.com/PhracturedBlue,7,https://github.com/DeviationTX/deviation/pull/535#issuecomment-451503902,"Introduce CuTest framework. And run unittest as part of CI run. The unittest code will be in each individual C file following the naming convention as the following:

#ifdef TEST
#include ""CuTest.h""
void TestXTZ(CuTest *t)
{
}
#endif

The code will only compiled in TARGET=test build. test build is also a EMULATOR build.
I use the recent change in music.c as an example to show how to use this unittest framework. There are several telemetry decode test code can be converted into this framework.",I'm going to try to do a proof of concept 1st to see how it goes.  I don't want to go down the wrong path here.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,535,2019-01-04T06:55:19Z,2019-01-05T16:22:05Z,2019-01-10T11:32:06Z,MERGED,True,1546,0,15,https://github.com/howard0su,Introduce CuTest as Unittest framework,11,[],https://github.com/DeviationTX/deviation/pull/535,https://github.com/PhracturedBlue,8,https://github.com/DeviationTX/deviation/pull/535#issuecomment-451552033,"Introduce CuTest framework. And run unittest as part of CI run. The unittest code will be in each individual C file following the naming convention as the following:

#ifdef TEST
#include ""CuTest.h""
void TestXTZ(CuTest *t)
{
}
#endif

The code will only compiled in TARGET=test build. test build is also a EMULATOR build.
I use the recent change in music.c as an example to show how to use this unittest framework. There are several telemetry decode test code can be converted into this framework.","After spending an hour looking at it, I now understand why you did it the way you did better.  I think I'm okay with using CuTest.  The other solutions I've looked at are much heavier, and don't necessarily provide enough benefit.  However, while your implementation makes the build very easy, my concern is that it allows tests to interact due to sharing memory between tests.  I'm thinking about ways to better isolate tests even if it requires using an independent build system for tests.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,535,2019-01-04T06:55:19Z,2019-01-05T16:22:05Z,2019-01-10T11:32:06Z,MERGED,True,1546,0,15,https://github.com/howard0su,Introduce CuTest as Unittest framework,11,[],https://github.com/DeviationTX/deviation/pull/535,https://github.com/howard0su,9,https://github.com/DeviationTX/deviation/pull/535#issuecomment-451606990,"Introduce CuTest framework. And run unittest as part of CI run. The unittest code will be in each individual C file following the naming convention as the following:

#ifdef TEST
#include ""CuTest.h""
void TestXTZ(CuTest *t)
{
}
#endif

The code will only compiled in TARGET=test build. test build is also a EMULATOR build.
I use the recent change in music.c as an example to show how to use this unittest framework. There are several telemetry decode test code can be converted into this framework.","I think shared memory is fine as far as tests can initialize the shared memory into a known state.
If we want to compile all the code, you end up to add all the files into the build. The solution will be simliar. My concern around build is that we cannot test some code which is not able to include together like devofs and fatfs.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,535,2019-01-04T06:55:19Z,2019-01-05T16:22:05Z,2019-01-10T11:32:06Z,MERGED,True,1546,0,15,https://github.com/howard0su,Introduce CuTest as Unittest framework,11,[],https://github.com/DeviationTX/deviation/pull/535,https://github.com/howard0su,10,https://github.com/DeviationTX/deviation/pull/535#issuecomment-451614213,"Introduce CuTest framework. And run unittest as part of CI run. The unittest code will be in each individual C file following the naming convention as the following:

#ifdef TEST
#include ""CuTest.h""
void TestXTZ(CuTest *t)
{
}
#endif

The code will only compiled in TARGET=test build. test build is also a EMULATOR build.
I use the recent change in music.c as an example to show how to use this unittest framework. There are several telemetry decode test code can be converted into this framework.","*Gcovr* provides a utility for managing the use of gcov and generating
summarized code coverage results. This command is inspired by the Python
coverage.py package, which provides a similar utility in Python. Gcovr
produces either compact human-readable summary reports, machine readable
XML reports or a graphical HTML summary. The XML reports generated by gcovr
can be used by Jenkins <https://en.wikipedia.org/wiki/Jenkins_(software)> to
provide graphical code coverage summaries. Gcovr supports statement and
branch coverage measurement[7]
<https://en.wikipedia.org/wiki/Gcov#cite_note-7>

I think this is what you are looking for. However I don't have a good idea
how to integrate this though. looks like we need somewhere to host the
generated HTML files. Maybe generate it from every nightly build.
…
On Sat, Jan 5, 2019 at 3:58 AM PhracturedBlue ***@***.***> wrote:
 After spending an hour looking at it, I now understand why you did it the
 way you did better. I think I'm okay with using CuTest. The other solutions
 I've looked at are much heavier, and don't necessarily provide enough
 benefit. However, while your implementation makes the build very easy, my
 concern is that it allows tests to interact due to sharing memory between
 tests. I'm thinking about ways to better isolate tests even if it requires
 using an independent build system for tests.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#535 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRNA2sBdGRGsnpG6jMAI6Fe64iO8Vks5u_7JUgaJpZM4ZpObd>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,535,2019-01-04T06:55:19Z,2019-01-05T16:22:05Z,2019-01-10T11:32:06Z,MERGED,True,1546,0,15,https://github.com/howard0su,Introduce CuTest as Unittest framework,11,[],https://github.com/DeviationTX/deviation/pull/535,https://github.com/PhracturedBlue,11,https://github.com/DeviationTX/deviation/pull/535#issuecomment-451665021,"Introduce CuTest framework. And run unittest as part of CI run. The unittest code will be in each individual C file following the naming convention as the following:

#ifdef TEST
#include ""CuTest.h""
void TestXTZ(CuTest *t)
{
}
#endif

The code will only compiled in TARGET=test build. test build is also a EMULATOR build.
I use the recent change in music.c as an example to show how to use this unittest framework. There are several telemetry decode test code can be converted into this framework.","How about something like this instead:
#544
I'm still not really happy with it, but I think it is something I could live with.  We'll likely need to rethink the test target since as you noted it won't let us test things that are tx specific.  But I'd rather get something merged and get some base-tests written I think",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,535,2019-01-04T06:55:19Z,2019-01-05T16:22:05Z,2019-01-10T11:32:06Z,MERGED,True,1546,0,15,https://github.com/howard0su,Introduce CuTest as Unittest framework,11,[],https://github.com/DeviationTX/deviation/pull/535,https://github.com/howard0su,12,https://github.com/DeviationTX/deviation/pull/535#issuecomment-451666868,"Introduce CuTest framework. And run unittest as part of CI run. The unittest code will be in each individual C file following the naming convention as the following:

#ifdef TEST
#include ""CuTest.h""
void TestXTZ(CuTest *t)
{
}
#endif

The code will only compiled in TARGET=test build. test build is also a EMULATOR build.
I use the recent change in music.c as an example to show how to use this unittest framework. There are several telemetry decode test code can be converted into this framework.","Your changes looks good to me. You may want to change test/make-tests.sh
<#544 (comment)>
to
only look at tests/*.c for test cases.

How to get the test build for each target is a little bit tricky. Maybe we
can combine test with emu with some way. Then we can test more on target
specific things. I agree with you, let's first get this in so that we can
encourage to convert some existing tests to this framework. go ahead to
merge your PR please.
…
On Sat, Jan 5, 2019 at 11:32 PM PhracturedBlue ***@***.***> wrote:
 How about something like this instead:
 #544 <#544>

 I'm still not really happy with it, but I think it is something I could
 live with. We'll likely need to rethink the test target since as you noted
 it won't let us test things that are tx specific. But I'd rather get
 something merged and get some base-tests written I think

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#535 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRARsrCmfCeBDX-ydZcmja2Nky4gfks5vAMWVgaJpZM4ZpObd>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,535,2019-01-04T06:55:19Z,2019-01-05T16:22:05Z,2019-01-10T11:32:06Z,MERGED,True,1546,0,15,https://github.com/howard0su,Introduce CuTest as Unittest framework,11,[],https://github.com/DeviationTX/deviation/pull/535,https://github.com/howard0su,13,https://github.com/DeviationTX/deviation/pull/535#issuecomment-451666956,"Introduce CuTest framework. And run unittest as part of CI run. The unittest code will be in each individual C file following the naming convention as the following:

#ifdef TEST
#include ""CuTest.h""
void TestXTZ(CuTest *t)
{
}
#endif

The code will only compiled in TARGET=test build. test build is also a EMULATOR build.
I use the recent change in music.c as an example to show how to use this unittest framework. There are several telemetry decode test code can be converted into this framework.","forgot to mention, gcovr can generate nice report in HTML as well. Please
think about how to host it as I am not familiar with the infrastructure.
…
On Sat, Jan 5, 2019 at 11:57 PM Howard Su ***@***.***> wrote:
 Your changes looks good to me. You may want to change test/make-tests.sh
 <#544 (comment)> to
 only look at tests/*.c for test cases.

 How to get the test build for each target is a little bit tricky. Maybe we
 can combine test with emu with some way. Then we can test more on target
 specific things. I agree with you, let's first get this in so that we can
 encourage to convert some existing tests to this framework. go ahead to
 merge your PR please.

 On Sat, Jan 5, 2019 at 11:32 PM PhracturedBlue ***@***.***>
 wrote:

> How about something like this instead:
> #544 <#544>
>
> I'm still not really happy with it, but I think it is something I could
> live with. We'll likely need to rethink the test target since as you noted
> it won't let us test things that are tx specific. But I'd rather get
> something merged and get some base-tests written I think
>
> —
> You are receiving this because you authored the thread.
> Reply to this email directly, view it on GitHub
> <#535 (comment)>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/AAuzRARsrCmfCeBDX-ydZcmja2Nky4gfks5vAMWVgaJpZM4ZpObd>
> .
>


 --
 -Howard


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,535,2019-01-04T06:55:19Z,2019-01-05T16:22:05Z,2019-01-10T11:32:06Z,MERGED,True,1546,0,15,https://github.com/howard0su,Introduce CuTest as Unittest framework,11,[],https://github.com/DeviationTX/deviation/pull/535,https://github.com/PhracturedBlue,14,https://github.com/DeviationTX/deviation/pull/535#issuecomment-451692812,"Introduce CuTest framework. And run unittest as part of CI run. The unittest code will be in each individual C file following the naming convention as the following:

#ifdef TEST
#include ""CuTest.h""
void TestXTZ(CuTest *t)
{
}
#endif

The code will only compiled in TARGET=test build. test build is also a EMULATOR build.
I use the recent change in music.c as an example to show how to use this unittest framework. There are several telemetry decode test code can be converted into this framework.",I've enabled coveralls integration now to track code coverage,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,535,2019-01-04T06:55:19Z,2019-01-05T16:22:05Z,2019-01-10T11:32:06Z,MERGED,True,1546,0,15,https://github.com/howard0su,Introduce CuTest as Unittest framework,11,[],https://github.com/DeviationTX/deviation/pull/535,https://github.com/howard0su,15,https://github.com/DeviationTX/deviation/pull/535#issuecomment-451738106,"Introduce CuTest framework. And run unittest as part of CI run. The unittest code will be in each individual C file following the naming convention as the following:

#ifdef TEST
#include ""CuTest.h""
void TestXTZ(CuTest *t)
{
}
#endif

The code will only compiled in TARGET=test build. test build is also a EMULATOR build.
I use the recent change in music.c as an example to show how to use this unittest framework. There are several telemetry decode test code can be converted into this framework.","where can i find the result of coveralls?
…
On Sun, Jan 6, 2019 at 5:41 AM PhracturedBlue ***@***.***> wrote:
 I've enabled coveralls integration now to track code coverage

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#535 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRHsgBxw2vj1zT0k3PprxpvcxNoUpks5vARwXgaJpZM4ZpObd>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,535,2019-01-04T06:55:19Z,2019-01-05T16:22:05Z,2019-01-10T11:32:06Z,MERGED,True,1546,0,15,https://github.com/howard0su,Introduce CuTest as Unittest framework,11,[],https://github.com/DeviationTX/deviation/pull/535,https://github.com/PhracturedBlue,16,https://github.com/DeviationTX/deviation/pull/535#issuecomment-451740478,"Introduce CuTest framework. And run unittest as part of CI run. The unittest code will be in each individual C file following the naming convention as the following:

#ifdef TEST
#include ""CuTest.h""
void TestXTZ(CuTest *t)
{
}
#endif

The code will only compiled in TARGET=test build. test build is also a EMULATOR build.
I use the recent change in music.c as an example to show how to use this unittest framework. There are several telemetry decode test code can be converted into this framework.","It is linked to in the README.md. (Just go to https://github.com/DeviationTX/deviation)
Or go here directly:
https://coveralls.io/github/DeviationTX/deviation?branch=master",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,537,2019-01-04T14:19:21Z,2019-01-04T14:54:34Z,2019-01-04T14:54:34Z,MERGED,True,3,3,1,https://github.com/vladislavy,Fix 128x64x1 scanner page,1,[],https://github.com/DeviationTX/deviation/pull/537,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/537,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,538,2019-01-04T14:42:03Z,2019-01-04T15:01:00Z,2019-01-04T15:01:00Z,MERGED,True,241,118,17,https://github.com/vladislavy,"Add Scanner support to 128x64x1 GUI, from howard0su",2,[],https://github.com/DeviationTX/deviation/pull/538,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/538,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,539,2019-01-04T16:45:22Z,2019-01-06T15:47:32Z,2019-01-10T11:31:32Z,MERGED,True,5,16,1,https://github.com/howard0su,optimize module load code,2,[],https://github.com/DeviationTX/deviation/pull/539,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/539,"Simplify the load logic to read .mod file
Fix error handling
Make sure we switch back font before we disable dialog.
Save about 50 bytes ROM.","Simplify the load logic to read .mod file
Fix error handling
Make sure we switch back font before we disable dialog.
Save about 50 bytes ROM.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,540,2019-01-05T02:41:15Z,2019-01-06T00:18:44Z,2019-01-06T00:18:44Z,MERGED,True,4,1,2,https://github.com/TheRealMoeder,Add padding to save about 130 bytes in devo7e,3,[],https://github.com/DeviationTX/deviation/pull/540,https://github.com/TheRealMoeder,1,https://github.com/DeviationTX/deviation/pull/540,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,542,2019-01-05T08:52:55Z,2019-01-05T14:57:14Z,2019-01-10T11:31:21Z,MERGED,True,4,4,2,https://github.com/howard0su,Check PageID instead Page.init,1,[],https://github.com/DeviationTX/deviation/pull/542,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/542,This make logic explicit and in the same it saves 16 bytes ROM.,This make logic explicit and in the same it saves 16 bytes ROM.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,543,2019-01-05T10:12:32Z,2019-01-06T13:44:04Z,2019-01-10T11:31:13Z,MERGED,True,7,61,43,https://github.com/howard0su,remove PAGE_RemoveAllObjects in Page Init function,3,[],https://github.com/DeviationTX/deviation/pull/543,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/543,"It is not needed as it is called already by PAGE_ChangeByID before calling Init function.
Also remove _tr call to the result of PAGE_GetName, which is already localized.","It is not needed as it is called already by PAGE_ChangeByID before calling Init function.
Also remove _tr call to the result of PAGE_GetName, which is already localized.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,544,2019-01-05T15:28:48Z,2019-01-05T16:22:04Z,2019-01-05T16:22:04Z,MERGED,True,1565,0,18,https://github.com/PhracturedBlue,Slight modification to howard0su's CuTest framework,14,[],https://github.com/DeviationTX/deviation/pull/544,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/544,I've just added some preprocessor code so that tests can live in their own files.,I've just added some preprocessor code so that tests can live in their own files.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,545,2019-01-05T18:19:50Z,2019-01-05T22:34:45Z,2019-01-05T22:34:46Z,MERGED,True,11,8,2,https://github.com/PhracturedBlue,Convert mixer beep_lock and voice_lock variables to flags.,1,[],https://github.com/DeviationTX/deviation/pull/545,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/545,"This patch saves 248bytes of RAM, 124 bytes of rom.
I am not currently setup to actually test this so I'd appreciate it if someone could double check it.","This patch saves 248bytes of RAM, 124 bytes of rom.
I am not currently setup to actually test this so I'd appreciate it if someone could double check it.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,546,2019-01-06T14:18:40Z,2019-01-06T19:55:24Z,2019-01-06T19:55:24Z,MERGED,True,12,21,3,https://github.com/PhracturedBlue,Fix trim calculation,1,[],https://github.com/DeviationTX/deviation/pull/546,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/546,"The trim code is basically broken for many cases.
It is supposed to work as follows:
trim step moves in 0.1% increments from 0% to 10%
trim step moves in 1% increments from 10% to 100%
trim value has a maximum range of -100% to 100% and is independent of the step.  It should move 1% for a short-press of the trim button and 10% for a long-press of the trim button
the channel value should be adjusted based on trim-step * trim-value

The current code does not calculate the channel-adjustment properly with trim-step > 1% and does not consistently update the step-size with trim-step > 1%
This patch affects how trims are calculated and so could theoretically break models, but the trims were basically unusable in the range that the patch fixes anyway.","The trim code is basically broken for many cases.
It is supposed to work as follows:
trim step moves in 0.1% increments from 0% to 10%
trim step moves in 1% increments from 10% to 100%
trim value has a maximum range of -100% to 100% and is independent of the step.  It should move 1% for a short-press of the trim button and 10% for a long-press of the trim button
the channel value should be adjusted based on trim-step * trim-value

The current code does not calculate the channel-adjustment properly with trim-step > 1% and does not consistently update the step-size with trim-step > 1%
This patch affects how trims are calculated and so could theoretically break models, but the trims were basically unusable in the range that the patch fixes anyway.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,546,2019-01-06T14:18:40Z,2019-01-06T19:55:24Z,2019-01-06T19:55:24Z,MERGED,True,12,21,3,https://github.com/PhracturedBlue,Fix trim calculation,1,[],https://github.com/DeviationTX/deviation/pull/546,https://github.com/PhracturedBlue,2,https://github.com/DeviationTX/deviation/pull/546#issuecomment-451747859,"The trim code is basically broken for many cases.
It is supposed to work as follows:
trim step moves in 0.1% increments from 0% to 10%
trim step moves in 1% increments from 10% to 100%
trim value has a maximum range of -100% to 100% and is independent of the step.  It should move 1% for a short-press of the trim button and 10% for a long-press of the trim button
the channel value should be adjusted based on trim-step * trim-value

The current code does not calculate the channel-adjustment properly with trim-step > 1% and does not consistently update the step-size with trim-step > 1%
This patch affects how trims are calculated and so could theoretically break models, but the trims were basically unusable in the range that the patch fixes anyway.","I am in the process of writing full test coverage for the mixer.  That is what led me to find that the trim was broken in the 1st place.  So yes, I will be adding test coverage to ensure that the trims work properly, just not finished yet",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,547,2019-01-06T16:57:00Z,2019-01-11T20:31:40Z,2019-01-11T20:36:43Z,MERGED,True,30,36,1,https://github.com/TheRealMoeder,Save 128 bytes for 7e in mixer.c,3,[],https://github.com/DeviationTX/deviation/pull/547,https://github.com/TheRealMoeder,1,https://github.com/DeviationTX/deviation/pull/547,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,547,2019-01-06T16:57:00Z,2019-01-11T20:31:40Z,2019-01-11T20:36:43Z,MERGED,True,30,36,1,https://github.com/TheRealMoeder,Save 128 bytes for 7e in mixer.c,3,[],https://github.com/DeviationTX/deviation/pull/547,https://github.com/PhracturedBlue,2,https://github.com/DeviationTX/deviation/pull/547#issuecomment-451769133,,"I was ok with the 1st iteration (50 bytes) since it modified code that I had already written tests for.  The new version modifies the cyclic which I haven't written tests for.  I'm sure it is fine, but would prefer to defer cleanups of the mixer on code that does not yet have functional tests",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,547,2019-01-06T16:57:00Z,2019-01-11T20:31:40Z,2019-01-11T20:36:43Z,MERGED,True,30,36,1,https://github.com/TheRealMoeder,Save 128 bytes for 7e in mixer.c,3,[],https://github.com/DeviationTX/deviation/pull/547,https://github.com/PhracturedBlue,3,https://github.com/DeviationTX/deviation/pull/547#issuecomment-451769293,,"also, can you rebase to the latest code.  We should now actually see how many bytes are saved in the travis builds (I hope)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,547,2019-01-06T16:57:00Z,2019-01-11T20:31:40Z,2019-01-11T20:36:43Z,MERGED,True,30,36,1,https://github.com/TheRealMoeder,Save 128 bytes for 7e in mixer.c,3,[],https://github.com/DeviationTX/deviation/pull/547,https://github.com/TheRealMoeder,4,https://github.com/DeviationTX/deviation/pull/547#issuecomment-451769998,,"I was ok with the 1st iteration (50 bytes) since it modified code that I had already written tests for. The new version modifies the cyclic which I haven't written tests for. I'm sure it is fine, but would prefer to defer cleanups of the mixer on code that does not yet have functional tests

Then let's just wait with the merge. We're not in the need for memory right now anyways, as we already have 1.5 kB spared for which we will have to decide what to do with it ;) I just fun to do look for opportunities 😸",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,547,2019-01-06T16:57:00Z,2019-01-11T20:31:40Z,2019-01-11T20:36:43Z,MERGED,True,30,36,1,https://github.com/TheRealMoeder,Save 128 bytes for 7e in mixer.c,3,[],https://github.com/DeviationTX/deviation/pull/547,https://github.com/TheRealMoeder,5,https://github.com/DeviationTX/deviation/pull/547#issuecomment-451770259,,"also, can you rebase to the latest code. We should now actually see how many bytes are saved in the travis builds (I hope)

It works, but delta for RAM is wrong, it calculates as rOm_old - rAm_new currently",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,547,2019-01-06T16:57:00Z,2019-01-11T20:31:40Z,2019-01-11T20:36:43Z,MERGED,True,30,36,1,https://github.com/TheRealMoeder,Save 128 bytes for 7e in mixer.c,3,[],https://github.com/DeviationTX/deviation/pull/547,https://github.com/PhracturedBlue,6,https://github.com/DeviationTX/deviation/pull/547#issuecomment-451770349,,"Looks like the delta calculation is good for the ROM but not for the RAM...thought I fixed that already. Will fix. Still it is a pretty cool metric to see how a patch impacts all targets.
Given this new data, I could trigger a failure if the memory increased a certain percentage (it would really just be a warning that the patch has significant impact).  Thoughts?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,547,2019-01-06T16:57:00Z,2019-01-11T20:31:40Z,2019-01-11T20:36:43Z,MERGED,True,30,36,1,https://github.com/TheRealMoeder,Save 128 bytes for 7e in mixer.c,3,[],https://github.com/DeviationTX/deviation/pull/547,https://github.com/TheRealMoeder,7,https://github.com/DeviationTX/deviation/pull/547#issuecomment-451770475,,Nevermind...,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,547,2019-01-06T16:57:00Z,2019-01-11T20:31:40Z,2019-01-11T20:36:43Z,MERGED,True,30,36,1,https://github.com/TheRealMoeder,Save 128 bytes for 7e in mixer.c,3,[],https://github.com/DeviationTX/deviation/pull/547,https://github.com/TheRealMoeder,8,https://github.com/DeviationTX/deviation/pull/547#issuecomment-452617660,,I will update this when PR #555 is merged.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,547,2019-01-06T16:57:00Z,2019-01-11T20:31:40Z,2019-01-11T20:36:43Z,MERGED,True,30,36,1,https://github.com/TheRealMoeder,Save 128 bytes for 7e in mixer.c,3,[],https://github.com/DeviationTX/deviation/pull/547,https://github.com/TheRealMoeder,9,https://github.com/DeviationTX/deviation/pull/547#issuecomment-453647168,,@PhracturedBlue: after rebase and resolving conflicts mixer tests passed. Merge?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,548,2019-01-06T17:34:53Z,2019-01-06T17:45:07Z,2019-01-07T13:48:51Z,MERGED,True,217,0,2,https://github.com/PhracturedBlue,Store build image size (ram/rom) in GitHub status,3,[],https://github.com/DeviationTX/deviation/pull/548,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/548,This will preserve image size for each build and annotate it (along with deltas) onto pull requests,This will preserve image size for each build and annotate it (along with deltas) onto pull requests,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,549,2019-01-06T17:50:02Z,2019-01-06T19:43:12Z,2019-01-06T19:43:12Z,CLOSED,False,4,1,2,https://github.com/PhracturedBlue,This is a bogus pull-request to test whether we can calulate image size deltas,2,[],https://github.com/DeviationTX/deviation/pull/549,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/549,travis should now report image size deltas for pull-requests.  This is just a test.  Do not merge this!,travis should now report image size deltas for pull-requests.  This is just a test.  Do not merge this!,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,549,2019-01-06T17:50:02Z,2019-01-06T19:43:12Z,2019-01-06T19:43:12Z,CLOSED,False,4,1,2,https://github.com/PhracturedBlue,This is a bogus pull-request to test whether we can calulate image size deltas,2,[],https://github.com/DeviationTX/deviation/pull/549,https://github.com/TheRealMoeder,2,https://github.com/DeviationTX/deviation/pull/549#issuecomment-451763966,travis should now report image size deltas for pull-requests.  This is just a test.  Do not merge this!,GITHUB_TOKEN is not available in PRs for security reason. Otherwise a PR could mess  A LOT of things up...,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,549,2019-01-06T17:50:02Z,2019-01-06T19:43:12Z,2019-01-06T19:43:12Z,CLOSED,False,4,1,2,https://github.com/PhracturedBlue,This is a bogus pull-request to test whether we can calulate image size deltas,2,[],https://github.com/DeviationTX/deviation/pull/549,https://github.com/PhracturedBlue,3,https://github.com/DeviationTX/deviation/pull/549#issuecomment-451764836,travis should now report image size deltas for pull-requests.  This is just a test.  Do not merge this!,"nah...the token is quite restricted...risk is marginal.  I'll probably try to switch this over to using the CheckAPI anyhow, but wanna see if this works 1st",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,549,2019-01-06T17:50:02Z,2019-01-06T19:43:12Z,2019-01-06T19:43:12Z,CLOSED,False,4,1,2,https://github.com/PhracturedBlue,This is a bogus pull-request to test whether we can calulate image size deltas,2,[],https://github.com/DeviationTX/deviation/pull/549,https://github.com/TheRealMoeder,4,https://github.com/DeviationTX/deviation/pull/549#issuecomment-451767248,travis should now report image size deltas for pull-requests.  This is just a test.  Do not merge this!,"nah...the token is quite restricted...risk is marginal. I'll probably try to switch this over to using the CheckAPI anyhow, but wanna see if this works 1st

I didn't remember the token could be restricted to status only...anyway, sweet feature!",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,549,2019-01-06T17:50:02Z,2019-01-06T19:43:12Z,2019-01-06T19:43:12Z,CLOSED,False,4,1,2,https://github.com/PhracturedBlue,This is a bogus pull-request to test whether we can calulate image size deltas,2,[],https://github.com/DeviationTX/deviation/pull/549,https://github.com/PhracturedBlue,5,https://github.com/DeviationTX/deviation/pull/549#issuecomment-451768768,travis should now report image size deltas for pull-requests.  This is just a test.  Do not merge this!,Seems to be working for now.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,550,2019-01-06T18:01:46Z,2019-01-11T20:21:19Z,2019-01-20T13:34:49Z,MERGED,True,34,12,18,https://github.com/howard0su,Enable optimized link for all devo targets,2,[],https://github.com/DeviationTX/deviation/pull/550,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/550,"For most targets, no need to have seperate _opt.ld now. Enhence Makefile to use original ld file.
at9 crc offset set to 0x150 right after vector table to avoid padding.","For most targets, no need to have seperate _opt.ld now. Enhence Makefile to use original ld file.
at9 crc offset set to 0x150 right after vector table to avoid padding.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,550,2019-01-06T18:01:46Z,2019-01-11T20:21:19Z,2019-01-20T13:34:49Z,MERGED,True,34,12,18,https://github.com/howard0su,Enable optimized link for all devo targets,2,[],https://github.com/DeviationTX/deviation/pull/550,https://github.com/vladislavy,2,https://github.com/DeviationTX/deviation/pull/550#issuecomment-451761882,"For most targets, no need to have seperate _opt.ld now. Enhence Makefile to use original ld file.
at9 crc offset set to 0x150 right after vector table to avoid padding.","Why devo7e-256 CRC_OFFSET := 4096 ???
CRC_OFFSET := 8192",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,550,2019-01-06T18:01:46Z,2019-01-11T20:21:19Z,2019-01-20T13:34:49Z,MERGED,True,34,12,18,https://github.com/howard0su,Enable optimized link for all devo targets,2,[],https://github.com/DeviationTX/deviation/pull/550,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/550#issuecomment-451795978,"For most targets, no need to have seperate _opt.ld now. Enhence Makefile to use original ld file.
at9 crc offset set to 0x150 right after vector table to avoid padding.",Extract CRC_OFFSET from the linker script to avoid mismatch offset.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,550,2019-01-06T18:01:46Z,2019-01-11T20:21:19Z,2019-01-20T13:34:49Z,MERGED,True,34,12,18,https://github.com/howard0su,Enable optimized link for all devo targets,2,[],https://github.com/DeviationTX/deviation/pull/550,https://github.com/PhracturedBlue,4,https://github.com/DeviationTX/deviation/pull/550#issuecomment-451809562,"For most targets, no need to have seperate _opt.ld now. Enhence Makefile to use original ld file.
at9 crc offset set to 0x150 right after vector table to avoid padding.","With this setup do we properly detect a memory overrun on the devo7e?  I assume the 2nd pass will fail?
The changes look fine to me, but I'd want to see either a comparison of the map files before and after, or some user testing before committing it.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,550,2019-01-06T18:01:46Z,2019-01-11T20:21:19Z,2019-01-20T13:34:49Z,MERGED,True,34,12,18,https://github.com/howard0su,Enable optimized link for all devo targets,2,[],https://github.com/DeviationTX/deviation/pull/550,https://github.com/howard0su,5,https://github.com/DeviationTX/deviation/pull/550#issuecomment-451813209,"For most targets, no need to have seperate _opt.ld now. Enhence Makefile to use original ld file.
at9 crc offset set to 0x150 right after vector table to avoid padding.","Second pass is exact same as previous one in all the targets which enabled
2nd pass link before like devo7e, devof4.

Verified by the map file.
5f7a14cf370a0b3ee661303044111eed6ab28784  devo7e.map
5f7a14cf370a0b3ee661303044111eed6ab28784  old/devo7e.map

For the other targets, we need do the testing on real Tx to verify. I will
verify f12e and need some help on at9 which is a little bit different than
devo serial.

one thing I notice that the project was declared as ""Custom firmware for
Walkera DEVO Radios"", but AT9 is from raidiolink, right?
…
On Mon, Jan 7, 2019 at 11:13 AM PhracturedBlue ***@***.***> wrote:
 With this setup do we properly detect a memory overrun on the devo7e? I
 assume the 2nd pass will fail?
 The changes look fine to me, but I'd want to see either a comparison of
 the map files before and after, or some user testing before committing it.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#550 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRH8jRTMF243VcSmFuxg01Cn8BXW5ks5vArtggaJpZM4ZyiOX>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,550,2019-01-06T18:01:46Z,2019-01-11T20:21:19Z,2019-01-20T13:34:49Z,MERGED,True,34,12,18,https://github.com/howard0su,Enable optimized link for all devo targets,2,[],https://github.com/DeviationTX/deviation/pull/550,https://github.com/PhracturedBlue,6,https://github.com/DeviationTX/deviation/pull/550#issuecomment-451817809,"For most targets, no need to have seperate _opt.ld now. Enhence Makefile to use original ld file.
at9 crc offset set to 0x150 right after vector table to avoid padding.","Back when we started, there was only Devo (specifically just the 6 and 8).  There are more options now.  We should probably update.  Where do we have documentation that says ""Custom firmware for
Walkera DEVO Radios""?  We should fix that wherever it is left",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,550,2019-01-06T18:01:46Z,2019-01-11T20:21:19Z,2019-01-20T13:34:49Z,MERGED,True,34,12,18,https://github.com/howard0su,Enable optimized link for all devo targets,2,[],https://github.com/DeviationTX/deviation/pull/550,https://github.com/howard0su,7,https://github.com/DeviationTX/deviation/pull/550#issuecomment-451817928,"For most targets, no need to have seperate _opt.ld now. Enhence Makefile to use original ld file.
at9 crc offset set to 0x150 right after vector table to avoid padding.",Homepage of the git repo. The only sentence to describe the project.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,550,2019-01-06T18:01:46Z,2019-01-11T20:21:19Z,2019-01-20T13:34:49Z,MERGED,True,34,12,18,https://github.com/howard0su,Enable optimized link for all devo targets,2,[],https://github.com/DeviationTX/deviation/pull/550,https://github.com/PhracturedBlue,8,https://github.com/DeviationTX/deviation/pull/550#issuecomment-451818374,"For most targets, no need to have seperate _opt.ld now. Enhence Makefile to use original ld file.
at9 crc offset set to 0x150 right after vector table to avoid padding.",Thanks.  I changed it,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,550,2019-01-06T18:01:46Z,2019-01-11T20:21:19Z,2019-01-20T13:34:49Z,MERGED,True,34,12,18,https://github.com/howard0su,Enable optimized link for all devo targets,2,[],https://github.com/DeviationTX/deviation/pull/550,https://github.com/howard0su,9,https://github.com/DeviationTX/deviation/pull/550#issuecomment-453126954,"For most targets, no need to have seperate _opt.ld now. Enhence Makefile to use original ld file.
at9 crc offset set to 0x150 right after vector table to avoid padding.","Need test on:


 devof7e


 devo8


 devo12


 devof12e",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,550,2019-01-06T18:01:46Z,2019-01-11T20:21:19Z,2019-01-20T13:34:49Z,MERGED,True,34,12,18,https://github.com/howard0su,Enable optimized link for all devo targets,2,[],https://github.com/DeviationTX/deviation/pull/550,https://github.com/PhracturedBlue,10,https://github.com/DeviationTX/deviation/pull/550#issuecomment-453751149,"For most targets, no need to have seperate _opt.ld now. Enhence Makefile to use original ld file.
at9 crc offset set to 0x150 right after vector table to avoid padding.","this patch broke the nightly builds.  Please provide a fix so that devof4 can build.
test via:
make zips winzips",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,550,2019-01-06T18:01:46Z,2019-01-11T20:21:19Z,2019-01-20T13:34:49Z,MERGED,True,34,12,18,https://github.com/howard0su,Enable optimized link for all devo targets,2,[],https://github.com/DeviationTX/deviation/pull/550,https://github.com/TheRealMoeder,11,https://github.com/DeviationTX/deviation/pull/550#issuecomment-453751797,"For most targets, no need to have seperate _opt.ld now. Enhence Makefile to use original ld file.
at9 crc offset set to 0x150 right after vector table to avoid padding.",also devof7-xms fails,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,550,2019-01-06T18:01:46Z,2019-01-11T20:21:19Z,2019-01-20T13:34:49Z,MERGED,True,34,12,18,https://github.com/howard0su,Enable optimized link for all devo targets,2,[],https://github.com/DeviationTX/deviation/pull/550,https://github.com/TheRealMoeder,12,https://github.com/DeviationTX/deviation/pull/550#issuecomment-453751871,"For most targets, no need to have seperate _opt.ld now. Enhence Makefile to use original ld file.
at9 crc offset set to 0x150 right after vector table to avoid padding.",@PhracturedBlue Do you agree with adding all TX targets to the travis PR builds?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,550,2019-01-06T18:01:46Z,2019-01-11T20:21:19Z,2019-01-20T13:34:49Z,MERGED,True,34,12,18,https://github.com/howard0su,Enable optimized link for all devo targets,2,[],https://github.com/DeviationTX/deviation/pull/550,https://github.com/PhracturedBlue,13,https://github.com/DeviationTX/deviation/pull/550#issuecomment-453752208,"For most targets, no need to have seperate _opt.ld now. Enhence Makefile to use original ld file.
at9 crc offset set to 0x150 right after vector table to avoid padding.","I'll think about it.
Fyi the cause is the new calculation of crc_offset which doesn't understand the linkfile includes",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,550,2019-01-06T18:01:46Z,2019-01-11T20:21:19Z,2019-01-20T13:34:49Z,MERGED,True,34,12,18,https://github.com/howard0su,Enable optimized link for all devo targets,2,[],https://github.com/DeviationTX/deviation/pull/550,https://github.com/howard0su,14,https://github.com/DeviationTX/deviation/pull/550#issuecomment-453753765,"For most targets, no need to have seperate _opt.ld now. Enhence Makefile to use original ld file.
at9 crc offset set to 0x150 right after vector table to avoid padding.","I notice devof4-XMS is not in the list of zips. I am testing the fix. will
submit after finish build.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,550,2019-01-06T18:01:46Z,2019-01-11T20:21:19Z,2019-01-20T13:34:49Z,MERGED,True,34,12,18,https://github.com/howard0su,Enable optimized link for all devo targets,2,[],https://github.com/DeviationTX/deviation/pull/550,https://github.com/PhracturedBlue,15,https://github.com/DeviationTX/deviation/pull/550#issuecomment-453753953,"For most targets, no need to have seperate _opt.ld now. Enhence Makefile to use original ld file.
at9 crc offset set to 0x150 right after vector table to avoid padding.",you don't need to.  I have a fix I like better than the current implementation,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,551,2019-01-06T20:32:49Z,2019-01-07T17:17:47Z,2019-01-07T17:17:47Z,MERGED,True,27,25,1,https://github.com/TheRealMoeder,Shrink voice ROM usage,1,[],https://github.com/DeviationTX/deviation/pull/551,https://github.com/TheRealMoeder,1,https://github.com/DeviationTX/deviation/pull/551,To make it fit devo7e if deemed useful,To make it fit devo7e if deemed useful,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,551,2019-01-06T20:32:49Z,2019-01-07T17:17:47Z,2019-01-07T17:17:47Z,MERGED,True,27,25,1,https://github.com/TheRealMoeder,Shrink voice ROM usage,1,[],https://github.com/DeviationTX/deviation/pull/551,https://github.com/TheRealMoeder,2,https://github.com/DeviationTX/deviation/pull/551#issuecomment-451772416,To make it fit devo7e if deemed useful,That was some really nasty code I wrote back then....,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,552,2019-01-07T06:07:46Z,2019-01-08T06:16:15Z,2019-01-20T13:35:22Z,CLOSED,False,152,281,26,https://github.com/howard0su,[WIP] Build test target for each Tx Model,9,[],https://github.com/DeviationTX/deviation/pull/552,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/552,"So we can test the different screen size, fs, special hardwares.","So we can test the different screen size, fs, special hardwares.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,552,2019-01-07T06:07:46Z,2019-01-08T06:16:15Z,2019-01-20T13:35:22Z,CLOSED,False,152,281,26,https://github.com/howard0su,[WIP] Build test target for each Tx Model,9,[],https://github.com/DeviationTX/deviation/pull/552,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/552#issuecomment-451831433,"So we can test the different screen size, fs, special hardwares.","@PhracturedBlue can u help me check why there is a test fail? I didn't change any mixer related code.

Building 'emu_devo12_test.elf'
Execute tests
.....F........................................
There was 1 failure:


TestUpdateRawInputs: ./tests/test_mixer.c:76: expected <-10000> but was <-9800>",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,552,2019-01-07T06:07:46Z,2019-01-08T06:16:15Z,2019-01-20T13:35:22Z,CLOSED,False,152,281,26,https://github.com/howard0su,[WIP] Build test target for each Tx Model,9,[],https://github.com/DeviationTX/deviation/pull/552,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/552#issuecomment-451935673,"So we can test the different screen size, fs, special hardwares.","Can u just make change to demonstrate your idea here? I am not quite
following how to get build without emu code. Maybe you can bring back the
original stub file I placed in target/test?

This change is more or less a POC. need some work to cleanup.
…
On Mon, Jan 7, 2019 at 9:19 PM PhracturedBlue ***@***.***> wrote:
 ***@***.**** requested changes on this pull request.

 I like the makefile changes. i do not like reusing the emu-code as is
 because it makes overriding functions harder. One possible way around this
 is to weaken definitions in the emu code (we could do this using objcopy so
 we don't need to modify the emu code at all) so that we can override any
 function we need to in tests/framework/.
 ------------------------------

 In .travis.yml
 <#552 (comment)>:

 > @@ -10,8 +10,12 @@ env:
        - MAKETARGET=zip_t8sg
        - TARGET=at9
        - MAKETARGET=zip_win_emu_devo8
 -      - MAKETARGET=zip_emu_devo8
 -      - MAKETARGET=test
 +      - MAKETARGET=test_devo8
 +      - MAKETARGET=test_devo10
 +      - MAKETARGET=test_devo12
 +      - MAKETARGET=test_devo7e
 +      - MAKETARGET=test_devof12e
 +      - MAKETARGET=test_t8sg
  #      - COMPILER=latest TARGET=devo8


 You removed zip_emu_devo8
 ------------------------------

 In src/target/emu_at9/channels.c
 <#552 (comment)>:

 > @@ -18,7 +18,7 @@

  s32 CHAN_ReadInput(int channel)
  {
 -    s32 step = (CHAN_MAX_VALUE - CHAN_MIN_VALUE) / 10;
 +    s32 step = (CHAN_MAX_VALUE - CHAN_MIN_VALUE) / 100;
      switch(channel) {

 Don't do this. Realistically the tests will need their own emu code. This
 was just the 1st example. to test music and display will require more
 similar changes.
 ------------------------------

 In src/Makefile
 <#552 (comment)>:

 > @@ -220,6 +227,10 @@ distclean:
  language:
  	../utils/extract_strings.pl -update

 +test: CFLAGS += -DTEST=1 -I./tests/framework -coverage -g -O0 -fPIC
 +test: tests/AllTests.c $(TARGET)_test.$(EXEEXT)
 +	@echo Execute tests
 +	./$(TARGET)_test.$(EXEEXT)


 I'd like to be able to run coverage_report.sh automatically after all
 tests have run (Ideally we'd build all tests 1st and run them all as a 2nd
 step...it would make debug easier). I'm not sure how to do that with this
 build system though (and I don't think we can run coverage_report on a
 per-target basis when using travis, so we'd need something different there)
 ------------------------------

 In .travis.yml
 <#552 (comment)>:

 > @@ -10,8 +10,12 @@ env:
        - MAKETARGET=zip_t8sg
        - TARGET=at9
        - MAKETARGET=zip_win_emu_devo8
 -      - MAKETARGET=zip_emu_devo8
 -      - MAKETARGET=test
 +      - MAKETARGET=test_devo8
 +      - MAKETARGET=test_devo10
 +      - MAKETARGET=test_devo12
 +      - MAKETARGET=test_devo7e
 +      - MAKETARGET=test_devof12e
 +      - MAKETARGET=test_t8sg
  #      - COMPILER=latest TARGET=devo8


 I don't think there is any value in running all of these at this time.
 current tests will not see any difference between the transmitter models. I
 would only enable this once we have some differentiating tests.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#552 (review)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRH9bqHJetjdYfateoUMcHuVoAYLOks5vA0lMgaJpZM4Zy6kK>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,552,2019-01-07T06:07:46Z,2019-01-08T06:16:15Z,2019-01-20T13:35:22Z,CLOSED,False,152,281,26,https://github.com/howard0su,[WIP] Build test target for each Tx Model,9,[],https://github.com/DeviationTX/deviation/pull/552,https://github.com/PhracturedBlue,4,https://github.com/DeviationTX/deviation/pull/552#issuecomment-451944860,"So we can test the different screen size, fs, special hardwares.","I'll try it out.  My idea is complicated, so it may take some time",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,552,2019-01-07T06:07:46Z,2019-01-08T06:16:15Z,2019-01-20T13:35:22Z,CLOSED,False,152,281,26,https://github.com/howard0su,[WIP] Build test target for each Tx Model,9,[],https://github.com/DeviationTX/deviation/pull/552,https://github.com/howard0su,5,https://github.com/DeviationTX/deviation/pull/552#issuecomment-451963548,"So we can test the different screen size, fs, special hardwares.",Can I just remove fltk.cpp from the build and replace a stub in /tests?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,552,2019-01-07T06:07:46Z,2019-01-08T06:16:15Z,2019-01-20T13:35:22Z,CLOSED,False,152,281,26,https://github.com/howard0su,[WIP] Build test target for each Tx Model,9,[],https://github.com/DeviationTX/deviation/pull/552,https://github.com/PhracturedBlue,6,https://github.com/DeviationTX/deviation/pull/552#issuecomment-451986689,"So we can test the different screen size, fs, special hardwares.","You can give it a try.  Maybe it'll be enough for now. I am still expecting to need Mock functionality which will require something more significant, but if we can get by without it, all the better",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,552,2019-01-07T06:07:46Z,2019-01-08T06:16:15Z,2019-01-20T13:35:22Z,CLOSED,False,152,281,26,https://github.com/howard0su,[WIP] Build test target for each Tx Model,9,[],https://github.com/DeviationTX/deviation/pull/552,https://github.com/howard0su,7,https://github.com/DeviationTX/deviation/pull/552#issuecomment-452118767,"So we can test the different screen size, fs, special hardwares.","looks like not simple as I thought.

I think about this again. For now, we only have three different
implementations on Screen/Gui/Pages and two filesystem implementations. We
need either to make them able to do so or we anyway need 3 builds. current
target/test build able to test one combination which we picked devo8 which
is colorful gui + fatfs.
…
On Tue, Jan 8, 2019 at 12:10 AM PhracturedBlue ***@***.***> wrote:
 You can give it a try. Maybe it'll be enough for now. I am still expecting
 to need Mock functionality which will require something more significant,
 but if we can get by without it, all the better

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#552 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRG2BXAe8Nnuncqq-t8MvGC_bvsI5ks5vA3GBgaJpZM4Zy6kK>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,552,2019-01-07T06:07:46Z,2019-01-08T06:16:15Z,2019-01-20T13:35:22Z,CLOSED,False,152,281,26,https://github.com/howard0su,[WIP] Build test target for each Tx Model,9,[],https://github.com/DeviationTX/deviation/pull/552,https://github.com/PhracturedBlue,8,https://github.com/DeviationTX/deviation/pull/552#issuecomment-452125140,"So we can test the different screen size, fs, special hardwares.","It certainly would not be easy, but if we can remove all #if/#ifdef macros (replaced with if() as needed) we could convert the relevant #defines into variables and:
a) have a single binary emulator that can emulate all Tx
b) have the ability to write tests that work for all Tx with a single executable
I think it is probably an impossible goal unforunately, but it would be the holy-grail
I'm not sure concerned about this whole discussion at the moment.  There are a lot of tests to be written before the differences between transmitters is relevant.
I also have already written filesystem tests (at least for devofs) and maybe they can be integrated as stand-alone tests not tied to the integrated binary",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,552,2019-01-07T06:07:46Z,2019-01-08T06:16:15Z,2019-01-20T13:35:22Z,CLOSED,False,152,281,26,https://github.com/howard0su,[WIP] Build test target for each Tx Model,9,[],https://github.com/DeviationTX/deviation/pull/552,https://github.com/howard0su,9,https://github.com/DeviationTX/deviation/pull/552#issuecomment-452187921,"So we can test the different screen size, fs, special hardwares.",we may not need this in a short run.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,554,2019-01-08T01:11:59Z,2019-01-21T21:03:30Z,2019-01-23T19:32:40Z,MERGED,True,69,66,9,https://github.com/TheRealMoeder,Strip RAM needs for voice,12,[],https://github.com/DeviationTX/deviation/pull/554,https://github.com/TheRealMoeder,1,https://github.com/DeviationTX/deviation/pull/554,Only read labels when inside voiceconfig menu by rerunning CONFIG_VoiceParse,Only read labels when inside voiceconfig menu by rerunning CONFIG_VoiceParse,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,554,2019-01-08T01:11:59Z,2019-01-21T21:03:30Z,2019-01-23T19:32:40Z,MERGED,True,69,66,9,https://github.com/TheRealMoeder,Strip RAM needs for voice,12,[],https://github.com/DeviationTX/deviation/pull/554,https://github.com/TheRealMoeder,2,https://github.com/DeviationTX/deviation/pull/554#issuecomment-453422062,Only read labels when inside voiceconfig menu by rerunning CONFIG_VoiceParse,"There is still a little mess concerning the naming of this feature, as it was moved from extended audio to voice in the process of development after a discussion on the forum. I will address this issue in a future pull request, which will also enhance the menu features.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,554,2019-01-08T01:11:59Z,2019-01-21T21:03:30Z,2019-01-23T19:32:40Z,MERGED,True,69,66,9,https://github.com/TheRealMoeder,Strip RAM needs for voice,12,[],https://github.com/DeviationTX/deviation/pull/554,https://github.com/TheRealMoeder,3,https://github.com/DeviationTX/deviation/pull/554#issuecomment-453443615,Only read labels when inside voiceconfig menu by rerunning CONFIG_VoiceParse,"One thing I noticed is, that the deltas are wrong if the pr branch isn't rebased on the current master. I'm not sure there really is a solution to this, but it is a little misleading",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,554,2019-01-08T01:11:59Z,2019-01-21T21:03:30Z,2019-01-23T19:32:40Z,MERGED,True,69,66,9,https://github.com/TheRealMoeder,Strip RAM needs for voice,12,[],https://github.com/DeviationTX/deviation/pull/554,https://github.com/TheRealMoeder,4,https://github.com/DeviationTX/deviation/pull/554#issuecomment-453641450,Only read labels when inside voiceconfig menu by rerunning CONFIG_VoiceParse,Please squash when merging,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,554,2019-01-08T01:11:59Z,2019-01-21T21:03:30Z,2019-01-23T19:32:40Z,MERGED,True,69,66,9,https://github.com/TheRealMoeder,Strip RAM needs for voice,12,[],https://github.com/DeviationTX/deviation/pull/554,https://github.com/howard0su,5,https://github.com/DeviationTX/deviation/pull/554#issuecomment-456144259,Only read labels when inside voiceconfig menu by rerunning CONFIG_VoiceParse,is this change ready? I may touch the same file in another change. it will be better that you merge this up front.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,554,2019-01-08T01:11:59Z,2019-01-21T21:03:30Z,2019-01-23T19:32:40Z,MERGED,True,69,66,9,https://github.com/TheRealMoeder,Strip RAM needs for voice,12,[],https://github.com/DeviationTX/deviation/pull/554,https://github.com/TheRealMoeder,6,https://github.com/DeviationTX/deviation/pull/554#issuecomment-456158014,Only read labels when inside voiceconfig menu by rerunning CONFIG_VoiceParse,I actually was thinking of removing voice map and parsing voice.ini on demand just like we do for sound.ini...haven't gotten to it yet though,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,554,2019-01-08T01:11:59Z,2019-01-21T21:03:30Z,2019-01-23T19:32:40Z,MERGED,True,69,66,9,https://github.com/TheRealMoeder,Strip RAM needs for voice,12,[],https://github.com/DeviationTX/deviation/pull/554,https://github.com/TheRealMoeder,7,https://github.com/DeviationTX/deviation/pull/554#issuecomment-456158318,Only read labels when inside voiceconfig menu by rerunning CONFIG_VoiceParse,But we might as well merge this (it works fine for me on t8sg) and I'll work on the rest when you have your model.c changes ready,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,554,2019-01-08T01:11:59Z,2019-01-21T21:03:30Z,2019-01-23T19:32:40Z,MERGED,True,69,66,9,https://github.com/TheRealMoeder,Strip RAM needs for voice,12,[],https://github.com/DeviationTX/deviation/pull/554,https://github.com/PhracturedBlue,8,https://github.com/DeviationTX/deviation/pull/554#issuecomment-456181387,Only read labels when inside voiceconfig menu by rerunning CONFIG_VoiceParse,"some of these lint errors are interesting.
Do not fix:
Use int16/int64/etc, rather than the C type long
I don't think that is portable with pointers
Almost always, snprintf is better than strcpy
Certainly not true for us.  strlcpy is preferred to strcpy, but in this trivial case, maybe tempstring[0] = 0
If you can, use sizeof(tempstring) instead of 4 as the 2nd arg to snprintf.
I am not sure if this is a good rule in general.  It isn't a good rule for this case though",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,554,2019-01-08T01:11:59Z,2019-01-21T21:03:30Z,2019-01-23T19:32:40Z,MERGED,True,69,66,9,https://github.com/TheRealMoeder,Strip RAM needs for voice,12,[],https://github.com/DeviationTX/deviation/pull/554,https://github.com/TheRealMoeder,9,https://github.com/DeviationTX/deviation/pull/554#issuecomment-456197063,Only read labels when inside voiceconfig menu by rerunning CONFIG_VoiceParse,"I fixed by your suggestions, merge?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,555,2019-01-08T02:59:27Z,2019-01-11T04:51:38Z,2019-01-11T04:51:38Z,MERGED,True,424,28,2,https://github.com/PhracturedBlue,Only run cyclic calculation once.  Add several mixer tests,9,[],https://github.com/DeviationTX/deviation/pull/555,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/555,For some reason we were calling MIXER_CreateCyclicOutput() for each cyclic channel even though it does the full caclulation each time it is called.,For some reason we were calling MIXER_CreateCyclicOutput() for each cyclic channel even though it does the full caclulation each time it is called.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,555,2019-01-08T02:59:27Z,2019-01-11T04:51:38Z,2019-01-11T04:51:38Z,MERGED,True,424,28,2,https://github.com/PhracturedBlue,Only run cyclic calculation once.  Add several mixer tests,9,[],https://github.com/DeviationTX/deviation/pull/555,https://github.com/PhracturedBlue,2,https://github.com/DeviationTX/deviation/pull/555#issuecomment-452709548,For some reason we were calling MIXER_CreateCyclicOutput() for each cyclic channel even though it does the full caclulation each time it is called.,"FYI, please don't merge this yet.  I will merge it when I am ready",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,556,2019-01-08T03:10:50Z,2019-01-08T17:10:35Z,2019-01-10T11:30:40Z,MERGED,True,48,3,2,https://github.com/howard0su,Add model test cases,1,[],https://github.com/DeviationTX/deviation/pull/556,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/556,also mark some functions as static to enable more opportunities for compiler to optimize.,also mark some functions as static to enable more opportunities for compiler to optimize.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,557,2019-01-08T03:50:58Z,2020-08-08T10:51:28Z,2020-08-08T15:44:21Z,MERGED,True,468,0,2,https://github.com/brycedjohnson,Redpine protocol with cc2500 chip - Low Latency ,1,['Protocol'],https://github.com/DeviationTX/deviation/pull/557,https://github.com/brycedjohnson,1,https://github.com/DeviationTX/deviation/pull/557,"Hi all,
I've been flying this protocol that I wrote since about Oct.  The purpose was to see how low of latency and fast of data rate I could push it.  No telemetry for now. It is based roughly on frsky_x (to help with code reuse).
Flying really stable at 1.5ms loop time (666Hz).  RC looptime and packetsize is adjustable for testing for now.  Pushed it higher up to 1kHz, but ran into deviation cpu limits.  With large mixers the loop time might need to be pushed up a little.
4 11-bit channels and 12 1-bit aux channels.  Total RC packet sqaushed down to 12-14 bytes.  Although that could be bumped up if needed for anything.
I'll fully write up the protocol when it is pulled in any everything set in stone.
Latency results are awesome.  1-5ms from transmitter to betaflight dshot motor output.  Compared to 7-20ms with crossfire on taranis and 18-37ms with frsky_x to X4r on a taranis.
https://docs.google.com/spreadsheets/d/1MlGdLWIP5fOoVWmKOD-yPR4OXxioPMrUnrCy-muQypg/edit#gid=891788793
Range is still pretty good even though the bitrate was bumped up.  I lose RX on a crazybeef3 (no pa/lna) at about the range of 25mw VTx.  Matek411rx with pa/lna, I get plently of range to cover any racetrack so far.
Going to be opening a pull request in to Betaflight to go with this as well.
Couple things left to do:
I'd like to generate the pseudo-random hop_data based of the get_tx_id()/MCU_SerialNumber.  Was there a recommended way to do that?
I was considering a slow bitrate version (menu option) as well - long range, higher latency.  Interested in that?
Looking at a multimodule version as well.  Haven't done that yet, but will work on that when this would get pulled in.
Anything to fix/add?","Hi all,
I've been flying this protocol that I wrote since about Oct.  The purpose was to see how low of latency and fast of data rate I could push it.  No telemetry for now. It is based roughly on frsky_x (to help with code reuse).
Flying really stable at 1.5ms loop time (666Hz).  RC looptime and packetsize is adjustable for testing for now.  Pushed it higher up to 1kHz, but ran into deviation cpu limits.  With large mixers the loop time might need to be pushed up a little.
4 11-bit channels and 12 1-bit aux channels.  Total RC packet sqaushed down to 12-14 bytes.  Although that could be bumped up if needed for anything.
I'll fully write up the protocol when it is pulled in any everything set in stone.
Latency results are awesome.  1-5ms from transmitter to betaflight dshot motor output.  Compared to 7-20ms with crossfire on taranis and 18-37ms with frsky_x to X4r on a taranis.
https://docs.google.com/spreadsheets/d/1MlGdLWIP5fOoVWmKOD-yPR4OXxioPMrUnrCy-muQypg/edit#gid=891788793
Range is still pretty good even though the bitrate was bumped up.  I lose RX on a crazybeef3 (no pa/lna) at about the range of 25mw VTx.  Matek411rx with pa/lna, I get plently of range to cover any racetrack so far.
Going to be opening a pull request in to Betaflight to go with this as well.
Couple things left to do:
I'd like to generate the pseudo-random hop_data based of the get_tx_id()/MCU_SerialNumber.  Was there a recommended way to do that?
I was considering a slow bitrate version (menu option) as well - long range, higher latency.  Interested in that?
Looking at a multimodule version as well.  Haven't done that yet, but will work on that when this would get pulled in.
Anything to fix/add?",True,"{'LAUGH': ['https://github.com/githubDLG'], 'HOORAY': ['https://github.com/githubDLG'], 'THUMBS_UP': ['https://github.com/theandrewmillett', 'https://github.com/caixiaohai0']}"
DeviationTX/deviation,https://github.com/DeviationTX/deviation,557,2019-01-08T03:50:58Z,2020-08-08T10:51:28Z,2020-08-08T15:44:21Z,MERGED,True,468,0,2,https://github.com/brycedjohnson,Redpine protocol with cc2500 chip - Low Latency ,1,['Protocol'],https://github.com/DeviationTX/deviation/pull/557,https://github.com/PhracturedBlue,2,https://github.com/DeviationTX/deviation/pull/557#issuecomment-452169998,"Hi all,
I've been flying this protocol that I wrote since about Oct.  The purpose was to see how low of latency and fast of data rate I could push it.  No telemetry for now. It is based roughly on frsky_x (to help with code reuse).
Flying really stable at 1.5ms loop time (666Hz).  RC looptime and packetsize is adjustable for testing for now.  Pushed it higher up to 1kHz, but ran into deviation cpu limits.  With large mixers the loop time might need to be pushed up a little.
4 11-bit channels and 12 1-bit aux channels.  Total RC packet sqaushed down to 12-14 bytes.  Although that could be bumped up if needed for anything.
I'll fully write up the protocol when it is pulled in any everything set in stone.
Latency results are awesome.  1-5ms from transmitter to betaflight dshot motor output.  Compared to 7-20ms with crossfire on taranis and 18-37ms with frsky_x to X4r on a taranis.
https://docs.google.com/spreadsheets/d/1MlGdLWIP5fOoVWmKOD-yPR4OXxioPMrUnrCy-muQypg/edit#gid=891788793
Range is still pretty good even though the bitrate was bumped up.  I lose RX on a crazybeef3 (no pa/lna) at about the range of 25mw VTx.  Matek411rx with pa/lna, I get plently of range to cover any racetrack so far.
Going to be opening a pull request in to Betaflight to go with this as well.
Couple things left to do:
I'd like to generate the pseudo-random hop_data based of the get_tx_id()/MCU_SerialNumber.  Was there a recommended way to do that?
I was considering a slow bitrate version (menu option) as well - long range, higher latency.  Interested in that?
Looking at a multimodule version as well.  Haven't done that yet, but will work on that when this would get pulled in.
Anything to fix/add?","So you designed this protocol?  What are you using as a receiver?  I'll be honest and I am not likely to be in favor of incorporating a protocol with exactly one user, and am much more likely to wait until you have an established userbase.  That said, we've talked about doing a custom 'deviation' protocol in the past if it could really bring something to the table, but we were significantly limited in Rx selection at the time.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,557,2019-01-08T03:50:58Z,2020-08-08T10:51:28Z,2020-08-08T15:44:21Z,MERGED,True,468,0,2,https://github.com/brycedjohnson,Redpine protocol with cc2500 chip - Low Latency ,1,['Protocol'],https://github.com/DeviationTX/deviation/pull/557,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/557#issuecomment-452170550,"Hi all,
I've been flying this protocol that I wrote since about Oct.  The purpose was to see how low of latency and fast of data rate I could push it.  No telemetry for now. It is based roughly on frsky_x (to help with code reuse).
Flying really stable at 1.5ms loop time (666Hz).  RC looptime and packetsize is adjustable for testing for now.  Pushed it higher up to 1kHz, but ran into deviation cpu limits.  With large mixers the loop time might need to be pushed up a little.
4 11-bit channels and 12 1-bit aux channels.  Total RC packet sqaushed down to 12-14 bytes.  Although that could be bumped up if needed for anything.
I'll fully write up the protocol when it is pulled in any everything set in stone.
Latency results are awesome.  1-5ms from transmitter to betaflight dshot motor output.  Compared to 7-20ms with crossfire on taranis and 18-37ms with frsky_x to X4r on a taranis.
https://docs.google.com/spreadsheets/d/1MlGdLWIP5fOoVWmKOD-yPR4OXxioPMrUnrCy-muQypg/edit#gid=891788793
Range is still pretty good even though the bitrate was bumped up.  I lose RX on a crazybeef3 (no pa/lna) at about the range of 25mw VTx.  Matek411rx with pa/lna, I get plently of range to cover any racetrack so far.
Going to be opening a pull request in to Betaflight to go with this as well.
Couple things left to do:
I'd like to generate the pseudo-random hop_data based of the get_tx_id()/MCU_SerialNumber.  Was there a recommended way to do that?
I was considering a slow bitrate version (menu option) as well - long range, higher latency.  Interested in that?
Looking at a multimodule version as well.  Haven't done that yet, but will work on that when this would get pulled in.
Anything to fix/add?",@PhracturedBlue can we make sure this is optional protocol which hide by one knob and default to zero. And we can wait and see how the users grow for this protocol. otherwise I feel it is a chicken/egg problem to grow a protocol user space.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,557,2019-01-08T03:50:58Z,2020-08-08T10:51:28Z,2020-08-08T15:44:21Z,MERGED,True,468,0,2,https://github.com/brycedjohnson,Redpine protocol with cc2500 chip - Low Latency ,1,['Protocol'],https://github.com/DeviationTX/deviation/pull/557,https://github.com/brycedjohnson,4,https://github.com/DeviationTX/deviation/pull/557#issuecomment-452170570,"Hi all,
I've been flying this protocol that I wrote since about Oct.  The purpose was to see how low of latency and fast of data rate I could push it.  No telemetry for now. It is based roughly on frsky_x (to help with code reuse).
Flying really stable at 1.5ms loop time (666Hz).  RC looptime and packetsize is adjustable for testing for now.  Pushed it higher up to 1kHz, but ran into deviation cpu limits.  With large mixers the loop time might need to be pushed up a little.
4 11-bit channels and 12 1-bit aux channels.  Total RC packet sqaushed down to 12-14 bytes.  Although that could be bumped up if needed for anything.
I'll fully write up the protocol when it is pulled in any everything set in stone.
Latency results are awesome.  1-5ms from transmitter to betaflight dshot motor output.  Compared to 7-20ms with crossfire on taranis and 18-37ms with frsky_x to X4r on a taranis.
https://docs.google.com/spreadsheets/d/1MlGdLWIP5fOoVWmKOD-yPR4OXxioPMrUnrCy-muQypg/edit#gid=891788793
Range is still pretty good even though the bitrate was bumped up.  I lose RX on a crazybeef3 (no pa/lna) at about the range of 25mw VTx.  Matek411rx with pa/lna, I get plently of range to cover any racetrack so far.
Going to be opening a pull request in to Betaflight to go with this as well.
Couple things left to do:
I'd like to generate the pseudo-random hop_data based of the get_tx_id()/MCU_SerialNumber.  Was there a recommended way to do that?
I was considering a slow bitrate version (menu option) as well - long range, higher latency.  Interested in that?
Looking at a multimodule version as well.  Haven't done that yet, but will work on that when this would get pulled in.
Anything to fix/add?",@PhracturedBlue It supports the cc2500 spi-rx in betaflight (pull request to BF incoming). There are a few production boards that have a spi-rx including matek411rx and crazybeeF3FR.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,557,2019-01-08T03:50:58Z,2020-08-08T10:51:28Z,2020-08-08T15:44:21Z,MERGED,True,468,0,2,https://github.com/brycedjohnson,Redpine protocol with cc2500 chip - Low Latency ,1,['Protocol'],https://github.com/DeviationTX/deviation/pull/557,https://github.com/howard0su,5,https://github.com/DeviationTX/deviation/pull/557#issuecomment-452171300,"Hi all,
I've been flying this protocol that I wrote since about Oct.  The purpose was to see how low of latency and fast of data rate I could push it.  No telemetry for now. It is based roughly on frsky_x (to help with code reuse).
Flying really stable at 1.5ms loop time (666Hz).  RC looptime and packetsize is adjustable for testing for now.  Pushed it higher up to 1kHz, but ran into deviation cpu limits.  With large mixers the loop time might need to be pushed up a little.
4 11-bit channels and 12 1-bit aux channels.  Total RC packet sqaushed down to 12-14 bytes.  Although that could be bumped up if needed for anything.
I'll fully write up the protocol when it is pulled in any everything set in stone.
Latency results are awesome.  1-5ms from transmitter to betaflight dshot motor output.  Compared to 7-20ms with crossfire on taranis and 18-37ms with frsky_x to X4r on a taranis.
https://docs.google.com/spreadsheets/d/1MlGdLWIP5fOoVWmKOD-yPR4OXxioPMrUnrCy-muQypg/edit#gid=891788793
Range is still pretty good even though the bitrate was bumped up.  I lose RX on a crazybeef3 (no pa/lna) at about the range of 25mw VTx.  Matek411rx with pa/lna, I get plently of range to cover any racetrack so far.
Going to be opening a pull request in to Betaflight to go with this as well.
Couple things left to do:
I'd like to generate the pseudo-random hop_data based of the get_tx_id()/MCU_SerialNumber.  Was there a recommended way to do that?
I was considering a slow bitrate version (menu option) as well - long range, higher latency.  Interested in that?
Looking at a multimodule version as well.  Haven't done that yet, but will work on that when this would get pulled in.
Anything to fix/add?",@brycedjohnson did you consider forward error correction instead of CRC?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,557,2019-01-08T03:50:58Z,2020-08-08T10:51:28Z,2020-08-08T15:44:21Z,MERGED,True,468,0,2,https://github.com/brycedjohnson,Redpine protocol with cc2500 chip - Low Latency ,1,['Protocol'],https://github.com/DeviationTX/deviation/pull/557,https://github.com/PhracturedBlue,6,https://github.com/DeviationTX/deviation/pull/557#issuecomment-452171781,"Hi all,
I've been flying this protocol that I wrote since about Oct.  The purpose was to see how low of latency and fast of data rate I could push it.  No telemetry for now. It is based roughly on frsky_x (to help with code reuse).
Flying really stable at 1.5ms loop time (666Hz).  RC looptime and packetsize is adjustable for testing for now.  Pushed it higher up to 1kHz, but ran into deviation cpu limits.  With large mixers the loop time might need to be pushed up a little.
4 11-bit channels and 12 1-bit aux channels.  Total RC packet sqaushed down to 12-14 bytes.  Although that could be bumped up if needed for anything.
I'll fully write up the protocol when it is pulled in any everything set in stone.
Latency results are awesome.  1-5ms from transmitter to betaflight dshot motor output.  Compared to 7-20ms with crossfire on taranis and 18-37ms with frsky_x to X4r on a taranis.
https://docs.google.com/spreadsheets/d/1MlGdLWIP5fOoVWmKOD-yPR4OXxioPMrUnrCy-muQypg/edit#gid=891788793
Range is still pretty good even though the bitrate was bumped up.  I lose RX on a crazybeef3 (no pa/lna) at about the range of 25mw VTx.  Matek411rx with pa/lna, I get plently of range to cover any racetrack so far.
Going to be opening a pull request in to Betaflight to go with this as well.
Couple things left to do:
I'd like to generate the pseudo-random hop_data based of the get_tx_id()/MCU_SerialNumber.  Was there a recommended way to do that?
I was considering a slow bitrate version (menu option) as well - long range, higher latency.  Interested in that?
Looking at a multimodule version as well.  Haven't done that yet, but will work on that when this would get pulled in.
Anything to fix/add?","Given I've only re-engaged with the project in the past few days, I don't consider my opinion the final say in the matter.  However, I don't think Deviation should be the staging ground for protocol development.  It'd be one thing if we 'owned' the protocol and could develop it as we saw fit, but that is not the same as hosting a beta protocol like this.  Additionally, any protocol not in its final form is a hassle.  Users needing to try to match Tx and Rx versions to get something that works properly.  Again...if it was 'deviation's protocol' we could deliver the rx and tx side together and avoid the confusion.
To help get over the chicken/egg issue we could give Bryce developer access on the forums so he can post his custom builds for users to test.  If it becomes more popular, and we had confidence in the stability, we could include it then.
I've spoken my mind.  I'll let the other developers comment on their perspective.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,557,2019-01-08T03:50:58Z,2020-08-08T10:51:28Z,2020-08-08T15:44:21Z,MERGED,True,468,0,2,https://github.com/brycedjohnson,Redpine protocol with cc2500 chip - Low Latency ,1,['Protocol'],https://github.com/DeviationTX/deviation/pull/557,https://github.com/brycedjohnson,7,https://github.com/DeviationTX/deviation/pull/557#issuecomment-452171801,"Hi all,
I've been flying this protocol that I wrote since about Oct.  The purpose was to see how low of latency and fast of data rate I could push it.  No telemetry for now. It is based roughly on frsky_x (to help with code reuse).
Flying really stable at 1.5ms loop time (666Hz).  RC looptime and packetsize is adjustable for testing for now.  Pushed it higher up to 1kHz, but ran into deviation cpu limits.  With large mixers the loop time might need to be pushed up a little.
4 11-bit channels and 12 1-bit aux channels.  Total RC packet sqaushed down to 12-14 bytes.  Although that could be bumped up if needed for anything.
I'll fully write up the protocol when it is pulled in any everything set in stone.
Latency results are awesome.  1-5ms from transmitter to betaflight dshot motor output.  Compared to 7-20ms with crossfire on taranis and 18-37ms with frsky_x to X4r on a taranis.
https://docs.google.com/spreadsheets/d/1MlGdLWIP5fOoVWmKOD-yPR4OXxioPMrUnrCy-muQypg/edit#gid=891788793
Range is still pretty good even though the bitrate was bumped up.  I lose RX on a crazybeef3 (no pa/lna) at about the range of 25mw VTx.  Matek411rx with pa/lna, I get plently of range to cover any racetrack so far.
Going to be opening a pull request in to Betaflight to go with this as well.
Couple things left to do:
I'd like to generate the pseudo-random hop_data based of the get_tx_id()/MCU_SerialNumber.  Was there a recommended way to do that?
I was considering a slow bitrate version (menu option) as well - long range, higher latency.  Interested in that?
Looking at a multimodule version as well.  Haven't done that yet, but will work on that when this would get pulled in.
Anything to fix/add?","@howard0su Yes I had looked at using the FEC built into the CC2500, but haven't tried it.  I had wanted to keep the bind process the same as Frsky_X to reduce new code in Betaflight.  The FEC needs a fixed packet size on the cc2500 and that would have broke the bind.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,557,2019-01-08T03:50:58Z,2020-08-08T10:51:28Z,2020-08-08T15:44:21Z,MERGED,True,468,0,2,https://github.com/brycedjohnson,Redpine protocol with cc2500 chip - Low Latency ,1,['Protocol'],https://github.com/DeviationTX/deviation/pull/557,https://github.com/howard0su,8,https://github.com/DeviationTX/deviation/pull/557#issuecomment-452174542,"Hi all,
I've been flying this protocol that I wrote since about Oct.  The purpose was to see how low of latency and fast of data rate I could push it.  No telemetry for now. It is based roughly on frsky_x (to help with code reuse).
Flying really stable at 1.5ms loop time (666Hz).  RC looptime and packetsize is adjustable for testing for now.  Pushed it higher up to 1kHz, but ran into deviation cpu limits.  With large mixers the loop time might need to be pushed up a little.
4 11-bit channels and 12 1-bit aux channels.  Total RC packet sqaushed down to 12-14 bytes.  Although that could be bumped up if needed for anything.
I'll fully write up the protocol when it is pulled in any everything set in stone.
Latency results are awesome.  1-5ms from transmitter to betaflight dshot motor output.  Compared to 7-20ms with crossfire on taranis and 18-37ms with frsky_x to X4r on a taranis.
https://docs.google.com/spreadsheets/d/1MlGdLWIP5fOoVWmKOD-yPR4OXxioPMrUnrCy-muQypg/edit#gid=891788793
Range is still pretty good even though the bitrate was bumped up.  I lose RX on a crazybeef3 (no pa/lna) at about the range of 25mw VTx.  Matek411rx with pa/lna, I get plently of range to cover any racetrack so far.
Going to be opening a pull request in to Betaflight to go with this as well.
Couple things left to do:
I'd like to generate the pseudo-random hop_data based of the get_tx_id()/MCU_SerialNumber.  Was there a recommended way to do that?
I was considering a slow bitrate version (menu option) as well - long range, higher latency.  Interested in that?
Looking at a multimodule version as well.  Haven't done that yet, but will work on that when this would get pulled in.
Anything to fix/add?","@PhracturedBlue I agree with you that we should not consider deviation as a staging ground.
My option is more around that we should encourage this sort of the innovation and we can rise the wave. I don't see it hurts too much to let the code in and not included in the official firmware for now. We can revert the decision anytime to remove it as our users are not impacted.
again, this is just my option and open up the discussions.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,557,2019-01-08T03:50:58Z,2020-08-08T10:51:28Z,2020-08-08T15:44:21Z,MERGED,True,468,0,2,https://github.com/brycedjohnson,Redpine protocol with cc2500 chip - Low Latency ,1,['Protocol'],https://github.com/DeviationTX/deviation/pull/557,https://github.com/howard0su,9,https://github.com/DeviationTX/deviation/pull/557#issuecomment-452174696,"Hi all,
I've been flying this protocol that I wrote since about Oct.  The purpose was to see how low of latency and fast of data rate I could push it.  No telemetry for now. It is based roughly on frsky_x (to help with code reuse).
Flying really stable at 1.5ms loop time (666Hz).  RC looptime and packetsize is adjustable for testing for now.  Pushed it higher up to 1kHz, but ran into deviation cpu limits.  With large mixers the loop time might need to be pushed up a little.
4 11-bit channels and 12 1-bit aux channels.  Total RC packet sqaushed down to 12-14 bytes.  Although that could be bumped up if needed for anything.
I'll fully write up the protocol when it is pulled in any everything set in stone.
Latency results are awesome.  1-5ms from transmitter to betaflight dshot motor output.  Compared to 7-20ms with crossfire on taranis and 18-37ms with frsky_x to X4r on a taranis.
https://docs.google.com/spreadsheets/d/1MlGdLWIP5fOoVWmKOD-yPR4OXxioPMrUnrCy-muQypg/edit#gid=891788793
Range is still pretty good even though the bitrate was bumped up.  I lose RX on a crazybeef3 (no pa/lna) at about the range of 25mw VTx.  Matek411rx with pa/lna, I get plently of range to cover any racetrack so far.
Going to be opening a pull request in to Betaflight to go with this as well.
Couple things left to do:
I'd like to generate the pseudo-random hop_data based of the get_tx_id()/MCU_SerialNumber.  Was there a recommended way to do that?
I was considering a slow bitrate version (menu option) as well - long range, higher latency.  Interested in that?
Looking at a multimodule version as well.  Haven't done that yet, but will work on that when this would get pulled in.
Anything to fix/add?","@howard0su Yes I had looked at using the FEC built into the CC2500, but haven't tried it. I had wanted to keep the bind process the same as Frsky_X to reduce new code in Betaflight. The FEC needs a fixed packet size on the cc2500 and that would have broke the bind.

there is some software implementation you can consider. https://bitbucket.org/befi/wifibroadcast/src/62d3d35a2374d2b02d0c77a5b6988f2e96fd5913/fec.c?at=default&fileviewer=file-view-default",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,557,2019-01-08T03:50:58Z,2020-08-08T10:51:28Z,2020-08-08T15:44:21Z,MERGED,True,468,0,2,https://github.com/brycedjohnson,Redpine protocol with cc2500 chip - Low Latency ,1,['Protocol'],https://github.com/DeviationTX/deviation/pull/557,https://github.com/brycedjohnson,10,https://github.com/DeviationTX/deviation/pull/557#issuecomment-452174710,"Hi all,
I've been flying this protocol that I wrote since about Oct.  The purpose was to see how low of latency and fast of data rate I could push it.  No telemetry for now. It is based roughly on frsky_x (to help with code reuse).
Flying really stable at 1.5ms loop time (666Hz).  RC looptime and packetsize is adjustable for testing for now.  Pushed it higher up to 1kHz, but ran into deviation cpu limits.  With large mixers the loop time might need to be pushed up a little.
4 11-bit channels and 12 1-bit aux channels.  Total RC packet sqaushed down to 12-14 bytes.  Although that could be bumped up if needed for anything.
I'll fully write up the protocol when it is pulled in any everything set in stone.
Latency results are awesome.  1-5ms from transmitter to betaflight dshot motor output.  Compared to 7-20ms with crossfire on taranis and 18-37ms with frsky_x to X4r on a taranis.
https://docs.google.com/spreadsheets/d/1MlGdLWIP5fOoVWmKOD-yPR4OXxioPMrUnrCy-muQypg/edit#gid=891788793
Range is still pretty good even though the bitrate was bumped up.  I lose RX on a crazybeef3 (no pa/lna) at about the range of 25mw VTx.  Matek411rx with pa/lna, I get plently of range to cover any racetrack so far.
Going to be opening a pull request in to Betaflight to go with this as well.
Couple things left to do:
I'd like to generate the pseudo-random hop_data based of the get_tx_id()/MCU_SerialNumber.  Was there a recommended way to do that?
I was considering a slow bitrate version (menu option) as well - long range, higher latency.  Interested in that?
Looking at a multimodule version as well.  Haven't done that yet, but will work on that when this would get pulled in.
Anything to fix/add?","@PhracturedBlue Yeah I understand that. I would be open to making this or a similar protocol 'owned' by deviation.
The purpose was to push latency down as far as possible and I really think it helps for quad racing.  A lot of people are moving to crossfire setups with taranis for racing to knock down latency.  Roughly 18-37ms with opentx frsky_X to 7-20ms with crossfire.  This pushes the latency down to 1-5ms (with much cheaper equipment). Currently no other TX/RX can provide anywhere close to this.
The idea of this pull request was to get feedback and finalize the protocol before it would be pulled in.  Once in it would be final.  I wouldn't want people having to upgrade deviation or betaflight to get compatible versions.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,557,2019-01-08T03:50:58Z,2020-08-08T10:51:28Z,2020-08-08T15:44:21Z,MERGED,True,468,0,2,https://github.com/brycedjohnson,Redpine protocol with cc2500 chip - Low Latency ,1,['Protocol'],https://github.com/DeviationTX/deviation/pull/557,https://github.com/brycedjohnson,11,https://github.com/DeviationTX/deviation/pull/557#issuecomment-452175608,"Hi all,
I've been flying this protocol that I wrote since about Oct.  The purpose was to see how low of latency and fast of data rate I could push it.  No telemetry for now. It is based roughly on frsky_x (to help with code reuse).
Flying really stable at 1.5ms loop time (666Hz).  RC looptime and packetsize is adjustable for testing for now.  Pushed it higher up to 1kHz, but ran into deviation cpu limits.  With large mixers the loop time might need to be pushed up a little.
4 11-bit channels and 12 1-bit aux channels.  Total RC packet sqaushed down to 12-14 bytes.  Although that could be bumped up if needed for anything.
I'll fully write up the protocol when it is pulled in any everything set in stone.
Latency results are awesome.  1-5ms from transmitter to betaflight dshot motor output.  Compared to 7-20ms with crossfire on taranis and 18-37ms with frsky_x to X4r on a taranis.
https://docs.google.com/spreadsheets/d/1MlGdLWIP5fOoVWmKOD-yPR4OXxioPMrUnrCy-muQypg/edit#gid=891788793
Range is still pretty good even though the bitrate was bumped up.  I lose RX on a crazybeef3 (no pa/lna) at about the range of 25mw VTx.  Matek411rx with pa/lna, I get plently of range to cover any racetrack so far.
Going to be opening a pull request in to Betaflight to go with this as well.
Couple things left to do:
I'd like to generate the pseudo-random hop_data based of the get_tx_id()/MCU_SerialNumber.  Was there a recommended way to do that?
I was considering a slow bitrate version (menu option) as well - long range, higher latency.  Interested in that?
Looking at a multimodule version as well.  Haven't done that yet, but will work on that when this would get pulled in.
Anything to fix/add?",@howard0su I'll check that software FEC. I'm a little hesitant it because the processor seems pretty close to maxed when the fast rate protocol and preforming the ADC_filter and mixer operation every packet.  The hardware FEC on the cc2500 would be great since it would offload all the work to the cc2500 instead (both on TX and RX).,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,557,2019-01-08T03:50:58Z,2020-08-08T10:51:28Z,2020-08-08T15:44:21Z,MERGED,True,468,0,2,https://github.com/brycedjohnson,Redpine protocol with cc2500 chip - Low Latency ,1,['Protocol'],https://github.com/DeviationTX/deviation/pull/557,https://github.com/TheRealMoeder,12,https://github.com/DeviationTX/deviation/pull/557#issuecomment-452274533,"Hi all,
I've been flying this protocol that I wrote since about Oct.  The purpose was to see how low of latency and fast of data rate I could push it.  No telemetry for now. It is based roughly on frsky_x (to help with code reuse).
Flying really stable at 1.5ms loop time (666Hz).  RC looptime and packetsize is adjustable for testing for now.  Pushed it higher up to 1kHz, but ran into deviation cpu limits.  With large mixers the loop time might need to be pushed up a little.
4 11-bit channels and 12 1-bit aux channels.  Total RC packet sqaushed down to 12-14 bytes.  Although that could be bumped up if needed for anything.
I'll fully write up the protocol when it is pulled in any everything set in stone.
Latency results are awesome.  1-5ms from transmitter to betaflight dshot motor output.  Compared to 7-20ms with crossfire on taranis and 18-37ms with frsky_x to X4r on a taranis.
https://docs.google.com/spreadsheets/d/1MlGdLWIP5fOoVWmKOD-yPR4OXxioPMrUnrCy-muQypg/edit#gid=891788793
Range is still pretty good even though the bitrate was bumped up.  I lose RX on a crazybeef3 (no pa/lna) at about the range of 25mw VTx.  Matek411rx with pa/lna, I get plently of range to cover any racetrack so far.
Going to be opening a pull request in to Betaflight to go with this as well.
Couple things left to do:
I'd like to generate the pseudo-random hop_data based of the get_tx_id()/MCU_SerialNumber.  Was there a recommended way to do that?
I was considering a slow bitrate version (menu option) as well - long range, higher latency.  Interested in that?
Looking at a multimodule version as well.  Haven't done that yet, but will work on that when this would get pulled in.
Anything to fix/add?",We should merge pr #532 first and reevaluate protocol performance,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,557,2019-01-08T03:50:58Z,2020-08-08T10:51:28Z,2020-08-08T15:44:21Z,MERGED,True,468,0,2,https://github.com/brycedjohnson,Redpine protocol with cc2500 chip - Low Latency ,1,['Protocol'],https://github.com/DeviationTX/deviation/pull/557,https://github.com/brycedjohnson,13,https://github.com/DeviationTX/deviation/pull/557#issuecomment-452358278,"Hi all,
I've been flying this protocol that I wrote since about Oct.  The purpose was to see how low of latency and fast of data rate I could push it.  No telemetry for now. It is based roughly on frsky_x (to help with code reuse).
Flying really stable at 1.5ms loop time (666Hz).  RC looptime and packetsize is adjustable for testing for now.  Pushed it higher up to 1kHz, but ran into deviation cpu limits.  With large mixers the loop time might need to be pushed up a little.
4 11-bit channels and 12 1-bit aux channels.  Total RC packet sqaushed down to 12-14 bytes.  Although that could be bumped up if needed for anything.
I'll fully write up the protocol when it is pulled in any everything set in stone.
Latency results are awesome.  1-5ms from transmitter to betaflight dshot motor output.  Compared to 7-20ms with crossfire on taranis and 18-37ms with frsky_x to X4r on a taranis.
https://docs.google.com/spreadsheets/d/1MlGdLWIP5fOoVWmKOD-yPR4OXxioPMrUnrCy-muQypg/edit#gid=891788793
Range is still pretty good even though the bitrate was bumped up.  I lose RX on a crazybeef3 (no pa/lna) at about the range of 25mw VTx.  Matek411rx with pa/lna, I get plently of range to cover any racetrack so far.
Going to be opening a pull request in to Betaflight to go with this as well.
Couple things left to do:
I'd like to generate the pseudo-random hop_data based of the get_tx_id()/MCU_SerialNumber.  Was there a recommended way to do that?
I was considering a slow bitrate version (menu option) as well - long range, higher latency.  Interested in that?
Looking at a multimodule version as well.  Haven't done that yet, but will work on that when this would get pulled in.
Anything to fix/add?","@TheRealMoeder I'll do that when merged.  I have a work around in there right now, so the performance is likely to be about the same.  (Although #532 is a much better way to do it)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,557,2019-01-08T03:50:58Z,2020-08-08T10:51:28Z,2020-08-08T15:44:21Z,MERGED,True,468,0,2,https://github.com/brycedjohnson,Redpine protocol with cc2500 chip - Low Latency ,1,['Protocol'],https://github.com/DeviationTX/deviation/pull/557,https://github.com/phobos-,14,https://github.com/DeviationTX/deviation/pull/557#issuecomment-452851611,"Hi all,
I've been flying this protocol that I wrote since about Oct.  The purpose was to see how low of latency and fast of data rate I could push it.  No telemetry for now. It is based roughly on frsky_x (to help with code reuse).
Flying really stable at 1.5ms loop time (666Hz).  RC looptime and packetsize is adjustable for testing for now.  Pushed it higher up to 1kHz, but ran into deviation cpu limits.  With large mixers the loop time might need to be pushed up a little.
4 11-bit channels and 12 1-bit aux channels.  Total RC packet sqaushed down to 12-14 bytes.  Although that could be bumped up if needed for anything.
I'll fully write up the protocol when it is pulled in any everything set in stone.
Latency results are awesome.  1-5ms from transmitter to betaflight dshot motor output.  Compared to 7-20ms with crossfire on taranis and 18-37ms with frsky_x to X4r on a taranis.
https://docs.google.com/spreadsheets/d/1MlGdLWIP5fOoVWmKOD-yPR4OXxioPMrUnrCy-muQypg/edit#gid=891788793
Range is still pretty good even though the bitrate was bumped up.  I lose RX on a crazybeef3 (no pa/lna) at about the range of 25mw VTx.  Matek411rx with pa/lna, I get plently of range to cover any racetrack so far.
Going to be opening a pull request in to Betaflight to go with this as well.
Couple things left to do:
I'd like to generate the pseudo-random hop_data based of the get_tx_id()/MCU_SerialNumber.  Was there a recommended way to do that?
I was considering a slow bitrate version (menu option) as well - long range, higher latency.  Interested in that?
Looking at a multimodule version as well.  Haven't done that yet, but will work on that when this would get pulled in.
Anything to fix/add?","Overall I really like this protocol, how can I test it?
The only thing I don't like is the difference between bind packet size and data packet size. In original frsky x bind packet is filled with zeroes, so that it is easier to set FIFOTHR register on the RX side - size of both pakcets is 32. How are you dealing with such different sizes in your protocol? Do you set FIFOTHR to a lower value after bind?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,557,2019-01-08T03:50:58Z,2020-08-08T10:51:28Z,2020-08-08T15:44:21Z,MERGED,True,468,0,2,https://github.com/brycedjohnson,Redpine protocol with cc2500 chip - Low Latency ,1,['Protocol'],https://github.com/DeviationTX/deviation/pull/557,https://github.com/theandrewmillett,15,https://github.com/DeviationTX/deviation/pull/557#issuecomment-452928420,"Hi all,
I've been flying this protocol that I wrote since about Oct.  The purpose was to see how low of latency and fast of data rate I could push it.  No telemetry for now. It is based roughly on frsky_x (to help with code reuse).
Flying really stable at 1.5ms loop time (666Hz).  RC looptime and packetsize is adjustable for testing for now.  Pushed it higher up to 1kHz, but ran into deviation cpu limits.  With large mixers the loop time might need to be pushed up a little.
4 11-bit channels and 12 1-bit aux channels.  Total RC packet sqaushed down to 12-14 bytes.  Although that could be bumped up if needed for anything.
I'll fully write up the protocol when it is pulled in any everything set in stone.
Latency results are awesome.  1-5ms from transmitter to betaflight dshot motor output.  Compared to 7-20ms with crossfire on taranis and 18-37ms with frsky_x to X4r on a taranis.
https://docs.google.com/spreadsheets/d/1MlGdLWIP5fOoVWmKOD-yPR4OXxioPMrUnrCy-muQypg/edit#gid=891788793
Range is still pretty good even though the bitrate was bumped up.  I lose RX on a crazybeef3 (no pa/lna) at about the range of 25mw VTx.  Matek411rx with pa/lna, I get plently of range to cover any racetrack so far.
Going to be opening a pull request in to Betaflight to go with this as well.
Couple things left to do:
I'd like to generate the pseudo-random hop_data based of the get_tx_id()/MCU_SerialNumber.  Was there a recommended way to do that?
I was considering a slow bitrate version (menu option) as well - long range, higher latency.  Interested in that?
Looking at a multimodule version as well.  Haven't done that yet, but will work on that when this would get pulled in.
Anything to fix/add?","Any thoughts on what impact telem would have on latency? Just curious if a future ""Redpine+"" might support some level of telem if there isn't too large of a latency hit.
Also, with Ch. 5-16 being 1 bit, wouldn't that prevent the use of 3 way switches on an AUX channel, or am I missing something?
Great work, by the way. I love Deviation, and I think that this would be a killer feature.
And now a complete tangent: how feasible would it be to do a custom Redpine firmware for a popular frsky receiver (I'd recommend the XM+ or R-XSR)? Could we flash the receiver from the transmitter, Taranis-style? EDIT: Perhaps this could be a starting point: opensky",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,557,2019-01-08T03:50:58Z,2020-08-08T10:51:28Z,2020-08-08T15:44:21Z,MERGED,True,468,0,2,https://github.com/brycedjohnson,Redpine protocol with cc2500 chip - Low Latency ,1,['Protocol'],https://github.com/DeviationTX/deviation/pull/557,https://github.com/hexfet,16,https://github.com/DeviationTX/deviation/pull/557#issuecomment-452950916,"Hi all,
I've been flying this protocol that I wrote since about Oct.  The purpose was to see how low of latency and fast of data rate I could push it.  No telemetry for now. It is based roughly on frsky_x (to help with code reuse).
Flying really stable at 1.5ms loop time (666Hz).  RC looptime and packetsize is adjustable for testing for now.  Pushed it higher up to 1kHz, but ran into deviation cpu limits.  With large mixers the loop time might need to be pushed up a little.
4 11-bit channels and 12 1-bit aux channels.  Total RC packet sqaushed down to 12-14 bytes.  Although that could be bumped up if needed for anything.
I'll fully write up the protocol when it is pulled in any everything set in stone.
Latency results are awesome.  1-5ms from transmitter to betaflight dshot motor output.  Compared to 7-20ms with crossfire on taranis and 18-37ms with frsky_x to X4r on a taranis.
https://docs.google.com/spreadsheets/d/1MlGdLWIP5fOoVWmKOD-yPR4OXxioPMrUnrCy-muQypg/edit#gid=891788793
Range is still pretty good even though the bitrate was bumped up.  I lose RX on a crazybeef3 (no pa/lna) at about the range of 25mw VTx.  Matek411rx with pa/lna, I get plently of range to cover any racetrack so far.
Going to be opening a pull request in to Betaflight to go with this as well.
Couple things left to do:
I'd like to generate the pseudo-random hop_data based of the get_tx_id()/MCU_SerialNumber.  Was there a recommended way to do that?
I was considering a slow bitrate version (menu option) as well - long range, higher latency.  Interested in that?
Looking at a multimodule version as well.  Haven't done that yet, but will work on that when this would get pulled in.
Anything to fix/add?","The previous comment supports my thought that redpine might benefit from being its own project.  If it's popular there will be issues, feature requests, ports to other platforms for both tx and rx, etc.  Not sure how best to link to such a project to make Deviation the first place for new development.  Giving Bryce ability to publish test builds is one step.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,557,2019-01-08T03:50:58Z,2020-08-08T10:51:28Z,2020-08-08T15:44:21Z,MERGED,True,468,0,2,https://github.com/brycedjohnson,Redpine protocol with cc2500 chip - Low Latency ,1,['Protocol'],https://github.com/DeviationTX/deviation/pull/557,https://github.com/phobos-,17,https://github.com/DeviationTX/deviation/pull/557#issuecomment-452996216,"Hi all,
I've been flying this protocol that I wrote since about Oct.  The purpose was to see how low of latency and fast of data rate I could push it.  No telemetry for now. It is based roughly on frsky_x (to help with code reuse).
Flying really stable at 1.5ms loop time (666Hz).  RC looptime and packetsize is adjustable for testing for now.  Pushed it higher up to 1kHz, but ran into deviation cpu limits.  With large mixers the loop time might need to be pushed up a little.
4 11-bit channels and 12 1-bit aux channels.  Total RC packet sqaushed down to 12-14 bytes.  Although that could be bumped up if needed for anything.
I'll fully write up the protocol when it is pulled in any everything set in stone.
Latency results are awesome.  1-5ms from transmitter to betaflight dshot motor output.  Compared to 7-20ms with crossfire on taranis and 18-37ms with frsky_x to X4r on a taranis.
https://docs.google.com/spreadsheets/d/1MlGdLWIP5fOoVWmKOD-yPR4OXxioPMrUnrCy-muQypg/edit#gid=891788793
Range is still pretty good even though the bitrate was bumped up.  I lose RX on a crazybeef3 (no pa/lna) at about the range of 25mw VTx.  Matek411rx with pa/lna, I get plently of range to cover any racetrack so far.
Going to be opening a pull request in to Betaflight to go with this as well.
Couple things left to do:
I'd like to generate the pseudo-random hop_data based of the get_tx_id()/MCU_SerialNumber.  Was there a recommended way to do that?
I was considering a slow bitrate version (menu option) as well - long range, higher latency.  Interested in that?
Looking at a multimodule version as well.  Haven't done that yet, but will work on that when this would get pulled in.
Anything to fix/add?","I would merge it but make it hidden/optional as @howard0su suggested. It's a great addition to deviation. Without merging the tx side of the protocol it would be hard/impossible to merge the RX side to bf/opensky/somewhere else, and Bryce would have to maintain two or more forks with his changes - that's a lot of work that could be spent elsewhere.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,557,2019-01-08T03:50:58Z,2020-08-08T10:51:28Z,2020-08-08T15:44:21Z,MERGED,True,468,0,2,https://github.com/brycedjohnson,Redpine protocol with cc2500 chip - Low Latency ,1,['Protocol'],https://github.com/DeviationTX/deviation/pull/557,https://github.com/brycedjohnson,18,https://github.com/DeviationTX/deviation/pull/557#issuecomment-453206805,"Hi all,
I've been flying this protocol that I wrote since about Oct.  The purpose was to see how low of latency and fast of data rate I could push it.  No telemetry for now. It is based roughly on frsky_x (to help with code reuse).
Flying really stable at 1.5ms loop time (666Hz).  RC looptime and packetsize is adjustable for testing for now.  Pushed it higher up to 1kHz, but ran into deviation cpu limits.  With large mixers the loop time might need to be pushed up a little.
4 11-bit channels and 12 1-bit aux channels.  Total RC packet sqaushed down to 12-14 bytes.  Although that could be bumped up if needed for anything.
I'll fully write up the protocol when it is pulled in any everything set in stone.
Latency results are awesome.  1-5ms from transmitter to betaflight dshot motor output.  Compared to 7-20ms with crossfire on taranis and 18-37ms with frsky_x to X4r on a taranis.
https://docs.google.com/spreadsheets/d/1MlGdLWIP5fOoVWmKOD-yPR4OXxioPMrUnrCy-muQypg/edit#gid=891788793
Range is still pretty good even though the bitrate was bumped up.  I lose RX on a crazybeef3 (no pa/lna) at about the range of 25mw VTx.  Matek411rx with pa/lna, I get plently of range to cover any racetrack so far.
Going to be opening a pull request in to Betaflight to go with this as well.
Couple things left to do:
I'd like to generate the pseudo-random hop_data based of the get_tx_id()/MCU_SerialNumber.  Was there a recommended way to do that?
I was considering a slow bitrate version (menu option) as well - long range, higher latency.  Interested in that?
Looking at a multimodule version as well.  Haven't done that yet, but will work on that when this would get pulled in.
Anything to fix/add?","Lots of good ideas, thanks for the consideration.
@phobos- You will be able to test it if you have a devo TX and a FC with cc2500 spi-rx.  Such as crazybeeF3FR or matek411-one.  I'm just doing a little clean up now, but after that I'll could provide some test builds for deviation and binarys for betaflight.
@theandrewmillett On deviation each position of the 3 way switch can be set to different aux channels.  For example, I have Ch5 set to SW B1 (for betaflight turtle mode) and Ch6 to SW B2 (for Beeper).  Ch7 is SW C1 (arm). Ch8 is SW C2 (Have it set in BF to arm and no_OSD)
XM, XSR, X4R could possibly be flashed with some work and additions to the opensky project: https://github.com/fishpepper/OpenSky  It is probably not something I'll take on right now though, but I'd be open to someone else doing that!",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,557,2019-01-08T03:50:58Z,2020-08-08T10:51:28Z,2020-08-08T15:44:21Z,MERGED,True,468,0,2,https://github.com/brycedjohnson,Redpine protocol with cc2500 chip - Low Latency ,1,['Protocol'],https://github.com/DeviationTX/deviation/pull/557,https://github.com/howard0su,19,https://github.com/DeviationTX/deviation/pull/557#issuecomment-464010573,"Hi all,
I've been flying this protocol that I wrote since about Oct.  The purpose was to see how low of latency and fast of data rate I could push it.  No telemetry for now. It is based roughly on frsky_x (to help with code reuse).
Flying really stable at 1.5ms loop time (666Hz).  RC looptime and packetsize is adjustable for testing for now.  Pushed it higher up to 1kHz, but ran into deviation cpu limits.  With large mixers the loop time might need to be pushed up a little.
4 11-bit channels and 12 1-bit aux channels.  Total RC packet sqaushed down to 12-14 bytes.  Although that could be bumped up if needed for anything.
I'll fully write up the protocol when it is pulled in any everything set in stone.
Latency results are awesome.  1-5ms from transmitter to betaflight dshot motor output.  Compared to 7-20ms with crossfire on taranis and 18-37ms with frsky_x to X4r on a taranis.
https://docs.google.com/spreadsheets/d/1MlGdLWIP5fOoVWmKOD-yPR4OXxioPMrUnrCy-muQypg/edit#gid=891788793
Range is still pretty good even though the bitrate was bumped up.  I lose RX on a crazybeef3 (no pa/lna) at about the range of 25mw VTx.  Matek411rx with pa/lna, I get plently of range to cover any racetrack so far.
Going to be opening a pull request in to Betaflight to go with this as well.
Couple things left to do:
I'd like to generate the pseudo-random hop_data based of the get_tx_id()/MCU_SerialNumber.  Was there a recommended way to do that?
I was considering a slow bitrate version (menu option) as well - long range, higher latency.  Interested in that?
Looking at a multimodule version as well.  Haven't done that yet, but will work on that when this would get pulled in.
Anything to fix/add?",@brycedjohnson still working on this? any updates on Rx? any updates on this PR?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,557,2019-01-08T03:50:58Z,2020-08-08T10:51:28Z,2020-08-08T15:44:21Z,MERGED,True,468,0,2,https://github.com/brycedjohnson,Redpine protocol with cc2500 chip - Low Latency ,1,['Protocol'],https://github.com/DeviationTX/deviation/pull/557,https://github.com/brycedjohnson,20,https://github.com/DeviationTX/deviation/pull/557#issuecomment-464111157,"Hi all,
I've been flying this protocol that I wrote since about Oct.  The purpose was to see how low of latency and fast of data rate I could push it.  No telemetry for now. It is based roughly on frsky_x (to help with code reuse).
Flying really stable at 1.5ms loop time (666Hz).  RC looptime and packetsize is adjustable for testing for now.  Pushed it higher up to 1kHz, but ran into deviation cpu limits.  With large mixers the loop time might need to be pushed up a little.
4 11-bit channels and 12 1-bit aux channels.  Total RC packet sqaushed down to 12-14 bytes.  Although that could be bumped up if needed for anything.
I'll fully write up the protocol when it is pulled in any everything set in stone.
Latency results are awesome.  1-5ms from transmitter to betaflight dshot motor output.  Compared to 7-20ms with crossfire on taranis and 18-37ms with frsky_x to X4r on a taranis.
https://docs.google.com/spreadsheets/d/1MlGdLWIP5fOoVWmKOD-yPR4OXxioPMrUnrCy-muQypg/edit#gid=891788793
Range is still pretty good even though the bitrate was bumped up.  I lose RX on a crazybeef3 (no pa/lna) at about the range of 25mw VTx.  Matek411rx with pa/lna, I get plently of range to cover any racetrack so far.
Going to be opening a pull request in to Betaflight to go with this as well.
Couple things left to do:
I'd like to generate the pseudo-random hop_data based of the get_tx_id()/MCU_SerialNumber.  Was there a recommended way to do that?
I was considering a slow bitrate version (menu option) as well - long range, higher latency.  Interested in that?
Looking at a multimodule version as well.  Haven't done that yet, but will work on that when this would get pulled in.
Anything to fix/add?",Yes I am still working on this although have been traveling for a couple weeks.  Been working on cleaning up the betaflight part so I can do a clean PR.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,557,2019-01-08T03:50:58Z,2020-08-08T10:51:28Z,2020-08-08T15:44:21Z,MERGED,True,468,0,2,https://github.com/brycedjohnson,Redpine protocol with cc2500 chip - Low Latency ,1,['Protocol'],https://github.com/DeviationTX/deviation/pull/557,https://github.com/brycedjohnson,21,https://github.com/DeviationTX/deviation/pull/557#issuecomment-464504722,"Hi all,
I've been flying this protocol that I wrote since about Oct.  The purpose was to see how low of latency and fast of data rate I could push it.  No telemetry for now. It is based roughly on frsky_x (to help with code reuse).
Flying really stable at 1.5ms loop time (666Hz).  RC looptime and packetsize is adjustable for testing for now.  Pushed it higher up to 1kHz, but ran into deviation cpu limits.  With large mixers the loop time might need to be pushed up a little.
4 11-bit channels and 12 1-bit aux channels.  Total RC packet sqaushed down to 12-14 bytes.  Although that could be bumped up if needed for anything.
I'll fully write up the protocol when it is pulled in any everything set in stone.
Latency results are awesome.  1-5ms from transmitter to betaflight dshot motor output.  Compared to 7-20ms with crossfire on taranis and 18-37ms with frsky_x to X4r on a taranis.
https://docs.google.com/spreadsheets/d/1MlGdLWIP5fOoVWmKOD-yPR4OXxioPMrUnrCy-muQypg/edit#gid=891788793
Range is still pretty good even though the bitrate was bumped up.  I lose RX on a crazybeef3 (no pa/lna) at about the range of 25mw VTx.  Matek411rx with pa/lna, I get plently of range to cover any racetrack so far.
Going to be opening a pull request in to Betaflight to go with this as well.
Couple things left to do:
I'd like to generate the pseudo-random hop_data based of the get_tx_id()/MCU_SerialNumber.  Was there a recommended way to do that?
I was considering a slow bitrate version (menu option) as well - long range, higher latency.  Interested in that?
Looking at a multimodule version as well.  Haven't done that yet, but will work on that when this would get pulled in.
Anything to fix/add?",Accidentally pushed my change reverting #694 which caused a bunch of lint errors... fixed that so it isn't reverting that change anymore,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,557,2019-01-08T03:50:58Z,2020-08-08T10:51:28Z,2020-08-08T15:44:21Z,MERGED,True,468,0,2,https://github.com/brycedjohnson,Redpine protocol with cc2500 chip - Low Latency ,1,['Protocol'],https://github.com/DeviationTX/deviation/pull/557,https://github.com/howard0su,22,https://github.com/DeviationTX/deviation/pull/557#issuecomment-464573863,"Hi all,
I've been flying this protocol that I wrote since about Oct.  The purpose was to see how low of latency and fast of data rate I could push it.  No telemetry for now. It is based roughly on frsky_x (to help with code reuse).
Flying really stable at 1.5ms loop time (666Hz).  RC looptime and packetsize is adjustable for testing for now.  Pushed it higher up to 1kHz, but ran into deviation cpu limits.  With large mixers the loop time might need to be pushed up a little.
4 11-bit channels and 12 1-bit aux channels.  Total RC packet sqaushed down to 12-14 bytes.  Although that could be bumped up if needed for anything.
I'll fully write up the protocol when it is pulled in any everything set in stone.
Latency results are awesome.  1-5ms from transmitter to betaflight dshot motor output.  Compared to 7-20ms with crossfire on taranis and 18-37ms with frsky_x to X4r on a taranis.
https://docs.google.com/spreadsheets/d/1MlGdLWIP5fOoVWmKOD-yPR4OXxioPMrUnrCy-muQypg/edit#gid=891788793
Range is still pretty good even though the bitrate was bumped up.  I lose RX on a crazybeef3 (no pa/lna) at about the range of 25mw VTx.  Matek411rx with pa/lna, I get plently of range to cover any racetrack so far.
Going to be opening a pull request in to Betaflight to go with this as well.
Couple things left to do:
I'd like to generate the pseudo-random hop_data based of the get_tx_id()/MCU_SerialNumber.  Was there a recommended way to do that?
I was considering a slow bitrate version (menu option) as well - long range, higher latency.  Interested in that?
Looking at a multimodule version as well.  Haven't done that yet, but will work on that when this would get pulled in.
Anything to fix/add?",I would like to create a RX for this protocol. when can I find firmware code for Rx?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,557,2019-01-08T03:50:58Z,2020-08-08T10:51:28Z,2020-08-08T15:44:21Z,MERGED,True,468,0,2,https://github.com/brycedjohnson,Redpine protocol with cc2500 chip - Low Latency ,1,['Protocol'],https://github.com/DeviationTX/deviation/pull/557,https://github.com/brycedjohnson,23,https://github.com/DeviationTX/deviation/pull/557#issuecomment-464577119,"Hi all,
I've been flying this protocol that I wrote since about Oct.  The purpose was to see how low of latency and fast of data rate I could push it.  No telemetry for now. It is based roughly on frsky_x (to help with code reuse).
Flying really stable at 1.5ms loop time (666Hz).  RC looptime and packetsize is adjustable for testing for now.  Pushed it higher up to 1kHz, but ran into deviation cpu limits.  With large mixers the loop time might need to be pushed up a little.
4 11-bit channels and 12 1-bit aux channels.  Total RC packet sqaushed down to 12-14 bytes.  Although that could be bumped up if needed for anything.
I'll fully write up the protocol when it is pulled in any everything set in stone.
Latency results are awesome.  1-5ms from transmitter to betaflight dshot motor output.  Compared to 7-20ms with crossfire on taranis and 18-37ms with frsky_x to X4r on a taranis.
https://docs.google.com/spreadsheets/d/1MlGdLWIP5fOoVWmKOD-yPR4OXxioPMrUnrCy-muQypg/edit#gid=891788793
Range is still pretty good even though the bitrate was bumped up.  I lose RX on a crazybeef3 (no pa/lna) at about the range of 25mw VTx.  Matek411rx with pa/lna, I get plently of range to cover any racetrack so far.
Going to be opening a pull request in to Betaflight to go with this as well.
Couple things left to do:
I'd like to generate the pseudo-random hop_data based of the get_tx_id()/MCU_SerialNumber.  Was there a recommended way to do that?
I was considering a slow bitrate version (menu option) as well - long range, higher latency.  Interested in that?
Looking at a multimodule version as well.  Haven't done that yet, but will work on that when this would get pulled in.
Anything to fix/add?","Sounds pretty neat!  Are you designing a RX or modifying code on a current RX?
@howard0su All the RX code is in my recent pull request to Betaflight.
betaflight/betaflight#7601
The core of it is in cc2500_redpine.c with some of the initialization and binding in cc2500_frsky_shared.c",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,557,2019-01-08T03:50:58Z,2020-08-08T10:51:28Z,2020-08-08T15:44:21Z,MERGED,True,468,0,2,https://github.com/brycedjohnson,Redpine protocol with cc2500 chip - Low Latency ,1,['Protocol'],https://github.com/DeviationTX/deviation/pull/557,https://github.com/brycedjohnson,24,https://github.com/DeviationTX/deviation/pull/557#issuecomment-670306292,"Hi all,
I've been flying this protocol that I wrote since about Oct.  The purpose was to see how low of latency and fast of data rate I could push it.  No telemetry for now. It is based roughly on frsky_x (to help with code reuse).
Flying really stable at 1.5ms loop time (666Hz).  RC looptime and packetsize is adjustable for testing for now.  Pushed it higher up to 1kHz, but ran into deviation cpu limits.  With large mixers the loop time might need to be pushed up a little.
4 11-bit channels and 12 1-bit aux channels.  Total RC packet sqaushed down to 12-14 bytes.  Although that could be bumped up if needed for anything.
I'll fully write up the protocol when it is pulled in any everything set in stone.
Latency results are awesome.  1-5ms from transmitter to betaflight dshot motor output.  Compared to 7-20ms with crossfire on taranis and 18-37ms with frsky_x to X4r on a taranis.
https://docs.google.com/spreadsheets/d/1MlGdLWIP5fOoVWmKOD-yPR4OXxioPMrUnrCy-muQypg/edit#gid=891788793
Range is still pretty good even though the bitrate was bumped up.  I lose RX on a crazybeef3 (no pa/lna) at about the range of 25mw VTx.  Matek411rx with pa/lna, I get plently of range to cover any racetrack so far.
Going to be opening a pull request in to Betaflight to go with this as well.
Couple things left to do:
I'd like to generate the pseudo-random hop_data based of the get_tx_id()/MCU_SerialNumber.  Was there a recommended way to do that?
I was considering a slow bitrate version (menu option) as well - long range, higher latency.  Interested in that?
Looking at a multimodule version as well.  Haven't done that yet, but will work on that when this would get pulled in.
Anything to fix/add?","@PhracturedBlue any way I could get this pulled into the main branch? I have been passing out builds to people to use and it had been working well for quite a few months.
Thanks!",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,557,2019-01-08T03:50:58Z,2020-08-08T10:51:28Z,2020-08-08T15:44:21Z,MERGED,True,468,0,2,https://github.com/brycedjohnson,Redpine protocol with cc2500 chip - Low Latency ,1,['Protocol'],https://github.com/DeviationTX/deviation/pull/557,https://github.com/TheRealMoeder,25,https://github.com/DeviationTX/deviation/pull/557#issuecomment-670694720,"Hi all,
I've been flying this protocol that I wrote since about Oct.  The purpose was to see how low of latency and fast of data rate I could push it.  No telemetry for now. It is based roughly on frsky_x (to help with code reuse).
Flying really stable at 1.5ms loop time (666Hz).  RC looptime and packetsize is adjustable for testing for now.  Pushed it higher up to 1kHz, but ran into deviation cpu limits.  With large mixers the loop time might need to be pushed up a little.
4 11-bit channels and 12 1-bit aux channels.  Total RC packet sqaushed down to 12-14 bytes.  Although that could be bumped up if needed for anything.
I'll fully write up the protocol when it is pulled in any everything set in stone.
Latency results are awesome.  1-5ms from transmitter to betaflight dshot motor output.  Compared to 7-20ms with crossfire on taranis and 18-37ms with frsky_x to X4r on a taranis.
https://docs.google.com/spreadsheets/d/1MlGdLWIP5fOoVWmKOD-yPR4OXxioPMrUnrCy-muQypg/edit#gid=891788793
Range is still pretty good even though the bitrate was bumped up.  I lose RX on a crazybeef3 (no pa/lna) at about the range of 25mw VTx.  Matek411rx with pa/lna, I get plently of range to cover any racetrack so far.
Going to be opening a pull request in to Betaflight to go with this as well.
Couple things left to do:
I'd like to generate the pseudo-random hop_data based of the get_tx_id()/MCU_SerialNumber.  Was there a recommended way to do that?
I was considering a slow bitrate version (menu option) as well - long range, higher latency.  Interested in that?
Looking at a multimodule version as well.  Haven't done that yet, but will work on that when this would get pulled in.
Anything to fix/add?","Do you have an estimated user number for this protocol? If it has enough traction, I don't see why we shouldn't merge it. Probably you spent more time to optimize it than some manufacturers put in their toy protocols...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,557,2019-01-08T03:50:58Z,2020-08-08T10:51:28Z,2020-08-08T15:44:21Z,MERGED,True,468,0,2,https://github.com/brycedjohnson,Redpine protocol with cc2500 chip - Low Latency ,1,['Protocol'],https://github.com/DeviationTX/deviation/pull/557,https://github.com/brycedjohnson,26,https://github.com/DeviationTX/deviation/pull/557#issuecomment-670720004,"Hi all,
I've been flying this protocol that I wrote since about Oct.  The purpose was to see how low of latency and fast of data rate I could push it.  No telemetry for now. It is based roughly on frsky_x (to help with code reuse).
Flying really stable at 1.5ms loop time (666Hz).  RC looptime and packetsize is adjustable for testing for now.  Pushed it higher up to 1kHz, but ran into deviation cpu limits.  With large mixers the loop time might need to be pushed up a little.
4 11-bit channels and 12 1-bit aux channels.  Total RC packet sqaushed down to 12-14 bytes.  Although that could be bumped up if needed for anything.
I'll fully write up the protocol when it is pulled in any everything set in stone.
Latency results are awesome.  1-5ms from transmitter to betaflight dshot motor output.  Compared to 7-20ms with crossfire on taranis and 18-37ms with frsky_x to X4r on a taranis.
https://docs.google.com/spreadsheets/d/1MlGdLWIP5fOoVWmKOD-yPR4OXxioPMrUnrCy-muQypg/edit#gid=891788793
Range is still pretty good even though the bitrate was bumped up.  I lose RX on a crazybeef3 (no pa/lna) at about the range of 25mw VTx.  Matek411rx with pa/lna, I get plently of range to cover any racetrack so far.
Going to be opening a pull request in to Betaflight to go with this as well.
Couple things left to do:
I'd like to generate the pseudo-random hop_data based of the get_tx_id()/MCU_SerialNumber.  Was there a recommended way to do that?
I was considering a slow bitrate version (menu option) as well - long range, higher latency.  Interested in that?
Looking at a multimodule version as well.  Haven't done that yet, but will work on that when this would get pulled in.
Anything to fix/add?","@TheRealMoeder  Hard to say, it has been merged into betaflight for boards with spi-rx on them as well as the multiprotocol TX module. I have had 10s of random people get in touch to ask questions, so there are probably 10x more people that have tried it out?
A manufacturer had emailed me wanting to make a RX to support it directly (I currently have a test opensky version for reflashing XSR/X4R that supports redpine).  I had said it works best on deviationTX with the lowest latency so they wanted to try it out.  Multiprotocol and Opentx still have a few issues that is increasing the end-to-end latency.  With deviationTx the end to end latency (stick to motor throttle change in betaflight) is between 1-5ms.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,557,2019-01-08T03:50:58Z,2020-08-08T10:51:28Z,2020-08-08T15:44:21Z,MERGED,True,468,0,2,https://github.com/brycedjohnson,Redpine protocol with cc2500 chip - Low Latency ,1,['Protocol'],https://github.com/DeviationTX/deviation/pull/557,https://github.com/brycedjohnson,27,https://github.com/DeviationTX/deviation/pull/557#issuecomment-670943182,"Hi all,
I've been flying this protocol that I wrote since about Oct.  The purpose was to see how low of latency and fast of data rate I could push it.  No telemetry for now. It is based roughly on frsky_x (to help with code reuse).
Flying really stable at 1.5ms loop time (666Hz).  RC looptime and packetsize is adjustable for testing for now.  Pushed it higher up to 1kHz, but ran into deviation cpu limits.  With large mixers the loop time might need to be pushed up a little.
4 11-bit channels and 12 1-bit aux channels.  Total RC packet sqaushed down to 12-14 bytes.  Although that could be bumped up if needed for anything.
I'll fully write up the protocol when it is pulled in any everything set in stone.
Latency results are awesome.  1-5ms from transmitter to betaflight dshot motor output.  Compared to 7-20ms with crossfire on taranis and 18-37ms with frsky_x to X4r on a taranis.
https://docs.google.com/spreadsheets/d/1MlGdLWIP5fOoVWmKOD-yPR4OXxioPMrUnrCy-muQypg/edit#gid=891788793
Range is still pretty good even though the bitrate was bumped up.  I lose RX on a crazybeef3 (no pa/lna) at about the range of 25mw VTx.  Matek411rx with pa/lna, I get plently of range to cover any racetrack so far.
Going to be opening a pull request in to Betaflight to go with this as well.
Couple things left to do:
I'd like to generate the pseudo-random hop_data based of the get_tx_id()/MCU_SerialNumber.  Was there a recommended way to do that?
I was considering a slow bitrate version (menu option) as well - long range, higher latency.  Interested in that?
Looking at a multimodule version as well.  Haven't done that yet, but will work on that when this would get pulled in.
Anything to fix/add?",Thanks!!,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,558,2019-01-08T04:16:50Z,2019-01-08T17:09:49Z,2019-01-08T17:11:59Z,MERGED,True,144,75,21,https://github.com/howard0su,Add language tests,8,[],https://github.com/DeviationTX/deviation/pull/558,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/558,"Add test case for language testing
s/NO_LANGUAGE_SUPPORT/SUPPORT_MULTI_LANGUAGE/
Add target_all.h to give default values to knob
Avoid include target_defs.h directly, always include target.h
mark some functions as static.","Add test case for language testing
s/NO_LANGUAGE_SUPPORT/SUPPORT_MULTI_LANGUAGE/
Add target_all.h to give default values to knob
Avoid include target_defs.h directly, always include target.h
mark some functions as static.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,559,2019-01-08T05:54:49Z,2019-01-08T13:48:07Z,2019-01-10T11:30:32Z,MERGED,True,454,7,9,https://github.com/howard0su,Compile test as its own,1,[],https://github.com/DeviationTX/deviation/pull/559,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/559,"Remove the depedency of emu Makefile. Ready to move it out of target folder.
All the functions inside test folder can be mocked via variables or actions now.","Remove the depedency of emu Makefile. Ready to move it out of target folder.
All the functions inside test folder can be mocked via variables or actions now.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,560,2019-01-08T09:04:17Z,2019-01-08T17:08:20Z,2019-01-10T11:30:21Z,MERGED,True,224,46,10,https://github.com/howard0su,Add Screenshot based tests,2,[],https://github.com/DeviationTX/deviation/pull/560,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/560,"Add LCD String tests
Add GUI label tests

Based on change #559","Add LCD String tests
Add GUI label tests

Based on change #559",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,560,2019-01-08T09:04:17Z,2019-01-08T17:08:20Z,2019-01-10T11:30:21Z,MERGED,True,224,46,10,https://github.com/howard0su,Add Screenshot based tests,2,[],https://github.com/DeviationTX/deviation/pull/560,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/560#issuecomment-452227472,"Add LCD String tests
Add GUI label tests

Based on change #559","AssertScreenShot()
If there is no reference file under tests/320x240x8/, this function will print out a message and generate the file as reference. If the reference file is there, this function will perform a pixel to pixel compare. If failed, the test image will generate under filesyste/test for developer to checkout.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,561,2019-01-08T14:53:25Z,2019-01-08T16:34:12Z,2019-02-25T11:56:03Z,CLOSED,False,7,7,4,https://github.com/howard0su,Only caculate output channels that are needed by protocol,1,[],https://github.com/DeviationTX/deviation/pull/561,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/561,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,561,2019-01-08T14:53:25Z,2019-01-08T16:34:12Z,2019-02-25T11:56:03Z,CLOSED,False,7,7,4,https://github.com/howard0su,Only caculate output channels that are needed by protocol,1,[],https://github.com/DeviationTX/deviation/pull/561,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/561#issuecomment-452326668,,"@PhracturedBlue I am not sure if this make sense. but profiling shows this has big gain. The profiling result is collected on emu build (with optimize).
Before:
Profiling Result: sequence:
--Event-----------------------|--timestamp--|----delta_t---
UpdateeRawInputs:	3814 tick | +3814 tick
EvalMixers:	7902 tick | +4088 tick
AUTO-Templates:	8190 tick | +288 tick
Limits:	12958 tick | +4768 tick
Backlight: 0
Backlight: 5
Profiling Result: sequence:
--Event-----------------------|--timestamp--|----delta_t---
UpdateeRawInputs:	2696 tick | +2696 tick
EvalMixers:	9498 tick | +6802 tick
AUTO-Templates:	9874 tick | +376 tick
Limits:	14686 tick | +4812 tick
After
Profiling Result: sequence:
--Event-----------------------|--timestamp--|----delta_t---
UpdateRaw :	3096 tick | +3096 tick
EvalMixers:	6334 tick | +3238 tick
Templates:	6510 tick | +176 tick
Limits   :	9102 tick | +2592 tick
Profiling Result: sequence:
--Event-----------------------|--timestamp--|----delta_t---
UpdateRaw :	2320 tick | +2320 tick
EvalMixers:	4810 tick | +2490 tick
Templates:	5028 tick | +218 tick
Limits   :	7684 tick | +2656 tick",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,561,2019-01-08T14:53:25Z,2019-01-08T16:34:12Z,2019-02-25T11:56:03Z,CLOSED,False,7,7,4,https://github.com/howard0su,Only caculate output channels that are needed by protocol,1,[],https://github.com/DeviationTX/deviation/pull/561,https://github.com/PhracturedBlue,3,https://github.com/DeviationTX/deviation/pull/561#issuecomment-452359993,,"Why add a parameter to CalcChannels and not just use the num_channels internally to the function?
The profiling data doesn't make much sense to me.  UpdateRaw and EvalMixers shouldn't change at all.  Also, I don't expect CalcChannels to be very expensive and it is really only a differnce between 4 (minimum) and 16 (maximum) iterations, so I really don't expect this change to have any noticeable performance impact.
I've been thinking about setting up an stm32 qemu emulator to allow properly testing/debugging/profiling code.  I think a change like this should be profiled on the transmitter.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,561,2019-01-08T14:53:25Z,2019-01-08T16:34:12Z,2019-02-25T11:56:03Z,CLOSED,False,7,7,4,https://github.com/howard0su,Only caculate output channels that are needed by protocol,1,[],https://github.com/DeviationTX/deviation/pull/561,https://github.com/howard0su,4,https://github.com/DeviationTX/deviation/pull/561#issuecomment-452363943,,Yes. I am looking at this: https://visualgdb.com/ which I have a stm32f discovery board I can use to run some test code. We need have something build just the code we want to profiling.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,561,2019-01-08T14:53:25Z,2019-01-08T16:34:12Z,2019-02-25T11:56:03Z,CLOSED,False,7,7,4,https://github.com/howard0su,Only caculate output channels that are needed by protocol,1,[],https://github.com/DeviationTX/deviation/pull/561,https://github.com/howard0su,5,https://github.com/DeviationTX/deviation/pull/561#issuecomment-452571739,,"I did a profiling on hardware of mixer. this is on a real hardware stm32.
Does this make sense to you?
…
On Wed, Jan 9, 2019 at 12:23 AM PhracturedBlue ***@***.***> wrote:
 Why add a parameter to CalcChannels and not just use the num_channels
 internally to the function?

 The profiling data doesn't make much sense to me. UpdateRaw and EvalMixers
 shouldn't change at all. Also, I don't expect CalcChannels to be very
 expensive and it is really only a differnce between 4 (minimum) and 16
 (maximum) iterations, so I really don't expect this change to have any
 noticeable performance impact.

 I've been thinking about setting up an stm32 qemu emulator to allow
 properly testing/debugging/profiling code. I think a change like this
 should be profiled on the transmitter.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#561 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRMN28Wdqol-dEtZySkkDL5uMXPGTks5vBMYHgaJpZM4Z1oXn>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,562,2019-01-09T03:07:47Z,,2019-01-12T18:46:45Z,OPEN,False,1112,1,20,https://github.com/PhracturedBlue,Enable qemu target for STM32 emulation,3,[],https://github.com/DeviationTX/deviation/pull/562,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/562,"This is going to be a test of using QEMU to run STM32 code in a controlled environment to help with debug as well as do profiling.
There is a QEMU branch supporting STM32 here: https://github.com/beckus/qemu_stm32
It can be compiled from source, or used via docker
The STM32 target is somewhat limited (no SPI...limited timer modes) so it won't currently be able to run protocol code unaided, but I'm going to experiment with its capabilities in this pull-request.
The best supported board is the Olimex P103 which is an STM32F103RB based board.  That is the same chip in the Devo7e, and it will be too small for a monolithic build.  Likely we'll either need to patch Qemu to support a more capable chip (like the 'VC' variant used in the devo8) or we'll need to get SPI support so we can enable module loading.  That is for another day.
The 1st task will be to get everything initialized, and try to profile the mixer code.
Currently the code jus","This is going to be a test of using QEMU to run STM32 code in a controlled environment to help with debug as well as do profiling.
There is a QEMU branch supporting STM32 here: https://github.com/beckus/qemu_stm32
It can be compiled from source, or used via docker
The STM32 target is somewhat limited (no SPI...limited timer modes) so it won't currently be able to run protocol code unaided, but I'm going to experiment with its capabilities in this pull-request.
The best supported board is the Olimex P103 which is an STM32F103RB based board.  That is the same chip in the Devo7e, and it will be too small for a monolithic build.  Likely we'll either need to patch Qemu to support a more capable chip (like the 'VC' variant used in the devo8) or we'll need to get SPI support so we can enable module loading.  That is for another day.
The 1st task will be to get everything initialized, and try to profile the mixer code.
Currently the code jus",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,562,2019-01-09T03:07:47Z,,2019-01-12T18:46:45Z,OPEN,False,1112,1,20,https://github.com/PhracturedBlue,Enable qemu target for STM32 emulation,3,[],https://github.com/DeviationTX/deviation/pull/562,https://github.com/PhracturedBlue,2,https://github.com/DeviationTX/deviation/pull/562#issuecomment-452944573,"This is going to be a test of using QEMU to run STM32 code in a controlled environment to help with debug as well as do profiling.
There is a QEMU branch supporting STM32 here: https://github.com/beckus/qemu_stm32
It can be compiled from source, or used via docker
The STM32 target is somewhat limited (no SPI...limited timer modes) so it won't currently be able to run protocol code unaided, but I'm going to experiment with its capabilities in this pull-request.
The best supported board is the Olimex P103 which is an STM32F103RB based board.  That is the same chip in the Devo7e, and it will be too small for a monolithic build.  Likely we'll either need to patch Qemu to support a more capable chip (like the 'VC' variant used in the devo8) or we'll need to get SPI support so we can enable module loading.  That is for another day.
The 1st task will be to get everything initialized, and try to profile the mixer code.
Currently the code jus","On the plus side, I can connect gdb to the qemu image, and trace it just fine.  On the downside QEMU doesn't actually have profiler support.  the 4.9 or newer embedded-gcc builds (I'm using 8-2019q4), come with python support for gdb.  using this I can generate a full call-trace by single-stepping through the entire program.  It is very slow, but it does work.  I can also use this to map back to the current function as well so I can sot-of create a rudimentary profiler.  keeping track of function calls and returns is theoretically possible, but I'm not sure how well it will work.  I'm not sure how much more effort I want to put in this direction.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,562,2019-01-09T03:07:47Z,,2019-01-12T18:46:45Z,OPEN,False,1112,1,20,https://github.com/PhracturedBlue,Enable qemu target for STM32 emulation,3,[],https://github.com/DeviationTX/deviation/pull/562,https://github.com/PhracturedBlue,3,https://github.com/DeviationTX/deviation/pull/562#issuecomment-452956691,"This is going to be a test of using QEMU to run STM32 code in a controlled environment to help with debug as well as do profiling.
There is a QEMU branch supporting STM32 here: https://github.com/beckus/qemu_stm32
It can be compiled from source, or used via docker
The STM32 target is somewhat limited (no SPI...limited timer modes) so it won't currently be able to run protocol code unaided, but I'm going to experiment with its capabilities in this pull-request.
The best supported board is the Olimex P103 which is an STM32F103RB based board.  That is the same chip in the Devo7e, and it will be too small for a monolithic build.  Likely we'll either need to patch Qemu to support a more capable chip (like the 'VC' variant used in the devo8) or we'll need to get SPI support so we can enable module loading.  That is for another day.
The 1st task will be to get everything initialized, and try to profile the mixer code.
Currently the code jus","well...I did some more work, and it is starting to be useful:
Here is the log for a single 'replace' mixer run through qemu:
    MIXER_CalcChannels 0x8002784 (ex:671 inc:6377)
      CLOCK_getms 0x8001324 (ex:3 inc:3)
      MIXER_MapChannel 0x80023ac (ex:243 inc:243)
      CHAN_ReadInput 0x80011e8 (ex:584 inc:946)
        CHAN_ReadRawInput 0x80010c4 (ex:305 inc:362)
          gpio_port_read 0x8002c22 (ex:57 inc:57)
      MIXER_EvalMixers 0x80025c0 (ex:179 inc:224)
        MIXER_ApplyMixer 0x80024a4 (ex:34 inc:45)
          CURVE_Evaluate 0x8002294 (ex:11 inc:11)
      MIXER_GetChannel 0x8002714 (ex:224 inc:4290)
        MIXER_ApplyLimits 0x8002604 (ex:946 inc:4066)
          get_trim 0x8002470 (ex:2976 inc:3120)
            MIXER_MapChannel 0x80023ac (ex:144 inc:144)

'ex' is the number of exclusive instructions (instructions executed directly in this function).  'inc' is the number of inclusive instructions (instructions executed in the current procedure and all its children).  May still be buggy, but it seems to be working more or less",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,562,2019-01-09T03:07:47Z,,2019-01-12T18:46:45Z,OPEN,False,1112,1,20,https://github.com/PhracturedBlue,Enable qemu target for STM32 emulation,3,[],https://github.com/DeviationTX/deviation/pull/562,https://github.com/PhracturedBlue,4,https://github.com/DeviationTX/deviation/pull/562#issuecomment-452964840,"This is going to be a test of using QEMU to run STM32 code in a controlled environment to help with debug as well as do profiling.
There is a QEMU branch supporting STM32 here: https://github.com/beckus/qemu_stm32
It can be compiled from source, or used via docker
The STM32 target is somewhat limited (no SPI...limited timer modes) so it won't currently be able to run protocol code unaided, but I'm going to experiment with its capabilities in this pull-request.
The best supported board is the Olimex P103 which is an STM32F103RB based board.  That is the same chip in the Devo7e, and it will be too small for a monolithic build.  Likely we'll either need to patch Qemu to support a more capable chip (like the 'VC' variant used in the devo8) or we'll need to get SPI support so we can enable module loading.  That is for another day.
The 1st task will be to get everything initialized, and try to profile the mixer code.
Currently the code jus","Difference between curve options:
224 instructions per mixer for no curve
353 instructions per mixer when using a smoothed 13-point curve
13 point smooth
None 0x00 (ex:672 inc:6507)
  CLOCK_getms 0x8001364 (ex:3 inc:3)
  MIXER_MapChannel 0x80023ec (ex:243 inc:243)
  CHAN_ReadInput 0x8001228 (ex:584 inc:946)
    CHAN_ReadRawInput 0x8001104 (ex:305 inc:362)
      gpio_port_read 0x8002c62 (ex:57 inc:57)
  MIXER_EvalMixers 0x8002600 (ex:179 inc:353)
    MIXER_ApplyMixer 0x80024e4 (ex:34 inc:174)
      CURVE_Evaluate 0x80022d4 (ex:101 inc:140)
        compute_tangent 0x800202c (ex:39 inc:39)
  MIXER_GetChannel 0x8002754 (ex:224 inc:4290)
    MIXER_ApplyLimits 0x8002644 (ex:946 inc:4066)
      get_trim 0x80024b0 (ex:2976 inc:3120)
        MIXER_MapChannel 0x80023ec (ex:144 inc:144)

13 point interpolated
None 0x00 (ex:672 inc:6422)
  CLOCK_getms 0x8001364 (ex:3 inc:3)
  MIXER_MapChannel 0x80023ec (ex:243 inc:243)
  CHAN_ReadInput 0x8001228 (ex:584 inc:946)
    CHAN_ReadRawInput 0x8001104 (ex:305 inc:362)
      gpio_port_read 0x8002c62 (ex:57 inc:57)
  MIXER_EvalMixers 0x8002600 (ex:179 inc:268)
    MIXER_ApplyMixer 0x80024e4 (ex:34 inc:89)
      CURVE_Evaluate 0x80022d4 (ex:55 inc:55)
  MIXER_GetChannel 0x8002754 (ex:224 inc:4290)
    MIXER_ApplyLimits 0x8002644 (ex:946 inc:4066)
      get_trim 0x80024b0 (ex:2976 inc:3120)
        MIXER_MapChannel 0x80023ec (ex:144 inc:144)

expo
None 0x00 (ex:672 inc:6415)
  CLOCK_getms 0x800135c (ex:3 inc:3)
  MIXER_MapChannel 0x80023e4 (ex:243 inc:243)
  CHAN_ReadInput 0x8001220 (ex:584 inc:946)
    CHAN_ReadRawInput 0x80010fc (ex:305 inc:362)
      gpio_port_read 0x8002c5a (ex:57 inc:57)
  MIXER_EvalMixers 0x80025f8 (ex:179 inc:261)
    MIXER_ApplyMixer 0x80024dc (ex:34 inc:82)
      CURVE_Evaluate 0x80022cc (ex:35 inc:48)
        expou 0x8002214 (ex:13 inc:13)
  MIXER_GetChannel 0x800274c (ex:224 inc:4290)
    MIXER_ApplyLimits 0x800263c (ex:946 inc:4066)
      get_trim 0x80024a8 (ex:2976 inc:3120)
        MIXER_MapChannel 0x80023e4 (ex:144 inc:144)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,562,2019-01-09T03:07:47Z,,2019-01-12T18:46:45Z,OPEN,False,1112,1,20,https://github.com/PhracturedBlue,Enable qemu target for STM32 emulation,3,[],https://github.com/DeviationTX/deviation/pull/562,https://github.com/howard0su,5,https://github.com/DeviationTX/deviation/pull/562#issuecomment-452970512,"This is going to be a test of using QEMU to run STM32 code in a controlled environment to help with debug as well as do profiling.
There is a QEMU branch supporting STM32 here: https://github.com/beckus/qemu_stm32
It can be compiled from source, or used via docker
The STM32 target is somewhat limited (no SPI...limited timer modes) so it won't currently be able to run protocol code unaided, but I'm going to experiment with its capabilities in this pull-request.
The best supported board is the Olimex P103 which is an STM32F103RB based board.  That is the same chip in the Devo7e, and it will be too small for a monolithic build.  Likely we'll either need to patch Qemu to support a more capable chip (like the 'VC' variant used in the devo8) or we'll need to get SPI support so we can enable module loading.  That is for another day.
The 1st task will be to get everything initialized, and try to profile the mixer code.
Currently the code jus",How can I map to the time from instruction #? look like there is no direct mapping between.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,562,2019-01-09T03:07:47Z,,2019-01-12T18:46:45Z,OPEN,False,1112,1,20,https://github.com/PhracturedBlue,Enable qemu target for STM32 emulation,3,[],https://github.com/DeviationTX/deviation/pull/562,https://github.com/PhracturedBlue,6,https://github.com/DeviationTX/deviation/pull/562#issuecomment-453092144,"This is going to be a test of using QEMU to run STM32 code in a controlled environment to help with debug as well as do profiling.
There is a QEMU branch supporting STM32 here: https://github.com/beckus/qemu_stm32
It can be compiled from source, or used via docker
The STM32 target is somewhat limited (no SPI...limited timer modes) so it won't currently be able to run protocol code unaided, but I'm going to experiment with its capabilities in this pull-request.
The best supported board is the Olimex P103 which is an STM32F103RB based board.  That is the same chip in the Devo7e, and it will be too small for a monolithic build.  Likely we'll either need to patch Qemu to support a more capable chip (like the 'VC' variant used in the devo8) or we'll need to get SPI support so we can enable module loading.  That is for another day.
The 1st task will be to get everything initialized, and try to profile the mixer code.
Currently the code jus","It isn't working properly yet (maybe buggy in QEMU, I dunno yet), but you can query the systick timer (
0xE000E018) which should count-down at 8MHz on real hardware.  I am currently seeing that it is taking ~3500 systick cycles per instruction on the emulator which makes no sense to me.  I haven't had time to debug.  Most commands take a single cycle (@systick frequency). load/store and 32bit multiply generally take 2.  divide, jump branch and 64bit multiply take more.
--",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,562,2019-01-09T03:07:47Z,,2019-01-12T18:46:45Z,OPEN,False,1112,1,20,https://github.com/PhracturedBlue,Enable qemu target for STM32 emulation,3,[],https://github.com/DeviationTX/deviation/pull/562,https://github.com/PhracturedBlue,7,https://github.com/DeviationTX/deviation/pull/562#issuecomment-453771687,"This is going to be a test of using QEMU to run STM32 code in a controlled environment to help with debug as well as do profiling.
There is a QEMU branch supporting STM32 here: https://github.com/beckus/qemu_stm32
It can be compiled from source, or used via docker
The STM32 target is somewhat limited (no SPI...limited timer modes) so it won't currently be able to run protocol code unaided, but I'm going to experiment with its capabilities in this pull-request.
The best supported board is the Olimex P103 which is an STM32F103RB based board.  That is the same chip in the Devo7e, and it will be too small for a monolithic build.  Likely we'll either need to patch Qemu to support a more capable chip (like the 'VC' variant used in the devo8) or we'll need to get SPI support so we can enable module loading.  That is for another day.
The 1st task will be to get everything initialized, and try to profile the mixer code.
Currently the code jus","After a lot of testing, I've concuded qemu does not accurately model the systick timer with regards to HCLK.  This may note even be possible given that I'm note sure the details of pipeline stalling are even known.  But currently systick cannot be reliably used to determine execution time in qemu.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,564,2019-01-09T06:38:51Z,2019-02-09T13:04:32Z,2019-02-11T00:15:49Z,MERGED,True,31,0,3,https://github.com/howard0su,Add LTO build support and enable LTO on devo7e by default,12,[],https://github.com/DeviationTX/deviation/pull/564,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/564,"Add -flto and -fwhole-program to build
Make sure all ISR compiled with no-lto and add used attribute
Add a file specific CFLAGS option so that we can add compile option for certain file. this is also useful to enable profiling for certain file via adding file specific flag -pg.
Parse the localize string from elf file instead of .o files. This is anyway good thing as link can also optmized out some strings.","Add -flto and -fwhole-program to build
Make sure all ISR compiled with no-lto and add used attribute
Add a file specific CFLAGS option so that we can add compile option for certain file. this is also useful to enable profiling for certain file via adding file specific flag -pg.
Parse the localize string from elf file instead of .o files. This is anyway good thing as link can also optmized out some strings.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,564,2019-01-09T06:38:51Z,2019-02-09T13:04:32Z,2019-02-11T00:15:49Z,MERGED,True,31,0,3,https://github.com/howard0su,Add LTO build support and enable LTO on devo7e by default,12,[],https://github.com/DeviationTX/deviation/pull/564,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/564#issuecomment-452588476,"Add -flto and -fwhole-program to build
Make sure all ISR compiled with no-lto and add used attribute
Add a file specific CFLAGS option so that we can add compile option for certain file. this is also useful to enable profiling for certain file via adding file specific flag -pg.
Parse the localize string from elf file instead of .o files. This is anyway good thing as link can also optmized out some strings.",verified in devof12e. The current old compiler cannot work. At least gcc-8.2 produce the good firmware which I can boot up.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,564,2019-01-09T06:38:51Z,2019-02-09T13:04:32Z,2019-02-11T00:15:49Z,MERGED,True,31,0,3,https://github.com/howard0su,Add LTO build support and enable LTO on devo7e by default,12,[],https://github.com/DeviationTX/deviation/pull/564,https://github.com/hexfet,3,https://github.com/DeviationTX/deviation/pull/564#issuecomment-452946545,"Add -flto and -fwhole-program to build
Make sure all ISR compiled with no-lto and add used attribute
Add a file specific CFLAGS option so that we can add compile option for certain file. this is also useful to enable profiling for certain file via adding file specific flag -pg.
Parse the localize string from elf file instead of .o files. This is anyway good thing as link can also optmized out some strings.","Testing on t8sg v2 plus:

build this branch with current docker, fails to boot
build this branch with new gcc, fails to boot (errors_lto8.2.txt)
build master with new gcc, fails to boot (errors_master_gcc7.txt)

New gcc is
$ arm-none-eabi-gcc --version
arm-none-eabi-gcc (GNU Tools for Arm Embedded Processors 7-2018-q3-update) 7.3.1 20180622 (release) [ARM/embedded-7-branch revision 261907]",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,564,2019-01-09T06:38:51Z,2019-02-09T13:04:32Z,2019-02-11T00:15:49Z,MERGED,True,31,0,3,https://github.com/howard0su,Add LTO build support and enable LTO on devo7e by default,12,[],https://github.com/DeviationTX/deviation/pull/564,https://github.com/howard0su,4,https://github.com/DeviationTX/deviation/pull/564#issuecomment-452955520,"Add -flto and -fwhole-program to build
Make sure all ISR compiled with no-lto and add used attribute
Add a file specific CFLAGS option so that we can add compile option for certain file. this is also useful to enable profiling for certain file via adding file specific flag -pg.
Parse the localize string from elf file instead of .o files. This is anyway good thing as link can also optmized out some strings.","Sorry, I didn't make it clear. The new compiler stands for GCC-8.2 which is latest from ARM. You can download it from here for all platforms:
https://developer.arm.com/open-source/gnu-toolchain/gnu-rm/downloads",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,564,2019-01-09T06:38:51Z,2019-02-09T13:04:32Z,2019-02-11T00:15:49Z,MERGED,True,31,0,3,https://github.com/howard0su,Add LTO build support and enable LTO on devo7e by default,12,[],https://github.com/DeviationTX/deviation/pull/564,https://github.com/hexfet,5,https://github.com/DeviationTX/deviation/pull/564#issuecomment-452962258,"Add -flto and -fwhole-program to build
Make sure all ISR compiled with no-lto and add used attribute
Add a file specific CFLAGS option so that we can add compile option for certain file. this is also useful to enable profiling for certain file via adding file specific flag -pg.
Parse the localize string from elf file instead of .o files. This is anyway good thing as link can also optmized out some strings.","Changed to version $ arm-none-eabi-gcc --version
arm-none-eabi-gcc (GNU Tools for Arm Embedded Processors 8-2018-q4-major) 8.2.1 20181213 (release) [gcc-8-branch revision 267074]
Same general result, but the errors files are slightly different.  In all cases the faults are in file system code.
errors_master_gcc8.2.txt
errors_lto8.2 (gcc8.2).txt",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,564,2019-01-09T06:38:51Z,2019-02-09T13:04:32Z,2019-02-11T00:15:49Z,MERGED,True,31,0,3,https://github.com/howard0su,Add LTO build support and enable LTO on devo7e by default,12,[],https://github.com/DeviationTX/deviation/pull/564,https://github.com/PhracturedBlue,6,https://github.com/DeviationTX/deviation/pull/564#issuecomment-452966051,"Add -flto and -fwhole-program to build
Make sure all ISR compiled with no-lto and add used attribute
Add a file specific CFLAGS option so that we can add compile option for certain file. this is also useful to enable profiling for certain file via adding file specific flag -pg.
Parse the localize string from elf file instead of .o files. This is anyway good thing as link can also optmized out some strings.","you generally need to either provide the elf or list file that goes with your error file since even using the same compiler, I've had slightly different builds on different machines (who knows why)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,564,2019-01-09T06:38:51Z,2019-02-09T13:04:32Z,2019-02-11T00:15:49Z,MERGED,True,31,0,3,https://github.com/howard0su,Add LTO build support and enable LTO on devo7e by default,12,[],https://github.com/DeviationTX/deviation/pull/564,https://github.com/howard0su,7,https://github.com/DeviationTX/deviation/pull/564#issuecomment-452966189,"Add -flto and -fwhole-program to build
Make sure all ISR compiled with no-lto and add used attribute
Add a file specific CFLAGS option so that we can add compile option for certain file. this is also useful to enable profiling for certain file via adding file specific flag -pg.
Parse the localize string from elf file instead of .o files. This is anyway good thing as link can also optmized out some strings.",Do u need flash old build to get errors.txt? Which is a sign if usb and file system works?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,564,2019-01-09T06:38:51Z,2019-02-09T13:04:32Z,2019-02-11T00:15:49Z,MERGED,True,31,0,3,https://github.com/howard0su,Add LTO build support and enable LTO on devo7e by default,12,[],https://github.com/DeviationTX/deviation/pull/564,https://github.com/PhracturedBlue,8,https://github.com/DeviationTX/deviation/pull/564#issuecomment-452969215,"Add -flto and -fwhole-program to build
Make sure all ISR compiled with no-lto and add used attribute
Add a file specific CFLAGS option so that we can add compile option for certain file. this is also useful to enable profiling for certain file via adding file specific flag -pg.
Parse the localize string from elf file instead of .o files. This is anyway good thing as link can also optmized out some strings.",errors.txt will generally only be written on a crash (resulting in a hang or boot-loop).  I don't remember what happens if you get a crash before the filesystem is initiallized.  Most likely you need a serial port hooked up.  It has been quite a while since I've had to do debug.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,564,2019-01-09T06:38:51Z,2019-02-09T13:04:32Z,2019-02-11T00:15:49Z,MERGED,True,31,0,3,https://github.com/howard0su,Add LTO build support and enable LTO on devo7e by default,12,[],https://github.com/DeviationTX/deviation/pull/564,https://github.com/howard0su,9,https://github.com/DeviationTX/deviation/pull/564#issuecomment-452969648,"Add -flto and -fwhole-program to build
Make sure all ISR compiled with no-lto and add used attribute
Add a file specific CFLAGS option so that we can add compile option for certain file. this is also useful to enable profiling for certain file via adding file specific flag -pg.
Parse the localize string from elf file instead of .o files. This is anyway good thing as link can also optmized out some strings.","If we have error.txt, looks like filesystem is up. then the issue should be able to debug via printf via trainer port. (not sure if t8sg has it.)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,564,2019-01-09T06:38:51Z,2019-02-09T13:04:32Z,2019-02-11T00:15:49Z,MERGED,True,31,0,3,https://github.com/howard0su,Add LTO build support and enable LTO on devo7e by default,12,[],https://github.com/DeviationTX/deviation/pull/564,https://github.com/howard0su,10,https://github.com/DeviationTX/deviation/pull/564#issuecomment-452983662,"Add -flto and -fwhole-program to build
Make sure all ISR compiled with no-lto and add used attribute
Add a file specific CFLAGS option so that we can add compile option for certain file. this is also useful to enable profiling for certain file via adding file specific flag -pg.
Parse the localize string from elf file instead of .o files. This is anyway good thing as link can also optmized out some strings.","I got the same crash from another ppl. the crash is inside pf_open:
080338e4 <pf_open>:
{
80338e4:   b510        push    {r4, lr}
FATFS *fs = FatFs;
80338e6:   4b18        ldr r3, [pc, #96]   ; (8033948 <pf_open+0x64>)
{
80338e8:   b090        sub sp, #64 ; 0x40
FATFS fs = FatFs;
80338ea:   681c        ldr r4, [r3, #0]
{
80338ec:   4602        mov r2, r0
if (!fs)                        / Check file system /
80338ee:   b334        cbz r4, 803393e <pf_open+0x5a>
fs->flag = 0;
80338f0:   2300        movs    r3, #0
res = follow_path(&dj, dir, path);  / Follow the file path /
80338f2:   a908        add r1, sp, #32
fs->flag = 0;
80338f4:   7063        strb    r3, [r4, #1]
res = follow_path(&dj, dir, path);  / Follow the file path /
80338f6:   a804        add r0, sp, #16
dj.fn = sp;
80338f8:   ab01        add r3, sp, #4
80338fa:   9305        str r3, [sp, #20]
res = follow_path(&dj, dir, path);  / Follow the file path /
80338fc:   f7ff ff62   bl  80337c4 <follow_path.lto_priv.894>
if (res != FR_OK) return res;       / Follow failed /
8033900:   b9d8        cbnz    r0, 803393a <pf_open+0x56>
if (!dir[0] || (dir[DIR_Attr] & AM_DIR))    / It is a directory /
8033902:   f89d 3020   ldrb.w  r3, [sp, #32]
8033906:   b1e3        cbz r3, 8033942 <pf_open+0x5e>
8033908:   f89d 302b   ldrb.w  r3, [sp, #43]   ; 0x2b
803390c:   06db        lsls    r3, r3, #27
803390e:   d418        bmi.n   8033942 <pf_open+0x5e>
fs->dir_entry = dj.sect * SECTOR_SIZE + (WORD)((dj.index % DIR_ENTRIES_PER_SECTOR) * 32);
8033910:   f8bd 3010   ldrh.w  r3, [sp, #16]
8033914:   f003 027f   and.w   r2, r3, #127    ; 0x7f
8033918:   9b07        ldr r3, [sp, #28]
803391a:   031b        lsls    r3, r3, #12
803391c:   eb03 1342   add.w   r3, r3, r2, lsl #5
8033920:   6263        str r3, [r4, #36]   ; 0x24
fs->org_clust = LD_CLUST(dir);          / File start cluster /
8033922:   f89d 203b   ldrb.w  r2, [sp, #59]   ; 0x3b
8033926:   f89d 303a   ldrb.w  r3, [sp, #58]   ; 0x3a
803392a:   ea43 2302   orr.w   r3, r3, r2, lsl #8
803392e:   83a3        strh    r3, [r4, #28]
fs->fsize = LD_DWORD(dir+DIR_FileSize); / File size /
8033930:   9b0f        ldr r3, [sp, #60]   ; 0x3c
fs->fptr = 0;                       / File pointer */
8033932:   e9c4 0305   strd    r0, r3, [r4, #20]  <=====
8033948:   200093f8    .word   0x200093f8
r4 is the point to read DatalogFS.
.bss.FatFs.lto_priv.883
0x00000000200093f8        0x4 /tmp/ccAkVWyR.ltrans6.ltrans.o
.bss.DatalogFAT
0x00000000200093cf       0x28 /tmp/ccAkVWyR.ltrans6.ltrans.o
In this case, DatalogFAT is not aligned. and unfortunately, strd is not support unaligned write. So hard fault happened.
This should related to alias definition of FatFS. some firmware happened the FontFAT or DatalogFAT is aligned, then this bug will not be triggered.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,564,2019-01-09T06:38:51Z,2019-02-09T13:04:32Z,2019-02-11T00:15:49Z,MERGED,True,31,0,3,https://github.com/howard0su,Add LTO build support and enable LTO on devo7e by default,12,[],https://github.com/DeviationTX/deviation/pull/564,https://github.com/howard0su,11,https://github.com/DeviationTX/deviation/pull/564#issuecomment-453000255,"Add -flto and -fwhole-program to build
Make sure all ISR compiled with no-lto and add used attribute
Add a file specific CFLAGS option so that we can add compile option for certain file. this is also useful to enable profiling for certain file via adding file specific flag -pg.
Parse the localize string from elf file instead of .o files. This is anyway good thing as link can also optmized out some strings.","@hexfet please try again. if you want to try non-lto build, port latest 2 changes to master.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,564,2019-01-09T06:38:51Z,2019-02-09T13:04:32Z,2019-02-11T00:15:49Z,MERGED,True,31,0,3,https://github.com/howard0su,Add LTO build support and enable LTO on devo7e by default,12,[],https://github.com/DeviationTX/deviation/pull/564,https://github.com/howard0su,12,https://github.com/DeviationTX/deviation/pull/564#issuecomment-453027080,"Add -flto and -fwhole-program to build
Make sure all ISR compiled with no-lto and add used attribute
Add a file specific CFLAGS option so that we can add compile option for certain file. this is also useful to enable profiling for certain file via adding file specific flag -pg.
Parse the localize string from elf file instead of .o files. This is anyway good thing as link can also optmized out some strings.","i updated gcc-8 PR #480 . Verified it works now on devo12 and devof12e. For LTO build, it cause watchdog timeout, need work on that next.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,564,2019-01-09T06:38:51Z,2019-02-09T13:04:32Z,2019-02-11T00:15:49Z,MERGED,True,31,0,3,https://github.com/howard0su,Add LTO build support and enable LTO on devo7e by default,12,[],https://github.com/DeviationTX/deviation/pull/564,https://github.com/howard0su,13,https://github.com/DeviationTX/deviation/pull/564#issuecomment-453093791,"Add -flto and -fwhole-program to build
Make sure all ISR compiled with no-lto and add used attribute
Add a file specific CFLAGS option so that we can add compile option for certain file. this is also useful to enable profiling for certain file via adding file specific flag -pg.
Parse the localize string from elf file instead of .o files. This is anyway good thing as link can also optmized out some strings.","tested on:


 devof12e


 devo10


 devo12


 devo7e


 devo8


 t8sg",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,564,2019-01-09T06:38:51Z,2019-02-09T13:04:32Z,2019-02-11T00:15:49Z,MERGED,True,31,0,3,https://github.com/howard0su,Add LTO build support and enable LTO on devo7e by default,12,[],https://github.com/DeviationTX/deviation/pull/564,https://github.com/howard0su,14,https://github.com/DeviationTX/deviation/pull/564#issuecomment-453095758,"Add -flto and -fwhole-program to build
Make sure all ISR compiled with no-lto and add used attribute
Add a file specific CFLAGS option so that we can add compile option for certain file. this is also useful to enable profiling for certain file via adding file specific flag -pg.
Parse the localize string from elf file instead of .o files. This is anyway good thing as link can also optmized out some strings.","what's the purpose? I don't think using alias is a good practice.
…
On Thu, Jan 10, 2019 at 9:25 PM PhracturedBlue ***@***.***> wrote:
 ***@***.**** commented on this pull request.
 ------------------------------

 In src/common.h
 <#564 (comment)>:

 > @@ -29,11 +29,6 @@ typedef uint64_t u64;
  #include ""target.h""
  #include ""std.h""

 -//FATFS is defined by target_defs.h
 -struct FAT {
 -    char inaccessible[FATSTRUCT_SIZE];
 -};
 -

 Can't you just use *attribute* ((aligned (4)))? I purposefully wanted the
 FAT fs to be opaque t the rest of the code.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#564 (review)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzROUljZwsGklPSMrtu16RjWYgcq2lks5vBz83gaJpZM4Z23MC>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,564,2019-01-09T06:38:51Z,2019-02-09T13:04:32Z,2019-02-11T00:15:49Z,MERGED,True,31,0,3,https://github.com/howard0su,Add LTO build support and enable LTO on devo7e by default,12,[],https://github.com/DeviationTX/deviation/pull/564,https://github.com/PhracturedBlue,15,https://github.com/DeviationTX/deviation/pull/564#issuecomment-453121739,"Add -flto and -fwhole-program to build
Make sure all ISR compiled with no-lto and add used attribute
Add a file specific CFLAGS option so that we can add compile option for certain file. this is also useful to enable profiling for certain file via adding file specific flag -pg.
Parse the localize string from elf file instead of .o files. This is anyway good thing as link can also optmized out some strings.","By the way, while it doesn't have to be done until the patch is ready to merge, I'd like to see each of the bug fixes become their own pull-requests and get merged separately before the LTO is merged.  I am still wary of the LTO, and want to be able to revert it if necessary, but the other patches should be able to stand on their own.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,564,2019-01-09T06:38:51Z,2019-02-09T13:04:32Z,2019-02-11T00:15:49Z,MERGED,True,31,0,3,https://github.com/howard0su,Add LTO build support and enable LTO on devo7e by default,12,[],https://github.com/DeviationTX/deviation/pull/564,https://github.com/hexfet,16,https://github.com/DeviationTX/deviation/pull/564#issuecomment-453138786,"Add -flto and -fwhole-program to build
Make sure all ISR compiled with no-lto and add used attribute
Add a file specific CFLAGS option so that we can add compile option for certain file. this is also useful to enable profiling for certain file via adding file specific flag -pg.
Parse the localize string from elf file instead of .o files. This is anyway good thing as link can also optmized out some strings.","Still no joy with t8sg v2 plus build of this branch.  Info in the zip file.  The first time I installed it did boot and things seemed to work correctly until I tried Loading a new model.  Clicking the Load button did nothing, then a few seconds later the display locked.  Subsequent power-ons never booted, even after another fresh install.  Booting into USB mode worked and the filesystem had no errors in Windows.
T8SGv2-Plus.zip",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,564,2019-01-09T06:38:51Z,2019-02-09T13:04:32Z,2019-02-11T00:15:49Z,MERGED,True,31,0,3,https://github.com/howard0su,Add LTO build support and enable LTO on devo7e by default,12,[],https://github.com/DeviationTX/deviation/pull/564,https://github.com/howard0su,17,https://github.com/DeviationTX/deviation/pull/564#issuecomment-453304714,"Add -flto and -fwhole-program to build
Make sure all ISR compiled with no-lto and add used attribute
Add a file specific CFLAGS option so that we can add compile option for certain file. this is also useful to enable profiling for certain file via adding file specific flag -pg.
Parse the localize string from elf file instead of .o files. This is anyway good thing as link can also optmized out some strings.",@hexfet you also hit the watchdog issue but in a different protocol. looks like the same cause as the one I am facing now in devo protocol. I am working on it but so far no update I can give.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,564,2019-01-09T06:38:51Z,2019-02-09T13:04:32Z,2019-02-11T00:15:49Z,MERGED,True,31,0,3,https://github.com/howard0su,Add LTO build support and enable LTO on devo7e by default,12,[],https://github.com/DeviationTX/deviation/pull/564,https://github.com/hexfet,18,https://github.com/DeviationTX/deviation/pull/564#issuecomment-454272955,"Add -flto and -fwhole-program to build
Make sure all ISR compiled with no-lto and add used attribute
Add a file specific CFLAGS option so that we can add compile option for certain file. this is also useful to enable profiling for certain file via adding file specific flag -pg.
Parse the localize string from elf file instead of .o files. This is anyway good thing as link can also optmized out some strings.","@howard0su I rebased this branch to master in my repo.  The devo8 and devo10 build correctly, but t8sg_v2_plus has the error below.  Ran out of time today for runtime testing.
+ Building 't8sg_v2_plus.elf'
+ Optimizing placement and re-linking
/usr/lib/gcc-arm-none-eabi-8-2018-q4-major/bin/../lib/gcc/arm-none-eabi/8.2.1/../../../../arm-none-eabi/bin/ld: cannot find /tmp/ccP6nYDu.ltrans6.ltrans.o
collect2: error: ld returned 1 exit status
target/common/devo/Makefile.inc:91: recipe for target 't8sg_v2_plus.bin' failed",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,564,2019-01-09T06:38:51Z,2019-02-09T13:04:32Z,2019-02-11T00:15:49Z,MERGED,True,31,0,3,https://github.com/howard0su,Add LTO build support and enable LTO on devo7e by default,12,[],https://github.com/DeviationTX/deviation/pull/564,https://github.com/howard0su,19,https://github.com/DeviationTX/deviation/pull/564#issuecomment-454288394,"Add -flto and -fwhole-program to build
Make sure all ISR compiled with no-lto and add used attribute
Add a file specific CFLAGS option so that we can add compile option for certain file. this is also useful to enable profiling for certain file via adding file specific flag -pg.
Parse the localize string from elf file instead of .o files. This is anyway good thing as link can also optmized out some strings.","thank you for testing. I need fix repack_ld.pl since LTO functions are not
eligible to move above _crc, as it doesn't have the right name (which is
the error you see).
…
On Tue, Jan 15, 2019 at 1:44 PM hexfet ***@***.***> wrote:
 @howard0su <https://github.com/howard0su> I rebased this branch to master
 in my repo <https://github.com/hexfet/deviation/tree/lto8.2>. The devo8
 and devo10 build correctly, but t8sg_v2_plus has the error below. Ran out
 of time today for runtime testing.

 + Building 't8sg_v2_plus.elf'
 + Optimizing placement and re-linking
 /usr/lib/gcc-arm-none-eabi-8-2018-q4-major/bin/../lib/gcc/arm-none-eabi/8.2.1/../../../../arm-none-eabi/bin/ld: cannot find /tmp/ccP6nYDu.ltrans6.ltrans.o
 collect2: error: ld returned 1 exit status
 target/common/devo/Makefile.inc:91: recipe for target 't8sg_v2_plus.bin' failed

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#564 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRHNMr5tfBMeB0rwsci0LG2P-WOtjks5vDWrPgaJpZM4Z23MC>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,564,2019-01-09T06:38:51Z,2019-02-09T13:04:32Z,2019-02-11T00:15:49Z,MERGED,True,31,0,3,https://github.com/howard0su,Add LTO build support and enable LTO on devo7e by default,12,[],https://github.com/DeviationTX/deviation/pull/564,https://github.com/howard0su,20,https://github.com/DeviationTX/deviation/pull/564#issuecomment-454301470,"Add -flto and -fwhole-program to build
Make sure all ISR compiled with no-lto and add used attribute
Add a file specific CFLAGS option so that we can add compile option for certain file. this is also useful to enable profiling for certain file via adding file specific flag -pg.
Parse the localize string from elf file instead of .o files. This is anyway good thing as link can also optmized out some strings.","I tested the bits on f12e and 7e. so far all works fine (i need revert my latest change to do another round to figure out watchdog issue.)
I verified all UART related protocols like PPM/SBUS/CSRF works fine on f12e.
PPM works fine on devo7e. However CSRF re-init doesn't work. I have to restart Tx after I switch to CSRF. SBUS is missing in this branch as it is not added to protocol/Makfile.inc. @hexfet maybe you want to check it out.
This at least make sure the issue #484 should be fixed with the change to split out all ISR related code.
My next step is pull out all the changes related to _isr change and create a separate PR and merge to master. while keeping this PR open to investigate watchdog issue. also let master peace for a while to stabilize after new lib import.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,564,2019-01-09T06:38:51Z,2019-02-09T13:04:32Z,2019-02-11T00:15:49Z,MERGED,True,31,0,3,https://github.com/howard0su,Add LTO build support and enable LTO on devo7e by default,12,[],https://github.com/DeviationTX/deviation/pull/564,https://github.com/howard0su,21,https://github.com/DeviationTX/deviation/pull/564#issuecomment-454382802,"Add -flto and -fwhole-program to build
Make sure all ISR compiled with no-lto and add used attribute
Add a file specific CFLAGS option so that we can add compile option for certain file. this is also useful to enable profiling for certain file via adding file specific flag -pg.
Parse the localize string from elf file instead of .o files. This is anyway good thing as link can also optmized out some strings.","I fixed the issue. actual a bug in our usleep code. Our usleep asm() call didn't specify the input parameter instead the assembly code assume the parameter will pass as r0. In LTO build, LTO believe this function didn't take any parameter, so LTO optimize out the input parameter, which results random length of delay.",True,{'THUMBS_UP': ['https://github.com/goebish']}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,564,2019-01-09T06:38:51Z,2019-02-09T13:04:32Z,2019-02-11T00:15:49Z,MERGED,True,31,0,3,https://github.com/howard0su,Add LTO build support and enable LTO on devo7e by default,12,[],https://github.com/DeviationTX/deviation/pull/564,https://github.com/howard0su,22,https://github.com/DeviationTX/deviation/pull/564#issuecomment-455427520,"Add -flto and -fwhole-program to build
Make sure all ISR compiled with no-lto and add used attribute
Add a file specific CFLAGS option so that we can add compile option for certain file. this is also useful to enable profiling for certain file via adding file specific flag -pg.
Parse the localize string from elf file instead of .o files. This is anyway good thing as link can also optmized out some strings.","Need more testing, as I reverted the change to move Delay to usleep. Delay is completely opt out by LTO now. Even the 7 cycles delay is not there anymore.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,564,2019-01-09T06:38:51Z,2019-02-09T13:04:32Z,2019-02-11T00:15:49Z,MERGED,True,31,0,3,https://github.com/howard0su,Add LTO build support and enable LTO on devo7e by default,12,[],https://github.com/DeviationTX/deviation/pull/564,https://github.com/howard0su,23,https://github.com/DeviationTX/deviation/pull/564#issuecomment-455471371,"Add -flto and -fwhole-program to build
Make sure all ISR compiled with no-lto and add used attribute
Add a file specific CFLAGS option so that we can add compile option for certain file. this is also useful to enable profiling for certain file via adding file specific flag -pg.
Parse the localize string from elf file instead of .o files. This is anyway good thing as link can also optmized out some strings.","not sure what's difference, but my local build shows different result as CI:
use devo8 as an example:
master

Copying template files for devo8
ROM: 0x08004000 - 0x0803d4b8 = 229.18kB
RAM: 0x20000000 - 0x20008f74 =  35.86kB

lto8.2

Optimizing placement and re-linking
ROM: 0x08004000 - 0x0803b540 = 221.31kB
RAM: 0x20000000 - 0x20008ee0 =  35.72kB",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,564,2019-01-09T06:38:51Z,2019-02-09T13:04:32Z,2019-02-11T00:15:49Z,MERGED,True,31,0,3,https://github.com/howard0su,Add LTO build support and enable LTO on devo7e by default,12,[],https://github.com/DeviationTX/deviation/pull/564,https://github.com/howard0su,24,https://github.com/DeviationTX/deviation/pull/564#issuecomment-455515022,"Add -flto and -fwhole-program to build
Make sure all ISR compiled with no-lto and add used attribute
Add a file specific CFLAGS option so that we can add compile option for certain file. this is also useful to enable profiling for certain file via adding file specific flag -pg.
Parse the localize string from elf file instead of .o files. This is anyway good thing as link can also optmized out some strings.",devof12e works without delay. Also validated RF works fine.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,564,2019-01-09T06:38:51Z,2019-02-09T13:04:32Z,2019-02-11T00:15:49Z,MERGED,True,31,0,3,https://github.com/howard0su,Add LTO build support and enable LTO on devo7e by default,12,[],https://github.com/DeviationTX/deviation/pull/564,https://github.com/howard0su,25,https://github.com/DeviationTX/deviation/pull/564#issuecomment-456239094,"Add -flto and -fwhole-program to build
Make sure all ISR compiled with no-lto and add used attribute
Add a file specific CFLAGS option so that we can add compile option for certain file. this is also useful to enable profiling for certain file via adding file specific flag -pg.
Parse the localize string from elf file instead of .o files. This is anyway good thing as link can also optmized out some strings.",@hexfet I assume this works fine on your t8sg now after usleep fix?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,564,2019-01-09T06:38:51Z,2019-02-09T13:04:32Z,2019-02-11T00:15:49Z,MERGED,True,31,0,3,https://github.com/howard0su,Add LTO build support and enable LTO on devo7e by default,12,[],https://github.com/DeviationTX/deviation/pull/564,https://github.com/hexfet,26,https://github.com/DeviationTX/deviation/pull/564#issuecomment-456259549,"Add -flto and -fwhole-program to build
Make sure all ISR compiled with no-lto and add used attribute
Add a file specific CFLAGS option so that we can add compile option for certain file. this is also useful to enable profiling for certain file via adding file specific flag -pg.
Parse the localize string from elf file instead of .o files. This is anyway good thing as link can also optmized out some strings.","It seems to mostly work except when the PXX protocol is selected.  After switching to PXX and pressing Bind, the bind dialog never appears and the tx turns off after about a second.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,564,2019-01-09T06:38:51Z,2019-02-09T13:04:32Z,2019-02-11T00:15:49Z,MERGED,True,31,0,3,https://github.com/howard0su,Add LTO build support and enable LTO on devo7e by default,12,[],https://github.com/DeviationTX/deviation/pull/564,https://github.com/howard0su,27,https://github.com/DeviationTX/deviation/pull/564#issuecomment-456260365,"Add -flto and -fwhole-program to build
Make sure all ISR compiled with no-lto and add used attribute
Add a file specific CFLAGS option so that we can add compile option for certain file. this is also useful to enable profiling for certain file via adding file specific flag -pg.
Parse the localize string from elf file instead of .o files. This is anyway good thing as link can also optmized out some strings.","let me test it out. PXX protocol is recently added and should be easy to
track down.
…
On Tue, Jan 22, 2019 at 11:30 AM hexfet ***@***.***> wrote:
 It seems to mostly work except when the PXX protocol is selected. After
 switching to PXX and pressing Bind, the bind dialog never appears and the
 tx turns off after about a second.

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#564 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRKMkjzWl__LHY78LVx0quFjRbZfPks5vFoXEgaJpZM4Z23MC>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,564,2019-01-09T06:38:51Z,2019-02-09T13:04:32Z,2019-02-11T00:15:49Z,MERGED,True,31,0,3,https://github.com/howard0su,Add LTO build support and enable LTO on devo7e by default,12,[],https://github.com/DeviationTX/deviation/pull/564,https://github.com/hexfet,28,https://github.com/DeviationTX/deviation/pull/564#issuecomment-456261324,"Add -flto and -fwhole-program to build
Make sure all ISR compiled with no-lto and add used attribute
Add a file specific CFLAGS option so that we can add compile option for certain file. this is also useful to enable profiling for certain file via adding file specific flag -pg.
Parse the localize string from elf file instead of .o files. This is anyway good thing as link can also optmized out some strings.",Just tried on devo10 and it doesn't fail.  Edit: unless it is receiving telemetry data.  Then the tx resets shortly after receiving a telemetry packet.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,564,2019-01-09T06:38:51Z,2019-02-09T13:04:32Z,2019-02-11T00:15:49Z,MERGED,True,31,0,3,https://github.com/howard0su,Add LTO build support and enable LTO on devo7e by default,12,[],https://github.com/DeviationTX/deviation/pull/564,https://github.com/howard0su,29,https://github.com/DeviationTX/deviation/pull/564#issuecomment-456262797,"Add -flto and -fwhole-program to build
Make sure all ISR compiled with no-lto and add used attribute
Add a file specific CFLAGS option so that we can add compile option for certain file. this is also useful to enable profiling for certain file via adding file specific flag -pg.
Parse the localize string from elf file instead of .o files. This is anyway good thing as link can also optmized out some strings.","are u saying PXX protocol issue is tg8 specific issue?
…
On Tue, Jan 22, 2019 at 11:42 AM hexfet ***@***.***> wrote:
 Just tried on devo10 and it doesn't fail.

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#564 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRPEXV7Uv7C9icoWOZ0GA-Ucl9xpxks5vFoiPgaJpZM4Z23MC>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,564,2019-01-09T06:38:51Z,2019-02-09T13:04:32Z,2019-02-11T00:15:49Z,MERGED,True,31,0,3,https://github.com/howard0su,Add LTO build support and enable LTO on devo7e by default,12,[],https://github.com/DeviationTX/deviation/pull/564,https://github.com/hexfet,30,https://github.com/DeviationTX/deviation/pull/564#issuecomment-456263956,"Add -flto and -fwhole-program to build
Make sure all ISR compiled with no-lto and add used attribute
Add a file specific CFLAGS option so that we can add compile option for certain file. this is also useful to enable profiling for certain file via adding file specific flag -pg.
Parse the localize string from elf file instead of .o files. This is anyway good thing as link can also optmized out some strings.","No, but the symptom is slightly different in the devo10.  It only seems to reset the tx when telemetry is received.
Just tested PXX protocol in master is working fine on both T8+ and devo10.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,564,2019-01-09T06:38:51Z,2019-02-09T13:04:32Z,2019-02-11T00:15:49Z,MERGED,True,31,0,3,https://github.com/howard0su,Add LTO build support and enable LTO on devo7e by default,12,[],https://github.com/DeviationTX/deviation/pull/564,https://github.com/hexfet,31,https://github.com/DeviationTX/deviation/pull/564#issuecomment-456395017,"Add -flto and -fwhole-program to build
Make sure all ISR compiled with no-lto and add used attribute
Add a file specific CFLAGS option so that we can add compile option for certain file. this is also useful to enable profiling for certain file via adding file specific flag -pg.
Parse the localize string from elf file instead of .o files. This is anyway good thing as link can also optmized out some strings.",Likely the issue is in the soft serial code or isrs.  The reset is triggered when telemetry data is received.  Forgot I had the CRSF jumper installed on the T8+.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,564,2019-01-09T06:38:51Z,2019-02-09T13:04:32Z,2019-02-11T00:15:49Z,MERGED,True,31,0,3,https://github.com/howard0su,Add LTO build support and enable LTO on devo7e by default,12,[],https://github.com/DeviationTX/deviation/pull/564,https://github.com/howard0su,32,https://github.com/DeviationTX/deviation/pull/564#issuecomment-456397056,"Add -flto and -fwhole-program to build
Make sure all ISR compiled with no-lto and add used attribute
Add a file specific CFLAGS option so that we can add compile option for certain file. this is also useful to enable profiling for certain file via adding file specific flag -pg.
Parse the localize string from elf file instead of .o files. This is anyway good thing as link can also optmized out some strings.","can u share the build and error.txt when crash? I am still working on some
other stuffs and didn't get time to look at it yet.
…
On Tue, Jan 22, 2019 at 9:15 PM hexfet ***@***.***> wrote:
 Likely the issue is in the soft serial code or isrs. The reset is
 triggered when telemetry data is received. Forgot I had the CRSF jumper
 installed on the T8+.

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#564 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRB3hcLEKLoXxLvOqCTYFWmXmaUVrks5vFw7ugaJpZM4Z23MC>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,564,2019-01-09T06:38:51Z,2019-02-09T13:04:32Z,2019-02-11T00:15:49Z,MERGED,True,31,0,3,https://github.com/howard0su,Add LTO build support and enable LTO on devo7e by default,12,[],https://github.com/DeviationTX/deviation/pull/564,https://github.com/hexfet,33,https://github.com/DeviationTX/deviation/pull/564#issuecomment-456457836,"Add -flto and -fwhole-program to build
Make sure all ISR compiled with no-lto and add used attribute
Add a file specific CFLAGS option so that we can add compile option for certain file. this is also useful to enable profiling for certain file via adding file specific flag -pg.
Parse the localize string from elf file instead of .o files. This is anyway good thing as link can also optmized out some strings.",Nothing is being written to error.txt.  I'll have time to look this week.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,564,2019-01-09T06:38:51Z,2019-02-09T13:04:32Z,2019-02-11T00:15:49Z,MERGED,True,31,0,3,https://github.com/howard0su,Add LTO build support and enable LTO on devo7e by default,12,[],https://github.com/DeviationTX/deviation/pull/564,https://github.com/hexfet,34,https://github.com/DeviationTX/deviation/pull/564#issuecomment-456625884,"Add -flto and -fwhole-program to build
Make sure all ISR compiled with no-lto and add used attribute
Add a file specific CFLAGS option so that we can add compile option for certain file. this is also useful to enable profiling for certain file via adding file specific flag -pg.
Parse the localize string from elf file instead of .o files. This is anyway good thing as link can also optmized out some strings.","Here's a working changeset.  Had to make the soft serial isr file build with -fno-lto, and add the used attribute to the isr functions and all the functions in soft_serial.c.  I guess its not needed in uart.c because some of those functions are called from non-protocol files?
Not sure why the used attribute is needed since these functions should all be used in a non-modular build.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,564,2019-01-09T06:38:51Z,2019-02-09T13:04:32Z,2019-02-11T00:15:49Z,MERGED,True,31,0,3,https://github.com/howard0su,Add LTO build support and enable LTO on devo7e by default,12,[],https://github.com/DeviationTX/deviation/pull/564,https://github.com/howard0su,35,https://github.com/DeviationTX/deviation/pull/564#issuecomment-456638827,"Add -flto and -fwhole-program to build
Make sure all ISR compiled with no-lto and add used attribute
Add a file specific CFLAGS option so that we can add compile option for certain file. this is also useful to enable profiling for certain file via adding file specific flag -pg.
Parse the localize string from elf file instead of .o files. This is anyway good thing as link can also optmized out some strings.","Oh nice. I forgot the compile flag I should fix it.
For used attribute, it is actually a bug in Gcc when handling the symbols referenced by weak reference.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,564,2019-01-09T06:38:51Z,2019-02-09T13:04:32Z,2019-02-11T00:15:49Z,MERGED,True,31,0,3,https://github.com/howard0su,Add LTO build support and enable LTO on devo7e by default,12,[],https://github.com/DeviationTX/deviation/pull/564,https://github.com/howard0su,36,https://github.com/DeviationTX/deviation/pull/564#issuecomment-461790446,"Add -flto and -fwhole-program to build
Make sure all ISR compiled with no-lto and add used attribute
Add a file specific CFLAGS option so that we can add compile option for certain file. this is also useful to enable profiling for certain file via adding file specific flag -pg.
Parse the localize string from elf file instead of .o files. This is anyway good thing as link can also optmized out some strings.",wait for #638 getting in first.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,564,2019-01-09T06:38:51Z,2019-02-09T13:04:32Z,2019-02-11T00:15:49Z,MERGED,True,31,0,3,https://github.com/howard0su,Add LTO build support and enable LTO on devo7e by default,12,[],https://github.com/DeviationTX/deviation/pull/564,https://github.com/howard0su,37,https://github.com/DeviationTX/deviation/pull/564#issuecomment-462004642,"Add -flto and -fwhole-program to build
Make sure all ISR compiled with no-lto and add used attribute
Add a file specific CFLAGS option so that we can add compile option for certain file. this is also useful to enable profiling for certain file via adding file specific flag -pg.
Parse the localize string from elf file instead of .o files. This is anyway good thing as link can also optmized out some strings.",@PhracturedBlue please check this. Only impact devo7e for this change.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,564,2019-01-09T06:38:51Z,2019-02-09T13:04:32Z,2019-02-11T00:15:49Z,MERGED,True,31,0,3,https://github.com/howard0su,Add LTO build support and enable LTO on devo7e by default,12,[],https://github.com/DeviationTX/deviation/pull/564,https://github.com/TheRealMoeder,38,https://github.com/DeviationTX/deviation/pull/564#issuecomment-462178040,"Add -flto and -fwhole-program to build
Make sure all ISR compiled with no-lto and add used attribute
Add a file specific CFLAGS option so that we can add compile option for certain file. this is also useful to enable profiling for certain file via adding file specific flag -pg.
Parse the localize string from elf file instead of .o files. This is anyway good thing as link can also optmized out some strings.",Did you see issues with LTO or why did you revert the commit?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,564,2019-01-09T06:38:51Z,2019-02-09T13:04:32Z,2019-02-11T00:15:49Z,MERGED,True,31,0,3,https://github.com/howard0su,Add LTO build support and enable LTO on devo7e by default,12,[],https://github.com/DeviationTX/deviation/pull/564,https://github.com/howard0su,39,https://github.com/DeviationTX/deviation/pull/564#issuecomment-462195230,"Add -flto and -fwhole-program to build
Make sure all ISR compiled with no-lto and add used attribute
Add a file specific CFLAGS option so that we can add compile option for certain file. this is also useful to enable profiling for certain file via adding file specific flag -pg.
Parse the localize string from elf file instead of .o files. This is anyway good thing as link can also optmized out some strings.","This version of implementation has problem to build right protocol module
which I did not notice before merge. Need some additional work to figure
out why externally visible attribute does not work as expected. I believe
it was working before.
…
On Monday, February 11, 2019, TheRealMoeder ***@***.***> wrote:
 Did you see issues with LTO or why did you revert the commit?

 —
 You are receiving this because you modified the open/close state.
 Reply to this email directly, view it on GitHub
 <#564 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRMpkaFaAWSendJYySS8C-jHsldKcks5vMJTmgaJpZM4Z23MC>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,565,2019-01-09T06:46:08Z,2019-01-09T08:30:47Z,2019-01-10T11:30:10Z,MERGED,True,7,1,1,https://github.com/howard0su,Don't try to flock on Windows,1,[],https://github.com/DeviationTX/deviation/pull/565,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/565,There is no flock on Windows. So don't do flock on Windows.,There is no flock on Windows. So don't do flock on Windows.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,565,2019-01-09T06:46:08Z,2019-01-09T08:30:47Z,2019-01-10T11:30:10Z,MERGED,True,7,1,1,https://github.com/howard0su,Don't try to flock on Windows,1,[],https://github.com/DeviationTX/deviation/pull/565,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/565#issuecomment-452589784,There is no flock on Windows. So don't do flock on Windows.,Fix #563 @vladislavy,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,567,2019-01-09T13:23:22Z,2019-01-09T19:27:15Z,2019-01-09T23:58:27Z,MERGED,True,32,29,5,https://github.com/howard0su,Cleanup warnings,1,[],https://github.com/DeviationTX/deviation/pull/567,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/567,"Remove warnings due to test.h
Fix warnings in protocol
fix style in tests","Remove warnings due to test.h
Fix warnings in protocol
fix style in tests",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,568,2019-01-09T15:09:34Z,2019-03-12T23:15:45Z,2019-03-12T23:15:45Z,CLOSED,False,48,6,5,https://github.com/howard0su,Add Scanner support to devo7e,4,['On Hold'],https://github.com/DeviationTX/deviation/pull/568,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/568,Add three new PROTOCOL cmds to devo protocol to expose CYRF functions back to main firmware.,Add three new PROTOCOL cmds to devo protocol to expose CYRF functions back to main firmware.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,568,2019-01-09T15:09:34Z,2019-03-12T23:15:45Z,2019-03-12T23:15:45Z,CLOSED,False,48,6,5,https://github.com/howard0su,Add Scanner support to devo7e,4,['On Hold'],https://github.com/DeviationTX/deviation/pull/568,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/568#issuecomment-452733997,Add three new PROTOCOL cmds to devo protocol to expose CYRF functions back to main firmware.,I cannot understand this change impacts other build than devo7e.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,568,2019-01-09T15:09:34Z,2019-03-12T23:15:45Z,2019-03-12T23:15:45Z,CLOSED,False,48,6,5,https://github.com/howard0su,Add Scanner support to devo7e,4,['On Hold'],https://github.com/DeviationTX/deviation/pull/568,https://github.com/TheRealMoeder,3,https://github.com/DeviationTX/deviation/pull/568#issuecomment-452743183,Add three new PROTOCOL cmds to devo protocol to expose CYRF functions back to main firmware.,"+864b is pretty heavy, I wonder if more functions could be moved into the protocol...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,568,2019-01-09T15:09:34Z,2019-03-12T23:15:45Z,2019-03-12T23:15:45Z,CLOSED,False,48,6,5,https://github.com/howard0su,Add Scanner support to devo7e,4,['On Hold'],https://github.com/DeviationTX/deviation/pull/568,https://github.com/PhracturedBlue,4,https://github.com/DeviationTX/deviation/pull/568#issuecomment-452749546,Add three new PROTOCOL cmds to devo protocol to expose CYRF functions back to main firmware.,"In general this looks ok, but I am a little concerned with pulling features into the default devo7e build without a long-term plan.  I am worried about pulling stuff in now because it fits, and then kicking it out again in the future because we need space for something else.  If we actually had a customizable build system where users could pick their features, it'd be more palatable.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,568,2019-01-09T15:09:34Z,2019-03-12T23:15:45Z,2019-03-12T23:15:45Z,CLOSED,False,48,6,5,https://github.com/howard0su,Add Scanner support to devo7e,4,['On Hold'],https://github.com/DeviationTX/deviation/pull/568,https://github.com/howard0su,5,https://github.com/DeviationTX/deviation/pull/568#issuecomment-452756921,Add three new PROTOCOL cmds to devo protocol to expose CYRF functions back to main firmware.,"It is a fun feature to play with.
I agree that we should have a long term plan. A customized build system is nightmare for testing. The test metric is huge. And need lots of work to clean up our existing system. I am not sure if it worth. Again waiting for a long term plan.
Here is my thoughts:


Enable for long term maintenance
This includes the unit test work what we are working on.
Clean up for knob on control hardware and software
Migrate to latest compiler
Migrate to latest libopencm3, replace in tree usb stack.
Some features from latest Futaba jr or some other tx?


Protocols
Continue bring new protocols. I believe we should enable modular protocol for every tx. Let devoupdater to pick what protocols to be flashed into. Need some addition worker to support devofs by updated.
Clean up protocol code. Lots of similar logic here and there.
Telemetry support. Need some work here to think modeling different telemetry from different vendors


New features
How to make us best FPV ready controller firmware ?
How to make multi rotors flying more enjoyable?
What improvements can be done for user experience.
We should think keeping  standard UI but remove standard mixer logic to replace with advanced mixer.
How to support localizations better?


New TX
We don’t support some tx OpenTX supports. Shall we catch up? Can we support AVR?
Shall we work with hardware vendors?


User base
How to grow user base? How to promote us? Twitter or Facebook or blog?
User manual improvement
Localize site?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,568,2019-01-09T15:09:34Z,2019-03-12T23:15:45Z,2019-03-12T23:15:45Z,CLOSED,False,48,6,5,https://github.com/howard0su,Add Scanner support to devo7e,4,['On Hold'],https://github.com/DeviationTX/deviation/pull/568,https://github.com/TheRealMoeder,6,https://github.com/DeviationTX/deviation/pull/568#issuecomment-452824952,Add three new PROTOCOL cmds to devo protocol to expose CYRF functions back to main firmware.,"I think indeed we should first concentrate on quick tests of new compiler, libopencm3, unit test and some cleanup work. But no matter how hard we try, we won't fit standard GUI with many additional features. On the other hand, if we (for example) disable standard GUI for future releases, there is plenty of room to gain with almost every other current feature fitting inside a devo7e build except those exluded by HAS_EXTENDED_TELEMETRY, as those require larger modules. Maybe moving module size to 5/6 KB is something we should think about, as current DSM and FRSkyX are really on their limits.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,568,2019-01-09T15:09:34Z,2019-03-12T23:15:45Z,2019-03-12T23:15:45Z,CLOSED,False,48,6,5,https://github.com/howard0su,Add Scanner support to devo7e,4,['On Hold'],https://github.com/DeviationTX/deviation/pull/568,https://github.com/howard0su,7,https://github.com/DeviationTX/deviation/pull/568#issuecomment-452918734,Add three new PROTOCOL cmds to devo protocol to expose CYRF functions back to main firmware.,"definitely we should do the testing. anything I can do to facilitate the
testing? Maybe we can create a devo7e-adv target which remove standard gui
but add other features to mitigate devo7e issue for now. and we can publish
the firmware and based on download count to see how people reactive on that.
…
On Thu, Jan 10, 2019 at 4:30 AM TheRealMoeder ***@***.***> wrote:
 I think indeed we should first concentrate on quick tests of new compiler,
 libopencm3, unit test and some cleanup work. But no matter how hard we try,
 we won't fit standard GUI with many additional features. On the other hand,
 if we (for example) disable standard GUI for future releases, there is
 plenty of room to gain with almost every other current feature fitting
 inside a devo7e build except those exluded by HAS_EXTENDED_TELEMETRY, as
 those require larger modules. Maybe moving module size to 5/6 KB is
 something we should think about, as current DSM and FRSkyX are really on
 their limits.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#568 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRAsYz0CvBiuCTbrWwUvwiIdjHspOks5vBlFcgaJpZM4Z3rLj>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,569,2019-01-10T15:02:14Z,2019-01-12T02:07:08Z,2019-01-12T02:07:08Z,MERGED,True,14,32,11,https://github.com/howard0su,Fix strict-alias of type FAT,3,[],https://github.com/DeviationTX/deviation/pull/569,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/569,"In new compiler, strict-alias is assumed to have better optimization. The current implementation to use an array to simulate the struct FATFS breaks this assumption and cause gcc 8.2 generate wrong code. Fix it via using the exact type.","In new compiler, strict-alias is assumed to have better optimization. The current implementation to use an array to simulate the struct FATFS breaks this assumption and cause gcc 8.2 generate wrong code. Fix it via using the exact type.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,569,2019-01-10T15:02:14Z,2019-01-12T02:07:08Z,2019-01-12T02:07:08Z,MERGED,True,14,32,11,https://github.com/howard0su,Fix strict-alias of type FAT,3,[],https://github.com/DeviationTX/deviation/pull/569,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/569#issuecomment-453367282,"In new compiler, strict-alias is assumed to have better optimization. The current implementation to use an array to simulate the struct FATFS breaks this assumption and cause gcc 8.2 generate wrong code. Fix it via using the exact type.",need test the new change,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,569,2019-01-10T15:02:14Z,2019-01-12T02:07:08Z,2019-01-12T02:07:08Z,MERGED,True,14,32,11,https://github.com/howard0su,Fix strict-alias of type FAT,3,[],https://github.com/DeviationTX/deviation/pull/569,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/569#issuecomment-453493543,"In new compiler, strict-alias is assumed to have better optimization. The current implementation to use an array to simulate the struct FATFS breaks this assumption and cause gcc 8.2 generate wrong code. Fix it via using the exact type.","tested on:

 devof12e
 devo7e
 devo8
 devo10
 devo12",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,569,2019-01-10T15:02:14Z,2019-01-12T02:07:08Z,2019-01-12T02:07:08Z,MERGED,True,14,32,11,https://github.com/howard0su,Fix strict-alias of type FAT,3,[],https://github.com/DeviationTX/deviation/pull/569,https://github.com/howard0su,4,https://github.com/DeviationTX/deviation/pull/569#issuecomment-453516502,"In new compiler, strict-alias is assumed to have better optimization. The current implementation to use an array to simulate the struct FATFS breaks this assumption and cause gcc 8.2 generate wrong code. Fix it via using the exact type.","I modified the code. please review again.
…
On Fri, Jan 11, 2019 at 4:37 AM PhracturedBlue ***@***.***> wrote:
 ***@***.**** approved this pull request.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#569 (review)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRDnJ0yfLfXVEGSRVQdMMWkzyEgGuks5vB6R6gaJpZM4Z5rLp>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,569,2019-01-10T15:02:14Z,2019-01-12T02:07:08Z,2019-01-12T02:07:08Z,MERGED,True,14,32,11,https://github.com/howard0su,Fix strict-alias of type FAT,3,[],https://github.com/DeviationTX/deviation/pull/569,https://github.com/howard0su,5,https://github.com/DeviationTX/deviation/pull/569#issuecomment-453710393,"In new compiler, strict-alias is assumed to have better optimization. The current implementation to use an array to simulate the struct FATFS breaks this assumption and cause gcc 8.2 generate wrong code. Fix it via using the exact type.","need another code review and approve,",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,570,2019-01-11T18:45:46Z,2019-01-21T23:26:02Z,2019-01-21T23:26:02Z,CLOSED,False,214,125,1,https://github.com/caixiaohai0,Update lang.cn,2,[],https://github.com/DeviationTX/deviation/pull/570,https://github.com/caixiaohai0,1,https://github.com/DeviationTX/deviation/pull/570,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,570,2019-01-11T18:45:46Z,2019-01-21T23:26:02Z,2019-01-21T23:26:02Z,CLOSED,False,214,125,1,https://github.com/caixiaohai0,Update lang.cn,2,[],https://github.com/DeviationTX/deviation/pull/570,https://github.com/caixiaohai0,2,https://github.com/DeviationTX/deviation/pull/570#issuecomment-453618259,,I am updating the Chinese language.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,570,2019-01-11T18:45:46Z,2019-01-21T23:26:02Z,2019-01-21T23:26:02Z,CLOSED,False,214,125,1,https://github.com/caixiaohai0,Update lang.cn,2,[],https://github.com/DeviationTX/deviation/pull/570,https://github.com/TheRealMoeder,3,https://github.com/DeviationTX/deviation/pull/570#issuecomment-453845200,,@howard0su whenever you approve we can merge. Nobody else will be able to check this ;),True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,570,2019-01-11T18:45:46Z,2019-01-21T23:26:02Z,2019-01-21T23:26:02Z,CLOSED,False,214,125,1,https://github.com/caixiaohai0,Update lang.cn,2,[],https://github.com/DeviationTX/deviation/pull/570,https://github.com/PhracturedBlue,4,https://github.com/DeviationTX/deviation/pull/570#issuecomment-456223683,,"Translations are now done via transifex:
https://www.transifex.com/deviationtx/deviation-1/
Please update them there",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,571,2019-01-12T01:49:31Z,2019-01-13T16:38:52Z,2019-01-20T13:34:44Z,CLOSED,False,270,4,6,https://github.com/howard0su,Support stack usage analyze in Dev build,2,[],https://github.com/DeviationTX/deviation/pull/571,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/571,"In Dev build, enable the options to check stack usage and warn if one function has over 1024 bytes stack usage. Also add the script from https://dlbeer.co.nz/oss/avstack.html to analyze the stack usage. I modified the script and rename it as stm32stack.pl. And the usage keeps same as original one.
mark two functions as static which noticed by the script.","In Dev build, enable the options to check stack usage and warn if one function has over 1024 bytes stack usage. Also add the script from https://dlbeer.co.nz/oss/avstack.html to analyze the stack usage. I modified the script and rename it as stm32stack.pl. And the usage keeps same as original one.
mark two functions as static which noticed by the script.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,571,2019-01-12T01:49:31Z,2019-01-13T16:38:52Z,2019-01-20T13:34:44Z,CLOSED,False,270,4,6,https://github.com/howard0su,Support stack usage analyze in Dev build,2,[],https://github.com/DeviationTX/deviation/pull/571,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/571#issuecomment-453709322,"In Dev build, enable the options to check stack usage and warn if one function has over 1024 bytes stack usage. Also add the script from https://dlbeer.co.nz/oss/avstack.html to analyze the stack usage. I modified the script and rename it as stm32stack.pl. And the usage keeps same as original one.
mark two functions as static which noticed by the script.",@PhracturedBlue,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,571,2019-01-12T01:49:31Z,2019-01-13T16:38:52Z,2019-01-20T13:34:44Z,CLOSED,False,270,4,6,https://github.com/howard0su,Support stack usage analyze in Dev build,2,[],https://github.com/DeviationTX/deviation/pull/571,https://github.com/PhracturedBlue,3,https://github.com/DeviationTX/deviation/pull/571#issuecomment-453709555,"In Dev build, enable the options to check stack usage and warn if one function has over 1024 bytes stack usage. Also add the script from https://dlbeer.co.nz/oss/avstack.html to analyze the stack usage. I modified the script and rename it as stm32stack.pl. And the usage keeps same as original one.
mark two functions as static which noticed by the script.","I haven't looked at the script yet, but i was thinking that it should be possible to do some post-processing to resolve function pointers to the worst-possible values, since each one has a limited set of possibilities. I'll need to dig into the code to see if that is realistic, or too much effort.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,571,2019-01-12T01:49:31Z,2019-01-13T16:38:52Z,2019-01-20T13:34:44Z,CLOSED,False,270,4,6,https://github.com/howard0su,Support stack usage analyze in Dev build,2,[],https://github.com/DeviationTX/deviation/pull/571,https://github.com/howard0su,4,https://github.com/DeviationTX/deviation/pull/571#issuecomment-453710331,"In Dev build, enable the options to check stack usage and warn if one function has over 1024 bytes stack usage. Also add the script from https://dlbeer.co.nz/oss/avstack.html to analyze the stack usage. I modified the script and rename it as stm32stack.pl. And the usage keeps same as original one.
mark two functions as static which noticed by the script.",I don't think the output of map/list file contains the information which function calls which callback. We may want to just manually such knowledge into the script. most callback is from UI and I am not super familiar with that part yet.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,571,2019-01-12T01:49:31Z,2019-01-13T16:38:52Z,2019-01-20T13:34:44Z,CLOSED,False,270,4,6,https://github.com/howard0su,Support stack usage analyze in Dev build,2,[],https://github.com/DeviationTX/deviation/pull/571,https://github.com/PhracturedBlue,5,https://github.com/DeviationTX/deviation/pull/571#issuecomment-453838849,"In Dev build, enable the options to check stack usage and warn if one function has over 1024 bytes stack usage. Also add the script from https://dlbeer.co.nz/oss/avstack.html to analyze the stack usage. I modified the script and rename it as stm32stack.pl. And the usage keeps same as original one.
mark two functions as static which noticed by the script.",Is there any reason not to have this always on?  It doesn't appear to impact the binary size at all,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,571,2019-01-12T01:49:31Z,2019-01-13T16:38:52Z,2019-01-20T13:34:44Z,CLOSED,False,270,4,6,https://github.com/howard0su,Support stack usage analyze in Dev build,2,[],https://github.com/DeviationTX/deviation/pull/571,https://github.com/howard0su,6,https://github.com/DeviationTX/deviation/pull/571#issuecomment-453839734,"In Dev build, enable the options to check stack usage and warn if one function has over 1024 bytes stack usage. Also add the script from https://dlbeer.co.nz/oss/avstack.html to analyze the stack usage. I modified the script and rename it as stm32stack.pl. And the usage keeps same as original one.
mark two functions as static which noticed by the script.","It generates lots of small files in objs, which I don't like to. And the
result is not that useful unless we fix callback thing. So i decided to
turn it off by default.
…
On Sun, Jan 13, 2019 at 11:27 PM PhracturedBlue ***@***.***> wrote:
 Is there any reason not to have this always on? It doesn't appear to
 impact the binary size at all

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#571 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRKYZ0AuE-wIhu-3gd-5ydIR01JaPks5vC1BngaJpZM4Z8bcj>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,571,2019-01-12T01:49:31Z,2019-01-13T16:38:52Z,2019-01-20T13:34:44Z,CLOSED,False,270,4,6,https://github.com/howard0su,Support stack usage analyze in Dev build,2,[],https://github.com/DeviationTX/deviation/pull/571,https://github.com/PhracturedBlue,7,https://github.com/DeviationTX/deviation/pull/571#issuecomment-453844614,"In Dev build, enable the options to check stack usage and warn if one function has over 1024 bytes stack usage. Also add the script from https://dlbeer.co.nz/oss/avstack.html to analyze the stack usage. I modified the script and rename it as stm32stack.pl. And the usage keeps same as original one.
mark two functions as static which noticed by the script.","I have manually merged this.  In the future, please keep unrelated changes in separate pull requests (the static stuff should have been in a separate PR vs the stack code)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,571,2019-01-12T01:49:31Z,2019-01-13T16:38:52Z,2019-01-20T13:34:44Z,CLOSED,False,270,4,6,https://github.com/howard0su,Support stack usage analyze in Dev build,2,[],https://github.com/DeviationTX/deviation/pull/571,https://github.com/howard0su,8,https://github.com/DeviationTX/deviation/pull/571#issuecomment-453844700,"In Dev build, enable the options to check stack usage and warn if one function has over 1024 bytes stack usage. Also add the script from https://dlbeer.co.nz/oss/avstack.html to analyze the stack usage. I modified the script and rename it as stm32stack.pl. And the usage keeps same as original one.
mark two functions as static which noticed by the script.","thank you.
…
On Mon, Jan 14, 2019 at 12:38 AM PhracturedBlue ***@***.***> wrote:
 Closed #571 <#571>.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#571 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRDb9AgLiEzhmsl0tLdNb3wDKCKHxks5vC2EcgaJpZM4Z8bcj>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,572,2019-01-12T11:06:57Z,2019-01-12T11:29:20Z,2019-01-12T11:29:20Z,MERGED,True,2,0,1,https://github.com/howard0su,Fix crash in non-localized Tx,1,[],https://github.com/DeviationTX/deviation/pull/572,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/572,This is regression when converting to new MULTI_LANGUAGE knob.,This is regression when converting to new MULTI_LANGUAGE knob.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,572,2019-01-12T11:06:57Z,2019-01-12T11:29:20Z,2019-01-12T11:29:20Z,MERGED,True,2,0,1,https://github.com/howard0su,Fix crash in non-localized Tx,1,[],https://github.com/DeviationTX/deviation/pull/572,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/572#issuecomment-453738908,This is regression when converting to new MULTI_LANGUAGE knob.,"please merge this. this is a new regression introduced by me. Impact the Tx like devof12e, devo7e",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,573,2019-01-12T12:16:12Z,2019-01-17T01:02:11Z,2019-01-17T01:02:15Z,MERGED,True,22,12,2,https://github.com/howard0su,Don't run video_setstandard in every event loop,1,[],https://github.com/DeviationTX/deviation/pull/573,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/573,Set a flag to let the _getstandard runs after video is enabled in 3 seconds.,Set a flag to let the _getstandard runs after video is enabled in 3 seconds.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,573,2019-01-12T12:16:12Z,2019-01-17T01:02:11Z,2019-01-17T01:02:15Z,MERGED,True,22,12,2,https://github.com/howard0su,Don't run video_setstandard in every event loop,1,[],https://github.com/DeviationTX/deviation/pull/573,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/573#issuecomment-453742933,Set a flag to let the _getstandard runs after video is enabled in 3 seconds.,Try to fix PR #442,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,573,2019-01-12T12:16:12Z,2019-01-17T01:02:11Z,2019-01-17T01:02:15Z,MERGED,True,22,12,2,https://github.com/howard0su,Don't run video_setstandard in every event loop,1,[],https://github.com/DeviationTX/deviation/pull/573,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/573#issuecomment-453742949,Set a flag to let the _getstandard runs after video is enabled in 3 seconds.,please hold to wait for the feedback from community.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,573,2019-01-12T12:16:12Z,2019-01-17T01:02:11Z,2019-01-17T01:02:15Z,MERGED,True,22,12,2,https://github.com/howard0su,Don't run video_setstandard in every event loop,1,[],https://github.com/DeviationTX/deviation/pull/573,https://github.com/howard0su,4,https://github.com/DeviationTX/deviation/pull/573#issuecomment-454685520,Set a flag to let the _getstandard runs after video is enabled in 3 seconds.,Consider merge per the feedback from the user in #442,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,576,2019-01-12T15:08:58Z,2019-01-12T15:19:57Z,2019-01-20T13:34:37Z,CLOSED,False,11,8,12,https://github.com/howard0su,Fix the build of devof4,1,[],https://github.com/DeviationTX/deviation/pull/576,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/576,The logic to auto detect CRCOFFSET cannot work with the include. So let the target set LINKFILE to the file it is using directly.,The logic to auto detect CRCOFFSET cannot work with the include. So let the target set LINKFILE to the file it is using directly.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,576,2019-01-12T15:08:58Z,2019-01-12T15:19:57Z,2019-01-20T13:34:37Z,CLOSED,False,11,8,12,https://github.com/howard0su,Fix the build of devof4,1,[],https://github.com/DeviationTX/deviation/pull/576,https://github.com/PhracturedBlue,2,https://github.com/DeviationTX/deviation/pull/576#issuecomment-453755608,The logic to auto detect CRCOFFSET cannot work with the include. So let the target set LINKFILE to the file it is using directly.,I have an alternate solution which I think is cleaner,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,578,2019-01-12T22:58:18Z,2019-01-14T13:31:28Z,2019-01-14T21:19:59Z,MERGED,True,7,7,1,https://github.com/TheRealMoeder,Speedup travis builds,7,[],https://github.com/DeviationTX/deviation/pull/578,https://github.com/TheRealMoeder,1,https://github.com/DeviationTX/deviation/pull/578,"Some small changes to travis.yml to speed up builds a little:

git clone only shallow
omit apt-get update
git needs no update through apt
move away from docker container to trusty VM, as docker containers are phased out anyways by travis
set minimal language, as we only need a very basic environment","Some small changes to travis.yml to speed up builds a little:

git clone only shallow
omit apt-get update
git needs no update through apt
move away from docker container to trusty VM, as docker containers are phased out anyways by travis
set minimal language, as we only need a very basic environment",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,578,2019-01-12T22:58:18Z,2019-01-14T13:31:28Z,2019-01-14T21:19:59Z,MERGED,True,7,7,1,https://github.com/TheRealMoeder,Speedup travis builds,7,[],https://github.com/DeviationTX/deviation/pull/578,https://github.com/TheRealMoeder,2,https://github.com/DeviationTX/deviation/pull/578#issuecomment-453787604,"Some small changes to travis.yml to speed up builds a little:

git clone only shallow
omit apt-get update
git needs no update through apt
move away from docker container to trusty VM, as docker containers are phased out anyways by travis
set minimal language, as we only need a very basic environment","I also experimented with moving to the newer xenial environment, but this no longer includes mingw32 but mingw64, so some deeper changes would be required, for which I can‘t really see and advantages right now.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,578,2019-01-12T22:58:18Z,2019-01-14T13:31:28Z,2019-01-14T21:19:59Z,MERGED,True,7,7,1,https://github.com/TheRealMoeder,Speedup travis builds,7,[],https://github.com/DeviationTX/deviation/pull/578,https://github.com/TheRealMoeder,3,https://github.com/DeviationTX/deviation/pull/578#issuecomment-453789286,"Some small changes to travis.yml to speed up builds a little:

git clone only shallow
omit apt-get update
git needs no update through apt
move away from docker container to trusty VM, as docker containers are phased out anyways by travis
set minimal language, as we only need a very basic environment","Total build time is about 25 % less at the current workload compared to master. But actually the gain is less, as the VM boots slower and this is not counted to the build time, so we cannot really measure it.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,578,2019-01-12T22:58:18Z,2019-01-14T13:31:28Z,2019-01-14T21:19:59Z,MERGED,True,7,7,1,https://github.com/TheRealMoeder,Speedup travis builds,7,[],https://github.com/DeviationTX/deviation/pull/578,https://github.com/PhracturedBlue,4,https://github.com/DeviationTX/deviation/pull/578#issuecomment-453891662,"Some small changes to travis.yml to speed up builds a little:

git clone only shallow
omit apt-get update
git needs no update through apt
move away from docker container to trusty VM, as docker containers are phased out anyways by travis
set minimal language, as we only need a very basic environment","regardless of anything else we do, I see no reason not to speed up the build this way",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,578,2019-01-12T22:58:18Z,2019-01-14T13:31:28Z,2019-01-14T21:19:59Z,MERGED,True,7,7,1,https://github.com/TheRealMoeder,Speedup travis builds,7,[],https://github.com/DeviationTX/deviation/pull/578,https://github.com/TheRealMoeder,5,https://github.com/DeviationTX/deviation/pull/578#issuecomment-454165294,"Some small changes to travis.yml to speed up builds a little:

git clone only shallow
omit apt-get update
git needs no update through apt
move away from docker container to trusty VM, as docker containers are phased out anyways by travis
set minimal language, as we only need a very basic environment","Sorry, last commit had wrong syntax and interesting enough happened to stop travis working without any error message. I already pushend a commit to fix this, builds are running again now.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,579,2019-01-13T16:13:35Z,2019-01-23T13:44:16Z,2019-01-23T13:44:16Z,MERGED,True,94,28,2,https://github.com/PhracturedBlue,Reduce stack usage of page-reordering,6,[],https://github.com/DeviationTX/deviation/pull/579,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/579,"This patch re-implements the page-reordering algorithm.
It trades of code-size and performance for reduced stack usage.
Original stack usage for reorder_return_cb was 5248 bytes
There are 3 parts:
eda187f : breaks up the function into 2 parts, making testing easier.  this increases code size by 36 bytes and reduces worst-case stack usage to 2120
8a18b0d : re-implements the mixer-shuffle portion of the code.  This one increases code size by an additional 32 bytes (78 total), and reduces worst-case stack usage to 652
1b4aed0 : re-implements the limit and template shuffling.  This one increase code size further by  104 bytes (182 total) and reduces worst-case stack usage to 120
I don't really understand the massive stack usage drop in the 1st commit.  All that it does is break one function into 3 which should have parallelized the stack usage.  I'd expect the original to be ~ 2080(mixer) + 512(limits) + 26(templates) + ~100 (SetMixer function)=~2718.  Maybe the compiler did an optimization at the cost of stack size.  The other numbers all seem in line.
At the moment, it is clear to me that eda187f is a good tradeoff. We can possibly even get the ROM growth back by sharing this function with the mixer-reorder page.  8a18b0d may be reasonable as well, but maybe not right now (since eda187f already moves reorder_return_cb down to about position 20 in the worst-offenders list).  1b4aed0 seems to not be worth the tradefoff of rom growth to stack reduction.","This patch re-implements the page-reordering algorithm.
It trades of code-size and performance for reduced stack usage.
Original stack usage for reorder_return_cb was 5248 bytes
There are 3 parts:
eda187f : breaks up the function into 2 parts, making testing easier.  this increases code size by 36 bytes and reduces worst-case stack usage to 2120
8a18b0d : re-implements the mixer-shuffle portion of the code.  This one increases code size by an additional 32 bytes (78 total), and reduces worst-case stack usage to 652
1b4aed0 : re-implements the limit and template shuffling.  This one increase code size further by  104 bytes (182 total) and reduces worst-case stack usage to 120
I don't really understand the massive stack usage drop in the 1st commit.  All that it does is break one function into 3 which should have parallelized the stack usage.  I'd expect the original to be ~ 2080(mixer) + 512(limits) + 26(templates) + ~100 (SetMixer function)=~2718.  Maybe the compiler did an optimization at the cost of stack size.  The other numbers all seem in line.
At the moment, it is clear to me that eda187f is a good tradeoff. We can possibly even get the ROM growth back by sharing this function with the mixer-reorder page.  8a18b0d may be reasonable as well, but maybe not right now (since eda187f already moves reorder_return_cb down to about position 20 in the worst-offenders list).  1b4aed0 seems to not be worth the tradefoff of rom growth to stack reduction.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,579,2019-01-13T16:13:35Z,2019-01-23T13:44:16Z,2019-01-23T13:44:16Z,MERGED,True,94,28,2,https://github.com/PhracturedBlue,Reduce stack usage of page-reordering,6,[],https://github.com/DeviationTX/deviation/pull/579,https://github.com/PhracturedBlue,2,https://github.com/DeviationTX/deviation/pull/579#issuecomment-453854499,"This patch re-implements the page-reordering algorithm.
It trades of code-size and performance for reduced stack usage.
Original stack usage for reorder_return_cb was 5248 bytes
There are 3 parts:
eda187f : breaks up the function into 2 parts, making testing easier.  this increases code size by 36 bytes and reduces worst-case stack usage to 2120
8a18b0d : re-implements the mixer-shuffle portion of the code.  This one increases code size by an additional 32 bytes (78 total), and reduces worst-case stack usage to 652
1b4aed0 : re-implements the limit and template shuffling.  This one increase code size further by  104 bytes (182 total) and reduces worst-case stack usage to 120
I don't really understand the massive stack usage drop in the 1st commit.  All that it does is break one function into 3 which should have parallelized the stack usage.  I'd expect the original to be ~ 2080(mixer) + 512(limits) + 26(templates) + ~100 (SetMixer function)=~2718.  Maybe the compiler did an optimization at the cost of stack size.  The other numbers all seem in line.
At the moment, it is clear to me that eda187f is a good tradeoff. We can possibly even get the ROM growth back by sharing this function with the mixer-reorder page.  8a18b0d may be reasonable as well, but maybe not right now (since eda187f already moves reorder_return_cb down to about position 20 in the worst-offenders list).  1b4aed0 seems to not be worth the tradefoff of rom growth to stack reduction.","On further debug, the stacktrace analyzer wasn't handing gcc's optimizations and was underreporting the SetMixer call n the patch.  After fixing it, the original stack trace value of 5248 is correct.  The SetMixer function uses 2588 bytes of stack so: 2588 + 2080 + 512 + 26 = 5206
The values for the subsequent patches are all ~2600 because any additional reduction is masked by SetMixer.
This means that implementing  8a18b0d or 1b4aed0 makes no sense until after SetMixer is cleaned up.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,581,2019-01-13T22:54:41Z,2019-01-14T01:06:53Z,2019-01-14T01:06:53Z,MERGED,True,68,9,2,https://github.com/PhracturedBlue,Fix mixer reordering and loop handling.  Fixes #580,2,[],https://github.com/DeviationTX/deviation/pull/581,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/581,"Add tests for mixer dependency ordering and loop handling.
Fix code to properly reorder mixers and handle loops","Add tests for mixer dependency ordering and loop handling.
Fix code to properly reorder mixers and handle loops",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,582,2019-01-13T23:21:19Z,2019-01-14T00:43:22Z,2019-01-14T00:43:22Z,MERGED,True,1,0,1,https://github.com/hexfet,Fix calibration (issue #574),1,[],https://github.com/DeviationTX/deviation/pull/582,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/582,Run mixer calculations on timer after de-initializing protocol.  Ensures channel data is updated for functions like calibration.  Fixes #574 .,Run mixer calculations on timer after de-initializing protocol.  Ensures channel data is updated for functions like calibration.  Fixes #574 .,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,583,2019-01-14T01:17:03Z,2019-01-15T01:50:43Z,2019-01-15T01:50:43Z,MERGED,True,52,49,1,https://github.com/PhracturedBlue,Reduce stack usage of MIXER_SetMixers by ~2200 bytes,1,[],https://github.com/DeviationTX/deviation/pull/583,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/583,"Reimplement mixer-dependency code to not store a complete copy of Model.mixers in stack.
Reduces stack usage of this function from ~2588bytes to ~380 bytes.  Code cost is ~68 bytes","Reimplement mixer-dependency code to not store a complete copy of Model.mixers in stack.
Reduces stack usage of this function from ~2588bytes to ~380 bytes.  Code cost is ~68 bytes",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,583,2019-01-14T01:17:03Z,2019-01-15T01:50:43Z,2019-01-15T01:50:43Z,MERGED,True,52,49,1,https://github.com/PhracturedBlue,Reduce stack usage of MIXER_SetMixers by ~2200 bytes,1,[],https://github.com/DeviationTX/deviation/pull/583,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/583#issuecomment-453884606,"Reimplement mixer-dependency code to not store a complete copy of Model.mixers in stack.
Reduces stack usage of this function from ~2588bytes to ~380 bytes.  Code cost is ~68 bytes",worth for that. Maybe devo7e has enough RAM now for localization consider stack saving and voice RAM saving.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,583,2019-01-14T01:17:03Z,2019-01-15T01:50:43Z,2019-01-15T01:50:43Z,MERGED,True,52,49,1,https://github.com/PhracturedBlue,Reduce stack usage of MIXER_SetMixers by ~2200 bytes,1,[],https://github.com/DeviationTX/deviation/pull/583,https://github.com/TheRealMoeder,3,https://github.com/DeviationTX/deviation/pull/583#issuecomment-454192519,"Reimplement mixer-dependency code to not store a complete copy of Model.mixers in stack.
Reduces stack usage of this function from ~2588bytes to ~380 bytes.  Code cost is ~68 bytes","Voice is not available in standard 7e builds, so no ram to gain there",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,584,2019-01-14T04:07:12Z,2019-01-19T07:43:48Z,2019-01-19T07:44:07Z,MERGED,True,43,0,1,https://github.com/howard0su,Add changelog to make preparation of a new release easier,1,[],https://github.com/DeviationTX/deviation/pull/584,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/584,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,584,2019-01-14T04:07:12Z,2019-01-19T07:43:48Z,2019-01-19T07:44:07Z,MERGED,True,43,0,1,https://github.com/howard0su,Add changelog to make preparation of a new release easier,1,[],https://github.com/DeviationTX/deviation/pull/584,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/584#issuecomment-455054074,,@hexfet @TheRealMoeder @PhracturedBlue Shall I commit as It is or waiting longer to make sure I didn't miss any significant improvement or bug fixes?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,584,2019-01-14T04:07:12Z,2019-01-19T07:43:48Z,2019-01-19T07:44:07Z,MERGED,True,43,0,1,https://github.com/howard0su,Add changelog to make preparation of a new release easier,1,[],https://github.com/DeviationTX/deviation/pull/584,https://github.com/PhracturedBlue,3,https://github.com/DeviationTX/deviation/pull/584#issuecomment-455163902,,"I don't really see the purpose.  The wiki is the primary source for such info, and it would be fine to create a 'changes in nightlies' page with this info that we could subsequently turn into the release page.  Only developers are likely to look at the source-code version, and I have no confidence that it will be maintained in any reasonable way.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,584,2019-01-14T04:07:12Z,2019-01-19T07:43:48Z,2019-01-19T07:44:07Z,MERGED,True,43,0,1,https://github.com/howard0su,Add changelog to make preparation of a new release easier,1,[],https://github.com/DeviationTX/deviation/pull/584,https://github.com/howard0su,4,https://github.com/DeviationTX/deviation/pull/584#issuecomment-455178185,,"I want to ensure that developer can update this when one new feature or bug
is checked in.
…
On Thu, Jan 17, 2019 at 9:00 PM PhracturedBlue ***@***.***> wrote:
 I don't really see the purpose. The wiki is the primary source for such
 info, and it would be fine to create a 'changes in nightlies' page with
 this info that we could subsequently turn into the release page. Only
 developers are likely to look at the source-code version, and I have no
 confidence that it will be maintained in any reasonable way.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#584 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRJXsZPip3ockCwnJOExS-0NfkY_sks5vEHP9gaJpZM4Z9lSD>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,584,2019-01-14T04:07:12Z,2019-01-19T07:43:48Z,2019-01-19T07:44:07Z,MERGED,True,43,0,1,https://github.com/howard0su,Add changelog to make preparation of a new release easier,1,[],https://github.com/DeviationTX/deviation/pull/584,https://github.com/PhracturedBlue,5,https://github.com/DeviationTX/deviation/pull/584#issuecomment-455232569,,"Sure, if I had any confidence it would remain current.  But I don't think that'll be the case.  Even if we try to enforce it, it will be annoying to update as part of a PR due to constant merge-conflicts between patches.  I think it is more likely to just quickly go stale than anything else.  Building the list from git for a release doesn't take very long, and we'll need to do that part anyhow (unless we enforce every PR to update the changelog...which as I said, I don't think will work).  If it is just as a work-in-progress document, the wiki should be fine and more accessible.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,584,2019-01-14T04:07:12Z,2019-01-19T07:43:48Z,2019-01-19T07:44:07Z,MERGED,True,43,0,1,https://github.com/howard0su,Add changelog to make preparation of a new release easier,1,[],https://github.com/DeviationTX/deviation/pull/584,https://github.com/TheRealMoeder,6,https://github.com/DeviationTX/deviation/pull/584#issuecomment-455239047,,"I actually like the idea of forcing an update of update.md with a pull request. I already had to step on goebish's feet to get the manual up to date ;), and the wiki is everything but up to date.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,584,2019-01-14T04:07:12Z,2019-01-19T07:43:48Z,2019-01-19T07:44:07Z,MERGED,True,43,0,1,https://github.com/howard0su,Add changelog to make preparation of a new release easier,1,[],https://github.com/DeviationTX/deviation/pull/584,https://github.com/PhracturedBlue,7,https://github.com/DeviationTX/deviation/pull/584#issuecomment-455240903,,"We can try it.  I would want to see its usage enforced, and see how much extra work it is during PR merges (I don't want to need to constantly merge/rebase to deal with this).  I'm not optimistic personally.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,584,2019-01-14T04:07:12Z,2019-01-19T07:43:48Z,2019-01-19T07:44:07Z,MERGED,True,43,0,1,https://github.com/howard0su,Add changelog to make preparation of a new release easier,1,[],https://github.com/DeviationTX/deviation/pull/584,https://github.com/TheRealMoeder,8,https://github.com/DeviationTX/deviation/pull/584#issuecomment-455291484,,"We can try it. I would want to see its usage enforced, and see how much extra work it is during PR merges (I don't want to need to constantly merge/rebase to deal with this). I'm not optimistic personally.

I agree there is a potential for quite some merge conflicts. Lets just try, we can always abandon it.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,585,2019-01-14T07:56:41Z,,2019-01-22T00:20:01Z,OPEN,False,16,14,1,https://github.com/howard0su,Reduce stack usage of LCD_DrawWindowedImageFromFile,3,[],https://github.com/DeviationTX/deviation/pull/585,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/585,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,585,2019-01-14T07:56:41Z,,2019-01-22T00:20:01Z,OPEN,False,16,14,1,https://github.com/howard0su,Reduce stack usage of LCD_DrawWindowedImageFromFile,3,[],https://github.com/DeviationTX/deviation/pull/585,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/585#issuecomment-453923402,,Need test on the real TX to see the performance impact.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,585,2019-01-14T07:56:41Z,,2019-01-22T00:20:01Z,OPEN,False,16,14,1,https://github.com/howard0su,Reduce stack usage of LCD_DrawWindowedImageFromFile,3,[],https://github.com/DeviationTX/deviation/pull/585,https://github.com/PhracturedBlue,3,https://github.com/DeviationTX/deviation/pull/585#issuecomment-454017360,,"we could probably get by instead by assigning the width to 2x the tx screen width (1x on 7e since I think we only support 8-bit images there?) and just validate that the width requested will fit (it should because I think the caller has already validated that?  but I didn't check to be sure).  That may provide the same stack reduction on the 7e without increasing ROM usage.  I really wanted to setup the 7e to only support 2bit images (black, white transmparent), but I could never find a format that was well supported on windows and linux that would work, so I stayed with the 8bit images for them.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,585,2019-01-14T07:56:41Z,,2019-01-22T00:20:01Z,OPEN,False,16,14,1,https://github.com/howard0su,Reduce stack usage of LCD_DrawWindowedImageFromFile,3,[],https://github.com/DeviationTX/deviation/pull/585,https://github.com/howard0su,4,https://github.com/DeviationTX/deviation/pull/585#issuecomment-454017776,,Tested on devo12 and devo8 and didn’t see noticeable performance difference by community member. Someone can help verify as I don’t have any graphics based Tx.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,585,2019-01-14T07:56:41Z,,2019-01-22T00:20:01Z,OPEN,False,16,14,1,https://github.com/howard0su,Reduce stack usage of LCD_DrawWindowedImageFromFile,3,[],https://github.com/DeviationTX/deviation/pull/585,https://github.com/howard0su,5,https://github.com/DeviationTX/deviation/pull/585#issuecomment-454020218,,"Despite of the stack usage, i think my implementation is error prone. Even
we have a larger bitmap needs later, we can handle it. And we can trade off
between stack usage and performance easily via tune the buffer size. One
idea here is using temp string as a temp buffer to avoid allocate even one
byte on the stack.

I have some idea to reduce ROM size in this piece of code. Let me try.

PhracturedBlue <notifications@github.com>于2019年1月14日 周一下午10:10写道：
 we could probably get by instead by assigning the width to 2x the tx
 screen width (1x on 7e since I think we only support 8-bit images there?)
 and just validate that the width requested will fit (it should because I
 think the caller has already validated that? but I didn't check to be
 sure). That may provide the same stack reduction on the 7e without
 increasing ROM usage. I really wanted to setup the 7e to only support 2bit
 images (black, white transmparent), but I could never find a format that
 was well supported on windows and linux that would work, so I stayed with
 the 8bit images for them.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#585 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRI9mwAB0Mx194tvvDQ89knirMfQzks5vDI_ugaJpZM4Z9wXO>
 .

-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,585,2019-01-14T07:56:41Z,,2019-01-22T00:20:01Z,OPEN,False,16,14,1,https://github.com/howard0su,Reduce stack usage of LCD_DrawWindowedImageFromFile,3,[],https://github.com/DeviationTX/deviation/pull/585,https://github.com/howard0su,6,https://github.com/DeviationTX/deviation/pull/585#issuecomment-455516652,,@PhracturedBlue can u help validate this on a real Tx to see the perf? The size increase is small now.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,586,2019-01-14T12:51:58Z,2019-01-15T00:06:44Z,2019-01-15T00:06:44Z,CLOSED,False,4,1,1,https://github.com/howard0su,Allocate stack at the start of RAM,1,[],https://github.com/DeviationTX/deviation/pull/586,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/586,This make sure stack overrun will immediate cause a crash instead of override some bss data.,This make sure stack overrun will immediate cause a crash instead of override some bss data.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,586,2019-01-14T12:51:58Z,2019-01-15T00:06:44Z,2019-01-15T00:06:44Z,CLOSED,False,4,1,1,https://github.com/howard0su,Allocate stack at the start of RAM,1,[],https://github.com/DeviationTX/deviation/pull/586,https://github.com/PhracturedBlue,2,https://github.com/DeviationTX/deviation/pull/586#issuecomment-454010521,This make sure stack overrun will immediate cause a crash instead of override some bss data.,"I'm on the fence on this.  I think most users would rather have corruption and the possible chance to land their model than a crash and loss of vehicle.  If we could actually measure the worst-case stack size, that would be one-thing, but with the interrupt handlers and the callbacks it is very difficult to do.  This also penalizes all transmitters for the devo7e's (and equivalent) small RAM.  larger tx will never run out of stack space.
How about instead we leave the stack at the end and add a marker word at the 4k boundary.  We could then detect the stack overflow and give some indication that there is likely corruption and the user should reboot as soon as possible.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,586,2019-01-14T12:51:58Z,2019-01-15T00:06:44Z,2019-01-15T00:06:44Z,CLOSED,False,4,1,1,https://github.com/howard0su,Allocate stack at the start of RAM,1,[],https://github.com/DeviationTX/deviation/pull/586,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/586#issuecomment-454015031,This make sure stack overrun will immediate cause a crash instead of override some bss data.,"I agree with you on the user experience part. I can write a small piece of
code to detect stack overrun in systick_handler. But i am not sure what’s
the right user experience to warn user you have land now.

I can see almost all the callbacks are from /pages. Futaba has a feature to
lock the screen, which called key lock. In such mode, we can grantee only
model page or telemetry page is used. It reduce the chance to run over the
stack. Maybe we can consider having such feature.

For devo7e,  i can work on it to see if there is a way to free up some RAM
to make sure it doesn’t run over.

PhracturedBlue <notifications@github.com>于2019年1月14日 周一下午9:49写道：
 I'm on the fence on this. I think most users would rather have corruption
 and the possible chance to land their model than a crash and loss of
 vehicle. If we could actually measure the worst-case stack size, that would
 be one-thing, but with the interrupt handlers and the callbacks it is very
 difficult to do. This also penalizes all transmitters for the devo7e's (and
 equivalent) small RAM. larger tx will never run out of stack space.

 How about instead we leave the stack at the end and add a marker word at
 the 4k boundary. We could then detect the stack overflow and give some
 indication that there is likely corruption and the user should reboot as
 soon as possible.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#586 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRB_gdMyGuaqeadx7CpgJkE9MVrtMks5vDIr4gaJpZM4Z-MGr>
 .

-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,586,2019-01-14T12:51:58Z,2019-01-15T00:06:44Z,2019-01-15T00:06:44Z,CLOSED,False,4,1,1,https://github.com/howard0su,Allocate stack at the start of RAM,1,[],https://github.com/DeviationTX/deviation/pull/586,https://github.com/PhracturedBlue,4,https://github.com/DeviationTX/deviation/pull/586#issuecomment-454022351,This make sure stack overrun will immediate cause a crash instead of override some bss data.,"We could either use the existing dialog menu to notify the user or setup an audio 'emergency' signal which plays at interval until the tx is reset.  We should of-cource test to make sure none of these happen in normal operation :)
I understand the screen-lock concept, but I'd rather actually guarantee that we don't have issues in the 1st place.  I'm still thinking of ways to account for the callbacks in memory.  One idea I had was to instrument and build call traces on the emulator and use those to either stitch together the callbacks or just use them for worst-case stack analysis.  If we could automate tetsing of the gui, we might even be able to generate such results dynamically.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,586,2019-01-14T12:51:58Z,2019-01-15T00:06:44Z,2019-01-15T00:06:44Z,CLOSED,False,4,1,1,https://github.com/howard0su,Allocate stack at the start of RAM,1,[],https://github.com/DeviationTX/deviation/pull/586,https://github.com/howard0su,5,https://github.com/DeviationTX/deviation/pull/586#issuecomment-454211707,This make sure stack overrun will immediate cause a crash instead of override some bss data.,"I think moving stack has negative impact to the consumption. current devo7e.map shows there is enough stack space as today:
0x0000000020002780                . = ALIGN (0x4)
0x0000000020002780                _ebss = .
0x0000000020004000                PROVIDE (_stack = (ORIGIN (ram) + LENGTH (ram)))
So there is 6272bytes reserverd for stack.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,587,2019-01-14T23:19:32Z,2019-01-15T01:42:45Z,2019-01-20T13:32:09Z,MERGED,True,2,0,2,https://github.com/howard0su,Check libopencm3/Makefile before build,1,[],https://github.com/DeviationTX/deviation/pull/587,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/587,Prompt user to run git submodule init to get the libopencm3 code,Prompt user to run git submodule init to get the libopencm3 code,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,588,2019-01-14T23:21:13Z,2019-01-15T14:44:59Z,2019-01-15T14:56:54Z,MERGED,True,12,12,4,https://github.com/howard0su,Use the array type for strings,2,[],https://github.com/DeviationTX/deviation/pull/588,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/588,This makes sure the variables are only in ROM not in RAM.,This makes sure the variables are only in ROM not in RAM.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,588,2019-01-14T23:21:13Z,2019-01-15T14:44:59Z,2019-01-15T14:56:54Z,MERGED,True,12,12,4,https://github.com/howard0su,Use the array type for strings,2,[],https://github.com/DeviationTX/deviation/pull/588,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/588#issuecomment-454249100,This makes sure the variables are only in ROM not in RAM.,I am reading .map file to find out if there is anything wrong.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,588,2019-01-14T23:21:13Z,2019-01-15T14:44:59Z,2019-01-15T14:56:54Z,MERGED,True,12,12,4,https://github.com/howard0su,Use the array type for strings,2,[],https://github.com/DeviationTX/deviation/pull/588,https://github.com/hexfet,3,https://github.com/DeviationTX/deviation/pull/588#issuecomment-454419282,This makes sure the variables are only in ROM not in RAM.,"What's the advantage of this approach over #defining the names as string literals?  The type safety doesn't seem too important here,  the definitions are all in one file, and there's a little size advantage.  Made build comparisons for t8sg_v2_plus:
Affected names #defined as string literals in model.h (from ram_save2)
ROM: 0x08003000 - 0x0803b2f0 = 224.73kB
RAM: 0x20000000 - 0x20008e0c =  35.51kB

Names as char array (ram_save2)
ROM: 0x08003000 - 0x0803b30c = 224.76kB
RAM: 0x20000000 - 0x20008e14 =  35.52kB

Names as char * (master at ee03e83d)
ROM: 0x08003000 - 0x0803b344 = 224.82kB
RAM: 0x20000000 - 0x20008e3c =  35.56kB",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,588,2019-01-14T23:21:13Z,2019-01-15T14:44:59Z,2019-01-15T14:56:54Z,MERGED,True,12,12,4,https://github.com/howard0su,Use the array type for strings,2,[],https://github.com/DeviationTX/deviation/pull/588,https://github.com/howard0su,4,https://github.com/DeviationTX/deviation/pull/588#issuecomment-454420144,This makes sure the variables are only in ROM not in RAM.,"i believe using array is almost identical as a #define. Can u try to submit
a PR to see the other Tx? I saw several different tricks has inconsistent
behavior in different Tx build.
…
On Tue, Jan 15, 2019 at 10:53 PM hexfet ***@***.***> wrote:
 What's the advantage of this approach over #defining the names as string
 literals? The type safety doesn't seem too important here, the definitions
 are all in one file, and there's a little size advantage. Made build
 comparisons for t8sg_v2_plus:

 Affected names #defined as string literals in model.h (from ram_save2)
 ROM: 0x08003000 - 0x0803b2f0 = 224.73kB
 RAM: 0x20000000 - 0x20008e0c =  35.51kB

 Names as char array (ram_save2)
 ROM: 0x08003000 - 0x0803b30c = 224.76kB
 RAM: 0x20000000 - 0x20008e14 =  35.52kB

 Names as char * (master at ee03e83)
 ROM: 0x08003000 - 0x0803b344 = 224.82kB
 RAM: 0x20000000 - 0x20008e3c =  35.56kB

 —
 You are receiving this because you modified the open/close state.
 Reply to this email directly, view it on GitHub
 <#588 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRCergw2dOJXmIo9h9dhW-keKjxsiks5vDetXgaJpZM4Z_8E8>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,588,2019-01-14T23:21:13Z,2019-01-15T14:44:59Z,2019-01-15T14:56:54Z,MERGED,True,12,12,4,https://github.com/howard0su,Use the array type for strings,2,[],https://github.com/DeviationTX/deviation/pull/588,https://github.com/PhracturedBlue,5,https://github.com/DeviationTX/deviation/pull/588#issuecomment-454420692,This makes sure the variables are only in ROM not in RAM.,"I don't like using defines.  It makes things harder to debug. Though I'd be interested in looking at the assessment to see why, I think the computer should be able to handle this as long as we declare static properly",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,590,2019-01-15T01:06:36Z,2019-01-17T02:01:56Z,2019-01-17T02:02:00Z,MERGED,True,22,9,6,https://github.com/howard0su,split our mixer limits/failsafe page memory,2,[],https://github.com/DeviationTX/deviation/pull/590,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/590,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,591,2019-01-15T01:27:27Z,2019-01-15T13:45:51Z,2019-01-15T13:45:55Z,MERGED,True,10,0,2,https://github.com/howard0su,Hide permanent timer under knob,1,[],https://github.com/DeviationTX/deviation/pull/591,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/591,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,591,2019-01-15T01:27:27Z,2019-01-15T13:45:51Z,2019-01-15T13:45:55Z,MERGED,True,10,0,2,https://github.com/howard0su,Hide permanent timer under knob,1,[],https://github.com/DeviationTX/deviation/pull/591,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/591#issuecomment-454234766,,4bytes saving for devo7e purposely. :),True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,592,2019-01-15T02:14:12Z,2019-01-15T23:13:37Z,2019-01-15T23:13:41Z,MERGED,True,46,41,4,https://github.com/howard0su,move static variables into struct pagemem,1,[],https://github.com/DeviationTX/deviation/pull/592,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/592,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,592,2019-01-15T02:14:12Z,2019-01-15T23:13:37Z,2019-01-15T23:13:41Z,MERGED,True,46,41,4,https://github.com/howard0su,move static variables into struct pagemem,1,[],https://github.com/DeviationTX/deviation/pull/592,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/592#issuecomment-454248909,,i need figure out how to test permanent timer. I never use this feature before.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,593,2019-01-15T02:15:49Z,2019-01-15T23:11:06Z,2019-01-15T23:11:10Z,MERGED,True,1,1,1,https://github.com/howard0su,Font is always u8,1,[],https://github.com/DeviationTX/deviation/pull/593,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/593,Move it to bottom to avoid unalign other u16 members.,Move it to bottom to avoid unalign other u16 members.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,594,2019-01-15T02:51:16Z,2019-01-18T04:44:04Z,2019-01-18T04:44:08Z,MERGED,True,28,27,1,https://github.com/howard0su,optimize font module for saving RAM,1,[],https://github.com/DeviationTX/deviation/pull/594,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/594,font bits are not needed as global variables. allocate 80 bytes from stack,font bits are not needed as global variables. allocate 80 bytes from stack,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,594,2019-01-15T02:51:16Z,2019-01-18T04:44:04Z,2019-01-18T04:44:08Z,MERGED,True,28,27,1,https://github.com/howard0su,optimize font module for saving RAM,1,[],https://github.com/DeviationTX/deviation/pull/594,https://github.com/PhracturedBlue,2,https://github.com/DeviationTX/deviation/pull/594#issuecomment-454446570,font bits are not needed as global variables. allocate 80 bytes from stack,"I don't like the 2nd iteration of the patch.  either font names are flexible and can be defined by the user, or we shouldn't use them at all.  If we're not going to support dynamic font configuration, than the list of fonts is tx dependent and should be handled that way.  However, I'm not in favor of removing the dynamic font support.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,594,2019-01-15T02:51:16Z,2019-01-18T04:44:04Z,2019-01-18T04:44:08Z,MERGED,True,28,27,1,https://github.com/howard0su,optimize font module for saving RAM,1,[],https://github.com/DeviationTX/deviation/pull/594,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/594#issuecomment-454454013,font bits are not needed as global variables. allocate 80 bytes from stack,"sure. I can only checkin the change to remove font[80] array.

In a long run, here is my understanding to font. first we don‘t really have
different fonts. there is only one font. second, font has the size. so far
we are already using several different size liek 10, 12, 15. third, we can
support font style like bold, underline, italic. today 10normal is really
combine the font size with style as a font name.

Until I got time to get font render engine to support bold/italic via a
single font file, let’s still use the fontname.

PhracturedBlue <notifications@github.com>于2019年1月16日 周三上午12:03写道：
 I don't like the 2nd iteration of the patch. either font names are
 flexible and can be defined by the user, or we shouldn't use them at all.
 If we're not going to support dynamic font configuration, than the list of
 fonts is tx dependent and should be handled that way. However, I'm not in
 favor of removing the dynamic font support.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#594 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRCjOFMCQDgIhJ-X5yZKvXlSV_4pGks5vDfvFgaJpZM4aAI6V>
 .

-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,594,2019-01-15T02:51:16Z,2019-01-18T04:44:04Z,2019-01-18T04:44:08Z,MERGED,True,28,27,1,https://github.com/howard0su,optimize font module for saving RAM,1,[],https://github.com/DeviationTX/deviation/pull/594,https://github.com/PhracturedBlue,4,https://github.com/DeviationTX/deviation/pull/594#issuecomment-454528044,font bits are not needed as global variables. allocate 80 bytes from stack,"I believe there are at least 3 fonts used in a default build (normal, bignum, tiny (for 7e telemetry)
On the devo12 (for example), in theory you could have many more fonts in use if you built custom main-pages.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,594,2019-01-15T02:51:16Z,2019-01-18T04:44:04Z,2019-01-18T04:44:08Z,MERGED,True,28,27,1,https://github.com/howard0su,optimize font module for saving RAM,1,[],https://github.com/DeviationTX/deviation/pull/594,https://github.com/howard0su,5,https://github.com/DeviationTX/deviation/pull/594#issuecomment-455410698,font bits are not needed as global variables. allocate 80 bytes from stack,can I get a review on this?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,595,2019-01-15T04:42:00Z,2019-01-15T04:45:48Z,2019-01-20T13:31:50Z,CLOSED,False,15,16,2,https://github.com/howard0su,Rearrange struct Model to save a little of ROM and RAM,1,[],https://github.com/DeviationTX/deviation/pull/595,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/595,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,595,2019-01-15T04:42:00Z,2019-01-15T04:45:48Z,2019-01-20T13:31:50Z,CLOSED,False,15,16,2,https://github.com/howard0su,Rearrange struct Model to save a little of ROM and RAM,1,[],https://github.com/DeviationTX/deviation/pull/595,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/595#issuecomment-454265870,,seems not consistent in all Tx. some increases the others decrease.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,595,2019-01-15T04:42:00Z,2019-01-15T04:45:48Z,2019-01-20T13:31:50Z,CLOSED,False,15,16,2,https://github.com/howard0su,Rearrange struct Model to save a little of ROM and RAM,1,[],https://github.com/DeviationTX/deviation/pull/595,https://github.com/PhracturedBlue,3,https://github.com/DeviationTX/deviation/pull/595#issuecomment-454379737,,"In theory you can use pahole to see what is going on, but I've never bothered to recompile it to read arm binaries.  I generally run  it on the emu builds, and find it close enough as they are also 32bit w/ 4 byte alignment.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,596,2019-01-15T13:15:16Z,2019-01-16T15:16:16Z,2019-01-17T03:40:54Z,MERGED,True,17,8,2,https://github.com/howard0su,Use right asm syntax for usleep,2,[],https://github.com/DeviationTX/deviation/pull/596,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/596,Tell the compiler we are using input paramter explictly.,Tell the compiler we are using input paramter explictly.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,596,2019-01-15T13:15:16Z,2019-01-16T15:16:16Z,2019-01-17T03:40:54Z,MERGED,True,17,8,2,https://github.com/howard0su,Use right asm syntax for usleep,2,[],https://github.com/DeviationTX/deviation/pull/596,https://github.com/PhracturedBlue,2,https://github.com/DeviationTX/deviation/pull/596#issuecomment-454400140,Tell the compiler we are using input paramter explictly.,Have you manually verified the disassembly is identical with these two modes.  I recall having issues with GCC mucking with my registers and breaking the timing when writing this originally.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,596,2019-01-15T13:15:16Z,2019-01-16T15:16:16Z,2019-01-17T03:40:54Z,MERGED,True,17,8,2,https://github.com/howard0su,Use right asm syntax for usleep,2,[],https://github.com/DeviationTX/deviation/pull/596,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/596#issuecomment-454401069,Tell the compiler we are using input paramter explictly.,"yes.

here you are:
void _usleep(u32 x)
{
    asm volatile
 802f110:    f04f 0118     mov.w    r1, #24
 802f114:    fb00 f001     mul.w    r0, r0, r1
 802f118:    e000          b.n    802f11c <_delaycmp>

0802f11a <_delayloop>:
 802f11a:    3801          subs    r0, #1

0802f11c <_delaycmp>:
 802f11c:    2800          cmp    r0, #0
 802f11e:    d1fc          bne.n    802f11a <_delayloop>
         "" bne _delayloop;""
         :
         : ""r"" (x)
         : ""r1""
         );
}
 802f120:    4770          bx    lr
…
On Tue, Jan 15, 2019 at 9:56 PM PhracturedBlue ***@***.***> wrote:
 Have you manually verified the disassembly is identical with these two
 modes. I recall having issues with GCC mucking with my registers and
 breaking the timing when writing this originally.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#596 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRL8syBmUs45782L8_H0asaFVqeYuks5vDd4BgaJpZM4aA8C0>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,596,2019-01-15T13:15:16Z,2019-01-16T15:16:16Z,2019-01-17T03:40:54Z,MERGED,True,17,8,2,https://github.com/howard0su,Use right asm syntax for usleep,2,[],https://github.com/DeviationTX/deviation/pull/596,https://github.com/howard0su,4,https://github.com/DeviationTX/deviation/pull/596#issuecomment-454683235,Tell the compiler we are using input paramter explictly.,"Interesting, GCC 4.8 generate the following code:
8007356:       f04f 0118       mov.w   r1, #24
800735a:       fb00 f001       mul.w   r0, r0, r1
800735e:       f000 b801       b.w     8007364 <_delaycmp>
8007362:       3801            subs    r0, #1
8007364:       2800            cmp     r0, #0
8007366:       f47f affc       bne.w   8007362 <_delayloop>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
this is different than the code generate by gcc 8.2 which is only 2 bytes instruction: d1fc          bne.n    802f11a <_delayloop>
800736a:       4770            bx      lr",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,596,2019-01-15T13:15:16Z,2019-01-16T15:16:16Z,2019-01-17T03:40:54Z,MERGED,True,17,8,2,https://github.com/howard0su,Use right asm syntax for usleep,2,[],https://github.com/DeviationTX/deviation/pull/596,https://github.com/howard0su,5,https://github.com/DeviationTX/deviation/pull/596#issuecomment-454688292,Tell the compiler we are using input paramter explictly.,Shall I just move the code to common/stm32/delay.c to avoid second copy in at9?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,596,2019-01-15T13:15:16Z,2019-01-16T15:16:16Z,2019-01-17T03:40:54Z,MERGED,True,17,8,2,https://github.com/howard0su,Use right asm syntax for usleep,2,[],https://github.com/DeviationTX/deviation/pull/596,https://github.com/PhracturedBlue,6,https://github.com/DeviationTX/deviation/pull/596#issuecomment-454790176,Tell the compiler we are using input paramter explictly.,"There is no guarantee that all STM32 targets run at 72MHz (all devo targets do).  I think we had one that ran at 60MHz, don't remember which now though.  This code was tuned to provide accurate usec delay, and is frequency dependent.
we could rename it to _usleep_72mhz (and then #define _usleep to use it) and then we could write a _usleep_60mhz if it is actually needed., and then it could be common to all stm32",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,596,2019-01-15T13:15:16Z,2019-01-16T15:16:16Z,2019-01-17T03:40:54Z,MERGED,True,17,8,2,https://github.com/howard0su,Use right asm syntax for usleep,2,[],https://github.com/DeviationTX/deviation/pull/596,https://github.com/howard0su,7,https://github.com/DeviationTX/deviation/pull/596#issuecomment-454791054,Tell the compiler we are using input paramter explictly.,"If that’s the case, we have bug somewhere. I didn’t see we have another
version of usleep.

PhracturedBlue <notifications@github.com>于2019年1月16日 周三下午10:06写道：
 There is no guarantee that all STM32 targets run at 72MHz (all devo
 targets do). I think we had one that ran at 60MHz, don't remember which now
 though. This code was tuned to provide accurate usec delay, and is
 frequency dependent.

 we could rename it to _usleep_72mhz (and then #define _usleep to use it)
 and then we could write a _usleep_60mhz if it is actually needed., and then
 it could be common to all stm32

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#596 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRBPHbzK75XKvKkOtSueQDzqnUvKQks5vDzHJgaJpZM4aA8C0>
 .

-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,596,2019-01-15T13:15:16Z,2019-01-16T15:16:16Z,2019-01-17T03:40:54Z,MERGED,True,17,8,2,https://github.com/howard0su,Use right asm syntax for usleep,2,[],https://github.com/DeviationTX/deviation/pull/596,https://github.com/PhracturedBlue,8,https://github.com/DeviationTX/deviation/pull/596#issuecomment-454797197,Tell the compiler we are using input paramter explictly.,"well...I grep for FREQ_MHz which is the value used to select the target clock shows we only currently use 72MHz clocks, so we probably don't have a bug at the moment.  But we should still do the above because the stm32 sections should not be frequency specific.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,596,2019-01-15T13:15:16Z,2019-01-16T15:16:16Z,2019-01-17T03:40:54Z,MERGED,True,17,8,2,https://github.com/howard0su,Use right asm syntax for usleep,2,[],https://github.com/DeviationTX/deviation/pull/596,https://github.com/howard0su,9,https://github.com/DeviationTX/deviation/pull/596#issuecomment-454808190,Tell the compiler we are using input paramter explictly.,"got u. let's stay as it is and do the combine later?
…
On Wed, Jan 16, 2019 at 10:24 PM PhracturedBlue ***@***.***> wrote:
 well...I grep for FREQ_MHz which is the value used to select the target
 clock shows we only currently use 72MHz clocks, so we probably don't have a
 bug at the moment. But we should still do the above because the stm32
 sections should not be frequency specific.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#596 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRK31g12TnsklWkzz9CS01FPrp5AOks5vDzYlgaJpZM4aA8C0>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,596,2019-01-15T13:15:16Z,2019-01-16T15:16:16Z,2019-01-17T03:40:54Z,MERGED,True,17,8,2,https://github.com/howard0su,Use right asm syntax for usleep,2,[],https://github.com/DeviationTX/deviation/pull/596,https://github.com/howard0su,10,https://github.com/DeviationTX/deviation/pull/596#issuecomment-454848052,Tell the compiler we are using input paramter explictly.,"I made a change a while ago, I believe it cause slow boot-up. So i go back
to the build before that, I got a very interesting finding:
0800b320
<Delay>:
x~~~~~~~~~~~~~~~~~~~~~~
 800b320:       4770            bx      lr

commit 57ab702
Author: Howard Su <howard0su@gmail.com>
Date:   Sat Dec 29 02:47:51 2018 +0800

    Remove Delay, use usleep everywhere (#510)
this means all the functions calls Delay is actual a noop. But seems we
were in that situation for while.... Shall I remove all Delay() calls?
sounds scary...
…
On Wed, Jan 16, 2019 at 10:55 PM Howard Su ***@***.***> wrote:
 got u. let's stay as it is and do the combine later?

 On Wed, Jan 16, 2019 at 10:24 PM PhracturedBlue ***@***.***>
 wrote:

> well...I grep for FREQ_MHz which is the value used to select the target
> clock shows we only currently use 72MHz clocks, so we probably don't have a
> bug at the moment. But we should still do the above because the stm32
> sections should not be frequency specific.
>
> —
> You are receiving this because you authored the thread.
> Reply to this email directly, view it on GitHub
> <#596 (comment)>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/AAuzRK31g12TnsklWkzz9CS01FPrp5AOks5vDzYlgaJpZM4aA8C0>
> .
>


 --
 -Howard


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,596,2019-01-15T13:15:16Z,2019-01-16T15:16:16Z,2019-01-17T03:40:54Z,MERGED,True,17,8,2,https://github.com/howard0su,Use right asm syntax for usleep,2,[],https://github.com/DeviationTX/deviation/pull/596,https://github.com/PhracturedBlue,11,https://github.com/DeviationTX/deviation/pull/596#issuecomment-455009078,Tell the compiler we are using input paramter explictly.,"Delay() is primarily used during screen initialization.  My experience is that these are highly variable per Tx (even for the same model) since it mostly is related to how quickly the display chip can initialize.  Most likely there just aren't enough users using nightlies to notice.  These initialization functions are difficult because you can't just assume that because it works for you, it will work for everyone.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,596,2019-01-15T13:15:16Z,2019-01-16T15:16:16Z,2019-01-17T03:40:54Z,MERGED,True,17,8,2,https://github.com/howard0su,Use right asm syntax for usleep,2,[],https://github.com/DeviationTX/deviation/pull/596,https://github.com/howard0su,12,https://github.com/DeviationTX/deviation/pull/596#issuecomment-455013410,Tell the compiler we are using input paramter explictly.,"I tracked Delay is introduced at 2017/11 by @hexfet . Do we know for sure it is working back to the time? As I checkout the tree to the place before I convert Delay to usleep, I notice Delay doesn't work at all with the old 4.8 compiler.
Here is current consumers of Delay, I am thinking to convert them to usleep but this requires some work to read datasheet as well as testing. cyrf6936.c looks like assume Delay = usleep based on one comment. Others are not clear.
pages/common/_scanner_page.c:        Delay(10);
pages/common/_scanner_page.c:        Delay(15);
protocol/spi/cyrf6936.c:        Delay(100);
protocol/spi/cyrf6936.c:        Delay(100);
protocol/spi/cyrf6936.c:        Delay(200);
protocol/spi/cyrf6936.c:        Delay(100);
protocol/spi/cyrf6936.c:        Delay(100);
protocol/spi/cyrf6936.c:    Delay(1000);
protocol/spi/cyrf6936.c:        Delay(270); //slow channel require 270usec for synthesizer to settle
protocol/spi/cyrf6936.c:            Delay(10);
protocol/spi/cyrf6936.c:            Delay(15); //conversion can occur as often as once every 12us
target/at9/lcd.c:    Delay(100); // must be iheld low for at least 10us
target/common/devo/msc2/lib/stm32f10x_flash.c:/* Delay definition */
target/common/devo/msc2/usb_devo8.c:    Delay(0x2710);
target/common/stm32/spi_switch.c:    Delay(100);
target/common/stm32/spi_switch.c:    Delay(100);
target/common/stm32/spi_switch.c:    Delay(100);
target/common/stm32/spi_switch.c:    Delay(100);
target/devo10/lcd.c:    Delay(5);
target/devo10/lcd.c:    Delay(5);
target/devo10/lcd.c:    Delay(5);
target/devo8/hx8347.c:    Delay(40);
target/devo8/hx8347.c:    Delay(40);
target/devo8/hx8347.c:    Delay(40);
target/devo8/hx8347.c:    Delay(5);
target/devo8/hx8347.c:  Delay(5);
target/devo8/hx8347.c:  Delay(5);
target/devo8/hx8347.c:  Delay(5);
target/devo8/hx8347.c:  Delay(5);
target/devo8/hx8347.c:  Delay(40);
target/devo8/ili9341.c:    Delay(120);
target/devo8/ili9341.c:    Delay(5);
target/devof12e/tw8816.c:            Delay(0x800);
target/devof12e/tw8816.c:    Delay(0x60000);
tests/test_mixer.c:    //Delay (with 0 delay)
tests/test_mixer.c:void TestApplyMixerDelay(CuTest *t)
tests/test_mixer.c:    //Delay",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,596,2019-01-15T13:15:16Z,2019-01-16T15:16:16Z,2019-01-17T03:40:54Z,MERGED,True,17,8,2,https://github.com/howard0su,Use right asm syntax for usleep,2,[],https://github.com/DeviationTX/deviation/pull/596,https://github.com/howard0su,13,https://github.com/DeviationTX/deviation/pull/596#issuecomment-455013715,Tell the compiler we are using input paramter explictly.,My PR #510 seems wrong in terms of assumption Delay=usleep. I may only looked at the code of cyrf6936 code at the time and had that assumption. I want to fix it anyway.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,596,2019-01-15T13:15:16Z,2019-01-16T15:16:16Z,2019-01-17T03:40:54Z,MERGED,True,17,8,2,https://github.com/howard0su,Use right asm syntax for usleep,2,[],https://github.com/DeviationTX/deviation/pull/596,https://github.com/PhracturedBlue,14,https://github.com/DeviationTX/deviation/pull/596#issuecomment-455025696,Tell the compiler we are using input paramter explictly.,"I don't know why you say that Delay is recent. Delay was introduced by me very early in the development (at least as far back as 2012).  It is hard to trace back due to code reorganization over time, but it has been around since the very beginning of Deviation. Maybe it has been modified here or there, but most of the display drivers were written by me many years ago, and I believe Delay() predates usleep as it was meant to simply be a short busy-wait loop which is not precisely timed (to roughly match what we saw the walkera firmware doing).",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,596,2019-01-15T13:15:16Z,2019-01-16T15:16:16Z,2019-01-17T03:40:54Z,MERGED,True,17,8,2,https://github.com/howard0su,Use right asm syntax for usleep,2,[],https://github.com/DeviationTX/deviation/pull/596,https://github.com/howard0su,15,https://github.com/DeviationTX/deviation/pull/596#issuecomment-455030009,Tell the compiler we are using input paramter explictly.,"Oh, I didn't check the history of Delay closely. I just git blame misc.c to
see the latest change. As you said it is just busy loop N loops but the
references has the wrong assumptions here and there. Anyway, let me scan
all the usage of Delay and convert to the usleep with the right parameters.
…
On Thu, Jan 17, 2019 at 11:05 AM PhracturedBlue ***@***.***> wrote:
 I don't know why you say that Delay is recent. Delay was introduced by me
 very early in the development (at least as far back as 2012). It is hard to
 trace back due to code reorganization over time, but it has been around
 since the very beginning of Deviation. Maybe it has been modified here or
 there, but most of the display drivers were written by me many years ago,
 and I believe Delay() predates usleep as it was meant to simply be a short
 busy-wait loop which is not precisely timed (to roughly match what we saw
 the walkera firmware doing).

 —
 You are receiving this because you modified the open/close state.
 Reply to this email directly, view it on GitHub
 <#596 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRCup42uAvGpP8pe7GTfww9owjfQzks5vD-hygaJpZM4aA8C0>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,596,2019-01-15T13:15:16Z,2019-01-16T15:16:16Z,2019-01-17T03:40:54Z,MERGED,True,17,8,2,https://github.com/howard0su,Use right asm syntax for usleep,2,[],https://github.com/DeviationTX/deviation/pull/596,https://github.com/PhracturedBlue,16,https://github.com/DeviationTX/deviation/pull/596#issuecomment-455031308,Tell the compiler we are using input paramter explictly.,That should be fine,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,598,2019-01-15T15:26:12Z,2019-01-18T14:40:02Z,2019-01-18T14:40:07Z,MERGED,True,86,52,4,https://github.com/howard0su,Parse elf file to find out string table,4,[],https://github.com/DeviationTX/deviation/pull/598,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/598,"Parse .o file is not the best approach as some string can get optmized
out in link stage. LTO .o file even doesn't contain a string table.","Parse .o file is not the best approach as some string can get optmized
out in link stage. LTO .o file even doesn't contain a string table.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,598,2019-01-15T15:26:12Z,2019-01-18T14:40:02Z,2019-01-18T14:40:07Z,MERGED,True,86,52,4,https://github.com/howard0su,Parse elf file to find out string table,4,[],https://github.com/DeviationTX/deviation/pull/598,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/598#issuecomment-454432220,"Parse .o file is not the best approach as some string can get optmized
out in link stage. LTO .o file even doesn't contain a string table.",this is one of change created for LTO but in general useful. So I plan to commit them separately.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,598,2019-01-15T15:26:12Z,2019-01-18T14:40:02Z,2019-01-18T14:40:07Z,MERGED,True,86,52,4,https://github.com/howard0su,Parse elf file to find out string table,4,[],https://github.com/DeviationTX/deviation/pull/598,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/598#issuecomment-455426945,"Parse .o file is not the best approach as some string can get optmized
out in link stage. LTO .o file even doesn't contain a string table.",please review.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,599,2019-01-15T15:43:57Z,2019-01-16T15:13:32Z,2019-01-16T15:13:37Z,MERGED,True,400,251,14,https://github.com/howard0su,Move ISR code into a seperate file and make sure it exist in main ROM,4,[],https://github.com/DeviationTX/deviation/pull/599,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/599,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,599,2019-01-15T15:43:57Z,2019-01-16T15:13:32Z,2019-01-16T15:13:37Z,MERGED,True,400,251,14,https://github.com/howard0su,Move ISR code into a seperate file and make sure it exist in main ROM,4,[],https://github.com/DeviationTX/deviation/pull/599,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/599#issuecomment-454439312,,This contains similar change like #487. This is one of the change created for LTO but in general it is useful.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,599,2019-01-15T15:43:57Z,2019-01-16T15:13:32Z,2019-01-16T15:13:37Z,MERGED,True,400,251,14,https://github.com/howard0su,Move ISR code into a seperate file and make sure it exist in main ROM,4,[],https://github.com/DeviationTX/deviation/pull/599,https://github.com/hexfet,3,https://github.com/DeviationTX/deviation/pull/599#issuecomment-454639790,,"Please also change the ISRs in target/common/devo/soft_serial.c, or if you'd like I can make a try.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,599,2019-01-15T15:43:57Z,2019-01-16T15:13:32Z,2019-01-16T15:13:37Z,MERGED,True,400,251,14,https://github.com/howard0su,Move ISR code into a seperate file and make sure it exist in main ROM,4,[],https://github.com/DeviationTX/deviation/pull/599,https://github.com/howard0su,4,https://github.com/DeviationTX/deviation/pull/599#issuecomment-454649102,,@hexfet good catch. I am not sure why I missed this.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,600,2019-01-15T15:55:32Z,2019-01-17T06:07:57Z,2019-01-17T06:08:00Z,MERGED,True,3,3,1,https://github.com/howard0su,Add per file CFLAGS/CXXFLAGS,1,[],https://github.com/DeviationTX/deviation/pull/600,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/600,One example is 'make CFLAGS_clock=xyz' to add xyz as CFLAGS for clock.c.,One example is 'make CFLAGS_clock=xyz' to add xyz as CFLAGS for clock.c.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,600,2019-01-15T15:55:32Z,2019-01-17T06:07:57Z,2019-01-17T06:08:00Z,MERGED,True,3,3,1,https://github.com/howard0su,Add per file CFLAGS/CXXFLAGS,1,[],https://github.com/DeviationTX/deviation/pull/600,https://github.com/PhracturedBlue,2,https://github.com/DeviationTX/deviation/pull/600#issuecomment-454448862,One example is 'make CFLAGS_clock=xyz' to add xyz as CFLAGS for clock.c.,"The patch itself looks fine, but what is theusage plan for this feature?  I'm not sure I want different files compiled with different options.  I can think if some debug/testing cases it might be useful, but I'm not sure there is all that much value.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,600,2019-01-15T15:55:32Z,2019-01-17T06:07:57Z,2019-01-17T06:08:00Z,MERGED,True,3,3,1,https://github.com/howard0su,Add per file CFLAGS/CXXFLAGS,1,[],https://github.com/DeviationTX/deviation/pull/600,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/600#issuecomment-454449445,One example is 'make CFLAGS_clock=xyz' to add xyz as CFLAGS for clock.c.,"it is used to disable LTO for all *_isr.c so interrupt handler is correctly
generated.
…
On Wed, Jan 16, 2019 at 12:09 AM PhracturedBlue ***@***.***> wrote:
 The patch itself looks fine, but what is theusage plan for this feature?
 I'm not sure I want different files compiled with different options. I can
 think if some debug/testing cases it might be useful, but I'm not sure
 there is all that much value.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#600 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRBrmmjheCrN6ixOTcmuyZbA3Vfa6ks5vDf02gaJpZM4aBQF9>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,600,2019-01-15T15:55:32Z,2019-01-17T06:07:57Z,2019-01-17T06:08:00Z,MERGED,True,3,3,1,https://github.com/howard0su,Add per file CFLAGS/CXXFLAGS,1,[],https://github.com/DeviationTX/deviation/pull/600,https://github.com/howard0su,4,https://github.com/DeviationTX/deviation/pull/600#issuecomment-454814150,One example is 'make CFLAGS_clock=xyz' to add xyz as CFLAGS for clock.c.,Can I get this in? I found another usage to configure some macro via Makefile for certain file.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,600,2019-01-15T15:55:32Z,2019-01-17T06:07:57Z,2019-01-17T06:08:00Z,MERGED,True,3,3,1,https://github.com/howard0su,Add per file CFLAGS/CXXFLAGS,1,[],https://github.com/DeviationTX/deviation/pull/600,https://github.com/howard0su,5,https://github.com/DeviationTX/deviation/pull/600#issuecomment-454863210,One example is 'make CFLAGS_clock=xyz' to add xyz as CFLAGS for clock.c.,"Check lto pr . There are use cases in makefile.inc.

PhracturedBlue <notifications@github.com>于2019年1月17日 周四上午1:03写道：
 ***@***.**** approved this pull request.

 I'm ok with this patch. I want to review each use case though, as I don't
 really want to have a lot of these special cases

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#600 (review)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRDaGNFwwXju3gqoH6-nvwqAqAasTks5vD1t9gaJpZM4aBQF9>
 .

-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,601,2019-01-16T01:21:26Z,,2019-01-17T23:14:31Z,OPEN,False,85,89,2,https://github.com/hexfet,Reduce memory usage by changing const strings to string literals.,1,['On Hold'],https://github.com/DeviationTX/deviation/pull/601,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/601,"For the t8sg_v2_plus build:
Names #defined as string literals
ROM: 0x08003000 - 0x0803b2c4 = 224.69kB
RAM: 0x20000000 - 0x20008df8 =  35.49kB
Names as char array (master at e33da01)
ROM: 0x08003000 - 0x0803b34c = 224.82kB
RAM: 0x20000000 - 0x20008e00 =  35.50kB","For the t8sg_v2_plus build:
Names #defined as string literals
ROM: 0x08003000 - 0x0803b2c4 = 224.69kB
RAM: 0x20000000 - 0x20008df8 =  35.49kB
Names as char array (master at e33da01)
ROM: 0x08003000 - 0x0803b34c = 224.82kB
RAM: 0x20000000 - 0x20008e00 =  35.50kB",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,601,2019-01-16T01:21:26Z,,2019-01-17T23:14:31Z,OPEN,False,85,89,2,https://github.com/hexfet,Reduce memory usage by changing const strings to string literals.,1,['On Hold'],https://github.com/DeviationTX/deviation/pull/601,https://github.com/hexfet,2,https://github.com/DeviationTX/deviation/pull/601#issuecomment-454615425,"For the t8sg_v2_plus build:
Names #defined as string literals
ROM: 0x08003000 - 0x0803b2c4 = 224.69kB
RAM: 0x20000000 - 0x20008df8 =  35.49kB
Names as char array (master at e33da01)
ROM: 0x08003000 - 0x0803b34c = 224.82kB
RAM: 0x20000000 - 0x20008e00 =  35.50kB",Started exploring this from curiosity of which approach is best.  This SO page has some interesting discussion.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,601,2019-01-16T01:21:26Z,,2019-01-17T23:14:31Z,OPEN,False,85,89,2,https://github.com/hexfet,Reduce memory usage by changing const strings to string literals.,1,['On Hold'],https://github.com/DeviationTX/deviation/pull/601,https://github.com/PhracturedBlue,3,https://github.com/DeviationTX/deviation/pull/601#issuecomment-454616888,"For the t8sg_v2_plus build:
Names #defined as string literals
ROM: 0x08003000 - 0x0803b2c4 = 224.69kB
RAM: 0x20000000 - 0x20008df8 =  35.49kB
Names as char array (master at e33da01)
ROM: 0x08003000 - 0x0803b34c = 224.82kB
RAM: 0x20000000 - 0x20008e00 =  35.50kB","interesting.  I still don't like this approach, but clearly there is some benefit to it.  I'll be interested in whether we see the same reductions when combined with a newer compiler",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,601,2019-01-16T01:21:26Z,,2019-01-17T23:14:31Z,OPEN,False,85,89,2,https://github.com/hexfet,Reduce memory usage by changing const strings to string literals.,1,['On Hold'],https://github.com/DeviationTX/deviation/pull/601,https://github.com/hexfet,4,https://github.com/DeviationTX/deviation/pull/601#issuecomment-454625520,"For the t8sg_v2_plus build:
Names #defined as string literals
ROM: 0x08003000 - 0x0803b2c4 = 224.69kB
RAM: 0x20000000 - 0x20008df8 =  35.49kB
Names as char array (master at e33da01)
ROM: 0x08003000 - 0x0803b34c = 224.82kB
RAM: 0x20000000 - 0x20008e00 =  35.50kB","Results with latest compiler below.  Seems like the only advantage is size.  Thought it would make the file look cleaner but it doesn't.  Perhaps a typedef would be good for that.  Don't mind to close this and just keep in mind if bytes get short again.
With
arm-none-eabi-gcc (GNU Tools for Arm Embedded Processors 8-2018-q4-major) 8.2.1 20181213 (release)
[gcc-8-branch revision 267074]
Names #defined as string literals (const_to_define)
ROM: 0x08003000 - 0x0803ae2c = 223.54kB
RAM: 0x20000000 - 0x20008e00 =  35.50kB
Names as char array (master at e33da01)
ROM: 0x08003000 - 0x0803aea4 = 223.66kB
RAM: 0x20000000 - 0x20008e00 =  35.50kB",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,601,2019-01-16T01:21:26Z,,2019-01-17T23:14:31Z,OPEN,False,85,89,2,https://github.com/hexfet,Reduce memory usage by changing const strings to string literals.,1,['On Hold'],https://github.com/DeviationTX/deviation/pull/601,https://github.com/howard0su,5,https://github.com/DeviationTX/deviation/pull/601#issuecomment-454628109,"For the t8sg_v2_plus build:
Names #defined as string literals
ROM: 0x08003000 - 0x0803b2c4 = 224.69kB
RAM: 0x20000000 - 0x20008df8 =  35.49kB
Names as char array (master at e33da01)
ROM: 0x08003000 - 0x0803b34c = 224.82kB
RAM: 0x20000000 - 0x20008e00 =  35.50kB",Do u want to try with lto8.2 brach to see the result?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,601,2019-01-16T01:21:26Z,,2019-01-17T23:14:31Z,OPEN,False,85,89,2,https://github.com/hexfet,Reduce memory usage by changing const strings to string literals.,1,['On Hold'],https://github.com/DeviationTX/deviation/pull/601,https://github.com/hexfet,6,https://github.com/DeviationTX/deviation/pull/601#issuecomment-454657902,"For the t8sg_v2_plus build:
Names #defined as string literals
ROM: 0x08003000 - 0x0803b2c4 = 224.69kB
RAM: 0x20000000 - 0x20008df8 =  35.49kB
Names as char array (master at e33da01)
ROM: 0x08003000 - 0x0803b34c = 224.82kB
RAM: 0x20000000 - 0x20008e00 =  35.50kB","lto8.2 + const_to_define
ROM: 0x08003000 - 0x08039830 = 218.05kB
RAM: 0x20000000 - 0x20008d68 =  35.35kB
Please consider an environment variable to disable lto when running make.  It adds significantly to the build time so it will be good to have an option to build without it during development.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,601,2019-01-16T01:21:26Z,,2019-01-17T23:14:31Z,OPEN,False,85,89,2,https://github.com/hexfet,Reduce memory usage by changing const strings to string literals.,1,['On Hold'],https://github.com/DeviationTX/deviation/pull/601,https://github.com/PhracturedBlue,7,https://github.com/DeviationTX/deviation/pull/601#issuecomment-454658497,"For the t8sg_v2_plus build:
Names #defined as string literals
ROM: 0x08003000 - 0x0803b2c4 = 224.69kB
RAM: 0x20000000 - 0x20008df8 =  35.49kB
Names as char array (master at e33da01)
ROM: 0x08003000 - 0x0803b34c = 224.82kB
RAM: 0x20000000 - 0x20008e00 =  35.50kB","not really a discussion for this thread, but that will be challenging for at least the 7e, since we'll likely take advantage of the extra space it provides...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,601,2019-01-16T01:21:26Z,,2019-01-17T23:14:31Z,OPEN,False,85,89,2,https://github.com/hexfet,Reduce memory usage by changing const strings to string literals.,1,['On Hold'],https://github.com/DeviationTX/deviation/pull/601,https://github.com/howard0su,8,https://github.com/DeviationTX/deviation/pull/601#issuecomment-454669818,"For the t8sg_v2_plus build:
Names #defined as string literals
ROM: 0x08003000 - 0x0803b2c4 = 224.69kB
RAM: 0x20000000 - 0x20008df8 =  35.49kB
Names as char array (master at e33da01)
ROM: 0x08003000 - 0x0803b34c = 224.82kB
RAM: 0x20000000 - 0x20008e00 =  35.50kB","sorry, 7e LTO build is not done yet. I didn't get it working....",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,602,2019-01-16T08:26:14Z,2019-01-16T16:42:30Z,2019-01-16T16:42:30Z,CLOSED,False,26,31,2,https://github.com/howard0su,[WIP] Cleanup LCD driver for 128x64x1,2,[],https://github.com/DeviationTX/deviation/pull/602,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/602,"Remove the command which cannot be found in datasheet
Remove delay which is also not mentioned in datasheet
mark some local functions static

Verified on Devo7e 10times on/off, all looks fine.","Remove the command which cannot be found in datasheet
Remove delay which is also not mentioned in datasheet
mark some local functions static

Verified on Devo7e 10times on/off, all looks fine.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,602,2019-01-16T08:26:14Z,2019-01-16T16:42:30Z,2019-01-16T16:42:30Z,CLOSED,False,26,31,2,https://github.com/howard0su,[WIP] Cleanup LCD driver for 128x64x1,2,[],https://github.com/DeviationTX/deviation/pull/602,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/602#issuecomment-454815110,"Remove the command which cannot be found in datasheet
Remove delay which is also not mentioned in datasheet
mark some local functions static

Verified on Devo7e 10times on/off, all looks fine.",We have multi implementation with slight difference. Like to consolidate them to avoid duplicate code.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,602,2019-01-16T08:26:14Z,2019-01-16T16:42:30Z,2019-01-16T16:42:30Z,CLOSED,False,26,31,2,https://github.com/howard0su,[WIP] Cleanup LCD driver for 128x64x1,2,[],https://github.com/DeviationTX/deviation/pull/602,https://github.com/PhracturedBlue,3,https://github.com/DeviationTX/deviation/pull/602#issuecomment-454835632,"Remove the command which cannot be found in datasheet
Remove delay which is also not mentioned in datasheet
mark some local functions static

Verified on Devo7e 10times on/off, all looks fine.","I'm not really in favor of this.  We have seen that the vendors sometimes use alternate sources for the chips for the same tx model.  Just because something works for one tx does not mean it works for all.  the current initialization came from watching the Walkera firmware, and while it may not be optimized, we have confidence that it will work with all their Tx.
As far as moving the code, it would be okay to create a set of display drivers, but this one should be named as 'NT538' or maybe 'TG12864Z' rather than 'lcd'",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,602,2019-01-16T08:26:14Z,2019-01-16T16:42:30Z,2019-01-16T16:42:30Z,CLOSED,False,26,31,2,https://github.com/howard0su,[WIP] Cleanup LCD driver for 128x64x1,2,[],https://github.com/DeviationTX/deviation/pull/602,https://github.com/howard0su,4,https://github.com/DeviationTX/deviation/pull/602#issuecomment-454840739,"Remove the command which cannot be found in datasheet
Remove delay which is also not mentioned in datasheet
mark some local functions static

Verified on Devo7e 10times on/off, all looks fine.","good to know. i will close this for now.
…
On Thu, Jan 17, 2019 at 12:06 AM PhracturedBlue ***@***.***> wrote:
 I'm not really in favor of this. We have seen that the vendors sometimes
 use alternate sources for the chips for the same tx model. Just because
 something works for one tx does not mean it works for all. the current
 initialization came from watching the Walkera firmware, and while it may
 not be optimized, we have confidence that it will work with all their Tx.
 As far as moving the code, it would be okay to create a set of display
 drivers, but this one should be named as 'NT538' or maybe 'TG12864Z' rather
 than 'lcd'

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#602 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRJgtNCDp15N_5oHYUB6CUMJ6KDdkks5vD04ggaJpZM4aCinN>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,602,2019-01-16T08:26:14Z,2019-01-16T16:42:30Z,2019-01-16T16:42:30Z,CLOSED,False,26,31,2,https://github.com/howard0su,[WIP] Cleanup LCD driver for 128x64x1,2,[],https://github.com/DeviationTX/deviation/pull/602,https://github.com/howard0su,5,https://github.com/DeviationTX/deviation/pull/602#issuecomment-454849851,"Remove the command which cannot be found in datasheet
Remove delay which is also not mentioned in datasheet
mark some local functions static

Verified on Devo7e 10times on/off, all looks fine.",still like to change while loop to some usleep call. but not urgent.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,604,2019-01-16T17:06:25Z,2019-01-17T01:16:30Z,2019-01-17T01:16:42Z,MERGED,True,12,5,4,https://github.com/hexfet,Enable SBUS and PXX protocols in modular builds,1,[],https://github.com/DeviationTX/deviation/pull/604,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/604,"With the merge of #599 these protocols now work in modular builds.
No telemetry for PXX due to memory size limitation.","With the merge of #599 these protocols now work in modular builds.
No telemetry for PXX due to memory size limitation.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,604,2019-01-16T17:06:25Z,2019-01-17T01:16:30Z,2019-01-17T01:16:42Z,MERGED,True,12,5,4,https://github.com/hexfet,Enable SBUS and PXX protocols in modular builds,1,[],https://github.com/DeviationTX/deviation/pull/604,https://github.com/hexfet,2,https://github.com/DeviationTX/deviation/pull/604#issuecomment-455005305,"With the merge of #599 these protocols now work in modular builds.
No telemetry for PXX due to memory size limitation.","No, prefer to keep these protocols separate as they are from different origins, unlike dsm2 and dsmx for example.  Just easier to reason about separately.
I do agree that some code is duplicated and it would be good to consolidate that code, but need a way that also works for modular builds.  Maybe moving to the target/common/devo/protocol directory.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,605,2019-01-17T03:44:09Z,2019-01-23T00:44:15Z,2019-01-23T00:44:18Z,MERGED,True,1,1,1,https://github.com/howard0su,use _usleep to accurate delay,3,[],https://github.com/DeviationTX/deviation/pull/605,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/605,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,605,2019-01-17T03:44:09Z,2019-01-23T00:44:15Z,2019-01-23T00:44:18Z,MERGED,True,1,1,1,https://github.com/howard0su,use _usleep to accurate delay,3,[],https://github.com/DeviationTX/deviation/pull/605,https://github.com/PhracturedBlue,2,https://github.com/DeviationTX/deviation/pull/605#issuecomment-455035494,,"It is probably a good idea to actually measure the Delay time on an actual tx (and the usleep time) before changing this.  I am not sure what the equivalency is in reality.  I would not rely on code comments for accuracy.  With a UART, this shold be trivial to do using the systick times which should countdown at 9MHz:
Something like this should work:
volatile uint32_t *systick = (uint32_t *)0xe00e018;
volatile uint32_t *reload = (uint32_t *)0xe00e014;
while(1) {
    uint32_t count = 0;
    unsigned int i = 0;
    for (int i = 0; i < 1000; i++) {
        uint start = systick;
        Delay(100)
        uint32_t end = systick;
        uint32_t delta = end < start ? start - end : start + reload - end; //systick counts down from reload
        count += delta;
    }
    printf(""Cycles: %d\n"", count / 1000);
}

with various values for Delay() or _usleep() (but don't get too close to 1msec since systick resets every millisecond, the interrupts will kick in and mess up the timing;",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,605,2019-01-17T03:44:09Z,2019-01-23T00:44:15Z,2019-01-23T00:44:18Z,MERGED,True,1,1,1,https://github.com/howard0su,use _usleep to accurate delay,3,[],https://github.com/DeviationTX/deviation/pull/605,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/605#issuecomment-455053754,,"What do you think about Delay is actual a Noop now? And the code especially
CYRF code runs well with a noop of delay? I am using nightly build for a
while seems everything fine recently.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,605,2019-01-17T03:44:09Z,2019-01-23T00:44:15Z,2019-01-23T00:44:18Z,MERGED,True,1,1,1,https://github.com/howard0su,use _usleep to accurate delay,3,[],https://github.com/DeviationTX/deviation/pull/605,https://github.com/howard0su,4,https://github.com/DeviationTX/deviation/pull/605#issuecomment-455077258,,"I checkout the revision which I believe it is 5.0 release:
commit 59bc229
Author: PhracturedBlue <rc2012@pblue.org>
Date:   Sat Apr 30 12:51:42 2016 -0700

    Fix LCD_Clear function to be reliable on Devo7e.  Fixes #632

After compile, Delay is still just a ""bx lr"". So if in 5.0, Delay is a
noop, the most safe way to do is remove all the Delay exist in 5.0 release
and revise all the new Delay introduced afterwards.
…
On Thu, Jan 17, 2019 at 2:06 PM Howard Su ***@***.***> wrote:
 What do you think about Delay is actual a Noop now? And the code
 especially CYRF code runs well with a noop of delay? I am using nightly
 build for a while seems everything fine recently.


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,605,2019-01-17T03:44:09Z,2019-01-23T00:44:15Z,2019-01-23T00:44:18Z,MERGED,True,1,1,1,https://github.com/howard0su,use _usleep to accurate delay,3,[],https://github.com/DeviationTX/deviation/pull/605,https://github.com/PhracturedBlue,5,https://github.com/DeviationTX/deviation/pull/605#issuecomment-455170003,,"Verified.  That is quite interesting.  Though the safest thing is to do nothing at all.  Delay doesn't do anything, but it documents where delay might be needed.  As for removing them, they do current;y  provide ~7 cycles of delay (regardless of the number requested).  since each call results in:
movs
bl
bx

there may be cases where that is important, I don't know.  Still, the fact that they've effectively been negated and noone has noticed probably means nothing is likely to care about 7 more cycles.  If you remove them, please use a single pull request removing all of them.  We'll need to try to get as many users as possible to test since it is most likely to affect display initialization.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,605,2019-01-17T03:44:09Z,2019-01-23T00:44:15Z,2019-01-23T00:44:18Z,MERGED,True,1,1,1,https://github.com/howard0su,use _usleep to accurate delay,3,[],https://github.com/DeviationTX/deviation/pull/605,https://github.com/howard0su,6,https://github.com/DeviationTX/deviation/pull/605#issuecomment-455179178,,"yeah, this is quite interesting. I think lots of delay looks to me is just
for safe. there is no such requirement or requirement based on datasheet is
very small. For example, CYRF chip datasheet says minimum reset signal is
only 10ns wide, the code is delay 100.
…
On Thu, Jan 17, 2019 at 9:22 PM PhracturedBlue ***@***.***> wrote:
 Verified. That is quite interesting. Though the safest thing is to do
 nothing at all. Delay doesn't do anything, but it documents where delay
 might be needed. As for removing them, they do current;y provide ~7 cycles
 of delay (regardless of the number requested). since each call results in:

 movs
 bl
 bx

 there may be cases where that is important, I don't know. Still, the fact
 that they've effectively been negated and noone has noticed probably means
 nothing is likely to care about 7 more cycles. If you remove them, please
 use a single pull request removing all of them. We'll need to try to get as
 many users as possible to test since it is most likely to affect display
 initialization.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#605 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRFYTbB7dcfjx_-lFH65ZZAUoVeh1ks5vEHkEgaJpZM4aEZ3G>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,605,2019-01-17T03:44:09Z,2019-01-23T00:44:15Z,2019-01-23T00:44:18Z,MERGED,True,1,1,1,https://github.com/howard0su,use _usleep to accurate delay,3,[],https://github.com/DeviationTX/deviation/pull/605,https://github.com/howard0su,7,https://github.com/DeviationTX/deviation/pull/605#issuecomment-455179872,,"doing nothing option is basically revert the change I made. Since that
change convert delay to usleep, which actually changes the things. The
noticeable impact is boot-up time is longer than before. this is how I
start to look at this issue. My suggestion
1. revert my change
2. Work on each driver/each file one by one. change Delay to usleep after
really understand the needs of delay.
…
On Thu, Jan 17, 2019 at 9:52 PM Howard Su ***@***.***> wrote:
 yeah, this is quite interesting. I think lots of delay looks to me is just
 for safe. there is no such requirement or requirement based on datasheet is
 very small. For example, CYRF chip datasheet says minimum reset signal is
 only 10ns wide, the code is delay 100.

 On Thu, Jan 17, 2019 at 9:22 PM PhracturedBlue ***@***.***>
 wrote:

> Verified. That is quite interesting. Though the safest thing is to do
> nothing at all. Delay doesn't do anything, but it documents where delay
> might be needed. As for removing them, they do current;y provide ~7 cycles
> of delay (regardless of the number requested). since each call results in:
>
> movs
> bl
> bx
>
> there may be cases where that is important, I don't know. Still, the fact
> that they've effectively been negated and noone has noticed probably means
> nothing is likely to care about 7 more cycles. If you remove them, please
> use a single pull request removing all of them. We'll need to try to get as
> many users as possible to test since it is most likely to affect display
> initialization.
>
> —
> You are receiving this because you authored the thread.
> Reply to this email directly, view it on GitHub
> <#605 (comment)>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/AAuzRFYTbB7dcfjx_-lFH65ZZAUoVeh1ks5vEHkEgaJpZM4aEZ3G>
> .
>


 --
 -Howard


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,605,2019-01-17T03:44:09Z,2019-01-23T00:44:15Z,2019-01-23T00:44:18Z,MERGED,True,1,1,1,https://github.com/howard0su,use _usleep to accurate delay,3,[],https://github.com/DeviationTX/deviation/pull/605,https://github.com/howard0su,8,https://github.com/DeviationTX/deviation/pull/605#issuecomment-455180376,,"forgot one thing, even usleep in the code today, shall we revise them to
see if they are really needed especially in the performance critical code
path? Do we have delay in such code path?
…
On Thu, Jan 17, 2019 at 9:55 PM Howard Su ***@***.***> wrote:
 doing nothing option is basically revert the change I made. Since that
 change convert delay to usleep, which actually changes the things. The
 noticeable impact is boot-up time is longer than before. this is how I
 start to look at this issue. My suggestion
 1. revert my change
 2. Work on each driver/each file one by one. change Delay to usleep after
 really understand the needs of delay.

 On Thu, Jan 17, 2019 at 9:52 PM Howard Su ***@***.***> wrote:

> yeah, this is quite interesting. I think lots of delay looks to me is
> just for safe. there is no such requirement or requirement based on
> datasheet is very small. For example, CYRF chip datasheet says minimum
> reset signal is only 10ns wide, the code is delay 100.
>
> On Thu, Jan 17, 2019 at 9:22 PM PhracturedBlue ***@***.***>
> wrote:
>
>> Verified. That is quite interesting. Though the safest thing is to do
>> nothing at all. Delay doesn't do anything, but it documents where delay
>> might be needed. As for removing them, they do current;y provide ~7 cycles
>> of delay (regardless of the number requested). since each call results in:
>>
>> movs
>> bl
>> bx
>>
>> there may be cases where that is important, I don't know. Still, the
>> fact that they've effectively been negated and noone has noticed probably
>> means nothing is likely to care about 7 more cycles. If you remove them,
>> please use a single pull request removing all of them. We'll need to try to
>> get as many users as possible to test since it is most likely to affect
>> display initialization.
>>
>> —
>> You are receiving this because you authored the thread.
>> Reply to this email directly, view it on GitHub
>> <#605 (comment)>,
>> or mute the thread
>> <https://github.com/notifications/unsubscribe-auth/AAuzRFYTbB7dcfjx_-lFH65ZZAUoVeh1ks5vEHkEgaJpZM4aEZ3G>
>> .
>>
>
>
> --
> -Howard
>


 --
 -Howard


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,605,2019-01-17T03:44:09Z,2019-01-23T00:44:15Z,2019-01-23T00:44:18Z,MERGED,True,1,1,1,https://github.com/howard0su,use _usleep to accurate delay,3,[],https://github.com/DeviationTX/deviation/pull/605,https://github.com/PhracturedBlue,9,https://github.com/DeviationTX/deviation/pull/605#issuecomment-455185315,,"I like your proposal.  I looked at the usleep calls, and they are almost all related to RF chip timing.  There are no CYRF or CC2500 clones I'm aware of, so we can just follow the datasheet for those.  the nrf is a bit harder since you can't really rely on data sheets for it due to all the clones.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,605,2019-01-17T03:44:09Z,2019-01-23T00:44:15Z,2019-01-23T00:44:18Z,MERGED,True,1,1,1,https://github.com/howard0su,use _usleep to accurate delay,3,[],https://github.com/DeviationTX/deviation/pull/605,https://github.com/howard0su,10,https://github.com/DeviationTX/deviation/pull/605#issuecomment-455831668,,please review this as this change still applies.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,606,2019-01-17T14:06:16Z,2019-01-22T04:19:50Z,2019-01-22T04:19:51Z,MERGED,True,8,4,1,https://github.com/PhracturedBlue,Enable scrollbar touch on bar instead of just arrows,1,[],https://github.com/DeviationTX/deviation/pull/606,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/606,"This should make it a little easier to hit the scrollbar by allowing touch anywhere on the bar, instead of just on the arrows","This should make it a little easier to hit the scrollbar by allowing touch anywhere on the bar, instead of just on the arrows",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,606,2019-01-17T14:06:16Z,2019-01-22T04:19:50Z,2019-01-22T04:19:51Z,MERGED,True,8,4,1,https://github.com/PhracturedBlue,Enable scrollbar touch on bar instead of just arrows,1,[],https://github.com/DeviationTX/deviation/pull/606,https://github.com/PhracturedBlue,2,https://github.com/DeviationTX/deviation/pull/606#issuecomment-455187194,"This should make it a little easier to hit the scrollbar by allowing touch anywhere on the bar, instead of just on the arrows",weird.  I wonder why the ROM grew for that change on the 10/7e.  I expected the conditional to be optimized out.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,606,2019-01-17T14:06:16Z,2019-01-22T04:19:50Z,2019-01-22T04:19:51Z,MERGED,True,8,4,1,https://github.com/PhracturedBlue,Enable scrollbar touch on bar instead of just arrows,1,[],https://github.com/DeviationTX/deviation/pull/606,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/606#issuecomment-455211949,"This should make it a little easier to hit the scrollbar by allowing touch anywhere on the bar, instead of just on the arrows",I believe your calculation is not based on all const. but about 30 bytes are totally fine.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,606,2019-01-17T14:06:16Z,2019-01-22T04:19:50Z,2019-01-22T04:19:51Z,MERGED,True,8,4,1,https://github.com/PhracturedBlue,Enable scrollbar touch on bar instead of just arrows,1,[],https://github.com/DeviationTX/deviation/pull/606,https://github.com/PhracturedBlue,4,https://github.com/DeviationTX/deviation/pull/606#issuecomment-455226966,"This should make it a little easier to hit the scrollbar by allowing touch anywhere on the bar, instead of just on the arrows","I was not expecting devo7e/devo10 to call GUI_TouchScrollbar() at all.  I don't think it is actually possible to use a scrollbar on non-touch display (visulaization only).
It looks like it is used because we use GUITouchRelease() in _handle_modalbuttons_devo10 (which is fine) but the scrollbar sould probably be disabled on non-touch displays.
I'll probably merge this and make a separate PR to deal with that.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,606,2019-01-17T14:06:16Z,2019-01-22T04:19:50Z,2019-01-22T04:19:51Z,MERGED,True,8,4,1,https://github.com/PhracturedBlue,Enable scrollbar touch on bar instead of just arrows,1,[],https://github.com/DeviationTX/deviation/pull/606,https://github.com/howard0su,5,https://github.com/DeviationTX/deviation/pull/606#issuecomment-455230605,"This should make it a little easier to hit the scrollbar by allowing touch anywhere on the bar, instead of just on the arrows","I believe that should save over 100 bytes.
…
On Fri, Jan 18, 2019 at 12:03 AM PhracturedBlue ***@***.***> wrote:
 I was not expecting devo7e/devo10 to call GUI_TouchScrollbar() at all. I
 don't think it is actually possible to use a scrollbar on non-touch display
 (visulaization only).

 It looks like it is used because we use GUITouchRelease() in
 _handle_modalbuttons_devo10 (which is fine) but the scrollbar sould
 probably be disabled on non-touch displays.

 I'll probably merge this and make a separate PR to deal with that.

 —
 You are receiving this because you commented.
 Reply to this email directly, view it on GitHub
 <#606 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRLh9fkntGdtUlU-XZZKrFoS8ctQyks5vEJ7lgaJpZM4aFV4R>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,607,2019-01-17T15:22:21Z,2019-01-28T02:23:43Z,2019-01-30T10:54:06Z,MERGED,True,97,17,3,https://github.com/howard0su,Support CN/TW/RU on f12e-XMS,3,[],https://github.com/DeviationTX/deviation/pull/607,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/607,"Use Font RAM to dynamic upload the font to display localized character
Refactor out font implementation to be shared","Use Font RAM to dynamic upload the font to display localized character
Refactor out font implementation to be shared",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,607,2019-01-17T15:22:21Z,2019-01-28T02:23:43Z,2019-01-30T10:54:06Z,MERGED,True,97,17,3,https://github.com/howard0su,Support CN/TW/RU on f12e-XMS,3,[],https://github.com/DeviationTX/deviation/pull/607,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/607#issuecomment-455210463,"Use Font RAM to dynamic upload the font to display localized character
Refactor out font implementation to be shared",Need test in real Tx. Only verified in emulator.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,607,2019-01-17T15:22:21Z,2019-01-28T02:23:43Z,2019-01-30T10:54:06Z,MERGED,True,97,17,3,https://github.com/howard0su,Support CN/TW/RU on f12e-XMS,3,[],https://github.com/DeviationTX/deviation/pull/607,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/607#issuecomment-455235106,"Use Font RAM to dynamic upload the font to display localized character
Refactor out font implementation to be shared",please give feedback on where to put font code.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,607,2019-01-17T15:22:21Z,2019-01-28T02:23:43Z,2019-01-30T10:54:06Z,MERGED,True,97,17,3,https://github.com/howard0su,Support CN/TW/RU on f12e-XMS,3,[],https://github.com/DeviationTX/deviation/pull/607,https://github.com/PhracturedBlue,4,https://github.com/DeviationTX/deviation/pull/607#issuecomment-455243390,"Use Font RAM to dynamic upload the font to display localized character
Refactor out font implementation to be shared",why move it out of screen/?  either in the root of screen/ or in a screen/common directory,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,607,2019-01-17T15:22:21Z,2019-01-28T02:23:43Z,2019-01-30T10:54:06Z,MERGED,True,97,17,3,https://github.com/howard0su,Support CN/TW/RU on f12e-XMS,3,[],https://github.com/DeviationTX/deviation/pull/607,https://github.com/PhracturedBlue,5,https://github.com/DeviationTX/deviation/pull/607#issuecomment-455244025,"Use Font RAM to dynamic upload the font to display localized character
Refactor out font implementation to be shared","This also probably needs to be 3 PRs:

move font code
cleanup static functions
add makefile changes for F12e-XMS",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,607,2019-01-17T15:22:21Z,2019-01-28T02:23:43Z,2019-01-30T10:54:06Z,MERGED,True,97,17,3,https://github.com/howard0su,Support CN/TW/RU on f12e-XMS,3,[],https://github.com/DeviationTX/deviation/pull/607,https://github.com/howard0su,6,https://github.com/DeviationTX/deviation/pull/607#issuecomment-455248586,"Use Font RAM to dynamic upload the font to display localized character
Refactor out font implementation to be shared","did you miss the change that lcd driver of f12e need font code?
…
On Fri, Jan 18, 2019 at 12:48 AM PhracturedBlue ***@***.***> wrote:
 This also probably needs to be 3 PRs:

    1. move font code
    2. cleanup static functions
    3. add makefile changes for F12e-XMS

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#607 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRL1EXuIXopSYz97odRDbKJocvD-gks5vEKlTgaJpZM4aF0zw>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,607,2019-01-17T15:22:21Z,2019-01-28T02:23:43Z,2019-01-30T10:54:06Z,MERGED,True,97,17,3,https://github.com/howard0su,Support CN/TW/RU on f12e-XMS,3,[],https://github.com/DeviationTX/deviation/pull/607,https://github.com/PhracturedBlue,7,https://github.com/DeviationTX/deviation/pull/607#issuecomment-455259867,"Use Font RAM to dynamic upload the font to display localized character
Refactor out font implementation to be shared","no...I think the f12e font loading is in the right place.  Though I don't like hardcoding the font to 12normal.
Also, we should probably keep track of characters displayed on the current page and allow overwriting an unused character if the buffer is full and we need to display a character.  That could be added in the future though.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,607,2019-01-17T15:22:21Z,2019-01-28T02:23:43Z,2019-01-30T10:54:06Z,MERGED,True,97,17,3,https://github.com/howard0su,Support CN/TW/RU on f12e-XMS,3,[],https://github.com/DeviationTX/deviation/pull/607,https://github.com/howard0su,8,https://github.com/DeviationTX/deviation/pull/607#issuecomment-455378564,"Use Font RAM to dynamic upload the font to display localized character
Refactor out font implementation to be shared","I current clear the cache for every screen clear. it is simple and stupid
solution but I tested RU for every page, seems working well. RU has much
longer string compare to CN/TW.

Just wondering, why there is JA translation for UI but there is doc
translation.
…
On Fri, Jan 18, 2019 at 1:33 AM PhracturedBlue ***@***.***> wrote:
 no...I think the f12e font loading is in the right place. Though I don't
 like hardcoding the font to 12normal.

 Also, we should probably keep track of characters displayed on the current
 page and allow overwriting an unused character if the buffer is full and we
 need to display a character. That could be added in the future though.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#607 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRHD_1PkCruFo3yXf_9_yuLCi_gp1ks5vELP4gaJpZM4aF0zw>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,607,2019-01-17T15:22:21Z,2019-01-28T02:23:43Z,2019-01-30T10:54:06Z,MERGED,True,97,17,3,https://github.com/howard0su,Support CN/TW/RU on f12e-XMS,3,[],https://github.com/DeviationTX/deviation/pull/607,https://github.com/howard0su,9,https://github.com/DeviationTX/deviation/pull/607#issuecomment-455757747,"Use Font RAM to dynamic upload the font to display localized character
Refactor out font implementation to be shared",verified on the real Tx. Read for merge after code review.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,607,2019-01-17T15:22:21Z,2019-01-28T02:23:43Z,2019-01-30T10:54:06Z,MERGED,True,97,17,3,https://github.com/howard0su,Support CN/TW/RU on f12e-XMS,3,[],https://github.com/DeviationTX/deviation/pull/607,https://github.com/howard0su,10,https://github.com/DeviationTX/deviation/pull/607#issuecomment-455918601,"Use Font RAM to dynamic upload the font to display localized character
Refactor out font implementation to be shared","You said you reset the cache when the page changes, bt the only place I see loadedchars[] being reset is in LCD_Init, and that is only called from main() as far as I know

You got mislead by the diff. the reset is happened in LCD_Clear not LCD_Init.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,607,2019-01-17T15:22:21Z,2019-01-28T02:23:43Z,2019-01-30T10:54:06Z,MERGED,True,97,17,3,https://github.com/howard0su,Support CN/TW/RU on f12e-XMS,3,[],https://github.com/DeviationTX/deviation/pull/607,https://github.com/howard0su,11,https://github.com/DeviationTX/deviation/pull/607#issuecomment-456279300,"Use Font RAM to dynamic upload the font to display localized character
Refactor out font implementation to be shared",can u checkin first? Let's sort out font name problem later. I am thinking add something to the display.ini says default font?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,607,2019-01-17T15:22:21Z,2019-01-28T02:23:43Z,2019-01-30T10:54:06Z,MERGED,True,97,17,3,https://github.com/howard0su,Support CN/TW/RU on f12e-XMS,3,[],https://github.com/DeviationTX/deviation/pull/607,https://github.com/PhracturedBlue,12,https://github.com/DeviationTX/deviation/pull/607#issuecomment-456401419,"Use Font RAM to dynamic upload the font to display localized character
Refactor out font implementation to be shared","No, I think we should fix this before merge.
There is already DEFAULT_FONT which should be available.  why can't you use that?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,607,2019-01-17T15:22:21Z,2019-01-28T02:23:43Z,2019-01-30T10:54:06Z,MERGED,True,97,17,3,https://github.com/howard0su,Support CN/TW/RU on f12e-XMS,3,[],https://github.com/DeviationTX/deviation/pull/607,https://github.com/howard0su,13,https://github.com/DeviationTX/deviation/pull/607#issuecomment-456436114,"Use Font RAM to dynamic upload the font to display localized character
Refactor out font implementation to be shared","The font in display doesn't maintain the font name. it is just a font index. The font name is maintained by lcd_string.c. however text/lcd_string.c doesn't maintain it either. it just always returns 1.
However lcd_string doesn't have knowledge on what font is used as default font. I can modify the display.ini to keep just one font. however if user change it even not change [font-default], the logic is likely broken.
So this is not that simple problem. I am thinking introducing a new configure just for text based Tx which says extension_font=""12normal"".",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,607,2019-01-17T15:22:21Z,2019-01-28T02:23:43Z,2019-01-30T10:54:06Z,MERGED,True,97,17,3,https://github.com/howard0su,Support CN/TW/RU on f12e-XMS,3,[],https://github.com/DeviationTX/deviation/pull/607,https://github.com/PhracturedBlue,14,https://github.com/DeviationTX/deviation/pull/607#issuecomment-456480715,"Use Font RAM to dynamic upload the font to display localized character
Refactor out font implementation to be shared",i'd rather properly fix display.ini to store the data needed from [font-default] than to add some special override case,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,607,2019-01-17T15:22:21Z,2019-01-28T02:23:43Z,2019-01-30T10:54:06Z,MERGED,True,97,17,3,https://github.com/howard0su,Support CN/TW/RU on f12e-XMS,3,[],https://github.com/DeviationTX/deviation/pull/607,https://github.com/PhracturedBlue,15,https://github.com/DeviationTX/deviation/pull/607#issuecomment-456498245,"Use Font RAM to dynamic upload the font to display localized character
Refactor out font implementation to be shared",Isn't FONT_GetFromString already called?  This seems like what you need to capture the value you want,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,607,2019-01-17T15:22:21Z,2019-01-28T02:23:43Z,2019-01-30T10:54:06Z,MERGED,True,97,17,3,https://github.com/howard0su,Support CN/TW/RU on f12e-XMS,3,[],https://github.com/DeviationTX/deviation/pull/607,https://github.com/howard0su,16,https://github.com/DeviationTX/deviation/pull/607#issuecomment-456661844,"Use Font RAM to dynamic upload the font to display localized character
Refactor out font implementation to be shared","FONT_GetFromString

yes. it is used when parsing ini file. The challenge is that we don't know if this is a font for default or others. I don't want to capture all the font names here. need think of a solution here. maybe add the index of labeldesc to the prototype.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,607,2019-01-17T15:22:21Z,2019-01-28T02:23:43Z,2019-01-30T10:54:06Z,MERGED,True,97,17,3,https://github.com/howard0su,Support CN/TW/RU on f12e-XMS,3,[],https://github.com/DeviationTX/deviation/pull/607,https://github.com/howard0su,17,https://github.com/DeviationTX/deviation/pull/607#issuecomment-457471772,"Use Font RAM to dynamic upload the font to display localized character
Refactor out font implementation to be shared",@PhracturedBlue please check if you like this approach.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,607,2019-01-17T15:22:21Z,2019-01-28T02:23:43Z,2019-01-30T10:54:06Z,MERGED,True,97,17,3,https://github.com/howard0su,Support CN/TW/RU on f12e-XMS,3,[],https://github.com/DeviationTX/deviation/pull/607,https://github.com/howard0su,18,https://github.com/DeviationTX/deviation/pull/607#issuecomment-457969554,"Use Font RAM to dynamic upload the font to display localized character
Refactor out font implementation to be shared",Ready to merge?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,607,2019-01-17T15:22:21Z,2019-01-28T02:23:43Z,2019-01-30T10:54:06Z,MERGED,True,97,17,3,https://github.com/howard0su,Support CN/TW/RU on f12e-XMS,3,[],https://github.com/DeviationTX/deviation/pull/607,https://github.com/PhracturedBlue,19,https://github.com/DeviationTX/deviation/pull/607#issuecomment-457974243,"Use Font RAM to dynamic upload the font to display localized character
Refactor out font implementation to be shared","Yes, much better.  Thanks",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,607,2019-01-17T15:22:21Z,2019-01-28T02:23:43Z,2019-01-30T10:54:06Z,MERGED,True,97,17,3,https://github.com/howard0su,Support CN/TW/RU on f12e-XMS,3,[],https://github.com/DeviationTX/deviation/pull/607,https://github.com/vladislavy,20,https://github.com/DeviationTX/deviation/pull/607#issuecomment-458043598,"Use Font RAM to dynamic upload the font to display localized character
Refactor out font implementation to be shared","devof12e-XMS emulator have very small russian font aligned to the top, other languages have normal size font. Untranslated items have normal size font.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,607,2019-01-17T15:22:21Z,2019-01-28T02:23:43Z,2019-01-30T10:54:06Z,MERGED,True,97,17,3,https://github.com/howard0su,Support CN/TW/RU on f12e-XMS,3,[],https://github.com/DeviationTX/deviation/pull/607,https://github.com/howard0su,21,https://github.com/DeviationTX/deviation/pull/607#issuecomment-458114692,"Use Font RAM to dynamic upload the font to display localized character
Refactor out font implementation to be shared",@vladislavy I need check. I didn’t do anything special thing for Russian. It may be caused by the difference in the Russian fonts in 12normal.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,607,2019-01-17T15:22:21Z,2019-01-28T02:23:43Z,2019-01-30T10:54:06Z,MERGED,True,97,17,3,https://github.com/howard0su,Support CN/TW/RU on f12e-XMS,3,[],https://github.com/DeviationTX/deviation/pull/607,https://github.com/vladislavy,22,https://github.com/DeviationTX/deviation/pull/607#issuecomment-458138458,"Use Font RAM to dynamic upload the font to display localized character
Refactor out font implementation to be shared","Moreover, it breaks toggle icons (RAM font, c>=0x300). See Model menu->Main page config->Toggle(1,2,3,4). Now page is empty and toggle icons can't be displayed.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,607,2019-01-17T15:22:21Z,2019-01-28T02:23:43Z,2019-01-30T10:54:06Z,MERGED,True,97,17,3,https://github.com/howard0su,Support CN/TW/RU on f12e-XMS,3,[],https://github.com/DeviationTX/deviation/pull/607,https://github.com/PhracturedBlue,23,https://github.com/DeviationTX/deviation/pull/607#issuecomment-458142941,"Use Font RAM to dynamic upload the font to display localized character
Refactor out font implementation to be shared","My F12e doesn't have XMS so I can't test it, but what you see in the emulator can't be what the actual Tx shows as the font would be sub-pixel.  Something is definitely fishy, with the emulator font handling on the f12e.  I don't remember where I got the fonts used on the F12e emultor,  the cyrillic font we see with the Russian language looks like it is the 12normal font (unscaled), and the larger font used for Latin characters looks like a true-type font.  For instance, the 'T' should have serifs on the 12Normal font.
My guess is that the zoom isn't being handled properly in the f12e-emu for the font characters",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,607,2019-01-17T15:22:21Z,2019-01-28T02:23:43Z,2019-01-30T10:54:06Z,MERGED,True,97,17,3,https://github.com/howard0su,Support CN/TW/RU on f12e-XMS,3,[],https://github.com/DeviationTX/deviation/pull/607,https://github.com/vladislavy,24,https://github.com/DeviationTX/deviation/pull/607#issuecomment-458146217,"Use Font RAM to dynamic upload the font to display localized character
Refactor out font implementation to be shared","Right now we can use 0 - 0x2FF window for characters. We can map used UNICODE character set to 0 - 0x2FF window. And we need change u32 TW8816_map_char(u32 c) for SUPPORT_MULTI_LANGUAGE = 1, right now it suitable for SUPPORT_MULTI_LANGUAGE = 0 only.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,607,2019-01-17T15:22:21Z,2019-01-28T02:23:43Z,2019-01-30T10:54:06Z,MERGED,True,97,17,3,https://github.com/howard0su,Support CN/TW/RU on f12e-XMS,3,[],https://github.com/DeviationTX/deviation/pull/607,https://github.com/vladislavy,25,https://github.com/DeviationTX/deviation/pull/607#issuecomment-458149342,"Use Font RAM to dynamic upload the font to display localized character
Refactor out font implementation to be shared","By the way, if anybody need I can provide sample source code for TW8816 (TW8816_New.zip).",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,607,2019-01-17T15:22:21Z,2019-01-28T02:23:43Z,2019-01-30T10:54:06Z,MERGED,True,97,17,3,https://github.com/howard0su,Support CN/TW/RU on f12e-XMS,3,[],https://github.com/DeviationTX/deviation/pull/607,https://github.com/vladislavy,26,https://github.com/DeviationTX/deviation/pull/607#issuecomment-458183521,"Use Font RAM to dynamic upload the font to display localized character
Refactor out font implementation to be shared","The all places where used 0x300 window (earlier it was 0x100):
0acae2f",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,607,2019-01-17T15:22:21Z,2019-01-28T02:23:43Z,2019-01-30T10:54:06Z,MERGED,True,97,17,3,https://github.com/howard0su,Support CN/TW/RU on f12e-XMS,3,[],https://github.com/DeviationTX/deviation/pull/607,https://github.com/howard0su,27,https://github.com/DeviationTX/deviation/pull/607#issuecomment-458404893,"Use Font RAM to dynamic upload the font to display localized character
Refactor out font implementation to be shared","Thank you. I tried to allocate a display window dynamically so I can use it to display USB log, display scanner UI. However I failed to do so. The API is there but it is really a NOOP today. If you have idea, maybe you want to give it a try.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,607,2019-01-17T15:22:21Z,2019-01-28T02:23:43Z,2019-01-30T10:54:06Z,MERGED,True,97,17,3,https://github.com/howard0su,Support CN/TW/RU on f12e-XMS,3,[],https://github.com/DeviationTX/deviation/pull/607,https://github.com/howard0su,28,https://github.com/DeviationTX/deviation/pull/607#issuecomment-458550934,"Use Font RAM to dynamic upload the font to display localized character
Refactor out font implementation to be shared","@vladislavy PR #659 is submitted to fix toggle icon.
For Russian font problem, I believe it is caused by the fact that the Russian in 12normal font is pretty narrow. In F12E, the size of character is fixed which is 12x18. I believe this is cause of the Russian display problem.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,607,2019-01-17T15:22:21Z,2019-01-28T02:23:43Z,2019-01-30T10:54:06Z,MERGED,True,97,17,3,https://github.com/howard0su,Support CN/TW/RU on f12e-XMS,3,[],https://github.com/DeviationTX/deviation/pull/607,https://github.com/vladislavy,29,https://github.com/DeviationTX/deviation/pull/607#issuecomment-458581285,"Use Font RAM to dynamic upload the font to display localized character
Refactor out font implementation to be shared","Now I can see toggle icons. For me, with emulator Russian GUI looks much better with ""15normal"" font, it more close to 18. I changed Makefile.inc and config.ini to test it. But untranslated items and numbers looks different and bold.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,607,2019-01-17T15:22:21Z,2019-01-28T02:23:43Z,2019-01-30T10:54:06Z,MERGED,True,97,17,3,https://github.com/howard0su,Support CN/TW/RU on f12e-XMS,3,[],https://github.com/DeviationTX/deviation/pull/607,https://github.com/howard0su,30,https://github.com/DeviationTX/deviation/pull/607#issuecomment-458582802,"Use Font RAM to dynamic upload the font to display localized character
Refactor out font implementation to be shared","We may need consider to use a different size of font for Russian in 12
normal? @PB

…
On Wednesday, January 30, 2019, vladislavy ***@***.***> wrote:
 Now I can see toggle icons. For me, with emulator Russian GUI looks much
 better with ""15normal"" font, it more close to 18. I changed Makefile.inc
 and config.ini to test it. But untranslated items and numbers looks
 different and bold.

 —
 You are receiving this because you modified the open/close state.
 Reply to this email directly, view it on GitHub
 <#607 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRKhstQy1HAO9uxI4AtM2wMNHil5xks5vIGfAgaJpZM4aF0zw>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,607,2019-01-17T15:22:21Z,2019-01-28T02:23:43Z,2019-01-30T10:54:06Z,MERGED,True,97,17,3,https://github.com/howard0su,Support CN/TW/RU on f12e-XMS,3,[],https://github.com/DeviationTX/deviation/pull/607,https://github.com/PhracturedBlue,31,https://github.com/DeviationTX/deviation/pull/607#issuecomment-458596879,"Use Font RAM to dynamic upload the font to display localized character
Refactor out font implementation to be shared","This doesn't make much sense to me.  Is this an emulator only issue or actually on the F12e?  I'd like to see what the actual screen looks like on a F12E with the russian font.  I'll have to look and see if I can upgrade my F12E, but before deciding on an action here, I need to understand if it is an emulator-only issue or not.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,607,2019-01-17T15:22:21Z,2019-01-28T02:23:43Z,2019-01-30T10:54:06Z,MERGED,True,97,17,3,https://github.com/howard0su,Support CN/TW/RU on f12e-XMS,3,[],https://github.com/DeviationTX/deviation/pull/607,https://github.com/vladislavy,32,https://github.com/DeviationTX/deviation/pull/607#issuecomment-458602343,"Use Font RAM to dynamic upload the font to display localized character
Refactor out font implementation to be shared",With F12E actual screen looks completely equally to simulator.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,607,2019-01-17T15:22:21Z,2019-01-28T02:23:43Z,2019-01-30T10:54:06Z,MERGED,True,97,17,3,https://github.com/howard0su,Support CN/TW/RU on f12e-XMS,3,[],https://github.com/DeviationTX/deviation/pull/607,https://github.com/PhracturedBlue,33,https://github.com/DeviationTX/deviation/pull/607#issuecomment-458665820,"Use Font RAM to dynamic upload the font to display localized character
Refactor out font implementation to be shared","we should probably build a fixed-width font for the F12E.  The 12normal font is not an ideal font for a fixed-width display.  I'll take a  crack at fixing this, but can only test in the emulator for now.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,607,2019-01-17T15:22:21Z,2019-01-28T02:23:43Z,2019-01-30T10:54:06Z,MERGED,True,97,17,3,https://github.com/howard0su,Support CN/TW/RU on f12e-XMS,3,[],https://github.com/DeviationTX/deviation/pull/607,https://github.com/PhracturedBlue,34,https://github.com/DeviationTX/deviation/pull/607#issuecomment-458703642,"Use Font RAM to dynamic upload the font to display localized character
Refactor out font implementation to be shared","Here is an 18bold font that should look pretty close to the F12E default font:
https://www.dropbox.com/s/ki0jolsawvbat59/18bold-v0.1.zip?dl=0
It uses Ubuntu Mono for non CJK characters (and uses the smaller firefly-12 for CJK characters).  It would likely need to be cleaned up further ast it is currently 3MB in size, so just consider this to be a test to see what you think",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,607,2019-01-17T15:22:21Z,2019-01-28T02:23:43Z,2019-01-30T10:54:06Z,MERGED,True,97,17,3,https://github.com/howard0su,Support CN/TW/RU on f12e-XMS,3,[],https://github.com/DeviationTX/deviation/pull/607,https://github.com/vladislavy,35,https://github.com/DeviationTX/deviation/pull/607#issuecomment-458811629,"Use Font RAM to dynamic upload the font to display localized character
Refactor out font implementation to be shared","Something wrong with transforming font chars to TW8816 format, 18bold font about two pixels lower than TW8816 font (cut bottom of chars), but 12normal and 15normal fonts aligned to the top. The 18bold font in common looks similar to TW8816 font.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,607,2019-01-17T15:22:21Z,2019-01-28T02:23:43Z,2019-01-30T10:54:06Z,MERGED,True,97,17,3,https://github.com/howard0su,Support CN/TW/RU on f12e-XMS,3,[],https://github.com/DeviationTX/deviation/pull/607,https://github.com/vladislavy,36,https://github.com/DeviationTX/deviation/pull/607#issuecomment-458813865,"Use Font RAM to dynamic upload the font to display localized character
Refactor out font implementation to be shared","I need change FONT_ASCENT to 13 and FONT_DESCENT to 5 to get it aligned with TW8816 font.
FONTBOUNDINGBOX 18 18 0 -5
STARTPROPERTIES 8
FONT_NAME ""18bold""
FONT_ASCENT 13
FONT_DESCENT 5",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,607,2019-01-17T15:22:21Z,2019-01-28T02:23:43Z,2019-01-30T10:54:06Z,MERGED,True,97,17,3,https://github.com/howard0su,Support CN/TW/RU on f12e-XMS,3,[],https://github.com/DeviationTX/deviation/pull/607,https://github.com/howard0su,37,https://github.com/DeviationTX/deviation/pull/607#issuecomment-458826740,"Use Font RAM to dynamic upload the font to display localized character
Refactor out font implementation to be shared","Change the following line to zero starts:
for (int y = 3; y < height + 3; ++y)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,607,2019-01-17T15:22:21Z,2019-01-28T02:23:43Z,2019-01-30T10:54:06Z,MERGED,True,97,17,3,https://github.com/howard0su,Support CN/TW/RU on f12e-XMS,3,[],https://github.com/DeviationTX/deviation/pull/607,https://github.com/vladislavy,38,https://github.com/DeviationTX/deviation/pull/607#issuecomment-458849314,"Use Font RAM to dynamic upload the font to display localized character
Refactor out font implementation to be shared","It help with 18bold font, but 12normal and 15normal fonts aligned to the top even more.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,607,2019-01-17T15:22:21Z,2019-01-28T02:23:43Z,2019-01-30T10:54:06Z,MERGED,True,97,17,3,https://github.com/howard0su,Support CN/TW/RU on f12e-XMS,3,[],https://github.com/DeviationTX/deviation/pull/607,https://github.com/vladislavy,39,https://github.com/DeviationTX/deviation/pull/607#issuecomment-458893056,"Use Font RAM to dynamic upload the font to display localized character
Refactor out font implementation to be shared","With this change all fonts (12normal, 15normal, 18bold) are vertically aligned quite well:
    // Data is right aligned, drawn top to bottom
    for (int y = (CHAR_HEIGHT - height) >= 0 ? (CHAR_HEIGHT - height) : 0; y < CHAR_HEIGHT; y++)
    {",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,608,2019-01-17T15:24:39Z,2019-01-17T17:26:05Z,2019-01-17T17:26:10Z,MERGED,True,17,3,3,https://github.com/howard0su,"Revert ""Remove Delay, use usleep everywhere (#510)""",1,[],https://github.com/DeviationTX/deviation/pull/608,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/608,This reverts commit 57ab702.,This reverts commit 57ab702.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,608,2019-01-17T15:24:39Z,2019-01-17T17:26:05Z,2019-01-17T17:26:10Z,MERGED,True,17,3,3,https://github.com/howard0su,"Revert ""Remove Delay, use usleep everywhere (#510)""",1,[],https://github.com/DeviationTX/deviation/pull/608,https://github.com/PhracturedBlue,2,https://github.com/DeviationTX/deviation/pull/608#issuecomment-455236352,This reverts commit 57ab702.,"We really should add a code linter to prevent trailing spaces and whatnot in the 1st place.  I don't like having them, and random changes make git-blame harder to deal with.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,608,2019-01-17T15:24:39Z,2019-01-17T17:26:05Z,2019-01-17T17:26:10Z,MERGED,True,17,3,3,https://github.com/howard0su,"Revert ""Remove Delay, use usleep everywhere (#510)""",1,[],https://github.com/DeviationTX/deviation/pull/608,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/608#issuecomment-455251019,This reverts commit 57ab702.,"i agree. i link lint.
…
On Fri, Jan 18, 2019 at 12:43 AM TheRealMoeder ***@***.***> wrote:
 ***@***.**** approved this pull request.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#608 (review)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRNMasDbgsrY6VCWcgTnM7bLcYswwks5vEKg8gaJpZM4aF1nA>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,609,2019-01-18T01:31:56Z,2019-01-18T04:42:49Z,2019-01-18T04:42:52Z,MERGED,True,2,1,1,https://github.com/howard0su,Increase coverage of CI build,2,[],https://github.com/DeviationTX/deviation/pull/609,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/609,Add devof7 into CI.,Add devof7 into CI.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,611,2019-01-18T07:12:25Z,2019-01-18T13:31:49Z,2019-01-20T13:34:00Z,MERGED,True,8,8,2,https://github.com/howard0su,Add static to the font code in emu,1,[],https://github.com/DeviationTX/deviation/pull/611,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/611,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,612,2019-01-18T08:24:58Z,2019-01-18T14:38:49Z,2019-01-18T14:38:49Z,MERGED,True,188,133,3,https://github.com/howard0su,Move font code to a seperate file under screen/,2,[],https://github.com/DeviationTX/deviation/pull/612,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/612,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,613,2019-01-19T00:39:41Z,2019-01-21T21:24:13Z,2019-01-25T23:06:54Z,MERGED,True,69,32,11,https://github.com/hexfet,"Improve ""Tx power"" user interface",11,[],https://github.com/DeviationTX/deviation/pull/613,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/613,"Changes the Tx power setting in model config to show the power levels specific to the radio in use.  Also expands the radio module concept to external modules (R9M).  Open to ideas for improvement.
One change in the UI is that the Tx power setting may change when scrolling through protocols when crossing the boundary between one radio and the next (the ordering of protocols in protocol.h has protocols grouped by radio).  For example, if WFLY (cyrf radio) is selected with Tx power set to 150mW, changing the protocol to Flysky (a7105) will change the power to 100mW because that is the max for a7105.  Then changing back to WFLY, the Tx power will stay at 100mW because that's the 7th power level for both cyrf and a7105.  To address this the radio and it's power setting could be separated from Model into an associated Radio struct, but that seems like overkill.  It doesn't seem a big issue since once a protocol is chosen it's not often changed.
When reading existing model files a power setting may be encountered that is no longer valid for the radio used by the model's protocol.  For backwards compatibility in these cases the power is set to the maximum power for the model's radio.
The R9M is a bit awkward because the power settings depend on the selected radio mode (FCC or EU). I squeezed both values into the Tx power field.  Still thinking on a nice way to handle this.","Changes the Tx power setting in model config to show the power levels specific to the radio in use.  Also expands the radio module concept to external modules (R9M).  Open to ideas for improvement.
One change in the UI is that the Tx power setting may change when scrolling through protocols when crossing the boundary between one radio and the next (the ordering of protocols in protocol.h has protocols grouped by radio).  For example, if WFLY (cyrf radio) is selected with Tx power set to 150mW, changing the protocol to Flysky (a7105) will change the power to 100mW because that is the max for a7105.  Then changing back to WFLY, the Tx power will stay at 100mW because that's the 7th power level for both cyrf and a7105.  To address this the radio and it's power setting could be separated from Model into an associated Radio struct, but that seems like overkill.  It doesn't seem a big issue since once a protocol is chosen it's not often changed.
When reading existing model files a power setting may be encountered that is no longer valid for the radio used by the model's protocol.  For backwards compatibility in these cases the power is set to the maximum power for the model's radio.
The R9M is a bit awkward because the power settings depend on the selected radio mode (FCC or EU). I squeezed both values into the Tx power field.  Still thinking on a nice way to handle this.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,613,2019-01-19T00:39:41Z,2019-01-21T21:24:13Z,2019-01-25T23:06:54Z,MERGED,True,69,32,11,https://github.com/hexfet,"Improve ""Tx power"" user interface",11,[],https://github.com/DeviationTX/deviation/pull/613,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/613#issuecomment-455741365,"Changes the Tx power setting in model config to show the power levels specific to the radio in use.  Also expands the radio module concept to external modules (R9M).  Open to ideas for improvement.
One change in the UI is that the Tx power setting may change when scrolling through protocols when crossing the boundary between one radio and the next (the ordering of protocols in protocol.h has protocols grouped by radio).  For example, if WFLY (cyrf radio) is selected with Tx power set to 150mW, changing the protocol to Flysky (a7105) will change the power to 100mW because that is the max for a7105.  Then changing back to WFLY, the Tx power will stay at 100mW because that's the 7th power level for both cyrf and a7105.  To address this the radio and it's power setting could be separated from Model into an associated Radio struct, but that seems like overkill.  It doesn't seem a big issue since once a protocol is chosen it's not often changed.
When reading existing model files a power setting may be encountered that is no longer valid for the radio used by the model's protocol.  For backwards compatibility in these cases the power is set to the maximum power for the model's radio.
The R9M is a bit awkward because the power settings depend on the selected radio mode (FCC or EU). I squeezed both values into the Tx power field.  Still thinking on a nice way to handle this.","I feel Tx power setting should move to per protocol setting. We don't have protocol setting today but we can introduce one. every time we load a protocol, we load the corresponding setting. This will also enable us not lost the other protocol prop when switch the protocols, where two protocols share a setting with the same name.
We already had UI for the protocol configuration in Model selection. It is not not too much work to extend it.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,613,2019-01-19T00:39:41Z,2019-01-21T21:24:13Z,2019-01-25T23:06:54Z,MERGED,True,69,32,11,https://github.com/hexfet,"Improve ""Tx power"" user interface",11,[],https://github.com/DeviationTX/deviation/pull/613,https://github.com/hexfet,3,https://github.com/DeviationTX/deviation/pull/613#issuecomment-455788225,"Changes the Tx power setting in model config to show the power levels specific to the radio in use.  Also expands the radio module concept to external modules (R9M).  Open to ideas for improvement.
One change in the UI is that the Tx power setting may change when scrolling through protocols when crossing the boundary between one radio and the next (the ordering of protocols in protocol.h has protocols grouped by radio).  For example, if WFLY (cyrf radio) is selected with Tx power set to 150mW, changing the protocol to Flysky (a7105) will change the power to 100mW because that is the max for a7105.  Then changing back to WFLY, the Tx power will stay at 100mW because that's the 7th power level for both cyrf and a7105.  To address this the radio and it's power setting could be separated from Model into an associated Radio struct, but that seems like overkill.  It doesn't seem a big issue since once a protocol is chosen it's not often changed.
When reading existing model files a power setting may be encountered that is no longer valid for the radio used by the model's protocol.  For backwards compatibility in these cases the power is set to the maximum power for the model's radio.
The R9M is a bit awkward because the power settings depend on the selected radio mode (FCC or EU). I squeezed both values into the Tx power field.  Still thinking on a nice way to handle this.","After sleeping on it I think it's better to keep the Tx power in the model.  One reason is because the same protocol is often used for multiple models.  The popular tiny whoop indoor quads come with Frsky or Flysky built-in for example.  I have both indoor and outdoor helis on dsmx, and the models have different power settings.  Second reason is it would be too much of a breaking change.  No way to stay backwards compatible, with different power levels per model.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,613,2019-01-19T00:39:41Z,2019-01-21T21:24:13Z,2019-01-25T23:06:54Z,MERGED,True,69,32,11,https://github.com/hexfet,"Improve ""Tx power"" user interface",11,[],https://github.com/DeviationTX/deviation/pull/613,https://github.com/TheRealMoeder,4,https://github.com/DeviationTX/deviation/pull/613#issuecomment-455789062,"Changes the Tx power setting in model config to show the power levels specific to the radio in use.  Also expands the radio module concept to external modules (R9M).  Open to ideas for improvement.
One change in the UI is that the Tx power setting may change when scrolling through protocols when crossing the boundary between one radio and the next (the ordering of protocols in protocol.h has protocols grouped by radio).  For example, if WFLY (cyrf radio) is selected with Tx power set to 150mW, changing the protocol to Flysky (a7105) will change the power to 100mW because that is the max for a7105.  Then changing back to WFLY, the Tx power will stay at 100mW because that's the 7th power level for both cyrf and a7105.  To address this the radio and it's power setting could be separated from Model into an associated Radio struct, but that seems like overkill.  It doesn't seem a big issue since once a protocol is chosen it's not often changed.
When reading existing model files a power setting may be encountered that is no longer valid for the radio used by the model's protocol.  For backwards compatibility in these cases the power is set to the maximum power for the model's radio.
The R9M is a bit awkward because the power settings depend on the selected radio mode (FCC or EU). I squeezed both values into the Tx power field.  Still thinking on a nice way to handle this.",I agree. What about always setting maximum power when scrolling through protocols for safety and consistency reasons?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,613,2019-01-19T00:39:41Z,2019-01-21T21:24:13Z,2019-01-25T23:06:54Z,MERGED,True,69,32,11,https://github.com/hexfet,"Improve ""Tx power"" user interface",11,[],https://github.com/DeviationTX/deviation/pull/613,https://github.com/hexfet,5,https://github.com/DeviationTX/deviation/pull/613#issuecomment-455892007,"Changes the Tx power setting in model config to show the power levels specific to the radio in use.  Also expands the radio module concept to external modules (R9M).  Open to ideas for improvement.
One change in the UI is that the Tx power setting may change when scrolling through protocols when crossing the boundary between one radio and the next (the ordering of protocols in protocol.h has protocols grouped by radio).  For example, if WFLY (cyrf radio) is selected with Tx power set to 150mW, changing the protocol to Flysky (a7105) will change the power to 100mW because that is the max for a7105.  Then changing back to WFLY, the Tx power will stay at 100mW because that's the 7th power level for both cyrf and a7105.  To address this the radio and it's power setting could be separated from Model into an associated Radio struct, but that seems like overkill.  It doesn't seem a big issue since once a protocol is chosen it's not often changed.
When reading existing model files a power setting may be encountered that is no longer valid for the radio used by the model's protocol.  For backwards compatibility in these cases the power is set to the maximum power for the model's radio.
The R9M is a bit awkward because the power settings depend on the selected radio mode (FCC or EU). I squeezed both values into the Tx power field.  Still thinking on a nice way to handle this.",Good suggestion.  Updated to set power to radio maximum when protocol is changed.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,613,2019-01-19T00:39:41Z,2019-01-21T21:24:13Z,2019-01-25T23:06:54Z,MERGED,True,69,32,11,https://github.com/hexfet,"Improve ""Tx power"" user interface",11,[],https://github.com/DeviationTX/deviation/pull/613,https://github.com/TheRealMoeder,6,https://github.com/DeviationTX/deviation/pull/613#issuecomment-456177006,"Changes the Tx power setting in model config to show the power levels specific to the radio in use.  Also expands the radio module concept to external modules (R9M).  Open to ideas for improvement.
One change in the UI is that the Tx power setting may change when scrolling through protocols when crossing the boundary between one radio and the next (the ordering of protocols in protocol.h has protocols grouped by radio).  For example, if WFLY (cyrf radio) is selected with Tx power set to 150mW, changing the protocol to Flysky (a7105) will change the power to 100mW because that is the max for a7105.  Then changing back to WFLY, the Tx power will stay at 100mW because that's the 7th power level for both cyrf and a7105.  To address this the radio and it's power setting could be separated from Model into an associated Radio struct, but that seems like overkill.  It doesn't seem a big issue since once a protocol is chosen it's not often changed.
When reading existing model files a power setting may be encountered that is no longer valid for the radio used by the model's protocol.  For backwards compatibility in these cases the power is set to the maximum power for the model's radio.
The R9M is a bit awkward because the power settings depend on the selected radio mode (FCC or EU). I squeezed both values into the Tx power field.  Still thinking on a nice way to handle this.",Either reduced strings or numbers is fine with me :),True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,613,2019-01-19T00:39:41Z,2019-01-21T21:24:13Z,2019-01-25T23:06:54Z,MERGED,True,69,32,11,https://github.com/hexfet,"Improve ""Tx power"" user interface",11,[],https://github.com/DeviationTX/deviation/pull/613,https://github.com/TheRealMoeder,7,https://github.com/DeviationTX/deviation/pull/613#issuecomment-456193959,"Changes the Tx power setting in model config to show the power levels specific to the radio in use.  Also expands the radio module concept to external modules (R9M).  Open to ideas for improvement.
One change in the UI is that the Tx power setting may change when scrolling through protocols when crossing the boundary between one radio and the next (the ordering of protocols in protocol.h has protocols grouped by radio).  For example, if WFLY (cyrf radio) is selected with Tx power set to 150mW, changing the protocol to Flysky (a7105) will change the power to 100mW because that is the max for a7105.  Then changing back to WFLY, the Tx power will stay at 100mW because that's the 7th power level for both cyrf and a7105.  To address this the radio and it's power setting could be separated from Model into an associated Radio struct, but that seems like overkill.  It doesn't seem a big issue since once a protocol is chosen it's not often changed.
When reading existing model files a power setting may be encountered that is no longer valid for the radio used by the model's protocol.  For backwards compatibility in these cases the power is set to the maximum power for the model's radio.
The R9M is a bit awkward because the power settings depend on the selected radio mode (FCC or EU). I squeezed both values into the Tx power field.  Still thinking on a nice way to handle this.",Can you do a final rebase before merge? I‘m interested in the ROM cost  now,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,613,2019-01-19T00:39:41Z,2019-01-21T21:24:13Z,2019-01-25T23:06:54Z,MERGED,True,69,32,11,https://github.com/hexfet,"Improve ""Tx power"" user interface",11,[],https://github.com/DeviationTX/deviation/pull/613,https://github.com/hexfet,8,https://github.com/DeviationTX/deviation/pull/613#issuecomment-456197689,"Changes the Tx power setting in model config to show the power levels specific to the radio in use.  Also expands the radio module concept to external modules (R9M).  Open to ideas for improvement.
One change in the UI is that the Tx power setting may change when scrolling through protocols when crossing the boundary between one radio and the next (the ordering of protocols in protocol.h has protocols grouped by radio).  For example, if WFLY (cyrf radio) is selected with Tx power set to 150mW, changing the protocol to Flysky (a7105) will change the power to 100mW because that is the max for a7105.  Then changing back to WFLY, the Tx power will stay at 100mW because that's the 7th power level for both cyrf and a7105.  To address this the radio and it's power setting could be separated from Model into an associated Radio struct, but that seems like overkill.  It doesn't seem a big issue since once a protocol is chosen it's not often changed.
When reading existing model files a power setting may be encountered that is no longer valid for the radio used by the model's protocol.  For backwards compatibility in these cases the power is set to the maximum power for the model's radio.
The R9M is a bit awkward because the power settings depend on the selected radio mode (FCC or EU). I squeezed both values into the Tx power field.  Still thinking on a nice way to handle this.",Rebased.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,613,2019-01-19T00:39:41Z,2019-01-21T21:24:13Z,2019-01-25T23:06:54Z,MERGED,True,69,32,11,https://github.com/hexfet,"Improve ""Tx power"" user interface",11,[],https://github.com/DeviationTX/deviation/pull/613,https://github.com/TheRealMoeder,9,https://github.com/DeviationTX/deviation/pull/613#issuecomment-456202346,"Changes the Tx power setting in model config to show the power levels specific to the radio in use.  Also expands the radio module concept to external modules (R9M).  Open to ideas for improvement.
One change in the UI is that the Tx power setting may change when scrolling through protocols when crossing the boundary between one radio and the next (the ordering of protocols in protocol.h has protocols grouped by radio).  For example, if WFLY (cyrf radio) is selected with Tx power set to 150mW, changing the protocol to Flysky (a7105) will change the power to 100mW because that is the max for a7105.  Then changing back to WFLY, the Tx power will stay at 100mW because that's the 7th power level for both cyrf and a7105.  To address this the radio and it's power setting could be separated from Model into an associated Radio struct, but that seems like overkill.  It doesn't seem a big issue since once a protocol is chosen it's not often changed.
When reading existing model files a power setting may be encountered that is no longer valid for the radio used by the model's protocol.  For backwards compatibility in these cases the power is set to the maximum power for the model's radio.
The R9M is a bit awkward because the power settings depend on the selected radio mode (FCC or EU). I squeezed both values into the Tx power field.  Still thinking on a nice way to handle this.","Thanks, I think it‘s adequate now.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,613,2019-01-19T00:39:41Z,2019-01-21T21:24:13Z,2019-01-25T23:06:54Z,MERGED,True,69,32,11,https://github.com/hexfet,"Improve ""Tx power"" user interface",11,[],https://github.com/DeviationTX/deviation/pull/613,https://github.com/TheRealMoeder,10,https://github.com/DeviationTX/deviation/pull/613#issuecomment-457344419,"Changes the Tx power setting in model config to show the power levels specific to the radio in use.  Also expands the radio module concept to external modules (R9M).  Open to ideas for improvement.
One change in the UI is that the Tx power setting may change when scrolling through protocols when crossing the boundary between one radio and the next (the ordering of protocols in protocol.h has protocols grouped by radio).  For example, if WFLY (cyrf radio) is selected with Tx power set to 150mW, changing the protocol to Flysky (a7105) will change the power to 100mW because that is the max for a7105.  Then changing back to WFLY, the Tx power will stay at 100mW because that's the 7th power level for both cyrf and a7105.  To address this the radio and it's power setting could be separated from Model into an associated Radio struct, but that seems like overkill.  It doesn't seem a big issue since once a protocol is chosen it's not often changed.
When reading existing model files a power setting may be encountered that is no longer valid for the radio used by the model's protocol.  For backwards compatibility in these cases the power is set to the maximum power for the model's radio.
The R9M is a bit awkward because the power settings depend on the selected radio mode (FCC or EU). I squeezed both values into the Tx power field.  Still thinking on a nice way to handle this.",Shouldn‘t we move power selection below protocol selection within the menu to avoid confusion? Just thought of that when I translated the manual...,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,613,2019-01-19T00:39:41Z,2019-01-21T21:24:13Z,2019-01-25T23:06:54Z,MERGED,True,69,32,11,https://github.com/hexfet,"Improve ""Tx power"" user interface",11,[],https://github.com/DeviationTX/deviation/pull/613,https://github.com/hexfet,11,https://github.com/DeviationTX/deviation/pull/613#issuecomment-457747626,"Changes the Tx power setting in model config to show the power levels specific to the radio in use.  Also expands the radio module concept to external modules (R9M).  Open to ideas for improvement.
One change in the UI is that the Tx power setting may change when scrolling through protocols when crossing the boundary between one radio and the next (the ordering of protocols in protocol.h has protocols grouped by radio).  For example, if WFLY (cyrf radio) is selected with Tx power set to 150mW, changing the protocol to Flysky (a7105) will change the power to 100mW because that is the max for a7105.  Then changing back to WFLY, the Tx power will stay at 100mW because that's the 7th power level for both cyrf and a7105.  To address this the radio and it's power setting could be separated from Model into an associated Radio struct, but that seems like overkill.  It doesn't seem a big issue since once a protocol is chosen it's not often changed.
When reading existing model files a power setting may be encountered that is no longer valid for the radio used by the model's protocol.  For backwards compatibility in these cases the power is set to the maximum power for the model's radio.
The R9M is a bit awkward because the power settings depend on the selected radio mode (FCC or EU). I squeezed both values into the Tx power field.  Still thinking on a nice way to handle this.","I agree and considered it but didn't make the change for a few reasons:

Didn't want to mix GUI changes with this PR
Other fields on the page should probably be moved also, like PPM In.  I'd put protocol right under name.
Most folks are using the nightly as they would an official release and this would be a surprise UI change. After next release would be a good time to revisit.
Don't think it's a big issue for regular users - protocol for a model is not often changed.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,613,2019-01-19T00:39:41Z,2019-01-21T21:24:13Z,2019-01-25T23:06:54Z,MERGED,True,69,32,11,https://github.com/hexfet,"Improve ""Tx power"" user interface",11,[],https://github.com/DeviationTX/deviation/pull/613,https://github.com/PhracturedBlue,12,https://github.com/DeviationTX/deviation/pull/613#issuecomment-457765600,"Changes the Tx power setting in model config to show the power levels specific to the radio in use.  Also expands the radio module concept to external modules (R9M).  Open to ideas for improvement.
One change in the UI is that the Tx power setting may change when scrolling through protocols when crossing the boundary between one radio and the next (the ordering of protocols in protocol.h has protocols grouped by radio).  For example, if WFLY (cyrf radio) is selected with Tx power set to 150mW, changing the protocol to Flysky (a7105) will change the power to 100mW because that is the max for a7105.  Then changing back to WFLY, the Tx power will stay at 100mW because that's the 7th power level for both cyrf and a7105.  To address this the radio and it's power setting could be separated from Model into an associated Radio struct, but that seems like overkill.  It doesn't seem a big issue since once a protocol is chosen it's not often changed.
When reading existing model files a power setting may be encountered that is no longer valid for the radio used by the model's protocol.  For backwards compatibility in these cases the power is set to the maximum power for the model's radio.
The R9M is a bit awkward because the power settings depend on the selected radio mode (FCC or EU). I squeezed both values into the Tx power field.  Still thinking on a nice way to handle this.","The reason it is like it is was that originally I expected users with many models using the same protocol (i.e. how everyone has flown RC from the dawn of time) so setting protocol would be a rare event.  The rise of the cheap heli/quad, the standardization on just a few Tx chips, the birth of the multi-module, and the amazing work you guys have been doing to support all the different protocols, means that I think the usage has changed drastically.  I agree with everything @hexfet has said.  Let's get a release out and then you can go to town on the GUI.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,614,2019-01-19T07:04:57Z,2019-01-20T01:22:44Z,2019-02-25T12:01:55Z,CLOSED,False,35,3,1,https://github.com/howard0su,Improve stack analyze script,2,[],https://github.com/DeviationTX/deviation/pull/614,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/614,"Fix call cost. ARM call doesn't use stack
Add the call chain for PAGE_XXXInit/Event/Exit functions","Fix call cost. ARM call doesn't use stack
Add the call chain for PAGE_XXXInit/Event/Exit functions",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,614,2019-01-19T07:04:57Z,2019-01-20T01:22:44Z,2019-02-25T12:01:55Z,CLOSED,False,35,3,1,https://github.com/howard0su,Improve stack analyze script,2,[],https://github.com/DeviationTX/deviation/pull/614,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/614#issuecomment-455829099,"Fix call cost. ARM call doesn't use stack
Add the call chain for PAGE_XXXInit/Event/Exit functions","do you want me to integrate your change or I can close this one and you
submit it?
…
On Sun, Jan 20, 2019 at 9:14 AM PhracturedBlue ***@***.***> wrote:
 ***@***.**** commented on this pull request.
 ------------------------------

 In utils/stm32stack.pl
 <#614 (comment)>:

 > +
 +	if ($from =~ /^PAGE_Exit@/)
 +	{
 +		foreach (keys %call_graph) {
 +			$call_graph{$from}->{$_} = 1 if /^PAGE_.+Exit@/;
 +		}
 +	}
 +
 +	if ($from =~ /^PAGE_Event@/)
 +	{
 +		foreach (keys %call_graph) {
 +			$call_graph{$from}->{$_} = 1 if /^PAGE_.+Event@/;
 +		}
 +	}
 +}
 +
  # Create fake edges and nodes to account for dynamic behaviour.

 I have cleaned it up and put it here:
 https://gist.github.com/PhracturedBlue/3b3f0dd8825b85910249de726d99e326

 Seems to work ok for me

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#614 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRM-VNvSpkG83UAqm9To22kgbB4cHks5vE8LagaJpZM4aJANW>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,615,2019-01-19T14:33:06Z,2019-01-20T16:29:20Z,2019-01-20T16:29:20Z,MERGED,True,34457,9396,32,https://github.com/PhracturedBlue,[WIP] Get translations from transifex,11,[],https://github.com/DeviationTX/deviation/pull/615,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/615,"This pull request will enable using Transifex to do string translations for the transmitter strings.

 Support reading .po files in extract_strings.pl
 Convert build to use .po files
 Seed initial po files based on lang.xx files
 support using transifex client to upload/download translations
 Extract and upload strings to Transifex during travis build
 Download strings from Transifex and merge into repo during Travis cron build
 Upload current translations to Transifex","This pull request will enable using Transifex to do string translations for the transmitter strings.

 Support reading .po files in extract_strings.pl
 Convert build to use .po files
 Seed initial po files based on lang.xx files
 support using transifex client to upload/download translations
 Extract and upload strings to Transifex during travis build
 Download strings from Transifex and merge into repo during Travis cron build
 Upload current translations to Transifex",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,615,2019-01-19T14:33:06Z,2019-01-20T16:29:20Z,2019-01-20T16:29:20Z,MERGED,True,34457,9396,32,https://github.com/PhracturedBlue,[WIP] Get translations from transifex,11,[],https://github.com/DeviationTX/deviation/pull/615,https://github.com/PhracturedBlue,2,https://github.com/DeviationTX/deviation/pull/615#issuecomment-455880504,"This pull request will enable using Transifex to do string translations for the transmitter strings.

 Support reading .po files in extract_strings.pl
 Convert build to use .po files
 Seed initial po files based on lang.xx files
 support using transifex client to upload/download translations
 Extract and upload strings to Transifex during travis build
 Download strings from Transifex and merge into repo during Travis cron build
 Upload current translations to Transifex",I'm going to defer the travis-ci changes until I refactor the travis-ci build since I haven't yet decided exactly how I want to do the auto-commit.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,616,2019-01-19T15:31:38Z,2019-01-20T01:01:15Z,2019-01-20T01:01:15Z,MERGED,True,9,1,2,https://github.com/howard0su,Make emulator single thread,1,[],https://github.com/DeviationTX/deviation/pull/616,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/616,"Use the PWR_Sleep to call the timer route every 100ms. Since PWR_Sleep is noon on ARM platform. This change should be a noop for real TX.
The event loop on a modern PC is fast enough and timer route still has reasonable accuracy.
This removes platform dependent code and make my debug life much easier as emu become a single thread application.","Use the PWR_Sleep to call the timer route every 100ms. Since PWR_Sleep is noon on ARM platform. This change should be a noop for real TX.
The event loop on a modern PC is fast enough and timer route still has reasonable accuracy.
This removes platform dependent code and make my debug life much easier as emu become a single thread application.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,616,2019-01-19T15:31:38Z,2019-01-20T01:01:15Z,2019-01-20T01:01:15Z,MERGED,True,9,1,2,https://github.com/howard0su,Make emulator single thread,1,[],https://github.com/DeviationTX/deviation/pull/616,https://github.com/PhracturedBlue,2,https://github.com/DeviationTX/deviation/pull/616#issuecomment-455792195,"Use the PWR_Sleep to call the timer route every 100ms. Since PWR_Sleep is noon on ARM platform. This change should be a noop for real TX.
The event loop on a modern PC is fast enough and timer route still has reasonable accuracy.
This removes platform dependent code and make my debug life much easier as emu become a single thread application.",The code is purposely multi-threaded.  This is to better emulate the interrupt model of the actual transmitter.  You could introduce an argument to run it as a single-threaded application for debug I guess if it is helpful (though maybe you should describe your debug difficulty?  I personally haven't found it hard to debug with gdb),True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,616,2019-01-19T15:31:38Z,2019-01-20T01:01:15Z,2019-01-20T01:01:15Z,MERGED,True,9,1,2,https://github.com/howard0su,Make emulator single thread,1,[],https://github.com/DeviationTX/deviation/pull/616,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/616#issuecomment-455792778,"Use the PWR_Sleep to call the timer route every 100ms. Since PWR_Sleep is noon on ARM platform. This change should be a noop for real TX.
The event loop on a modern PC is fast enough and timer route still has reasonable accuracy.
This removes platform dependent code and make my debug life much easier as emu become a single thread application.","I am running on osx. gdb keeps interrupt at the signal SIGALRM and 'handle'
command cannot let me ignore it. this completely broken debug for me. I was
living by adding printf since day 1.

Sure. I can introduce a flag.
…
On Sun, Jan 20, 2019 at 12:02 AM PhracturedBlue ***@***.***> wrote:
 The code is purposely multi-threaded. This is to better emulate the
 interrupt model of the actual transmitter. You could introduce an argument
 to run it as a single-threaded application for debug I guess if it is
 helpful (though maybe you should describe your debug difficulty? I
 personally haven't found it hard to debug with gdb)

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#616 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRH4D5typlCKoAiuvdEOZ2aqby46Hks5vE0F-gaJpZM4aJMHC>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,618,2019-01-19T17:36:04Z,2019-01-20T00:44:56Z,2019-01-20T00:45:29Z,MERGED,True,383,2,3,https://github.com/PhracturedBlue,[WIP] Add code linter,11,[],https://github.com/DeviationTX/deviation/pull/618,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/618,"This patch will add a code linter to try to keep consistent quality.
This uses cpplint which generally folllows Googles Style guide: https://google.github.io/styleguide/cppguide.html
Here is the summary of the currently flagged issues.  I may still alter the rule set as I analyze further, but this is probably a good starting point.
Summary
-------
build/namespaces              : 2
readability/alt_tokens        : 7
readability/braces            : 164
readability/multiline_comment : 62
readability/multiline_string  : 2
readability/todo              : 8
readability/utf8              : 3
runtime/arrays                : 1
runtime/casting               : 3
runtime/int                   : 633
runtime/printf                : 304
runtime/references            : 6
runtime/threadsafe_fn         : 3
whitespace/blank_line         : 118
whitespace/braces             : 4001
whitespace/comma              : 663
whitespace/comments           : 4582
whitespace/empty_loop_body    : 18
whitespace/end_of_line        : 1457
whitespace/ending_newline     : 5
whitespace/indent             : 835
whitespace/newline            : 300
whitespace/operators          : 1318
whitespace/parens             : 3159
whitespace/semicolon          : 94
whitespace/tab                : 2141

To do:

 Add linter and choose rules to run
 Add ability to run lint only on changes
 Enable travis to run lint on PR and update PR with failures

My expectation is that any lines changed in pull-requests are lint clean.  I can then start cleaning up the existing code.","This patch will add a code linter to try to keep consistent quality.
This uses cpplint which generally folllows Googles Style guide: https://google.github.io/styleguide/cppguide.html
Here is the summary of the currently flagged issues.  I may still alter the rule set as I analyze further, but this is probably a good starting point.
Summary
-------
build/namespaces              : 2
readability/alt_tokens        : 7
readability/braces            : 164
readability/multiline_comment : 62
readability/multiline_string  : 2
readability/todo              : 8
readability/utf8              : 3
runtime/arrays                : 1
runtime/casting               : 3
runtime/int                   : 633
runtime/printf                : 304
runtime/references            : 6
runtime/threadsafe_fn         : 3
whitespace/blank_line         : 118
whitespace/braces             : 4001
whitespace/comma              : 663
whitespace/comments           : 4582
whitespace/empty_loop_body    : 18
whitespace/end_of_line        : 1457
whitespace/ending_newline     : 5
whitespace/indent             : 835
whitespace/newline            : 300
whitespace/operators          : 1318
whitespace/parens             : 3159
whitespace/semicolon          : 94
whitespace/tab                : 2141

To do:

 Add linter and choose rules to run
 Add ability to run lint only on changes
 Enable travis to run lint on PR and update PR with failures

My expectation is that any lines changed in pull-requests are lint clean.  I can then start cleaning up the existing code.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,618,2019-01-19T17:36:04Z,2019-01-20T00:44:56Z,2019-01-20T00:45:29Z,MERGED,True,383,2,3,https://github.com/PhracturedBlue,[WIP] Add code linter,11,[],https://github.com/DeviationTX/deviation/pull/618,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/618#issuecomment-455826508,"This patch will add a code linter to try to keep consistent quality.
This uses cpplint which generally folllows Googles Style guide: https://google.github.io/styleguide/cppguide.html
Here is the summary of the currently flagged issues.  I may still alter the rule set as I analyze further, but this is probably a good starting point.
Summary
-------
build/namespaces              : 2
readability/alt_tokens        : 7
readability/braces            : 164
readability/multiline_comment : 62
readability/multiline_string  : 2
readability/todo              : 8
readability/utf8              : 3
runtime/arrays                : 1
runtime/casting               : 3
runtime/int                   : 633
runtime/printf                : 304
runtime/references            : 6
runtime/threadsafe_fn         : 3
whitespace/blank_line         : 118
whitespace/braces             : 4001
whitespace/comma              : 663
whitespace/comments           : 4582
whitespace/empty_loop_body    : 18
whitespace/end_of_line        : 1457
whitespace/ending_newline     : 5
whitespace/indent             : 835
whitespace/newline            : 300
whitespace/operators          : 1318
whitespace/parens             : 3159
whitespace/semicolon          : 94
whitespace/tab                : 2141

To do:

 Add linter and choose rules to run
 Add ability to run lint only on changes
 Enable travis to run lint on PR and update PR with failures

My expectation is that any lines changed in pull-requests are lint clean.  I can then start cleaning up the existing code.",I love it. please merge it as soon as you feel it is good enough. I can work with you to divide the folders to do the cleanup.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,618,2019-01-19T17:36:04Z,2019-01-20T00:44:56Z,2019-01-20T00:45:29Z,MERGED,True,383,2,3,https://github.com/PhracturedBlue,[WIP] Add code linter,11,[],https://github.com/DeviationTX/deviation/pull/618,https://github.com/PhracturedBlue,3,https://github.com/DeviationTX/deviation/pull/618#issuecomment-455827621,"This patch will add a code linter to try to keep consistent quality.
This uses cpplint which generally folllows Googles Style guide: https://google.github.io/styleguide/cppguide.html
Here is the summary of the currently flagged issues.  I may still alter the rule set as I analyze further, but this is probably a good starting point.
Summary
-------
build/namespaces              : 2
readability/alt_tokens        : 7
readability/braces            : 164
readability/multiline_comment : 62
readability/multiline_string  : 2
readability/todo              : 8
readability/utf8              : 3
runtime/arrays                : 1
runtime/casting               : 3
runtime/int                   : 633
runtime/printf                : 304
runtime/references            : 6
runtime/threadsafe_fn         : 3
whitespace/blank_line         : 118
whitespace/braces             : 4001
whitespace/comma              : 663
whitespace/comments           : 4582
whitespace/empty_loop_body    : 18
whitespace/end_of_line        : 1457
whitespace/ending_newline     : 5
whitespace/indent             : 835
whitespace/newline            : 300
whitespace/operators          : 1318
whitespace/parens             : 3159
whitespace/semicolon          : 94
whitespace/tab                : 2141

To do:

 Add linter and choose rules to run
 Add ability to run lint only on changes
 Enable travis to run lint on PR and update PR with failures

My expectation is that any lines changed in pull-requests are lint clean.  I can then start cleaning up the existing code.","The Travis integration seems to be working fine now.  I've merged it as is, if the rules are too onerous, we can adjust them in the future, but the easiest way to know is to try it.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,619,2019-01-20T02:49:44Z,,2019-02-21T01:21:23Z,OPEN,False,4,4,1,https://github.com/howard0su,Per datasheet to adjust delay for tw8816,1,[],https://github.com/DeviationTX/deviation/pull/619,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/619,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,619,2019-01-20T02:49:44Z,,2019-02-21T01:21:23Z,OPEN,False,4,4,1,https://github.com/howard0su,Per datasheet to adjust delay for tw8816,1,[],https://github.com/DeviationTX/deviation/pull/619,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/619#issuecomment-455832869,,Validate on my own Tx,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,619,2019-01-20T02:49:44Z,,2019-02-21T01:21:23Z,OPEN,False,4,4,1,https://github.com/howard0su,Per datasheet to adjust delay for tw8816,1,[],https://github.com/DeviationTX/deviation/pull/619,https://github.com/PhracturedBlue,3,https://github.com/DeviationTX/deviation/pull/619#issuecomment-455868950,,"well...it is really difficult to review this patch with the style fixes applied.
Also, I don't like some of the formatting changes (like moving curly-braces to the same line...This is one of those things that I think is context specific.  I think I want to separate cleanup patches from code-change patches.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,619,2019-01-20T02:49:44Z,,2019-02-21T01:21:23Z,OPEN,False,4,4,1,https://github.com/howard0su,Per datasheet to adjust delay for tw8816,1,[],https://github.com/DeviationTX/deviation/pull/619,https://github.com/howard0su,4,https://github.com/DeviationTX/deviation/pull/619#issuecomment-455870850,,"no intention to check this in. This is another testing. I think
clang-format overall is useful when we need dealing the whole code base.
What's your plan then? Do you want to have one big change to clean all of
them? If you like to do so, let's coordinate with the devs who has the
pending PR on hand. or your lint gives the warnings and expect we clean it
up in a relative long run.
…
On Sun, Jan 20, 2019 at 10:01 PM PhracturedBlue ***@***.***> wrote:
 well...it is really difficult to review this patch with the style fixes
 applied.
 Also, I don't like some of the formatting changes (like moving
 curly-braces to the same line...This is one of those things that I think is
 context specific. I think I want to separate cleanup patches from
 code-change patches.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#619 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRHxgjhJVaPYGNI4WQ5B6tx9gsbCsks5vFHbHgaJpZM4aJcHe>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,619,2019-01-20T02:49:44Z,,2019-02-21T01:21:23Z,OPEN,False,4,4,1,https://github.com/howard0su,Per datasheet to adjust delay for tw8816,1,[],https://github.com/DeviationTX/deviation/pull/619,https://github.com/PhracturedBlue,5,https://github.com/DeviationTX/deviation/pull/619#issuecomment-465818233,,"what is the plan for this?
My concern is that there are many variants of the tw8816 (I think we've seen 6 different revisions in use by Walkera).  They all had different quirks, so I'm very reluctant to make a change that the data-sheet says is ok without having confidence it is ok on multiple actual transmitters.  On the other hand it is almost 0.5sec of wait that you can remove which is quite a lot.  I need to check my F12E and see what revision of the TW8816 it has.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,619,2019-01-20T02:49:44Z,,2019-02-21T01:21:23Z,OPEN,False,4,4,1,https://github.com/howard0su,Per datasheet to adjust delay for tw8816,1,[],https://github.com/DeviationTX/deviation/pull/619,https://github.com/howard0su,6,https://github.com/DeviationTX/deviation/pull/619#issuecomment-465822830,,"i think I should revert the change on msleep.
this change was intent to remove Delay calls. I am thinking to replace Delay with usleep(1) which is almost same as the amount of time Delay actual cause.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,620,2019-01-20T03:37:08Z,2019-01-21T23:12:24Z,2019-01-21T23:12:24Z,CLOSED,False,18,0,1,https://github.com/howard0su,Add config file of clang-format,1,[],https://github.com/DeviationTX/deviation/pull/620,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/620,try to use clang-format --style google to test if we can automatically change the style.,try to use clang-format --style google to test if we can automatically change the style.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,621,2019-01-20T14:54:03Z,2019-01-22T00:06:17Z,2019-01-23T13:17:37Z,MERGED,True,214,197,39,https://github.com/howard0su,Introduce GUI_Localize as string callback,13,[],https://github.com/DeviationTX/deviation/pull/621,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/621,"In the localize build, GUI_Localize is a wrapper to _tr. In non-localized build, it is NULL, which results the same behavior as today.
This removes the assumption on that _tr returns a memory as static memory region. So _tr function is called every time we need the localized string.","In the localize build, GUI_Localize is a wrapper to _tr. In non-localized build, it is NULL, which results the same behavior as today.
This removes the assumption on that _tr returns a memory as static memory region. So _tr function is called every time we need the localized string.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,621,2019-01-20T14:54:03Z,2019-01-22T00:06:17Z,2019-01-23T13:17:37Z,MERGED,True,214,197,39,https://github.com/howard0su,Introduce GUI_Localize as string callback,13,[],https://github.com/DeviationTX/deviation/pull/621,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/621#issuecomment-455873001,"In the localize build, GUI_Localize is a wrapper to _tr. In non-localized build, it is NULL, which results the same behavior as today.
This removes the assumption on that _tr returns a memory as static memory region. So _tr function is called every time we need the localized string.",get feedback before I go far further.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,621,2019-01-20T14:54:03Z,2019-01-22T00:06:17Z,2019-01-23T13:17:37Z,MERGED,True,214,197,39,https://github.com/howard0su,Introduce GUI_Localize as string callback,13,[],https://github.com/DeviationTX/deviation/pull/621,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/621#issuecomment-455873716,"In the localize build, GUI_Localize is a wrapper to _tr. In non-localized build, it is NULL, which results the same behavior as today.
This removes the assumption on that _tr returns a memory as static memory region. So _tr function is called every time we need the localized string.","this is good. :-)
…
On Sun, Jan 20, 2019 at 11:01 PM PhracturedBlue ***@***.***> wrote:
 ***@***.**** commented on this pull request.
 ------------------------------

 In src/pages/128x64x1/advanced/mixer_limits.c
 <#621 (comment)>:

 >      const void * label = NULL;
      void * disp = NULL;
      void * input_disp = NULL;
      void * value = NULL;
      switch(absrow) {
          case ITEM_REVERSE:
 -            label = _tr(""Reverse"");
 +            label = _tr_noop(""Reverse"");
              tgl = toggle_reverse_cb; disp = reverse_cb; value = (void *)((long)mp->channel);

 Lint Error:

 61:  Missing space before ( in switch(
 64:  Use int16/int64/etc, rather than the C type long

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#621 (review)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzROH1YZb3KQbbQzegNr6E6c6VFSSEks5vFIS8gaJpZM4aJrn3>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,621,2019-01-20T14:54:03Z,2019-01-22T00:06:17Z,2019-01-23T13:17:37Z,MERGED,True,214,197,39,https://github.com/howard0su,Introduce GUI_Localize as string callback,13,[],https://github.com/DeviationTX/deviation/pull/621,https://github.com/PhracturedBlue,4,https://github.com/DeviationTX/deviation/pull/621#issuecomment-455880268,"In the localize build, GUI_Localize is a wrapper to _tr. In non-localized build, it is NULL, which results the same behavior as today.
This removes the assumption on that _tr returns a memory as static memory region. So _tr function is called every time we need the localized string.","I don't understand what you are trying to achieve with this patch.  Can you further clarify the purpose?
Also, Please don't fix the linter errors yet.  It looks like I need to do some more work on the detector",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,621,2019-01-20T14:54:03Z,2019-01-22T00:06:17Z,2019-01-23T13:17:37Z,MERGED,True,214,197,39,https://github.com/howard0su,Introduce GUI_Localize as string callback,13,[],https://github.com/DeviationTX/deviation/pull/621,https://github.com/howard0su,5,https://github.com/DeviationTX/deviation/pull/621#issuecomment-455880800,"In the localize build, GUI_Localize is a wrapper to _tr. In non-localized build, it is NULL, which results the same behavior as today.
This removes the assumption on that _tr returns a memory as static memory region. So _tr function is called every time we need the localized string.","No. I didn't fix lint error.
about this change, first it saves some ROM as we don't need call _tr in many places.
More important, I need fix the following problem:
Currently, the code assume _tr returns a pointer which will never disappear and the content is static. It is true in the today's implementation as we load all the localized string into 8KB RAM. This is a big waste of memory. I am using the dynamic approach to load the string on demand. check PR #525 which is my next step. This is likely fit into devo7e if we disable standard UI to get some ROM.
I looked at the approach to do linker time replace string table. Still didn't work out any workable solution yet. So devo7e localization approach is still relying on our current implementation.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,621,2019-01-20T14:54:03Z,2019-01-22T00:06:17Z,2019-01-23T13:17:37Z,MERGED,True,214,197,39,https://github.com/howard0su,Introduce GUI_Localize as string callback,13,[],https://github.com/DeviationTX/deviation/pull/621,https://github.com/howard0su,6,https://github.com/DeviationTX/deviation/pull/621#issuecomment-455880911,"In the localize build, GUI_Localize is a wrapper to _tr. In non-localized build, it is NULL, which results the same behavior as today.
This removes the assumption on that _tr returns a memory as static memory region. So _tr function is called every time we need the localized string.","also, our localized strings are approaching 8KB limit.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,621,2019-01-20T14:54:03Z,2019-01-22T00:06:17Z,2019-01-23T13:17:37Z,MERGED,True,214,197,39,https://github.com/howard0su,Introduce GUI_Localize as string callback,13,[],https://github.com/DeviationTX/deviation/pull/621,https://github.com/PhracturedBlue,7,https://github.com/DeviationTX/deviation/pull/621#issuecomment-455889604,"In the localize build, GUI_Localize is a wrapper to _tr. In non-localized build, it is NULL, which results the same behavior as today.
This removes the assumption on that _tr returns a memory as static memory region. So _tr function is called every time we need the localized string.","I believe the linter should now properly work on this patch-set.  The issue seems to have been that the git clone depth was not deep enough to find the merge-point, so it took the entire code history.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,621,2019-01-20T14:54:03Z,2019-01-22T00:06:17Z,2019-01-23T13:17:37Z,MERGED,True,214,197,39,https://github.com/howard0su,Introduce GUI_Localize as string callback,13,[],https://github.com/DeviationTX/deviation/pull/621,https://github.com/PhracturedBlue,8,https://github.com/DeviationTX/deviation/pull/621#issuecomment-455890146,"In the localize build, GUI_Localize is a wrapper to _tr. In non-localized build, it is NULL, which results the same behavior as today.
This removes the assumption on that _tr returns a memory as static memory region. So _tr function is called every time we need the localized string.","I understand the need now, but not why do it this way.
Why not build a string-cache that is just big enough for the current page, erase the table after each page change and repopulate only the strings as needed.
Then _tr() would have a static pointer and you wouldn't need to change hundreds of lines of code",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,621,2019-01-20T14:54:03Z,2019-01-22T00:06:17Z,2019-01-23T13:17:37Z,MERGED,True,214,197,39,https://github.com/howard0su,Introduce GUI_Localize as string callback,13,[],https://github.com/DeviationTX/deviation/pull/621,https://github.com/howard0su,9,https://github.com/DeviationTX/deviation/pull/621#issuecomment-455918872,"In the localize build, GUI_Localize is a wrapper to _tr. In non-localized build, it is NULL, which results the same behavior as today.
This removes the assumption on that _tr returns a memory as static memory region. So _tr function is called every time we need the localized string.","I understand the need now, but not why do it this way.
Why not build a string-cache that is just big enough for the current page, erase the table after each page change and repopulate only the strings as needed.
Then _tr() would have a static pointer and you wouldn't need to change hundreds of lines of code

Yes. this is what I am trying. But unfortunately, it is hard to determine what's the right size for cache and no way to grantee the cache is big enough as show dialog make the things worse. In order to keep this cache small, we need make sure no one really carry the _tr return code for ever.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,621,2019-01-20T14:54:03Z,2019-01-22T00:06:17Z,2019-01-23T13:17:37Z,MERGED,True,214,197,39,https://github.com/howard0su,Introduce GUI_Localize as string callback,13,[],https://github.com/DeviationTX/deviation/pull/621,https://github.com/howard0su,10,https://github.com/DeviationTX/deviation/pull/621#issuecomment-455922225,"In the localize build, GUI_Localize is a wrapper to _tr. In non-localized build, it is NULL, which results the same behavior as today.
This removes the assumption on that _tr returns a memory as static memory region. So _tr function is called every time we need the localized string.","I believe the linter should now properly work on this patch-set. The issue seems to have been that the git clone depth was not deep enough to find the merge-point, so it took the entire code history.

thank you for your effort. the linter is so nice!",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,621,2019-01-20T14:54:03Z,2019-01-22T00:06:17Z,2019-01-23T13:17:37Z,MERGED,True,214,197,39,https://github.com/howard0su,Introduce GUI_Localize as string callback,13,[],https://github.com/DeviationTX/deviation/pull/621,https://github.com/howard0su,11,https://github.com/DeviationTX/deviation/pull/621#issuecomment-456162155,"In the localize build, GUI_Localize is a wrapper to _tr. In non-localized build, it is NULL, which results the same behavior as today.
This removes the assumption on that _tr returns a memory as static memory region. So _tr function is called every time we need the localized string.",I would like to get in anyway as the changes are straightforward and gain is sizable. For how we handle tr is related but not depended on by this change.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,621,2019-01-20T14:54:03Z,2019-01-22T00:06:17Z,2019-01-23T13:17:37Z,MERGED,True,214,197,39,https://github.com/howard0su,Introduce GUI_Localize as string callback,13,[],https://github.com/DeviationTX/deviation/pull/621,https://github.com/howard0su,12,https://github.com/DeviationTX/deviation/pull/621#issuecomment-456678900,"In the localize build, GUI_Localize is a wrapper to _tr. In non-localized build, it is NULL, which results the same behavior as today.
This removes the assumption on that _tr returns a memory as static memory region. So _tr function is called every time we need the localized string.","Unmatched Lint Error(s):
src/tests/test_pages_advanced_mixer.c:26:  Line ends in whitespace.  Consider deleting these extra spaces.  
src/tests/test_pages_advanced_mixer.c:27:  Missing space before ( in for(  
src/tests/test_pages_advanced_mixer.c:32:  Missing space before ( in for(  
src/tests/test_pages_advanced_mixer.c:39:  Missing space before ( in for(  
src/tests/test_pages_advanced_mixer.c:44:  Missing space before ( in for(  


what's this? @PhracturedBlue looks like something wrong with lint comments?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,621,2019-01-20T14:54:03Z,2019-01-22T00:06:17Z,2019-01-23T13:17:37Z,MERGED,True,214,197,39,https://github.com/howard0su,Introduce GUI_Localize as string callback,13,[],https://github.com/DeviationTX/deviation/pull/621,https://github.com/PhracturedBlue,13,https://github.com/DeviationTX/deviation/pull/621#issuecomment-456797766,"In the localize build, GUI_Localize is a wrapper to _tr. In non-localized build, it is NULL, which results the same behavior as today.
This removes the assumption on that _tr returns a memory as static memory region. So _tr function is called every time we need the localized string.",I was doing some testing and had the wrong PR# specified for my tests.  Just ignore,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,622,2019-01-20T16:49:46Z,2019-01-21T16:50:32Z,2019-01-21T16:50:47Z,MERGED,True,7,11,3,https://github.com/howard0su,Revert langv2,3,[],https://github.com/DeviationTX/deviation/pull/622,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/622,Leave the code as it is but disable it from build. The new format prevent user to modify the translation file directly. Introduce the new format when we really need it later.,Leave the code as it is but disable it from build. The new format prevent user to modify the translation file directly. Introduce the new format when we really need it later.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,622,2019-01-20T16:49:46Z,2019-01-21T16:50:32Z,2019-01-21T16:50:47Z,MERGED,True,7,11,3,https://github.com/howard0su,Revert langv2,3,[],https://github.com/DeviationTX/deviation/pull/622,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/622#issuecomment-455920603,Leave the code as it is but disable it from build. The new format prevent user to modify the translation file directly. Introduce the new format when we really need it later.,"you also need to change_extract_strings.pl to set '$format' to default to ""v1""

good catch. fixed.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,623,2019-01-20T18:20:15Z,2019-01-20T20:58:04Z,2019-01-20T20:58:04Z,CLOSED,False,215,196,40,https://github.com/PhracturedBlue,[TESTING] Lint test,11,[],https://github.com/DeviationTX/deviation/pull/623,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/623,This is a clone of Howard's repo that I'm using to test some linter fixes.  Disregard,This is a clone of Howard's repo that I'm using to test some linter fixes.  Disregard,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,624,2019-01-20T19:48:24Z,2019-01-20T20:57:49Z,2019-01-20T20:57:49Z,MERGED,True,1,1,1,https://github.com/PhracturedBlue,Increase translated string count so devo12 can build again,1,[],https://github.com/DeviationTX/deviation/pull/624,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/624,"We probably need to be managing this on a per-tx basis, though it is hard to set precisely due to the chicken-egg issue of needing to build before we know how many strings are needed
Alternatively, we shold probably look at the string list and see if any can be pruned out","We probably need to be managing this on a per-tx basis, though it is hard to set precisely due to the chicken-egg issue of needing to build before we know how many strings are needed
Alternatively, we shold probably look at the string list and see if any can be pruned out",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,625,2019-01-21T07:39:20Z,,2019-01-22T13:25:59Z,OPEN,False,35,21,8,https://github.com/howard0su,[WIP] Reduce ROM by define some helper functions in pages/,2,[],https://github.com/DeviationTX/deviation/pull/625,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/625,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,625,2019-01-21T07:39:20Z,,2019-01-22T13:25:59Z,OPEN,False,35,21,8,https://github.com/howard0su,[WIP] Reduce ROM by define some helper functions in pages/,2,[],https://github.com/DeviationTX/deviation/pull/625,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/625#issuecomment-455990623,,"I did some analyze on the .text size of each C files, no rodata (no string counted). here is the result. Please check if anything catch your eyes. I am surprised on the size of model.c.
objs/devo7e/model.o   Total | 8406
objs/devo7e/mixer_setup.o Total | 5346
objs/devo7e/telemetry.o Total | 3402
objs/devo7e/mixer.o Total | 3157
objs/devo7e/protocol.o Total | 2938
objs/devo7e/tx_configure.o Total | 2793
objs/devo7e/gui.o Total | 2528
objs/devo7e/usb_core.o Total | 2046
objs/devo7e/display.o Total | 2033
objs/devo7e/lcd_gfx.o Total | 2029
objs/devo7e/model_page.o Total | 1892
objs/devo7e/keyboard.o Total | 1889
objs/devo7e/tx.o Total | 1850
objs/devo7e/main_page.o Total | 1842
objs/devo7e/curves_page.o Total | 1760
objs/devo7e/mixer_curves.o Total | 1731
objs/devo7e/petit_fat.o Total | 1658
objs/devo7e/dialogs.o Total | 1628
objs/devo7e/inputs.o Total | 1586
objs/devo7e/model_config.o Total | 1518
objs/devo7e/telemtest_page.o Total | 1491
objs/devo7e/model_loadsave.o Total | 1467
objs/devo7e/pages.o Total | 1458
objs/devo7e/mixer_standard.o Total | 1338
objs/devo7e/mixer_limits.o Total | 1307
objs/devo7e/mixer_page.o Total | 1220
objs/devo7e/main_config.o Total | 1208
objs/devo7e/scrollable.o Total | 1194
objs/devo7e/curves.o Total | 1186
objs/devo7e/timer_page.o Total | 1168
objs/devo7e/trim_page.o Total | 1160
objs/devo7e/common_standard.o Total | 1124
objs/devo7e/timer.o Total | 1121
objs/devo7e/chantest_page.o Total | 1118
objs/devo7e/toggle_select.o Total | 1080
objs/devo7e/textsel.o Total | 1058
objs/devo7e/bargraph.o Total | 1048",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,625,2019-01-21T07:39:20Z,,2019-01-22T13:25:59Z,OPEN,False,35,21,8,https://github.com/howard0su,[WIP] Reduce ROM by define some helper functions in pages/,2,[],https://github.com/DeviationTX/deviation/pull/625,https://github.com/TheRealMoeder,3,https://github.com/DeviationTX/deviation/pull/625#issuecomment-456026605,,According to the checks actually Rom size increase in some transmitters?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,625,2019-01-21T07:39:20Z,,2019-01-22T13:25:59Z,OPEN,False,35,21,8,https://github.com/howard0su,[WIP] Reduce ROM by define some helper functions in pages/,2,[],https://github.com/DeviationTX/deviation/pull/625,https://github.com/howard0su,4,https://github.com/DeviationTX/deviation/pull/625#issuecomment-456031178,,Need covert the code to use the new function.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,625,2019-01-21T07:39:20Z,,2019-01-22T13:25:59Z,OPEN,False,35,21,8,https://github.com/howard0su,[WIP] Reduce ROM by define some helper functions in pages/,2,[],https://github.com/DeviationTX/deviation/pull/625,https://github.com/PhracturedBlue,5,https://github.com/DeviationTX/deviation/pull/625#issuecomment-456135758,,"the model.c has always been a problem.  I've taken several stabs at optimizing it, but I never was able to get it as small as I'd like.
My last idea was to use DevationUploader to do all the work and to store the files on Tx as binaries.  We'd compile them to match the actual memory layout during upload, and download/decompile/recompile/upload during a dfu update.
It would remove basically all 8k of code from model.c, but have the downside that Deviation-Uploader is required to work with files (I'd add a gui to work as a file explorer).  It also requires being able to run the compile/decompile stages from Java on the host machine, so I was looking at a C->Javascript translator that could reproduce the binary structure.  I got close to getting the latter part working, but it is a very complex system, and would be error prone.  Anyhow, I gave up on that path.  I'll be interested to see what you come up with.
I'd be open to a different file-format if it would actually help significantly, but it must remain human readable/editable (and we'd need to be able to provide a converter)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,625,2019-01-21T07:39:20Z,,2019-01-22T13:25:59Z,OPEN,False,35,21,8,https://github.com/howard0su,[WIP] Reduce ROM by define some helper functions in pages/,2,[],https://github.com/DeviationTX/deviation/pull/625,https://github.com/PhracturedBlue,6,https://github.com/DeviationTX/deviation/pull/625#issuecomment-456136299,,"Also, I have:
utils/get_function_size.pl -rom devo8

Which may be helpful in identifying memory usage",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,625,2019-01-21T07:39:20Z,,2019-01-22T13:25:59Z,OPEN,False,35,21,8,https://github.com/howard0su,[WIP] Reduce ROM by define some helper functions in pages/,2,[],https://github.com/DeviationTX/deviation/pull/625,https://github.com/howard0su,7,https://github.com/DeviationTX/deviation/pull/625#issuecomment-456136630,,"let me give it a try. i have some ideas to try it out first. then build
tests and refector the code. the challenge part is always some back
compatiblity code.
…
On Tue, Jan 22, 2019 at 12:44 AM PhracturedBlue ***@***.***> wrote:
 the model.c has always been a problem. I've taken several stabs at
 optimizing it, but I never was able to get it as small as I'd like.
 My last idea was to use DevationUploader to do all the work and to store
 the files on Tx as binaries. We'd compile them to match the actual memory
 layout during upload, and download/decompile/recompile/upload during a dfu
 update.
 It would remove basically all 8k of code from model.c, but have the
 downside that Deviation-Uploader is required to work with files (I'd add a
 gui to work as a file explorer). It also requires being able to run the
 compile/decompile stages from Java on the host machine, so I was looking at
 a C->Javascript translator that could reproduce the binary structure. I got
 close to getting the latter part working, but it is a very complex system,
 and would be error prone. Anyhow, I gave up on that path. I'll be
 interested to see what you come up with.
 I'd be open to a different file-format if it would actually help
 significantly, but it must remain human readable/editable (and we'd need to
 be able to provide a converter)

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#625 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRPbi9f4eN6Zzsn5kBAiaRWsOXp80ks5vFe5agaJpZM4aKQkg>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,625,2019-01-21T07:39:20Z,,2019-01-22T13:25:59Z,OPEN,False,35,21,8,https://github.com/howard0su,[WIP] Reduce ROM by define some helper functions in pages/,2,[],https://github.com/DeviationTX/deviation/pull/625,https://github.com/hexfet,8,https://github.com/DeviationTX/deviation/pull/625#issuecomment-456226495,,"I'll throw model file versioning in as another concern.  I think an external compile step might make it easier.  One method I looked at is to have the ini read code apply any transformations necessary to convert an older model file into the latest Model definition.  That didn't give a good solution for the cyclic AIL/ELE reversal because model.c reads each config value independently so correction has to wait till all the parameters are loaded.  At that point correcting the cyclics requires scanning through all the mixers.  The additional code needed to support previous model file versions gets large.  An external model file compile step would keep the compatibility code out of the firmware.
It does make managing the model files more complex for users.  We'd also need a way to generate readable model files from the model data on the tx so users could save changes made on the tx.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,625,2019-01-21T07:39:20Z,,2019-01-22T13:25:59Z,OPEN,False,35,21,8,https://github.com/howard0su,[WIP] Reduce ROM by define some helper functions in pages/,2,[],https://github.com/DeviationTX/deviation/pull/625,https://github.com/howard0su,9,https://github.com/DeviationTX/deviation/pull/625#issuecomment-456274322,,"Any specific reason to swap order of CreateLabel parameters v.s. CreateLabelBox? the strCallback and label description is swapped?
         const char *(*strCallback)(guiObject_t *, const void *),
         const struct LabelDesc *desc,

         const struct LabelDesc *desc,
         const char *(*strCallback)(guiObject_t *, const void *),",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,625,2019-01-21T07:39:20Z,,2019-01-22T13:25:59Z,OPEN,False,35,21,8,https://github.com/howard0su,[WIP] Reduce ROM by define some helper functions in pages/,2,[],https://github.com/DeviationTX/deviation/pull/625,https://github.com/PhracturedBlue,10,https://github.com/DeviationTX/deviation/pull/625#issuecomment-456398208,,"CreateLabel was one of the very 1st functions in the GUI and we didn't have the data parameter.  When it was added, it was tacked on the end..  When CreateLabelBox was added, we had a convention (cb and data go together at the end).  So CreateLabelBox is 'right' and CreateLabel is like that because there wasn't any reason to change every call as a beutification project.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,626,2019-01-21T15:36:18Z,,2019-03-02T08:38:18Z,OPEN,False,4427,508,22,https://github.com/howard0su,[WIP] Enhance config system,25,[],https://github.com/DeviationTX/deviation/pull/626,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/626,"We need reduce the size of the ROM of overall configuration subsystem.
Here is the ideas:

Use table to do data driven as much as possible.
The table to parse can be used to write out the configuration file, this can save lots of ROM.

while I am doing refectoring, add the test cases to cover.","We need reduce the size of the ROM of overall configuration subsystem.
Here is the ideas:

Use table to do data driven as much as possible.
The table to parse can be used to write out the configuration file, this can save lots of ROM.

while I am doing refectoring, add the test cases to cover.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,626,2019-01-21T15:36:18Z,,2019-03-02T08:38:18Z,OPEN,False,4427,508,22,https://github.com/howard0su,[WIP] Enhance config system,25,[],https://github.com/DeviationTX/deviation/pull/626,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/626#issuecomment-456128148,"We need reduce the size of the ROM of overall configuration subsystem.
Here is the ideas:

Use table to do data driven as much as possible.
The table to parse can be used to write out the configuration file, this can save lots of ROM.

while I am doing refectoring, add the test cases to cover.","sure. of course, we need tests. My thinking is create several configuration files and read it in. then write it out, read it in again. and validate between stage.
Display and Tx is relative straightforward. but Model is full of small logic.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,626,2019-01-21T15:36:18Z,,2019-03-02T08:38:18Z,OPEN,False,4427,508,22,https://github.com/howard0su,[WIP] Enhance config system,25,[],https://github.com/DeviationTX/deviation/pull/626,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/626#issuecomment-456825091,"We need reduce the size of the ROM of overall configuration subsystem.
Here is the ideas:

Use table to do data driven as much as possible.
The table to parse can be used to write out the configuration file, this can save lots of ROM.

while I am doing refectoring, add the test cases to cover.","do you mind I first get the code of config.* and related tests in? then Display.c, then tx.c, then module.c with the corresponding tests? @PhracturedBlue",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,626,2019-01-21T15:36:18Z,,2019-03-02T08:38:18Z,OPEN,False,4427,508,22,https://github.com/howard0su,[WIP] Enhance config system,25,[],https://github.com/DeviationTX/deviation/pull/626,https://github.com/howard0su,4,https://github.com/DeviationTX/deviation/pull/626#issuecomment-462787883,"We need reduce the size of the ROM of overall configuration subsystem.
Here is the ideas:

Use table to do data driven as much as possible.
The table to parse can be used to write out the configuration file, this can save lots of ROM.

while I am doing refectoring, add the test cases to cover.",@PhracturedBlue config.* contains new infra to support configure system. it has most part I want and please review.  I will work on converting the existing code to new model piece by piece.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,628,2019-01-21T15:48:55Z,2019-01-21T16:51:40Z,2019-02-08T00:49:27Z,MERGED,True,135,111,1,https://github.com/PhracturedBlue,Cleanup travis build,1,[],https://github.com/DeviationTX/deviation/pull/628,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/628,"Re-write travis.yml to use build stages for build and release
The code is now cleaner, requiring less gnarly 'if' conditions.  Also only build pre-requisites that are actually used for each job","Re-write travis.yml to use build stages for build and release
The code is now cleaner, requiring less gnarly 'if' conditions.  Also only build pre-requisites that are actually used for each job",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,628,2019-01-21T15:48:55Z,2019-01-21T16:51:40Z,2019-02-08T00:49:27Z,MERGED,True,135,111,1,https://github.com/PhracturedBlue,Cleanup travis build,1,[],https://github.com/DeviationTX/deviation/pull/628,https://github.com/TheRealMoeder,2,https://github.com/DeviationTX/deviation/pull/628#issuecomment-456126803,"Re-write travis.yml to use build stages for build and release
The code is now cleaner, requiring less gnarly 'if' conditions.  Also only build pre-requisites that are actually used for each job",What do you think of #577 (comment) ? I don't know if it is worth the work...,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,628,2019-01-21T15:48:55Z,2019-01-21T16:51:40Z,2019-02-08T00:49:27Z,MERGED,True,135,111,1,https://github.com/PhracturedBlue,Cleanup travis build,1,[],https://github.com/DeviationTX/deviation/pull/628,https://github.com/PhracturedBlue,3,https://github.com/DeviationTX/deviation/pull/628#issuecomment-456130007,"Re-write travis.yml to use build stages for build and release
The code is now cleaner, requiring less gnarly 'if' conditions.  Also only build pre-requisites that are actually used for each job","We could do that, but it would make it harder to debug travis logs with multiple builds per job (the logs would all be concatenated).  It would be trivial to just set MAKETARGET=""zip_devo8 zip_devo10"" which would almost work today except for updating the map size.  Adding status could be combined with the map-size code so we send a fail rather than delta).  Maybe I'll make the needed changes to support it so we can try it out.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,628,2019-01-21T15:48:55Z,2019-01-21T16:51:40Z,2019-02-08T00:49:27Z,MERGED,True,135,111,1,https://github.com/PhracturedBlue,Cleanup travis build,1,[],https://github.com/DeviationTX/deviation/pull/628,https://github.com/TheRealMoeder,4,https://github.com/DeviationTX/deviation/pull/628#issuecomment-461629795,"Re-write travis.yml to use build stages for build and release
The code is now cleaner, requiring less gnarly 'if' conditions.  Also only build pre-requisites that are actually used for each job","If the latest commit was a transifex update, PR won't be able to get a delta for RAM and ROM",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,628,2019-01-21T15:48:55Z,2019-01-21T16:51:40Z,2019-02-08T00:49:27Z,MERGED,True,135,111,1,https://github.com/PhracturedBlue,Cleanup travis build,1,[],https://github.com/DeviationTX/deviation/pull/628,https://github.com/howard0su,5,https://github.com/DeviationTX/deviation/pull/628#issuecomment-461651440,"Re-write travis.yml to use build stages for build and release
The code is now cleaner, requiring less gnarly 'if' conditions.  Also only build pre-requisites that are actually used for each job","I vote for doing the build for transifex update as well. It is meanful as
it runs check_string_size.pl.
…
On Fri, Feb 8, 2019 at 7:17 AM TheRealMoeder ***@***.***> wrote:
 If the latest commit was a transifex update, PR won't be able to get a
 delta for RAM and ROM

 —
 You are receiving this because you commented.
 Reply to this email directly, view it on GitHub
 <#628 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRHhHX_O3WmbDDC45ATOLnERgloDWks5vLLQJgaJpZM4aLFOh>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,629,2019-01-21T22:08:44Z,2019-01-22T02:36:25Z,2019-01-22T02:36:25Z,MERGED,True,114,12,5,https://github.com/PhracturedBlue,Enable nightlies to upload/download from transifex and push to github.,2,[],https://github.com/DeviationTX/deviation/pull/629,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/629,"Similar functionality to deviation-manual.  When a nightly build is triggered:

rebuild strings
upload strings to transifex (only if there are non-comment changes)
download strings from transifex
remove any comment-only changes
push changes to github
don't re-trigger build on pushed translation changes","Similar functionality to deviation-manual.  When a nightly build is triggered:

rebuild strings
upload strings to transifex (only if there are non-comment changes)
download strings from transifex
remove any comment-only changes
push changes to github
don't re-trigger build on pushed translation changes",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,629,2019-01-21T22:08:44Z,2019-01-22T02:36:25Z,2019-01-22T02:36:25Z,MERGED,True,114,12,5,https://github.com/PhracturedBlue,Enable nightlies to upload/download from transifex and push to github.,2,[],https://github.com/DeviationTX/deviation/pull/629,https://github.com/PhracturedBlue,2,https://github.com/DeviationTX/deviation/pull/629#issuecomment-456211921,"Similar functionality to deviation-manual.  When a nightly build is triggered:

rebuild strings
upload strings to transifex (only if there are non-comment changes)
download strings from transifex
remove any comment-only changes
push changes to github
don't re-trigger build on pushed translation changes","Note that while nightlies can now be triggered via the API via the travis webpage (by developers), the cron is not yet enabled.  I still need to write some code to not update the nightlies on deviationtx.com if there are no changes to be uploaded.  Once that is in place, the cron's can be enabled and I'll disable my nightly manual API trigger",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,629,2019-01-21T22:08:44Z,2019-01-22T02:36:25Z,2019-01-22T02:36:25Z,MERGED,True,114,12,5,https://github.com/PhracturedBlue,Enable nightlies to upload/download from transifex and push to github.,2,[],https://github.com/DeviationTX/deviation/pull/629,https://github.com/PhracturedBlue,3,https://github.com/DeviationTX/deviation/pull/629#issuecomment-456249324,"Similar functionality to deviation-manual.  When a nightly build is triggered:

rebuild strings
upload strings to transifex (only if there are non-comment changes)
download strings from transifex
remove any comment-only changes
push changes to github
don't re-trigger build on pushed translation changes",Nightlies should be triggerable by cron now too.  Need to do a bit of testing 1st still,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,630,2019-01-22T00:27:58Z,2019-01-22T03:27:25Z,2019-01-22T03:27:29Z,MERGED,True,1,3,1,https://github.com/howard0su,don't use fread to skip,1,[],https://github.com/DeviationTX/deviation/pull/630,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/630,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,630,2019-01-22T00:27:58Z,2019-01-22T03:27:25Z,2019-01-22T03:27:29Z,MERGED,True,1,3,1,https://github.com/howard0su,don't use fread to skip,1,[],https://github.com/DeviationTX/deviation/pull/630,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/630#issuecomment-456234390,,it is odd that f12e increase 120bytes...,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,630,2019-01-22T00:27:58Z,2019-01-22T03:27:25Z,2019-01-22T03:27:29Z,MERGED,True,1,3,1,https://github.com/howard0su,don't use fread to skip,1,[],https://github.com/DeviationTX/deviation/pull/630,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/630#issuecomment-456234953,,"because fseek is not used anywhere else on devof12e.
But I still like this change even it increase f12e about 120bytes.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,631,2019-01-22T00:47:12Z,2019-01-22T01:53:36Z,2019-01-22T01:53:43Z,MERGED,True,19,19,4,https://github.com/howard0su, Move rtcflags into time and date format variables,2,[],https://github.com/DeviationTX/deviation/pull/631,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/631,No reason to combine the flags. The memory save is zero but the ROM waste is noticeable. This also make the tx configuration code hard to convert to data driven mode.,No reason to combine the flags. The memory save is zero but the ROM waste is noticeable. This also make the tx configuration code hard to convert to data driven mode.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,633,2019-01-22T03:38:30Z,2019-01-22T03:55:11Z,2019-01-22T03:55:14Z,MERGED,True,0,1,1,https://github.com/howard0su,No need install libc-i386,1,[],https://github.com/DeviationTX/deviation/pull/633,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/633,"After compiler upgrade, the new GCC is a 64bit application instead of a 32bit like GCC 4.8. Remove the package libc6-i386.","After compiler upgrade, the new GCC is a 64bit application instead of a 32bit like GCC 4.8. Remove the package libc6-i386.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,633,2019-01-22T03:38:30Z,2019-01-22T03:55:11Z,2019-01-22T03:55:14Z,MERGED,True,0,1,1,https://github.com/howard0su,No need install libc-i386,1,[],https://github.com/DeviationTX/deviation/pull/633,https://github.com/PhracturedBlue,2,https://github.com/DeviationTX/deviation/pull/633#issuecomment-456261633,"After compiler upgrade, the new GCC is a 64bit application instead of a 32bit like GCC 4.8. Remove the package libc6-i386.","we should probably try moving to xenial sometime.  It will require moving to mingw-64 (which should still generate 32bit binaries), but I don't have 32 bit machines to test with (in the past we had trouble with 32bit binaries built on linux working in 64-bit windows but not 32-bit windows).
It's also been several years, and I'm not sure if 32-bit windows is still prevalent enough to support.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,633,2019-01-22T03:38:30Z,2019-01-22T03:55:11Z,2019-01-22T03:55:14Z,MERGED,True,0,1,1,https://github.com/howard0su,No need install libc-i386,1,[],https://github.com/DeviationTX/deviation/pull/633,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/633#issuecomment-456261941,"After compiler upgrade, the new GCC is a 64bit application instead of a 32bit like GCC 4.8. Remove the package libc6-i386.","based on my knowledge, it is complete fine to drop 32bit support. If we want to give user the experience to try, I would suggest to think about compile something for javascript. so we can host the emulator in website. No download needed, no struggle on platform support. and it will be a fun project to work with.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,633,2019-01-22T03:38:30Z,2019-01-22T03:55:11Z,2019-01-22T03:55:14Z,MERGED,True,0,1,1,https://github.com/howard0su,No need install libc-i386,1,[],https://github.com/DeviationTX/deviation/pull/633,https://github.com/PhracturedBlue,4,https://github.com/DeviationTX/deviation/pull/633#issuecomment-456262273,"After compiler upgrade, the new GCC is a 64bit application instead of a 32bit like GCC 4.8. Remove the package libc6-i386.","I tried that once.  I had issues, but I don't recall what they were",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,635,2019-01-22T04:31:24Z,2019-01-22T13:37:49Z,2019-01-22T13:37:58Z,MERGED,True,6,2,1,https://github.com/PhracturedBlue,Don't call GUI_TouchScrollbar() on non-touch transmitters,1,[],https://github.com/DeviationTX/deviation/pull/635,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/635,"This function should not ever be callable on a non-touch scrollbar since scrollbars are display only.
Should save ~120 bytes on non-touch transmitters","This function should not ever be callable on a non-touch scrollbar since scrollbars are display only.
Should save ~120 bytes on non-touch transmitters",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,636,2019-01-22T05:12:37Z,2019-01-22T14:21:59Z,2019-01-22T14:52:43Z,CLOSED,False,33,82,11,https://github.com/howard0su,Enable LTO build for devo7e,7,[],https://github.com/DeviationTX/deviation/pull/636,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/636,"Enable LTO for Modular build.
Remove Proto_stubs and replace with the proper attribute to control visibility. (The attribute is only supported by LTO build.)

Finally this gets working and this PR is depends on #564","Enable LTO for Modular build.
Remove Proto_stubs and replace with the proper attribute to control visibility. (The attribute is only supported by LTO build.)

Finally this gets working and this PR is depends on #564",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,636,2019-01-22T05:12:37Z,2019-01-22T14:21:59Z,2019-01-22T14:52:43Z,CLOSED,False,33,82,11,https://github.com/howard0su,Enable LTO build for devo7e,7,[],https://github.com/DeviationTX/deviation/pull/636,https://github.com/PhracturedBlue,2,https://github.com/DeviationTX/deviation/pull/636#issuecomment-456405803,"Enable LTO for Modular build.
Remove Proto_stubs and replace with the proper attribute to control visibility. (The attribute is only supported by LTO build.)

Finally this gets working and this PR is depends on #564","Why is this a separate PR needed?
I don't like removing the ProtoStubs.  While  the gains from LTO can't be ignored, and we need to enable it, I don't trust LTO yet and am likely to hold it up for a while still.  I also want to be able to do builds that are not LTO otherwise it'll be difficult to root cause LTO related issues(both regressions and new code).  I think LTO is likely to make coding for deviation more challenging, and as it can't be tested properly in the emulator, we need to be able to toggle it on and off.
So:

I want the patches separated so that lto is enabled ia a single patch without any other logic changes
I want to have a non-LTO build target (probably TYPE=non-lto).",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,636,2019-01-22T05:12:37Z,2019-01-22T14:21:59Z,2019-01-22T14:52:43Z,CLOSED,False,33,82,11,https://github.com/howard0su,Enable LTO build for devo7e,7,[],https://github.com/DeviationTX/deviation/pull/636,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/636#issuecomment-456410086,"Enable LTO for Modular build.
Remove Proto_stubs and replace with the proper attribute to control visibility. (The attribute is only supported by LTO build.)

Finally this gets working and this PR is depends on #564",Ack. Still work to do.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,636,2019-01-22T05:12:37Z,2019-01-22T14:21:59Z,2019-01-22T14:52:43Z,CLOSED,False,33,82,11,https://github.com/howard0su,Enable LTO build for devo7e,7,[],https://github.com/DeviationTX/deviation/pull/636,https://github.com/howard0su,4,https://github.com/DeviationTX/deviation/pull/636#issuecomment-456427541,"Enable LTO for Modular build.
Remove Proto_stubs and replace with the proper attribute to control visibility. (The attribute is only supported by LTO build.)

Finally this gets working and this PR is depends on #564","A good read on LTO: https://glandium.org/blog/?p=3888 it should give you
more confidence.
…
On Tue, Jan 22, 2019 at 9:50 PM PhracturedBlue ***@***.***> wrote:
 Why is this a separate PR needed?
 I don't like removing the ProtoStubs. While the gains from LTO can't be
 ignored, and we need to enable it, I don't trust LTO yet and am likely to
 hold it up for a while still. I also want to be able to do builds that are
 not LTO otherwise it'll be difficult to root cause LTO related issues(both
 regressions and new code). I think LTO is likely to make coding for
 deviation more challenging, and as it can't be tested properly in the
 emulator, we need to be able to toggle it on and off.

 So:

    - I want the patches separated so that lto is enabled ia a single
    patch without any other logic changes
    - I want to have a non-LTO build target (probably TYPE=non-lto).

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#636 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRLUw2yqAeT5CLNusvQ8gLKWZTHoPks5vFxc5gaJpZM4aL8fN>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,637,2019-01-22T14:11:49Z,2019-01-23T00:43:32Z,2019-01-23T00:43:36Z,MERGED,True,14,8,4,https://github.com/howard0su,move switchassign_page sepecfic variables into pagemem,1,[],https://github.com/DeviationTX/deviation/pull/637,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/637,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,637,2019-01-22T14:11:49Z,2019-01-23T00:43:32Z,2019-01-23T00:43:36Z,MERGED,True,14,8,4,https://github.com/howard0su,move switchassign_page sepecfic variables into pagemem,1,[],https://github.com/DeviationTX/deviation/pull/637,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/637#issuecomment-456420164,,more cleanup is pending for standard mixer code.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,638,2019-01-22T14:18:15Z,2019-02-09T02:14:38Z,2019-02-09T02:14:38Z,MERGED,True,67,88,9,https://github.com/howard0su,Use visibility attributes to export symbols to modules,9,[],https://github.com/DeviationTX/deviation/pull/638,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/638,"The exported functions to Module have to be explicit marked by MODULE_CALLTYPE.
Generate the exported symbols table based on the functions marked in 1. All the global variables are still exported by default.
All libc functions are directly linked into module to avoid dirty hack to change the original definition of libc functions. So far all modules are not suffering the size problem because this change.","The exported functions to Module have to be explicit marked by MODULE_CALLTYPE.
Generate the exported symbols table based on the functions marked in 1. All the global variables are still exported by default.
All libc functions are directly linked into module to avoid dirty hack to change the original definition of libc functions. So far all modules are not suffering the size problem because this change.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,638,2019-01-22T14:18:15Z,2019-02-09T02:14:38Z,2019-02-09T02:14:38Z,MERGED,True,67,88,9,https://github.com/howard0su,Use visibility attributes to export symbols to modules,9,[],https://github.com/DeviationTX/deviation/pull/638,https://github.com/PhracturedBlue,2,https://github.com/DeviationTX/deviation/pull/638#issuecomment-456427813,"The exported functions to Module have to be explicit marked by MODULE_CALLTYPE.
Generate the exported symbols table based on the functions marked in 1. All the global variables are still exported by default.
All libc functions are directly linked into module to avoid dirty hack to change the original definition of libc functions. So far all modules are not suffering the size problem because this change.","Not sure how, but is there a way to auto-generate ProtoStubs() from VISIBLE macros, or to otherwise enforce that every VISIBLE exists in ProtoStubs?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,638,2019-01-22T14:18:15Z,2019-02-09T02:14:38Z,2019-02-09T02:14:38Z,MERGED,True,67,88,9,https://github.com/howard0su,Use visibility attributes to export symbols to modules,9,[],https://github.com/DeviationTX/deviation/pull/638,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/638#issuecomment-456428847,"The exported functions to Module have to be explicit marked by MODULE_CALLTYPE.
Generate the exported symbols table based on the functions marked in 1. All the global variables are still exported by default.
All libc functions are directly linked into module to avoid dirty hack to change the original definition of libc functions. So far all modules are not suffering the size problem because this change.","I am also thinking about that. We can explicitly control what functions we can let module to call. as today, that requires some cleanup in the module code. The current modules call lots of different functions.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,638,2019-01-22T14:18:15Z,2019-02-09T02:14:38Z,2019-02-09T02:14:38Z,MERGED,True,67,88,9,https://github.com/howard0su,Use visibility attributes to export symbols to modules,9,[],https://github.com/DeviationTX/deviation/pull/638,https://github.com/howard0su,4,https://github.com/DeviationTX/deviation/pull/638#issuecomment-456634818,"The exported functions to Module have to be explicit marked by MODULE_CALLTYPE.
Generate the exported symbols table based on the functions marked in 1. All the global variables are still exported by default.
All libc functions are directly linked into module to avoid dirty hack to change the original definition of libc functions. So far all modules are not suffering the size problem because this change.","I found the solution to do that:

generate a list of functions to export
grep -R VISIBLE *.h --exclude common.h | awk -F""[: ()]"" '{print $4}'
get the symbols from map
use 'comm' to find the intersect.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,638,2019-01-22T14:18:15Z,2019-02-09T02:14:38Z,2019-02-09T02:14:38Z,MERGED,True,67,88,9,https://github.com/howard0su,Use visibility attributes to export symbols to modules,9,[],https://github.com/DeviationTX/deviation/pull/638,https://github.com/howard0su,5,https://github.com/DeviationTX/deviation/pull/638#issuecomment-456708731,"The exported functions to Module have to be explicit marked by MODULE_CALLTYPE.
Generate the exported symbols table based on the functions marked in 1. All the global variables are still exported by default.
All libc functions are directly linked into module to avoid dirty hack to change the original definition of libc functions. So far all modules are not suffering the size problem because this change.",@PhracturedBlue you can review the PR by each commit. this PR can further break down to smaller ones.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,638,2019-01-22T14:18:15Z,2019-02-09T02:14:38Z,2019-02-09T02:14:38Z,MERGED,True,67,88,9,https://github.com/howard0su,Use visibility attributes to export symbols to modules,9,[],https://github.com/DeviationTX/deviation/pull/638,https://github.com/howard0su,6,https://github.com/DeviationTX/deviation/pull/638#issuecomment-456709172,"The exported functions to Module have to be explicit marked by MODULE_CALLTYPE.
Generate the exported symbols table based on the functions marked in 1. All the global variables are still exported by default.
All libc functions are directly linked into module to avoid dirty hack to change the original definition of libc functions. So far all modules are not suffering the size problem because this change.","after the change, all the functions module is trying to call is marked as long_call. We can remove the file level long_call pragma. Need some testing here.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,638,2019-01-22T14:18:15Z,2019-02-09T02:14:38Z,2019-02-09T02:14:38Z,MERGED,True,67,88,9,https://github.com/howard0su,Use visibility attributes to export symbols to modules,9,[],https://github.com/DeviationTX/deviation/pull/638,https://github.com/PhracturedBlue,7,https://github.com/DeviationTX/deviation/pull/638#issuecomment-456802304,"The exported functions to Module have to be explicit marked by MODULE_CALLTYPE.
Generate the exported symbols table based on the functions marked in 1. All the global variables are still exported by default.
All libc functions are directly linked into module to avoid dirty hack to change the original definition of libc functions. So far all modules are not suffering the size problem because this change.","The modules are growing by a minimum of 20bytes and maximum of ~900 bytes with most in the 40ish range.  I'm not really keep on module size growth, since this has historically been the most difficult part of handling the devo7e.  Just because it fits today doesn't mean we should accept growth unless it is brining real gains.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,638,2019-01-22T14:18:15Z,2019-02-09T02:14:38Z,2019-02-09T02:14:38Z,MERGED,True,67,88,9,https://github.com/howard0su,Use visibility attributes to export symbols to modules,9,[],https://github.com/DeviationTX/deviation/pull/638,https://github.com/howard0su,8,https://github.com/DeviationTX/deviation/pull/638#issuecomment-456803840,"The exported functions to Module have to be explicit marked by MODULE_CALLTYPE.
Generate the exported symbols table based on the functions marked in 1. All the global variables are still exported by default.
All libc functions are directly linked into module to avoid dirty hack to change the original definition of libc functions. So far all modules are not suffering the size problem because this change.",I believe we remove unnecessary long_call pragma should win those bytes back. Let me run some testings. worse case is hack memcpy etc prototypes.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,638,2019-01-22T14:18:15Z,2019-02-09T02:14:38Z,2019-02-09T02:14:38Z,MERGED,True,67,88,9,https://github.com/howard0su,Use visibility attributes to export symbols to modules,9,[],https://github.com/DeviationTX/deviation/pull/638,https://github.com/howard0su,9,https://github.com/DeviationTX/deviation/pull/638#issuecomment-456805788,"The exported functions to Module have to be explicit marked by MODULE_CALLTYPE.
Generate the exported symbols table based on the functions marked in 1. All the global variables are still exported by default.
All libc functions are directly linked into module to avoid dirty hack to change the original definition of libc functions. So far all modules are not suffering the size problem because this change.",900 bytes should related to the change to include libc.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,638,2019-01-22T14:18:15Z,2019-02-09T02:14:38Z,2019-02-09T02:14:38Z,MERGED,True,67,88,9,https://github.com/howard0su,Use visibility attributes to export symbols to modules,9,[],https://github.com/DeviationTX/deviation/pull/638,https://github.com/howard0su,10,https://github.com/DeviationTX/deviation/pull/638#issuecomment-456809186,"The exported functions to Module have to be explicit marked by MODULE_CALLTYPE.
Generate the exported symbols table based on the functions marked in 1. All the global variables are still exported by default.
All libc functions are directly linked into module to avoid dirty hack to change the original definition of libc functions. So far all modules are not suffering the size problem because this change.","20bytes are because:
.init           0x0000000020004e7c        0xc
.init          0x0000000020004e7c        0xc /home/junsu/gcc-arm-none-eabi-8-2018-q4-major/bin/../lib/gcc/arm-none-eabi/8.2.1/crti.o
0x0000000020004e7c                _init
.fini           0x0000000020004e88        0xc
.fini          0x0000000020004e88        0xc /home/junsu/gcc-arm-none-eabi-8-2018-q4-major/bin/../lib/gcc/arm-none-eabi/8.2.1/crti.o
0x0000000020004e88                _fini
Let me try to remove long_call to see what's the gain.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,638,2019-01-22T14:18:15Z,2019-02-09T02:14:38Z,2019-02-09T02:14:38Z,MERGED,True,67,88,9,https://github.com/howard0su,Use visibility attributes to export symbols to modules,9,[],https://github.com/DeviationTX/deviation/pull/638,https://github.com/howard0su,11,https://github.com/DeviationTX/deviation/pull/638#issuecomment-457006785,"The exported functions to Module have to be explicit marked by MODULE_CALLTYPE.
Generate the exported symbols table based on the functions marked in 1. All the global variables are still exported by default.
All libc functions are directly linked into module to avoid dirty hack to change the original definition of libc functions. So far all modules are not suffering the size problem because this change.","after the latest two, most of mod gets smaller, except the followings:
pxx.mod 1012
ppm.mod 1000
crsf.mod 100
sbus.mod 100
bugs3.mod 60
skyartec.mod 56
frsky-v8.mod 24
I will fix pxx and ppm ones and leave others as it is. sounds reasonable?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,638,2019-01-22T14:18:15Z,2019-02-09T02:14:38Z,2019-02-09T02:14:38Z,MERGED,True,67,88,9,https://github.com/howard0su,Use visibility attributes to export symbols to modules,9,[],https://github.com/DeviationTX/deviation/pull/638,https://github.com/PhracturedBlue,12,https://github.com/DeviationTX/deviation/pull/638#issuecomment-457012848,"The exported functions to Module have to be explicit marked by MODULE_CALLTYPE.
Generate the exported symbols table based on the functions marked in 1. All the global variables are still exported by default.
All libc functions are directly linked into module to avoid dirty hack to change the original definition of libc functions. So far all modules are not suffering the size problem because this change.",Looks good,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,638,2019-01-22T14:18:15Z,2019-02-09T02:14:38Z,2019-02-09T02:14:38Z,MERGED,True,67,88,9,https://github.com/howard0su,Use visibility attributes to export symbols to modules,9,[],https://github.com/DeviationTX/deviation/pull/638,https://github.com/howard0su,13,https://github.com/DeviationTX/deviation/pull/638#issuecomment-461707545,"The exported functions to Module have to be explicit marked by MODULE_CALLTYPE.
Generate the exported symbols table based on the functions marked in 1. All the global variables are still exported by default.
All libc functions are directly linked into module to avoid dirty hack to change the original definition of libc functions. So far all modules are not suffering the size problem because this change.","I repurpose this PR to just generate proto_stubs on the fly. And defer the change to only expose certain functions to a module and remove the needs of long_call.
@PhracturedBlue please review.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,638,2019-01-22T14:18:15Z,2019-02-09T02:14:38Z,2019-02-09T02:14:38Z,MERGED,True,67,88,9,https://github.com/howard0su,Use visibility attributes to export symbols to modules,9,[],https://github.com/DeviationTX/deviation/pull/638,https://github.com/howard0su,14,https://github.com/DeviationTX/deviation/pull/638#issuecomment-461994067,"The exported functions to Module have to be explicit marked by MODULE_CALLTYPE.
Generate the exported symbols table based on the functions marked in 1. All the global variables are still exported by default.
All libc functions are directly linked into module to avoid dirty hack to change the original definition of libc functions. So far all modules are not suffering the size problem because this change.",@PhracturedBlue Can you check?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,638,2019-01-22T14:18:15Z,2019-02-09T02:14:38Z,2019-02-09T02:14:38Z,MERGED,True,67,88,9,https://github.com/howard0su,Use visibility attributes to export symbols to modules,9,[],https://github.com/DeviationTX/deviation/pull/638,https://github.com/howard0su,15,https://github.com/DeviationTX/deviation/pull/638#issuecomment-462003935,"The exported functions to Module have to be explicit marked by MODULE_CALLTYPE.
Generate the exported symbols table based on the functions marked in 1. All the global variables are still exported by default.
All libc functions are directly linked into module to avoid dirty hack to change the original definition of libc functions. So far all modules are not suffering the size problem because this change.","Missing a function will cause a error during linking module like today.
The next step is only exposing the functions we explictly allow module to call as the last revision I did.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,639,2019-01-22T14:25:10Z,2019-01-22T15:07:13Z,2019-01-22T15:07:17Z,MERGED,True,52,26,2,https://github.com/howard0su,Split at9 button's ISR into a seperate file,1,[],https://github.com/DeviationTX/deviation/pull/639,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/639,Also optimize handle_rotary_encoder a bit.,Also optimize handle_rotary_encoder a bit.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,640,2019-01-22T14:31:47Z,2019-01-22T15:07:37Z,2019-01-22T15:07:44Z,MERGED,True,3,2,2,https://github.com/howard0su,Use the right prototype to avoid link warning,1,[],https://github.com/DeviationTX/deviation/pull/640,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/640,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,641,2019-01-22T14:36:16Z,2019-01-22T15:08:19Z,2019-01-22T15:08:19Z,MERGED,True,7,5,1,https://github.com/howard0su,Filter out the functions which cannot be used for repack,1,[],https://github.com/DeviationTX/deviation/pull/641,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/641,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,641,2019-01-22T14:36:16Z,2019-01-22T15:08:19Z,2019-01-22T15:08:19Z,MERGED,True,7,5,1,https://github.com/howard0su,Filter out the functions which cannot be used for repack,1,[],https://github.com/DeviationTX/deviation/pull/641,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/641#issuecomment-456431032,,"yes. if there is no functions generated by LTO, the change is a noop.
…
On Tue, Jan 22, 2019 at 10:59 PM PhracturedBlue ***@***.***> wrote:
 ***@***.**** approved this pull request.

 I assume this is a NO-OP for non-LTO?

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#641 (review)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRH5siPLHWhl8gMqhfs6r-V5SpSLOks5vFyc4gaJpZM4aMzWP>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,642,2019-01-22T14:54:36Z,2019-01-23T23:23:57Z,2019-01-23T23:23:57Z,MERGED,True,22,15,6,https://github.com/howard0su,move gyrosense_page specific RAM into pagemem,4,[],https://github.com/DeviationTX/deviation/pull/642,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/642,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,642,2019-01-22T14:54:36Z,2019-01-23T23:23:57Z,2019-01-23T23:23:57Z,MERGED,True,22,15,6,https://github.com/howard0su,move gyrosense_page specific RAM into pagemem,4,[],https://github.com/DeviationTX/deviation/pull/642,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/642#issuecomment-456812468,,"Does lint support warning? Say this sort of comments are warning only?

PhracturedBlue <notifications@github.com>于2019年1月23日 周三下午9:55写道：
 ***@***.**** commented on this pull request.
 ------------------------------

 In src/pages/common/standard/_gyrosense_page.c
 <#642 (comment)>:

 >      }
 -    sprintf(tempstring, ""%d%%"", output[i]);
 +    snprintf(tempstring, sizeof(tempstring), ""%d%%"", mp->output[i]);
      return tempstring;

 I'm not sure this is needed. we don't really need to use snprintf
 everywhere. Only places where the size is not constrained as it is here.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#642 (review)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzREICkBgrGZfvhgQFFbE3n2wEh9Q9ks5vGGm-gaJpZM4aM10h>
 .

-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,642,2019-01-22T14:54:36Z,2019-01-23T23:23:57Z,2019-01-23T23:23:57Z,MERGED,True,22,15,6,https://github.com/howard0su,move gyrosense_page specific RAM into pagemem,4,[],https://github.com/DeviationTX/deviation/pull/642,https://github.com/PhracturedBlue,3,https://github.com/DeviationTX/deviation/pull/642#issuecomment-456903275,,"The cpplinter is really not the best.  It is designed to rigidly follow the Google C++ coding style with minimal configuration options.  I don't happen to agree with everything in that standard, and not all of it applies to embeded design where size and performance tradeoffs are needed.
However, I haven't yet found a better alternative.
Our options:

I can disable rules we don't agree with
I can improve the auto-commenter to understand 'Resolved' conversations such that we can mark lines we don't intend to fix and have it respect that
We can look for a better linter (but I didn't find one so far)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,642,2019-01-22T14:54:36Z,2019-01-23T23:23:57Z,2019-01-23T23:23:57Z,MERGED,True,22,15,6,https://github.com/howard0su,move gyrosense_page specific RAM into pagemem,4,[],https://github.com/DeviationTX/deviation/pull/642,https://github.com/howard0su,4,https://github.com/DeviationTX/deviation/pull/642#issuecomment-457002956,,"I vote to remove this rule. first, this is not a style rule. second, this doesn't apply everywhere. we should catch this sort of usage via codereview.
I will revert that change and merge this.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,643,2019-01-22T15:32:10Z,2019-01-23T00:41:32Z,2019-01-23T00:41:36Z,MERGED,True,0,4,2,https://github.com/howard0su,remove dead variable,2,[],https://github.com/DeviationTX/deviation/pull/643,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/643,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,644,2019-01-22T16:03:53Z,2019-01-31T12:35:40Z,2019-01-31T12:35:46Z,MERGED,True,55,45,28,https://github.com/howard0su,PAGE_ShowHeader accepts raw strings,3,[],https://github.com/DeviationTX/deviation/pull/644,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/644,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,644,2019-01-22T16:03:53Z,2019-01-31T12:35:40Z,2019-01-31T12:35:46Z,MERGED,True,55,45,28,https://github.com/howard0su,PAGE_ShowHeader accepts raw strings,3,[],https://github.com/DeviationTX/deviation/pull/644,https://github.com/PhracturedBlue,2,https://github.com/DeviationTX/deviation/pull/644#issuecomment-456482982,,"FYI, you can run 'make lint' on your own machine.  It should tell you about linting issues compared to the 'master' branch.  So as long as you keep master synced with upstream, it should match what the Travis build does.  If not, let me know and I'll try to fix it.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,644,2019-01-22T16:03:53Z,2019-01-31T12:35:40Z,2019-01-31T12:35:46Z,MERGED,True,55,45,28,https://github.com/howard0su,PAGE_ShowHeader accepts raw strings,3,[],https://github.com/DeviationTX/deviation/pull/644,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/644#issuecomment-456661155,,I missed the part of sync master with latest. It works fine after that.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,645,2019-01-23T03:44:04Z,2019-01-23T05:51:52Z,2019-01-23T05:51:56Z,MERGED,True,3,3,2,https://github.com/howard0su,Add used attribute to all ISR functions,1,[],https://github.com/DeviationTX/deviation/pull/645,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/645,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,646,2019-01-23T04:27:50Z,2019-01-23T04:53:41Z,2019-01-23T04:53:47Z,MERGED,True,1,1,1,https://github.com/howard0su,Ignore return code of upload coverage data,1,[],https://github.com/DeviationTX/deviation/pull/646,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/646,The upload coverage data is broken in my private CI runs as I didn't enable coveralls. Ignore the return code of coveralls cmd to workaround this.,The upload coverage data is broken in my private CI runs as I didn't enable coveralls. Ignore the return code of coveralls cmd to workaround this.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,647,2019-01-23T08:15:43Z,2019-01-23T10:38:40Z,2019-01-23T10:38:40Z,MERGED,True,2,2,2,https://github.com/vladislavy, Fix t8sg_v2 for changed flash memory chip ,2,[],https://github.com/DeviationTX/deviation/pull/647,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/647,"It looks like new T8SG V2 transmitters have different flash memory chip, they doesn't work with current nightly builds. The flash memory auto detect cure this problem.","It looks like new T8SG V2 transmitters have different flash memory chip, they doesn't work with current nightly builds. The flash memory auto detect cure this problem.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,648,2019-01-23T14:25:16Z,2019-01-23T16:21:56Z,2019-01-23T16:22:07Z,MERGED,True,28,12,2,https://github.com/hexfet,Add special Devo telemetry format,3,[],https://github.com/DeviationTX/deviation/pull/648,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/648,"Change telemetry protocol option to support both standard (Devo) and QR-X350 telemetry formats.  The X350 sends lat/long as decimal degrees.  Standard format is degrees decimal minutes.
Fixes #627.","Change telemetry protocol option to support both standard (Devo) and QR-X350 telemetry formats.  The X350 sends lat/long as decimal degrees.  Standard format is degrees decimal minutes.
Fixes #627.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,650,2019-01-24T03:42:29Z,2019-01-25T00:59:14Z,2019-01-25T00:59:14Z,MERGED,True,13,7,1,https://github.com/howard0su,Devo prototocol cleanup,1,[],https://github.com/DeviationTX/deviation/pull/650,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/650,handle PROTOCMD_SETOPTIONS in the right way to avoid calling back to PROTOCOL_INIT. This can result a recursive call which we should avoid. And PROTOCOL_INIT is not supposed to expose to protocol anyway.,handle PROTOCMD_SETOPTIONS in the right way to avoid calling back to PROTOCOL_INIT. This can result a recursive call which we should avoid. And PROTOCOL_INIT is not supposed to expose to protocol anyway.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,650,2019-01-24T03:42:29Z,2019-01-25T00:59:14Z,2019-01-25T00:59:14Z,MERGED,True,13,7,1,https://github.com/howard0su,Devo prototocol cleanup,1,[],https://github.com/DeviationTX/deviation/pull/650,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/650#issuecomment-457089486,handle PROTOCMD_SETOPTIONS in the right way to avoid calling back to PROTOCOL_INIT. This can result a recursive call which we should avoid. And PROTOCOL_INIT is not supposed to expose to protocol anyway.,@hexfet can you help me verify on real receiver? I don't have devo reciever.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,650,2019-01-24T03:42:29Z,2019-01-25T00:59:14Z,2019-01-25T00:59:14Z,MERGED,True,13,7,1,https://github.com/howard0su,Devo prototocol cleanup,1,[],https://github.com/DeviationTX/deviation/pull/650,https://github.com/hexfet,3,https://github.com/DeviationTX/deviation/pull/650#issuecomment-457232731,handle PROTOCMD_SETOPTIONS in the right way to avoid calling back to PROTOCOL_INIT. This can result a recursive call which we should avoid. And PROTOCOL_INIT is not supposed to expose to protocol anyway.,Yes I will check this evening.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,650,2019-01-24T03:42:29Z,2019-01-25T00:59:14Z,2019-01-25T00:59:14Z,MERGED,True,13,7,1,https://github.com/howard0su,Devo prototocol cleanup,1,[],https://github.com/DeviationTX/deviation/pull/650,https://github.com/hexfet,4,https://github.com/DeviationTX/deviation/pull/650#issuecomment-457416391,handle PROTOCMD_SETOPTIONS in the right way to avoid calling back to PROTOCOL_INIT. This can result a recursive call which we should avoid. And PROTOCOL_INIT is not supposed to expose to protocol anyway.,"This change works fine.  Tested changing from telemetry on to off and back, though I don't have a telemetry receiver.
While testing found a bug in master.  Navigate to the fixed id page, click done, then ext button no longer works, protocol options not accessible with ENT but clicking bind works.  Bug is in devo10 emulator too.  Starting to look at it.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,651,2019-01-24T03:45:50Z,2019-01-25T05:17:46Z,2019-01-25T05:17:46Z,MERGED,True,2,52,45,https://github.com/howard0su,Remove MODULE_CALLTYPE on callback functions,1,[],https://github.com/DeviationTX/deviation/pull/651,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/651,"They are not needed. As GCC document states clearly that all the calls
through function pointer are always long-call.","They are not needed. As GCC document states clearly that all the calls
through function pointer are always long-call.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,651,2019-01-24T03:45:50Z,2019-01-25T05:17:46Z,2019-01-25T05:17:46Z,MERGED,True,2,52,45,https://github.com/howard0su,Remove MODULE_CALLTYPE on callback functions,1,[],https://github.com/DeviationTX/deviation/pull/651,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/651#issuecomment-457442122,"They are not needed. As GCC document states clearly that all the calls
through function pointer are always long-call.","Verified this is a noop:
$ diff -r devo7e devo7e.orig/
Binary files devo7e/devo7e.elf and devo7e.orig/devo7e.elf differ
diff -r devo7e/hgstamp devo7e.orig/hgstamp
1c1
< devo7e-v5.0.0-18fc37b

devo7e-v5.0.0-ccd65e5
Binary files devo7e/version.o and devo7e.orig/version.o differ",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,651,2019-01-24T03:45:50Z,2019-01-25T05:17:46Z,2019-01-25T05:17:46Z,MERGED,True,2,52,45,https://github.com/howard0su,Remove MODULE_CALLTYPE on callback functions,1,[],https://github.com/DeviationTX/deviation/pull/651,https://github.com/PhracturedBlue,3,https://github.com/DeviationTX/deviation/pull/651#issuecomment-457449270,"They are not needed. As GCC document states clearly that all the calls
through function pointer are always long-call.","This was added in: 3f09a47
With the log message:    Warning cleanup
It looks like this was needed with the previous protocol design where we used a case statement to call the protocol functions.  The current function-pointer implementation using *_Cmds() shouldn't need it anymore",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,652,2019-01-25T03:37:49Z,2019-01-29T14:01:44Z,2019-01-29T14:01:44Z,MERGED,True,28,1,27,https://github.com/hexfet,Fix modal tracking bug introduced in PR #543,3,[],https://github.com/DeviationTX/deviation/pull/652,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/652,After commit b7e1da1 if the model name or fixed id submenus are used the model config page can no longer be exited with EXT and ENT doesn't work to enter protocol options.  Seems like the modal flag is used to keep track of being in these submenus.,After commit b7e1da1 if the model name or fixed id submenus are used the model config page can no longer be exited with EXT and ENT doesn't work to enter protocol options.  Seems like the modal flag is used to keep track of being in these submenus.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,652,2019-01-25T03:37:49Z,2019-01-29T14:01:44Z,2019-01-29T14:01:44Z,MERGED,True,28,1,27,https://github.com/hexfet,Fix modal tracking bug introduced in PR #543,3,[],https://github.com/DeviationTX/deviation/pull/652,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/652#issuecomment-457446195,After commit b7e1da1 if the model name or fixed id submenus are used the model config page can no longer be exited with EXT and ENT doesn't work to enter protocol options.  Seems like the modal flag is used to keep track of being in these submenus.,shall we just revert the change? Looks like I didn't fully understand this flag.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,652,2019-01-25T03:37:49Z,2019-01-29T14:01:44Z,2019-01-29T14:01:44Z,MERGED,True,28,1,27,https://github.com/hexfet,Fix modal tracking bug introduced in PR #543,3,[],https://github.com/DeviationTX/deviation/pull/652,https://github.com/hexfet,3,https://github.com/DeviationTX/deviation/pull/652#issuecomment-457447446,After commit b7e1da1 if the model name or fixed id submenus are used the model config page can no longer be exited with EXT and ENT doesn't work to enter protocol options.  Seems like the modal flag is used to keep track of being in these submenus.,"The gui code is not my strength either.  Let's see what others comment.
Even before the changes the behavior is not ideal because when the submenus are exited the ""previous"" page is restarted without any current cursor location.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,652,2019-01-25T03:37:49Z,2019-01-29T14:01:44Z,2019-01-29T14:01:44Z,MERGED,True,28,1,27,https://github.com/hexfet,Fix modal tracking bug introduced in PR #543,3,[],https://github.com/DeviationTX/deviation/pull/652,https://github.com/PhracturedBlue,4,https://github.com/DeviationTX/deviation/pull/652#issuecomment-457770427,After commit b7e1da1 if the model name or fixed id submenus are used the model config page can no longer be exited with EXT and ENT doesn't work to enter protocol options.  Seems like the modal flag is used to keep track of being in these submenus.,"Let's revert b7e1da1 and try again.
I'm a bit rusty on how the pages all work, and it'll take some time to work it all out.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,653,2019-01-25T15:55:43Z,2019-02-08T12:13:06Z,2019-02-25T11:49:00Z,MERGED,True,46,72,9,https://github.com/howard0su,Cleanup USB stack to save some ROM,1,[],https://github.com/DeviationTX/deviation/pull/653,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/653,"Split out USB_Enable from [MSC|HID]_Enable
Remove some duplicate code
remove the array EpInt_IN/OUT.","Split out USB_Enable from [MSC|HID]_Enable
Remove some duplicate code
remove the array EpInt_IN/OUT.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,653,2019-01-25T15:55:43Z,2019-02-08T12:13:06Z,2019-02-25T11:49:00Z,MERGED,True,46,72,9,https://github.com/howard0su,Cleanup USB stack to save some ROM,1,[],https://github.com/DeviationTX/deviation/pull/653,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/653#issuecomment-457626133,"Split out USB_Enable from [MSC|HID]_Enable
Remove some duplicate code
remove the array EpInt_IN/OUT.","after couple of try to integrate usb lib of libopencm3, I finally decide to stay with our current implementation.
the libopencm3 lib is 1KB smaller due to lack of MSC bulk transfer support. In the same time, the memory usage is about 4KB larger than current usb stack. I tried couple of methods to reduce it. But turns out without big rewrite, it is hard to reduce the memory usage.
So I decided to go back and optimize our current stack to get some additional ROM & RAM saving.
For your reference (stats on devo7e):
integrating libopencm3 usb + umass +hid
ROM: 0x08003000 - 0x0801f228 = 112.54kB
RAM: 0x20000000 - 0x2000379c =  13.90kB
what we are today:
ROM: 0x08003000 - 0x0801f61c = 113.53kB
RAM: 0x20000000 - 0x20002714 =   9.77kB",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,653,2019-01-25T15:55:43Z,2019-02-08T12:13:06Z,2019-02-25T11:49:00Z,MERGED,True,46,72,9,https://github.com/howard0su,Cleanup USB stack to save some ROM,1,[],https://github.com/DeviationTX/deviation/pull/653,https://github.com/PhracturedBlue,3,https://github.com/DeviationTX/deviation/pull/653#issuecomment-457684265,"Split out USB_Enable from [MSC|HID]_Enable
Remove some duplicate code
remove the array EpInt_IN/OUT.",This is a lot of work for 100bytes of ROM.  The only thing I'm wary of is the changes to usb_conf.h and usb_istr.c.  These changes make it harder to diff against the reference implementation which in turn makes it harder for us to pull in a new reference implementation should we ever want to in the future.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,653,2019-01-25T15:55:43Z,2019-02-08T12:13:06Z,2019-02-25T11:49:00Z,MERGED,True,46,72,9,https://github.com/howard0su,Cleanup USB stack to save some ROM,1,[],https://github.com/DeviationTX/deviation/pull/653,https://github.com/PhracturedBlue,4,https://github.com/DeviationTX/deviation/pull/653#issuecomment-457685350,"Split out USB_Enable from [MSC|HID]_Enable
Remove some duplicate code
remove the array EpInt_IN/OUT.","I see from your other PR that you intend to do a lot of work to the USB drivers, so I'm not going to sweat the little things.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,653,2019-01-25T15:55:43Z,2019-02-08T12:13:06Z,2019-02-25T11:49:00Z,MERGED,True,46,72,9,https://github.com/howard0su,Cleanup USB stack to save some ROM,1,[],https://github.com/DeviationTX/deviation/pull/653,https://github.com/howard0su,5,https://github.com/DeviationTX/deviation/pull/653#issuecomment-459355281,"Split out USB_Enable from [MSC|HID]_Enable
Remove some duplicate code
remove the array EpInt_IN/OUT.",Please review again. I keep the USB lib code untouched this time.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,654,2019-01-25T17:01:05Z,2019-01-26T16:00:50Z,2019-01-26T16:00:50Z,CLOSED,False,124,17494,47,https://github.com/howard0su,Remove chip lib in usb stack,6,[],https://github.com/DeviationTX/deviation/pull/654,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/654,the code change is very small. the only logic change is use gpio_set/clear instead of chip lib. Other changes are all about the typedef stuffs.,the code change is very small. the only logic change is use gpio_set/clear instead of chip lib. Other changes are all about the typedef stuffs.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,654,2019-01-25T17:01:05Z,2019-01-26T16:00:50Z,2019-01-26T16:00:50Z,CLOSED,False,124,17494,47,https://github.com/howard0su,Remove chip lib in usb stack,6,[],https://github.com/DeviationTX/deviation/pull/654,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/654#issuecomment-457642660,the code change is very small. the only logic change is use gpio_set/clear instead of chip lib. Other changes are all about the typedef stuffs.,"ccceae6 and 81e8881 can be split into another PR.
after cleanup, the code is much easy to organize. I am thinking to split out some umass code into a module to save the rom for devo7e. since when having USB, we anyway disable the protocol module from running.
I expect we can save 3KB ROM. then even without LTO, i have enough ROM to put devo7e localization support. (of course, some pending changes to fix up UI is still required,) @PhracturedBlue",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,654,2019-01-25T17:01:05Z,2019-01-26T16:00:50Z,2019-01-26T16:00:50Z,CLOSED,False,124,17494,47,https://github.com/howard0su,Remove chip lib in usb stack,6,[],https://github.com/DeviationTX/deviation/pull/654,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/654#issuecomment-457782912,the code change is very small. the only logic change is use gpio_set/clear instead of chip lib. Other changes are all about the typedef stuffs.,no intention to commit it as it is. just like to have a code review before I move forward.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,654,2019-01-25T17:01:05Z,2019-01-26T16:00:50Z,2019-01-26T16:00:50Z,CLOSED,False,124,17494,47,https://github.com/howard0su,Remove chip lib in usb stack,6,[],https://github.com/DeviationTX/deviation/pull/654,https://github.com/PhracturedBlue,4,https://github.com/DeviationTX/deviation/pull/654#issuecomment-457790355,the code change is very small. the only logic change is use gpio_set/clear instead of chip lib. Other changes are all about the typedef stuffs.,"I don't see any major issues.  The patches will need to be broken down a bit more for inclusion.  I'd like to see the overall gain materialize before committing these changes because this basically diverges us from any existing USB code-base.  That makes it harder to support if we run into issues, so I'd like to see the gains show it to be worth the effort.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,654,2019-01-25T17:01:05Z,2019-01-26T16:00:50Z,2019-01-26T16:00:50Z,CLOSED,False,124,17494,47,https://github.com/howard0su,Remove chip lib in usb stack,6,[],https://github.com/DeviationTX/deviation/pull/654,https://github.com/howard0su,5,https://github.com/DeviationTX/deviation/pull/654#issuecomment-457842505,the code change is very small. the only logic change is use gpio_set/clear instead of chip lib. Other changes are all about the typedef stuffs.,sure. I will keep your concern in mind and reduce the diff with the upstream.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,655,2019-01-25T18:51:02Z,2019-01-26T19:18:27Z,2019-01-26T19:18:27Z,MERGED,True,38927,210,6,https://github.com/PhracturedBlue,Add Hiragana and Katagana Kanji characters to support Japanese translation,2,[],https://github.com/DeviationTX/deviation/pull/655,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/655,Add new Kanji characters (0x3040 - 0x30ff) to support new Japanese translation for both 12normal and 15normal fonts,Add new Kanji characters (0x3040 - 0x30ff) to support new Japanese translation for both 12normal and 15normal fonts,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,655,2019-01-25T18:51:02Z,2019-01-26T19:18:27Z,2019-01-26T19:18:27Z,MERGED,True,38927,210,6,https://github.com/PhracturedBlue,Add Hiragana and Katagana Kanji characters to support Japanese translation,2,[],https://github.com/DeviationTX/deviation/pull/655,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/655#issuecomment-457775260,Add new Kanji characters (0x3040 - 0x30ff) to support new Japanese translation for both 12normal and 15normal fonts,"Could not locate character U-5909
Could not locate character U-7d9a
Could not locate character U-52b9
Could not locate character U-5358
I got some warnings when I am playing with this change on JP.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,655,2019-01-25T18:51:02Z,2019-01-26T19:18:27Z,2019-01-26T19:18:27Z,MERGED,True,38927,210,6,https://github.com/PhracturedBlue,Add Hiragana and Katagana Kanji characters to support Japanese translation,2,[],https://github.com/DeviationTX/deviation/pull/655,https://github.com/PhracturedBlue,3,https://github.com/DeviationTX/deviation/pull/655#issuecomment-457780972,Add new Kanji characters (0x3040 - 0x30ff) to support new Japanese translation for both 12normal and 15normal fonts,"I think this is the full list of characters in our translations that don't have font characters (need to sanity check some of those...a couple don't make any sense)
Missing: 0x7f:  (7f)
Missing: 0x98: � (c2 98)
Missing: 0x190: Ɛ (c6 90)
Missing: 0x19f: Ɵ (c6 9f)
Missing: 0x1c4: Ǆ (c7 84)
Missing: 0x24d: ɍ (c9 8d)
Missing: 0x2b9: ʹ (ca b9)
Missing: 0x318: ̘ (cc 98)
Missing: 0x6bd: ڽ (da bd)
Missing: 0x7ce: ߎ (df 8e)
Missing: 0x3001: 、 (e3 80 81)
Missing: 0x3002: 。 (e3 80 82)
Missing: 0x5024: 値 (e5 80 a4)
Missing: 0x52b9: 効 (e5 8a b9)
Missing: 0x5358: 単 (e5 8d 98)
Missing: 0x5727: 圧 (e5 9c a7)
Missing: 0x5909: 変 (e5 a4 89)
Missing: 0x5b9f: 実 (e5 ae 9f)
Missing: 0x5bfe: 対 (e5 af be)
Missing: 0x623b: 戻 (e6 88 bb)
Missing: 0x629e: 択 (e6 8a 9e)
Missing: 0x62e1: 拡 (e6 8b a1)
Missing: 0x633f: 挿 (e6 8c bf)
Missing: 0x6442: 摂 (e6 91 82)
Missing: 0x691c: 検 (e6 a4 9c)
Missing: 0x7d4c: 経 (e7 b5 8c)
Missing: 0x7d76: 絶 (e7 b5 b6)
Missing: 0x7d9a: 続 (e7 b6 9a)
Missing: 0x7dd1: 緑 (e7 b7 91)
Missing: 0x8ee2: 転 (e8 bb a2)
Missing: 0x9045: 遅 (e9 81 85)
Missing: 0xfeff: ﻿ (ef bb bf)
Missing: 0xff01: ！ (ef bc 81)
Missing: 0xff1a: ： (ef bc 9a)
Missing: 0xff1f: ？ (ef bc 9f)
Missing: 0xfffd: � (ef bf bd)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,655,2019-01-25T18:51:02Z,2019-01-26T19:18:27Z,2019-01-26T19:18:27Z,MERGED,True,38927,210,6,https://github.com/PhracturedBlue,Add Hiragana and Katagana Kanji characters to support Japanese translation,2,[],https://github.com/DeviationTX/deviation/pull/655,https://github.com/PhracturedBlue,4,https://github.com/DeviationTX/deviation/pull/655#issuecomment-457797679,Add new Kanji characters (0x3040 - 0x30ff) to support new Japanese translation for both 12normal and 15normal fonts,I have cleaned up the translations to use Latin punctuation for asian languages.  I also added the missing characters such that the 12 and 15 fonts contain all characters used in all translations,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,656,2019-01-26T15:56:32Z,2019-01-26T17:51:17Z,2019-01-26T17:51:17Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix crash in text of datalog page,1,[],https://github.com/DeviationTX/deviation/pull/656,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/656,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,657,2019-01-28T02:24:42Z,2019-03-06T02:12:31Z,2019-03-06T02:12:36Z,MERGED,True,1286,1,25,https://github.com/PhracturedBlue,[WIP] Add T12 target,20,[],https://github.com/DeviationTX/deviation/pull/657,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/657,"Add jumper t12 target.
This is very much a work-in-progress.  It compiles, but does not yet boot on the transmitter.  I have been able to build test-firmwares that do boot on the transmitter, so we aren't too far away.
To do:
[x] Document T12 hardware and connections on the wiki
[x] Get code to compile with STM32F2 target
[x] Forward port libopencm3 STM32F2 support from 4.0
[x] Enable CDCACM USB serial support (no UART exposed on T12)
[x] Enable ADC
[x] Validate LCD code can be reused from Devo7e (or write a new driver)
[x] Enabble buttons and switches
[ ] Enable power button
[ ] Enable RTC
[x] Support SDCARD filesystem
[ ] Enable audio driver
[ ] Enable volume control
[x] Support installing with OTX Bootloader
[ ] Support 4-in-1 module Tx
[ ] Support 4-in-1 module Telemetry
[ ] Cleanup code (still using x9d named files)
[ ] Figure out code-reuse between F1 and F2 (no use of common/stm32 yet)","Add jumper t12 target.
This is very much a work-in-progress.  It compiles, but does not yet boot on the transmitter.  I have been able to build test-firmwares that do boot on the transmitter, so we aren't too far away.
To do:
[x] Document T12 hardware and connections on the wiki
[x] Get code to compile with STM32F2 target
[x] Forward port libopencm3 STM32F2 support from 4.0
[x] Enable CDCACM USB serial support (no UART exposed on T12)
[x] Enable ADC
[x] Validate LCD code can be reused from Devo7e (or write a new driver)
[x] Enabble buttons and switches
[ ] Enable power button
[ ] Enable RTC
[x] Support SDCARD filesystem
[ ] Enable audio driver
[ ] Enable volume control
[x] Support installing with OTX Bootloader
[ ] Support 4-in-1 module Tx
[ ] Support 4-in-1 module Telemetry
[ ] Cleanup code (still using x9d named files)
[ ] Figure out code-reuse between F1 and F2 (no use of common/stm32 yet)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,657,2019-01-28T02:24:42Z,2019-03-06T02:12:31Z,2019-03-06T02:12:36Z,MERGED,True,1286,1,25,https://github.com/PhracturedBlue,[WIP] Add T12 target,20,[],https://github.com/DeviationTX/deviation/pull/657,https://github.com/PhracturedBlue,2,https://github.com/DeviationTX/deviation/pull/657#issuecomment-457980581,"Add jumper t12 target.
This is very much a work-in-progress.  It compiles, but does not yet boot on the transmitter.  I have been able to build test-firmwares that do boot on the transmitter, so we aren't too far away.
To do:
[x] Document T12 hardware and connections on the wiki
[x] Get code to compile with STM32F2 target
[x] Forward port libopencm3 STM32F2 support from 4.0
[x] Enable CDCACM USB serial support (no UART exposed on T12)
[x] Enable ADC
[x] Validate LCD code can be reused from Devo7e (or write a new driver)
[x] Enabble buttons and switches
[ ] Enable power button
[ ] Enable RTC
[x] Support SDCARD filesystem
[ ] Enable audio driver
[ ] Enable volume control
[x] Support installing with OTX Bootloader
[ ] Support 4-in-1 module Tx
[ ] Support 4-in-1 module Telemetry
[ ] Cleanup code (still using x9d named files)
[ ] Figure out code-reuse between F1 and F2 (no use of common/stm32 yet)","This effort has convinced me that we need to rethink our target support.
It is still too much effort to enable a new target.  I'll have to spend some time on that once this is working",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,657,2019-01-28T02:24:42Z,2019-03-06T02:12:31Z,2019-03-06T02:12:36Z,MERGED,True,1286,1,25,https://github.com/PhracturedBlue,[WIP] Add T12 target,20,[],https://github.com/DeviationTX/deviation/pull/657,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/657#issuecomment-460008283,"Add jumper t12 target.
This is very much a work-in-progress.  It compiles, but does not yet boot on the transmitter.  I have been able to build test-firmwares that do boot on the transmitter, so we aren't too far away.
To do:
[x] Document T12 hardware and connections on the wiki
[x] Get code to compile with STM32F2 target
[x] Forward port libopencm3 STM32F2 support from 4.0
[x] Enable CDCACM USB serial support (no UART exposed on T12)
[x] Enable ADC
[x] Validate LCD code can be reused from Devo7e (or write a new driver)
[x] Enabble buttons and switches
[ ] Enable power button
[ ] Enable RTC
[x] Support SDCARD filesystem
[ ] Enable audio driver
[ ] Enable volume control
[x] Support installing with OTX Bootloader
[ ] Support 4-in-1 module Tx
[ ] Support 4-in-1 module Telemetry
[ ] Cleanup code (still using x9d named files)
[ ] Figure out code-reuse between F1 and F2 (no use of common/stm32 yet)",We need abstract driver inteface as a function table. LCD driver can be first one.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,657,2019-01-28T02:24:42Z,2019-03-06T02:12:31Z,2019-03-06T02:12:36Z,MERGED,True,1286,1,25,https://github.com/PhracturedBlue,[WIP] Add T12 target,20,[],https://github.com/DeviationTX/deviation/pull/657,https://github.com/PhracturedBlue,4,https://github.com/DeviationTX/deviation/pull/657#issuecomment-460016524,"Add jumper t12 target.
This is very much a work-in-progress.  It compiles, but does not yet boot on the transmitter.  I have been able to build test-firmwares that do boot on the transmitter, so we aren't too far away.
To do:
[x] Document T12 hardware and connections on the wiki
[x] Get code to compile with STM32F2 target
[x] Forward port libopencm3 STM32F2 support from 4.0
[x] Enable CDCACM USB serial support (no UART exposed on T12)
[x] Enable ADC
[x] Validate LCD code can be reused from Devo7e (or write a new driver)
[x] Enabble buttons and switches
[ ] Enable power button
[ ] Enable RTC
[x] Support SDCARD filesystem
[ ] Enable audio driver
[ ] Enable volume control
[x] Support installing with OTX Bootloader
[ ] Support 4-in-1 module Tx
[ ] Support 4-in-1 module Telemetry
[ ] Cleanup code (still using x9d named files)
[ ] Figure out code-reuse between F1 and F2 (no use of common/stm32 yet)","Why do we need a function table for the display?
I have started refactoring the target definitions using the t12 as a prototype.  My goal is to get the definition of a target down to ~4 files:

hardware.h - defines all low-level ports and 'HAS_' functions
capabilities.h - Unless we want to build a custom pre-processor, I don't know of a better way to define the channels than this
Makefile.inc - Not much we can do about this, but it is already pretty small for devo targets
supports.h - Not sure how to handle the 'SUPPORT_' type features yet, but probably in its own header file

Some targets will need additional customization, but my goal will be to move as much as possible into common/",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,657,2019-01-28T02:24:42Z,2019-03-06T02:12:31Z,2019-03-06T02:12:36Z,MERGED,True,1286,1,25,https://github.com/PhracturedBlue,[WIP] Add T12 target,20,[],https://github.com/DeviationTX/deviation/pull/657,https://github.com/howard0su,5,https://github.com/DeviationTX/deviation/pull/657#issuecomment-460016937,"Add jumper t12 target.
This is very much a work-in-progress.  It compiles, but does not yet boot on the transmitter.  I have been able to build test-firmwares that do boot on the transmitter, so we aren't too far away.
To do:
[x] Document T12 hardware and connections on the wiki
[x] Get code to compile with STM32F2 target
[x] Forward port libopencm3 STM32F2 support from 4.0
[x] Enable CDCACM USB serial support (no UART exposed on T12)
[x] Enable ADC
[x] Validate LCD code can be reused from Devo7e (or write a new driver)
[x] Enabble buttons and switches
[ ] Enable power button
[ ] Enable RTC
[x] Support SDCARD filesystem
[ ] Enable audio driver
[ ] Enable volume control
[x] Support installing with OTX Bootloader
[ ] Support 4-in-1 module Tx
[ ] Support 4-in-1 module Telemetry
[ ] Cleanup code (still using x9d named files)
[ ] Figure out code-reuse between F1 and F2 (no use of common/stm32 yet)",How do you want to support two LCD drivers in one target? Like t8sg we are discussing.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,657,2019-01-28T02:24:42Z,2019-03-06T02:12:31Z,2019-03-06T02:12:36Z,MERGED,True,1286,1,25,https://github.com/PhracturedBlue,[WIP] Add T12 target,20,[],https://github.com/DeviationTX/deviation/pull/657,https://github.com/PhracturedBlue,6,https://github.com/DeviationTX/deviation/pull/657#issuecomment-460017138,"Add jumper t12 target.
This is very much a work-in-progress.  It compiles, but does not yet boot on the transmitter.  I have been able to build test-firmwares that do boot on the transmitter, so we aren't too far away.
To do:
[x] Document T12 hardware and connections on the wiki
[x] Get code to compile with STM32F2 target
[x] Forward port libopencm3 STM32F2 support from 4.0
[x] Enable CDCACM USB serial support (no UART exposed on T12)
[x] Enable ADC
[x] Validate LCD code can be reused from Devo7e (or write a new driver)
[x] Enabble buttons and switches
[ ] Enable power button
[ ] Enable RTC
[x] Support SDCARD filesystem
[ ] Enable audio driver
[ ] Enable volume control
[x] Support installing with OTX Bootloader
[ ] Support 4-in-1 module Tx
[ ] Support 4-in-1 module Telemetry
[ ] Cleanup code (still using x9d named files)
[ ] Figure out code-reuse between F1 and F2 (no use of common/stm32 yet)","the drivers are very similar.  I planned to do it similar to what we do with the devo8 320x240 driver.  That one is easy because we can ask the driver whether it is an hx8347 or ili9341, but the concept would be the same.  I'm open to alternatives though.  If you think a function table would be cleaner, we can try that.  I have started moving the screen code into common/screen/ so we can have a proper screen library and have better reuse across transmitters.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,657,2019-01-28T02:24:42Z,2019-03-06T02:12:31Z,2019-03-06T02:12:36Z,MERGED,True,1286,1,25,https://github.com/PhracturedBlue,[WIP] Add T12 target,20,[],https://github.com/DeviationTX/deviation/pull/657,https://github.com/howard0su,7,https://github.com/DeviationTX/deviation/pull/657#issuecomment-461736081,"Add jumper t12 target.
This is very much a work-in-progress.  It compiles, but does not yet boot on the transmitter.  I have been able to build test-firmwares that do boot on the transmitter, so we aren't too far away.
To do:
[x] Document T12 hardware and connections on the wiki
[x] Get code to compile with STM32F2 target
[x] Forward port libopencm3 STM32F2 support from 4.0
[x] Enable CDCACM USB serial support (no UART exposed on T12)
[x] Enable ADC
[x] Validate LCD code can be reused from Devo7e (or write a new driver)
[x] Enabble buttons and switches
[ ] Enable power button
[ ] Enable RTC
[x] Support SDCARD filesystem
[ ] Enable audio driver
[ ] Enable volume control
[x] Support installing with OTX Bootloader
[ ] Support 4-in-1 module Tx
[ ] Support 4-in-1 module Telemetry
[ ] Cleanup code (still using x9d named files)
[ ] Figure out code-reuse between F1 and F2 (no use of common/stm32 yet)",I like CDC usb endpoint. I would prefer to enable this for all dev build and the testers are easier to collect the logs compare to debug log page today.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,657,2019-01-28T02:24:42Z,2019-03-06T02:12:31Z,2019-03-06T02:12:36Z,MERGED,True,1286,1,25,https://github.com/PhracturedBlue,[WIP] Add T12 target,20,[],https://github.com/DeviationTX/deviation/pull/657,https://github.com/PhracturedBlue,8,https://github.com/DeviationTX/deviation/pull/657#issuecomment-462211303,"Add jumper t12 target.
This is very much a work-in-progress.  It compiles, but does not yet boot on the transmitter.  I have been able to build test-firmwares that do boot on the transmitter, so we aren't too far away.
To do:
[x] Document T12 hardware and connections on the wiki
[x] Get code to compile with STM32F2 target
[x] Forward port libopencm3 STM32F2 support from 4.0
[x] Enable CDCACM USB serial support (no UART exposed on T12)
[x] Enable ADC
[x] Validate LCD code can be reused from Devo7e (or write a new driver)
[x] Enabble buttons and switches
[ ] Enable power button
[ ] Enable RTC
[x] Support SDCARD filesystem
[ ] Enable audio driver
[ ] Enable volume control
[x] Support installing with OTX Bootloader
[ ] Support 4-in-1 module Tx
[ ] Support 4-in-1 module Telemetry
[ ] Cleanup code (still using x9d named files)
[ ] Figure out code-reuse between F1 and F2 (no use of common/stm32 yet)","The JR Serial module exposes upto 64 protocols, each of which can have upto 8 sub-protocols.  I considered embedding the whole thing as a single protocol, but the interface would be quite ugly.  Our current protocol code cannot handle a dynamic list of protocols, and the Serial module uses the 'multi.txt' file to define the protocols supported by the module.  I may still change my mind about how it is handled, but that would probably require altering how protocol options are handled.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,657,2019-01-28T02:24:42Z,2019-03-06T02:12:31Z,2019-03-06T02:12:36Z,MERGED,True,1286,1,25,https://github.com/PhracturedBlue,[WIP] Add T12 target,20,[],https://github.com/DeviationTX/deviation/pull/657,https://github.com/howard0su,9,https://github.com/DeviationTX/deviation/pull/657#issuecomment-462224720,"Add jumper t12 target.
This is very much a work-in-progress.  It compiles, but does not yet boot on the transmitter.  I have been able to build test-firmwares that do boot on the transmitter, so we aren't too far away.
To do:
[x] Document T12 hardware and connections on the wiki
[x] Get code to compile with STM32F2 target
[x] Forward port libopencm3 STM32F2 support from 4.0
[x] Enable CDCACM USB serial support (no UART exposed on T12)
[x] Enable ADC
[x] Validate LCD code can be reused from Devo7e (or write a new driver)
[x] Enabble buttons and switches
[ ] Enable power button
[ ] Enable RTC
[x] Support SDCARD filesystem
[ ] Enable audio driver
[ ] Enable volume control
[x] Support installing with OTX Bootloader
[ ] Support 4-in-1 module Tx
[ ] Support 4-in-1 module Telemetry
[ ] Cleanup code (still using x9d named files)
[ ] Figure out code-reuse between F1 and F2 (no use of common/stm32 yet)","protocol.c can be split out into two parts. one is just interface to the
rest of system, the other is how we load/unload the modules. We already had
two implementations mixed together, built-in v.s. external mod files. JR is
just the third one. it is time to abstract the things out.
…
On Mon, Feb 11, 2019 at 11:30 AM PhracturedBlue ***@***.***> wrote:
 The JR Serial module exposes upto 64 protocols, each of which can have
 upto 8 sub-protocols. I considered embedding the whole thing as a single
 protocol, but the interface would be quite ugly. Our current protocol code
 cannot handle a dynamic list of protocols, and the Serial module uses the
 'multi.txt' file to define the protocols supported by the module. I may
 still change my mind about how it is handled, but that would probably
 require altering how protocol options are handled.

 —
 You are receiving this because you commented.
 Reply to this email directly, view it on GitHub
 <#657 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRMZYs_qd8StCTJp_CNc9wgaJDVMVks5vMOPOgaJpZM4aVF-5>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,658,2019-01-29T13:43:52Z,2019-01-30T12:17:04Z,2019-01-30T12:17:08Z,MERGED,True,1,1,1,https://github.com/howard0su,Parse the string table from osx built-in objdump,1,[],https://github.com/DeviationTX/deviation/pull/658,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/658,OSX built-in objdump shows the string table as __string instead of rodata. the change make sure I can build localized file on OSX.,OSX built-in objdump shows the string table as __string instead of rodata. the change make sure I can build localized file on OSX.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,659,2019-01-29T13:50:55Z,2019-01-29T15:33:40Z,2019-01-29T15:33:40Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix regression on toggle icon on f12e-XMS,1,[],https://github.com/DeviationTX/deviation/pull/659,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/659,the range from 0x300 - 0x350 is reserved for icons.,the range from 0x300 - 0x350 is reserved for icons.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,660,2019-01-30T13:12:39Z,2019-02-02T04:07:49Z,2019-02-02T04:07:49Z,MERGED,True,366050,10,6,https://github.com/PhracturedBlue,Add new font for devof12e.  Fix centering of loaded font on display.,3,[],https://github.com/DeviationTX/deviation/pull/660,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/660,"This should resolve the cyrillic font issue on the devof12e that has been discussed in #607.
Adds new 18bold font with similar type-setting to the internal font.
Fixes the vertical offset of loaded font to match internal font.","This should resolve the cyrillic font issue on the devof12e that has been discussed in #607.
Adds new 18bold font with similar type-setting to the internal font.
Fixes the vertical offset of loaded font to match internal font.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,661,2019-01-31T07:39:42Z,2019-02-01T14:40:19Z,2019-02-25T12:00:01Z,MERGED,True,1137,91,12,https://github.com/howard0su,Import PNGLite to use PNG as the format for UI tests,3,[],https://github.com/DeviationTX/deviation/pull/661,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/661,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,662,2019-01-31T10:59:50Z,2019-02-10T00:42:49Z,2019-02-10T00:42:49Z,MERGED,True,62,3,35,https://github.com/howard0su,Add the initial set of tests to check each page content,2,[],https://github.com/DeviationTX/deviation/pull/662,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/662,based on PR #661,based on PR #661,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,663,2019-01-31T14:05:55Z,2019-02-25T00:58:15Z,2019-02-25T11:49:42Z,CLOSED,False,27,26,4,https://github.com/howard0su,Use libopencm3 gpio lib for usb stack,2,[],https://github.com/DeviationTX/deviation/pull/663,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/663,Also make sure we call PowerOff when shutdown USB to clean up usb registers.,Also make sure we call PowerOff when shutdown USB to clean up usb registers.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,663,2019-01-31T14:05:55Z,2019-02-25T00:58:15Z,2019-02-25T11:49:42Z,CLOSED,False,27,26,4,https://github.com/howard0su,Use libopencm3 gpio lib for usb stack,2,[],https://github.com/DeviationTX/deviation/pull/663,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/663#issuecomment-461431818,Also make sure we call PowerOff when shutdown USB to clean up usb registers.,please review. @PhracturedBlue,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,663,2019-01-31T14:05:55Z,2019-02-25T00:58:15Z,2019-02-25T11:49:42Z,CLOSED,False,27,26,4,https://github.com/howard0su,Use libopencm3 gpio lib for usb stack,2,[],https://github.com/DeviationTX/deviation/pull/663,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/663#issuecomment-466837676,Also make sure we call PowerOff when shutdown USB to clean up usb registers.,not needed after we switch to libopencm3 usb lib.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,664,2019-02-01T11:59:21Z,2019-02-08T12:34:01Z,2019-02-08T12:34:01Z,MERGED,True,475,1,4,https://github.com/howard0su,Add Protocol LOLI support,29,[],https://github.com/DeviationTX/deviation/pull/664,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/664,"@goebish creates the code of LOLI protocol. All the credits of this PR come to him.
Make a PR to easy code review.","@goebish creates the code of LOLI protocol. All the credits of this PR come to him.
Make a PR to easy code review.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,664,2019-02-01T11:59:21Z,2019-02-08T12:34:01Z,2019-02-08T12:34:01Z,MERGED,True,475,1,4,https://github.com/howard0su,Add Protocol LOLI support,29,[],https://github.com/DeviationTX/deviation/pull/664,https://github.com/goebish,2,https://github.com/DeviationTX/deviation/pull/664#issuecomment-459715126,"@goebish creates the code of LOLI protocol. All the credits of this PR come to him.
Make a PR to easy code review.","Please merge with my branch, I've modified/added a few stuffs, though I don't think that will fix the bind issue.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,664,2019-02-01T11:59:21Z,2019-02-08T12:34:01Z,2019-02-08T12:34:01Z,MERGED,True,475,1,4,https://github.com/howard0su,Add Protocol LOLI support,29,[],https://github.com/DeviationTX/deviation/pull/664,https://github.com/goebish,3,https://github.com/DeviationTX/deviation/pull/664#issuecomment-459735728,"@goebish creates the code of LOLI protocol. All the credits of this PR come to him.
Make a PR to easy code review.","please merge again, I might have found the culprit, seems this protocol is using 8 bit CRC instead of 16.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,664,2019-02-01T11:59:21Z,2019-02-08T12:34:01Z,2019-02-08T12:34:01Z,MERGED,True,475,1,4,https://github.com/howard0su,Add Protocol LOLI support,29,[],https://github.com/DeviationTX/deviation/pull/664,https://github.com/goebish,4,https://github.com/DeviationTX/deviation/pull/664#issuecomment-459783359,"@goebish creates the code of LOLI protocol. All the credits of this PR come to him.
Make a PR to easy code review.","I was wrong for the bitrate, it's using 250kbps actually",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,664,2019-02-01T11:59:21Z,2019-02-08T12:34:01Z,2019-02-08T12:34:01Z,MERGED,True,475,1,4,https://github.com/howard0su,Add Protocol LOLI support,29,[],https://github.com/DeviationTX/deviation/pull/664,https://github.com/goebish,5,https://github.com/DeviationTX/deviation/pull/664#issuecomment-461721384,"@goebish creates the code of LOLI protocol. All the credits of this PR come to him.
Make a PR to easy code review.","@howard0su before merging, can you ask someone with an actual receiver to check if everything is working ? Rx modes, telemetry, failsafe ?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,664,2019-02-01T11:59:21Z,2019-02-08T12:34:01Z,2019-02-08T12:34:01Z,MERGED,True,475,1,4,https://github.com/howard0su,Add Protocol LOLI support,29,[],https://github.com/DeviationTX/deviation/pull/664,https://github.com/howard0su,6,https://github.com/DeviationTX/deviation/pull/664#issuecomment-461722235,"@goebish creates the code of LOLI protocol. All the credits of this PR come to him.
Make a PR to easy code review.","Yes. I already did that. Rx mode is verified with a Oscillator with Rx.
Telemetry is verified as well. failsafe is to do.
…
On Fri, Feb 8, 2019 at 4:02 PM goebish ***@***.***> wrote:
 Before merging, can you ask someone with an actual receiver to check if
 everything is working ? Rx modes, telemetry, failsafe ?

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#664 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRE7V98gWv-5ERsKfyPY7Wbn72Teqks5vLS8agaJpZM4aeL2S>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,665,2019-02-01T17:21:05Z,,2020-09-28T14:42:08Z,OPEN,False,260,338,19,https://github.com/TheRealMoeder,Reduce voice RAM and ROM needs,40,[],https://github.com/DeviationTX/deviation/pull/665,https://github.com/TheRealMoeder,1,https://github.com/DeviationTX/deviation/pull/665,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,665,2019-02-01T17:21:05Z,,2020-09-28T14:42:08Z,OPEN,False,260,338,19,https://github.com/TheRealMoeder,Reduce voice RAM and ROM needs,40,[],https://github.com/DeviationTX/deviation/pull/665,https://github.com/TheRealMoeder,2,https://github.com/DeviationTX/deviation/pull/665#issuecomment-459847784,,"Making progress, but still pretty heavy on the ROM:
devo7e without standard GUI:
ROM 104.92 kB RAM 9.75 kB
devo7e w/out standard GUI, HAS_EXTENDED_AUDIO
ROM 107.73 kB RAM 9.97 kB
devo7e w/out standard GUI, HAS_EXTENDED_AUDIO && HAS_MUSIC_CONFIG
ROM 108.69 kB RAM 9.97 kB",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,665,2019-02-01T17:21:05Z,,2020-09-28T14:42:08Z,OPEN,False,260,338,19,https://github.com/TheRealMoeder,Reduce voice RAM and ROM needs,40,[],https://github.com/DeviationTX/deviation/pull/665,https://github.com/TheRealMoeder,3,https://github.com/DeviationTX/deviation/pull/665#issuecomment-460099283,,more than 0.6 kB of ROM still goes to config system - looking forward to #626,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,665,2019-02-01T17:21:05Z,,2020-09-28T14:42:08Z,OPEN,False,260,338,19,https://github.com/TheRealMoeder,Reduce voice RAM and ROM needs,40,[],https://github.com/DeviationTX/deviation/pull/665,https://github.com/howard0su,4,https://github.com/DeviationTX/deviation/pull/665#issuecomment-460099425,,which function?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,665,2019-02-01T17:21:05Z,,2020-09-28T14:42:08Z,OPEN,False,260,338,19,https://github.com/TheRealMoeder,Reduce voice RAM and ROM needs,40,[],https://github.com/DeviationTX/deviation/pull/665,https://github.com/TheRealMoeder,5,https://github.com/DeviationTX/deviation/pull/665#issuecomment-460100330,,"Values below are the ""bad"" functions in devo7e with and without voice features. I guess MUSIC_PlayValue, TIMER_Update and TELEMETRY_Alarm are excused, since they add some new functionality. I was surprised at the cost for the two new muxes in MIXER_ApplyMixer.

  2080 CONFIG_WriteModel
   596 CONFIG_WriteTx
  2272 CONFIG_WriteModel
   612 CONFIG_WriteTx



   252 MIXER_ApplyMixer
   392 MIXER_ApplyMixer



   396 MUSIC_PlayValue



   340 TELEMETRY_Alarm
   596 TELEMETRY_Alarm



   472 TIMER_Update
   644 TIMER_Update



   280 ini_handler:hardware
  2492 ini_handler:model
   172 ini_handler:music
   712 ini_handler:tx
   336 ini_handler:hardware
  2724 ini_handler:model
   248 ini_handler:music
   740 ini_handler:tx",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,665,2019-02-01T17:21:05Z,,2020-09-28T14:42:08Z,OPEN,False,260,338,19,https://github.com/TheRealMoeder,Reduce voice RAM and ROM needs,40,[],https://github.com/DeviationTX/deviation/pull/665,https://github.com/TheRealMoeder,6,https://github.com/DeviationTX/deviation/pull/665#issuecomment-461628403,,"This is probably as good as it gets for now. There are stil some minor issues with the voice implementation, but they'll get fixed in a different PR, as this one was about reducing ROM and RAM usage. I know the struct CustomVoice pretty pointless right now, but for the future I'm thinking of adding a flag for vibration, so this will become useful. Anyways, waiting for reviews and if satisfied, please squash.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,665,2019-02-01T17:21:05Z,,2020-09-28T14:42:08Z,OPEN,False,260,338,19,https://github.com/TheRealMoeder,Reduce voice RAM and ROM needs,40,[],https://github.com/DeviationTX/deviation/pull/665,https://github.com/TheRealMoeder,7,https://github.com/DeviationTX/deviation/pull/665#issuecomment-461920806,,"@PhracturedBlue the other cases won't work, because compiler complains about struct or variables not being defined. But if we do define them by excluding them from the pp if, thecompiler complains because they are not used",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,665,2019-02-01T17:21:05Z,,2020-09-28T14:42:08Z,OPEN,False,260,338,19,https://github.com/TheRealMoeder,Reduce voice RAM and ROM needs,40,[],https://github.com/DeviationTX/deviation/pull/665,https://github.com/TheRealMoeder,8,https://github.com/DeviationTX/deviation/pull/665#issuecomment-462184974,,Works like a charm on T8SGV2+,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,665,2019-02-01T17:21:05Z,,2020-09-28T14:42:08Z,OPEN,False,260,338,19,https://github.com/TheRealMoeder,Reduce voice RAM and ROM needs,40,[],https://github.com/DeviationTX/deviation/pull/665,https://github.com/TheRealMoeder,9,https://github.com/DeviationTX/deviation/pull/665#issuecomment-465773562,,"@howard0su screenshot test fails:
target/tx/other/test/gui_helper.c:58: Screenshot Voice_config content mismatch!
Emulator looks fine to me though...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,665,2019-02-01T17:21:05Z,,2020-09-28T14:42:08Z,OPEN,False,260,338,19,https://github.com/TheRealMoeder,Reduce voice RAM and ROM needs,40,[],https://github.com/DeviationTX/deviation/pull/665,https://github.com/TheRealMoeder,10,https://github.com/DeviationTX/deviation/pull/665#issuecomment-465900533,,"OK.. Without any custom voice entries in voice.ini voice will currently be disabled, and thus voiceconfig page will show up different. I guess this behavior is not quite correct, as we could have global alarms defined in voice.ini, but no custom alarms. We then could still have voice working, but voice config menu is not available. Will have to think of a way to check that a valid voice.ini exists, but not quite sure how to do so yet...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,665,2019-02-01T17:21:05Z,,2020-09-28T14:42:08Z,OPEN,False,260,338,19,https://github.com/TheRealMoeder,Reduce voice RAM and ROM needs,40,[],https://github.com/DeviationTX/deviation/pull/665,https://github.com/somewhatlurker,11,https://github.com/DeviationTX/deviation/pull/665#issuecomment-694105460,,"Assuming this is all tested and works well, the code looks fine to me....   bear in mind that I'm pretty inexperienced and don't know the project well yet though.
I see that it only deals in external voice IDs now though...  It's probably good, and half solves #999 in the process, but does introduce the small chance for issues loading old models with an abnormal voice.ini. (though it does make it essentially impossible to add support for gaps in numbering)
It would be possible to adopt a system of referencing voice.ini by line number rather than key names, which would behave more like the old system and allow for an almost identical solution to what I already proposed for #999. (models would take longer to load due to repeated config parsing, but it'd require benchmarking to figure out how significant it is)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,665,2019-02-01T17:21:05Z,,2020-09-28T14:42:08Z,OPEN,False,260,338,19,https://github.com/TheRealMoeder,Reduce voice RAM and ROM needs,40,[],https://github.com/DeviationTX/deviation/pull/665,https://github.com/TheRealMoeder,12,https://github.com/DeviationTX/deviation/pull/665#issuecomment-694109493,,"I think the code is significantly better with these changes, but far from good. Yes, I tested them thoroughly and didn't find any issues. Using line numbers is an interesting idea, so before introducing this potentially backwards compatibility breaking change, would you have time to use this branch as a base for reworking #999?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,665,2019-02-01T17:21:05Z,,2020-09-28T14:42:08Z,OPEN,False,260,338,19,https://github.com/TheRealMoeder,Reduce voice RAM and ROM needs,40,[],https://github.com/DeviationTX/deviation/pull/665,https://github.com/somewhatlurker,13,https://github.com/DeviationTX/deviation/pull/665#issuecomment-694110926,,"yeah, I'll try to have a look into it; or at least see how much work it would be to make behaviour identical to the old system for reimplementation of #1000 at another time.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,665,2019-02-01T17:21:05Z,,2020-09-28T14:42:08Z,OPEN,False,260,338,19,https://github.com/TheRealMoeder,Reduce voice RAM and ROM needs,40,[],https://github.com/DeviationTX/deviation/pull/665,https://github.com/somewhatlurker,14,https://github.com/DeviationTX/deviation/pull/665#issuecomment-695802074,,"Here's a commit that seems to make voice loading match the old behaviour: somewhatlurker@d34f6f4
Tested using a voice.ini containing the following, exhibiting misordered and missing ids:
[custom]
200=armed,548
201=disarmed,783
202=throttle hold on,1175
203=throttle hold off,1149
204=low rates,809
211=acro mode,835
;205=medium rates,1018
;206=high rates,783
207=angle mode 835
;saved hold0 alert as stability mode (207)
208=stability mode,1123
209=horizon mode,966
210=rate mode,679
212=flight mode 0,1253
213=flight mode 1,1149
214=flight mode 2,1097
215=flight mode 3,1175
...

Under both current master code and my branch (tested in zip_win_emu_t8sg_v2), HOLD0=207 in a model's voice section refers to ""stability mode"" (mp3 208).
Note that saving still uses the external IDs and thus the fix from #1000 would need to be implemented to even have a self-consistent system at this stage.
Another issue is that you can't reach the end of the list due to non-contiguous numbering. That could be fixed by either using the line number referencing in the voice config page or recording the maximum ID rather than number of IDs to voice_ini_entries. (the former would behave more like the old system)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,665,2019-02-01T17:21:05Z,,2020-09-28T14:42:08Z,OPEN,False,260,338,19,https://github.com/TheRealMoeder,Reduce voice RAM and ROM needs,40,[],https://github.com/DeviationTX/deviation/pull/665,https://github.com/somewhatlurker,15,https://github.com/DeviationTX/deviation/pull/665#issuecomment-698498355,,"An update on what I've been doing:
https://github.com/somewhatlurker/deviation/tree/voice_diet2 has been updated to use essentially the same system as #1000 to load both old and new entries correctly, however it uses the ""+"" prefix to at least maintain some level of support for loading new models in older firmware. The meaning of the prefix should probably be explained in the manual if these changes are used.
It also makes all IDs up to the maximum used one accessible in model voice config. IDs with no voice will have the label ""[ID#] (missing)"". (it might make sense to have this translatable, but I'm not sure how to do that)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,665,2019-02-01T17:21:05Z,,2020-09-28T14:42:08Z,OPEN,False,260,338,19,https://github.com/TheRealMoeder,Reduce voice RAM and ROM needs,40,[],https://github.com/DeviationTX/deviation/pull/665,https://github.com/TheRealMoeder,16,https://github.com/DeviationTX/deviation/pull/665#issuecomment-699471083,,"Your work looks fine. Translation should be triggered with _tr(""string""). While your submission should work nice, I'm honestly not sure if it is worth keeping backward compatibility here. We never had an official release with voice, it was always a nightly feature (although that is what 99% uses). The Prefix stuff makes the code unnecessarily bloated, and as you suggested the new prefix is not self-explanatory. @goebish opinion?
I'd personally be fine with a breaking change if we could also add more config options for voice sounds, like setting additional flags for vibration and buzzer. Currently running both is crudely implemented through sound.ini for the global sounds, carried over from the original voice work not done by me.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,665,2019-02-01T17:21:05Z,,2020-09-28T14:42:08Z,OPEN,False,260,338,19,https://github.com/TheRealMoeder,Reduce voice RAM and ROM needs,40,[],https://github.com/DeviationTX/deviation/pull/665,https://github.com/somewhatlurker,17,https://github.com/DeviationTX/deviation/pull/665#issuecomment-699643797,,"Yeah, I see what you mean about bloat after checking the full diff for my changes. I suppose cherry picking 5776c82 and ef11399 (and just the voiceconfig_page.c changes from d34f6f4) to only fix actual issues would be fine if code size is a concern. (though retaining guaranteed compatibility would be nice)
I feel you on the features front, but the audio system still seems pretty daunting to me with all the stuff in there together. Obviously an entirely new design for everything would be best, but that's definitely not something I can help with when I don't even understand the full scope of current features well. Would you want to work on the design or is that just a hypothetical scenario right now?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,665,2019-02-01T17:21:05Z,,2020-09-28T14:42:08Z,OPEN,False,260,338,19,https://github.com/TheRealMoeder,Reduce voice RAM and ROM needs,40,[],https://github.com/DeviationTX/deviation/pull/665,https://github.com/TheRealMoeder,18,https://github.com/DeviationTX/deviation/pull/665#issuecomment-700051997,,"My time is limited, but the Music/Voice topic is actually not too big to tackle, so probably something we could easily optimize. For now, I think making a PR out of voice_diet2 with your patches sounds like good idea to me, after that we two (and maybe @eried if he has time) can discuss further development of voice/sound support in a separate issue.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,666,2019-02-01T22:28:18Z,2019-02-02T03:46:54Z,2019-02-02T03:46:54Z,MERGED,True,4,1,1,https://github.com/howard0su,Check test.elf return code,1,[],https://github.com/DeviationTX/deviation/pull/666,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/666,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,667,2019-02-02T14:13:34Z,2019-02-02T23:36:27Z,2019-02-02T23:36:31Z,MERGED,True,2,2,2,https://github.com/howard0su,Sort the test cases by its name,3,[],https://github.com/DeviationTX/deviation/pull/667,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/667,This make sure all tests are running in a determined order.,This make sure all tests are running in a determined order.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,667,2019-02-02T14:13:34Z,2019-02-02T23:36:27Z,2019-02-02T23:36:31Z,MERGED,True,2,2,2,https://github.com/howard0su,Sort the test cases by its name,3,[],https://github.com/DeviationTX/deviation/pull/667,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/667#issuecomment-459968275,This make sure all tests are running in a determined order.,"@PhracturedBlue need help on the failure after I sort the test cases:
There was 1 failure:

TestCalcChannels: ./tests/test_mixer.c:157: expected <1000> but was <400>",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,667,2019-02-02T14:13:34Z,2019-02-02T23:36:27Z,2019-02-02T23:36:31Z,MERGED,True,2,2,2,https://github.com/howard0su,Sort the test cases by its name,3,[],https://github.com/DeviationTX/deviation/pull/667,https://github.com/PhracturedBlue,3,https://github.com/DeviationTX/deviation/pull/667#issuecomment-459971781,This make sure all tests are running in a determined order.,"I'll look at the failing test, but I don't like this sorting order.  I think tests should run sorted by filename alphabetically, then in the order they are defined in the test file.  So I'd apply the sort to the $FILES array and not to the grep",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,667,2019-02-02T14:13:34Z,2019-02-02T23:36:27Z,2019-02-02T23:36:31Z,MERGED,True,2,2,2,https://github.com/howard0su,Sort the test cases by its name,3,[],https://github.com/DeviationTX/deviation/pull/667,https://github.com/howard0su,4,https://github.com/DeviationTX/deviation/pull/667#issuecomment-459971991,This make sure all tests are running in a determined order.,"okay。I can do that instead
…
On Sun, Feb 3, 2019 at 12:01 AM PhracturedBlue ***@***.***> wrote:
 I'll look at the failing test, but I don't like this sorting order. I
 think tests should run sorted by filename alphabetically, then in the order
 they are defined in the test file. So I'd apply the sort to the $FILES
 array and not to the grep

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#667 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzROpUnOeFKQryxBlYCuVam_jiwftbks5vJahggaJpZM4afm4M>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,667,2019-02-02T14:13:34Z,2019-02-02T23:36:27Z,2019-02-02T23:36:31Z,MERGED,True,2,2,2,https://github.com/howard0su,Sort the test cases by its name,3,[],https://github.com/DeviationTX/deviation/pull/667,https://github.com/PhracturedBlue,5,https://github.com/DeviationTX/deviation/pull/667#issuecomment-459975406,This make sure all tests are running in a determined order.,The CalcChannels test should be fixed in #668,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,668,2019-02-02T15:49:00Z,2019-02-02T16:06:54Z,2019-02-02T16:06:54Z,MERGED,True,7,3,2,https://github.com/PhracturedBlue,Fix TestCalcChannels to be order independent,1,[],https://github.com/DeviationTX/deviation/pull/668,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/668,"The CalcChannels test was not properly initializing all its needed inputs
Also, remove static variable for MIXER_CalcChannels as it cannot be controlled via tests","The CalcChannels test was not properly initializing all its needed inputs
Also, remove static variable for MIXER_CalcChannels as it cannot be controlled via tests",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,670,2019-02-06T05:03:44Z,2019-02-18T03:44:21Z,2019-02-18T04:25:40Z,MERGED,True,5,4,2,https://github.com/hexfet,Fix index out-of-bounds and null pointer in power settings,1,[],https://github.com/DeviationTX/deviation/pull/670,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/670,These bugs came in with the recent power setting changes.  Found problem in emulator.  Seemed to have no effect in devo10 or t8sg+.,These bugs came in with the recent power setting changes.  Found problem in emulator.  Seemed to have no effect in devo10 or t8sg+.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,670,2019-02-06T05:03:44Z,2019-02-18T03:44:21Z,2019-02-18T04:25:40Z,MERGED,True,5,4,2,https://github.com/hexfet,Fix index out-of-bounds and null pointer in power settings,1,[],https://github.com/DeviationTX/deviation/pull/670,https://github.com/PhracturedBlue,2,https://github.com/DeviationTX/deviation/pull/670#issuecomment-464578990,These bugs came in with the recent power setting changes.  Found problem in emulator.  Seemed to have no effect in devo10 or t8sg+.,This broke the ability to change tx power.  It needs to be revisited,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,670,2019-02-06T05:03:44Z,2019-02-18T03:44:21Z,2019-02-18T04:25:40Z,MERGED,True,5,4,2,https://github.com/hexfet,Fix index out-of-bounds and null pointer in power settings,1,[],https://github.com/DeviationTX/deviation/pull/670,https://github.com/PhracturedBlue,3,https://github.com/DeviationTX/deviation/pull/670#issuecomment-464579023,These bugs came in with the recent power setting changes.  Found problem in emulator.  Seemed to have no effect in devo10 or t8sg+.,I have reverted it for now,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,672,2019-02-08T02:58:21Z,2019-02-08T06:36:08Z,2019-02-08T06:36:08Z,MERGED,True,4,3,1,https://github.com/PhracturedBlue,Nightlies should trigger a full build,1,[],https://github.com/DeviationTX/deviation/pull/672,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/672,"Nightlies need to trigger a full build to calculate ROM sizes and to validate string lengths
Also re-enable pushing english updates to transifex.  I don't know why I commented that out","Nightlies need to trigger a full build to calculate ROM sizes and to validate string lengths
Also re-enable pushing english updates to transifex.  I don't know why I commented that out",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,674,2019-02-09T06:23:52Z,2019-02-09T07:00:01Z,2019-02-09T07:00:01Z,MERGED,True,1,1,1,https://github.com/howard0su,increase the string count by 10,1,[],https://github.com/DeviationTX/deviation/pull/674,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/674,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,674,2019-02-09T06:23:52Z,2019-02-09T07:00:01Z,2019-02-09T07:00:01Z,MERGED,True,1,1,1,https://github.com/howard0su,increase the string count by 10,1,[],https://github.com/DeviationTX/deviation/pull/674,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/674#issuecomment-462018356,,We should think about avoiding this static variable. my change on devo7e removes the needs of 8K string buffer. but we need do something additional to avoid this lookup table.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,675,2019-02-10T16:18:40Z,2019-02-11T05:21:07Z,2019-02-11T05:21:07Z,MERGED,True,100,80,6,https://github.com/howard0su,Move telemetry data into one structure,7,[],https://github.com/DeviationTX/deviation/pull/675,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/675,"the change is motivated by configure module change. With the change, the code can be written in data driven way.","the change is motivated by configure module change. With the change, the code can be written in data driven way.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,675,2019-02-10T16:18:40Z,2019-02-11T05:21:07Z,2019-02-11T05:21:07Z,MERGED,True,100,80,6,https://github.com/howard0su,Move telemetry data into one structure,7,[],https://github.com/DeviationTX/deviation/pull/675,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/675#issuecomment-462210466,"the change is motivated by configure module change. With the change, the code can be written in data driven way.","It looks fine, except for the build fail on devof7

It is an interesting error. When we link first time, we find candidate functions to fit the hole. However during the second time link, one function need some glue and cause the function bigger than original by 2 bytes. Then we got the error. this disappear after I rename some variables.
I decided to reserve 2 bytes for tolerant this type of issues.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,676,2019-02-11T05:21:25Z,2019-02-11T13:06:52Z,2019-02-11T13:06:59Z,MERGED,True,3,4,1,https://github.com/howard0su,Invoke fltk-config only once,1,[],https://github.com/DeviationTX/deviation/pull/676,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/676,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,678,2019-02-11T06:12:46Z,2019-02-11T14:49:55Z,2019-02-11T14:50:00Z,MERGED,True,18,36,3,https://github.com/howard0su,consolidate usleep implementation to stm32 folder,3,[],https://github.com/DeviationTX/deviation/pull/678,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/678,"The assembly output is verified. Gcc produce the code one few byte.
before:
00000000 <_usleep>:
0:   f04f 0118       mov.w   r1, #24
4:   fb00 f001       mul.w   r0, r0, r1
8:   e000            b.n     c <_delaycmp>
0000000a <_delayloop>:
a:   3801            subs    r0, #1
0000000c <_delaycmp>:
c:   2800            cmp     r0, #0
e:   d1fc            bne.n   a <_delayloop>
10:   4770            bx      lr
after
00000000 <_usleep>:
0:   2318            movs    r3, #24
2:   fb00 f003       mul.w   r0, r0, r3
6:   e000            b.n     a <_delaycmp>
00000008 <_delayloop>:
8:   3801            subs    r0, #1
0000000a <_delaycmp>:
a:   2800            cmp     r0, #0
c:   d1fc            bne.n   8 <_delayloop>
e:   4770            bx      lr","The assembly output is verified. Gcc produce the code one few byte.
before:
00000000 <_usleep>:
0:   f04f 0118       mov.w   r1, #24
4:   fb00 f001       mul.w   r0, r0, r1
8:   e000            b.n     c <_delaycmp>
0000000a <_delayloop>:
a:   3801            subs    r0, #1
0000000c <_delaycmp>:
c:   2800            cmp     r0, #0
e:   d1fc            bne.n   a <_delayloop>
10:   4770            bx      lr
after
00000000 <_usleep>:
0:   2318            movs    r3, #24
2:   fb00 f003       mul.w   r0, r0, r3
6:   e000            b.n     a <_delaycmp>
00000008 <_delayloop>:
8:   3801            subs    r0, #1
0000000a <_delaycmp>:
a:   2800            cmp     r0, #0
c:   d1fc            bne.n   8 <_delayloop>
e:   4770            bx      lr",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,679,2019-02-11T14:30:14Z,2019-02-11T14:48:31Z,2019-02-11T14:48:37Z,MERGED,True,2,2,1,https://github.com/howard0su,Always generate debug symbols,1,[],https://github.com/DeviationTX/deviation/pull/679,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/679,This make postmortem of error.txt easier.,This make postmortem of error.txt easier.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,679,2019-02-11T14:30:14Z,2019-02-11T14:48:31Z,2019-02-11T14:48:37Z,MERGED,True,2,2,1,https://github.com/howard0su,Always generate debug symbols,1,[],https://github.com/DeviationTX/deviation/pull/679,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/679#issuecomment-462347293,This make postmortem of error.txt easier.,the size of firmware gets a little bigger. Not sure if we are sensitive about the size of downloading or not.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,679,2019-02-11T14:30:14Z,2019-02-11T14:48:31Z,2019-02-11T14:48:37Z,MERGED,True,2,2,1,https://github.com/howard0su,Always generate debug symbols,1,[],https://github.com/DeviationTX/deviation/pull/679,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/679#issuecomment-462353912,This make postmortem of error.txt easier.,I am dealing with some bug reports recently.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,680,2019-02-11T15:26:02Z,2019-02-21T09:32:18Z,2019-02-21T09:32:31Z,MERGED,True,23,28,1,https://github.com/TheRealMoeder,Save ROM on 128x64 standard mixer gui,6,[],https://github.com/DeviationTX/deviation/pull/680,https://github.com/TheRealMoeder,1,https://github.com/DeviationTX/deviation/pull/680,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,681,2019-02-11T17:34:57Z,2019-02-21T09:33:01Z,2019-02-21T09:33:09Z,MERGED,True,3,11,1,https://github.com/TheRealMoeder,Save ROM on 128x64 gyrosense_page.c,3,[],https://github.com/DeviationTX/deviation/pull/681,https://github.com/TheRealMoeder,1,https://github.com/DeviationTX/deviation/pull/681,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,682,2019-02-11T17:50:17Z,2019-02-21T09:33:38Z,2019-02-21T09:33:42Z,MERGED,True,6,10,1,https://github.com/TheRealMoeder,Save ROM on 128x64 swash_page.c ,4,[],https://github.com/DeviationTX/deviation/pull/682,https://github.com/TheRealMoeder,1,https://github.com/DeviationTX/deviation/pull/682,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,682,2019-02-11T17:50:17Z,2019-02-21T09:33:38Z,2019-02-21T09:33:42Z,MERGED,True,6,10,1,https://github.com/TheRealMoeder,Save ROM on 128x64 swash_page.c ,4,[],https://github.com/DeviationTX/deviation/pull/682,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/682#issuecomment-464586541,,please rebase. we disabled sprintf warning. so you can still use sprintf if you believe it is safe like you don't have %s in format string.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,682,2019-02-11T17:50:17Z,2019-02-21T09:33:38Z,2019-02-21T09:33:42Z,MERGED,True,6,10,1,https://github.com/TheRealMoeder,Save ROM on 128x64 swash_page.c ,4,[],https://github.com/DeviationTX/deviation/pull/682,https://github.com/TheRealMoeder,3,https://github.com/DeviationTX/deviation/pull/682#issuecomment-464720040,,"no sprintf used here, but rebased nonetheless",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,684,2019-02-11T21:29:39Z,2019-02-12T15:36:28Z,2019-02-12T15:36:28Z,CLOSED,False,44,16,1,https://github.com/TheRealMoeder,Save ROM on 128x64 timer_page.c,2,[],https://github.com/DeviationTX/deviation/pull/684,https://github.com/TheRealMoeder,1,https://github.com/DeviationTX/deviation/pull/684,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,684,2019-02-11T21:29:39Z,2019-02-12T15:36:28Z,2019-02-12T15:36:28Z,CLOSED,False,44,16,1,https://github.com/TheRealMoeder,Save ROM on 128x64 timer_page.c,2,[],https://github.com/DeviationTX/deviation/pull/684,https://github.com/TheRealMoeder,2,https://github.com/DeviationTX/deviation/pull/684#issuecomment-462505803,,Don't know if it's really worth the effort in this case...,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,684,2019-02-11T21:29:39Z,2019-02-12T15:36:28Z,2019-02-12T15:36:28Z,CLOSED,False,44,16,1,https://github.com/TheRealMoeder,Save ROM on 128x64 timer_page.c,2,[],https://github.com/DeviationTX/deviation/pull/684,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/684#issuecomment-462519071,,i feel the new code is not cleaner.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,684,2019-02-11T21:29:39Z,2019-02-12T15:36:28Z,2019-02-12T15:36:28Z,CLOSED,False,44,16,1,https://github.com/TheRealMoeder,Save ROM on 128x64 timer_page.c,2,[],https://github.com/DeviationTX/deviation/pull/684,https://github.com/TheRealMoeder,4,https://github.com/DeviationTX/deviation/pull/684#issuecomment-462625339,,That was my thought too,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,684,2019-02-11T21:29:39Z,2019-02-12T15:36:28Z,2019-02-12T15:36:28Z,CLOSED,False,44,16,1,https://github.com/TheRealMoeder,Save ROM on 128x64 timer_page.c,2,[],https://github.com/DeviationTX/deviation/pull/684,https://github.com/howard0su,5,https://github.com/DeviationTX/deviation/pull/684#issuecomment-462732903,,not worth for the gain to compromise the code readability.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,684,2019-02-11T21:29:39Z,2019-02-12T15:36:28Z,2019-02-12T15:36:28Z,CLOSED,False,44,16,1,https://github.com/TheRealMoeder,Save ROM on 128x64 timer_page.c,2,[],https://github.com/DeviationTX/deviation/pull/684,https://github.com/TheRealMoeder,6,https://github.com/DeviationTX/deviation/pull/684#issuecomment-462807225,,Agree.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,685,2019-02-12T01:16:02Z,2019-02-12T01:59:43Z,2019-02-12T01:59:43Z,CLOSED,False,9,6,2,https://github.com/howard0su,Only caculate the out channels that are needed,1,[],https://github.com/DeviationTX/deviation/pull/685,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/685,Based on Model.num_channels to only caculate the channels are using.,Based on Model.num_channels to only caculate the channels are using.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,686,2019-02-12T05:03:16Z,2019-02-12T05:07:25Z,2019-02-12T05:07:25Z,MERGED,True,474,1,4,https://github.com/vladislavy,"Add Protocol LOLI support, from goebish",4,[],https://github.com/DeviationTX/deviation/pull/686,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/686,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,687,2019-02-12T13:14:32Z,2019-02-13T07:51:20Z,2019-02-13T07:51:25Z,MERGED,True,27,22,8,https://github.com/howard0su,split num_ppmin into num_ppmin_channels and num_ppmin_mode,6,[],https://github.com/DeviationTX/deviation/pull/687,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/687,"The RAM saving is only 1 byte, but the code is much more complex. use 2 bytes and cleanup the code.","The RAM saving is only 1 byte, but the code is much more complex. use 2 bytes and cleanup the code.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,687,2019-02-12T13:14:32Z,2019-02-13T07:51:20Z,2019-02-13T07:51:25Z,MERGED,True,27,22,8,https://github.com/howard0su,split num_ppmin into num_ppmin_channels and num_ppmin_mode,6,[],https://github.com/DeviationTX/deviation/pull/687,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/687#issuecomment-462754730,"The RAM saving is only 1 byte, but the code is much more complex. use 2 bytes and cleanup the code.",motivated by the configure modele cleanup,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,688,2019-02-13T08:07:44Z,2019-02-13T14:06:01Z,2019-02-13T14:06:16Z,MERGED,True,5,2,19,https://github.com/howard0su,Enable standard mixer page tests real,1,[],https://github.com/DeviationTX/deviation/pull/688,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/688,Now all standard page and voice configure page has the real content.,Now all standard page and voice configure page has the real content.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,688,2019-02-13T08:07:44Z,2019-02-13T14:06:01Z,2019-02-13T14:06:16Z,MERGED,True,5,2,19,https://github.com/howard0su,Enable standard mixer page tests real,1,[],https://github.com/DeviationTX/deviation/pull/688,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/688#issuecomment-463168189,Now all standard page and voice configure page has the real content.,current tests are implemented as an alternative to devo8. support 128gui need some smart way to do so. I don't have a good idea so far. @PhracturedBlue ?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,690,2019-02-14T00:24:02Z,2019-02-14T09:06:34Z,2019-02-14T09:06:38Z,MERGED,True,482,492,60,https://github.com/howard0su,Change protocol entry function to return uintptr_t,2,[],https://github.com/DeviationTX/deviation/pull/690,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/690,"change void* to uintptr_t, which avoids lots of cast
change Model.fixid?fixid:0 to Model.fixid
cast protocol options to uintptr_t explict","change void* to uintptr_t, which avoids lots of cast
change Model.fixid?fixid:0 to Model.fixid
cast protocol options to uintptr_t explict",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,691,2019-02-14T04:06:06Z,2019-02-14T09:07:00Z,2019-02-14T13:08:56Z,MERGED,True,23,116,60,https://github.com/howard0su,Move protocol_type to central file,1,[],https://github.com/DeviationTX/deviation/pull/691,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/691,Move protocol_type to a central place.,Move protocol_type to a central place.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,691,2019-02-14T04:06:06Z,2019-02-14T09:07:00Z,2019-02-14T13:08:56Z,MERGED,True,23,116,60,https://github.com/howard0su,Move protocol_type to central file,1,[],https://github.com/DeviationTX/deviation/pull/691,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/691#issuecomment-463492768,Move protocol_type to a central place.,"I am thinking to make the exports to a export table so that protocol
modules are not needed to update with main firmware. I noticed that the
interface between module and main firmware is pretty limit, (except usbhid
module which relies on so much code in main ROM of usb stack. I may need do
something about it.)
…
On Thu, Feb 14, 2019 at 12:56 PM PhracturedBlue ***@***.***> wrote:
 ***@***.**** approved this pull request.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#691 (review)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRBoXBVKABQuKCTkY5_JQ_cWslXiGks5vNOyEgaJpZM4a6yCK>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,691,2019-02-14T04:06:06Z,2019-02-14T09:07:00Z,2019-02-14T13:08:56Z,MERGED,True,23,116,60,https://github.com/howard0su,Move protocol_type to central file,1,[],https://github.com/DeviationTX/deviation/pull/691,https://github.com/PhracturedBlue,3,https://github.com/DeviationTX/deviation/pull/691#issuecomment-463620716,Move protocol_type to a central place.,"I understand the idea, but I'm not sure I want to do that.  It makes debugging issues MUCH more difficult.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,692,2019-02-15T14:49:54Z,2019-02-20T15:40:45Z,2020-03-13T02:15:37Z,CLOSED,False,674,91,37,https://github.com/howard0su,[WIP] RadioLink AT10S (AT10 II) target,27,[],https://github.com/DeviationTX/deviation/pull/692,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/692,"This is work-in-progress

 Get Tx boot with devo firmware
 Clock and timer
 LCD
 ADC, stick, switch
 5 direction sticker support
 Check AT10 LCD Driver","This is work-in-progress

 Get Tx boot with devo firmware
 Clock and timer
 LCD
 ADC, stick, switch
 5 direction sticker support
 Check AT10 LCD Driver",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,692,2019-02-15T14:49:54Z,2019-02-20T15:40:45Z,2020-03-13T02:15:37Z,CLOSED,False,674,91,37,https://github.com/howard0su,[WIP] RadioLink AT10S (AT10 II) target,27,[],https://github.com/DeviationTX/deviation/pull/692,https://github.com/FLYBYME,2,https://github.com/DeviationTX/deviation/pull/692#issuecomment-598501583,"This is work-in-progress

 Get Tx boot with devo firmware
 Clock and timer
 LCD
 ADC, stick, switch
 5 direction sticker support
 Check AT10 LCD Driver","@howard0su Do you have the pinout for the LCD? I was looking at the wiki and I'm struggling figure out what pins what like ""DISP20""
https://www.deviationtx.com/wiki/hardware/radiolink_at10",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,692,2019-02-15T14:49:54Z,2019-02-20T15:40:45Z,2020-03-13T02:15:37Z,CLOSED,False,674,91,37,https://github.com/howard0su,[WIP] RadioLink AT10S (AT10 II) target,27,[],https://github.com/DeviationTX/deviation/pull/692,https://github.com/FLYBYME,3,https://github.com/DeviationTX/deviation/pull/692#issuecomment-598515038,"This is work-in-progress

 Get Tx boot with devo firmware
 Clock and timer
 LCD
 ADC, stick, switch
 5 direction sticker support
 Check AT10 LCD Driver","Does this LCD pinout look right to you?
#define TFT_CS PD7//Control//LCD_CS
#define TFT_RD PD4//Control//LCD_RD
#define TFT_WR PD5//Control//LCD_WR
#define TFT_DC PD11//Control//LCD_RS/DC

#define TFT_RST PE0//Control RESET

#define TFT_D0 PD0//
#define TFT_D1 PD1//
#define TFT_D2 PD14//
#define TFT_D3 PD15//
#define TFT_D4 PE7//
#define TFT_D5 PE8//
#define TFT_D6 PE9//
#define TFT_D7 PE10//
#define TFT_D8 PE11//
#define TFT_D9 PE12//
#define TFT_D10 PE13//
#define TFT_D11 PE14//
#define TFT_D12 PE15//
#define TFT_D13 PD8//
#define TFT_D14 PD9//
#define TFT_D15 PD10//",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,693,2019-02-16T15:30:33Z,2019-02-18T00:45:16Z,2019-02-18T00:45:19Z,MERGED,True,82,168,68,https://github.com/howard0su,Use 320x240 driver to support different screensize,5,[],https://github.com/DeviationTX/deviation/pull/693,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/693,"Screensize is just two macro defined in target_defs.h.
The content under fs/ can still be screen size specific.","Screensize is just two macro defined in target_defs.h.
The content under fs/ can still be screen size specific.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,694,2019-02-16T23:24:12Z,2019-02-17T16:39:33Z,2019-02-17T16:39:42Z,MERGED,True,181,1014,108,https://github.com/PhracturedBlue,Driver reorg,8,[],https://github.com/DeviationTX/deviation/pull/694,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/694,"Reorganize driver code to make things more modular.  There will be several steps to this process, including moving the transmitters into a different hierarchy, moving the emu and devo code location, replacing ports.h with hardware.h, building hardware defines from yaml,...  This is just the 1st step.  It should have zero impact on the resulting ROM size.
ToDo:
[x] Move display drivers
[x] Move mcu code
[ ] Move backlight code
[x] move filesystem code","Reorganize driver code to make things more modular.  There will be several steps to this process, including moving the transmitters into a different hierarchy, moving the emu and devo code location, replacing ports.h with hardware.h, building hardware defines from yaml,...  This is just the 1st step.  It should have zero impact on the resulting ROM size.
ToDo:
[x] Move display drivers
[x] Move mcu code
[ ] Move backlight code
[x] move filesystem code",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,694,2019-02-16T23:24:12Z,2019-02-17T16:39:33Z,2019-02-17T16:39:42Z,MERGED,True,181,1014,108,https://github.com/PhracturedBlue,Driver reorg,8,[],https://github.com/DeviationTX/deviation/pull/694,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/694#issuecomment-464402659,"Reorganize driver code to make things more modular.  There will be several steps to this process, including moving the transmitters into a different hierarchy, moving the emu and devo code location, replacing ports.h with hardware.h, building hardware defines from yaml,...  This is just the 1st step.  It should have zero impact on the resulting ROM size.
ToDo:
[x] Move display drivers
[x] Move mcu code
[ ] Move backlight code
[x] move filesystem code",how about usb？,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,694,2019-02-16T23:24:12Z,2019-02-17T16:39:33Z,2019-02-17T16:39:42Z,MERGED,True,181,1014,108,https://github.com/PhracturedBlue,Driver reorg,8,[],https://github.com/DeviationTX/deviation/pull/694,https://github.com/PhracturedBlue,3,https://github.com/DeviationTX/deviation/pull/694#issuecomment-464465872,"Reorganize driver code to make things more modular.  There will be several steps to this process, including moving the transmitters into a different hierarchy, moving the emu and devo code location, replacing ports.h with hardware.h, building hardware defines from yaml,...  This is just the 1st step.  It should have zero impact on the resulting ROM size.
ToDo:
[x] Move display drivers
[x] Move mcu code
[ ] Move backlight code
[x] move filesystem code",I'm going to defer the backlight fixes.  They aren't as easy since they are tied to the mcu.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,694,2019-02-16T23:24:12Z,2019-02-17T16:39:33Z,2019-02-17T16:39:42Z,MERGED,True,181,1014,108,https://github.com/PhracturedBlue,Driver reorg,8,[],https://github.com/DeviationTX/deviation/pull/694,https://github.com/howard0su,4,https://github.com/DeviationTX/deviation/pull/694#issuecomment-464468510,"Reorganize driver code to make things more modular.  There will be several steps to this process, including moving the transmitters into a different hierarchy, moving the emu and devo code location, replacing ports.h with hardware.h, building hardware defines from yaml,...  This is just the 1st step.  It should have zero impact on the resulting ROM size.
ToDo:
[x] Move display drivers
[x] Move mcu code
[ ] Move backlight code
[x] move filesystem code","at9 code increase may cause by this;
if (type == LCDTYPE_ILI9341) {
ili9341_init();
} else if (type == LCDTYPE_HX8347) {
hx8347_init();
at9 doesn't really need hx8347 code. maybe we need introduce a knob to control the which indeed the driver to compile in.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,694,2019-02-16T23:24:12Z,2019-02-17T16:39:33Z,2019-02-17T16:39:42Z,MERGED,True,181,1014,108,https://github.com/PhracturedBlue,Driver reorg,8,[],https://github.com/DeviationTX/deviation/pull/694,https://github.com/PhracturedBlue,5,https://github.com/DeviationTX/deviation/pull/694#issuecomment-464476529,"Reorganize driver code to make things more modular.  There will be several steps to this process, including moving the transmitters into a different hierarchy, moving the emu and devo code location, replacing ports.h with hardware.h, building hardware defines from yaml,...  This is just the 1st step.  It should have zero impact on the resulting ROM size.
ToDo:
[x] Move display drivers
[x] Move mcu code
[ ] Move backlight code
[x] move filesystem code","well, strictly speaking we should try to re-init if an init fails.  This pull request should not change any existing logic though, so I'm not making any changes to how the code functions here",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,695,2019-02-17T13:17:49Z,2019-02-17T13:59:13Z,2019-02-17T14:43:08Z,MERGED,True,3,0,1,https://github.com/howard0su,Disable sprintf lint error,1,[],https://github.com/DeviationTX/deviation/pull/695,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/695,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,696,2019-02-17T13:26:08Z,,2019-02-17T14:43:09Z,OPEN,False,37,0,3,https://github.com/howard0su,[WIP] Track redrew with some color code,1,[],https://github.com/DeviationTX/deviation/pull/696,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/696,"this is similar to Android debug option to track redraw times. It colors UI elements to identify the amount of overdraw as follows:
True color: No overdraw
Blue: Overdrawn 1 time
Green: Overdrawn 2 times
Red: Overdrawn 3 or more times","this is similar to Android debug option to track redraw times. It colors UI elements to identify the amount of overdraw as follows:
True color: No overdraw
Blue: Overdrawn 1 time
Green: Overdrawn 2 times
Red: Overdrawn 3 or more times",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,696,2019-02-17T13:26:08Z,,2019-02-17T14:43:09Z,OPEN,False,37,0,3,https://github.com/howard0su,[WIP] Track redrew with some color code,1,[],https://github.com/DeviationTX/deviation/pull/696,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/696#issuecomment-464465465,"this is similar to Android debug option to track redraw times. It colors UI elements to identify the amount of overdraw as follows:
True color: No overdraw
Blue: Overdrawn 1 time
Green: Overdrawn 2 times
Red: Overdrawn 3 or more times","yes. I want to have another option on the EMU right panel like the inputs
today. didn't get time to do that yet.
…
On Sun, Feb 17, 2019 at 10:30 PM PhracturedBlue ***@***.***> wrote:
 ***@***.**** commented on this pull request.
 ------------------------------

 In src/target/common/emu/fltk.cpp
 <#696 (comment)>:

 > @@ -665,8 +665,42 @@ void PWR_Sleep() {
  void LCD_ForceUpdate() {
      if (changed) {
          changed = false;
 +#ifdef BUILDTYPE_DEV
 +        for (int x = 0; x < LCD_WIDTH; x++)

 This probably needs to be configurable rather than always on with dev
 builds

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#696 (review)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAuzRKnoYxVszfUM2v7OZ9CsIyDgq9tmks5vOWeOgaJpZM4a_jqh>
 .


-- 
-Howard",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,697,2019-02-17T14:23:52Z,2019-02-17T14:34:35Z,2019-02-17T14:41:40Z,MERGED,True,1,1,1,https://github.com/PhracturedBlue,Lock down cpplint version,1,[],https://github.com/DeviationTX/deviation/pull/697,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/697,New linter seems to have regressions.  Let's lock down to a known 'good' one,New linter seems to have regressions.  Let's lock down to a known 'good' one,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,698,2019-02-17T14:24:49Z,2019-02-17T14:36:47Z,2019-02-17T14:41:15Z,MERGED,True,1,0,1,https://github.com/PhracturedBlue,Don't inherit LANGUAGE from environmant,1,[],https://github.com/DeviationTX/deviation/pull/698,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/698,"If $LANGUAGE is set in the env, then devofs filesystems get language files even when they sholdn't.  LANGUAGE should not be inherited","If $LANGUAGE is set in the env, then devofs filesystems get language files even when they sholdn't.  LANGUAGE should not be inherited",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,699,2019-02-17T16:56:59Z,2019-02-18T01:20:15Z,2019-02-18T01:20:15Z,MERGED,True,1,1,5,https://github.com/PhracturedBlue,Move printf/fgets out of filestystem code into main source code,1,[],https://github.com/DeviationTX/deviation/pull/699,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/699,"Code is not hardware dependent, so move out of target area","Code is not hardware dependent, so move out of target area",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,700,2019-02-17T18:09:15Z,2019-02-18T02:41:22Z,2019-02-18T02:41:27Z,MERGED,True,186,180,417,https://github.com/PhracturedBlue,Reorganize emu and transmitter directories,4,[],https://github.com/DeviationTX/deviation/pull/700,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/700,Major reorganization of transmitters to live under families,Major reorganization of transmitters to live under families,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,702,2019-02-17T20:18:54Z,2019-02-17T22:05:14Z,2019-02-17T22:05:14Z,MERGED,True,29,11,3,https://github.com/PhracturedBlue,Fix flipped screen on T8SG Fixes #701,4,[],https://github.com/DeviationTX/deviation/pull/702,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/702,Pull #694 flipped the t8sg screen.  This should put it back the way it belongs,Pull #694 flipped the t8sg screen.  This should put it back the way it belongs,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,703,2019-02-18T03:56:24Z,2019-02-18T04:58:59Z,2019-02-18T05:00:05Z,MERGED,True,123,107,7,https://github.com/howard0su,Abstract common for radiolink family,2,[],https://github.com/DeviationTX/deviation/pull/703,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/703,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,704,2019-02-18T04:32:09Z,2019-02-18T14:38:32Z,2019-02-18T14:38:32Z,MERGED,True,9184,6807,24,https://github.com/PhracturedBlue,Update FatFs.  Modify f_* calls to be FatFs compatible,4,[],https://github.com/DeviationTX/deviation/pull/704,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/704,"FatFS has a FATFS and FIL structure (compared to just FATFS for petit_fat and devofs).
This is needed to support SDCard interfaces (t12, x9d, etc)","FatFS has a FATFS and FIL structure (compared to just FATFS for petit_fat and devofs).
This is needed to support SDCard interfaces (t12, x9d, etc)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,704,2019-02-18T04:32:09Z,2019-02-18T14:38:32Z,2019-02-18T14:38:32Z,MERGED,True,9184,6807,24,https://github.com/PhracturedBlue,Update FatFs.  Modify f_* calls to be FatFs compatible,4,[],https://github.com/DeviationTX/deviation/pull/704,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/704#issuecomment-464617232,"FatFS has a FATFS and FIL structure (compared to just FATFS for petit_fat and devofs).
This is needed to support SDCard interfaces (t12, x9d, etc)",looks good. can we have a test case to cover some basics?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,704,2019-02-18T04:32:09Z,2019-02-18T14:38:32Z,2019-02-18T14:38:32Z,MERGED,True,9184,6807,24,https://github.com/PhracturedBlue,Update FatFs.  Modify f_* calls to be FatFs compatible,4,[],https://github.com/DeviationTX/deviation/pull/704,https://github.com/PhracturedBlue,3,https://github.com/DeviationTX/deviation/pull/704#issuecomment-464741833,"FatFS has a FATFS and FIL structure (compared to just FATFS for petit_fat and devofs).
This is needed to support SDCard interfaces (t12, x9d, etc)",Writing tests will be difficult as all this code is disabled by using the native_fs.  I probably need to find a way to load all 4 drivers at once and switch between them.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,705,2019-02-18T04:41:42Z,2019-02-18T13:36:42Z,2019-02-18T13:36:47Z,MERGED,True,12,3,2,https://github.com/PhracturedBlue,T8SG:Don't trigger watchdog during long-press power-down,4,[],https://github.com/DeviationTX/deviation/pull/705,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/705,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,705,2019-02-18T04:41:42Z,2019-02-18T13:36:42Z,2019-02-18T13:36:47Z,MERGED,True,12,3,2,https://github.com/PhracturedBlue,T8SG:Don't trigger watchdog during long-press power-down,4,[],https://github.com/DeviationTX/deviation/pull/705,https://github.com/TheRealMoeder,2,https://github.com/DeviationTX/deviation/pull/705#issuecomment-464720886,,We should probably be doing the same when playing MUSIC_Play(MUSIC_SHUTDOWN); in main.c (although this didn't make shutdown music work for me...),True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,706,2019-02-18T05:07:10Z,2019-02-18T14:29:48Z,2019-02-18T14:29:53Z,MERGED,True,236,40,6,https://github.com/howard0su,Add st7796 LCD driver,7,[],https://github.com/DeviationTX/deviation/pull/706,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/706,This LCD module is found on AT10S.,This LCD module is found on AT10S.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,707,2019-02-18T06:52:16Z,2019-02-18T13:57:18Z,2019-02-18T13:57:22Z,MERGED,True,0,2,3,https://github.com/howard0su,Move Error handler into MCU driver,1,[],https://github.com/DeviationTX/deviation/pull/707,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/707,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,708,2019-02-18T15:22:20Z,2019-02-19T04:21:05Z,2019-02-19T04:21:08Z,MERGED,True,319312,366026,7,https://github.com/howard0su,Make sure font width is less than char width,3,[],https://github.com/DeviationTX/deviation/pull/708,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/708,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,709,2019-02-18T16:27:36Z,,2019-05-03T10:40:11Z,OPEN,False,141,0,3,https://github.com/goebish,[WIP] Support Radiolink AT9/AT10 stock module and protocol,18,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/709,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/709,"Add support for stock RF module for at9/at10
That's only the protocol, it has to be enabled by defining
PROTO_HAS_RADIOLINK_CC2530
A few things have to be implemented for at9/10, I'll let someone with a transmitter do it:
define RADIOLINK_CC2530_RESET_PIN & RADIOLINK_CC2530_CSN_PIN GPIO
update those functions:
PROTO_CS_HI(RADIOLINK_CC2530);
PROTO_CS_LO(RADIOLINK_CC2530);","Add support for stock RF module for at9/at10
That's only the protocol, it has to be enabled by defining
PROTO_HAS_RADIOLINK_CC2530
A few things have to be implemented for at9/10, I'll let someone with a transmitter do it:
define RADIOLINK_CC2530_RESET_PIN & RADIOLINK_CC2530_CSN_PIN GPIO
update those functions:
PROTO_CS_HI(RADIOLINK_CC2530);
PROTO_CS_LO(RADIOLINK_CC2530);",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,709,2019-02-18T16:27:36Z,,2019-05-03T10:40:11Z,OPEN,False,141,0,3,https://github.com/goebish,[WIP] Support Radiolink AT9/AT10 stock module and protocol,18,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/709,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/709#issuecomment-465644931,"Add support for stock RF module for at9/at10
That's only the protocol, it has to be enabled by defining
PROTO_HAS_RADIOLINK_CC2530
A few things have to be implemented for at9/10, I'll let someone with a transmitter do it:
define RADIOLINK_CC2530_RESET_PIN & RADIOLINK_CC2530_CSN_PIN GPIO
update those functions:
PROTO_CS_HI(RADIOLINK_CC2530);
PROTO_CS_LO(RADIOLINK_CC2530);",I think you need keep the module name RADIOLINK_CC2530,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,709,2019-02-18T16:27:36Z,,2019-05-03T10:40:11Z,OPEN,False,141,0,3,https://github.com/goebish,[WIP] Support Radiolink AT9/AT10 stock module and protocol,18,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/709,https://github.com/goebish,3,https://github.com/DeviationTX/deviation/pull/709#issuecomment-465645474,"Add support for stock RF module for at9/at10
That's only the protocol, it has to be enabled by defining
PROTO_HAS_RADIOLINK_CC2530
A few things have to be implemented for at9/10, I'll let someone with a transmitter do it:
define RADIOLINK_CC2530_RESET_PIN & RADIOLINK_CC2530_CSN_PIN GPIO
update those functions:
PROTO_CS_HI(RADIOLINK_CC2530);
PROTO_CS_LO(RADIOLINK_CC2530);","I kept this name, I only removed the ""Radiolink"" string from hardware.c which was useless unless we want to configure the module from hardware.ini ?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,709,2019-02-18T16:27:36Z,,2019-05-03T10:40:11Z,OPEN,False,141,0,3,https://github.com/goebish,[WIP] Support Radiolink AT9/AT10 stock module and protocol,18,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/709,https://github.com/sawyouintheheaven,4,https://github.com/DeviationTX/deviation/pull/709#issuecomment-478326283,"Add support for stock RF module for at9/at10
That's only the protocol, it has to be enabled by defining
PROTO_HAS_RADIOLINK_CC2530
A few things have to be implemented for at9/10, I'll let someone with a transmitter do it:
define RADIOLINK_CC2530_RESET_PIN & RADIOLINK_CC2530_CSN_PIN GPIO
update those functions:
PROTO_CS_HI(RADIOLINK_CC2530);
PROTO_CS_LO(RADIOLINK_CC2530);","Hello,my friends.Can you help me?
I have a at9, but  I  burned the chip STM32f103VET6.  I bought a new STM32f103VET6 and replaced the burned one. But the new chip did not have a RADIOLINK or DEVIATION bootloader, so I can not use a .dfu file to flash. I tried to use the D7E's 256k-edition bootloader.It worked,I could use the devention Upgrade Tools to flash deviation-at9-xx.dfu file,which was downloaded from (https://www.deviationtx.com/downloads-new/category/13-nightly-builds).
But after flashing it, it seemed that the board did not work normally.The LCD was still black and I plugged the usb wire to my PC.It told me that the device can not be recognized.
So,can you tell me how to fix it?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,709,2019-02-18T16:27:36Z,,2019-05-03T10:40:11Z,OPEN,False,141,0,3,https://github.com/goebish,[WIP] Support Radiolink AT9/AT10 stock module and protocol,18,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/709,https://github.com/SilverFire,5,https://github.com/DeviationTX/deviation/pull/709#issuecomment-488834710,"Add support for stock RF module for at9/at10
That's only the protocol, it has to be enabled by defining
PROTO_HAS_RADIOLINK_CC2530
A few things have to be implemented for at9/10, I'll let someone with a transmitter do it:
define RADIOLINK_CC2530_RESET_PIN & RADIOLINK_CC2530_CSN_PIN GPIO
update those functions:
PROTO_CS_HI(RADIOLINK_CC2530);
PROTO_CS_LO(RADIOLINK_CC2530);","Hello, @sawyouintheheaven! Try this manual: #866",True,"{'THUMBS_UP': ['https://github.com/goebish', 'https://github.com/sawyouintheheaven']}"
DeviationTX/deviation,https://github.com/DeviationTX/deviation,709,2019-02-18T16:27:36Z,,2019-05-03T10:40:11Z,OPEN,False,141,0,3,https://github.com/goebish,[WIP] Support Radiolink AT9/AT10 stock module and protocol,18,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/709,https://github.com/SilverFire,6,https://github.com/DeviationTX/deviation/pull/709#issuecomment-488986484,"Add support for stock RF module for at9/at10
That's only the protocol, it has to be enabled by defining
PROTO_HAS_RADIOLINK_CC2530
A few things have to be implemented for at9/10, I'll let someone with a transmitter do it:
define RADIOLINK_CC2530_RESET_PIN & RADIOLINK_CC2530_CSN_PIN GPIO
update those functions:
PROTO_CS_HI(RADIOLINK_CC2530);
PROTO_CS_LO(RADIOLINK_CC2530);","Hello. @goebish!
Thank you for your effort! I have AT9 and tried to flash it with code from this PR. I've described my experience in #866, but I failed to test radio for the reasons described in that issue.
I'm not experienced in programming for STM, but if you are willing to continue work on this pull request, you can ping me - I will try to help to the best of my knowledge",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,709,2019-02-18T16:27:36Z,,2019-05-03T10:40:11Z,OPEN,False,141,0,3,https://github.com/goebish,[WIP] Support Radiolink AT9/AT10 stock module and protocol,18,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/709,https://github.com/goebish,7,https://github.com/DeviationTX/deviation/pull/709#issuecomment-489055095,"Add support for stock RF module for at9/at10
That's only the protocol, it has to be enabled by defining
PROTO_HAS_RADIOLINK_CC2530
A few things have to be implemented for at9/10, I'll let someone with a transmitter do it:
define RADIOLINK_CC2530_RESET_PIN & RADIOLINK_CC2530_CSN_PIN GPIO
update those functions:
PROTO_CS_HI(RADIOLINK_CC2530);
PROTO_CS_LO(RADIOLINK_CC2530);","As you've noticed, the AT9 build isn't ready for the show yet ;)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,710,2019-02-18T16:37:39Z,2019-02-18T17:21:04Z,2019-02-18T17:21:10Z,MERGED,True,455,43,17,https://github.com/PhracturedBlue,Start STM32 reorg.  Add abstraction funcs.  Update ADC,3,[],https://github.com/DeviationTX/deviation/pull/710,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/710,"I'm going to do the migration to the STM32 abstraction layer in small pieces to keep merges manageable and to make it easier to regress.
This adds most of the needed abstraction functions for the f1, and does a trivial conversion of the ADC code.","I'm going to do the migration to the STM32 abstraction layer in small pieces to keep merges manageable and to make it easier to regress.
This adds most of the needed abstraction functions for the f1, and does a trivial conversion of the ADC code.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,711,2019-02-18T18:10:35Z,2019-02-18T19:53:39Z,2019-02-18T19:53:43Z,MERGED,True,180,131,13,https://github.com/PhracturedBlue,STM32 reorg: DMA abstraction,5,[],https://github.com/DeviationTX/deviation/pull/711,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/711,Abstract DMA calls for stm32,Abstract DMA calls for stm32,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,712,2019-02-18T20:31:48Z,2019-03-03T18:01:47Z,2019-03-03T18:01:58Z,MERGED,True,3,1,1,https://github.com/hexfet,Add support for 250mW power level in CRSF telemetry.,2,[],https://github.com/DeviationTX/deviation/pull/712,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/712,Fixes #669,Fixes #669,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,713,2019-02-18T21:50:16Z,2019-02-18T22:41:15Z,2019-02-18T22:41:21Z,MERGED,True,141,117,38,https://github.com/PhracturedBlue,STM32 reorg: Abstract UART definition,4,[],https://github.com/DeviationTX/deviation/pull/713,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/713,Removes hard-coding of UART pins,Removes hard-coding of UART pins,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,714,2019-02-19T00:07:17Z,2019-02-19T00:19:23Z,2019-02-19T00:19:26Z,MERGED,True,20,20,6,https://github.com/howard0su,fix build after path change,1,[],https://github.com/DeviationTX/deviation/pull/714,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/714,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,715,2019-02-19T03:16:46Z,2019-02-19T03:24:54Z,2019-02-19T03:24:54Z,MERGED,True,11,13,11,https://github.com/PhracturedBlue,Fix make zips for DevoF4 and DevoF7,1,[],https://github.com/DeviationTX/deviation/pull/715,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/715,We had some remaining fallout from the reorganization.  his should fix all remaining targets,We had some remaining fallout from the reorganization.  his should fix all remaining targets,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,716,2019-02-19T05:44:01Z,2019-02-19T13:48:59Z,2019-02-19T13:49:04Z,MERGED,True,435,502,41,https://github.com/PhracturedBlue,STM32 Reorg: Remove SPI hardcodes,9,[],https://github.com/DeviationTX/deviation/pull/716,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/716,"This should remove all SPI hardcodes
The only ones left are in the 480x272 driver.  Those are still TBD","This should remove all SPI hardcodes
The only ones left are in the 480x272 driver.  Those are still TBD",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,717,2019-02-19T06:16:48Z,2019-02-25T01:03:54Z,2019-02-25T01:03:58Z,MERGED,True,62,99,13,https://github.com/howard0su,Remove non-exist UI element type for 128x64 and text,6,[],https://github.com/DeviationTX/deviation/pull/717,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/717,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,717,2019-02-19T06:16:48Z,2019-02-25T01:03:54Z,2019-02-25T01:03:58Z,MERGED,True,62,99,13,https://github.com/howard0su,Remove non-exist UI element type for 128x64 and text,6,[],https://github.com/DeviationTX/deviation/pull/717,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/717#issuecomment-465654008,,@PhracturedBlue check again.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,718,2019-02-19T07:36:50Z,,2019-03-02T01:31:19Z,OPEN,False,129,13,11,https://github.com/howard0su,Use code to draw button effect instead of pictures,2,['On Hold'],https://github.com/DeviationTX/deviation/pull/718,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/718,This saves SPI flash space for the color screen Tx with small SPI flash or no flash.,This saves SPI flash space for the color screen Tx with small SPI flash or no flash.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,718,2019-02-19T07:36:50Z,,2019-03-02T01:31:19Z,OPEN,False,129,13,11,https://github.com/howard0su,Use code to draw button effect instead of pictures,2,['On Hold'],https://github.com/DeviationTX/deviation/pull/718,https://github.com/PhracturedBlue,2,https://github.com/DeviationTX/deviation/pull/718#issuecomment-465112543,This saves SPI flash space for the color screen Tx with small SPI flash or no flash.,"Does this have real ROI and actually make widgets easier to use?  It will require users to update their filesystem...something we try not to require as much as possible.  I tested that it doesn't crash when the old images are used, but it also will appear to be a graphics bug in that case.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,719,2019-02-19T13:11:47Z,,2019-02-20T17:01:13Z,OPEN,False,62,75,8,https://github.com/howard0su,Prototype of layout,4,[],https://github.com/DeviationTX/deviation/pull/719,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/719,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,719,2019-02-19T13:11:47Z,,2019-02-20T17:01:13Z,OPEN,False,62,75,8,https://github.com/howard0su,Prototype of layout,4,[],https://github.com/DeviationTX/deviation/pull/719,https://github.com/PhracturedBlue,2,https://github.com/DeviationTX/deviation/pull/719#issuecomment-465139254,,"overall, I like the idea.  I think we'll need non-uniform grids, and I'd like to see how we can use it for varying width displas (like between the devo8 and devo12) or how we can support the x9d 212x64 display (which we could easily model on one of the b&w devo tx in the emulator)  to see how scalable it is.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,720,2019-02-20T00:16:10Z,2019-02-25T09:28:48Z,2019-02-25T09:28:48Z,MERGED,True,21,16,14,https://github.com/howard0su,Fix warnings noticed by clang,6,[],https://github.com/DeviationTX/deviation/pull/720,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/720,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,721,2019-02-20T01:34:44Z,2019-02-20T03:41:21Z,2019-02-20T03:41:25Z,MERGED,True,2,0,1,https://github.com/PhracturedBlue,Fix devof12e-XMS build,1,[],https://github.com/DeviationTX/deviation/pull/721,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/721,devof12e-xms build broken due to missing 'else',devof12e-xms build broken due to missing 'else',True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,722,2019-02-20T01:35:18Z,2019-02-20T17:47:10Z,2019-02-20T17:47:40Z,MERGED,True,124,69,9,https://github.com/PhracturedBlue,STM32 reorg: Remove hard-coded I2C values for Devof12e,3,[],https://github.com/DeviationTX/deviation/pull/722,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/722,add wrapper functions for i2c,add wrapper functions for i2c,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,723,2019-02-20T03:37:04Z,2019-03-03T18:01:17Z,2019-03-03T18:01:18Z,MERGED,True,34,25,3,https://github.com/hexfet,Fix index out-of-bounds and null pointer in power settings,4,[],https://github.com/DeviationTX/deviation/pull/723,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/723,Working and hopefully cleaner fix to replace #670.,Working and hopefully cleaner fix to replace #670.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,725,2019-02-20T04:31:15Z,2019-02-20T05:21:26Z,2019-02-20T05:21:30Z,MERGED,True,8,4,1,https://github.com/PhracturedBlue,Fix emulator build (at least for devofs) using USE_NATIVE_FS=1,2,[],https://github.com/DeviationTX/deviation/pull/725,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/725,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,726,2019-02-20T04:46:01Z,2019-02-20T04:56:22Z,2019-02-20T04:56:25Z,MERGED,True,6,6,2,https://github.com/PhracturedBlue,Fix segfault in filehandling,1,[],https://github.com/DeviationTX/deviation/pull/726,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/726,Conversion from void * to uintptr_t should have been intptr_t in file-handling code,Conversion from void * to uintptr_t should have been intptr_t in file-handling code,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,727,2019-02-20T06:50:00Z,,2019-02-20T07:41:42Z,OPEN,False,145,182,16,https://github.com/howard0su,Cleanup Main Page Layout code,4,[],https://github.com/DeviationTX/deviation/pull/727,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/727,"reorg the structure to avoid using an array to represent arbitrary information.
Move pagecfg2 structure content into Model
Remove ELEM_XXX macro as we are using dedicate fields in struct elem.

The change will help move the layout config related code easy to convert to data driven.","reorg the structure to avoid using an array to represent arbitrary information.
Move pagecfg2 structure content into Model
Remove ELEM_XXX macro as we are using dedicate fields in struct elem.

The change will help move the layout config related code easy to convert to data driven.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,728,2019-02-20T14:12:13Z,2019-02-20T14:56:35Z,2019-02-20T14:56:39Z,MERGED,True,3,2,2,https://github.com/PhracturedBlue,Fix SPI bug from #716,1,[],https://github.com/DeviationTX/deviation/pull/728,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/728,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,729,2019-02-20T14:13:18Z,2019-02-20T17:33:58Z,2019-02-20T17:35:49Z,MERGED,True,31,13,2,https://github.com/PhracturedBlue,Run lint (in non-failure mode) after every make,2,[],https://github.com/DeviationTX/deviation/pull/729,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/729,This is not great for running 'zips' as it runs for each target as opposed to only once.  Not sure of a good way to fix that.,This is not great for running 'zips' as it runs for each target as opposed to only once.  Not sure of a good way to fix that.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,730,2019-02-20T14:55:56Z,2019-02-20T15:08:59Z,2019-02-20T15:08:59Z,MERGED,True,0,0,1,https://github.com/PhracturedBlue,Move 480x272 header to right location,1,[],https://github.com/DeviationTX/deviation/pull/730,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/730,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,731,2019-02-20T15:27:34Z,2019-02-20T16:27:51Z,2019-02-20T16:27:54Z,MERGED,True,27,31,1,https://github.com/howard0su,Refector lcd code and add st7796 probe code,1,[],https://github.com/DeviationTX/deviation/pull/731,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/731,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,732,2019-02-20T15:30:05Z,2019-02-20T16:28:24Z,2019-02-20T16:28:29Z,MERGED,True,4,4,3,https://github.com/howard0su,Prepare import of screen 480x320,1,[],https://github.com/DeviationTX/deviation/pull/732,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/732,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,733,2019-02-20T15:32:32Z,2019-02-20T16:28:41Z,2019-02-20T16:28:46Z,MERGED,True,5,0,2,https://github.com/howard0su,Remove background image from 320x240x1,1,[],https://github.com/DeviationTX/deviation/pull/733,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/733,"Due to size limit of internal storage, radiolink cannot really have a nice background image. so use solid color background by default.","Due to size limit of internal storage, radiolink cannot really have a nice background image. so use solid color background by default.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,734,2019-02-20T15:36:10Z,2019-02-20T17:16:25Z,2019-02-20T17:16:29Z,MERGED,True,69,57,12,https://github.com/howard0su,abstract some code from at9 to common,2,[],https://github.com/DeviationTX/deviation/pull/734,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/734,Some code in at9 is able to share with other raidolink Tx. move them out to common.,Some code in at9 is able to share with other raidolink Tx. move them out to common.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,735,2019-02-20T15:39:29Z,2019-02-21T02:54:53Z,2019-02-21T02:54:59Z,MERGED,True,570,3,17,https://github.com/howard0su,Import AT10 Tx support,3,[],https://github.com/DeviationTX/deviation/pull/735,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/735,need rebase after other PRs in.,need rebase after other PRs in.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,736,2019-02-20T16:04:25Z,2019-02-20T16:27:02Z,2019-02-20T16:27:06Z,MERGED,True,3,0,1,https://github.com/howard0su,Print out stack size after link,1,[],https://github.com/DeviationTX/deviation/pull/736,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/736,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,737,2019-02-20T17:00:15Z,2019-02-21T01:48:38Z,2019-02-21T01:48:42Z,MERGED,True,153,113,5,https://github.com/PhracturedBlue,STM32 Reorg: remove hardcodes from fsmc,2,[],https://github.com/DeviationTX/deviation/pull/737,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/737,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,739,2019-02-21T02:46:45Z,2019-02-21T05:31:03Z,2019-02-21T05:31:07Z,MERGED,True,477,737,43,https://github.com/PhracturedBlue,[WIP] STM32 Reorg: remove hardcodes for timer code,8,[],https://github.com/DeviationTX/deviation/pull/739,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/739,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,740,2019-02-21T04:07:30Z,2019-02-21T04:09:50Z,2019-02-21T04:09:50Z,MERGED,True,0,0,1,https://github.com/howard0su,add missing file needed by at10,1,[],https://github.com/DeviationTX/deviation/pull/740,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/740,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,741,2019-02-21T04:20:26Z,2019-02-24T02:32:34Z,2019-02-24T02:32:34Z,MERGED,True,166,75,20,https://github.com/howard0su,Support write for the flash inside MCU,6,[],https://github.com/DeviationTX/deviation/pull/741,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/741,"on AT9 and AT10, we are using MCU flash to simulate a SPI flash. Enable the write support for the disk.","on AT9 and AT10, we are using MCU flash to simulate a SPI flash. Enable the write support for the disk.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,742,2019-02-21T14:00:38Z,2019-02-21T15:13:27Z,2019-02-21T15:13:27Z,CLOSED,False,6,6,3,https://github.com/howard0su,Fix FSMC,2,[],https://github.com/DeviationTX/deviation/pull/742,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/742,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,743,2019-02-21T15:04:01Z,2019-02-21T15:18:21Z,2019-02-21T15:18:26Z,MERGED,True,11,6,4,https://github.com/PhracturedBlue,FSMC fixes,1,[],https://github.com/DeviationTX/deviation/pull/743,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/743,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,744,2019-02-22T01:17:06Z,2019-02-22T02:49:09Z,2019-02-22T02:49:17Z,MERGED,True,1,1,1,https://github.com/PhracturedBlue,Enable correct DMA for ADC  Fix for #711 on Devo12,1,[],https://github.com/DeviationTX/deviation/pull/744,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/744,"On Devo12, the ADC DMA is not properly enabled due to a typo.  This works on other radios because the same DMA is used for UART which enables the RCC for us.  the Devo12 has a different DMA for analog inputs, and so wasn't powered on properly.","On Devo12, the ADC DMA is not properly enabled due to a typo.  This works on other radios because the same DMA is used for UART which enables the RCC for us.  the Devo12 has a different DMA for analog inputs, and so wasn't powered on properly.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,745,2019-02-22T02:37:59Z,2019-02-22T13:15:03Z,2019-02-22T13:15:08Z,MERGED,True,241,180,27,https://github.com/PhracturedBlue,STM32 reorg: remove hardcoded gpio pin definitions,6,[],https://github.com/DeviationTX/deviation/pull/745,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/745,Replace all hardcoded GPIO pins with those defined in hardware.h,Replace all hardcoded GPIO pins with those defined in hardware.h,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,746,2019-02-22T02:48:24Z,2019-02-22T03:33:54Z,2019-02-22T03:34:00Z,MERGED,True,12,6,3,https://github.com/PhracturedBlue,Fix PWM support for devo12,1,[],https://github.com/DeviationTX/deviation/pull/746,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/746,Missed some devo12 configuration during TIMER reorg,Missed some devo12 configuration during TIMER reorg,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,747,2019-02-22T03:11:13Z,2019-02-22T08:05:21Z,2019-02-22T08:05:21Z,MERGED,True,4,24,1,https://github.com/hexfet,Adjust post-transmit timing to eliminate wait loop,1,[],https://github.com/DeviationTX/deviation/pull/747,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/747,Addresses issue #738.  Telemetry packets continue to work with this change tested with a Bugs3 flight controller.,Addresses issue #738.  Telemetry packets continue to work with this change tested with a Bugs3 flight controller.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,748,2019-02-22T16:51:03Z,2019-02-22T17:02:39Z,2019-02-22T17:02:57Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix crash on at10,1,[],https://github.com/DeviationTX/deviation/pull/748,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/748,"because this variable is defined here:
struct advmixer_obj {
guiButton_t testico;
guiButton_t reorderico;
union {
guiButton_t but;
guiLabel_t lbl;
} name[ENTRIES_PER_PAGE];
guiButton_t tmpl[ENTRIES_PER_PAGE];
guiLabel_t src[ENTRIES_PER_PAGE];
guiLabel_t sw1[ENTRIES_PER_PAGE];
guiLabel_t sw2[ENTRIES_PER_PAGE];
guiKeyboard_t keyboard;
guiScrollable_t scrollable;
};","because this variable is defined here:
struct advmixer_obj {
guiButton_t testico;
guiButton_t reorderico;
union {
guiButton_t but;
guiLabel_t lbl;
} name[ENTRIES_PER_PAGE];
guiButton_t tmpl[ENTRIES_PER_PAGE];
guiLabel_t src[ENTRIES_PER_PAGE];
guiLabel_t sw1[ENTRIES_PER_PAGE];
guiLabel_t sw2[ENTRIES_PER_PAGE];
guiKeyboard_t keyboard;
guiScrollable_t scrollable;
};",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,749,2019-02-22T16:51:43Z,2019-02-25T12:32:14Z,2019-02-25T12:34:14Z,MERGED,True,160,138,21,https://github.com/howard0su,LED Support,5,[],https://github.com/DeviationTX/deviation/pull/749,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/749,"Consolidate power support
add red and green led","Consolidate power support
add red and green led",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,750,2019-02-22T16:53:01Z,2019-02-23T04:26:47Z,2019-02-23T04:26:52Z,MERGED,True,383,277,47,https://github.com/PhracturedBlue,Abstract ADC definitions,3,[],https://github.com/DeviationTX/deviation/pull/750,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/750,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,751,2019-02-22T17:28:03Z,2019-02-22T17:49:19Z,2019-02-22T17:49:19Z,MERGED,True,5,5,1,https://github.com/PhracturedBlue,Fix haptic pin definition,1,[],https://github.com/DeviationTX/deviation/pull/751,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/751,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,752,2019-02-22T17:53:26Z,2019-02-24T02:33:00Z,2019-02-24T02:37:05Z,MERGED,True,11,1,1,https://github.com/howard0su,Exit render when row_cb doesn't create control,1,[],https://github.com/DeviationTX/deviation/pull/752,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/752,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,753,2019-02-22T18:06:03Z,2019-02-23T03:36:51Z,2019-02-23T03:36:51Z,MERGED,True,53,95,7,https://github.com/howard0su,remove reference to devo,2,[],https://github.com/DeviationTX/deviation/pull/753,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/753,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,754,2019-02-23T04:16:24Z,2019-02-23T05:29:54Z,2019-02-23T05:29:54Z,MERGED,True,262,695,35,https://github.com/PhracturedBlue,Combine all tx_buttons.tx into inputs/button_matrix,3,[],https://github.com/DeviationTX/deviation/pull/754,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/754,This consoldiates all the different button-matrix code into a single driver.  There are still some quirks with extra-buttons that get shared between tx_buttons.c and channels.c,This consoldiates all the different button-matrix code into a single driver.  There are still some quirks with extra-buttons that get shared between tx_buttons.c and channels.c,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,755,2019-02-23T17:20:53Z,2019-02-23T18:24:43Z,2019-02-23T18:24:50Z,MERGED,True,14,39,8,https://github.com/PhracturedBlue,Fix crash introduced by #750,3,[],https://github.com/DeviationTX/deviation/pull/755,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/755,This should fix the crashes in transmitters other than the devo12 due to the recent ADC updates.,This should fix the crashes in transmitters other than the devo12 due to the recent ADC updates.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,756,2019-02-23T21:29:15Z,2019-02-23T22:34:29Z,2019-02-23T23:05:05Z,MERGED,True,977,16,21,https://github.com/PhracturedBlue,Move sound and serial code into drivers subsystem.  Add usb-serial and DAC audio,6,[],https://github.com/DeviationTX/deviation/pull/756,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/756,"Moves the existing sound and serial code under /drivers
remove 'devo.h' usage from drivers
add usb_cdc driver for t12
add dac_audio driver for t12","Moves the existing sound and serial code under /drivers
remove 'devo.h' usage from drivers
add usb_cdc driver for t12
add dac_audio driver for t12",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,757,2019-02-23T21:30:48Z,2019-02-23T22:07:37Z,2019-02-23T22:07:41Z,MERGED,True,1,3,2,https://github.com/PhracturedBlue,Move haptic code to drivers section,1,[],https://github.com/DeviationTX/deviation/pull/757,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/757,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,758,2019-02-24T11:57:01Z,2019-02-24T12:35:41Z,2019-02-24T12:35:45Z,MERGED,True,73,27,6,https://github.com/PhracturedBlue,Move rtc code into its own driver,1,[],https://github.com/DeviationTX/deviation/pull/758,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/758,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,759,2019-02-24T12:10:29Z,2019-02-24T12:17:20Z,2019-02-24T12:17:24Z,MERGED,True,10,10,4,https://github.com/PhracturedBlue,Fix radiolink build,1,[],https://github.com/DeviationTX/deviation/pull/759,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/759,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,760,2019-02-24T12:20:34Z,2019-02-24T12:36:41Z,2019-02-24T12:36:44Z,MERGED,True,11,2,3,https://github.com/PhracturedBlue,Add switch for errhandler,1,[],https://github.com/DeviationTX/deviation/pull/760,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/760,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,761,2019-02-24T12:32:22Z,2019-02-24T12:42:03Z,2019-02-24T12:42:03Z,MERGED,True,10,3,4,https://github.com/PhracturedBlue,Minor issues found during t12 merge,1,[],https://github.com/DeviationTX/deviation/pull/761,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/761,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,762,2019-02-24T12:35:10Z,2019-02-24T12:48:12Z,2019-02-24T12:48:12Z,MERGED,True,25,2,2,https://github.com/PhracturedBlue,Partially enable usb-serial use,1,[],https://github.com/DeviationTX/deviation/pull/762,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/762,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,763,2019-02-24T13:00:10Z,2019-02-24T13:11:30Z,2019-02-24T13:11:30Z,MERGED,True,7,7,3,https://github.com/PhracturedBlue,HAS_STACKDUMP -> SUPPORT_STACKDUMP,1,[],https://github.com/DeviationTX/deviation/pull/763,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/763,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,764,2019-02-24T13:53:52Z,2019-02-28T16:36:20Z,2019-02-28T16:36:26Z,MERGED,True,1287,25503,76,https://github.com/howard0su,Switch to libopencm3 usb stack,31,[],https://github.com/DeviationTX/deviation/pull/764,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/764,Use libopencm3 as  the usb stack to implement a new MSC protocol.,Use libopencm3 as  the usb stack to implement a new MSC protocol.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,765,2019-02-25T00:56:42Z,2019-02-26T15:55:20Z,2019-02-26T15:55:26Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix warnings on osx build,1,[],https://github.com/DeviationTX/deviation/pull/765,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/765,"We can safely ignore the line start with ""Contents of"".","We can safely ignore the line start with ""Contents of"".",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,766,2019-02-25T09:01:47Z,2019-03-05T23:37:33Z,2019-03-05T23:37:33Z,CLOSED,False,222,0,6,https://github.com/howard0su,[WIP] CMake build scripts,2,[],https://github.com/DeviationTX/deviation/pull/766,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/766,not link yet. just a POC,not link yet. just a POC,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,767,2019-02-25T13:44:16Z,2019-02-25T15:29:08Z,2019-02-25T15:29:08Z,CLOSED,False,22,21,1,https://github.com/howard0su,fix Devo10 display driver ,3,[],https://github.com/DeviationTX/deviation/pull/767,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/767,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,768,2019-02-25T14:56:54Z,2019-02-26T01:18:46Z,2019-02-26T01:18:51Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix emu_devof12e-XMS build,1,[],https://github.com/DeviationTX/deviation/pull/768,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/768,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,769,2019-02-25T15:22:06Z,2019-02-25T16:16:33Z,2019-02-25T16:16:39Z,MERGED,True,6,11,2,https://github.com/PhracturedBlue,Fix FSMC for devo10,3,[],https://github.com/DeviationTX/deviation/pull/769,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/769,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,770,2019-02-26T01:18:27Z,2019-03-02T03:08:47Z,2019-03-02T03:08:47Z,MERGED,True,91,595,58,https://github.com/howard0su,Support LTO build,9,[],https://github.com/DeviationTX/deviation/pull/770,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/770,"For any non-modular build Tx, you can use the following command to build Tx with LTO enabled:
ENABLE_LTO=1 make -j4 XXXXXXX.
LTO is enabled for devo7e by default.","For any non-modular build Tx, you can use the following command to build Tx with LTO enabled:
ENABLE_LTO=1 make -j4 XXXXXXX.
LTO is enabled for devo7e by default.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,770,2019-02-26T01:18:27Z,2019-03-02T03:08:47Z,2019-03-02T03:08:47Z,MERGED,True,91,595,58,https://github.com/howard0su,Support LTO build,9,[],https://github.com/DeviationTX/deviation/pull/770,https://github.com/PhracturedBlue,2,https://github.com/DeviationTX/deviation/pull/770#issuecomment-468532624,"For any non-modular build Tx, you can use the following command to build Tx with LTO enabled:
ENABLE_LTO=1 make -j4 XXXXXXX.
LTO is enabled for devo7e by default.",what about libopencm3 lto?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,770,2019-02-26T01:18:27Z,2019-03-02T03:08:47Z,2019-03-02T03:08:47Z,MERGED,True,91,595,58,https://github.com/howard0su,Support LTO build,9,[],https://github.com/DeviationTX/deviation/pull/770,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/770#issuecomment-468533969,"For any non-modular build Tx, you can use the following command to build Tx with LTO enabled:
ENABLE_LTO=1 make -j4 XXXXXXX.
LTO is enabled for devo7e by default.","what about libopencm3 lto?

I would wait for libopencm3 to update to LTO.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,771,2019-02-26T04:57:01Z,,2019-03-11T03:16:41Z,OPEN,False,1093,635,37,https://github.com/PhracturedBlue,Unified t8sg,11,[],https://github.com/DeviationTX/deviation/pull/771,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/771,This will move the original t8sg target to t8sg_v1.  The new 't8sg' target will only work with the new bootloader.  When complete any Jumper tx with the new bootloader will be able to load the t8sg target and the firmware will figure out what model is in use and configure appropriately.,This will move the original t8sg target to t8sg_v1.  The new 't8sg' target will only work with the new bootloader.  When complete any Jumper tx with the new bootloader will be able to load the t8sg target and the firmware will figure out what model is in use and configure appropriately.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,771,2019-02-26T04:57:01Z,,2019-03-11T03:16:41Z,OPEN,False,1093,635,37,https://github.com/PhracturedBlue,Unified t8sg,11,[],https://github.com/DeviationTX/deviation/pull/771,https://github.com/Tygrys-1,2,https://github.com/DeviationTX/deviation/pull/771#issuecomment-468306874,This will move the original t8sg target to t8sg_v1.  The new 't8sg' target will only work with the new bootloader.  When complete any Jumper tx with the new bootloader will be able to load the t8sg target and the firmware will figure out what model is in use and configure appropriately.,The transmitter log file header should be changed from 7e to other value distinct for each version of T8SG as they have different number of switches and because of this different log file structure.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,771,2019-02-26T04:57:01Z,,2019-03-11T03:16:41Z,OPEN,False,1093,635,37,https://github.com/PhracturedBlue,Unified t8sg,11,[],https://github.com/DeviationTX/deviation/pull/771,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/771#issuecomment-468311433,This will move the original t8sg target to t8sg_v1.  The new 't8sg' target will only work with the new bootloader.  When complete any Jumper tx with the new bootloader will be able to load the t8sg target and the firmware will figure out what model is in use and configure appropriately.,I think you are talking about #452,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,772,2019-02-26T13:05:15Z,2019-02-26T13:31:30Z,2019-02-26T13:31:30Z,MERGED,True,2,3,1,https://github.com/howard0su,Fix I2C for f12e,1,[],https://github.com/DeviationTX/deviation/pull/772,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/772,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,773,2019-02-27T15:25:41Z,2019-02-27T15:53:00Z,2019-02-27T15:53:06Z,MERGED,True,13,1,1,https://github.com/PhracturedBlue,Interactive linter should now more closely match travis,1,[],https://github.com/DeviationTX/deviation/pull/773,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/773,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,774,2019-02-28T09:24:41Z,2019-03-02T14:41:30Z,2019-03-05T00:11:27Z,MERGED,True,24,13,7,https://github.com/goebish,Add inverted ppmout option,3,['Protocol'],https://github.com/DeviationTX/deviation/pull/774,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/774,"Add an option to reverse signal polarity to the PPM protocol.
Note that PPM out is broken in current master (at least on T8SG V2+), it outputs only 1 pulse per frame, maybe a DMA issue ? (fixed by #777 )
Tested with an older version.","Add an option to reverse signal polarity to the PPM protocol.
Note that PPM out is broken in current master (at least on T8SG V2+), it outputs only 1 pulse per frame, maybe a DMA issue ? (fixed by #777 )
Tested with an older version.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,775,2019-02-28T13:12:14Z,2019-03-02T14:44:05Z,2019-03-05T00:11:31Z,MERGED,True,265,0,3,https://github.com/goebish,Protocol E016H,14,['Protocol'],https://github.com/DeviationTX/deviation/pull/775,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/775,"Add protocol for Eachine E016H
Tested, working.
Protocol name: E016H
Channel mapping:
Channel 5: flip
Channel 6: headless
Channel 7: RTH
Channel 8: emergency stop
Documentation update incoming (I know I'm 2 or 3 protocols late already ...)","Add protocol for Eachine E016H
Tested, working.
Protocol name: E016H
Channel mapping:
Channel 5: flip
Channel 6: headless
Channel 7: RTH
Channel 8: emergency stop
Documentation update incoming (I know I'm 2 or 3 protocols late already ...)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,776,2019-03-01T02:01:58Z,2019-03-02T14:43:19Z,2019-03-05T00:11:33Z,MERGED,True,20,8,7,https://github.com/goebish,Fix rare nrf24l01 problem,8,[],https://github.com/DeviationTX/deviation/pull/776,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/776,"Fix rare nrf24l01 problem where CS goes HIGH before the last clock pulse has completed:

When this happens, the last byte is not registered by the nrf24l01 and is replaced by the previous one.","Fix rare nrf24l01 problem where CS goes HIGH before the last clock pulse has completed:

When this happens, the last byte is not registered by the nrf24l01 and is replaced by the previous one.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,776,2019-03-01T02:01:58Z,2019-03-02T14:43:19Z,2019-03-05T00:11:33Z,MERGED,True,20,8,7,https://github.com/goebish,Fix rare nrf24l01 problem,8,[],https://github.com/DeviationTX/deviation/pull/776,https://github.com/vladislavy,2,https://github.com/DeviationTX/deviation/pull/776#issuecomment-469206643,"Fix rare nrf24l01 problem where CS goes HIGH before the last clock pulse has completed:

When this happens, the last byte is not registered by the nrf24l01 and is replaced by the previous one.","Probably we need wait while Tx buffer is empty, next CS goes HIGH.
From void spi_send(uint32_t spi, uint16_t data):
/* Wait for transfer finished. */
while (!(SPI_SR(spi) & SPI_SR_TXE));",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,776,2019-03-01T02:01:58Z,2019-03-02T14:43:19Z,2019-03-05T00:11:33Z,MERGED,True,20,8,7,https://github.com/goebish,Fix rare nrf24l01 problem,8,[],https://github.com/DeviationTX/deviation/pull/776,https://github.com/goebish,3,https://github.com/DeviationTX/deviation/pull/776#issuecomment-469207449,"Fix rare nrf24l01 problem where CS goes HIGH before the last clock pulse has completed:

When this happens, the last byte is not registered by the nrf24l01 and is replaced by the previous one.","The root cause was identified and fixed, some recent changes made the SPI bus run @ 280kHz instead of 4.5MHz.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,777,2019-03-01T04:07:34Z,2019-03-02T00:43:58Z,2019-03-02T00:43:58Z,MERGED,True,3,3,2,https://github.com/PhracturedBlue,Fixes for PPM/PWM,1,[],https://github.com/DeviationTX/deviation/pull/777,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/777,This is a potential fix for ppm/pwm not working.  it has not yet been tested on a real tx yet,This is a potential fix for ppm/pwm not working.  it has not yet been tested on a real tx yet,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,779,2019-03-01T07:05:19Z,2019-03-02T01:28:42Z,2019-03-02T01:28:46Z,MERGED,True,9,9,2,https://github.com/howard0su,Remove PrevXferComplete from usbhid,2,[],https://github.com/DeviationTX/deviation/pull/779,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/779,Verified on devo7e,Verified on devo7e,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,780,2019-03-01T08:04:54Z,2019-03-02T11:50:23Z,2019-03-02T11:50:23Z,MERGED,True,2,1,1,https://github.com/vladislavy,"Fix protocol init when exit ""Scanner"" page with scanner=OFF",2,[],https://github.com/DeviationTX/deviation/pull/780,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/780,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,781,2019-03-01T08:29:59Z,2019-03-01T12:03:21Z,2019-03-01T17:29:46Z,MERGED,True,4,4,4,https://github.com/howard0su,Fix duplicated txid,1,[],https://github.com/DeviationTX/deviation/pull/781,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/781,Fix issue #452,Fix issue #452,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,781,2019-03-01T08:29:59Z,2019-03-01T12:03:21Z,2019-03-01T17:29:46Z,MERGED,True,4,4,4,https://github.com/howard0su,Fix duplicated txid,1,[],https://github.com/DeviationTX/deviation/pull/781,https://github.com/Tygrys-1,2,https://github.com/DeviationTX/deviation/pull/781#issuecomment-468682386,Fix issue #452,"I think we need to distingush V1 and V2 because they have different number of switches and this change the structure of the log file.  As I do not have T8SG V1 I cannot confirm differences.
Change to 0x18 for v1 and 0x28 for v2.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,782,2019-03-01T15:54:08Z,2019-03-02T07:54:17Z,2019-03-02T07:54:22Z,MERGED,True,18,13,3,https://github.com/howard0su,Change the order of USB initialize,3,[],https://github.com/DeviationTX/deviation/pull/782,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/782,Follow libopencm3 example on USB intialize,Follow libopencm3 example on USB intialize,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,783,2019-03-02T12:28:03Z,2019-03-04T04:24:09Z,2019-03-04T04:24:09Z,MERGED,True,272,0,3,https://github.com/vladislavy,"Add protocol for Eachine E016H, from goebish",1,[],https://github.com/DeviationTX/deviation/pull/783,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/783,"Channel mapping:
Channel 5: flip
Channel 6: headless
Channel 7: RTH
Channel 8: emergency stop","Channel mapping:
Channel 5: flip
Channel 6: headless
Channel 7: RTH
Channel 8: emergency stop",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,783,2019-03-02T12:28:03Z,2019-03-04T04:24:09Z,2019-03-04T04:24:09Z,MERGED,True,272,0,3,https://github.com/vladislavy,"Add protocol for Eachine E016H, from goebish",1,[],https://github.com/DeviationTX/deviation/pull/783,https://github.com/goebish,2,https://github.com/DeviationTX/deviation/pull/783#issuecomment-468916457,"Channel mapping:
Channel 5: flip
Channel 6: headless
Channel 7: RTH
Channel 8: emergency stop",This protocol requires this patch to work: #776,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,783,2019-03-02T12:28:03Z,2019-03-04T04:24:09Z,2019-03-04T04:24:09Z,MERGED,True,272,0,3,https://github.com/vladislavy,"Add protocol for Eachine E016H, from goebish",1,[],https://github.com/DeviationTX/deviation/pull/783,https://github.com/goebish,3,https://github.com/DeviationTX/deviation/pull/783#issuecomment-469074474,"Channel mapping:
Channel 5: flip
Channel 6: headless
Channel 7: RTH
Channel 8: emergency stop","The problem was recently introduced (and fixed), you can merge this protocol into 5.0 without any other changes actually.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,784,2019-03-02T23:50:03Z,2019-03-04T02:01:15Z,2019-03-04T12:45:23Z,MERGED,True,31,7,1,https://github.com/brianquad,Add Silverware's analog aux channel feature to Bayang protocol,3,['Protocol'],https://github.com/DeviationTX/deviation/pull/784,https://github.com/brianquad,1,https://github.com/DeviationTX/deviation/pull/784,"This change to the Bayang protocol adds an option to steal two presently unused (by the Silverware firmware, which targets several Bayang quads) in the protocol to send two more ""analog"" (non-binary) channels of data to the Rx. With corresponding changes on the Rx firmware, those new aux channels can be used to do more interesting things than the other binary aux channels. Some users have really liked PID tuning with the extra channels.
More information on the Silverware additions here:
https://www.rcgroups.com/forums/showthread.php?3121896-Analog-Aux-Channels-for-Silverware
The main NFE Silverware fork now has this feature available:
https://github.com/NotFastEnuf/NFE_Silverware
I am making a corresponding pull request to DIY Multiprotocol TX with the same additions to the Bayang protocol.","This change to the Bayang protocol adds an option to steal two presently unused (by the Silverware firmware, which targets several Bayang quads) in the protocol to send two more ""analog"" (non-binary) channels of data to the Rx. With corresponding changes on the Rx firmware, those new aux channels can be used to do more interesting things than the other binary aux channels. Some users have really liked PID tuning with the extra channels.
More information on the Silverware additions here:
https://www.rcgroups.com/forums/showthread.php?3121896-Analog-Aux-Channels-for-Silverware
The main NFE Silverware fork now has this feature available:
https://github.com/NotFastEnuf/NFE_Silverware
I am making a corresponding pull request to DIY Multiprotocol TX with the same additions to the Bayang protocol.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,784,2019-03-02T23:50:03Z,2019-03-04T02:01:15Z,2019-03-04T12:45:23Z,MERGED,True,31,7,1,https://github.com/brianquad,Add Silverware's analog aux channel feature to Bayang protocol,3,['Protocol'],https://github.com/DeviationTX/deviation/pull/784,https://github.com/goebish,2,https://github.com/DeviationTX/deviation/pull/784#issuecomment-469046178,"This change to the Bayang protocol adds an option to steal two presently unused (by the Silverware firmware, which targets several Bayang quads) in the protocol to send two more ""analog"" (non-binary) channels of data to the Rx. With corresponding changes on the Rx firmware, those new aux channels can be used to do more interesting things than the other binary aux channels. Some users have really liked PID tuning with the extra channels.
More information on the Silverware additions here:
https://www.rcgroups.com/forums/showthread.php?3121896-Analog-Aux-Channels-for-Silverware
The main NFE Silverware fork now has this feature available:
https://github.com/NotFastEnuf/NFE_Silverware
I am making a corresponding pull request to DIY Multiprotocol TX with the same additions to the Bayang protocol.","Do not merge for now, there's some issues with the Bayang protocol in current master, better not add stuffs until it's fixed.
https://www.deviationtx.com/forum/3-feedback-questions/8319-can-not-bind-with-the-bayang-protocol#73159",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,784,2019-03-02T23:50:03Z,2019-03-04T02:01:15Z,2019-03-04T12:45:23Z,MERGED,True,31,7,1,https://github.com/brianquad,Add Silverware's analog aux channel feature to Bayang protocol,3,['Protocol'],https://github.com/DeviationTX/deviation/pull/784,https://github.com/goebish,3,https://github.com/DeviationTX/deviation/pull/784#issuecomment-469074094,"This change to the Bayang protocol adds an option to steal two presently unused (by the Silverware firmware, which targets several Bayang quads) in the protocol to send two more ""analog"" (non-binary) channels of data to the Rx. With corresponding changes on the Rx firmware, those new aux channels can be used to do more interesting things than the other binary aux channels. Some users have really liked PID tuning with the extra channels.
More information on the Silverware additions here:
https://www.rcgroups.com/forums/showthread.php?3121896-Analog-Aux-Channels-for-Silverware
The main NFE Silverware fork now has this feature available:
https://github.com/NotFastEnuf/NFE_Silverware
I am making a corresponding pull request to DIY Multiprotocol TX with the same additions to the Bayang protocol.","Problem fixed, ready to merge after one more dev review.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,786,2019-03-03T11:54:26Z,,2019-04-02T13:48:45Z,OPEN,False,814,730,63,https://github.com/howard0su,[WIP] Refector Makefile,16,[],https://github.com/DeviationTX/deviation/pull/786,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/786,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,787,2019-03-03T22:09:16Z,2019-03-03T22:17:46Z,2019-03-03T22:17:51Z,MERGED,True,11,7,3,https://github.com/PhracturedBlue,Fix inconsistency in SPI baud-rate setting resulting in wrong spi speed,1,[],https://github.com/DeviationTX/deviation/pull/787,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/787,Thanks to Goebish for finding this doozy,Thanks to Goebish for finding this doozy,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,788,2019-03-03T22:40:06Z,2019-03-03T22:56:16Z,2019-03-05T00:11:37Z,MERGED,True,4,16,7,https://github.com/goebish,Revert nrf24 spi cs patch,2,[],https://github.com/DeviationTX/deviation/pull/788,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/788,"Revert nrf24 spi cs patch, root cause fixed in #787","Revert nrf24 spi cs patch, root cause fixed in #787",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,789,2019-03-04T02:01:19Z,2019-03-04T02:28:54Z,2019-03-04T02:28:54Z,MERGED,True,4,2,1,https://github.com/PhracturedBlue,Fix linter when there are no diffs vs master,1,[],https://github.com/DeviationTX/deviation/pull/789,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/789,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,790,2019-03-04T02:56:22Z,2019-03-04T04:47:58Z,2019-03-04T04:48:02Z,MERGED,True,3,0,1,https://github.com/howard0su,Make sure CRC is there when LTO is enabled,1,[],https://github.com/DeviationTX/deviation/pull/790,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/790,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,793,2019-03-04T03:30:41Z,2019-03-04T17:08:36Z,2019-03-04T17:08:36Z,MERGED,True,2,0,1,https://github.com/howard0su,Make empty string as the power for modules without RF,2,[],https://github.com/DeviationTX/deviation/pull/793,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/793,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,793,2019-03-04T03:30:41Z,2019-03-04T17:08:36Z,2019-03-04T17:08:36Z,MERGED,True,2,0,1,https://github.com/howard0su,Make empty string as the power for modules without RF,2,[],https://github.com/DeviationTX/deviation/pull/793,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/793#issuecomment-469106587,,This is reported by user on forum as well.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,794,2019-03-04T07:58:08Z,2019-03-05T23:24:35Z,2019-03-05T23:24:35Z,MERGED,True,88,91,21,https://github.com/howard0su,Cleanup _tr usage,13,[],https://github.com/DeviationTX/deviation/pull/794,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/794,"Make most _tr calls only happen inside pages with the following exceptions:

input.c
telemetry
which will be addressed separately.","Make most _tr calls only happen inside pages with the following exceptions:

input.c
telemetry
which will be addressed separately.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,794,2019-03-04T07:58:08Z,2019-03-05T23:24:35Z,2019-03-05T23:24:35Z,MERGED,True,88,91,21,https://github.com/howard0su,Cleanup _tr usage,13,[],https://github.com/DeviationTX/deviation/pull/794,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/794#issuecomment-469153518,"Make most _tr calls only happen inside pages with the following exceptions:

input.c
telemetry
which will be addressed separately.",prepare to enable dynamic loc strings,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,794,2019-03-04T07:58:08Z,2019-03-05T23:24:35Z,2019-03-05T23:24:35Z,MERGED,True,88,91,21,https://github.com/howard0su,Cleanup _tr usage,13,[],https://github.com/DeviationTX/deviation/pull/794,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/794#issuecomment-469526071,"Make most _tr calls only happen inside pages with the following exceptions:

input.c
telemetry
which will be addressed separately.",Enough for this PR. I will start another two to clean up input.c and telemetry.c. I bet I can save another 100 bytes.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,795,2019-03-04T13:40:13Z,2019-03-04T16:02:23Z,2019-03-04T16:02:23Z,MERGED,True,45,3,4,https://github.com/PhracturedBlue,Allow choosing primary UART interface for logging,1,[],https://github.com/DeviationTX/deviation/pull/795,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/795,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,796,2019-03-04T13:40:37Z,2019-03-05T05:33:44Z,2019-03-05T05:33:50Z,MERGED,True,1057,55,16,https://github.com/PhracturedBlue,Fix MMC access in Font code.  Add MMC drivers,5,[],https://github.com/DeviationTX/deviation/pull/796,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/796,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,797,2019-03-04T13:52:22Z,2019-03-04T16:01:12Z,2019-03-04T16:01:15Z,MERGED,True,11,2,3,https://github.com/PhracturedBlue,Support for inverted power switch,1,[],https://github.com/DeviationTX/deviation/pull/797,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/797,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,798,2019-03-04T13:52:38Z,2019-03-04T16:02:59Z,2019-03-04T16:03:03Z,MERGED,True,12,7,1,https://github.com/PhracturedBlue,Improve syscalls debugging,1,[],https://github.com/DeviationTX/deviation/pull/798,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/798,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,799,2019-03-04T16:19:04Z,2019-03-04T23:07:43Z,2019-03-04T23:07:47Z,MERGED,True,5,4,2,https://github.com/howard0su,fix build by give the right build options,1,[],https://github.com/DeviationTX/deviation/pull/799,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/799,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,799,2019-03-04T16:19:04Z,2019-03-04T23:07:43Z,2019-03-04T23:07:47Z,MERGED,True,5,4,2,https://github.com/howard0su,fix build by give the right build options,1,[],https://github.com/DeviationTX/deviation/pull/799,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/799#issuecomment-469314113,,please merge this as devo7e is broken.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,799,2019-03-04T16:19:04Z,2019-03-04T23:07:43Z,2019-03-04T23:07:47Z,MERGED,True,5,4,2,https://github.com/howard0su,fix build by give the right build options,1,[],https://github.com/DeviationTX/deviation/pull/799,https://github.com/PhracturedBlue,3,https://github.com/DeviationTX/deviation/pull/799#issuecomment-469315249,,What is wrong with using '+=' ?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,799,2019-03-04T16:19:04Z,2019-03-04T23:07:43Z,2019-03-04T23:07:47Z,MERGED,True,5,4,2,https://github.com/howard0su,fix build by give the right build options,1,[],https://github.com/DeviationTX/deviation/pull/799,https://github.com/howard0su,4,https://github.com/DeviationTX/deviation/pull/799#issuecomment-469315946,,Try to keep same as makefile.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,800,2019-03-05T02:46:40Z,2019-03-05T05:20:30Z,2019-03-05T05:20:35Z,MERGED,True,25,10,2,https://github.com/PhracturedBlue,Make ADC intialization more generic to handle STM32F2,1,[],https://github.com/DeviationTX/deviation/pull/800,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/800,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,801,2019-03-05T02:46:55Z,2019-03-05T04:16:25Z,2019-03-05T04:16:25Z,MERGED,True,4,1,1,https://github.com/PhracturedBlue,Enable LCD to init SPI when no SPI-Flash is present,1,[],https://github.com/DeviationTX/deviation/pull/801,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/801,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,802,2019-03-05T02:47:08Z,2019-03-05T04:14:45Z,2019-03-05T04:14:48Z,MERGED,True,38,28,2,https://github.com/PhracturedBlue,Move SPI intialization into F1 specific directory in preparation for …,2,[],https://github.com/DeviationTX/deviation/pull/802,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/802,…F2 merge,…F2 merge,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,803,2019-03-05T02:48:12Z,2019-03-05T04:27:53Z,2019-03-05T04:27:53Z,MERGED,True,173,5,4,https://github.com/PhracturedBlue,Add SSER Tx capability,1,[],https://github.com/DeviationTX/deviation/pull/803,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/803,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,804,2019-03-05T03:09:42Z,2019-03-05T04:14:08Z,2019-03-05T04:14:11Z,MERGED,True,3,3,2,https://github.com/PhracturedBlue,Timer runs at 2xAPB? not 1xAPB?,1,[],https://github.com/DeviationTX/deviation/pull/804,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/804,@hexfet This should fix the issue with SSER running at the wrong frequency,@hexfet This should fix the issue with SSER running at the wrong frequency,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,805,2019-03-05T03:37:10Z,2019-03-05T03:47:47Z,2019-03-05T03:48:00Z,MERGED,True,1,0,1,https://github.com/howard0su,Fix emu_devo12,1,[],https://github.com/DeviationTX/deviation/pull/805,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/805,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,806,2019-03-05T23:32:43Z,2019-03-06T01:12:37Z,2019-03-06T01:12:37Z,MERGED,True,1,1,1,https://github.com/howard0su,Fix emu build for radiolink,1,[],https://github.com/DeviationTX/deviation/pull/806,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/806,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,807,2019-03-06T13:01:02Z,2019-03-07T01:46:17Z,2019-03-07T01:46:21Z,MERGED,True,8,1,2,https://github.com/PhracturedBlue,Enable AFIO and ensure the CYRF6936 reset pin is configured,2,[],https://github.com/DeviationTX/deviation/pull/807,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/807,This should fix using Deviation with the new bootloader,This should fix using Deviation with the new bootloader,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,808,2019-03-07T01:44:21Z,2019-03-09T04:04:19Z,2019-03-09T04:04:24Z,MERGED,True,484,551,14,https://github.com/PhracturedBlue,Convert python scripts to python3,10,[],https://github.com/DeviationTX/deviation/pull/808,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/808,"I need to write several new scripts in python, and there is no point in writing them in python2.  But I don't want to require both python2 and python3 to build, so I'm starting by converting exsiting scripts to python3.","I need to write several new scripts in python, and there is no point in writing them in python2.  But I don't want to require both python2 and python3 to build, so I'm starting by converting exsiting scripts to python3.",True,{'THUMBS_UP': ['https://github.com/tracernz']}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,809,2019-03-07T11:03:26Z,2019-03-07T18:08:16Z,2019-03-07T18:08:16Z,MERGED,True,1,0,1,https://github.com/vladislavy,Hide a blank box char toggle icons for first main page draw,3,[],https://github.com/DeviationTX/deviation/pull/809,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/809,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,809,2019-03-07T11:03:26Z,2019-03-07T18:08:16Z,2019-03-07T18:08:16Z,MERGED,True,1,0,1,https://github.com/vladislavy,Hide a blank box char toggle icons for first main page draw,3,[],https://github.com/DeviationTX/deviation/pull/809,https://github.com/howard0su,2,https://github.com/DeviationTX/deviation/pull/809#issuecomment-470505597,,verified.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,811,2019-03-07T18:23:09Z,2019-03-13T09:57:49Z,2019-03-13T09:57:49Z,MERGED,True,1,0,1,https://github.com/vladislavy,Fix devof12e toggles,1,[],https://github.com/DeviationTX/deviation/pull/811,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/811,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,811,2019-03-07T18:23:09Z,2019-03-13T09:57:49Z,2019-03-13T09:57:49Z,MERGED,True,1,0,1,https://github.com/vladislavy,Fix devof12e toggles,1,[],https://github.com/DeviationTX/deviation/pull/811,https://github.com/vladislavy,2,https://github.com/DeviationTX/deviation/pull/811#issuecomment-470657663,,Probably will be better to use GUI_Redraw(&gui->elem[i].box),True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,812,2019-03-08T15:42:39Z,2019-03-11T11:16:54Z,2019-03-11T11:16:54Z,CLOSED,False,4,2,1,https://github.com/howard0su,New bar style for 128x64,1,[],https://github.com/DeviationTX/deviation/pull/812,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/812,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,812,2019-03-08T15:42:39Z,2019-03-11T11:16:54Z,2019-03-11T11:16:54Z,CLOSED,False,4,2,1,https://github.com/howard0su,New bar style for 128x64,1,[],https://github.com/DeviationTX/deviation/pull/812,https://github.com/PhracturedBlue,2,https://github.com/DeviationTX/deviation/pull/812#issuecomment-470979270,,"Can you verify this on the horizontal trims?  It deosnt' seem to work properly:

I expect the trims to be unaffected by this patch, right?  the vertical trims seem to owkr as I'd expect",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,812,2019-03-08T15:42:39Z,2019-03-11T11:16:54Z,2019-03-11T11:16:54Z,CLOSED,False,4,2,1,https://github.com/howard0su,New bar style for 128x64,1,[],https://github.com/DeviationTX/deviation/pull/812,https://github.com/howard0su,3,https://github.com/DeviationTX/deviation/pull/812#issuecomment-471499477,,let me fix this before i reopen the PR,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,813,2019-03-09T00:38:41Z,2019-04-02T12:31:16Z,2019-04-02T15:09:56Z,MERGED,True,359,162,38,https://github.com/TheRealMoeder,Improve scanner code and move RF related stuff to protocol,28,[],https://github.com/DeviationTX/deviation/pull/813,https://github.com/TheRealMoeder,1,https://github.com/DeviationTX/deviation/pull/813,"Improvements:

move RF control to protocol
improve scan time
add optional 30dB attenuator
make averaging adjustable between 1-8192
use exponential smoothing on averaging
add peak hold feature in averaging mode (currently only on monochrome displays)
support modular build","Improvements:

move RF control to protocol
improve scan time
add optional 30dB attenuator
make averaging adjustable between 1-8192
use exponential smoothing on averaging
add peak hold feature in averaging mode (currently only on monochrome displays)
support modular build",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,813,2019-03-09T00:38:41Z,2019-04-02T12:31:16Z,2019-04-02T15:09:56Z,MERGED,True,359,162,38,https://github.com/TheRealMoeder,Improve scanner code and move RF related stuff to protocol,28,[],https://github.com/DeviationTX/deviation/pull/813,https://github.com/vladislavy,2,https://github.com/DeviationTX/deviation/pull/813#issuecomment-471429796,"Improvements:

move RF control to protocol
improve scan time
add optional 30dB attenuator
make averaging adjustable between 1-8192
use exponential smoothing on averaging
add peak hold feature in averaging mode (currently only on monochrome displays)
support modular build","Previously ""Average"" mode was intended to show permanent signals only and filter out any burst transmissions. I dont's see sense to average a burst transmissions.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,813,2019-03-09T00:38:41Z,2019-04-02T12:31:16Z,2019-04-02T15:09:56Z,MERGED,True,359,162,38,https://github.com/TheRealMoeder,Improve scanner code and move RF related stuff to protocol,28,[],https://github.com/DeviationTX/deviation/pull/813,https://github.com/TheRealMoeder,3,https://github.com/DeviationTX/deviation/pull/813#issuecomment-471481185,"Improvements:

move RF control to protocol
improve scan time
add optional 30dB attenuator
make averaging adjustable between 1-8192
use exponential smoothing on averaging
add peak hold feature in averaging mode (currently only on monochrome displays)
support modular build","It all depends on the duty cycle of transmission compared to averaging time. Whether we do simple arithmetic average or exponentially smoothing measurements makes not too much difference except for how it responds to extreme measurements. By increasing averaging we can now see only signals with high duty cycle on a given frequency. Old code did averaging of 5 measurements with 5 samples in intervals of 300 us already, now we can increase that, which is pretty much the only difference to old code (except shorter sampling intervals). Please correct me if I am wrong.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,813,2019-03-09T00:38:41Z,2019-04-02T12:31:16Z,2019-04-02T15:09:56Z,MERGED,True,359,162,38,https://github.com/TheRealMoeder,Improve scanner code and move RF related stuff to protocol,28,[],https://github.com/DeviationTX/deviation/pull/813,https://github.com/TheRealMoeder,4,https://github.com/DeviationTX/deviation/pull/813#issuecomment-472205417,"Improvements:

move RF control to protocol
improve scan time
add optional 30dB attenuator
make averaging adjustable between 1-8192
use exponential smoothing on averaging
add peak hold feature in averaging mode (currently only on monochrome displays)
support modular build","Enabling scanner support for devo7e costs 670 bytes of ROM and 250 bytes of RAM.
I left it disabled for now, unless we agree it is wanted in nightlies.
Can probably close PR #568",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,813,2019-03-09T00:38:41Z,2019-04-02T12:31:16Z,2019-04-02T15:09:56Z,MERGED,True,359,162,38,https://github.com/TheRealMoeder,Improve scanner code and move RF related stuff to protocol,28,[],https://github.com/DeviationTX/deviation/pull/813,https://github.com/vladislavy,5,https://github.com/DeviationTX/deviation/pull/813#issuecomment-473159880,"Improvements:

move RF control to protocol
improve scan time
add optional 30dB attenuator
make averaging adjustable between 1-8192
use exponential smoothing on averaging
add peak hold feature in averaging mode (currently only on monochrome displays)
support modular build","I'm not sure about probability of detection a burst transmissions, now we use about 300usec detection for single channel, next detection will be over 60msec. So, we have detection probability about 1/100.
I think we need at least 25msec on single channel for reliable burst transmission detection. Or, we need to use very fast channels scanning, but it's impossible for CYRF6936.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,813,2019-03-09T00:38:41Z,2019-04-02T12:31:16Z,2019-04-02T15:09:56Z,MERGED,True,359,162,38,https://github.com/TheRealMoeder,Improve scanner code and move RF related stuff to protocol,28,[],https://github.com/DeviationTX/deviation/pull/813,https://github.com/TheRealMoeder,6,https://github.com/DeviationTX/deviation/pull/813#issuecomment-473174458,"Improvements:

move RF control to protocol
improve scan time
add optional 30dB attenuator
make averaging adjustable between 1-8192
use exponential smoothing on averaging
add peak hold feature in averaging mode (currently only on monochrome displays)
support modular build",I thought you didn't want burst transmissions to be seen. What do you to think of changing the behavior to always make averaging (with variable iterations per channel) but also adding an optional peak hold? Or instead offering peak with the same iteration parameter as avg? So we can select from peak 1 to peak n and avg 1 to avg n?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,813,2019-03-09T00:38:41Z,2019-04-02T12:31:16Z,2019-04-02T15:09:56Z,MERGED,True,359,162,38,https://github.com/TheRealMoeder,Improve scanner code and move RF related stuff to protocol,28,[],https://github.com/DeviationTX/deviation/pull/813,https://github.com/vladislavy,7,https://github.com/DeviationTX/deviation/pull/813#issuecomment-473188103,"Improvements:

move RF control to protocol
improve scan time
add optional 30dB attenuator
make averaging adjustable between 1-8192
use exponential smoothing on averaging
add peak hold feature in averaging mode (currently only on monochrome displays)
support modular build","I think about packet transmission as a burst transmission, with duration about 1msec.
Also, I don't see any ""Scanner.rssi"" reset to 0 for Peak mode. How it will work?
And, I think will be better move ""Scanner.rssi"" reset to the end of screen refresh (// draw rssi values).
memset(Scanner.rssi, 0, sizeof(Scanner.rssi));  // clear old rssi values",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,813,2019-03-09T00:38:41Z,2019-04-02T12:31:16Z,2019-04-02T15:09:56Z,MERGED,True,359,162,38,https://github.com/TheRealMoeder,Improve scanner code and move RF related stuff to protocol,28,[],https://github.com/DeviationTX/deviation/pull/813,https://github.com/TheRealMoeder,8,https://github.com/DeviationTX/deviation/pull/813#issuecomment-473196160,"Improvements:

move RF control to protocol
improve scan time
add optional 30dB attenuator
make averaging adjustable between 1-8192
use exponential smoothing on averaging
add peak hold feature in averaging mode (currently only on monochrome displays)
support modular build","Thank you for your input. I actually removed scanner.rssi[c] = 0 for averaging in my local, as it causes some channels to flicker. I fear if we reset scanner.rssi for peak mode on every page event we will also get some ugly flicker, because scanning and drawing are not synchronized.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,813,2019-03-09T00:38:41Z,2019-04-02T12:31:16Z,2019-04-02T15:09:56Z,MERGED,True,359,162,38,https://github.com/TheRealMoeder,Improve scanner code and move RF related stuff to protocol,28,[],https://github.com/DeviationTX/deviation/pull/813,https://github.com/TheRealMoeder,9,https://github.com/DeviationTX/deviation/pull/813#issuecomment-475914064,"Improvements:

move RF control to protocol
improve scan time
add optional 30dB attenuator
make averaging adjustable between 1-8192
use exponential smoothing on averaging
add peak hold feature in averaging mode (currently only on monochrome displays)
support modular build","@vladislavy I rewrote peak and averaging modes including additional peak hold feature. I think it is a lot more usable now, also in revealing burst transmissions.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,813,2019-03-09T00:38:41Z,2019-04-02T12:31:16Z,2019-04-02T15:09:56Z,MERGED,True,359,162,38,https://github.com/TheRealMoeder,Improve scanner code and move RF related stuff to protocol,28,[],https://github.com/DeviationTX/deviation/pull/813,https://github.com/TheRealMoeder,10,https://github.com/DeviationTX/deviation/pull/813#issuecomment-478969202,"Improvements:

move RF control to protocol
improve scan time
add optional 30dB attenuator
make averaging adjustable between 1-8192
use exponential smoothing on averaging
add peak hold feature in averaging mode (currently only on monochrome displays)
support modular build",Channels are 2400 - 2498 MHz in 1 MHz spacing for the cyrf6936. Every pixel column on monochrome screen represents one channel ( one bargraph per channel for color screens).,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,814,2019-03-09T17:06:03Z,2019-03-11T03:16:10Z,2019-03-11T03:16:13Z,MERGED,True,218,130,3,https://github.com/PhracturedBlue,Convert check_string_size to python,2,[],https://github.com/DeviationTX/deviation/pull/814,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/814,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,815,2019-03-09T17:06:21Z,2019-03-11T03:15:46Z,2019-03-11T03:15:50Z,MERGED,True,73,61,1,https://github.com/PhracturedBlue,Improve extract_strings performance,1,[],https://github.com/DeviationTX/deviation/pull/815,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/815,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,816,2019-03-09T17:45:33Z,2019-03-11T03:15:25Z,2019-03-11T03:15:25Z,MERGED,True,12,12,1,https://github.com/PhracturedBlue,Force buildgs to use python2 until the script is converted to python3,1,[],https://github.com/DeviationTX/deviation/pull/816,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/816,"If using a python3 venv, buildfs.py will try to run in python3 and fail.
Script needs to be updated to python3 but that will take more time.","If using a python3 venv, buildfs.py will try to run in python3 and fail.
Script needs to be updated to python3 but that will take more time.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,817,2019-03-10T21:56:23Z,2019-03-19T14:16:31Z,2019-03-19T14:16:31Z,MERGED,True,3,4,1,https://github.com/goebish,[Bugs3Mini] Fix flips,1,['Protocol'],https://github.com/DeviationTX/deviation/pull/817,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/817,Fix flip channel,Fix flip channel,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,818,2019-03-12T03:57:43Z,2019-03-12T04:56:05Z,2019-03-12T04:56:09Z,MERGED,True,7,6,1,https://github.com/PhracturedBlue,Fixes for archive_build_size.py,6,[],https://github.com/DeviationTX/deviation/pull/818,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/818,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,819,2019-03-12T03:59:45Z,2019-03-23T15:22:16Z,2019-03-23T15:22:20Z,MERGED,True,213,349,37,https://github.com/PhracturedBlue,[WIP]Consolidate switch code 1/4,3,[],https://github.com/DeviationTX/deviation/pull/819,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/819,"This will be a series of patches to remove channels.c.  It is being broken down into pieces to make bisection easier in the case of regressions.
Part 1 moves the raw analog channel values into analog.c","This will be a series of patches to remove channels.c.  It is being broken down into pieces to make bisection easier in the case of regressions.
Part 1 moves the raw analog channel values into analog.c",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,820,2019-03-12T04:01:37Z,2019-03-23T15:36:26Z,2019-03-23T15:36:30Z,MERGED,True,209,679,37,https://github.com/PhracturedBlue,[WIP]Consolidate switch code 2/4,5,[],https://github.com/DeviationTX/deviation/pull/820,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/820,"This will be a series of patches to remove channels.c. It is being broken down into pieces to make bisection easier in the case of regressions.
Part 2 removes the hardcodes for inverting analog channels","This will be a series of patches to remove channels.c. It is being broken down into pieces to make bisection easier in the case of regressions.
Part 2 removes the hardcodes for inverting analog channels",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,821,2019-03-13T14:34:53Z,2019-03-13T16:18:11Z,2019-03-13T16:18:11Z,MERGED,True,1,1,1,https://github.com/TheRealMoeder,fix Makefile.inc for emu_devo12,1,[],https://github.com/DeviationTX/deviation/pull/821,https://github.com/TheRealMoeder,1,https://github.com/DeviationTX/deviation/pull/821,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,822,2019-03-14T01:06:39Z,2019-03-14T04:05:55Z,2019-03-14T04:05:55Z,MERGED,True,13,12,3,https://github.com/PhracturedBlue,Attempt to fix extract_strings BOM handler,4,[],https://github.com/DeviationTX/deviation/pull/822,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/822,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,823,2019-03-15T03:20:15Z,2019-03-15T04:09:36Z,2019-03-15T04:09:36Z,MERGED,True,1,1,1,https://github.com/PhracturedBlue,Force extract_strings to run in english,1,[],https://github.com/DeviationTX/deviation/pull/823,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/823,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,824,2019-03-17T01:58:57Z,2019-03-23T15:55:11Z,2019-03-23T15:55:16Z,MERGED,True,577,2196,51,https://github.com/PhracturedBlue,[WIP] Consolidate switch code 3/4,1,[],https://github.com/DeviationTX/deviation/pull/824,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/824,"This will be a series of patches to remove channels.c. It is being broken down into pieces to make bisection easier in the case of regressions.
Part 3 consolidates the switch handling and removes channels.c from all tranmitters
Part 4 will address the emulator","This will be a series of patches to remove channels.c. It is being broken down into pieces to make bisection easier in the case of regressions.
Part 3 consolidates the switch handling and removes channels.c from all tranmitters
Part 4 will address the emulator",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,825,2019-03-17T14:44:13Z,2019-03-17T15:29:06Z,2019-03-17T15:29:06Z,MERGED,True,30,29,16,https://github.com/PhracturedBlue,Consolidate emu button keybindings,1,[],https://github.com/DeviationTX/deviation/pull/825,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/825,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,826,2019-03-17T15:28:21Z,2019-03-23T16:11:40Z,2019-03-23T16:11:44Z,MERGED,True,118,1441,18,https://github.com/PhracturedBlue,[WIP] Consolidate swtch code 4/4,19,[],https://github.com/DeviationTX/deviation/pull/826,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/826,"This will be a series of patches to remove channels.c. It is being broken down into pieces to make bisection easier in the case of regressions.
Part 4 addresses the emulator","This will be a series of patches to remove channels.c. It is being broken down into pieces to make bisection easier in the case of regressions.
Part 4 addresses the emulator",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,827,2019-03-19T14:05:10Z,2019-03-31T01:04:59Z,2019-03-31T01:05:10Z,MERGED,True,18,17,2,https://github.com/hexfet,Add CRC check for s.port telemetry,2,[],https://github.com/DeviationTX/deviation/pull/827,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/827,Fixes issue with interpreting corrupted telemetry packets as valid data.,Fixes issue with interpreting corrupted telemetry packets as valid data.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,828,2019-03-19T14:12:26Z,2019-03-22T14:45:34Z,2019-04-07T01:20:18Z,MERGED,True,163,0,3,https://github.com/hexfet,Add support for SUMD protocol,2,['Protocol'],https://github.com/DeviationTX/deviation/pull/828,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/828,Serial port protocol implementing this specification.  Tested by user with Qlrs radio module.,Serial port protocol implementing this specification.  Tested by user with Qlrs radio module.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,828,2019-03-19T14:12:26Z,2019-03-22T14:45:34Z,2019-04-07T01:20:18Z,MERGED,True,163,0,3,https://github.com/hexfet,Add support for SUMD protocol,2,['Protocol'],https://github.com/DeviationTX/deviation/pull/828,https://github.com/qubic,2,https://github.com/DeviationTX/deviation/pull/828#issuecomment-480524847,Serial port protocol implementing this specification.  Tested by user with Qlrs radio module.,"Serial port protocol implementing this specification. Tested by user with Qlrs radio module.

You mean qczek long range system, am i right?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,828,2019-03-19T14:12:26Z,2019-03-22T14:45:34Z,2019-04-07T01:20:18Z,MERGED,True,163,0,3,https://github.com/hexfet,Add support for SUMD protocol,2,['Protocol'],https://github.com/DeviationTX/deviation/pull/828,https://github.com/hexfet,3,https://github.com/DeviationTX/deviation/pull/828#issuecomment-480550531,Serial port protocol implementing this specification.  Tested by user with Qlrs radio module.,"Yes, that's correct.  Relevant forum posts start here.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,830,2019-03-21T00:00:44Z,2019-04-01T21:10:06Z,2019-04-01T21:10:07Z,CLOSED,False,2366,2328,35,https://github.com/hexfet,[WIP] Support configuration of TBS Crossfire devices,29,[],https://github.com/DeviationTX/deviation/pull/830,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/830,"This PR is for review and not intended for merging.  The three commits can be separate PRs.  Commit da99 improves half-duplex serial.  Commit a116 adds the ability for a protocol to have a custom configuration page. Commit 4904 implements the CRSF configuration pages. The last includes some data files for emulator builds that would not be in the final PR. The emulator build shows TX and RX devices and allows navigating through the parameters, but commands are not emulated.
The CRSF configuration system works by message exchange between the transmitter (deviation) and the TBS devices.  This implementation has been tested with the full-size Crossfire transmitter and Nano RX receiver.  Each TBS component supplies parameters defining its configuration options and menu structure.  See the protocol/crsf_params_tx._c and ..._rx._c emulator data files for examples.
The CRSF configuration page is started by clicking on the protocol name.  One step of the page init function is to send a TBS message to discover available devices.  The device names are then shown in a scrollable (currently limited to four entries maximum). The device info response includes the number of parameters associated with the device.  Clicking on a device name starts the crsfdevice page, which starts a sequence of messages to retrieve all the device parameters.  These are displayed according to the menu structure defined in the parameter information by TBS.  When a setting is changed a ""set parameter"" message is sent to the TBS device, which responds with a parameter info message that includes any changes made.  Parameters of type COMMAND open a dialog to show the command status.  Some commands require an Ok/Cancel response from the user before proceeding (but whether a command needs this check isn't known until the command is started...).
The TBS menu information takes considerable RAM space (e.g. 2010 bytes for Nano RX).  This implementation does not attempt any compression of the menu info as that will add considerable messiness. A new target definition HAS_CRSF_CONFIG controls whether the code is included in a build. I suggest (eventually) merging this feature but with HAS_CRSF_CONFIG false for all transmitters.  A future custom build system will then allow users to include it themselves. This commit has CRSF configuration enabled for Devo10, t8sg_v2, and t8sg_v2_plus.
Still a couple rough edges.  The TBS devices sometimes hide or un-hide menu items when other settings are changed.  The number of rows in the current scrollable are not updated to reflect these changes.  Some parameter names are too long to be fully displayed on the same line as the parameter value.
Video with navigation through some of the menus is here.
Appreciate all thoughts and comments.  Is there a better location for crsf.h? (and better name?)
Following is my current to-do list for CRSF configuration feature.

Add configuration pages for color displays (some page functions may move to the common files)
170d950
Support changing number and string parameters (none are used for TX and Nano RX).  b863acf
Adjust parameter value horizontal size based on max number of characters needed. Consider using two lines if necessary. d655782
Currently dialogs are created in the parameter receive serial rx ISR because TBS doesn't indicate what type of dialog is needed until after the request is started. If this is not acceptable try setting a flag when dialog needed and create it in the page event function. cb4773c
Update GUI as needed if menu items become hidden or un-hidden. 4d333bb, efe443e
Show indicator during initial retrieval of parameters from device. 5253735","This PR is for review and not intended for merging.  The three commits can be separate PRs.  Commit da99 improves half-duplex serial.  Commit a116 adds the ability for a protocol to have a custom configuration page. Commit 4904 implements the CRSF configuration pages. The last includes some data files for emulator builds that would not be in the final PR. The emulator build shows TX and RX devices and allows navigating through the parameters, but commands are not emulated.
The CRSF configuration system works by message exchange between the transmitter (deviation) and the TBS devices.  This implementation has been tested with the full-size Crossfire transmitter and Nano RX receiver.  Each TBS component supplies parameters defining its configuration options and menu structure.  See the protocol/crsf_params_tx._c and ..._rx._c emulator data files for examples.
The CRSF configuration page is started by clicking on the protocol name.  One step of the page init function is to send a TBS message to discover available devices.  The device names are then shown in a scrollable (currently limited to four entries maximum). The device info response includes the number of parameters associated with the device.  Clicking on a device name starts the crsfdevice page, which starts a sequence of messages to retrieve all the device parameters.  These are displayed according to the menu structure defined in the parameter information by TBS.  When a setting is changed a ""set parameter"" message is sent to the TBS device, which responds with a parameter info message that includes any changes made.  Parameters of type COMMAND open a dialog to show the command status.  Some commands require an Ok/Cancel response from the user before proceeding (but whether a command needs this check isn't known until the command is started...).
The TBS menu information takes considerable RAM space (e.g. 2010 bytes for Nano RX).  This implementation does not attempt any compression of the menu info as that will add considerable messiness. A new target definition HAS_CRSF_CONFIG controls whether the code is included in a build. I suggest (eventually) merging this feature but with HAS_CRSF_CONFIG false for all transmitters.  A future custom build system will then allow users to include it themselves. This commit has CRSF configuration enabled for Devo10, t8sg_v2, and t8sg_v2_plus.
Still a couple rough edges.  The TBS devices sometimes hide or un-hide menu items when other settings are changed.  The number of rows in the current scrollable are not updated to reflect these changes.  Some parameter names are too long to be fully displayed on the same line as the parameter value.
Video with navigation through some of the menus is here.
Appreciate all thoughts and comments.  Is there a better location for crsf.h? (and better name?)
Following is my current to-do list for CRSF configuration feature.

Add configuration pages for color displays (some page functions may move to the common files)
170d950
Support changing number and string parameters (none are used for TX and Nano RX).  b863acf
Adjust parameter value horizontal size based on max number of characters needed. Consider using two lines if necessary. d655782
Currently dialogs are created in the parameter receive serial rx ISR because TBS doesn't indicate what type of dialog is needed until after the request is started. If this is not acceptable try setting a flag when dialog needed and create it in the page event function. cb4773c
Update GUI as needed if menu items become hidden or un-hidden. 4d333bb, efe443e
Show indicator during initial retrieval of parameters from device. 5253735",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,830,2019-03-21T00:00:44Z,2019-04-01T21:10:06Z,2019-04-01T21:10:07Z,CLOSED,False,2366,2328,35,https://github.com/hexfet,[WIP] Support configuration of TBS Crossfire devices,29,[],https://github.com/DeviationTX/deviation/pull/830,https://github.com/vladislavy,2,https://github.com/DeviationTX/deviation/pull/830#issuecomment-475119143,"This PR is for review and not intended for merging.  The three commits can be separate PRs.  Commit da99 improves half-duplex serial.  Commit a116 adds the ability for a protocol to have a custom configuration page. Commit 4904 implements the CRSF configuration pages. The last includes some data files for emulator builds that would not be in the final PR. The emulator build shows TX and RX devices and allows navigating through the parameters, but commands are not emulated.
The CRSF configuration system works by message exchange between the transmitter (deviation) and the TBS devices.  This implementation has been tested with the full-size Crossfire transmitter and Nano RX receiver.  Each TBS component supplies parameters defining its configuration options and menu structure.  See the protocol/crsf_params_tx._c and ..._rx._c emulator data files for examples.
The CRSF configuration page is started by clicking on the protocol name.  One step of the page init function is to send a TBS message to discover available devices.  The device names are then shown in a scrollable (currently limited to four entries maximum). The device info response includes the number of parameters associated with the device.  Clicking on a device name starts the crsfdevice page, which starts a sequence of messages to retrieve all the device parameters.  These are displayed according to the menu structure defined in the parameter information by TBS.  When a setting is changed a ""set parameter"" message is sent to the TBS device, which responds with a parameter info message that includes any changes made.  Parameters of type COMMAND open a dialog to show the command status.  Some commands require an Ok/Cancel response from the user before proceeding (but whether a command needs this check isn't known until the command is started...).
The TBS menu information takes considerable RAM space (e.g. 2010 bytes for Nano RX).  This implementation does not attempt any compression of the menu info as that will add considerable messiness. A new target definition HAS_CRSF_CONFIG controls whether the code is included in a build. I suggest (eventually) merging this feature but with HAS_CRSF_CONFIG false for all transmitters.  A future custom build system will then allow users to include it themselves. This commit has CRSF configuration enabled for Devo10, t8sg_v2, and t8sg_v2_plus.
Still a couple rough edges.  The TBS devices sometimes hide or un-hide menu items when other settings are changed.  The number of rows in the current scrollable are not updated to reflect these changes.  Some parameter names are too long to be fully displayed on the same line as the parameter value.
Video with navigation through some of the menus is here.
Appreciate all thoughts and comments.  Is there a better location for crsf.h? (and better name?)
Following is my current to-do list for CRSF configuration feature.

Add configuration pages for color displays (some page functions may move to the common files)
170d950
Support changing number and string parameters (none are used for TX and Nano RX).  b863acf
Adjust parameter value horizontal size based on max number of characters needed. Consider using two lines if necessary. d655782
Currently dialogs are created in the parameter receive serial rx ISR because TBS doesn't indicate what type of dialog is needed until after the request is started. If this is not acceptable try setting a flag when dialog needed and create it in the page event function. cb4773c
Update GUI as needed if menu items become hidden or un-hidden. 4d333bb, efe443e
Show indicator during initial retrieval of parameters from device. 5253735","t8sg_v2 ""HAS_BUTTON_POWER_ON"" is not used anymore. Also, it can be found at opentx\t12\hardware.h.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,830,2019-03-21T00:00:44Z,2019-04-01T21:10:06Z,2019-04-01T21:10:07Z,CLOSED,False,2366,2328,35,https://github.com/hexfet,[WIP] Support configuration of TBS Crossfire devices,29,[],https://github.com/DeviationTX/deviation/pull/830,https://github.com/TheRealMoeder,3,https://github.com/DeviationTX/deviation/pull/830#issuecomment-475122605,"This PR is for review and not intended for merging.  The three commits can be separate PRs.  Commit da99 improves half-duplex serial.  Commit a116 adds the ability for a protocol to have a custom configuration page. Commit 4904 implements the CRSF configuration pages. The last includes some data files for emulator builds that would not be in the final PR. The emulator build shows TX and RX devices and allows navigating through the parameters, but commands are not emulated.
The CRSF configuration system works by message exchange between the transmitter (deviation) and the TBS devices.  This implementation has been tested with the full-size Crossfire transmitter and Nano RX receiver.  Each TBS component supplies parameters defining its configuration options and menu structure.  See the protocol/crsf_params_tx._c and ..._rx._c emulator data files for examples.
The CRSF configuration page is started by clicking on the protocol name.  One step of the page init function is to send a TBS message to discover available devices.  The device names are then shown in a scrollable (currently limited to four entries maximum). The device info response includes the number of parameters associated with the device.  Clicking on a device name starts the crsfdevice page, which starts a sequence of messages to retrieve all the device parameters.  These are displayed according to the menu structure defined in the parameter information by TBS.  When a setting is changed a ""set parameter"" message is sent to the TBS device, which responds with a parameter info message that includes any changes made.  Parameters of type COMMAND open a dialog to show the command status.  Some commands require an Ok/Cancel response from the user before proceeding (but whether a command needs this check isn't known until the command is started...).
The TBS menu information takes considerable RAM space (e.g. 2010 bytes for Nano RX).  This implementation does not attempt any compression of the menu info as that will add considerable messiness. A new target definition HAS_CRSF_CONFIG controls whether the code is included in a build. I suggest (eventually) merging this feature but with HAS_CRSF_CONFIG false for all transmitters.  A future custom build system will then allow users to include it themselves. This commit has CRSF configuration enabled for Devo10, t8sg_v2, and t8sg_v2_plus.
Still a couple rough edges.  The TBS devices sometimes hide or un-hide menu items when other settings are changed.  The number of rows in the current scrollable are not updated to reflect these changes.  Some parameter names are too long to be fully displayed on the same line as the parameter value.
Video with navigation through some of the menus is here.
Appreciate all thoughts and comments.  Is there a better location for crsf.h? (and better name?)
Following is my current to-do list for CRSF configuration feature.

Add configuration pages for color displays (some page functions may move to the common files)
170d950
Support changing number and string parameters (none are used for TX and Nano RX).  b863acf
Adjust parameter value horizontal size based on max number of characters needed. Consider using two lines if necessary. d655782
Currently dialogs are created in the parameter receive serial rx ISR because TBS doesn't indicate what type of dialog is needed until after the request is started. If this is not acceptable try setting a flag when dialog needed and create it in the page event function. cb4773c
Update GUI as needed if menu items become hidden or un-hidden. 4d333bb, efe443e
Show indicator during initial retrieval of parameters from device. 5253735","also, HAS_CRSF_CONFIG should be named SUPPORT_CRSF_CONFIG",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,830,2019-03-21T00:00:44Z,2019-04-01T21:10:06Z,2019-04-01T21:10:07Z,CLOSED,False,2366,2328,35,https://github.com/hexfet,[WIP] Support configuration of TBS Crossfire devices,29,[],https://github.com/DeviationTX/deviation/pull/830,https://github.com/hexfet,4,https://github.com/DeviationTX/deviation/pull/830#issuecomment-475264166,"This PR is for review and not intended for merging.  The three commits can be separate PRs.  Commit da99 improves half-duplex serial.  Commit a116 adds the ability for a protocol to have a custom configuration page. Commit 4904 implements the CRSF configuration pages. The last includes some data files for emulator builds that would not be in the final PR. The emulator build shows TX and RX devices and allows navigating through the parameters, but commands are not emulated.
The CRSF configuration system works by message exchange between the transmitter (deviation) and the TBS devices.  This implementation has been tested with the full-size Crossfire transmitter and Nano RX receiver.  Each TBS component supplies parameters defining its configuration options and menu structure.  See the protocol/crsf_params_tx._c and ..._rx._c emulator data files for examples.
The CRSF configuration page is started by clicking on the protocol name.  One step of the page init function is to send a TBS message to discover available devices.  The device names are then shown in a scrollable (currently limited to four entries maximum). The device info response includes the number of parameters associated with the device.  Clicking on a device name starts the crsfdevice page, which starts a sequence of messages to retrieve all the device parameters.  These are displayed according to the menu structure defined in the parameter information by TBS.  When a setting is changed a ""set parameter"" message is sent to the TBS device, which responds with a parameter info message that includes any changes made.  Parameters of type COMMAND open a dialog to show the command status.  Some commands require an Ok/Cancel response from the user before proceeding (but whether a command needs this check isn't known until the command is started...).
The TBS menu information takes considerable RAM space (e.g. 2010 bytes for Nano RX).  This implementation does not attempt any compression of the menu info as that will add considerable messiness. A new target definition HAS_CRSF_CONFIG controls whether the code is included in a build. I suggest (eventually) merging this feature but with HAS_CRSF_CONFIG false for all transmitters.  A future custom build system will then allow users to include it themselves. This commit has CRSF configuration enabled for Devo10, t8sg_v2, and t8sg_v2_plus.
Still a couple rough edges.  The TBS devices sometimes hide or un-hide menu items when other settings are changed.  The number of rows in the current scrollable are not updated to reflect these changes.  Some parameter names are too long to be fully displayed on the same line as the parameter value.
Video with navigation through some of the menus is here.
Appreciate all thoughts and comments.  Is there a better location for crsf.h? (and better name?)
Following is my current to-do list for CRSF configuration feature.

Add configuration pages for color displays (some page functions may move to the common files)
170d950
Support changing number and string parameters (none are used for TX and Nano RX).  b863acf
Adjust parameter value horizontal size based on max number of characters needed. Consider using two lines if necessary. d655782
Currently dialogs are created in the parameter receive serial rx ISR because TBS doesn't indicate what type of dialog is needed until after the request is started. If this is not acceptable try setting a flag when dialog needed and create it in the page event function. cb4773c
Update GUI as needed if menu items become hidden or un-hidden. 4d333bb, efe443e
Show indicator during initial retrieval of parameters from device. 5253735",Then does the default value for SUPPORT_CRSF_CONFIG go in target_all.h?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,830,2019-03-21T00:00:44Z,2019-04-01T21:10:06Z,2019-04-01T21:10:07Z,CLOSED,False,2366,2328,35,https://github.com/hexfet,[WIP] Support configuration of TBS Crossfire devices,29,[],https://github.com/DeviationTX/deviation/pull/830,https://github.com/TheRealMoeder,5,https://github.com/DeviationTX/deviation/pull/830#issuecomment-475329648,"This PR is for review and not intended for merging.  The three commits can be separate PRs.  Commit da99 improves half-duplex serial.  Commit a116 adds the ability for a protocol to have a custom configuration page. Commit 4904 implements the CRSF configuration pages. The last includes some data files for emulator builds that would not be in the final PR. The emulator build shows TX and RX devices and allows navigating through the parameters, but commands are not emulated.
The CRSF configuration system works by message exchange between the transmitter (deviation) and the TBS devices.  This implementation has been tested with the full-size Crossfire transmitter and Nano RX receiver.  Each TBS component supplies parameters defining its configuration options and menu structure.  See the protocol/crsf_params_tx._c and ..._rx._c emulator data files for examples.
The CRSF configuration page is started by clicking on the protocol name.  One step of the page init function is to send a TBS message to discover available devices.  The device names are then shown in a scrollable (currently limited to four entries maximum). The device info response includes the number of parameters associated with the device.  Clicking on a device name starts the crsfdevice page, which starts a sequence of messages to retrieve all the device parameters.  These are displayed according to the menu structure defined in the parameter information by TBS.  When a setting is changed a ""set parameter"" message is sent to the TBS device, which responds with a parameter info message that includes any changes made.  Parameters of type COMMAND open a dialog to show the command status.  Some commands require an Ok/Cancel response from the user before proceeding (but whether a command needs this check isn't known until the command is started...).
The TBS menu information takes considerable RAM space (e.g. 2010 bytes for Nano RX).  This implementation does not attempt any compression of the menu info as that will add considerable messiness. A new target definition HAS_CRSF_CONFIG controls whether the code is included in a build. I suggest (eventually) merging this feature but with HAS_CRSF_CONFIG false for all transmitters.  A future custom build system will then allow users to include it themselves. This commit has CRSF configuration enabled for Devo10, t8sg_v2, and t8sg_v2_plus.
Still a couple rough edges.  The TBS devices sometimes hide or un-hide menu items when other settings are changed.  The number of rows in the current scrollable are not updated to reflect these changes.  Some parameter names are too long to be fully displayed on the same line as the parameter value.
Video with navigation through some of the menus is here.
Appreciate all thoughts and comments.  Is there a better location for crsf.h? (and better name?)
Following is my current to-do list for CRSF configuration feature.

Add configuration pages for color displays (some page functions may move to the common files)
170d950
Support changing number and string parameters (none are used for TX and Nano RX).  b863acf
Adjust parameter value horizontal size based on max number of characters needed. Consider using two lines if necessary. d655782
Currently dialogs are created in the parameter receive serial rx ISR because TBS doesn't indicate what type of dialog is needed until after the request is started. If this is not acceptable try setting a flag when dialog needed and create it in the page event function. cb4773c
Update GUI as needed if menu items become hidden or un-hidden. 4d333bb, efe443e
Show indicator during initial retrieval of parameters from device. 5253735","Then does the default value for SUPPORT_CRSF_CONFIG go in target_all.h?

Good question @howard0su @PhracturedBlue",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,830,2019-03-21T00:00:44Z,2019-04-01T21:10:06Z,2019-04-01T21:10:07Z,CLOSED,False,2366,2328,35,https://github.com/hexfet,[WIP] Support configuration of TBS Crossfire devices,29,[],https://github.com/DeviationTX/deviation/pull/830,https://github.com/hexfet,6,https://github.com/DeviationTX/deviation/pull/830#issuecomment-475457035,"This PR is for review and not intended for merging.  The three commits can be separate PRs.  Commit da99 improves half-duplex serial.  Commit a116 adds the ability for a protocol to have a custom configuration page. Commit 4904 implements the CRSF configuration pages. The last includes some data files for emulator builds that would not be in the final PR. The emulator build shows TX and RX devices and allows navigating through the parameters, but commands are not emulated.
The CRSF configuration system works by message exchange between the transmitter (deviation) and the TBS devices.  This implementation has been tested with the full-size Crossfire transmitter and Nano RX receiver.  Each TBS component supplies parameters defining its configuration options and menu structure.  See the protocol/crsf_params_tx._c and ..._rx._c emulator data files for examples.
The CRSF configuration page is started by clicking on the protocol name.  One step of the page init function is to send a TBS message to discover available devices.  The device names are then shown in a scrollable (currently limited to four entries maximum). The device info response includes the number of parameters associated with the device.  Clicking on a device name starts the crsfdevice page, which starts a sequence of messages to retrieve all the device parameters.  These are displayed according to the menu structure defined in the parameter information by TBS.  When a setting is changed a ""set parameter"" message is sent to the TBS device, which responds with a parameter info message that includes any changes made.  Parameters of type COMMAND open a dialog to show the command status.  Some commands require an Ok/Cancel response from the user before proceeding (but whether a command needs this check isn't known until the command is started...).
The TBS menu information takes considerable RAM space (e.g. 2010 bytes for Nano RX).  This implementation does not attempt any compression of the menu info as that will add considerable messiness. A new target definition HAS_CRSF_CONFIG controls whether the code is included in a build. I suggest (eventually) merging this feature but with HAS_CRSF_CONFIG false for all transmitters.  A future custom build system will then allow users to include it themselves. This commit has CRSF configuration enabled for Devo10, t8sg_v2, and t8sg_v2_plus.
Still a couple rough edges.  The TBS devices sometimes hide or un-hide menu items when other settings are changed.  The number of rows in the current scrollable are not updated to reflect these changes.  Some parameter names are too long to be fully displayed on the same line as the parameter value.
Video with navigation through some of the menus is here.
Appreciate all thoughts and comments.  Is there a better location for crsf.h? (and better name?)
Following is my current to-do list for CRSF configuration feature.

Add configuration pages for color displays (some page functions may move to the common files)
170d950
Support changing number and string parameters (none are used for TX and Nano RX).  b863acf
Adjust parameter value horizontal size based on max number of characters needed. Consider using two lines if necessary. d655782
Currently dialogs are created in the parameter receive serial rx ISR because TBS doesn't indicate what type of dialog is needed until after the request is started. If this is not acceptable try setting a flag when dialog needed and create it in the page event function. cb4773c
Update GUI as needed if menu items become hidden or un-hidden. 4d333bb, efe443e
Show indicator during initial retrieval of parameters from device. 5253735",Commit 66def47 changes the feature define to SUPPORT_CRSF_CONFIG.  Default set to 0 in target_all.h.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,830,2019-03-21T00:00:44Z,2019-04-01T21:10:06Z,2019-04-01T21:10:07Z,CLOSED,False,2366,2328,35,https://github.com/hexfet,[WIP] Support configuration of TBS Crossfire devices,29,[],https://github.com/DeviationTX/deviation/pull/830,https://github.com/hexfet,7,https://github.com/DeviationTX/deviation/pull/830#issuecomment-475654079,"This PR is for review and not intended for merging.  The three commits can be separate PRs.  Commit da99 improves half-duplex serial.  Commit a116 adds the ability for a protocol to have a custom configuration page. Commit 4904 implements the CRSF configuration pages. The last includes some data files for emulator builds that would not be in the final PR. The emulator build shows TX and RX devices and allows navigating through the parameters, but commands are not emulated.
The CRSF configuration system works by message exchange between the transmitter (deviation) and the TBS devices.  This implementation has been tested with the full-size Crossfire transmitter and Nano RX receiver.  Each TBS component supplies parameters defining its configuration options and menu structure.  See the protocol/crsf_params_tx._c and ..._rx._c emulator data files for examples.
The CRSF configuration page is started by clicking on the protocol name.  One step of the page init function is to send a TBS message to discover available devices.  The device names are then shown in a scrollable (currently limited to four entries maximum). The device info response includes the number of parameters associated with the device.  Clicking on a device name starts the crsfdevice page, which starts a sequence of messages to retrieve all the device parameters.  These are displayed according to the menu structure defined in the parameter information by TBS.  When a setting is changed a ""set parameter"" message is sent to the TBS device, which responds with a parameter info message that includes any changes made.  Parameters of type COMMAND open a dialog to show the command status.  Some commands require an Ok/Cancel response from the user before proceeding (but whether a command needs this check isn't known until the command is started...).
The TBS menu information takes considerable RAM space (e.g. 2010 bytes for Nano RX).  This implementation does not attempt any compression of the menu info as that will add considerable messiness. A new target definition HAS_CRSF_CONFIG controls whether the code is included in a build. I suggest (eventually) merging this feature but with HAS_CRSF_CONFIG false for all transmitters.  A future custom build system will then allow users to include it themselves. This commit has CRSF configuration enabled for Devo10, t8sg_v2, and t8sg_v2_plus.
Still a couple rough edges.  The TBS devices sometimes hide or un-hide menu items when other settings are changed.  The number of rows in the current scrollable are not updated to reflect these changes.  Some parameter names are too long to be fully displayed on the same line as the parameter value.
Video with navigation through some of the menus is here.
Appreciate all thoughts and comments.  Is there a better location for crsf.h? (and better name?)
Following is my current to-do list for CRSF configuration feature.

Add configuration pages for color displays (some page functions may move to the common files)
170d950
Support changing number and string parameters (none are used for TX and Nano RX).  b863acf
Adjust parameter value horizontal size based on max number of characters needed. Consider using two lines if necessary. d655782
Currently dialogs are created in the parameter receive serial rx ISR because TBS doesn't indicate what type of dialog is needed until after the request is started. If this is not acceptable try setting a flag when dialog needed and create it in the page event function. cb4773c
Update GUI as needed if menu items become hidden or un-hidden. 4d333bb, efe443e
Show indicator during initial retrieval of parameters from device. 5253735","Can we translate string?

The strings are supplied by the TBS devices so translation would require some special steps.  I've captured (most) of the strings that come from the full-size tx and Nano rx, but don't have any from other devices.  I've emailed TBS to ask for all possibilities.  The translated strings could be stored and then referenced when parameters are loaded from a device.
The device info includes a ""parameters version"" number.  If TBS maintains it then it could be used to detect if the current translations match the parameters in use.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,830,2019-03-21T00:00:44Z,2019-04-01T21:10:06Z,2019-04-01T21:10:07Z,CLOSED,False,2366,2328,35,https://github.com/hexfet,[WIP] Support configuration of TBS Crossfire devices,29,[],https://github.com/DeviationTX/deviation/pull/830,https://github.com/TheRealMoeder,8,https://github.com/DeviationTX/deviation/pull/830#issuecomment-475656299,"This PR is for review and not intended for merging.  The three commits can be separate PRs.  Commit da99 improves half-duplex serial.  Commit a116 adds the ability for a protocol to have a custom configuration page. Commit 4904 implements the CRSF configuration pages. The last includes some data files for emulator builds that would not be in the final PR. The emulator build shows TX and RX devices and allows navigating through the parameters, but commands are not emulated.
The CRSF configuration system works by message exchange between the transmitter (deviation) and the TBS devices.  This implementation has been tested with the full-size Crossfire transmitter and Nano RX receiver.  Each TBS component supplies parameters defining its configuration options and menu structure.  See the protocol/crsf_params_tx._c and ..._rx._c emulator data files for examples.
The CRSF configuration page is started by clicking on the protocol name.  One step of the page init function is to send a TBS message to discover available devices.  The device names are then shown in a scrollable (currently limited to four entries maximum). The device info response includes the number of parameters associated with the device.  Clicking on a device name starts the crsfdevice page, which starts a sequence of messages to retrieve all the device parameters.  These are displayed according to the menu structure defined in the parameter information by TBS.  When a setting is changed a ""set parameter"" message is sent to the TBS device, which responds with a parameter info message that includes any changes made.  Parameters of type COMMAND open a dialog to show the command status.  Some commands require an Ok/Cancel response from the user before proceeding (but whether a command needs this check isn't known until the command is started...).
The TBS menu information takes considerable RAM space (e.g. 2010 bytes for Nano RX).  This implementation does not attempt any compression of the menu info as that will add considerable messiness. A new target definition HAS_CRSF_CONFIG controls whether the code is included in a build. I suggest (eventually) merging this feature but with HAS_CRSF_CONFIG false for all transmitters.  A future custom build system will then allow users to include it themselves. This commit has CRSF configuration enabled for Devo10, t8sg_v2, and t8sg_v2_plus.
Still a couple rough edges.  The TBS devices sometimes hide or un-hide menu items when other settings are changed.  The number of rows in the current scrollable are not updated to reflect these changes.  Some parameter names are too long to be fully displayed on the same line as the parameter value.
Video with navigation through some of the menus is here.
Appreciate all thoughts and comments.  Is there a better location for crsf.h? (and better name?)
Following is my current to-do list for CRSF configuration feature.

Add configuration pages for color displays (some page functions may move to the common files)
170d950
Support changing number and string parameters (none are used for TX and Nano RX).  b863acf
Adjust parameter value horizontal size based on max number of characters needed. Consider using two lines if necessary. d655782
Currently dialogs are created in the parameter receive serial rx ISR because TBS doesn't indicate what type of dialog is needed until after the request is started. If this is not acceptable try setting a flag when dialog needed and create it in the page event function. cb4773c
Update GUI as needed if menu items become hidden or un-hidden. 4d333bb, efe443e
Show indicator during initial retrieval of parameters from device. 5253735","Can we translate string?


I meant the „Loading“",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,830,2019-03-21T00:00:44Z,2019-04-01T21:10:06Z,2019-04-01T21:10:07Z,CLOSED,False,2366,2328,35,https://github.com/hexfet,[WIP] Support configuration of TBS Crossfire devices,29,[],https://github.com/DeviationTX/deviation/pull/830,https://github.com/hexfet,9,https://github.com/DeviationTX/deviation/pull/830#issuecomment-475680624,"This PR is for review and not intended for merging.  The three commits can be separate PRs.  Commit da99 improves half-duplex serial.  Commit a116 adds the ability for a protocol to have a custom configuration page. Commit 4904 implements the CRSF configuration pages. The last includes some data files for emulator builds that would not be in the final PR. The emulator build shows TX and RX devices and allows navigating through the parameters, but commands are not emulated.
The CRSF configuration system works by message exchange between the transmitter (deviation) and the TBS devices.  This implementation has been tested with the full-size Crossfire transmitter and Nano RX receiver.  Each TBS component supplies parameters defining its configuration options and menu structure.  See the protocol/crsf_params_tx._c and ..._rx._c emulator data files for examples.
The CRSF configuration page is started by clicking on the protocol name.  One step of the page init function is to send a TBS message to discover available devices.  The device names are then shown in a scrollable (currently limited to four entries maximum). The device info response includes the number of parameters associated with the device.  Clicking on a device name starts the crsfdevice page, which starts a sequence of messages to retrieve all the device parameters.  These are displayed according to the menu structure defined in the parameter information by TBS.  When a setting is changed a ""set parameter"" message is sent to the TBS device, which responds with a parameter info message that includes any changes made.  Parameters of type COMMAND open a dialog to show the command status.  Some commands require an Ok/Cancel response from the user before proceeding (but whether a command needs this check isn't known until the command is started...).
The TBS menu information takes considerable RAM space (e.g. 2010 bytes for Nano RX).  This implementation does not attempt any compression of the menu info as that will add considerable messiness. A new target definition HAS_CRSF_CONFIG controls whether the code is included in a build. I suggest (eventually) merging this feature but with HAS_CRSF_CONFIG false for all transmitters.  A future custom build system will then allow users to include it themselves. This commit has CRSF configuration enabled for Devo10, t8sg_v2, and t8sg_v2_plus.
Still a couple rough edges.  The TBS devices sometimes hide or un-hide menu items when other settings are changed.  The number of rows in the current scrollable are not updated to reflect these changes.  Some parameter names are too long to be fully displayed on the same line as the parameter value.
Video with navigation through some of the menus is here.
Appreciate all thoughts and comments.  Is there a better location for crsf.h? (and better name?)
Following is my current to-do list for CRSF configuration feature.

Add configuration pages for color displays (some page functions may move to the common files)
170d950
Support changing number and string parameters (none are used for TX and Nano RX).  b863acf
Adjust parameter value horizontal size based on max number of characters needed. Consider using two lines if necessary. d655782
Currently dialogs are created in the parameter receive serial rx ISR because TBS doesn't indicate what type of dialog is needed until after the request is started. If this is not acceptable try setting a flag when dialog needed and create it in the page event function. cb4773c
Update GUI as needed if menu items become hidden or un-hidden. 4d333bb, efe443e
Show indicator during initial retrieval of parameters from device. 5253735","Can we translate string?


I meant the „Loading“

Ah okay :) That should work.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,830,2019-03-21T00:00:44Z,2019-04-01T21:10:06Z,2019-04-01T21:10:07Z,CLOSED,False,2366,2328,35,https://github.com/hexfet,[WIP] Support configuration of TBS Crossfire devices,29,[],https://github.com/DeviationTX/deviation/pull/830,https://github.com/hexfet,10,https://github.com/DeviationTX/deviation/pull/830#issuecomment-478749175,"This PR is for review and not intended for merging.  The three commits can be separate PRs.  Commit da99 improves half-duplex serial.  Commit a116 adds the ability for a protocol to have a custom configuration page. Commit 4904 implements the CRSF configuration pages. The last includes some data files for emulator builds that would not be in the final PR. The emulator build shows TX and RX devices and allows navigating through the parameters, but commands are not emulated.
The CRSF configuration system works by message exchange between the transmitter (deviation) and the TBS devices.  This implementation has been tested with the full-size Crossfire transmitter and Nano RX receiver.  Each TBS component supplies parameters defining its configuration options and menu structure.  See the protocol/crsf_params_tx._c and ..._rx._c emulator data files for examples.
The CRSF configuration page is started by clicking on the protocol name.  One step of the page init function is to send a TBS message to discover available devices.  The device names are then shown in a scrollable (currently limited to four entries maximum). The device info response includes the number of parameters associated with the device.  Clicking on a device name starts the crsfdevice page, which starts a sequence of messages to retrieve all the device parameters.  These are displayed according to the menu structure defined in the parameter information by TBS.  When a setting is changed a ""set parameter"" message is sent to the TBS device, which responds with a parameter info message that includes any changes made.  Parameters of type COMMAND open a dialog to show the command status.  Some commands require an Ok/Cancel response from the user before proceeding (but whether a command needs this check isn't known until the command is started...).
The TBS menu information takes considerable RAM space (e.g. 2010 bytes for Nano RX).  This implementation does not attempt any compression of the menu info as that will add considerable messiness. A new target definition HAS_CRSF_CONFIG controls whether the code is included in a build. I suggest (eventually) merging this feature but with HAS_CRSF_CONFIG false for all transmitters.  A future custom build system will then allow users to include it themselves. This commit has CRSF configuration enabled for Devo10, t8sg_v2, and t8sg_v2_plus.
Still a couple rough edges.  The TBS devices sometimes hide or un-hide menu items when other settings are changed.  The number of rows in the current scrollable are not updated to reflect these changes.  Some parameter names are too long to be fully displayed on the same line as the parameter value.
Video with navigation through some of the menus is here.
Appreciate all thoughts and comments.  Is there a better location for crsf.h? (and better name?)
Following is my current to-do list for CRSF configuration feature.

Add configuration pages for color displays (some page functions may move to the common files)
170d950
Support changing number and string parameters (none are used for TX and Nano RX).  b863acf
Adjust parameter value horizontal size based on max number of characters needed. Consider using two lines if necessary. d655782
Currently dialogs are created in the parameter receive serial rx ISR because TBS doesn't indicate what type of dialog is needed until after the request is started. If this is not acceptable try setting a flag when dialog needed and create it in the page event function. cb4773c
Update GUI as needed if menu items become hidden or un-hidden. 4d333bb, efe443e
Show indicator during initial retrieval of parameters from device. 5253735",Thanks for the comments.  Closing this PR to open a clean one without emulator data files.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,831,2019-03-21T14:54:58Z,2019-03-23T01:58:31Z,2019-03-23T01:59:09Z,MERGED,True,31,2,3,https://github.com/PhracturedBlue,Fix extended audio for devo12 w/ TYPE=dev enabled,3,[],https://github.com/DeviationTX/deviation/pull/831,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/831,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,831,2019-03-21T14:54:58Z,2019-03-23T01:58:31Z,2019-03-23T01:59:09Z,MERGED,True,31,2,3,https://github.com/PhracturedBlue,Fix extended audio for devo12 w/ TYPE=dev enabled,3,[],https://github.com/DeviationTX/deviation/pull/831,https://github.com/TheRealMoeder,2,https://github.com/DeviationTX/deviation/pull/831#issuecomment-475501962,,"I think 0416d69 is probably more appropriate, as the test doesn't make much sense anymore",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,833,2019-03-23T14:40:03Z,2019-03-23T14:48:09Z,2019-03-23T14:48:12Z,MERGED,True,30,5,5,https://github.com/PhracturedBlue,Add support for unencrypted bootloader builds,1,[],https://github.com/DeviationTX/deviation/pull/833,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/833,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,834,2019-03-23T19:18:03Z,2019-03-24T02:30:50Z,2019-03-24T02:30:54Z,MERGED,True,397,554,22,https://github.com/PhracturedBlue,Merge 128x64 driver code,2,[],https://github.com/DeviationTX/deviation/pull/834,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/834,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,835,2019-03-24T01:38:53Z,2019-03-24T02:30:08Z,2019-03-24T02:30:14Z,MERGED,True,5,0,1,https://github.com/PhracturedBlue,Fix emu_t8sg,1,[],https://github.com/DeviationTX/deviation/pull/835,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/835,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,836,2019-03-25T10:11:10Z,2019-04-02T22:47:20Z,2019-04-22T13:26:43Z,MERGED,True,14,3,1,https://github.com/goebish,Protocol for TDR Phoenix Mini,5,['Protocol'],https://github.com/DeviationTX/deviation/pull/836,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/836,"Add ""Phoenix"" format option to the MJXq protocol.
Channel 5: arm
This is a clone of the EAchine E010 with altitude hold, same as the E010 protocol it's using XN297L @ 250 kbps and doesn't work well with every nrf24l01 modules.
https://www.deviationtx.com/forum/protocol-development/8314-tdr-phoenix-mini-eachine-e010-clone
I'd like to add a note in the manual/wiki for those XN297L @ 250 kbps (sub)protocols, but I'm not sure how to phrase it without being too technical. To make it short, the xn297(L) has a ~+200 kHz frequency drift compared to the nrf24l01, that's not an issue @ 1 Mbps but with 250 kbps the xn297l has a tighter oscillator accuracy requirement (20ppm vs 60ppm) thus not enough selectivity to cope with this drift sometimes. Success depends only on the (in)accuracy of the oscillators in the tx and rx, you can even have 2 of those quads with one working perfectly while the other does not bind at all.
I should make some tests the other way round, emulating a nrf24l01 with a XN297L, if it works well (there's no reason it doesn't ...) maybe we could tell the 4-in-1 manufacturers to use XN297L instead of nrf24l01 in the future as its base frequency can be fine tuned (same as the 3 other transceivers) and so far we've more xn297 protocols than nrf24l01 anyway. Also, it has an internal PA that can be set to 2 dBm (up to 13 dBm but that would saturate our PA), that would allow 150mW for nrf24l01/xn297 protocols.","Add ""Phoenix"" format option to the MJXq protocol.
Channel 5: arm
This is a clone of the EAchine E010 with altitude hold, same as the E010 protocol it's using XN297L @ 250 kbps and doesn't work well with every nrf24l01 modules.
https://www.deviationtx.com/forum/protocol-development/8314-tdr-phoenix-mini-eachine-e010-clone
I'd like to add a note in the manual/wiki for those XN297L @ 250 kbps (sub)protocols, but I'm not sure how to phrase it without being too technical. To make it short, the xn297(L) has a ~+200 kHz frequency drift compared to the nrf24l01, that's not an issue @ 1 Mbps but with 250 kbps the xn297l has a tighter oscillator accuracy requirement (20ppm vs 60ppm) thus not enough selectivity to cope with this drift sometimes. Success depends only on the (in)accuracy of the oscillators in the tx and rx, you can even have 2 of those quads with one working perfectly while the other does not bind at all.
I should make some tests the other way round, emulating a nrf24l01 with a XN297L, if it works well (there's no reason it doesn't ...) maybe we could tell the 4-in-1 manufacturers to use XN297L instead of nrf24l01 in the future as its base frequency can be fine tuned (same as the 3 other transceivers) and so far we've more xn297 protocols than nrf24l01 anyway. Also, it has an internal PA that can be set to 2 dBm (up to 13 dBm but that would saturate our PA), that would allow 150mW for nrf24l01/xn297 protocols.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,836,2019-03-25T10:11:10Z,2019-04-02T22:47:20Z,2019-04-22T13:26:43Z,MERGED,True,14,3,1,https://github.com/goebish,Protocol for TDR Phoenix Mini,5,['Protocol'],https://github.com/DeviationTX/deviation/pull/836,https://github.com/goebish,2,https://github.com/DeviationTX/deviation/pull/836#issuecomment-476139997,"Add ""Phoenix"" format option to the MJXq protocol.
Channel 5: arm
This is a clone of the EAchine E010 with altitude hold, same as the E010 protocol it's using XN297L @ 250 kbps and doesn't work well with every nrf24l01 modules.
https://www.deviationtx.com/forum/protocol-development/8314-tdr-phoenix-mini-eachine-e010-clone
I'd like to add a note in the manual/wiki for those XN297L @ 250 kbps (sub)protocols, but I'm not sure how to phrase it without being too technical. To make it short, the xn297(L) has a ~+200 kHz frequency drift compared to the nrf24l01, that's not an issue @ 1 Mbps but with 250 kbps the xn297l has a tighter oscillator accuracy requirement (20ppm vs 60ppm) thus not enough selectivity to cope with this drift sometimes. Success depends only on the (in)accuracy of the oscillators in the tx and rx, you can even have 2 of those quads with one working perfectly while the other does not bind at all.
I should make some tests the other way round, emulating a nrf24l01 with a XN297L, if it works well (there's no reason it doesn't ...) maybe we could tell the 4-in-1 manufacturers to use XN297L instead of nrf24l01 in the future as its base frequency can be fine tuned (same as the 3 other transceivers) and so far we've more xn297 protocols than nrf24l01 anyway. Also, it has an internal PA that can be set to 2 dBm (up to 13 dBm but that would saturate our PA), that would allow 150mW for nrf24l01/xn297 protocols.","On hold because I'm not sure it's set to high rate, I've asked the user to make another capture.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,836,2019-03-25T10:11:10Z,2019-04-02T22:47:20Z,2019-04-22T13:26:43Z,MERGED,True,14,3,1,https://github.com/goebish,Protocol for TDR Phoenix Mini,5,['Protocol'],https://github.com/DeviationTX/deviation/pull/836,https://github.com/alanchan2772,3,https://github.com/DeviationTX/deviation/pull/836#issuecomment-483185597,"Add ""Phoenix"" format option to the MJXq protocol.
Channel 5: arm
This is a clone of the EAchine E010 with altitude hold, same as the E010 protocol it's using XN297L @ 250 kbps and doesn't work well with every nrf24l01 modules.
https://www.deviationtx.com/forum/protocol-development/8314-tdr-phoenix-mini-eachine-e010-clone
I'd like to add a note in the manual/wiki for those XN297L @ 250 kbps (sub)protocols, but I'm not sure how to phrase it without being too technical. To make it short, the xn297(L) has a ~+200 kHz frequency drift compared to the nrf24l01, that's not an issue @ 1 Mbps but with 250 kbps the xn297l has a tighter oscillator accuracy requirement (20ppm vs 60ppm) thus not enough selectivity to cope with this drift sometimes. Success depends only on the (in)accuracy of the oscillators in the tx and rx, you can even have 2 of those quads with one working perfectly while the other does not bind at all.
I should make some tests the other way round, emulating a nrf24l01 with a XN297L, if it works well (there's no reason it doesn't ...) maybe we could tell the 4-in-1 manufacturers to use XN297L instead of nrf24l01 in the future as its base frequency can be fine tuned (same as the 3 other transceivers) and so far we've more xn297 protocols than nrf24l01 anyway. Also, it has an internal PA that can be set to 2 dBm (up to 13 dBm but that would saturate our PA), that would allow 150mW for nrf24l01/xn297 protocols.","Can you put the e010 out of mjxq protocols and add the freq-fine turning to it just like s-fhss protocols! if can not,why?thanks!",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,836,2019-03-25T10:11:10Z,2019-04-02T22:47:20Z,2019-04-22T13:26:43Z,MERGED,True,14,3,1,https://github.com/goebish,Protocol for TDR Phoenix Mini,5,['Protocol'],https://github.com/DeviationTX/deviation/pull/836,https://github.com/goebish,4,https://github.com/DeviationTX/deviation/pull/836#issuecomment-483186741,"Add ""Phoenix"" format option to the MJXq protocol.
Channel 5: arm
This is a clone of the EAchine E010 with altitude hold, same as the E010 protocol it's using XN297L @ 250 kbps and doesn't work well with every nrf24l01 modules.
https://www.deviationtx.com/forum/protocol-development/8314-tdr-phoenix-mini-eachine-e010-clone
I'd like to add a note in the manual/wiki for those XN297L @ 250 kbps (sub)protocols, but I'm not sure how to phrase it without being too technical. To make it short, the xn297(L) has a ~+200 kHz frequency drift compared to the nrf24l01, that's not an issue @ 1 Mbps but with 250 kbps the xn297l has a tighter oscillator accuracy requirement (20ppm vs 60ppm) thus not enough selectivity to cope with this drift sometimes. Success depends only on the (in)accuracy of the oscillators in the tx and rx, you can even have 2 of those quads with one working perfectly while the other does not bind at all.
I should make some tests the other way round, emulating a nrf24l01 with a XN297L, if it works well (there's no reason it doesn't ...) maybe we could tell the 4-in-1 manufacturers to use XN297L instead of nrf24l01 in the future as its base frequency can be fine tuned (same as the 3 other transceivers) and so far we've more xn297 protocols than nrf24l01 anyway. Also, it has an internal PA that can be set to 2 dBm (up to 13 dBm but that would saturate our PA), that would allow 150mW for nrf24l01/xn297 protocols.","That's not possible, S-FHSS protocol is using the cc2500 transceiver, on which frequency can be fine tuned by setting registers.
The mjqx/e010 protocol is using the nrf24l01, this transceiver can't be fine tuned in software.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,836,2019-03-25T10:11:10Z,2019-04-02T22:47:20Z,2019-04-22T13:26:43Z,MERGED,True,14,3,1,https://github.com/goebish,Protocol for TDR Phoenix Mini,5,['Protocol'],https://github.com/DeviationTX/deviation/pull/836,https://github.com/alanchan2772,5,https://github.com/DeviationTX/deviation/pull/836#issuecomment-483187512,"Add ""Phoenix"" format option to the MJXq protocol.
Channel 5: arm
This is a clone of the EAchine E010 with altitude hold, same as the E010 protocol it's using XN297L @ 250 kbps and doesn't work well with every nrf24l01 modules.
https://www.deviationtx.com/forum/protocol-development/8314-tdr-phoenix-mini-eachine-e010-clone
I'd like to add a note in the manual/wiki for those XN297L @ 250 kbps (sub)protocols, but I'm not sure how to phrase it without being too technical. To make it short, the xn297(L) has a ~+200 kHz frequency drift compared to the nrf24l01, that's not an issue @ 1 Mbps but with 250 kbps the xn297l has a tighter oscillator accuracy requirement (20ppm vs 60ppm) thus not enough selectivity to cope with this drift sometimes. Success depends only on the (in)accuracy of the oscillators in the tx and rx, you can even have 2 of those quads with one working perfectly while the other does not bind at all.
I should make some tests the other way round, emulating a nrf24l01 with a XN297L, if it works well (there's no reason it doesn't ...) maybe we could tell the 4-in-1 manufacturers to use XN297L instead of nrf24l01 in the future as its base frequency can be fine tuned (same as the 3 other transceivers) and so far we've more xn297 protocols than nrf24l01 anyway. Also, it has an internal PA that can be set to 2 dBm (up to 13 dBm but that would saturate our PA), that would allow 150mW for nrf24l01/xn297 protocols.","o.i see.Thanks for your help, much appreciated.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,836,2019-03-25T10:11:10Z,2019-04-02T22:47:20Z,2019-04-22T13:26:43Z,MERGED,True,14,3,1,https://github.com/goebish,Protocol for TDR Phoenix Mini,5,['Protocol'],https://github.com/DeviationTX/deviation/pull/836,https://github.com/alanchan2772,6,https://github.com/DeviationTX/deviation/pull/836#issuecomment-483191328,"Add ""Phoenix"" format option to the MJXq protocol.
Channel 5: arm
This is a clone of the EAchine E010 with altitude hold, same as the E010 protocol it's using XN297L @ 250 kbps and doesn't work well with every nrf24l01 modules.
https://www.deviationtx.com/forum/protocol-development/8314-tdr-phoenix-mini-eachine-e010-clone
I'd like to add a note in the manual/wiki for those XN297L @ 250 kbps (sub)protocols, but I'm not sure how to phrase it without being too technical. To make it short, the xn297(L) has a ~+200 kHz frequency drift compared to the nrf24l01, that's not an issue @ 1 Mbps but with 250 kbps the xn297l has a tighter oscillator accuracy requirement (20ppm vs 60ppm) thus not enough selectivity to cope with this drift sometimes. Success depends only on the (in)accuracy of the oscillators in the tx and rx, you can even have 2 of those quads with one working perfectly while the other does not bind at all.
I should make some tests the other way round, emulating a nrf24l01 with a XN297L, if it works well (there's no reason it doesn't ...) maybe we could tell the 4-in-1 manufacturers to use XN297L instead of nrf24l01 in the future as its base frequency can be fine tuned (same as the 3 other transceivers) and so far we've more xn297 protocols than nrf24l01 anyway. Also, it has an internal PA that can be set to 2 dBm (up to 13 dBm but that would saturate our PA), that would allow 150mW for nrf24l01/xn297 protocols.",I ask the nrf24l01 maker (【nRF24L01P+PA+LNA大功率2.4G无线收发模块500mW无人机NRF2401数传】https://m.tb.cn/h.e0NJznx?sm=c9bd91 点击链接，再选择浏览器咑閞；或復·制这段描述￥HV7SYapY3hc￥后到👉淘♂寳♀👈) they said  it can turn the frequence,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,836,2019-03-25T10:11:10Z,2019-04-02T22:47:20Z,2019-04-22T13:26:43Z,MERGED,True,14,3,1,https://github.com/goebish,Protocol for TDR Phoenix Mini,5,['Protocol'],https://github.com/DeviationTX/deviation/pull/836,https://github.com/alanchan2772,7,https://github.com/DeviationTX/deviation/pull/836#issuecomment-483194959,"Add ""Phoenix"" format option to the MJXq protocol.
Channel 5: arm
This is a clone of the EAchine E010 with altitude hold, same as the E010 protocol it's using XN297L @ 250 kbps and doesn't work well with every nrf24l01 modules.
https://www.deviationtx.com/forum/protocol-development/8314-tdr-phoenix-mini-eachine-e010-clone
I'd like to add a note in the manual/wiki for those XN297L @ 250 kbps (sub)protocols, but I'm not sure how to phrase it without being too technical. To make it short, the xn297(L) has a ~+200 kHz frequency drift compared to the nrf24l01, that's not an issue @ 1 Mbps but with 250 kbps the xn297l has a tighter oscillator accuracy requirement (20ppm vs 60ppm) thus not enough selectivity to cope with this drift sometimes. Success depends only on the (in)accuracy of the oscillators in the tx and rx, you can even have 2 of those quads with one working perfectly while the other does not bind at all.
I should make some tests the other way round, emulating a nrf24l01 with a XN297L, if it works well (there's no reason it doesn't ...) maybe we could tell the 4-in-1 manufacturers to use XN297L instead of nrf24l01 in the future as its base frequency can be fine tuned (same as the 3 other transceivers) and so far we've more xn297 protocols than nrf24l01 anyway. Also, it has an internal PA that can be set to 2 dBm (up to 13 dBm but that would saturate our PA), that would allow 150mW for nrf24l01/xn297 protocols.",Is that A7105 can be fine turned in sofeware too?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,836,2019-03-25T10:11:10Z,2019-04-02T22:47:20Z,2019-04-22T13:26:43Z,MERGED,True,14,3,1,https://github.com/goebish,Protocol for TDR Phoenix Mini,5,['Protocol'],https://github.com/DeviationTX/deviation/pull/836,https://github.com/goebish,8,https://github.com/DeviationTX/deviation/pull/836#issuecomment-483199339,"Add ""Phoenix"" format option to the MJXq protocol.
Channel 5: arm
This is a clone of the EAchine E010 with altitude hold, same as the E010 protocol it's using XN297L @ 250 kbps and doesn't work well with every nrf24l01 modules.
https://www.deviationtx.com/forum/protocol-development/8314-tdr-phoenix-mini-eachine-e010-clone
I'd like to add a note in the manual/wiki for those XN297L @ 250 kbps (sub)protocols, but I'm not sure how to phrase it without being too technical. To make it short, the xn297(L) has a ~+200 kHz frequency drift compared to the nrf24l01, that's not an issue @ 1 Mbps but with 250 kbps the xn297l has a tighter oscillator accuracy requirement (20ppm vs 60ppm) thus not enough selectivity to cope with this drift sometimes. Success depends only on the (in)accuracy of the oscillators in the tx and rx, you can even have 2 of those quads with one working perfectly while the other does not bind at all.
I should make some tests the other way round, emulating a nrf24l01 with a XN297L, if it works well (there's no reason it doesn't ...) maybe we could tell the 4-in-1 manufacturers to use XN297L instead of nrf24l01 in the future as its base frequency can be fine tuned (same as the 3 other transceivers) and so far we've more xn297 protocols than nrf24l01 anyway. Also, it has an internal PA that can be set to 2 dBm (up to 13 dBm but that would saturate our PA), that would allow 150mW for nrf24l01/xn297 protocols.","He lies, frequency can't be fine tuned in software with a nrf24l01 (see datasheet), and yes the A7105 can be fine tuned in software, as the cyrf6936 and the cc2500.",True,{'THUMBS_UP': ['https://github.com/alanchan2772']}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,836,2019-03-25T10:11:10Z,2019-04-02T22:47:20Z,2019-04-22T13:26:43Z,MERGED,True,14,3,1,https://github.com/goebish,Protocol for TDR Phoenix Mini,5,['Protocol'],https://github.com/DeviationTX/deviation/pull/836,https://github.com/goebish,9,https://github.com/DeviationTX/deviation/pull/836#issuecomment-483199827,"Add ""Phoenix"" format option to the MJXq protocol.
Channel 5: arm
This is a clone of the EAchine E010 with altitude hold, same as the E010 protocol it's using XN297L @ 250 kbps and doesn't work well with every nrf24l01 modules.
https://www.deviationtx.com/forum/protocol-development/8314-tdr-phoenix-mini-eachine-e010-clone
I'd like to add a note in the manual/wiki for those XN297L @ 250 kbps (sub)protocols, but I'm not sure how to phrase it without being too technical. To make it short, the xn297(L) has a ~+200 kHz frequency drift compared to the nrf24l01, that's not an issue @ 1 Mbps but with 250 kbps the xn297l has a tighter oscillator accuracy requirement (20ppm vs 60ppm) thus not enough selectivity to cope with this drift sometimes. Success depends only on the (in)accuracy of the oscillators in the tx and rx, you can even have 2 of those quads with one working perfectly while the other does not bind at all.
I should make some tests the other way round, emulating a nrf24l01 with a XN297L, if it works well (there's no reason it doesn't ...) maybe we could tell the 4-in-1 manufacturers to use XN297L instead of nrf24l01 in the future as its base frequency can be fine tuned (same as the 3 other transceivers) and so far we've more xn297 protocols than nrf24l01 anyway. Also, it has an internal PA that can be set to 2 dBm (up to 13 dBm but that would saturate our PA), that would allow 150mW for nrf24l01/xn297 protocols.","""tuning"" and ""fine tuning"" is not the same thing ;)",True,{'THUMBS_UP': ['https://github.com/alanchan2772']}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,836,2019-03-25T10:11:10Z,2019-04-02T22:47:20Z,2019-04-22T13:26:43Z,MERGED,True,14,3,1,https://github.com/goebish,Protocol for TDR Phoenix Mini,5,['Protocol'],https://github.com/DeviationTX/deviation/pull/836,https://github.com/alanchan2772,10,https://github.com/DeviationTX/deviation/pull/836#issuecomment-483201075,"Add ""Phoenix"" format option to the MJXq protocol.
Channel 5: arm
This is a clone of the EAchine E010 with altitude hold, same as the E010 protocol it's using XN297L @ 250 kbps and doesn't work well with every nrf24l01 modules.
https://www.deviationtx.com/forum/protocol-development/8314-tdr-phoenix-mini-eachine-e010-clone
I'd like to add a note in the manual/wiki for those XN297L @ 250 kbps (sub)protocols, but I'm not sure how to phrase it without being too technical. To make it short, the xn297(L) has a ~+200 kHz frequency drift compared to the nrf24l01, that's not an issue @ 1 Mbps but with 250 kbps the xn297l has a tighter oscillator accuracy requirement (20ppm vs 60ppm) thus not enough selectivity to cope with this drift sometimes. Success depends only on the (in)accuracy of the oscillators in the tx and rx, you can even have 2 of those quads with one working perfectly while the other does not bind at all.
I should make some tests the other way round, emulating a nrf24l01 with a XN297L, if it works well (there's no reason it doesn't ...) maybe we could tell the 4-in-1 manufacturers to use XN297L instead of nrf24l01 in the future as its base frequency can be fine tuned (same as the 3 other transceivers) and so far we've more xn297 protocols than nrf24l01 anyway. Also, it has an internal PA that can be set to 2 dBm (up to 13 dBm but that would saturate our PA), that would allow 150mW for nrf24l01/xn297 protocols.","ok，i see!
I  just want to keep the hope!
Thank you very much!
Thanks all the Deviation team,best wish!",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,836,2019-03-25T10:11:10Z,2019-04-02T22:47:20Z,2019-04-22T13:26:43Z,MERGED,True,14,3,1,https://github.com/goebish,Protocol for TDR Phoenix Mini,5,['Protocol'],https://github.com/DeviationTX/deviation/pull/836,https://github.com/goebish,11,https://github.com/DeviationTX/deviation/pull/836#issuecomment-483696944,"Add ""Phoenix"" format option to the MJXq protocol.
Channel 5: arm
This is a clone of the EAchine E010 with altitude hold, same as the E010 protocol it's using XN297L @ 250 kbps and doesn't work well with every nrf24l01 modules.
https://www.deviationtx.com/forum/protocol-development/8314-tdr-phoenix-mini-eachine-e010-clone
I'd like to add a note in the manual/wiki for those XN297L @ 250 kbps (sub)protocols, but I'm not sure how to phrase it without being too technical. To make it short, the xn297(L) has a ~+200 kHz frequency drift compared to the nrf24l01, that's not an issue @ 1 Mbps but with 250 kbps the xn297l has a tighter oscillator accuracy requirement (20ppm vs 60ppm) thus not enough selectivity to cope with this drift sometimes. Success depends only on the (in)accuracy of the oscillators in the tx and rx, you can even have 2 of those quads with one working perfectly while the other does not bind at all.
I should make some tests the other way round, emulating a nrf24l01 with a XN297L, if it works well (there's no reason it doesn't ...) maybe we could tell the 4-in-1 manufacturers to use XN297L instead of nrf24l01 in the future as its base frequency can be fine tuned (same as the 3 other transceivers) and so far we've more xn297 protocols than nrf24l01 anyway. Also, it has an internal PA that can be set to 2 dBm (up to 13 dBm but that would saturate our PA), that would allow 150mW for nrf24l01/xn297 protocols.","I might have found a solution, please see and continue the discussion here:
https://www.deviationtx.com/forum/protocol-development/6307-eachine-e010-inductrix-clone-data-captures?start=280#73920",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,836,2019-03-25T10:11:10Z,2019-04-02T22:47:20Z,2019-04-22T13:26:43Z,MERGED,True,14,3,1,https://github.com/goebish,Protocol for TDR Phoenix Mini,5,['Protocol'],https://github.com/DeviationTX/deviation/pull/836,https://github.com/alanchan2772,12,https://github.com/DeviationTX/deviation/pull/836#issuecomment-485351159,"Add ""Phoenix"" format option to the MJXq protocol.
Channel 5: arm
This is a clone of the EAchine E010 with altitude hold, same as the E010 protocol it's using XN297L @ 250 kbps and doesn't work well with every nrf24l01 modules.
https://www.deviationtx.com/forum/protocol-development/8314-tdr-phoenix-mini-eachine-e010-clone
I'd like to add a note in the manual/wiki for those XN297L @ 250 kbps (sub)protocols, but I'm not sure how to phrase it without being too technical. To make it short, the xn297(L) has a ~+200 kHz frequency drift compared to the nrf24l01, that's not an issue @ 1 Mbps but with 250 kbps the xn297l has a tighter oscillator accuracy requirement (20ppm vs 60ppm) thus not enough selectivity to cope with this drift sometimes. Success depends only on the (in)accuracy of the oscillators in the tx and rx, you can even have 2 of those quads with one working perfectly while the other does not bind at all.
I should make some tests the other way round, emulating a nrf24l01 with a XN297L, if it works well (there's no reason it doesn't ...) maybe we could tell the 4-in-1 manufacturers to use XN297L instead of nrf24l01 in the future as its base frequency can be fine tuned (same as the 3 other transceivers) and so far we've more xn297 protocols than nrf24l01 anyway. Also, it has an internal PA that can be set to 2 dBm (up to 13 dBm but that would saturate our PA), that would allow 150mW for nrf24l01/xn297 protocols.",It worked perfectly on my devo 7e，thank you goebish.You are a genius!,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,836,2019-03-25T10:11:10Z,2019-04-02T22:47:20Z,2019-04-22T13:26:43Z,MERGED,True,14,3,1,https://github.com/goebish,Protocol for TDR Phoenix Mini,5,['Protocol'],https://github.com/DeviationTX/deviation/pull/836,https://github.com/alanchan2772,13,https://github.com/DeviationTX/deviation/pull/836#issuecomment-485363662,"Add ""Phoenix"" format option to the MJXq protocol.
Channel 5: arm
This is a clone of the EAchine E010 with altitude hold, same as the E010 protocol it's using XN297L @ 250 kbps and doesn't work well with every nrf24l01 modules.
https://www.deviationtx.com/forum/protocol-development/8314-tdr-phoenix-mini-eachine-e010-clone
I'd like to add a note in the manual/wiki for those XN297L @ 250 kbps (sub)protocols, but I'm not sure how to phrase it without being too technical. To make it short, the xn297(L) has a ~+200 kHz frequency drift compared to the nrf24l01, that's not an issue @ 1 Mbps but with 250 kbps the xn297l has a tighter oscillator accuracy requirement (20ppm vs 60ppm) thus not enough selectivity to cope with this drift sometimes. Success depends only on the (in)accuracy of the oscillators in the tx and rx, you can even have 2 of those quads with one working perfectly while the other does not bind at all.
I should make some tests the other way round, emulating a nrf24l01 with a XN297L, if it works well (there's no reason it doesn't ...) maybe we could tell the 4-in-1 manufacturers to use XN297L instead of nrf24l01 in the future as its base frequency can be fine tuned (same as the 3 other transceivers) and so far we've more xn297 protocols than nrf24l01 anyway. Also, it has an internal PA that can be set to 2 dBm (up to 13 dBm but that would saturate our PA), that would allow 150mW for nrf24l01/xn297 protocols.","Can JJRC H31  bind with  devo 7e?If can ,that is  perfect!",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,836,2019-03-25T10:11:10Z,2019-04-02T22:47:20Z,2019-04-22T13:26:43Z,MERGED,True,14,3,1,https://github.com/goebish,Protocol for TDR Phoenix Mini,5,['Protocol'],https://github.com/DeviationTX/deviation/pull/836,https://github.com/goebish,14,https://github.com/DeviationTX/deviation/pull/836#issuecomment-485376759,"Add ""Phoenix"" format option to the MJXq protocol.
Channel 5: arm
This is a clone of the EAchine E010 with altitude hold, same as the E010 protocol it's using XN297L @ 250 kbps and doesn't work well with every nrf24l01 modules.
https://www.deviationtx.com/forum/protocol-development/8314-tdr-phoenix-mini-eachine-e010-clone
I'd like to add a note in the manual/wiki for those XN297L @ 250 kbps (sub)protocols, but I'm not sure how to phrase it without being too technical. To make it short, the xn297(L) has a ~+200 kHz frequency drift compared to the nrf24l01, that's not an issue @ 1 Mbps but with 250 kbps the xn297l has a tighter oscillator accuracy requirement (20ppm vs 60ppm) thus not enough selectivity to cope with this drift sometimes. Success depends only on the (in)accuracy of the oscillators in the tx and rx, you can even have 2 of those quads with one working perfectly while the other does not bind at all.
I should make some tests the other way round, emulating a nrf24l01 with a XN297L, if it works well (there's no reason it doesn't ...) maybe we could tell the 4-in-1 manufacturers to use XN297L instead of nrf24l01 in the future as its base frequency can be fine tuned (same as the 3 other transceivers) and so far we've more xn297 protocols than nrf24l01 anyway. Also, it has an internal PA that can be set to 2 dBm (up to 13 dBm but that would saturate our PA), that would allow 150mW for nrf24l01/xn297 protocols.","Thanks for testing, the JJRC H31 isn't on my list yet, sorry ;)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,836,2019-03-25T10:11:10Z,2019-04-02T22:47:20Z,2019-04-22T13:26:43Z,MERGED,True,14,3,1,https://github.com/goebish,Protocol for TDR Phoenix Mini,5,['Protocol'],https://github.com/DeviationTX/deviation/pull/836,https://github.com/alanchan2772,15,https://github.com/DeviationTX/deviation/pull/836#issuecomment-485380615,"Add ""Phoenix"" format option to the MJXq protocol.
Channel 5: arm
This is a clone of the EAchine E010 with altitude hold, same as the E010 protocol it's using XN297L @ 250 kbps and doesn't work well with every nrf24l01 modules.
https://www.deviationtx.com/forum/protocol-development/8314-tdr-phoenix-mini-eachine-e010-clone
I'd like to add a note in the manual/wiki for those XN297L @ 250 kbps (sub)protocols, but I'm not sure how to phrase it without being too technical. To make it short, the xn297(L) has a ~+200 kHz frequency drift compared to the nrf24l01, that's not an issue @ 1 Mbps but with 250 kbps the xn297l has a tighter oscillator accuracy requirement (20ppm vs 60ppm) thus not enough selectivity to cope with this drift sometimes. Success depends only on the (in)accuracy of the oscillators in the tx and rx, you can even have 2 of those quads with one working perfectly while the other does not bind at all.
I should make some tests the other way round, emulating a nrf24l01 with a XN297L, if it works well (there's no reason it doesn't ...) maybe we could tell the 4-in-1 manufacturers to use XN297L instead of nrf24l01 in the future as its base frequency can be fine tuned (same as the 3 other transceivers) and so far we've more xn297 protocols than nrf24l01 anyway. Also, it has an internal PA that can be set to 2 dBm (up to 13 dBm but that would saturate our PA), that would allow 150mW for nrf24l01/xn297 protocols.","Please,please,please! I send the h
31 and controler to you  ,ok?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,836,2019-03-25T10:11:10Z,2019-04-02T22:47:20Z,2019-04-22T13:26:43Z,MERGED,True,14,3,1,https://github.com/goebish,Protocol for TDR Phoenix Mini,5,['Protocol'],https://github.com/DeviationTX/deviation/pull/836,https://github.com/goebish,16,https://github.com/DeviationTX/deviation/pull/836#issuecomment-485380876,"Add ""Phoenix"" format option to the MJXq protocol.
Channel 5: arm
This is a clone of the EAchine E010 with altitude hold, same as the E010 protocol it's using XN297L @ 250 kbps and doesn't work well with every nrf24l01 modules.
https://www.deviationtx.com/forum/protocol-development/8314-tdr-phoenix-mini-eachine-e010-clone
I'd like to add a note in the manual/wiki for those XN297L @ 250 kbps (sub)protocols, but I'm not sure how to phrase it without being too technical. To make it short, the xn297(L) has a ~+200 kHz frequency drift compared to the nrf24l01, that's not an issue @ 1 Mbps but with 250 kbps the xn297l has a tighter oscillator accuracy requirement (20ppm vs 60ppm) thus not enough selectivity to cope with this drift sometimes. Success depends only on the (in)accuracy of the oscillators in the tx and rx, you can even have 2 of those quads with one working perfectly while the other does not bind at all.
I should make some tests the other way round, emulating a nrf24l01 with a XN297L, if it works well (there's no reason it doesn't ...) maybe we could tell the 4-in-1 manufacturers to use XN297L instead of nrf24l01 in the future as its base frequency can be fine tuned (same as the 3 other transceivers) and so far we've more xn297 protocols than nrf24l01 anyway. Also, it has an internal PA that can be set to 2 dBm (up to 13 dBm but that would saturate our PA), that would allow 150mW for nrf24l01/xn297 protocols.","Please open a topic on the forum (protocol development), that's a better place to discuss.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,836,2019-03-25T10:11:10Z,2019-04-02T22:47:20Z,2019-04-22T13:26:43Z,MERGED,True,14,3,1,https://github.com/goebish,Protocol for TDR Phoenix Mini,5,['Protocol'],https://github.com/DeviationTX/deviation/pull/836,https://github.com/alanchan2772,17,https://github.com/DeviationTX/deviation/pull/836#issuecomment-485381387,"Add ""Phoenix"" format option to the MJXq protocol.
Channel 5: arm
This is a clone of the EAchine E010 with altitude hold, same as the E010 protocol it's using XN297L @ 250 kbps and doesn't work well with every nrf24l01 modules.
https://www.deviationtx.com/forum/protocol-development/8314-tdr-phoenix-mini-eachine-e010-clone
I'd like to add a note in the manual/wiki for those XN297L @ 250 kbps (sub)protocols, but I'm not sure how to phrase it without being too technical. To make it short, the xn297(L) has a ~+200 kHz frequency drift compared to the nrf24l01, that's not an issue @ 1 Mbps but with 250 kbps the xn297l has a tighter oscillator accuracy requirement (20ppm vs 60ppm) thus not enough selectivity to cope with this drift sometimes. Success depends only on the (in)accuracy of the oscillators in the tx and rx, you can even have 2 of those quads with one working perfectly while the other does not bind at all.
I should make some tests the other way round, emulating a nrf24l01 with a XN297L, if it works well (there's no reason it doesn't ...) maybe we could tell the 4-in-1 manufacturers to use XN297L instead of nrf24l01 in the future as its base frequency can be fine tuned (same as the 3 other transceivers) and so far we've more xn297 protocols than nrf24l01 anyway. Also, it has an internal PA that can be set to 2 dBm (up to 13 dBm but that would saturate our PA), that would allow 150mW for nrf24l01/xn297 protocols.","My english is limited!
I  i  i  !",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,836,2019-03-25T10:11:10Z,2019-04-02T22:47:20Z,2019-04-22T13:26:43Z,MERGED,True,14,3,1,https://github.com/goebish,Protocol for TDR Phoenix Mini,5,['Protocol'],https://github.com/DeviationTX/deviation/pull/836,https://github.com/goebish,18,https://github.com/DeviationTX/deviation/pull/836#issuecomment-485381534,"Add ""Phoenix"" format option to the MJXq protocol.
Channel 5: arm
This is a clone of the EAchine E010 with altitude hold, same as the E010 protocol it's using XN297L @ 250 kbps and doesn't work well with every nrf24l01 modules.
https://www.deviationtx.com/forum/protocol-development/8314-tdr-phoenix-mini-eachine-e010-clone
I'd like to add a note in the manual/wiki for those XN297L @ 250 kbps (sub)protocols, but I'm not sure how to phrase it without being too technical. To make it short, the xn297(L) has a ~+200 kHz frequency drift compared to the nrf24l01, that's not an issue @ 1 Mbps but with 250 kbps the xn297l has a tighter oscillator accuracy requirement (20ppm vs 60ppm) thus not enough selectivity to cope with this drift sometimes. Success depends only on the (in)accuracy of the oscillators in the tx and rx, you can even have 2 of those quads with one working perfectly while the other does not bind at all.
I should make some tests the other way round, emulating a nrf24l01 with a XN297L, if it works well (there's no reason it doesn't ...) maybe we could tell the 4-in-1 manufacturers to use XN297L instead of nrf24l01 in the future as its base frequency can be fine tuned (same as the 3 other transceivers) and so far we've more xn297 protocols than nrf24l01 anyway. Also, it has an internal PA that can be set to 2 dBm (up to 13 dBm but that would saturate our PA), that would allow 150mW for nrf24l01/xn297 protocols.","No worries, it's good enough, but go to the forums ;)
https://www.deviationtx.com/forum/protocol-development",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,836,2019-03-25T10:11:10Z,2019-04-02T22:47:20Z,2019-04-22T13:26:43Z,MERGED,True,14,3,1,https://github.com/goebish,Protocol for TDR Phoenix Mini,5,['Protocol'],https://github.com/DeviationTX/deviation/pull/836,https://github.com/alanchan2772,19,https://github.com/DeviationTX/deviation/pull/836#issuecomment-485381685,"Add ""Phoenix"" format option to the MJXq protocol.
Channel 5: arm
This is a clone of the EAchine E010 with altitude hold, same as the E010 protocol it's using XN297L @ 250 kbps and doesn't work well with every nrf24l01 modules.
https://www.deviationtx.com/forum/protocol-development/8314-tdr-phoenix-mini-eachine-e010-clone
I'd like to add a note in the manual/wiki for those XN297L @ 250 kbps (sub)protocols, but I'm not sure how to phrase it without being too technical. To make it short, the xn297(L) has a ~+200 kHz frequency drift compared to the nrf24l01, that's not an issue @ 1 Mbps but with 250 kbps the xn297l has a tighter oscillator accuracy requirement (20ppm vs 60ppm) thus not enough selectivity to cope with this drift sometimes. Success depends only on the (in)accuracy of the oscillators in the tx and rx, you can even have 2 of those quads with one working perfectly while the other does not bind at all.
I should make some tests the other way round, emulating a nrf24l01 with a XN297L, if it works well (there's no reason it doesn't ...) maybe we could tell the 4-in-1 manufacturers to use XN297L instead of nrf24l01 in the future as its base frequency can be fine tuned (same as the 3 other transceivers) and so far we've more xn297 protocols than nrf24l01 anyway. Also, it has an internal PA that can be set to 2 dBm (up to 13 dBm but that would saturate our PA), that would allow 150mW for nrf24l01/xn297 protocols.","Ok
I open a topic on  the forum (protocol development), thanks! Hah",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,836,2019-03-25T10:11:10Z,2019-04-02T22:47:20Z,2019-04-22T13:26:43Z,MERGED,True,14,3,1,https://github.com/goebish,Protocol for TDR Phoenix Mini,5,['Protocol'],https://github.com/DeviationTX/deviation/pull/836,https://github.com/alanchan2772,20,https://github.com/DeviationTX/deviation/pull/836#issuecomment-485410301,"Add ""Phoenix"" format option to the MJXq protocol.
Channel 5: arm
This is a clone of the EAchine E010 with altitude hold, same as the E010 protocol it's using XN297L @ 250 kbps and doesn't work well with every nrf24l01 modules.
https://www.deviationtx.com/forum/protocol-development/8314-tdr-phoenix-mini-eachine-e010-clone
I'd like to add a note in the manual/wiki for those XN297L @ 250 kbps (sub)protocols, but I'm not sure how to phrase it without being too technical. To make it short, the xn297(L) has a ~+200 kHz frequency drift compared to the nrf24l01, that's not an issue @ 1 Mbps but with 250 kbps the xn297l has a tighter oscillator accuracy requirement (20ppm vs 60ppm) thus not enough selectivity to cope with this drift sometimes. Success depends only on the (in)accuracy of the oscillators in the tx and rx, you can even have 2 of those quads with one working perfectly while the other does not bind at all.
I should make some tests the other way round, emulating a nrf24l01 with a XN297L, if it works well (there's no reason it doesn't ...) maybe we could tell the 4-in-1 manufacturers to use XN297L instead of nrf24l01 in the future as its base frequency can be fine tuned (same as the 3 other transceivers) and so far we've more xn297 protocols than nrf24l01 anyway. Also, it has an internal PA that can be set to 2 dBm (up to 13 dBm but that would saturate our PA), that would allow 150mW for nrf24l01/xn297 protocols.","Help to find the protocol for JJRC H31 please!
Help!Help!Help! Help to find the protocol for JJRC H31,Goebish and HappyHarry,please come in!
The JJRC H31 is inexpensive, robust, good flight times, simple and straightforward basic quad to just tool around with. So please! please! please!",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,836,2019-03-25T10:11:10Z,2019-04-02T22:47:20Z,2019-04-22T13:26:43Z,MERGED,True,14,3,1,https://github.com/goebish,Protocol for TDR Phoenix Mini,5,['Protocol'],https://github.com/DeviationTX/deviation/pull/836,https://github.com/alanchan2772,21,https://github.com/DeviationTX/deviation/pull/836#issuecomment-485417909,"Add ""Phoenix"" format option to the MJXq protocol.
Channel 5: arm
This is a clone of the EAchine E010 with altitude hold, same as the E010 protocol it's using XN297L @ 250 kbps and doesn't work well with every nrf24l01 modules.
https://www.deviationtx.com/forum/protocol-development/8314-tdr-phoenix-mini-eachine-e010-clone
I'd like to add a note in the manual/wiki for those XN297L @ 250 kbps (sub)protocols, but I'm not sure how to phrase it without being too technical. To make it short, the xn297(L) has a ~+200 kHz frequency drift compared to the nrf24l01, that's not an issue @ 1 Mbps but with 250 kbps the xn297l has a tighter oscillator accuracy requirement (20ppm vs 60ppm) thus not enough selectivity to cope with this drift sometimes. Success depends only on the (in)accuracy of the oscillators in the tx and rx, you can even have 2 of those quads with one working perfectly while the other does not bind at all.
I should make some tests the other way round, emulating a nrf24l01 with a XN297L, if it works well (there's no reason it doesn't ...) maybe we could tell the 4-in-1 manufacturers to use XN297L instead of nrf24l01 in the future as its base frequency can be fine tuned (same as the 3 other transceivers) and so far we've more xn297 protocols than nrf24l01 anyway. Also, it has an internal PA that can be set to 2 dBm (up to 13 dBm but that would saturate our PA), that would allow 150mW for nrf24l01/xn297 protocols.","Sorry , I don't know how to post the picture!",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,839,2019-03-31T21:30:54Z,2019-04-01T04:29:30Z,2019-04-01T19:47:27Z,MERGED,True,2,6,1,https://github.com/hexfet,Fix oled display problem where display remained dark,1,[],https://github.com/DeviationTX/deviation/pull/839,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/839,Code refactoring missed a constant change that affected SPI clock speed to display.,Code refactoring missed a constant change that affected SPI clock speed to display.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,839,2019-03-31T21:30:54Z,2019-04-01T04:29:30Z,2019-04-01T19:47:27Z,MERGED,True,2,6,1,https://github.com/hexfet,Fix oled display problem where display remained dark,1,[],https://github.com/DeviationTX/deviation/pull/839,https://github.com/PhracturedBlue,2,https://github.com/DeviationTX/deviation/pull/839#issuecomment-478399543,Code refactoring missed a constant change that affected SPI clock speed to display.,"What am I missing, the comment should still apply, unshifting OLED_SPI_RATE seems appropriate",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,839,2019-03-31T21:30:54Z,2019-04-01T04:29:30Z,2019-04-01T19:47:27Z,MERGED,True,2,6,1,https://github.com/hexfet,Fix oled display problem where display remained dark,1,[],https://github.com/DeviationTX/deviation/pull/839,https://github.com/hexfet,3,https://github.com/DeviationTX/deviation/pull/839#issuecomment-478412726,Code refactoring missed a constant change that affected SPI clock speed to display.,OLED_SPI_RATE is defined as SPI_CR1_BR_FPCLK_DIV_8 which is already the un-shifted value.  That's what's expected by spi_set_baudrate_prescaler.  The value in the definition initialization is shifted when spi_init_master is called in _spi_init.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,840,2019-04-01T21:10:20Z,2019-12-19T16:46:56Z,2019-12-19T16:46:56Z,MERGED,True,1517,2329,39,https://github.com/hexfet,Configuration of Crossfire devices,10,[],https://github.com/DeviationTX/deviation/pull/840,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/840,"The CRSF configuration system works by message exchange between the transmitter (deviation) and the TBS devices. This implementation has been tested with both full-size and micro Crossfire transmitters and Nano RX receiver. Each TBS component supplies parameters defining its configuration options and menu structure.
The CRSF configuration page is started by clicking on the protocol name. One step of the page init function is to send a TBS message to discover available devices. The device names are then shown in a scrollable (currently limited to four entries maximum). The device info response includes the number of parameters associated with the device. Clicking on a device name starts the crsfdevice page, which starts a sequence of messages to retrieve all the device parameters. These are displayed according to the menu structure defined in the parameter information by TBS. When a setting is changed a ""set parameter"" message is sent to the TBS device, which responds with a parameter info message that includes any changes made. Parameters of type COMMAND open a dialog to show the command status. Some commands require an Ok/Cancel response from the user before proceeding (but whether a command needs this check isn't known until the command is started...).
The TBS menu information takes considerable RAM space (e.g. 2401 bytes for Nano Diversity RX). This implementation does not attempt any compression of the menu info as that will add considerable messiness. A new target definition SUPPORT_CRSF_CONFIG controls whether the code is included in a build. This PR has CRSF configuration enabled for all non-modular builds.","The CRSF configuration system works by message exchange between the transmitter (deviation) and the TBS devices. This implementation has been tested with both full-size and micro Crossfire transmitters and Nano RX receiver. Each TBS component supplies parameters defining its configuration options and menu structure.
The CRSF configuration page is started by clicking on the protocol name. One step of the page init function is to send a TBS message to discover available devices. The device names are then shown in a scrollable (currently limited to four entries maximum). The device info response includes the number of parameters associated with the device. Clicking on a device name starts the crsfdevice page, which starts a sequence of messages to retrieve all the device parameters. These are displayed according to the menu structure defined in the parameter information by TBS. When a setting is changed a ""set parameter"" message is sent to the TBS device, which responds with a parameter info message that includes any changes made. Parameters of type COMMAND open a dialog to show the command status. Some commands require an Ok/Cancel response from the user before proceeding (but whether a command needs this check isn't known until the command is started...).
The TBS menu information takes considerable RAM space (e.g. 2401 bytes for Nano Diversity RX). This implementation does not attempt any compression of the menu info as that will add considerable messiness. A new target definition SUPPORT_CRSF_CONFIG controls whether the code is included in a build. This PR has CRSF configuration enabled for all non-modular builds.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,840,2019-04-01T21:10:20Z,2019-12-19T16:46:56Z,2019-12-19T16:46:56Z,MERGED,True,1517,2329,39,https://github.com/hexfet,Configuration of Crossfire devices,10,[],https://github.com/DeviationTX/deviation/pull/840,https://github.com/hexfet,2,https://github.com/DeviationTX/deviation/pull/840#issuecomment-484340581,"The CRSF configuration system works by message exchange between the transmitter (deviation) and the TBS devices. This implementation has been tested with both full-size and micro Crossfire transmitters and Nano RX receiver. Each TBS component supplies parameters defining its configuration options and menu structure.
The CRSF configuration page is started by clicking on the protocol name. One step of the page init function is to send a TBS message to discover available devices. The device names are then shown in a scrollable (currently limited to four entries maximum). The device info response includes the number of parameters associated with the device. Clicking on a device name starts the crsfdevice page, which starts a sequence of messages to retrieve all the device parameters. These are displayed according to the menu structure defined in the parameter information by TBS. When a setting is changed a ""set parameter"" message is sent to the TBS device, which responds with a parameter info message that includes any changes made. Parameters of type COMMAND open a dialog to show the command status. Some commands require an Ok/Cancel response from the user before proceeding (but whether a command needs this check isn't known until the command is started...).
The TBS menu information takes considerable RAM space (e.g. 2401 bytes for Nano Diversity RX). This implementation does not attempt any compression of the menu info as that will add considerable messiness. A new target definition SUPPORT_CRSF_CONFIG controls whether the code is included in a build. This PR has CRSF configuration enabled for all non-modular builds.",Thanks.  I enabled the feature for all non-modular builds.  Had to increase the memory allocation to support the diversity receiver.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,842,2019-04-02T01:28:40Z,2019-04-03T03:58:40Z,2019-04-03T03:58:45Z,MERGED,True,26,16,3,https://github.com/PhracturedBlue,Fix 3x2 switch configu for devo7e,2,[],https://github.com/DeviationTX/deviation/pull/842,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/842,Fixes #838,Fixes #838,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,843,2019-04-02T13:40:13Z,2019-04-03T00:23:22Z,2019-04-03T00:23:28Z,MERGED,True,16,6,2,https://github.com/howard0su,Fix usbhid on Windows,1,[],https://github.com/DeviationTX/deviation/pull/843,https://github.com/howard0su,1,https://github.com/DeviationTX/deviation/pull/843,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,844,2019-04-02T21:43:49Z,2019-04-07T00:39:12Z,2019-04-07T00:39:13Z,MERGED,True,12,1,1,https://github.com/goebish,[E016H protocol] Add calibration flag,1,['Protocol'],https://github.com/DeviationTX/deviation/pull/844,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/844,"Add calibration flag for E016H format.
Works same as stock controller, set both sticks to external bottom corners to start accelerometer calibration.","Add calibration flag for E016H format.
Works same as stock controller, set both sticks to external bottom corners to start accelerometer calibration.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,844,2019-04-02T21:43:49Z,2019-04-07T00:39:12Z,2019-04-07T00:39:13Z,MERGED,True,12,1,1,https://github.com/goebish,[E016H protocol] Add calibration flag,1,['Protocol'],https://github.com/DeviationTX/deviation/pull/844,https://github.com/hexfet,2,https://github.com/DeviationTX/deviation/pull/844#issuecomment-479269658,"Add calibration flag for E016H format.
Works same as stock controller, set both sticks to external bottom corners to start accelerometer calibration.",Would it be better to use a channel to control the calibration flag?  Then users can set up a mixer for either stick activation or use a button or switch.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,844,2019-04-02T21:43:49Z,2019-04-07T00:39:12Z,2019-04-07T00:39:13Z,MERGED,True,12,1,1,https://github.com/goebish,[E016H protocol] Add calibration flag,1,['Protocol'],https://github.com/DeviationTX/deviation/pull/844,https://github.com/goebish,3,https://github.com/DeviationTX/deviation/pull/844#issuecomment-479617610,"Add calibration flag for E016H format.
Works same as stock controller, set both sticks to external bottom corners to start accelerometer calibration.","Most of those small quads can be calibrated like that, but only a few ones send a flag, I don't think that's worth using an extra channel.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,845,2019-04-04T01:11:08Z,2019-04-04T04:25:44Z,2019-04-04T04:25:44Z,MERGED,True,1,1,1,https://github.com/PhracturedBlue,Fix broken trim due to addon-switches,1,[],https://github.com/DeviationTX/deviation/pull/845,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/845,Button mask wasn't computed properly when extra-switches were enabled.  As reported in #838,Button mask wasn't computed properly when extra-switches were enabled.  As reported in #838,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,846,2019-04-06T10:31:48Z,2019-04-30T15:47:58Z,2019-05-04T18:51:40Z,MERGED,True,758,8,23,https://github.com/TheRealMoeder,Add tool to scan for and dump XN297 packets,32,['Enhancement'],https://github.com/DeviationTX/deviation/pull/846,https://github.com/TheRealMoeder,1,https://github.com/DeviationTX/deviation/pull/846,"With the help of @goebish I added a feature to scan for valid XN297 packets and dump their payload. This will help in identifying minor protocol modifications (e.g. new flags) and deviating protocols which run on integrated MCU+XN297 controllers.
To Do:

 Add text GUI
 Move scanner and XN297Dump together into a new RF Tools submenu should do this in seperate PR
 remove xn297dump from default devo7e build
 use common scramble table for CRC check -> goebish will do that
 Move scanner and xn297dump memory into union to save memory not really worth the saving
 Add packet interval measurement (accuracy should be within 10-20 µs for most protocols if averaging is long enough
 Test modular build -> modular build works fine on t8sg_v2_plus and even fits current devo7e if enabled (weighs 1.47 kB)
 Rework dumper to enable unscrambled mode and other features
 Allow dumping to datalog.bin","With the help of @goebish I added a feature to scan for valid XN297 packets and dump their payload. This will help in identifying minor protocol modifications (e.g. new flags) and deviating protocols which run on integrated MCU+XN297 controllers.
To Do:

 Add text GUI
 Move scanner and XN297Dump together into a new RF Tools submenu should do this in seperate PR
 remove xn297dump from default devo7e build
 use common scramble table for CRC check -> goebish will do that
 Move scanner and xn297dump memory into union to save memory not really worth the saving
 Add packet interval measurement (accuracy should be within 10-20 µs for most protocols if averaging is long enough
 Test modular build -> modular build works fine on t8sg_v2_plus and even fits current devo7e if enabled (weighs 1.47 kB)
 Rework dumper to enable unscrambled mode and other features
 Allow dumping to datalog.bin",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,846,2019-04-06T10:31:48Z,2019-04-30T15:47:58Z,2019-05-04T18:51:40Z,MERGED,True,758,8,23,https://github.com/TheRealMoeder,Add tool to scan for and dump XN297 packets,32,['Enhancement'],https://github.com/DeviationTX/deviation/pull/846,https://github.com/TheRealMoeder,2,https://github.com/DeviationTX/deviation/pull/846#issuecomment-480610888,"With the help of @goebish I added a feature to scan for valid XN297 packets and dump their payload. This will help in identifying minor protocol modifications (e.g. new flags) and deviating protocols which run on integrated MCU+XN297 controllers.
To Do:

 Add text GUI
 Move scanner and XN297Dump together into a new RF Tools submenu should do this in seperate PR
 remove xn297dump from default devo7e build
 use common scramble table for CRC check -> goebish will do that
 Move scanner and xn297dump memory into union to save memory not really worth the saving
 Add packet interval measurement (accuracy should be within 10-20 µs for most protocols if averaging is long enough
 Test modular build -> modular build works fine on t8sg_v2_plus and even fits current devo7e if enabled (weighs 1.47 kB)
 Rework dumper to enable unscrambled mode and other features
 Allow dumping to datalog.bin",@PhracturedBlue can you test if color gui is usable on a real tx? Not sure with the screen update rates...,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,847,2019-04-06T12:52:19Z,2019-04-06T16:38:55Z,2019-04-06T16:38:55Z,MERGED,True,1,1,1,https://github.com/PhracturedBlue,Fix emu devof7,1,[],https://github.com/DeviationTX/deviation/pull/847,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/847,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,848,2019-04-06T19:06:17Z,2019-12-14T07:55:41Z,2019-12-14T07:55:41Z,CLOSED,False,41,16,3,https://github.com/PhracturedBlue,More efficient screen updates on devo12,2,[],https://github.com/DeviationTX/deviation/pull/848,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/848,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,849,2019-04-09T16:37:56Z,2019-04-28T00:08:15Z,2019-04-28T00:08:30Z,MERGED,True,151,52,10,https://github.com/hexfet,Updates for S.Port telemetry,10,['Enhancement'],https://github.com/DeviationTX/deviation/pull/849,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/849,"Add support for S.Port sensors ACCX, ACCY, ACCZ, and AIR_SPEED
Add support for Qlrs sensors PITCH and ROLL (displayed in same screen position as ACCX and ACCY)
Add telemetry test page value reset (long press UP) for PXX protocol
Clean up telemetry value reset code","Add support for S.Port sensors ACCX, ACCY, ACCZ, and AIR_SPEED
Add support for Qlrs sensors PITCH and ROLL (displayed in same screen position as ACCX and ACCY)
Add telemetry test page value reset (long press UP) for PXX protocol
Clean up telemetry value reset code",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,849,2019-04-09T16:37:56Z,2019-04-28T00:08:15Z,2019-04-28T00:08:30Z,MERGED,True,151,52,10,https://github.com/hexfet,Updates for S.Port telemetry,10,['Enhancement'],https://github.com/DeviationTX/deviation/pull/849,https://github.com/TheRealMoeder,2,https://github.com/DeviationTX/deviation/pull/849#issuecomment-481707617,"Add support for S.Port sensors ACCX, ACCY, ACCZ, and AIR_SPEED
Add support for Qlrs sensors PITCH and ROLL (displayed in same screen position as ACCX and ACCY)
Add telemetry test page value reset (long press UP) for PXX protocol
Clean up telemetry value reset code","200 byte RAM increase for devo7e, probably to the large gui_label array which is increased by 4, although not needed in non HAS_EXTENDED_TELEMETRY",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,851,2019-04-11T21:16:09Z,2019-04-18T22:29:38Z,2019-04-18T22:29:38Z,CLOSED,False,216,63,2,https://github.com/goebish,Protocol gd00x v2,6,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/851,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/851,"Add V2 sub-format to GD00X protocol
Channel 5: Aileron trim
Channel 6: Leds on / off
Forum: https://www.deviationtx.com/forum/protocol-development/8120-c-17-transport?start=40#73520","Add V2 sub-format to GD00X protocol
Channel 5: Aileron trim
Channel 6: Leds on / off
Forum: https://www.deviationtx.com/forum/protocol-development/8120-c-17-transport?start=40#73520",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,851,2019-04-11T21:16:09Z,2019-04-18T22:29:38Z,2019-04-18T22:29:38Z,CLOSED,False,216,63,2,https://github.com/goebish,Protocol gd00x v2,6,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/851,https://github.com/goebish,2,https://github.com/DeviationTX/deviation/pull/851#issuecomment-484020310,"Add V2 sub-format to GD00X protocol
Channel 5: Aileron trim
Channel 6: Leds on / off
Forum: https://www.deviationtx.com/forum/protocol-development/8120-c-17-transport?start=40#73520",todo: convert to cc2500,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/853,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol","Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/konstantint,2,https://github.com/DeviationTX/deviation/pull/853#issuecomment-631125492,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol","Just curious, what is blocking this PR? I have a multiprotocol module and this particular drone, could I help with development here?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/goebish,3,https://github.com/DeviationTX/deviation/pull/853#issuecomment-631249448,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol","That's because this protocol isn't complete, we need someone with a stock TX to make some more XN297 dumps (with the tool built-in DeviationTX), please read the thread that's linked in the first comment then post in the forums if you're willing to help.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/goebish,4,https://github.com/DeviationTX/deviation/pull/853#issuecomment-631297858,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol",If you do not have a DeviationTX radio but OpenTX+MultiModule you can make a custom build of the MultiModule to enable the XN297 dump protocol.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/konstantint,5,https://github.com/DeviationTX/deviation/pull/853#issuecomment-631829211,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol","Nice.
I could not register myself at the DeviationTX forum to continue the original discussion there (I'm not receiving the confirmation email somewhy), but perhaps this is just as good a forum.
So I flashed the XN297Dump firmware to the MultiModule and following the suggestions in the post seem to have sniffed out the following:

Binding is happening on channel 2, with payload  00 05 00 0A 46 4A 41 47 00 00 40 46 A5 4A F1 18.

RX: 44711us C=2 S=Y A= CC CC CC CC CC P(16)= 00 05 00 0A 46 4A 41 47 00 00 40 46 A5 4A F1 18


Channels 65, 71, 70 and 74 are used for transmission with the following timings:

Channel order:
65:     0us
71:  7456us
70: 14882us
74: 22348us


The payload seems to work as follows:

P: 00 41 00 0A 00 80 80 80 00    00 40 46 00 49 F1 18
      Ch    T? Th Ru El Ai HL/RT ET AT    Ra Crc

Ai = Aileron. 80 center, 01..41..60..70 to the left, 81..C1..E0..F0 to the right
     (depending on the rate, i.e. with rate 0 maximums are 41/C1,
	  with rate 1 they are 60/E0 and with rate 1 max is 70/F0)
El = Elevator. 80 center, 01..41..60..70 down, 81..C1..E0..F0 up
Ru = Rudder. 80 center, 01..41..60..70 left, 81..C1..E0..F0 right
Th = Throttle. 0..FF
T? = Some throttle flag. 0A when Thr <= B6, 0E when Thr >= B7, sometimes 06 when moving Ele/Ail
HL = Headless mode. 00 normal, 40 headless
ET = Elevator trim, 00 when not used, 20..25 when trimmed up, 0..1F when trimmed down
AT = Aileron trim, 40 when not used, 40..5F when trimmed left, 61..7F when trimmed right
RT = Rudder trim, 00 when not used, 01..1F when trimmed left, 20..3F when trimmed right (20==00)
Ra = Rate, 00-01-02
Crc = Some kind of checksum.
Chn = 47 on channel 65, 46 on channel 71, 4A on channel 70, 41 on channel 74

Let me know if I can offer more help. As noted, I don't have a DeviationTX transmitter, but I suspect it should be easy to try a proof of concept implementation on the multiprotocol module, right (mine is the STM-based Jumper4in1).",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/goebish,6,https://github.com/DeviationTX/deviation/pull/853#issuecomment-631914083,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol","Can you try to implement it in MPM ?
My first try for DeviationTX is here:
https://github.com/DeviationTX/deviation/pull/853/files#diff-9cd9071ab94572aca0eef6e93bc2751d
It works but flips are permanently enabled, find the wrong flag and fix it ;)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/pascallanger,7,https://github.com/DeviationTX/deviation/pull/853#issuecomment-631922850,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol","My XN297Dump is working quite well ;-) It finds the freq being used, order and timing on its own :D
Not sure why it flips randomely with your code goebish unless it flips when losing connectivity since the timing is wrong...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/goebish,8,https://github.com/DeviationTX/deviation/pull/853#issuecomment-631923234,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol","I don't know either, the guy who started to capture the packets stopped responding on the forums :(",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/goebish,9,https://github.com/DeviationTX/deviation/pull/853#issuecomment-631924179,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol","My code was only for testing, packet period is set with a protocol option",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/pascallanger,10,https://github.com/DeviationTX/deviation/pull/853#issuecomment-631960930,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol",I'm currently adding the proto to Multi.,True,"{'THUMBS_UP': ['https://github.com/goebish', 'https://github.com/konstantint']}"
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/pascallanger,11,https://github.com/DeviationTX/deviation/pull/853#issuecomment-631970065,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol","@konstantint I'm wondering about this:

Ai = Aileron. 80 center, 01..41..60..70 to the left, 81..C1..E0..F0 to the right
(depending on the rate, i.e. with rate 0 maximums are 41/C1,
with rate 1 they are 60/E0 and with rate 1 max is 70/F0)

For me it doesn't make sense...
When you move from far left to far right, should it be instead 70..60..41..01, 80 center, 81..C1..E0..F0 ?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/goebish,12,https://github.com/DeviationTX/deviation/pull/853#issuecomment-631971568,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol",I'd just map it to 00-80-FF,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/konstantint,13,https://github.com/DeviationTX/deviation/pull/853#issuecomment-631975357,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol","That's what I meant, the signal is 70 on the far left and F0 on the far right, which looks unintuitive to me, I'd expect 00 at the far left. However, as you move the stick to the left, the value first changes from 80 to 01 and then starts increasing.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/konstantint,14,https://github.com/DeviationTX/deviation/pull/853#issuecomment-631975945,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol","@pascallanger, indeed, the auto-search functionality of your XN297Dump is amazing!",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/pascallanger,15,https://github.com/DeviationTX/deviation/pull/853#issuecomment-631978295,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol",@konstantint How do you do flips on this quad? It's not in your assessment.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/konstantint,16,https://github.com/DeviationTX/deviation/pull/853#issuecomment-631985876,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol","Strangely, nothing seemed to change when I clicked the flip shoulder button. I now think that maybe it only works at some throttle value or only on some of the four channels. I'll try to look into it again soon.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/konstantint,17,https://github.com/DeviationTX/deviation/pull/853#issuecomment-631995982,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol","OK, I found the flip. Apparently, the signal for the flip is setting the corresponding channel to FF or 7F momentarily - the flip button on the shoulder itself is not transmitted.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/pascallanger,18,https://github.com/DeviationTX/deviation/pull/853#issuecomment-631997752,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol","@konstantint I've updated the MPM master on GitHub with the JJRC345 protocol.
By default I'm using your TX ID and RF freqs but to test with any ID and RF freq you need to open the file JJRC345_nrf24l01.ino and comment #define JJRC345_FORCE_ID (add // at the begining of the line)
I've also pushed a bit further the channels to: 7F..01, 80 center, 81..FF. Let's see if your quad flips when you go at full deflection to the right.
Pascal",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/pascallanger,19,https://github.com/DeviationTX/deviation/pull/853#issuecomment-631999187,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol","OK, I found the flip. Apparently, the signal for the flip is setting the corresponding channel to FF or 7F momentarily - the flip button on the shoulder itself is not transmitted.

Our posts have crossed...
How do you select the flip on AIL/ELE? Can you also select a flip CW and CCW?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/konstantint,20,https://github.com/DeviationTX/deviation/pull/853#issuecomment-632027689,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol","To make a flip you first click the shoulder button, the TX starts beeping, after which you move the AIL/ELE stick in the desired direction, which makes the transmitter send the maximum value for that channel in that direction.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/konstantint,21,https://github.com/DeviationTX/deviation/pull/853#issuecomment-632029354,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol","Out of curiosity I decided to make sure the chosen channels are correct and did some extra measurements. The auto-scan functionality seems to reliably reproduce the result like the following:
Channel order:
65:     0us
71:  7441us
70: 14890us
74: 22351us

However, if I manually tune in to some of these channels, things look a bit different. So I fixed the stock TX sticks to a nonzero position with a rubber band and tuned for each of the channels between 65 and 79 for 30 seconds, counting the number of packets received, which of those were bad and good, and looking at the ""Channel"" byte of the good channels. The results look like that:
Total packets:

Valid packets by channel byte:",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/konstantint,22,https://github.com/DeviationTX/deviation/pull/853#issuecomment-632030579,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol","I'll try compiling the MPM now, haven't done that before.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/pascallanger,23,https://github.com/DeviationTX/deviation/pull/853#issuecomment-632060343,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol","Ok let me know if you run into troubles but it should be straight forward...
Otherwise give me what type of build you need.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/konstantint,24,https://github.com/DeviationTX/deviation/pull/853#issuecomment-632131531,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol","Right, I tried your protocol code. It kind-of-works in the sense that it sometimes manages to bind and the binding sometimes manages to persist long enough (~5-10 seconds or so) to try controlling the drone. The controls seem to be correct (also, the flips happen when the sticks are moved to the extreme positions). Unfortunately, the connection is very flaky and is often lost (the several cases where it binds, senses some throttle and flies away immediately losing the binding gives a whole new meaning to the term ""Bind and Fly"" for me).
I tried removing the FORCE_ID definition and it kind-of-works as well, but it feels worse (not sure if I'm just imagining things).
Would tuning the packet period help? I tried some values in vain. It would be nice if this could be done via the option parameter, because reflashing every new value is annoying (and I'm not familiar enough with the code to find how to do this quickly).
Having read the code the whole frequency hopping thing makes sense to me now, however I did a couple of attempts to listen in to the stock TX and noticed that it seems to mostly hop between 0x41 and 0x47 (i.e. all the packets on channel 0x41 point to 0x47 and vice versa). There are very rare packets on the two other channels and those somehow seem to also only point only between them.
Another unclear thing is with the binding channel. I'm pretty sure only channel 2 is used to send the binding packets - nothing is sent on channel 5 neither during nor after binding. Your code sets it to 5 (apparently because the number is mentioned in the packet) and it works fine none the less. I'm not sure whether this could be a problem.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/pascallanger,25,https://github.com/DeviationTX/deviation/pull/853#issuecomment-632151567,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol","I've just pushed a new code on master with the debug outputs for the rf_ch+packet. It matches what you've posted above... Flip should not happen anymore when you go to full extreme, instead you need to set CH5 while moving the stick in the direction you want the flip to happen.
Can you post the full debug output (copy, paste in a new file and upload it somewhere) of the XN297Dump in auto mode including adding at the end moving the sticks? I want to check that the cheksum is good for all packets as an example but also the timing on the different channels and other things.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/pascallanger,26,https://github.com/DeviationTX/deviation/pull/853#issuecomment-632170239,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol","Looking at the pictures on the Deviation forum the current checksum calculation cannot be applied to all packets. So I really need a full dump with loads of movement on the sticks and buttons to see how the checksum calculation changes.
I've pushed another version on Master with FLIP on CH5, HeadLess on CH6 and RTH on CH7.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/pascallanger,27,https://github.com/DeviationTX/deviation/pull/853#issuecomment-632177495,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol","If you think bind is difficult due to the channel 5 being used, change this line:
    NRF24L01_WriteReg(NRF24L01_05_RF_CH, JJRC345_RF_BIND_CHANNEL);	// Bind channel
by
    NRF24L01_WriteReg(NRF24L01_05_RF_CH, 2);	// Bind channel",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/konstantint,28,https://github.com/DeviationTX/deviation/pull/853#issuecomment-632274238,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol","Here is the log of the auto-scan routine. You are right - the checksum computation you suggested seems to only be correct about half the time, and this may be the reason for the dropouts.
I also think it is a bit strange that not all of the four channels are used equally, which means the stock TX is not really doing a uniform hopping at all. I'll record small sessions for each of the four channels to make sure.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/konstantint,29,https://github.com/DeviationTX/deviation/pull/853#issuecomment-632274980,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol","If you think bind is difficult due to the channel 5 being used, change this line:

I tried changing the JJRC345_RF_BIND_CHANNEL constant itself (and hard-coding 0x05 in the binding packet instead). Seems to make more sense, right?
But it does not affect things much - the quad eventually binds for either channel (perhaps trying at a longer distance would show the difference).",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/konstantint,30,https://github.com/DeviationTX/deviation/pull/853#issuecomment-632286393,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol","Here  is the log, obtained by playing with the sticks and buttons while tuning in to the four presumably main channels ~ 1-1.5 minutes each.
Things to note:

The checksum is equal to sum(packet[0:13]) + 0xf8 only in about a third of the cases.
Packets on channel 0x41 are most frequent (950) and always contain 0x47 in their second byte
Packets on channel 0x47 are the next most frequent (275) and in all except two cases refer to 0x41 in their second byte. In two packets this byte is 0x46
Then there are 175 packets on channel 0x4A which almost always contain the byte 0x4A. In 6 cases it was 0x41, though.
Channel 0x46 is basically silent - there were three stray packets (mentioning 0x4A).

Maybe I'm misunderstanding how the packet capture works in XN297Dump, but if it simply reports everything that flows through the air, this does not look like a cyclic frequency hopping.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/konstantint,31,https://github.com/DeviationTX/deviation/pull/853#issuecomment-632295294,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol","Another observation: the correct checksum can be computed by adding the first 13 packet bytes except the fourth one plus two:
checksum(packet) = (sum(packet[0:13]) - packet[3] + 2) % 256
The meaning of the fourth byte still evades me, though. It can have four different values: 0A, 0E (most popular) and 06, 12 (rarely). The lowest two bits are always 10, the bits 2..5 look like some kind of flags then. Or, maybe it is just another checksum.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/konstantint,32,https://github.com/DeviationTX/deviation/pull/853#issuecomment-632346680,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol","Another curiosity. The bind seems to persist as long as I am moving the stick around actively. As soon as I stop doing it, the signal latency quickly (within milliseconds) increases, the quad stops responding, and, soon after (still within a second), starts blinking indicating a lost transmitter.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/pascallanger,33,https://github.com/DeviationTX/deviation/pull/853#issuecomment-632361357,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol","checksum(packet) = (sum(packet[0:13]) - packet[3] + 2) % 256

Good finding. I've just posted another version with the corrected checksum. I'm guessing you might have already tried with it but if not please give it a go.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/pascallanger,34,https://github.com/DeviationTX/deviation/pull/853#issuecomment-632362616,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol","Another curiosity. The bind seems to persist as long as I am moving the stick around actively. As soon as I stop doing it, the signal latency quickly (within milliseconds) increases, the quad stops responding, and, soon after (still within a second), starts blinking indicating a lost transmitter.

I'm thinking this is because by moving the sticks he is receiving something (check , sum...) which is pleasing him so it stays locked to your signal. As soon as he has incorrect packets they start to deviate and it gives up.
Have you tried to bind making sure that all your sticks are well centered at 0% and -100% for throttle (may be by fixing all of them in OpenTX) to see how long it stays locked on the signal?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/pascallanger,35,https://github.com/DeviationTX/deviation/pull/853#issuecomment-632371416,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol","I've looked at your file(s) but they are a little too wild to draw any conclusion.
We need to narrow down the packet[3] value and see what's making it change.
For example don't touch the sticks but just the trims. Does packet[3] change for any values of the trims?
Same test with the features: RTH, headless, rate. Does packet[3] change for any values?
Leaving the trims centered and all the features desactivated, if you only move slowly rudder does the packet[3] value change?
Leaving the trims centered and all the features desactivated, if you only move slowly elevator does the packet[3] value change?
...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/konstantint,36,https://github.com/DeviationTX/deviation/pull/853#issuecomment-632374293,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol","Yes, the dumps were made by random stick movements hoping to find the checksum rule and are not helpful for figuring out packet[3].
More observations: the bind is not lost if I keep the aileron & elevator signal values above 0. Given that packet[3] does seem to change from A to E or 6 when the Ail/Ele stick is in the lower left region, I have a strong hunch that figuring out the mystery of packet[3] is the only thing left now. I'll eyeball the logs now a bit more.
Oh, btw, I can't seem to make use of the serial debug in the version I'm compiling myself - I'm uncommenting DEBUG_SERIAL and commenting out a couple of protocols to have the binary fit, but I don't see anything on the terminal.
The pre-built multi-stm-opentx-xn297dump-inv-ftdidebug-v1.3.0.95 talks fine to me. Any hint on what I'm missing here?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/konstantint,37,https://github.com/DeviationTX/deviation/pull/853#issuecomment-632399955,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol","OK, I think I know the rule now. The value of packet[3] depends on the sum of packet[0:13] (excluding packet[3], of course, or assuming it is initially 0). It is 06 when the sum is <0x1fe, otherwise it is 0A when the sum is <0x2fe, otherwise it is 0E when it is <0x3fe, or otherwise it is 12.
Another way to describe this would be as follows:
packet[3] = (sum(packet[0:13]) + 2) >> 8) * 4 + 2

(Apparently, there's an imaginary byte 02 somewhere at the beginning of the packet, given that it's the second checksum here that adds it to the sum of bytes)
I'll try it out now.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/konstantint,38,https://github.com/DeviationTX/deviation/pull/853#issuecomment-632403902,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol","Woohoo, it works! 🎉
So, to summarize, that's how you compute the checksum bytes:
packet[3] = 0;
uint16_t csum = 0x02;
for (uint8_t i = 0; i < 13; i++) csum += packet[i];
packet[13] = csum & 0xff;
packet[3] = (csum >> 8) * 4 + 2;

The headless and RTH switches work fine. The flip switch is unusable (basically, as soon as I turn it on, the quad starts flipping in random directions like crazy). I think the correct way to implement it would be something like this:
if(CH5_SW)	//Flip
{
	if(packet[6] == 0x70) packet[6] = 0x7F;
	else if (packet[6] == 0xF0) packet[6] = 0xFF;
	if (packet[7] == 0x70) packet[7] = 0x7F;
	else if (packet[7] == 0xF0) packet[7] = 0xFF;
}

As a last thing, I'll see whether binding on channel 2 rather than 5 works better at a distance now.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/konstantint,39,https://github.com/DeviationTX/deviation/pull/853#issuecomment-632408522,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol","Two last bits of information:

Binding on channel 5 is the right thing (although I still don't understand how come I see the binding packets from the stock TX on channel 2 rather than 5).
No need to hard-code the frequencies - the code works fine without #define JJRC345_FORCE_ID and a single call to calc_fh_channels(4) is enough in initialize_txid.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/konstantint,40,https://github.com/DeviationTX/deviation/pull/853#issuecomment-632409402,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol",An unrelated question. OpenTX seems to limit the max protocol number to 63 (so I had to remap this protocol to something else). Do you know whether this has been improved in the latest OpenTX releases (I'd prefer not to upgrade without a good reason).,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/goebish,41,https://github.com/DeviationTX/deviation/pull/853#issuecomment-632524930,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol","Yes, OpenTX 2.3 supports more than 64 protocols, you should upgrade, a lot of work has been done in 2.3 for MPM integration.
Good job on the checksum ;)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/pascallanger,42,https://github.com/DeviationTX/deviation/pull/853#issuecomment-632576812,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol","Awesome! You made it!
I've pushed a new code version on GitHub. Can you test it and see if we could call it final?
Flips were my bad, it was missing 0x... Let me know if it flips ok as it is or if the sensitivity needs to be decreased.
For serial debug, you need to do it from Arduino. Under ""Board: Multi 4-in-1"", you have Debug option.
For OpenTX, you should try the latest nightly 2.3.8, the release 2.3.8 is only a couple of days away. With this version you don't need custom anymore, the module tells the radio what to display like protocol name, sub protocol, option field... Also the protocols are ordered alphabetically and many more.
Pascal",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/konstantint,43,https://github.com/DeviationTX/deviation/pull/853#issuecomment-632604364,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol",I think you forgot to push the code to master.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/konstantint,44,https://github.com/DeviationTX/deviation/pull/853#issuecomment-632686193,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol","And before you commit your last version, let's add one extra change. Namely, replace the maximal values for the rud/ail/ele with 7E and FE (in place of the current 70 and F0 respectively) in the JJRC345_convert_channel function and the piece with the flip logic. Although the stock transmitter does not seem to transmit values larger than 70 and F0, the drone does understand them, and given that it is somewhat sluggish as-is (especially on the rudder), the small extra signal range is noticeable.
I was hoping the speed could be increased further by setting the trim signal, but the effect is so miniscule it is not worth the hassle.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/pascallanger,45,https://github.com/DeviationTX/deviation/pull/853#issuecomment-632861989,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol",Can you check the latest Master? It's there now. Hopefully this is the last commit after that I will do a release.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,853,2019-04-12T11:46:38Z,,2020-05-22T21:56:55Z,OPEN,False,258,0,3,https://github.com/goebish,[WIP] Protocol JJRC345,8,"['Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/853,https://github.com/konstantint,46,https://github.com/DeviationTX/deviation/pull/853#issuecomment-632923750,"Protocol for JJRC 345 mini quadcopter
Reverse engineered thanks to the built-in Deviation XN297 dumper !
https://www.deviationtx.com/forum/protocol-development/8329-jjrc345-drones-as-gift-in-return-for-protocol","Yes, all works fine. I do think that the flip logic should be changed to be less sensitive. With the current parameters it starts flipping way too early and stick space in the center is needed to be able to keep the quadcopter under control before doing the flip.
I sent a symbolic PR  for that.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,859,2019-04-15T07:53:48Z,2019-04-17T09:58:43Z,2019-04-17T09:58:43Z,MERGED,True,6,3,1,https://github.com/goebish,Protocol bugs3mini dynamically driven trims,2,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/859,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/859,"Add some rocket fuel to the Bugs3Mini
https://www.deviationtx.com/forum/protocol-development/7850-bugs-3-mini?start=200#73889","Add some rocket fuel to the Bugs3Mini
https://www.deviationtx.com/forum/protocol-development/7850-bugs-3-mini?start=200#73889",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,860,2019-04-16T14:07:45Z,,2019-04-22T11:18:35Z,OPEN,False,1063,445,23,https://github.com/goebish,[WIP] Use cc2500 instead of nrf24l01 for xn297@250kbps protocols,32,"['Enhancement', 'Protocol', 'On Hold']",https://github.com/DeviationTX/deviation/pull/860,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/860,"Many people are having issues with XN297@250kbps protocols, turns out this format can be emulated with the cc2500 instead of the nrf24l01, fixing the frequency tuning problem.
Only converted the E010 protocol for now so people can test and report.
https://www.deviationtx.com/forum/protocol-development/6307-eachine-e010-inductrix-clone-data-captures?start=280#73920
(sub)protocols to convert:

 E010, Phoenix (mjxq) ➜ tested, 100% success ✓
 GD00X (this PR also adds V2 format) ➜ unsuccessful so far, trying stuffs ...
 Q303 (q303)
 YZ (mt99xx)
 V911S ➜ seems to work fine but waiting for more confirmations","Many people are having issues with XN297@250kbps protocols, turns out this format can be emulated with the cc2500 instead of the nrf24l01, fixing the frequency tuning problem.
Only converted the E010 protocol for now so people can test and report.
https://www.deviationtx.com/forum/protocol-development/6307-eachine-e010-inductrix-clone-data-captures?start=280#73920
(sub)protocols to convert:

 E010, Phoenix (mjxq) ➜ tested, 100% success ✓
 GD00X (this PR also adds V2 format) ➜ unsuccessful so far, trying stuffs ...
 Q303 (q303)
 YZ (mt99xx)
 V911S ➜ seems to work fine but waiting for more confirmations",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,861,2019-04-19T04:27:33Z,2019-04-19T12:58:46Z,2019-04-19T12:58:46Z,MERGED,True,2,0,1,https://github.com/vladislavy,Fix t8sg V1 and V2 LCD contrast,2,[],https://github.com/DeviationTX/deviation/pull/861,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/861,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,862,2019-04-20T22:22:54Z,2019-04-21T12:57:53Z,2019-04-21T12:57:53Z,MERGED,True,1,1,1,https://github.com/PhracturedBlue,Fix channel calibration for last analog channel,1,[],https://github.com/DeviationTX/deviation/pull/862,https://github.com/PhracturedBlue,1,https://github.com/DeviationTX/deviation/pull/862,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,863,2019-04-26T19:05:29Z,2019-04-27T06:59:39Z,2019-04-28T22:32:03Z,MERGED,True,2,2,1,https://github.com/TheRealMoeder,fix Makefile targets for emu,1,['Bug'],https://github.com/DeviationTX/deviation/pull/863,https://github.com/TheRealMoeder,1,https://github.com/DeviationTX/deviation/pull/863,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,864,2019-04-28T20:45:50Z,2019-04-29T17:26:51Z,2019-04-29T17:26:51Z,MERGED,True,1,0,1,https://github.com/TheRealMoeder,Fix emu_devo6 build ,1,['Bug'],https://github.com/DeviationTX/deviation/pull/864,https://github.com/TheRealMoeder,1,https://github.com/DeviationTX/deviation/pull/864,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,865,2019-05-02T21:03:18Z,2019-05-02T21:42:31Z,2019-05-02T21:42:37Z,MERGED,True,1,1,1,https://github.com/TheRealMoeder,Update language.c,1,[],https://github.com/DeviationTX/deviation/pull/865,https://github.com/TheRealMoeder,1,https://github.com/DeviationTX/deviation/pull/865,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,868,2019-05-04T18:59:48Z,2019-05-13T11:25:35Z,2019-05-13T11:25:35Z,MERGED,True,5,1,1,https://github.com/TheRealMoeder,update change log,1,[],https://github.com/DeviationTX/deviation/pull/868,https://github.com/TheRealMoeder,1,https://github.com/DeviationTX/deviation/pull/868,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,869,2019-05-11T23:03:00Z,2019-05-13T20:18:08Z,2019-05-13T20:18:08Z,MERGED,True,23,2,1,https://github.com/goebish,Add DHD D4 and H8S 3D formats,4,['Protocol'],https://github.com/DeviationTX/deviation/pull/869,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/869,Add DHD D4 and H8S 3D format options to Bayang protocol,Add DHD D4 and H8S 3D format options to Bayang protocol,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,869,2019-05-11T23:03:00Z,2019-05-13T20:18:08Z,2019-05-13T20:18:08Z,MERGED,True,23,2,1,https://github.com/goebish,Add DHD D4 and H8S 3D formats,4,['Protocol'],https://github.com/DeviationTX/deviation/pull/869,https://github.com/TheRealMoeder,2,https://github.com/DeviationTX/deviation/pull/869#issuecomment-491784047,Add DHD D4 and H8S 3D format options to Bayang protocol,Please update changelog before merging,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,870,2019-05-11T23:23:09Z,2019-05-13T20:17:52Z,2019-05-13T20:17:52Z,MERGED,True,72,48,2,https://github.com/goebish,Add Bugs 3H format option,7,['Protocol'],https://github.com/DeviationTX/deviation/pull/870,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/870,"Add Bugs 3H format option to Bugs3Mini protocol
Channel 10: Altitude hold","Add Bugs 3H format option to Bugs3Mini protocol
Channel 10: Altitude hold",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,870,2019-05-11T23:23:09Z,2019-05-13T20:17:52Z,2019-05-13T20:17:52Z,MERGED,True,72,48,2,https://github.com/goebish,Add Bugs 3H format option,7,['Protocol'],https://github.com/DeviationTX/deviation/pull/870,https://github.com/TheRealMoeder,2,https://github.com/DeviationTX/deviation/pull/870#issuecomment-491783904,"Add Bugs 3H format option to Bugs3Mini protocol
Channel 10: Altitude hold",Please update Changelog,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,870,2019-05-11T23:23:09Z,2019-05-13T20:17:52Z,2019-05-13T20:17:52Z,MERGED,True,72,48,2,https://github.com/goebish,Add Bugs 3H format option,7,['Protocol'],https://github.com/DeviationTX/deviation/pull/870,https://github.com/goebish,3,https://github.com/DeviationTX/deviation/pull/870#issuecomment-491784886,"Add Bugs 3H format option to Bugs3Mini protocol
Channel 10: Altitude hold","Ok, but I don't really like this idea, that will end up in merge conflicts if each PR updates it ...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,870,2019-05-11T23:23:09Z,2019-05-13T20:17:52Z,2019-05-13T20:17:52Z,MERGED,True,72,48,2,https://github.com/goebish,Add Bugs 3H format option,7,['Protocol'],https://github.com/DeviationTX/deviation/pull/870,https://github.com/goebish,4,https://github.com/DeviationTX/deviation/pull/870#issuecomment-491787666,"Add Bugs 3H format option to Bugs3Mini protocol
Channel 10: Altitude hold","... and here we are :p
wouldn't it be better to just edit it directly on github when required ?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,870,2019-05-11T23:23:09Z,2019-05-13T20:17:52Z,2019-05-13T20:17:52Z,MERGED,True,72,48,2,https://github.com/goebish,Add Bugs 3H format option,7,['Protocol'],https://github.com/DeviationTX/deviation/pull/870,https://github.com/TheRealMoeder,5,https://github.com/DeviationTX/deviation/pull/870#issuecomment-491845574,"Add Bugs 3H format option to Bugs3Mini protocol
Channel 10: Altitude hold","Yes, with the small number of developers that should be sufficient.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,871,2019-05-15T12:49:23Z,2019-05-16T15:24:09Z,2019-05-16T15:24:09Z,MERGED,True,387,0,4,https://github.com/goebish,Protocol e010 cc2500,2,['Protocol'],https://github.com/DeviationTX/deviation/pull/871,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/871,"Add a new protocol for EAchine E010 using the CC2500 instead of NRF24L01
Tested.","Add a new protocol for EAchine E010 using the CC2500 instead of NRF24L01
Tested.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,872,2019-05-16T17:21:34Z,2019-05-16T17:25:34Z,2019-05-16T17:25:34Z,MERGED,True,409,5,5,https://github.com/vladislavy,"Protocol e010 cc2500, from goebish",1,[],https://github.com/DeviationTX/deviation/pull/872,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/872,Add a new protocol for Eachine E010 using the CC2500 instead of NRF24L01,Add a new protocol for Eachine E010 using the CC2500 instead of NRF24L01,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,873,2019-05-19T16:54:28Z,2019-05-28T08:43:27Z,2019-05-28T08:43:27Z,MERGED,True,32,3,1,https://github.com/goebish,Add frequency tuning option to WFLY protocol,1,['Protocol'],https://github.com/DeviationTX/deviation/pull/873,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/873,Add frequency tuning option to WFLY protocol,Add frequency tuning option to WFLY protocol,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,875,2019-05-28T02:14:38Z,2019-06-06T02:45:57Z,2019-06-06T02:46:08Z,MERGED,True,23,11,3,https://github.com/hexfet,Fix FrskyX s.port telemetry,1,[],https://github.com/DeviationTX/deviation/pull/875,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/875,"When I added the s.port CRC check for serial s.port the test was also applied to FrskyX s.port telemetry, which does not have the CRC.  This PR fixes the problem by only checking CRC for s.port telemetry received on the serial port (i.e. for the PXX protocol).
Relevant forum thread.","When I added the s.port CRC check for serial s.port the test was also applied to FrskyX s.port telemetry, which does not have the CRC.  This PR fixes the problem by only checking CRC for s.port telemetry received on the serial port (i.e. for the PXX protocol).
Relevant forum thread.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,876,2019-05-30T08:15:31Z,2019-05-30T08:19:30Z,2019-05-30T08:19:30Z,MERGED,True,46,17,1,https://github.com/vladislavy,"Add frequency tuning to WFLY protocol, from goebish",1,[],https://github.com/DeviationTX/deviation/pull/876,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/876,Add frequency tuning option to WFLY protocol,Add frequency tuning option to WFLY protocol,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,878,2019-05-31T23:52:42Z,2019-06-06T02:45:31Z,2019-06-06T02:46:31Z,MERGED,True,28,12,5,https://github.com/hexfet,Fix PXX power control,2,[],https://github.com/DeviationTX/deviation/pull/878,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/878,"The change to power settings for each module introduced a bug for PXX that had the power bits always set to minimum.  This is fixed by the first commit.
Another bug present from the introduction of PXX turned on the range check function if power level was set to minimum. This is fixed by the second commit, which adds a RangeTest protocol command (currently only supported by PXX).","The change to power settings for each module introduced a bug for PXX that had the power bits always set to minimum.  This is fixed by the first commit.
Another bug present from the introduction of PXX turned on the range check function if power level was set to minimum. This is fixed by the second commit, which adds a RangeTest protocol command (currently only supported by PXX).",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,880,2019-06-08T13:19:06Z,2019-06-09T23:07:53Z,2019-06-10T06:53:40Z,MERGED,True,24,0,1,https://github.com/markusgritsch,Read multiplexed PID values from telemetry data.,3,[],https://github.com/DeviationTX/deviation/pull/880,https://github.com/markusgritsch,1,https://github.com/DeviationTX/deviation/pull/880,"For SilverWare, optional telemetry support was added to the Bayang protocol quite some time ago.
Recently, current PID settings were added to the telemetry data. This pull request makes them available via FadesA, FadesB, and FadesR. The change is backwards compatible and has no implications for older firmware which does not send these values.
The PID values are sent sequentially using just two bytes.
Details: https://www.rcgroups.com/forums/showpost.php?p=42032515&postcount=398","For SilverWare, optional telemetry support was added to the Bayang protocol quite some time ago.
Recently, current PID settings were added to the telemetry data. This pull request makes them available via FadesA, FadesB, and FadesR. The change is backwards compatible and has no implications for older firmware which does not send these values.
The PID values are sent sequentially using just two bytes.
Details: https://www.rcgroups.com/forums/showpost.php?p=42032515&postcount=398",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,881,2019-06-08T19:14:22Z,2019-12-13T08:54:05Z,2019-12-13T08:54:05Z,CLOSED,False,284,3,5,https://github.com/goebish,Add V761 protocol,15,[],https://github.com/DeviationTX/deviation/pull/881,https://github.com/goebish,1,https://github.com/DeviationTX/deviation/pull/881,"Protocol for Volantex V761-1 Trainstar Mini fixed wing
also works with Volantex Ranger 600 762-1

Add V761 protocol

Channel 5: gyro on/off
Only 3 transmitter IDs/channels, selected with Fixed ID % 3.
https://www.deviationtx.com/forum/protocol-development/7798-volantex-v761-1-firestar-mini-protocol","Protocol for Volantex V761-1 Trainstar Mini fixed wing
also works with Volantex Ranger 600 762-1

Add V761 protocol

Channel 5: gyro on/off
Only 3 transmitter IDs/channels, selected with Fixed ID % 3.
https://www.deviationtx.com/forum/protocol-development/7798-volantex-v761-1-firestar-mini-protocol",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,882,2019-06-10T14:41:49Z,2019-12-11T12:45:45Z,2019-12-11T12:45:45Z,CLOSED,False,7,7,6,https://github.com/hexfet,Remove standard GUI from Devo 6 and 8,3,[],https://github.com/DeviationTX/deviation/pull/882,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/882,This fixes the issue with current master failing to build due to rom space overrun.  The space is exceeded after merging PR #880 .  Pending PR #881 makes the same change only for Devo 8.,This fixes the issue with current master failing to build due to rom space overrun.  The space is exceeded after merging PR #880 .  Pending PR #881 makes the same change only for Devo 8.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,882,2019-06-10T14:41:49Z,2019-12-11T12:45:45Z,2019-12-11T12:45:45Z,CLOSED,False,7,7,6,https://github.com/hexfet,Remove standard GUI from Devo 6 and 8,3,[],https://github.com/DeviationTX/deviation/pull/882,https://github.com/vladislavy,2,https://github.com/DeviationTX/deviation/pull/882#issuecomment-503937093,This fixes the issue with current master failing to build due to rom space overrun.  The space is exceeded after merging PR #880 .  Pending PR #881 makes the same change only for Devo 8.,Disable HAS_4IN1_FLASH can save about 800 bytes of rom space.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,882,2019-06-10T14:41:49Z,2019-12-11T12:45:45Z,2019-12-11T12:45:45Z,CLOSED,False,7,7,6,https://github.com/hexfet,Remove standard GUI from Devo 6 and 8,3,[],https://github.com/DeviationTX/deviation/pull/882,https://github.com/hexfet,3,https://github.com/DeviationTX/deviation/pull/882#issuecomment-505223955,This fixes the issue with current master failing to build due to rom space overrun.  The space is exceeded after merging PR #880 .  Pending PR #881 makes the same change only for Devo 8.,800 bytes is enough for the current PRs to build successfully.  Is that a better solution than removing standard GUI?  Will any users be affected by disabling 4IN1 for the 6 and 8?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,882,2019-06-10T14:41:49Z,2019-12-11T12:45:45Z,2019-12-11T12:45:45Z,CLOSED,False,7,7,6,https://github.com/hexfet,Remove standard GUI from Devo 6 and 8,3,[],https://github.com/DeviationTX/deviation/pull/882,https://github.com/vladislavy,4,https://github.com/DeviationTX/deviation/pull/882#issuecomment-506737716,This fixes the issue with current master failing to build due to rom space overrun.  The space is exceeded after merging PR #880 .  Pending PR #881 makes the same change only for Devo 8.,"4IN1_FLASH has sense for transmitters with small flash memory (Devo F4, F7, Radiolink AT9). Also, iRangeX IR8M use 4IN1_FLASH code for managing ordinary 4in1 module. Any other transmitter will be better to use with ordinary (devo) 4in1 module without code for 4IN1_FLASH. Jumper T8SG already has 4IN1_FLASH code disabled.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,882,2019-06-10T14:41:49Z,2019-12-11T12:45:45Z,2019-12-11T12:45:45Z,CLOSED,False,7,7,6,https://github.com/hexfet,Remove standard GUI from Devo 6 and 8,3,[],https://github.com/DeviationTX/deviation/pull/882,https://github.com/hexfet,5,https://github.com/DeviationTX/deviation/pull/882#issuecomment-512031066,This fixes the issue with current master failing to build due to rom space overrun.  The space is exceeded after merging PR #880 .  Pending PR #881 makes the same change only for Devo 8.,Just the 4IN1_FLASH change is no longer enough to build the pending pull requests.  It is a good idea though so updated this PR to make that change.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,882,2019-06-10T14:41:49Z,2019-12-11T12:45:45Z,2019-12-11T12:45:45Z,CLOSED,False,7,7,6,https://github.com/hexfet,Remove standard GUI from Devo 6 and 8,3,[],https://github.com/DeviationTX/deviation/pull/882,https://github.com/vladislavy,6,https://github.com/DeviationTX/deviation/pull/882#issuecomment-562431640,This fixes the issue with current master failing to build due to rom space overrun.  The space is exceeded after merging PR #880 .  Pending PR #881 makes the same change only for Devo 8.,Probably PR can be closed since now we have spare ROM space.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,885,2019-06-24T23:23:35Z,,2020-02-13T18:53:32Z,OPEN,False,195,87,1,https://github.com/hexfet,Add support for Flysky AC type telemetry,11,[],https://github.com/DeviationTX/deviation/pull/885,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/885,Adds additional sensor support.  Reference code here.,Adds additional sensor support.  Reference code here.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,885,2019-06-24T23:23:35Z,,2020-02-13T18:53:32Z,OPEN,False,195,87,1,https://github.com/hexfet,Add support for Flysky AC type telemetry,11,[],https://github.com/DeviationTX/deviation/pull/885,https://github.com/vladislavy,2,https://github.com/DeviationTX/deviation/pull/885#issuecomment-584250605,Adds additional sensor support.  Reference code here.,"hexfet, open issue: Flysky AllCell telemetry regression #956",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,886,2019-07-06T02:24:34Z,2019-12-04T12:48:40Z,2019-12-04T12:48:40Z,MERGED,True,3,185,23,https://github.com/hexfet,Fix devo F series builds,1,[],https://github.com/DeviationTX/deviation/pull/886,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/886,"In master several of the .mod files for the devo F series are four byte files.  The loader file change in PR #770 were not made in the devof7 file.  With this change the conditional define of PROTO_Cmds can be removed from protocol files, but the protocol command function name must now match /*_Cmds/.
Only some protocol files were changed by #770.  This PR removes the rest of the unnecessary defines.
A remaining issue is the scancyrf.mod and xn297dump.mod files.  These are both 4 byte files in the devo7e build, but only the scancyrf.mod file is 4 bytes long in the devof* builds.","In master several of the .mod files for the devo F series are four byte files.  The loader file change in PR #770 were not made in the devof7 file.  With this change the conditional define of PROTO_Cmds can be removed from protocol files, but the protocol command function name must now match /*_Cmds/.
Only some protocol files were changed by #770.  This PR removes the rest of the unnecessary defines.
A remaining issue is the scancyrf.mod and xn297dump.mod files.  These are both 4 byte files in the devo7e build, but only the scancyrf.mod file is 4 bytes long in the devof* builds.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,889,2019-08-08T14:39:33Z,2019-08-08T14:41:50Z,2019-08-08T14:41:50Z,MERGED,True,26,5,6,https://github.com/vladislavy,Added dsm rssi telemetry #476,1,[],https://github.com/DeviationTX/deviation/pull/889,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/889,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,890,2019-08-08T14:53:52Z,2019-08-08T14:55:34Z,2019-08-08T14:55:34Z,MERGED,True,11,1,2,https://github.com/vladislavy,Added rssi telemetry sounds #492,1,[],https://github.com/DeviationTX/deviation/pull/890,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/890,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,891,2019-08-09T06:03:42Z,2019-08-09T06:05:40Z,2019-08-09T06:05:40Z,MERGED,True,4,1,2,https://github.com/vladislavy,Add padding to save about 130 bytes in devo7e #540,1,[],https://github.com/DeviationTX/deviation/pull/891,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/891,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,892,2019-08-09T06:10:58Z,2019-08-09T06:13:09Z,2019-08-09T06:13:09Z,MERGED,True,412,15,6,https://github.com/vladislavy,"Protocol for Air Hogs ""Star Trek"" NCC-1701 #455",1,[],https://github.com/DeviationTX/deviation/pull/892,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/892,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,893,2019-08-09T06:32:12Z,2019-08-09T06:37:36Z,2019-08-09T06:37:36Z,MERGED,True,316,0,3,https://github.com/vladislavy,Protocol for WLToys V911S #486,1,[],https://github.com/DeviationTX/deviation/pull/893,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/893,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,894,2019-08-09T06:50:33Z,2019-08-09T06:52:41Z,2019-08-09T06:52:41Z,MERGED,True,1,1,1,https://github.com/vladislavy,Fix devo12.ld,1,[],https://github.com/DeviationTX/deviation/pull/894,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/894,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,895,2019-08-09T07:19:52Z,2019-08-09T07:23:49Z,2019-08-09T07:23:49Z,MERGED,True,1,1,1,https://github.com/vladislavy,"Fix mux beep for ""extended_audio"" #491",1,[],https://github.com/DeviationTX/deviation/pull/895,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/895,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,896,2019-08-09T07:29:00Z,2019-08-09T07:32:27Z,2019-08-09T07:32:27Z,MERGED,True,258,0,3,https://github.com/vladislavy,Protocol for GD00X #498,1,[],https://github.com/DeviationTX/deviation/pull/896,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/896,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,897,2019-08-09T07:36:53Z,2019-08-09T07:39:09Z,2019-08-09T07:39:09Z,MERGED,True,1,1,1,https://github.com/vladislavy,Fix memory access out of range issue #502,1,[],https://github.com/DeviationTX/deviation/pull/897,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/897,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,898,2019-08-09T08:53:08Z,2019-08-09T08:54:52Z,2019-08-09T08:54:52Z,MERGED,True,0,229,32,https://github.com/vladislavy,Remove Beken BK2421 / BK2423 support #499,1,[],https://github.com/DeviationTX/deviation/pull/898,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/898,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,899,2019-08-09T09:03:39Z,2019-08-09T09:05:48Z,2019-08-09T09:05:48Z,MERGED,True,12,11,1,https://github.com/vladislavy,Fix WFLY protocol #519,1,[],https://github.com/DeviationTX/deviation/pull/899,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/899,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,900,2019-08-09T09:17:18Z,2019-08-09T09:19:08Z,2019-08-09T09:19:08Z,MERGED,True,3,3,1,https://github.com/vladislavy,Fix issue with exiting USB mode in t8sg V2 #517,1,[],https://github.com/DeviationTX/deviation/pull/900,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/900,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,901,2019-08-09T16:30:42Z,2019-08-09T16:32:34Z,2019-08-09T16:32:34Z,MERGED,True,272,0,3,https://github.com/vladislavy,Protocol E016H #775,1,[],https://github.com/DeviationTX/deviation/pull/901,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/901,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,902,2019-08-10T08:57:56Z,2019-08-10T08:59:42Z,2019-08-10T08:59:42Z,MERGED,True,409,5,5,https://github.com/vladislavy,Protocol e010 cc2500 #871,1,[],https://github.com/DeviationTX/deviation/pull/902,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/902,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,903,2019-08-10T14:26:03Z,2019-08-10T14:27:57Z,2019-08-10T14:27:57Z,MERGED,True,474,1,4,https://github.com/vladislavy,Add Protocol LOLI support #664,1,[],https://github.com/DeviationTX/deviation/pull/903,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/903,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,905,2019-08-13T12:24:37Z,2019-08-13T12:28:48Z,2019-08-13T12:28:48Z,MERGED,True,240,119,17,https://github.com/vladislavy,Add Scanner support to 128x64x1 screen (#533),1,[],https://github.com/DeviationTX/deviation/pull/905,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/905,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,906,2019-08-15T18:06:31Z,2019-08-15T18:14:41Z,2019-08-15T18:14:41Z,MERGED,True,4,0,2,https://github.com/vladislavy,Enable optimize dfu for devo12e and devo6,2,[],https://github.com/DeviationTX/deviation/pull/906,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/906,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,907,2019-08-15T18:23:04Z,2019-08-15T18:29:57Z,2019-08-15T18:29:57Z,CLOSED,False,1,1,1,https://github.com/vladislavy,Fix optimize dfu,1,[],https://github.com/DeviationTX/deviation/pull/907,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/907,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,908,2019-08-16T07:38:17Z,2019-08-16T12:43:38Z,2019-08-16T12:43:38Z,CLOSED,False,171,25,26,https://github.com/vladislavy,"Add ""xxxx_opt.ld"" files for all devo targets",1,[],https://github.com/DeviationTX/deviation/pull/908,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/908,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,909,2019-08-16T12:52:45Z,2019-11-30T11:09:14Z,2019-11-30T11:09:14Z,MERGED,True,185,33,27,https://github.com/vladislavy,Add xxxx_opt.ld files to all devo targets,3,[],https://github.com/DeviationTX/deviation/pull/909,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/909,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,910,2019-08-19T16:33:02Z,2019-08-19T16:38:25Z,2019-08-19T16:38:26Z,MERGED,True,0,59,30,https://github.com/vladislavy,Remove MUSIC_Play from protocol #497,1,[],https://github.com/DeviationTX/deviation/pull/910,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/910,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,911,2019-08-20T04:14:38Z,2019-08-20T04:19:24Z,2019-08-20T04:19:24Z,MERGED,True,238,37,46,https://github.com/vladislavy,Enable optimized dfu for all devo targets,3,[],https://github.com/DeviationTX/deviation/pull/911,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/911,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,912,2019-08-20T08:46:38Z,2019-08-20T08:50:57Z,2019-08-20T08:50:57Z,MERGED,True,236,35,45,https://github.com/vladislavy,Enable optimized dfu for all devo targets,1,[],https://github.com/DeviationTX/deviation/pull/912,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/912,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,914,2019-08-22T07:12:40Z,2019-08-22T07:17:36Z,2019-08-22T07:17:36Z,MERGED,True,294,0,3,https://github.com/vladislavy,Add V761 protocol (#881),1,[],https://github.com/DeviationTX/deviation/pull/914,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/914,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,915,2019-08-22T07:26:11Z,2019-08-22T07:30:16Z,2019-08-22T07:30:16Z,MERGED,True,197,89,1,https://github.com/vladislavy,Add support for Flysky AC type telemetry (#885),1,[],https://github.com/DeviationTX/deviation/pull/915,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/915,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,916,2019-08-22T09:39:46Z,2019-08-22T09:41:49Z,2019-08-22T09:41:49Z,MERGED,True,294,0,3,https://github.com/vladislavy,"Add V761 protocol, from goebish",1,[],https://github.com/DeviationTX/deviation/pull/916,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/916,"Protocol for Volantex V761-1 Trainstar Mini fixed wing
also works with Volantex Ranger 600 762-1
Channel 5: gyro on/off
Only 3 transmitter IDs/channels, selected with Fixed ID % 3.
https://www.deviationtx.com/forum/protocol-development/7798-volantex-v761-1-firestar-mini-protocol","Protocol for Volantex V761-1 Trainstar Mini fixed wing
also works with Volantex Ranger 600 762-1
Channel 5: gyro on/off
Only 3 transmitter IDs/channels, selected with Fixed ID % 3.
https://www.deviationtx.com/forum/protocol-development/7798-volantex-v761-1-firestar-mini-protocol",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,917,2019-08-23T18:22:07Z,2019-09-01T18:59:40Z,2019-09-01T18:59:40Z,MERGED,True,7,2,3,https://github.com/vladislavy,Fix telemetry reset repeating,2,[],https://github.com/DeviationTX/deviation/pull/917,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/917,"Fix telemetry reset repeating, add telemetry reset sound indication.","Fix telemetry reset repeating, add telemetry reset sound indication.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,918,2019-08-24T09:59:03Z,2019-08-24T10:03:12Z,2019-08-24T10:03:12Z,MERGED,True,7,2,3,https://github.com/vladislavy,Fix telemetry reset repeating,1,[],https://github.com/DeviationTX/deviation/pull/918,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/918,Fix telemetry reset repeating. Add telemetry reset sound indication.,Fix telemetry reset repeating. Add telemetry reset sound indication.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,920,2019-08-25T07:46:58Z,2019-08-25T07:51:43Z,2019-08-25T07:51:43Z,MERGED,True,63,13,13,https://github.com/vladislavy,"Telemetry reset, from hexfet (#416)",1,[],https://github.com/DeviationTX/deviation/pull/920,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/920,"Add feature to reset telemetry values on long press of Up button on telemetry monitor page.
For Frsky telemetry this resets the vario altitude ""ground level"" to the next received telemetry value, which zeroes the vario altitude telemetry value. Also resets the battery discharge accumulator to zero, and minimum cell voltage. The ground level value is saved in the model file to save the setting through power cycles - the value is fairly constant during a single day of flying in stable air.","Add feature to reset telemetry values on long press of Up button on telemetry monitor page.
For Frsky telemetry this resets the vario altitude ""ground level"" to the next received telemetry value, which zeroes the vario altitude telemetry value. Also resets the battery discharge accumulator to zero, and minimum cell voltage. The ground level value is saved in the model file to save the setting through power cycles - the value is fairly constant during a single day of flying in stable air.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,922,2019-09-04T13:01:46Z,2019-09-04T13:05:58Z,2019-09-04T13:05:58Z,MERGED,True,10,10,2,https://github.com/vladislavy,Convert mixer beep_lock and voice_lock variables to flags (#545),1,[],https://github.com/DeviationTX/deviation/pull/922,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/922,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,923,2019-09-04T13:10:07Z,2019-09-04T13:13:41Z,2019-09-04T13:13:41Z,MERGED,True,5,6,2,https://github.com/vladislavy,Convert mixer beep_lock variable to flag (#545),1,[],https://github.com/DeviationTX/deviation/pull/923,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/923,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,926,2019-09-28T08:11:05Z,2019-09-28T08:15:29Z,2019-09-28T08:15:29Z,MERGED,True,14,2,2,https://github.com/vladislavy,devo6 and devo8 - no room for debug and standard gui,2,[],https://github.com/DeviationTX/deviation/pull/926,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/926,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,927,2019-09-28T11:51:15Z,2019-09-28T11:55:18Z,2019-09-28T11:55:18Z,MERGED,True,6,6,6,https://github.com/vladislavy,Disable HAS_4IN1_FLASH,6,[],https://github.com/DeviationTX/deviation/pull/927,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/927,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,930,2019-12-02T03:42:12Z,2019-12-02T03:49:12Z,2019-12-02T03:49:33Z,CLOSED,False,0,1,1,https://github.com/vladislavy,Desable LTO build for devo7e,1,[],https://github.com/DeviationTX/deviation/pull/930,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/930,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,931,2019-12-02T03:50:57Z,2019-12-02T03:58:22Z,2019-12-02T03:58:22Z,MERGED,True,0,1,1,https://github.com/vladislavy,Disable LTO build for devo7e,1,[],https://github.com/DeviationTX/deviation/pull/931,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/931,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,932,2019-12-03T08:07:42Z,2019-12-03T08:14:28Z,2019-12-03T08:14:28Z,CLOSED,False,6,6,3,https://github.com/vladislavy,Change SPI2 speed from 2.25MHz to 4.5MHz,3,[],https://github.com/DeviationTX/deviation/pull/932,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/932,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,933,2019-12-03T08:16:45Z,2019-12-03T08:23:57Z,2019-12-03T08:24:22Z,CLOSED,False,5,5,3,https://github.com/vladislavy,Change SPI2 speed from 2.25MHz to 4.5MHz,5,[],https://github.com/DeviationTX/deviation/pull/933,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/933,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,934,2019-12-03T08:27:51Z,2019-12-03T08:34:53Z,2019-12-03T08:34:53Z,MERGED,True,5,5,3,https://github.com/vladislavy,Change SPI2 speed from 2.25MHz to 4.5MHz,3,[],https://github.com/DeviationTX/deviation/pull/934,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/934,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,935,2019-12-03T16:43:10Z,2019-12-03T16:51:40Z,2019-12-03T16:51:40Z,MERGED,True,1,1,1,https://github.com/vladislavy,Change 4IN1_FLASH SPI2 speed 2.25MHz to 4.5MHz,1,[],https://github.com/DeviationTX/deviation/pull/935,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/935,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,936,2019-12-04T13:10:33Z,2019-12-04T13:17:46Z,2019-12-04T13:17:47Z,MERGED,True,8,0,1,https://github.com/vladislavy,Final fix for PR #886,1,[],https://github.com/DeviationTX/deviation/pull/936,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/936,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,937,2019-12-11T12:42:07Z,2019-12-11T12:50:43Z,2019-12-11T12:50:43Z,MERGED,True,5,6,2,https://github.com/vladislavy,Fix devo12 build,1,[],https://github.com/DeviationTX/deviation/pull/937,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/937,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,938,2019-12-13T05:12:56Z,2019-12-13T05:23:39Z,2019-12-13T05:23:39Z,MERGED,True,195,87,1,https://github.com/vladislavy,"Add support for Flysky AC type telemetry, from hexfet",1,[],https://github.com/DeviationTX/deviation/pull/938,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/938,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,939,2019-12-13T08:46:36Z,2019-12-13T08:53:43Z,2019-12-13T08:53:43Z,MERGED,True,284,3,4,https://github.com/vladislavy,"Add V761 protocol, from goebish",1,[],https://github.com/DeviationTX/deviation/pull/939,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/939,"Protocol for Volantex V761-1 Trainstar Mini fixed wing
also works with Volantex Ranger 600 762-1
Add V761 protocol

Channel 5: gyro on/off
Only 3 transmitter IDs/channels, selected with Fixed ID % 3.
https://www.deviationtx.com/forum/protocol-development/7798-volantex-v761-1-firestar-mini-protocol","Protocol for Volantex V761-1 Trainstar Mini fixed wing
also works with Volantex Ranger 600 762-1
Add V761 protocol

Channel 5: gyro on/off
Only 3 transmitter IDs/channels, selected with Fixed ID % 3.
https://www.deviationtx.com/forum/protocol-development/7798-volantex-v761-1-firestar-mini-protocol",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,940,2019-12-14T07:39:43Z,2019-12-14T07:55:22Z,2019-12-14T07:55:22Z,MERGED,True,38,12,3,https://github.com/vladislavy,"More efficient screen updates on devo12, from PhracturedBlue",2,[],https://github.com/DeviationTX/deviation/pull/940,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/940,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,941,2019-12-14T08:44:36Z,2019-12-14T08:50:49Z,2019-12-14T08:50:49Z,MERGED,True,41,15,3,https://github.com/vladislavy,"More efficient screen updates on devo12, from PhracturedBlue",1,[],https://github.com/DeviationTX/deviation/pull/941,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/941,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,942,2019-12-14T09:02:29Z,2019-12-14T09:10:03Z,2019-12-14T09:10:03Z,MERGED,True,44,15,3,https://github.com/vladislavy,"More efficient screen updates on devo12, from PhracturedBlue",1,[],https://github.com/DeviationTX/deviation/pull/942,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/942,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,943,2019-12-17T13:19:17Z,2019-12-17T13:26:28Z,2019-12-17T13:26:28Z,MERGED,True,11,6,3,https://github.com/vladislavy,Restore t8sg_v2 1 sec power delay,1,[],https://github.com/DeviationTX/deviation/pull/943,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/943,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,945,2019-12-19T17:15:32Z,2019-12-19T17:31:37Z,2019-12-19T17:31:37Z,MERGED,True,21,21,3,https://github.com/vladislavy,Disable Multimod support for t8sg series,2,[],https://github.com/DeviationTX/deviation/pull/945,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/945,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,946,2019-12-22T06:58:21Z,2019-12-22T07:09:51Z,2019-12-22T07:09:51Z,MERGED,True,21,21,3,https://github.com/vladislavy,"Revert ""Disable Multimod support for t8sg series""",1,[],https://github.com/DeviationTX/deviation/pull/946,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/946,Reverts #945,Reverts #945,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,947,2019-12-22T07:19:50Z,2019-12-22T07:30:48Z,2019-12-22T07:30:58Z,CLOSED,False,2,2,1,https://github.com/vladislavy,Update target_defs.h,1,[],https://github.com/DeviationTX/deviation/pull/947,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/947,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,948,2019-12-23T12:35:23Z,2019-12-23T12:42:15Z,2019-12-23T12:42:15Z,MERGED,True,17,17,6,https://github.com/vladislavy,Disable 4in1_flash support,1,[],https://github.com/DeviationTX/deviation/pull/948,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/948,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,949,2019-12-29T11:45:55Z,2019-12-29T20:52:19Z,2019-12-29T20:52:20Z,MERGED,True,16,15,1,https://github.com/fgiudice98,KN protocol 12 channels,3,[],https://github.com/DeviationTX/deviation/pull/949,https://github.com/fgiudice98,1,https://github.com/DeviationTX/deviation/pull/949,"The V977 stock transmitter send all (working) trims (T, A, E, R). This is to make the Deviation perfectly the same as a stock V977 transmitter","The V977 stock transmitter send all (working) trims (T, A, E, R). This is to make the Deviation perfectly the same as a stock V977 transmitter",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,949,2019-12-29T11:45:55Z,2019-12-29T20:52:19Z,2019-12-29T20:52:20Z,MERGED,True,16,15,1,https://github.com/fgiudice98,KN protocol 12 channels,3,[],https://github.com/DeviationTX/deviation/pull/949,https://github.com/fgiudice98,2,https://github.com/DeviationTX/deviation/pull/949#issuecomment-569498941,"The V977 stock transmitter send all (working) trims (T, A, E, R). This is to make the Deviation perfectly the same as a stock V977 transmitter","Should be good now
Edit: nope. There is other beside 2 spaces between code and comment and 1 space between comment and text?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,950,2019-12-30T19:44:23Z,2020-01-14T15:13:15Z,2020-01-14T15:13:55Z,MERGED,True,1,1,1,https://github.com/eried,Please increase the maximum of the custom sounds,4,[],https://github.com/DeviationTX/deviation/pull/950,https://github.com/eried,1,https://github.com/DeviationTX/deviation/pull/950,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,950,2019-12-30T19:44:23Z,2020-01-14T15:13:15Z,2020-01-14T15:13:55Z,MERGED,True,1,1,1,https://github.com/eried,Please increase the maximum of the custom sounds,4,[],https://github.com/DeviationTX/deviation/pull/950,https://github.com/eried,2,https://github.com/DeviationTX/deviation/pull/950#issuecomment-570010095,,"Thanks! I added some sound fx and noticed that after the internal id 217 (after the reenumeration) to my controller was hanging. Limit can be lower, 450 or so, just to have space for around 60-100 extra custom sounds
https://github.com/eried/Research/tree/master/JumperT8SG/soundfx",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,950,2019-12-30T19:44:23Z,2020-01-14T15:13:15Z,2020-01-14T15:13:55Z,MERGED,True,1,1,1,https://github.com/eried,Please increase the maximum of the custom sounds,4,[],https://github.com/DeviationTX/deviation/pull/950,https://github.com/TheRealMoeder,3,https://github.com/DeviationTX/deviation/pull/950#issuecomment-574221654,,"Development around deviation is rather quiet, we might as well merge this. If we ever run into ram issues, we can rethink things.",True,{'THUMBS_UP': ['https://github.com/eried']}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,952,2020-02-01T16:21:46Z,2020-02-01T16:29:59Z,2020-02-01T16:29:59Z,MERGED,True,5,5,5,https://github.com/vladislavy,Fix EXTRA_SWITCHES INP_SWH,1,[],https://github.com/DeviationTX/deviation/pull/952,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/952,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,953,2020-02-07T13:11:20Z,2020-02-07T13:17:38Z,2020-02-07T13:17:38Z,MERGED,True,83,29,6,https://github.com/vladislavy,Add frequency tuning to CYRF based protocols,1,[],https://github.com/DeviationTX/deviation/pull/953,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/953,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,954,2020-02-07T14:00:49Z,2020-02-07T14:08:26Z,2020-02-07T14:08:26Z,MERGED,True,84,30,6,https://github.com/vladislavy,Add frequency tuning to CYRF based protocols,1,[],https://github.com/DeviationTX/deviation/pull/954,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/954,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,955,2020-02-07T14:40:05Z,2020-02-07T14:56:59Z,2020-02-07T14:56:59Z,MERGED,True,81,27,6,https://github.com/vladislavy,Add frequency tuning to CYRF based protocols,2,[],https://github.com/DeviationTX/deviation/pull/955,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/955,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,957,2020-02-12T08:20:51Z,2020-02-12T08:27:32Z,2020-02-12T08:27:32Z,MERGED,True,4,2,1,https://github.com/vladislavy,Fix Flysky external voltage sensor,1,[],https://github.com/DeviationTX/deviation/pull/957,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/957,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,958,2020-02-13T17:46:24Z,2020-02-13T17:58:46Z,2020-02-13T18:59:42Z,MERGED,True,2,4,1,https://github.com/vladislavy,"Revert ""Fix Flysky external voltage sensor""",1,[],https://github.com/DeviationTX/deviation/pull/958,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/958,Reverts #957,Reverts #957,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,959,2020-02-13T18:06:06Z,2020-02-13T18:46:57Z,2020-02-13T18:59:37Z,MERGED,True,66,176,1,https://github.com/vladislavy,"Revert ""Add support for Flysky AC type telemetry, from hexfet""",2,[],https://github.com/DeviationTX/deviation/pull/959,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/959,Reverts #938,Reverts #938,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,961,2020-02-16T23:08:20Z,,2020-08-09T01:14:49Z,OPEN,False,35,9,5,https://github.com/eried,New method for handling custom alarms,13,[],https://github.com/DeviationTX/deviation/pull/961,https://github.com/eried,1,https://github.com/DeviationTX/deviation/pull/961,"This fixes #960
Available settings in src/music.c:
USE_NEW_CUSTOM_ALARM_MODE, if is 0 then the behaviour is exactly the same as the original
CUSTOM_ALARM_IGNORE_MS, is the time in ms that the sound will not be triggered. So if is 200 ms and the user switch from A to C, sound B wont be played if the user took less than 200 ms on moving the switch from B to C.","This fixes #960
Available settings in src/music.c:
USE_NEW_CUSTOM_ALARM_MODE, if is 0 then the behaviour is exactly the same as the original
CUSTOM_ALARM_IGNORE_MS, is the time in ms that the sound will not be triggered. So if is 200 ms and the user switch from A to C, sound B wont be played if the user took less than 200 ms on moving the switch from B to C.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,961,2020-02-16T23:08:20Z,,2020-08-09T01:14:49Z,OPEN,False,35,9,5,https://github.com/eried,New method for handling custom alarms,13,[],https://github.com/DeviationTX/deviation/pull/961,https://github.com/eried,2,https://github.com/DeviationTX/deviation/pull/961#issuecomment-587092062,"This fixes #960
Available settings in src/music.c:
USE_NEW_CUSTOM_ALARM_MODE, if is 0 then the behaviour is exactly the same as the original
CUSTOM_ALARM_IGNORE_MS, is the time in ms that the sound will not be triggered. So if is 200 ms and the user switch from A to C, sound B wont be played if the user took less than 200 ms on moving the switch from B to C.","I like the general idea, but I'd suggest working this into the config (tx.ini?) files instead of the define and also add menu options for setting this up? Maybe we can have the ""old"" behavior when the value for CUSTOM_ALARM_IGNORE_MS is ""0""?

I agree that a menu entry would be ideal, I am going to check that section on the source. I left that as a define thinking that in the unlikely case that someone might want that old behaviour, it still could be engaged.

Edit:
Another thing comes to my mind: Maybe ignoring all custom alarms coming in fast isn't desirable: Imaging flipping a switch immediately before a telemetry alarm with custom sound comes in. So maybe this behavior should be exclusive for switch custom alarms? I'm open for discussion on this matter.

You are right, I was not aware or explored those telemetry alarms and others. In this case it would require a ""source"" flag (i.e. priority and have that as a setting in the menu maybe?).
I am thinking a solution could be:

Add priority to the int AUDIO_AddQueue(u16 music) { function
Expose that priority in options:
Priority for switch voice: high|normal

In that way the ""buzzer"" functionality (that was what I wanted to fix later) could use those rules.
I was just blinded for how cool it feels that the sounds are skipabble. https://youtu.be/Bhd3Ko32Q8U?t=264",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,961,2020-02-16T23:08:20Z,,2020-08-09T01:14:49Z,OPEN,False,35,9,5,https://github.com/eried,New method for handling custom alarms,13,[],https://github.com/DeviationTX/deviation/pull/961,https://github.com/TheRealMoeder,3,https://github.com/DeviationTX/deviation/pull/961#issuecomment-588830930,"This fixes #960
Available settings in src/music.c:
USE_NEW_CUSTOM_ALARM_MODE, if is 0 then the behaviour is exactly the same as the original
CUSTOM_ALARM_IGNORE_MS, is the time in ms that the sound will not be triggered. So if is 200 ms and the user switch from A to C, sound B wont be played if the user took less than 200 ms on moving the switch from B to C.","I agree that a menu entry would be ideal, I am going to check that section on the source. I left that as a define thinking that in the unlikely case that someone might want that old behaviour, it still could be engaged.

Menu is pretty simple; I can add that later in case you don't want to dig into the source too much.

You are right, I was not aware or explored those telemetry alarms and others. In this case it would require a ""source"" flag (i.e. priority and have that as a setting in the menu maybe?).
I am thinking a solution could be:

Add priority to the int AUDIO_AddQueue(u16 music) { function
Expose that priority in options:
Priority for switch voice: high|normal


I think this really only applies to switches, so we might as well make a seperate case for switches. How about somehow passing a switch id (or group) together with the voiceid for the queue voice to always replace queue entries for the same switch id/group so we only have the latest switch state in the queue? Will probably require a seperate AUDIO_AddQueueSwitch (u16 music u16 group) or similar. The reason behind this is, you could also be flipping to switches at the same time (not that uncommon in the heat of the flight) and wouldn't want to lose any of the announcements of either switch.
While at reworking, I think it also makes sense for AUDIO_AddQueue to check, whether the music being added to the queue is the same as the last entry in the queue, and in that case discard the duplicate entry.

In that way the ""buzzer"" functionality (that was what I wanted to fix later) could use those rules.
I was just blinded for how cool it feels that the sounds are skipabble. https://youtu.be/Bhd3Ko32Q8U?t=264

I wasn't aware that someone finally found a fix for the ""saving"" issue - great!
@goebish you always have some good ideas, any comments on this issue?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,961,2020-02-16T23:08:20Z,,2020-08-09T01:14:49Z,OPEN,False,35,9,5,https://github.com/eried,New method for handling custom alarms,13,[],https://github.com/DeviationTX/deviation/pull/961,https://github.com/eried,4,https://github.com/DeviationTX/deviation/pull/961#issuecomment-589861660,"This fixes #960
Available settings in src/music.c:
USE_NEW_CUSTOM_ALARM_MODE, if is 0 then the behaviour is exactly the same as the original
CUSTOM_ALARM_IGNORE_MS, is the time in ms that the sound will not be triggered. So if is 200 ms and the user switch from A to C, sound B wont be played if the user took less than 200 ms on moving the switch from B to C.","Menu is pretty simple; I can add that later in case you don't want to dig into the source too much.

That would be awesome.

While at reworking, I think it also makes sense for AUDIO_AddQueue to check, whether the music being added to the queue is the same as the last entry in the queue, and in that case discard the duplicate entry.

Not only duplicates, but also how many ms since it was triggered, to skip the sounds while switching a 3 state switch. I do not really agree with keeping ALL the switches voices all the time, I like how it drops or interrupts voices. But ofc this would need some kind of survey, or option.

I wasn't aware that someone finally found a fix for the ""saving"" issue - great!

Yes, sadly is a hardware issue that will need a pcb revision.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,961,2020-02-16T23:08:20Z,,2020-08-09T01:14:49Z,OPEN,False,35,9,5,https://github.com/eried,New method for handling custom alarms,13,[],https://github.com/DeviationTX/deviation/pull/961,https://github.com/TheRealMoeder,5,https://github.com/DeviationTX/deviation/pull/961#issuecomment-590060841,"This fixes #960
Available settings in src/music.c:
USE_NEW_CUSTOM_ALARM_MODE, if is 0 then the behaviour is exactly the same as the original
CUSTOM_ALARM_IGNORE_MS, is the time in ms that the sound will not be triggered. So if is 200 ms and the user switch from A to C, sound B wont be played if the user took less than 200 ms on moving the switch from B to C.","While at reworking, I think it also makes sense for AUDIO_AddQueue to check, whether the music being added to the queue is the same as the last entry in the queue, and in that case discard the duplicate entry.

Not only duplicates, but also how many ms since it was triggered, to skip the sounds while switching a 3 state switch. I do not really agree with keeping ALL the switches voices all the time, I like how it drops or interrupts voices. But ofc this would need some kind of survey, or option.

Well, the switch issue would be solved with adding the alarm group to a queue entry. Which means an alarm from the same group will cancel old alarms in the queue with the same group id. At least that's how thought of it. Do you get what I mean?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,961,2020-02-16T23:08:20Z,,2020-08-09T01:14:49Z,OPEN,False,35,9,5,https://github.com/eried,New method for handling custom alarms,13,[],https://github.com/DeviationTX/deviation/pull/961,https://github.com/eried,6,https://github.com/DeviationTX/deviation/pull/961#issuecomment-590065035,"This fixes #960
Available settings in src/music.c:
USE_NEW_CUSTOM_ALARM_MODE, if is 0 then the behaviour is exactly the same as the original
CUSTOM_ALARM_IGNORE_MS, is the time in ms that the sound will not be triggered. So if is 200 ms and the user switch from A to C, sound B wont be played if the user took less than 200 ms on moving the switch from B to C.","Yes I understand about the ""groups"", that concept makes skipping voices harder to implement, and it just solves the ""switching from A to C without hearing B"".
Just for the sake of it, I am going to list the cases:


Able to skip currently playing voices:



Except if is an alarm or some important stuff:



Those two are common sense, and not open for discussion, right?
3) Skip voices from the same switch:

This is also common sense. However:
4) Skip pending voices, even if they are not from the same switch:

In my opinion, in that example the user should not have to hear all the switches positions in a queue. That could be the setting of ""priority of switch position"", however I still do not see much of a point of enqueueing (and hearing) all voice switches.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,961,2020-02-16T23:08:20Z,,2020-08-09T01:14:49Z,OPEN,False,35,9,5,https://github.com/eried,New method for handling custom alarms,13,[],https://github.com/DeviationTX/deviation/pull/961,https://github.com/TheRealMoeder,7,https://github.com/DeviationTX/deviation/pull/961#issuecomment-590107013,"This fixes #960
Available settings in src/music.c:
USE_NEW_CUSTOM_ALARM_MODE, if is 0 then the behaviour is exactly the same as the original
CUSTOM_ALARM_IGNORE_MS, is the time in ms that the sound will not be triggered. So if is 200 ms and the user switch from A to C, sound B wont be played if the user took less than 200 ms on moving the switch from B to C.","Able to skip currently playing voices:
Except if is an alarm or some important stuff:
Those two are common sense, and not open for discussion, right?


Right, would be solvable with the switch group concept.


Skip voices from the same switch:


This was what started the whole discussion, so nothing to add here.


Skip pending voices, even if they are not from the same switch:
In my opinion, in that example the user should not have to hear all the switches positions in a queue. That could be the setting of ""priority of switch position"", however I still do not see much of a point of enqueueing (and hearing) all voice switches.


This is the only case which would need the priority setting. But I'm having some issues about making setting each alarms priority a requirement. From a user perspective, I think telemetry, timer and battery alarms are all somehow high priority unless specifically changing this behavior, so this will probably be the default behavior. Your wish number 4 could be achievable by having the option to ""upgrade"" specific switch settings to the same high priority level as the ones above.
I do not think we can omit enqueuing all switches, as this will make the behavior somewhat unpredictable and I again think of the case of dual switch flips at the same time.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,961,2020-02-16T23:08:20Z,,2020-08-09T01:14:49Z,OPEN,False,35,9,5,https://github.com/eried,New method for handling custom alarms,13,[],https://github.com/DeviationTX/deviation/pull/961,https://github.com/eried,8,https://github.com/DeviationTX/deviation/pull/961#issuecomment-591875856,"This fixes #960
Available settings in src/music.c:
USE_NEW_CUSTOM_ALARM_MODE, if is 0 then the behaviour is exactly the same as the original
CUSTOM_ALARM_IGNORE_MS, is the time in ms that the sound will not be triggered. So if is 200 ms and the user switch from A to C, sound B wont be played if the user took less than 200 ms on moving the switch from B to C.","I am still thinking on a solution, so question for you @TheRealMoeder, Imagine 2 switches, you switch one, voice start playing... switch the 2nd one. Does the first voice gets interrupted?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,961,2020-02-16T23:08:20Z,,2020-08-09T01:14:49Z,OPEN,False,35,9,5,https://github.com/eried,New method for handling custom alarms,13,[],https://github.com/DeviationTX/deviation/pull/961,https://github.com/TheRealMoeder,9,https://github.com/DeviationTX/deviation/pull/961#issuecomment-592063089,"This fixes #960
Available settings in src/music.c:
USE_NEW_CUSTOM_ALARM_MODE, if is 0 then the behaviour is exactly the same as the original
CUSTOM_ALARM_IGNORE_MS, is the time in ms that the sound will not be triggered. So if is 200 ms and the user switch from A to C, sound B wont be played if the user took less than 200 ms on moving the switch from B to C.","I am still thinking on a solution, so question for you @TheRealMoeder, Imagine 2 switches, you switch one, voice start playing... switch the 2nd one. Does the first voice gets interrupted?

I can imagine both behaviors, but I tend to prefer the first voice not being interrupted",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,964,2020-03-01T16:45:40Z,2020-03-01T16:47:51Z,2020-03-01T16:47:51Z,CLOSED,False,15,0,1,https://github.com/vladislavy,Add power on delay for t8sg_v2 series,1,[],https://github.com/DeviationTX/deviation/pull/964,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/964,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,965,2020-03-01T17:09:42Z,2020-03-02T13:32:01Z,2020-03-02T13:32:01Z,CLOSED,False,15,0,1,https://github.com/vladislavy,Add power on delay to t8sg_v2 series,5,[],https://github.com/DeviationTX/deviation/pull/965,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/965,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,967,2020-03-04T10:23:21Z,2020-03-04T10:33:13Z,2020-03-04T10:33:14Z,MERGED,True,1,1,1,https://github.com/vladislavy,Fix alignment at Telemetry monitor DSM,1,[],https://github.com/DeviationTX/deviation/pull/967,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/967,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,968,2020-03-04T13:16:22Z,2020-03-04T13:23:06Z,2020-03-04T13:23:07Z,MERGED,True,4,4,1,https://github.com/vladislavy,Revert Telemetry monotor DSM to default layout,1,[],https://github.com/DeviationTX/deviation/pull/968,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/968,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,969,2020-03-06T06:32:54Z,2020-03-06T06:50:12Z,2020-03-06T06:50:12Z,MERGED,True,1,1,1,https://github.com/vladislavy,Fix DSM telemetry RSSI signed 8bit value,2,[],https://github.com/DeviationTX/deviation/pull/969,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/969,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,970,2020-03-06T12:32:01Z,2020-03-06T12:38:44Z,2020-03-06T12:38:44Z,MERGED,True,2,1,1,https://github.com/vladislavy,Fix DSM telemetry RSSI max and min values,1,[],https://github.com/DeviationTX/deviation/pull/970,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/970,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,971,2020-03-20T08:23:33Z,2020-03-20T08:30:14Z,2020-03-20T08:30:14Z,MERGED,True,39,18,18,https://github.com/vladislavy,Fix devo10 buttons,1,[],https://github.com/DeviationTX/deviation/pull/971,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/971,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,972,2020-03-26T05:56:56Z,2020-03-26T06:03:42Z,2020-03-26T12:42:35Z,CLOSED,False,25,6,2,https://github.com/vladislavy,"Add ""USB drive erase"" procedure",1,[],https://github.com/DeviationTX/deviation/pull/972,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/972,"USB drive erase procedure

""Power ON"" transmitter with USB mode (ENT + Power ON)
Press ""UP"" button
After short beep press ""DOWN"" button
After short beep ""Power OFF"" transmitter
""Power ON"" transmitter with USB mode (ENT + Power ON)
Format transmitter USB drive with ""Quick Format"" option enabled","USB drive erase procedure

""Power ON"" transmitter with USB mode (ENT + Power ON)
Press ""UP"" button
After short beep press ""DOWN"" button
After short beep ""Power OFF"" transmitter
""Power ON"" transmitter with USB mode (ENT + Power ON)
Format transmitter USB drive with ""Quick Format"" option enabled",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,972,2020-03-26T05:56:56Z,2020-03-26T06:03:42Z,2020-03-26T12:42:35Z,CLOSED,False,25,6,2,https://github.com/vladislavy,"Add ""USB drive erase"" procedure",1,[],https://github.com/DeviationTX/deviation/pull/972,https://github.com/eried,2,https://github.com/DeviationTX/deviation/pull/972#issuecomment-604300442,"USB drive erase procedure

""Power ON"" transmitter with USB mode (ENT + Power ON)
Press ""UP"" button
After short beep press ""DOWN"" button
After short beep ""Power OFF"" transmitter
""Power ON"" transmitter with USB mode (ENT + Power ON)
Format transmitter USB drive with ""Quick Format"" option enabled",Maybe on the usb logo a small text could appear with those instructions? I could change the bitmap,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,972,2020-03-26T05:56:56Z,2020-03-26T06:03:42Z,2020-03-26T12:42:35Z,CLOSED,False,25,6,2,https://github.com/vladislavy,"Add ""USB drive erase"" procedure",1,[],https://github.com/DeviationTX/deviation/pull/972,https://github.com/vladislavy,3,https://github.com/DeviationTX/deviation/pull/972#issuecomment-604409190,"USB drive erase procedure

""Power ON"" transmitter with USB mode (ENT + Power ON)
Press ""UP"" button
After short beep press ""DOWN"" button
After short beep ""Power OFF"" transmitter
""Power ON"" transmitter with USB mode (ENT + Power ON)
Format transmitter USB drive with ""Quick Format"" option enabled","I'm not sure we need this procedure for all transmitters, but USB logo is common for every GUI size. Probably we need restrict USB drive erase procedure to T8SG series and IR8M.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,973,2020-03-27T05:12:55Z,2020-03-27T05:35:33Z,2020-03-27T05:35:33Z,MERGED,True,33,7,7,https://github.com/vladislavy,"Add ""USB drive erase"" procedure",2,[],https://github.com/DeviationTX/deviation/pull/973,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/973,"USB drive erase procedure:

""Power ON"" transmitter with USB mode (ENT + Power ON)
Press ""UP"" button
After short beep press ""DOWN"" button
After short beep ""Power OFF"" transmitter
""Power ON"" transmitter with USB mode (ENT + Power ON)
Format transmitter USB drive with ""Quick Format"" option enabled","USB drive erase procedure:

""Power ON"" transmitter with USB mode (ENT + Power ON)
Press ""UP"" button
After short beep press ""DOWN"" button
After short beep ""Power OFF"" transmitter
""Power ON"" transmitter with USB mode (ENT + Power ON)
Format transmitter USB drive with ""Quick Format"" option enabled",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,975,2020-04-02T12:43:57Z,2020-04-03T11:18:32Z,2020-04-03T11:18:32Z,CLOSED,False,6,6,1,https://github.com/vladislavy,Try to fix travis build,1,[],https://github.com/DeviationTX/deviation/pull/975,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/975,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,976,2020-04-02T12:59:17Z,2020-04-02T13:13:09Z,2020-04-02T13:13:31Z,CLOSED,False,6,6,1,https://github.com/vladislavy,Try to fix travis build,1,[],https://github.com/DeviationTX/deviation/pull/976,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/976,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,977,2020-04-02T22:21:42Z,2020-04-17T05:18:33Z,2020-04-17T05:18:33Z,MERGED,True,5,5,1,https://github.com/TheRealMoeder,Adjust travis script to build tags,1,[],https://github.com/DeviationTX/deviation/pull/977,https://github.com/TheRealMoeder,1,https://github.com/DeviationTX/deviation/pull/977,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,978,2020-04-03T11:33:04Z,2020-05-05T19:35:25Z,2020-05-07T05:46:43Z,MERGED,True,140,85,1,https://github.com/MJ666,Initial FrSky ACCST V2.1.x support,4,[],https://github.com/DeviationTX/deviation/pull/978,https://github.com/MJ666,1,https://github.com/DeviationTX/deviation/pull/978,"Tested on bench with a Devo10 and an R-XSR receiver (V2.1.0 FCC firmware). The RX will bind as usual and telemetry is received and looks reasonable. The channel data are checked with the BetaFlight configurator with the RX connected to an AlienFlightNG Anubis16 flight controller. V1.x.x FCC mode is also still working as expected. The LBT (EU) mode is not yet tested. More testing and feedback is welcome. The code came partially from the MPM:
https://github.com/pascallanger/DIY-Multiprotocol-TX-Module
Edit: I really don't wanted to offend anyone here. Fur sure this work would not be possible without Pascal's efforts to reverse engineering the protocol. Many thanks go to him for the initial implementation. Since I was looking for deviation support of the V2.1.x protocol I used the opportunity and based my code on his work. I also posted in the Deviation forum to ask if anyone is already working on this before I looked into the code:
https://www.deviationtx.com/forum/protocol-development/8682-frsky-accst-v2-1-x-protocol-support
Locks to be my initial thinking to reference the source of the code was not good enough and I want to apologize for this.","Tested on bench with a Devo10 and an R-XSR receiver (V2.1.0 FCC firmware). The RX will bind as usual and telemetry is received and looks reasonable. The channel data are checked with the BetaFlight configurator with the RX connected to an AlienFlightNG Anubis16 flight controller. V1.x.x FCC mode is also still working as expected. The LBT (EU) mode is not yet tested. More testing and feedback is welcome. The code came partially from the MPM:
https://github.com/pascallanger/DIY-Multiprotocol-TX-Module
Edit: I really don't wanted to offend anyone here. Fur sure this work would not be possible without Pascal's efforts to reverse engineering the protocol. Many thanks go to him for the initial implementation. Since I was looking for deviation support of the V2.1.x protocol I used the opportunity and based my code on his work. I also posted in the Deviation forum to ask if anyone is already working on this before I looked into the code:
https://www.deviationtx.com/forum/protocol-development/8682-frsky-accst-v2-1-x-protocol-support
Locks to be my initial thinking to reference the source of the code was not good enough and I want to apologize for this.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,978,2020-04-03T11:33:04Z,2020-05-05T19:35:25Z,2020-05-07T05:46:43Z,MERGED,True,140,85,1,https://github.com/MJ666,Initial FrSky ACCST V2.1.x support,4,[],https://github.com/DeviationTX/deviation/pull/978,https://github.com/pascallanger,2,https://github.com/DeviationTX/deviation/pull/978#issuecomment-608540755,"Tested on bench with a Devo10 and an R-XSR receiver (V2.1.0 FCC firmware). The RX will bind as usual and telemetry is received and looks reasonable. The channel data are checked with the BetaFlight configurator with the RX connected to an AlienFlightNG Anubis16 flight controller. V1.x.x FCC mode is also still working as expected. The LBT (EU) mode is not yet tested. More testing and feedback is welcome. The code came partially from the MPM:
https://github.com/pascallanger/DIY-Multiprotocol-TX-Module
Edit: I really don't wanted to offend anyone here. Fur sure this work would not be possible without Pascal's efforts to reverse engineering the protocol. Many thanks go to him for the initial implementation. Since I was looking for deviation support of the V2.1.x protocol I used the opportunity and based my code on his work. I also posted in the Deviation forum to ask if anyone is already working on this before I looked into the code:
https://www.deviationtx.com/forum/protocol-development/8682-frsky-accst-v2-1-x-protocol-support
Locks to be my initial thinking to reference the source of the code was not good enough and I want to apologize for this.","When you say ""partially"", all the modifications you've applied come from my code... A thank you for the long hours I've spent reversing this protocol would be appreciated...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,978,2020-04-03T11:33:04Z,2020-05-05T19:35:25Z,2020-05-07T05:46:43Z,MERGED,True,140,85,1,https://github.com/MJ666,Initial FrSky ACCST V2.1.x support,4,[],https://github.com/DeviationTX/deviation/pull/978,https://github.com/MJ666,3,https://github.com/DeviationTX/deviation/pull/978#issuecomment-608575217,"Tested on bench with a Devo10 and an R-XSR receiver (V2.1.0 FCC firmware). The RX will bind as usual and telemetry is received and looks reasonable. The channel data are checked with the BetaFlight configurator with the RX connected to an AlienFlightNG Anubis16 flight controller. V1.x.x FCC mode is also still working as expected. The LBT (EU) mode is not yet tested. More testing and feedback is welcome. The code came partially from the MPM:
https://github.com/pascallanger/DIY-Multiprotocol-TX-Module
Edit: I really don't wanted to offend anyone here. Fur sure this work would not be possible without Pascal's efforts to reverse engineering the protocol. Many thanks go to him for the initial implementation. Since I was looking for deviation support of the V2.1.x protocol I used the opportunity and based my code on his work. I also posted in the Deviation forum to ask if anyone is already working on this before I looked into the code:
https://www.deviationtx.com/forum/protocol-development/8682-frsky-accst-v2-1-x-protocol-support
Locks to be my initial thinking to reference the source of the code was not good enough and I want to apologize for this.",For sure the updates I applied to deviation are completely based on your code. Parts are a plain copy and other parts are rewritten and modified. I definitely appreciate the work you have done for MPM and whitout this my work would not be possible.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,978,2020-04-03T11:33:04Z,2020-05-05T19:35:25Z,2020-05-07T05:46:43Z,MERGED,True,140,85,1,https://github.com/MJ666,Initial FrSky ACCST V2.1.x support,4,[],https://github.com/DeviationTX/deviation/pull/978,https://github.com/TheRealMoeder,4,https://github.com/DeviationTX/deviation/pull/978#issuecomment-609010205,"Tested on bench with a Devo10 and an R-XSR receiver (V2.1.0 FCC firmware). The RX will bind as usual and telemetry is received and looks reasonable. The channel data are checked with the BetaFlight configurator with the RX connected to an AlienFlightNG Anubis16 flight controller. V1.x.x FCC mode is also still working as expected. The LBT (EU) mode is not yet tested. More testing and feedback is welcome. The code came partially from the MPM:
https://github.com/pascallanger/DIY-Multiprotocol-TX-Module
Edit: I really don't wanted to offend anyone here. Fur sure this work would not be possible without Pascal's efforts to reverse engineering the protocol. Many thanks go to him for the initial implementation. Since I was looking for deviation support of the V2.1.x protocol I used the opportunity and based my code on his work. I also posted in the Deviation forum to ask if anyone is already working on this before I looked into the code:
https://www.deviationtx.com/forum/protocol-development/8682-frsky-accst-v2-1-x-protocol-support
Locks to be my initial thinking to reference the source of the code was not good enough and I want to apologize for this.",I'm sure MJ666 didn't try to offend you Pascal. @MJ666 Why not just add a small comment in the code referencing Pascal's MPM work in this protocol? You can find such reference in other protocol modules as well. Nonetheless: Thanks to both of you for the hard work!,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,978,2020-04-03T11:33:04Z,2020-05-05T19:35:25Z,2020-05-07T05:46:43Z,MERGED,True,140,85,1,https://github.com/MJ666,Initial FrSky ACCST V2.1.x support,4,[],https://github.com/DeviationTX/deviation/pull/978,https://github.com/pascallanger,5,https://github.com/DeviationTX/deviation/pull/978#issuecomment-609011967,"Tested on bench with a Devo10 and an R-XSR receiver (V2.1.0 FCC firmware). The RX will bind as usual and telemetry is received and looks reasonable. The channel data are checked with the BetaFlight configurator with the RX connected to an AlienFlightNG Anubis16 flight controller. V1.x.x FCC mode is also still working as expected. The LBT (EU) mode is not yet tested. More testing and feedback is welcome. The code came partially from the MPM:
https://github.com/pascallanger/DIY-Multiprotocol-TX-Module
Edit: I really don't wanted to offend anyone here. Fur sure this work would not be possible without Pascal's efforts to reverse engineering the protocol. Many thanks go to him for the initial implementation. Since I was looking for deviation support of the V2.1.x protocol I used the opportunity and based my code on his work. I also posted in the Deviation forum to ask if anyone is already working on this before I looked into the code:
https://www.deviationtx.com/forum/protocol-development/8682-frsky-accst-v2-1-x-protocol-support
Locks to be my initial thinking to reference the source of the code was not good enough and I want to apologize for this.",That's not what I meant... I was just saying you can add a thanks note when porting a protocol to the author in the pull request. That's all...,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,978,2020-04-03T11:33:04Z,2020-05-05T19:35:25Z,2020-05-07T05:46:43Z,MERGED,True,140,85,1,https://github.com/MJ666,Initial FrSky ACCST V2.1.x support,4,[],https://github.com/DeviationTX/deviation/pull/978,https://github.com/MJ666,6,https://github.com/DeviationTX/deviation/pull/978#issuecomment-609031172,"Tested on bench with a Devo10 and an R-XSR receiver (V2.1.0 FCC firmware). The RX will bind as usual and telemetry is received and looks reasonable. The channel data are checked with the BetaFlight configurator with the RX connected to an AlienFlightNG Anubis16 flight controller. V1.x.x FCC mode is also still working as expected. The LBT (EU) mode is not yet tested. More testing and feedback is welcome. The code came partially from the MPM:
https://github.com/pascallanger/DIY-Multiprotocol-TX-Module
Edit: I really don't wanted to offend anyone here. Fur sure this work would not be possible without Pascal's efforts to reverse engineering the protocol. Many thanks go to him for the initial implementation. Since I was looking for deviation support of the V2.1.x protocol I used the opportunity and based my code on his work. I also posted in the Deviation forum to ask if anyone is already working on this before I looked into the code:
https://www.deviationtx.com/forum/protocol-development/8682-frsky-accst-v2-1-x-protocol-support
Locks to be my initial thinking to reference the source of the code was not good enough and I want to apologize for this.",Also bench tested LBT firmware with R-XSR LBT V2.1.0 firmware. Chanel output looks to be OK but telemetry RSSI (around 120 when RX and TX near by) and LQI (static 127 not depending on distance) values looks to be strange on LBT. For the FCC firmware values lock to be OK. RSSI is around 100 and LQI around 50 when RX and TX are near by.,True,{'THUMBS_UP': ['https://github.com/gretel']}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,978,2020-04-03T11:33:04Z,2020-05-05T19:35:25Z,2020-05-07T05:46:43Z,MERGED,True,140,85,1,https://github.com/MJ666,Initial FrSky ACCST V2.1.x support,4,[],https://github.com/DeviationTX/deviation/pull/978,https://github.com/TheRealMoeder,7,https://github.com/DeviationTX/deviation/pull/978#issuecomment-615511285,"Tested on bench with a Devo10 and an R-XSR receiver (V2.1.0 FCC firmware). The RX will bind as usual and telemetry is received and looks reasonable. The channel data are checked with the BetaFlight configurator with the RX connected to an AlienFlightNG Anubis16 flight controller. V1.x.x FCC mode is also still working as expected. The LBT (EU) mode is not yet tested. More testing and feedback is welcome. The code came partially from the MPM:
https://github.com/pascallanger/DIY-Multiprotocol-TX-Module
Edit: I really don't wanted to offend anyone here. Fur sure this work would not be possible without Pascal's efforts to reverse engineering the protocol. Many thanks go to him for the initial implementation. Since I was looking for deviation support of the V2.1.x protocol I used the opportunity and based my code on his work. I also posted in the Deviation forum to ask if anyone is already working on this before I looked into the code:
https://www.deviationtx.com/forum/protocol-development/8682-frsky-accst-v2-1-x-protocol-support
Locks to be my initial thinking to reference the source of the code was not good enough and I want to apologize for this.",I have no RX to check this. I'd prefer a some more positive feedback before merging if possible.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,978,2020-04-03T11:33:04Z,2020-05-05T19:35:25Z,2020-05-07T05:46:43Z,MERGED,True,140,85,1,https://github.com/MJ666,Initial FrSky ACCST V2.1.x support,4,[],https://github.com/DeviationTX/deviation/pull/978,https://github.com/MJ666,8,https://github.com/DeviationTX/deviation/pull/978#issuecomment-615620354,"Tested on bench with a Devo10 and an R-XSR receiver (V2.1.0 FCC firmware). The RX will bind as usual and telemetry is received and looks reasonable. The channel data are checked with the BetaFlight configurator with the RX connected to an AlienFlightNG Anubis16 flight controller. V1.x.x FCC mode is also still working as expected. The LBT (EU) mode is not yet tested. More testing and feedback is welcome. The code came partially from the MPM:
https://github.com/pascallanger/DIY-Multiprotocol-TX-Module
Edit: I really don't wanted to offend anyone here. Fur sure this work would not be possible without Pascal's efforts to reverse engineering the protocol. Many thanks go to him for the initial implementation. Since I was looking for deviation support of the V2.1.x protocol I used the opportunity and based my code on his work. I also posted in the Deviation forum to ask if anyone is already working on this before I looked into the code:
https://www.deviationtx.com/forum/protocol-development/8682-frsky-accst-v2-1-x-protocol-support
Locks to be my initial thinking to reference the source of the code was not good enough and I want to apologize for this.","Have tested this some more with theR-XSR all firmware variants and a updated version of Betaflight:
betaflight/betaflight#9697
I successfully flight tested this with all four protocol variants. I have see some telemetry issues with BF wich is likely still in the Betaflight code. It looks to be LBT v 2.1 is mostly affected. I now also have an Jumper T16 with the MPM. The telemetry values i can see with the R-XSR are very similar to what i can see with the updaded Deviation code. Some values are quite different between the firmware variants for some reason. With LBT I have very high LQI values. If there is someone out there who requires a binary for testing please let me know your TX and I can build them.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,978,2020-04-03T11:33:04Z,2020-05-05T19:35:25Z,2020-05-07T05:46:43Z,MERGED,True,140,85,1,https://github.com/MJ666,Initial FrSky ACCST V2.1.x support,4,[],https://github.com/DeviationTX/deviation/pull/978,https://github.com/pascallanger,9,https://github.com/DeviationTX/deviation/pull/978#issuecomment-615675024,"Tested on bench with a Devo10 and an R-XSR receiver (V2.1.0 FCC firmware). The RX will bind as usual and telemetry is received and looks reasonable. The channel data are checked with the BetaFlight configurator with the RX connected to an AlienFlightNG Anubis16 flight controller. V1.x.x FCC mode is also still working as expected. The LBT (EU) mode is not yet tested. More testing and feedback is welcome. The code came partially from the MPM:
https://github.com/pascallanger/DIY-Multiprotocol-TX-Module
Edit: I really don't wanted to offend anyone here. Fur sure this work would not be possible without Pascal's efforts to reverse engineering the protocol. Many thanks go to him for the initial implementation. Since I was looking for deviation support of the V2.1.x protocol I used the opportunity and based my code on his work. I also posted in the Deviation forum to ask if anyone is already working on this before I looked into the code:
https://www.deviationtx.com/forum/protocol-development/8682-frsky-accst-v2-1-x-protocol-support
Locks to be my initial thinking to reference the source of the code was not good enough and I want to apologize for this.","I had to adjust the protocol timing for the telemetry (while developing before the release, nothing has changed since the release and I have no complains). Rssi/lqi is usually something but the number of packets per seconds is the true indication. For example all the telemetry looked to work but I was only receiving a third of the packets... I haven't checked your code but I also implemented LBT per the local regulation (not the protocol name but really listen before talk).
Pascal",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,978,2020-04-03T11:33:04Z,2020-05-05T19:35:25Z,2020-05-07T05:46:43Z,MERGED,True,140,85,1,https://github.com/MJ666,Initial FrSky ACCST V2.1.x support,4,[],https://github.com/DeviationTX/deviation/pull/978,https://github.com/MJ666,10,https://github.com/DeviationTX/deviation/pull/978#issuecomment-615869139,"Tested on bench with a Devo10 and an R-XSR receiver (V2.1.0 FCC firmware). The RX will bind as usual and telemetry is received and looks reasonable. The channel data are checked with the BetaFlight configurator with the RX connected to an AlienFlightNG Anubis16 flight controller. V1.x.x FCC mode is also still working as expected. The LBT (EU) mode is not yet tested. More testing and feedback is welcome. The code came partially from the MPM:
https://github.com/pascallanger/DIY-Multiprotocol-TX-Module
Edit: I really don't wanted to offend anyone here. Fur sure this work would not be possible without Pascal's efforts to reverse engineering the protocol. Many thanks go to him for the initial implementation. Since I was looking for deviation support of the V2.1.x protocol I used the opportunity and based my code on his work. I also posted in the Deviation forum to ask if anyone is already working on this before I looked into the code:
https://www.deviationtx.com/forum/protocol-development/8682-frsky-accst-v2-1-x-protocol-support
Locks to be my initial thinking to reference the source of the code was not good enough and I want to apologize for this.","I made some comparison between DEVO10, Jumper T16 (MPM) and the four protocols. (MPM). Here are the test results:
`DEVO v1 FCC
RSSI	89-92
LQI		43-47
LRSSI	-11- -17
VOLT1	3.3V
DEVO v1 LBT
RSSI	94-96
LQI		127 statisch
LRSSI	-16- -23
VOLT1	3.3V
DEVO v2.1 FCC
RSSI	115-116
LQI		41-46
LRSSI	-21- -26
VOLT1	3.3V
DEVO v2.1 LBT (looks to be only sporadic updates)
RSSI	109-112
LQI		127 statisch
LRSSI	-16- -23
VOLT1	3.3V
T16 v1 FCC
TRSS	120-121
TQIy	42-48
RSSI	100-101
RxbT	3.5V
T16 v1 LBT
TRSS	97-100
TQIy	127 statisch
RSSI	96-99
RxbT	3.5V
T16 v2.1 FCC
TRSS	105-110
TQIy	40-46
RSSI	103-106
RxbT	3.5V
T16 v2.1 LBT
TRSS	105-110
TQIy	127 statisch
RSSI	103-106
RxbT	3.5V
`
The R-XSR is here only powered by 3.3V when connected to the FC on the bench. I also did some tests with a 5V supply but this has not affected the results. The results with the BETAFPV F4 FC 1S Brushless FC look similar. There are some difference how MPM and deviation is showing the telemetry data. I can see for V2 LBT the telemetry is very unstable with the Devo but not with the MPM. I did quite some flying with the BetaFPV last days with all different protocols including the V2 LBT and have not seen any issues at this side.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,978,2020-04-03T11:33:04Z,2020-05-05T19:35:25Z,2020-05-07T05:46:43Z,MERGED,True,140,85,1,https://github.com/MJ666,Initial FrSky ACCST V2.1.x support,4,[],https://github.com/DeviationTX/deviation/pull/978,https://github.com/pascallanger,11,https://github.com/DeviationTX/deviation/pull/978#issuecomment-615891021,"Tested on bench with a Devo10 and an R-XSR receiver (V2.1.0 FCC firmware). The RX will bind as usual and telemetry is received and looks reasonable. The channel data are checked with the BetaFlight configurator with the RX connected to an AlienFlightNG Anubis16 flight controller. V1.x.x FCC mode is also still working as expected. The LBT (EU) mode is not yet tested. More testing and feedback is welcome. The code came partially from the MPM:
https://github.com/pascallanger/DIY-Multiprotocol-TX-Module
Edit: I really don't wanted to offend anyone here. Fur sure this work would not be possible without Pascal's efforts to reverse engineering the protocol. Many thanks go to him for the initial implementation. Since I was looking for deviation support of the V2.1.x protocol I used the opportunity and based my code on his work. I also posted in the Deviation forum to ask if anyone is already working on this before I looked into the code:
https://www.deviationtx.com/forum/protocol-development/8682-frsky-accst-v2-1-x-protocol-support
Locks to be my initial thinking to reference the source of the code was not good enough and I want to apologize for this.","Again, you are looking at RSSI, TRSS TQly which are not good indicators. You need to look at the packets per seconds on the telemetry to have a real idea of what's going on.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,978,2020-04-03T11:33:04Z,2020-05-05T19:35:25Z,2020-05-07T05:46:43Z,MERGED,True,140,85,1,https://github.com/MJ666,Initial FrSky ACCST V2.1.x support,4,[],https://github.com/DeviationTX/deviation/pull/978,https://github.com/vladislavy,12,https://github.com/DeviationTX/deviation/pull/978#issuecomment-616480021,"Tested on bench with a Devo10 and an R-XSR receiver (V2.1.0 FCC firmware). The RX will bind as usual and telemetry is received and looks reasonable. The channel data are checked with the BetaFlight configurator with the RX connected to an AlienFlightNG Anubis16 flight controller. V1.x.x FCC mode is also still working as expected. The LBT (EU) mode is not yet tested. More testing and feedback is welcome. The code came partially from the MPM:
https://github.com/pascallanger/DIY-Multiprotocol-TX-Module
Edit: I really don't wanted to offend anyone here. Fur sure this work would not be possible without Pascal's efforts to reverse engineering the protocol. Many thanks go to him for the initial implementation. Since I was looking for deviation support of the V2.1.x protocol I used the opportunity and based my code on his work. I also posted in the Deviation forum to ask if anyone is already working on this before I looked into the code:
https://www.deviationtx.com/forum/protocol-development/8682-frsky-accst-v2-1-x-protocol-support
Locks to be my initial thinking to reference the source of the code was not good enough and I want to apologize for this.","arm-none-eabi-ld: objs/devo7e/frskyx_cc2500.elf section .text' will not fit in region ram'
arm-none-eabi-ld: region `ram' overflowed by 454 bytes
make[1]: *** [objs/devo7e/frskyx_cc2500.bin] Error 1
make[1]: *** Waiting for unfinished jobs....
make: *** [zip_devo7e] Error 2
devo7e protocol module can't fit to 4K",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,978,2020-04-03T11:33:04Z,2020-05-05T19:35:25Z,2020-05-07T05:46:43Z,MERGED,True,140,85,1,https://github.com/MJ666,Initial FrSky ACCST V2.1.x support,4,[],https://github.com/DeviationTX/deviation/pull/978,https://github.com/MJ666,13,https://github.com/DeviationTX/deviation/pull/978#issuecomment-616551250,"Tested on bench with a Devo10 and an R-XSR receiver (V2.1.0 FCC firmware). The RX will bind as usual and telemetry is received and looks reasonable. The channel data are checked with the BetaFlight configurator with the RX connected to an AlienFlightNG Anubis16 flight controller. V1.x.x FCC mode is also still working as expected. The LBT (EU) mode is not yet tested. More testing and feedback is welcome. The code came partially from the MPM:
https://github.com/pascallanger/DIY-Multiprotocol-TX-Module
Edit: I really don't wanted to offend anyone here. Fur sure this work would not be possible without Pascal's efforts to reverse engineering the protocol. Many thanks go to him for the initial implementation. Since I was looking for deviation support of the V2.1.x protocol I used the opportunity and based my code on his work. I also posted in the Deviation forum to ask if anyone is already working on this before I looked into the code:
https://www.deviationtx.com/forum/protocol-development/8682-frsky-accst-v2-1-x-protocol-support
Locks to be my initial thinking to reference the source of the code was not good enough and I want to apologize for this.",Not sure what options we have to shrink the size of the module. Likely we need to Keep the devo7e without v2 support and add a compile time option for this?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,978,2020-04-03T11:33:04Z,2020-05-05T19:35:25Z,2020-05-07T05:46:43Z,MERGED,True,140,85,1,https://github.com/MJ666,Initial FrSky ACCST V2.1.x support,4,[],https://github.com/DeviationTX/deviation/pull/978,https://github.com/vladislavy,14,https://github.com/DeviationTX/deviation/pull/978#issuecomment-616560243,"Tested on bench with a Devo10 and an R-XSR receiver (V2.1.0 FCC firmware). The RX will bind as usual and telemetry is received and looks reasonable. The channel data are checked with the BetaFlight configurator with the RX connected to an AlienFlightNG Anubis16 flight controller. V1.x.x FCC mode is also still working as expected. The LBT (EU) mode is not yet tested. More testing and feedback is welcome. The code came partially from the MPM:
https://github.com/pascallanger/DIY-Multiprotocol-TX-Module
Edit: I really don't wanted to offend anyone here. Fur sure this work would not be possible without Pascal's efforts to reverse engineering the protocol. Many thanks go to him for the initial implementation. Since I was looking for deviation support of the V2.1.x protocol I used the opportunity and based my code on his work. I also posted in the Deviation forum to ask if anyone is already working on this before I looked into the code:
https://www.deviationtx.com/forum/protocol-development/8682-frsky-accst-v2-1-x-protocol-support
Locks to be my initial thinking to reference the source of the code was not good enough and I want to apologize for this.",You can use MODULAR for it.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,978,2020-04-03T11:33:04Z,2020-05-05T19:35:25Z,2020-05-07T05:46:43Z,MERGED,True,140,85,1,https://github.com/MJ666,Initial FrSky ACCST V2.1.x support,4,[],https://github.com/DeviationTX/deviation/pull/978,https://github.com/TheRealMoeder,15,https://github.com/DeviationTX/deviation/pull/978#issuecomment-616633445,"Tested on bench with a Devo10 and an R-XSR receiver (V2.1.0 FCC firmware). The RX will bind as usual and telemetry is received and looks reasonable. The channel data are checked with the BetaFlight configurator with the RX connected to an AlienFlightNG Anubis16 flight controller. V1.x.x FCC mode is also still working as expected. The LBT (EU) mode is not yet tested. More testing and feedback is welcome. The code came partially from the MPM:
https://github.com/pascallanger/DIY-Multiprotocol-TX-Module
Edit: I really don't wanted to offend anyone here. Fur sure this work would not be possible without Pascal's efforts to reverse engineering the protocol. Many thanks go to him for the initial implementation. Since I was looking for deviation support of the V2.1.x protocol I used the opportunity and based my code on his work. I also posted in the Deviation forum to ask if anyone is already working on this before I looked into the code:
https://www.deviationtx.com/forum/protocol-development/8682-frsky-accst-v2-1-x-protocol-support
Locks to be my initial thinking to reference the source of the code was not good enough and I want to apologize for this.","init_hop_FRSkyX2 looks pretty expensive with all its comparisons. Any ideas to shrink this?
Other Option would be to put FRSky V2 in separate module",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,978,2020-04-03T11:33:04Z,2020-05-05T19:35:25Z,2020-05-07T05:46:43Z,MERGED,True,140,85,1,https://github.com/MJ666,Initial FrSky ACCST V2.1.x support,4,[],https://github.com/DeviationTX/deviation/pull/978,https://github.com/MJ666,16,https://github.com/DeviationTX/deviation/pull/978#issuecomment-616675720,"Tested on bench with a Devo10 and an R-XSR receiver (V2.1.0 FCC firmware). The RX will bind as usual and telemetry is received and looks reasonable. The channel data are checked with the BetaFlight configurator with the RX connected to an AlienFlightNG Anubis16 flight controller. V1.x.x FCC mode is also still working as expected. The LBT (EU) mode is not yet tested. More testing and feedback is welcome. The code came partially from the MPM:
https://github.com/pascallanger/DIY-Multiprotocol-TX-Module
Edit: I really don't wanted to offend anyone here. Fur sure this work would not be possible without Pascal's efforts to reverse engineering the protocol. Many thanks go to him for the initial implementation. Since I was looking for deviation support of the V2.1.x protocol I used the opportunity and based my code on his work. I also posted in the Deviation forum to ask if anyone is already working on this before I looked into the code:
https://www.deviationtx.com/forum/protocol-development/8682-frsky-accst-v2-1-x-protocol-support
Locks to be my initial thinking to reference the source of the code was not good enough and I want to apologize for this.","@vladislavy updated the PR according to your advice.
@TheRealMoeder this code allows the bind information to be build in the proven way. Since this algorytm results in a table depending on the variable ID on TX and RX side. Not sure how this can be simplified without breaking something. A separate module would be possible but will impact the usability for all Deviation users and is duplication a lot of code. The image size for all transmitter will grow even more.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,978,2020-04-03T11:33:04Z,2020-05-05T19:35:25Z,2020-05-07T05:46:43Z,MERGED,True,140,85,1,https://github.com/MJ666,Initial FrSky ACCST V2.1.x support,4,[],https://github.com/DeviationTX/deviation/pull/978,https://github.com/TheRealMoeder,17,https://github.com/DeviationTX/deviation/pull/978#issuecomment-616741653,"Tested on bench with a Devo10 and an R-XSR receiver (V2.1.0 FCC firmware). The RX will bind as usual and telemetry is received and looks reasonable. The channel data are checked with the BetaFlight configurator with the RX connected to an AlienFlightNG Anubis16 flight controller. V1.x.x FCC mode is also still working as expected. The LBT (EU) mode is not yet tested. More testing and feedback is welcome. The code came partially from the MPM:
https://github.com/pascallanger/DIY-Multiprotocol-TX-Module
Edit: I really don't wanted to offend anyone here. Fur sure this work would not be possible without Pascal's efforts to reverse engineering the protocol. Many thanks go to him for the initial implementation. Since I was looking for deviation support of the V2.1.x protocol I used the opportunity and based my code on his work. I also posted in the Deviation forum to ask if anyone is already working on this before I looked into the code:
https://www.deviationtx.com/forum/protocol-development/8682-frsky-accst-v2-1-x-protocol-support
Locks to be my initial thinking to reference the source of the code was not good enough and I want to apologize for this.","There should be more room for optimization on the code, I can also see some pattern in the exceptions. I'll try to have a look into it",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,978,2020-04-03T11:33:04Z,2020-05-05T19:35:25Z,2020-05-07T05:46:43Z,MERGED,True,140,85,1,https://github.com/MJ666,Initial FrSky ACCST V2.1.x support,4,[],https://github.com/DeviationTX/deviation/pull/978,https://github.com/TheRealMoeder,18,https://github.com/DeviationTX/deviation/pull/978#issuecomment-616837361,"Tested on bench with a Devo10 and an R-XSR receiver (V2.1.0 FCC firmware). The RX will bind as usual and telemetry is received and looks reasonable. The channel data are checked with the BetaFlight configurator with the RX connected to an AlienFlightNG Anubis16 flight controller. V1.x.x FCC mode is also still working as expected. The LBT (EU) mode is not yet tested. More testing and feedback is welcome. The code came partially from the MPM:
https://github.com/pascallanger/DIY-Multiprotocol-TX-Module
Edit: I really don't wanted to offend anyone here. Fur sure this work would not be possible without Pascal's efforts to reverse engineering the protocol. Many thanks go to him for the initial implementation. Since I was looking for deviation support of the V2.1.x protocol I used the opportunity and based my code on his work. I also posted in the Deviation forum to ask if anyone is already working on this before I looked into the code:
https://www.deviationtx.com/forum/protocol-development/8682-frsky-accst-v2-1-x-protocol-support
Locks to be my initial thinking to reference the source of the code was not good enough and I want to apologize for this.","Looking at @pascallanger 's MPM code, he generates most part of the CRC table. Reusing the same code we can save 464 bytes in my quick test. Didn't check functionality, just copied the function, but I don't see why it shouldn't.
edit: additionally a few bytes can be spared by adding a for loop for the exceptions, but < 10 bytes to gain - mileage may vary depending on compiler version ;)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,978,2020-04-03T11:33:04Z,2020-05-05T19:35:25Z,2020-05-07T05:46:43Z,MERGED,True,140,85,1,https://github.com/MJ666,Initial FrSky ACCST V2.1.x support,4,[],https://github.com/DeviationTX/deviation/pull/978,https://github.com/MJ666,19,https://github.com/DeviationTX/deviation/pull/978#issuecomment-617315450,"Tested on bench with a Devo10 and an R-XSR receiver (V2.1.0 FCC firmware). The RX will bind as usual and telemetry is received and looks reasonable. The channel data are checked with the BetaFlight configurator with the RX connected to an AlienFlightNG Anubis16 flight controller. V1.x.x FCC mode is also still working as expected. The LBT (EU) mode is not yet tested. More testing and feedback is welcome. The code came partially from the MPM:
https://github.com/pascallanger/DIY-Multiprotocol-TX-Module
Edit: I really don't wanted to offend anyone here. Fur sure this work would not be possible without Pascal's efforts to reverse engineering the protocol. Many thanks go to him for the initial implementation. Since I was looking for deviation support of the V2.1.x protocol I used the opportunity and based my code on his work. I also posted in the Deviation forum to ask if anyone is already working on this before I looked into the code:
https://www.deviationtx.com/forum/protocol-development/8682-frsky-accst-v2-1-x-protocol-support
Locks to be my initial thinking to reference the source of the code was not good enough and I want to apologize for this.",Replaced CRC calculation code and it fits to the Devo7e module now. Thanks to @TheRealMoeder for the heads up and @pascallanger for the smaller code size.,True,{'THUMBS_UP': ['https://github.com/TheRealMoeder']}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,978,2020-04-03T11:33:04Z,2020-05-05T19:35:25Z,2020-05-07T05:46:43Z,MERGED,True,140,85,1,https://github.com/MJ666,Initial FrSky ACCST V2.1.x support,4,[],https://github.com/DeviationTX/deviation/pull/978,https://github.com/pascallanger,20,https://github.com/DeviationTX/deviation/pull/978#issuecomment-617424811,"Tested on bench with a Devo10 and an R-XSR receiver (V2.1.0 FCC firmware). The RX will bind as usual and telemetry is received and looks reasonable. The channel data are checked with the BetaFlight configurator with the RX connected to an AlienFlightNG Anubis16 flight controller. V1.x.x FCC mode is also still working as expected. The LBT (EU) mode is not yet tested. More testing and feedback is welcome. The code came partially from the MPM:
https://github.com/pascallanger/DIY-Multiprotocol-TX-Module
Edit: I really don't wanted to offend anyone here. Fur sure this work would not be possible without Pascal's efforts to reverse engineering the protocol. Many thanks go to him for the initial implementation. Since I was looking for deviation support of the V2.1.x protocol I used the opportunity and based my code on his work. I also posted in the Deviation forum to ask if anyone is already working on this before I looked into the code:
https://www.deviationtx.com/forum/protocol-development/8682-frsky-accst-v2-1-x-protocol-support
Locks to be my initial thinking to reference the source of the code was not good enough and I want to apologize for this.","@goebish The Multi FrSKy_RX can already auto bind D8, D16 v1 (FCC/LBT) and D16v2.1 (FCC/LBT). I've also added a CloneTX mode which enables someone to duplicate the ID&Hop of a TX sending FrSky for all 3 modes.
Pascal",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,978,2020-04-03T11:33:04Z,2020-05-05T19:35:25Z,2020-05-07T05:46:43Z,MERGED,True,140,85,1,https://github.com/MJ666,Initial FrSky ACCST V2.1.x support,4,[],https://github.com/DeviationTX/deviation/pull/978,https://github.com/MJ666,21,https://github.com/DeviationTX/deviation/pull/978#issuecomment-617439429,"Tested on bench with a Devo10 and an R-XSR receiver (V2.1.0 FCC firmware). The RX will bind as usual and telemetry is received and looks reasonable. The channel data are checked with the BetaFlight configurator with the RX connected to an AlienFlightNG Anubis16 flight controller. V1.x.x FCC mode is also still working as expected. The LBT (EU) mode is not yet tested. More testing and feedback is welcome. The code came partially from the MPM:
https://github.com/pascallanger/DIY-Multiprotocol-TX-Module
Edit: I really don't wanted to offend anyone here. Fur sure this work would not be possible without Pascal's efforts to reverse engineering the protocol. Many thanks go to him for the initial implementation. Since I was looking for deviation support of the V2.1.x protocol I used the opportunity and based my code on his work. I also posted in the Deviation forum to ask if anyone is already working on this before I looked into the code:
https://www.deviationtx.com/forum/protocol-development/8682-frsky-accst-v2-1-x-protocol-support
Locks to be my initial thinking to reference the source of the code was not good enough and I want to apologize for this.",I rebased now and tested the updated CRC code with a single protocol. All protocol variants are fligth tested before this change a few times with the BetaFPV FC. I also have bench tested all protocols with a original FrSky R-XSR receiver connect to an AlienFlightNG FC and the BF configurator.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,978,2020-04-03T11:33:04Z,2020-05-05T19:35:25Z,2020-05-07T05:46:43Z,MERGED,True,140,85,1,https://github.com/MJ666,Initial FrSky ACCST V2.1.x support,4,[],https://github.com/DeviationTX/deviation/pull/978,https://github.com/vladislavy,22,https://github.com/DeviationTX/deviation/pull/978#issuecomment-617569604,"Tested on bench with a Devo10 and an R-XSR receiver (V2.1.0 FCC firmware). The RX will bind as usual and telemetry is received and looks reasonable. The channel data are checked with the BetaFlight configurator with the RX connected to an AlienFlightNG Anubis16 flight controller. V1.x.x FCC mode is also still working as expected. The LBT (EU) mode is not yet tested. More testing and feedback is welcome. The code came partially from the MPM:
https://github.com/pascallanger/DIY-Multiprotocol-TX-Module
Edit: I really don't wanted to offend anyone here. Fur sure this work would not be possible without Pascal's efforts to reverse engineering the protocol. Many thanks go to him for the initial implementation. Since I was looking for deviation support of the V2.1.x protocol I used the opportunity and based my code on his work. I also posted in the Deviation forum to ask if anyone is already working on this before I looked into the code:
https://www.deviationtx.com/forum/protocol-development/8682-frsky-accst-v2-1-x-protocol-support
Locks to be my initial thinking to reference the source of the code was not good enough and I want to apologize for this.",You need correct HOP_DATA_SIZE or HOPP_DATA_SIZE.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,978,2020-04-03T11:33:04Z,2020-05-05T19:35:25Z,2020-05-07T05:46:43Z,MERGED,True,140,85,1,https://github.com/MJ666,Initial FrSky ACCST V2.1.x support,4,[],https://github.com/DeviationTX/deviation/pull/978,https://github.com/MJ666,23,https://github.com/DeviationTX/deviation/pull/978#issuecomment-617660151,"Tested on bench with a Devo10 and an R-XSR receiver (V2.1.0 FCC firmware). The RX will bind as usual and telemetry is received and looks reasonable. The channel data are checked with the BetaFlight configurator with the RX connected to an AlienFlightNG Anubis16 flight controller. V1.x.x FCC mode is also still working as expected. The LBT (EU) mode is not yet tested. More testing and feedback is welcome. The code came partially from the MPM:
https://github.com/pascallanger/DIY-Multiprotocol-TX-Module
Edit: I really don't wanted to offend anyone here. Fur sure this work would not be possible without Pascal's efforts to reverse engineering the protocol. Many thanks go to him for the initial implementation. Since I was looking for deviation support of the V2.1.x protocol I used the opportunity and based my code on his work. I also posted in the Deviation forum to ask if anyone is already working on this before I looked into the code:
https://www.deviationtx.com/forum/protocol-development/8682-frsky-accst-v2-1-x-protocol-support
Locks to be my initial thinking to reference the source of the code was not good enough and I want to apologize for this.","You need correct HOP_DATA_SIZE or HOPP_DATA_SIZE.

Sorry my bad. Fixed.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,978,2020-04-03T11:33:04Z,2020-05-05T19:35:25Z,2020-05-07T05:46:43Z,MERGED,True,140,85,1,https://github.com/MJ666,Initial FrSky ACCST V2.1.x support,4,[],https://github.com/DeviationTX/deviation/pull/978,https://github.com/vladislavy,24,https://github.com/DeviationTX/deviation/pull/978#issuecomment-617694133,"Tested on bench with a Devo10 and an R-XSR receiver (V2.1.0 FCC firmware). The RX will bind as usual and telemetry is received and looks reasonable. The channel data are checked with the BetaFlight configurator with the RX connected to an AlienFlightNG Anubis16 flight controller. V1.x.x FCC mode is also still working as expected. The LBT (EU) mode is not yet tested. More testing and feedback is welcome. The code came partially from the MPM:
https://github.com/pascallanger/DIY-Multiprotocol-TX-Module
Edit: I really don't wanted to offend anyone here. Fur sure this work would not be possible without Pascal's efforts to reverse engineering the protocol. Many thanks go to him for the initial implementation. Since I was looking for deviation support of the V2.1.x protocol I used the opportunity and based my code on his work. I also posted in the Deviation forum to ask if anyone is already working on this before I looked into the code:
https://www.deviationtx.com/forum/protocol-development/8682-frsky-accst-v2-1-x-protocol-support
Locks to be my initial thinking to reference the source of the code was not good enough and I want to apologize for this.","Now devof7 protocol module doesn't fit, overflowed by 6 bytes.
Try to use 32 bit counters (inside any for()), it will provide more compact binary:
for (u32 i = 0; i < HOPP_DATA_SIZE - 1; i++)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,978,2020-04-03T11:33:04Z,2020-05-05T19:35:25Z,2020-05-07T05:46:43Z,MERGED,True,140,85,1,https://github.com/MJ666,Initial FrSky ACCST V2.1.x support,4,[],https://github.com/DeviationTX/deviation/pull/978,https://github.com/MJ666,25,https://github.com/DeviationTX/deviation/pull/978#issuecomment-617717700,"Tested on bench with a Devo10 and an R-XSR receiver (V2.1.0 FCC firmware). The RX will bind as usual and telemetry is received and looks reasonable. The channel data are checked with the BetaFlight configurator with the RX connected to an AlienFlightNG Anubis16 flight controller. V1.x.x FCC mode is also still working as expected. The LBT (EU) mode is not yet tested. More testing and feedback is welcome. The code came partially from the MPM:
https://github.com/pascallanger/DIY-Multiprotocol-TX-Module
Edit: I really don't wanted to offend anyone here. Fur sure this work would not be possible without Pascal's efforts to reverse engineering the protocol. Many thanks go to him for the initial implementation. Since I was looking for deviation support of the V2.1.x protocol I used the opportunity and based my code on his work. I also posted in the Deviation forum to ask if anyone is already working on this before I looked into the code:
https://www.deviationtx.com/forum/protocol-development/8682-frsky-accst-v2-1-x-protocol-support
Locks to be my initial thinking to reference the source of the code was not good enough and I want to apologize for this.","Mhhh, to big now for DevoF7. Changing the type even in multiple of the for loops and also to remove the bind options for the modules will not make any change on this 6 byte overflow. Need to find other options.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,978,2020-04-03T11:33:04Z,2020-05-05T19:35:25Z,2020-05-07T05:46:43Z,MERGED,True,140,85,1,https://github.com/MJ666,Initial FrSky ACCST V2.1.x support,4,[],https://github.com/DeviationTX/deviation/pull/978,https://github.com/TheRealMoeder,26,https://github.com/DeviationTX/deviation/pull/978#issuecomment-617777840,"Tested on bench with a Devo10 and an R-XSR receiver (V2.1.0 FCC firmware). The RX will bind as usual and telemetry is received and looks reasonable. The channel data are checked with the BetaFlight configurator with the RX connected to an AlienFlightNG Anubis16 flight controller. V1.x.x FCC mode is also still working as expected. The LBT (EU) mode is not yet tested. More testing and feedback is welcome. The code came partially from the MPM:
https://github.com/pascallanger/DIY-Multiprotocol-TX-Module
Edit: I really don't wanted to offend anyone here. Fur sure this work would not be possible without Pascal's efforts to reverse engineering the protocol. Many thanks go to him for the initial implementation. Since I was looking for deviation support of the V2.1.x protocol I used the opportunity and based my code on his work. I also posted in the Deviation forum to ask if anyone is already working on this before I looked into the code:
https://www.deviationtx.com/forum/protocol-development/8682-frsky-accst-v2-1-x-protocol-support
Locks to be my initial thinking to reference the source of the code was not good enough and I want to apologize for this.","This loop saves enough space. Please double check channel calculation!
static void init_hop_FRSkyX2(void)
{...}
for (u8 i = 0; i < HOP_DATA_SIZE; i++)
{
channel = 5 * ((u16)(inc * i) % 47) + offset;
// Exception list from dumps
for (u8 k = 0; k < 2; k++) {
if (Model.proto_opts[PROTO_OPTS_FORMAT])                // LBT or FCC
{
// LBT
if (channel <= 1 || channel == 43+k || channel == 87+k || channel == 129+k || channel == 173 +k)
channel += 2;
else if (channel == 216+k || channel == 218)
channel += 3;
}
else
// FCC
if (channel == 3+k || channel == 46+k || channel == 90+k || channel == 133+k || channel == 176+k || channel == 220+k)
channel += 2;
}
hop_data_v2[i] = channel;                               // Store
}
hop_data_v2[HOP_DATA_SIZE] = 0;                                        // Bind freq
}",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,978,2020-04-03T11:33:04Z,2020-05-05T19:35:25Z,2020-05-07T05:46:43Z,MERGED,True,140,85,1,https://github.com/MJ666,Initial FrSky ACCST V2.1.x support,4,[],https://github.com/DeviationTX/deviation/pull/978,https://github.com/MJ666,27,https://github.com/DeviationTX/deviation/pull/978#issuecomment-617813171,"Tested on bench with a Devo10 and an R-XSR receiver (V2.1.0 FCC firmware). The RX will bind as usual and telemetry is received and looks reasonable. The channel data are checked with the BetaFlight configurator with the RX connected to an AlienFlightNG Anubis16 flight controller. V1.x.x FCC mode is also still working as expected. The LBT (EU) mode is not yet tested. More testing and feedback is welcome. The code came partially from the MPM:
https://github.com/pascallanger/DIY-Multiprotocol-TX-Module
Edit: I really don't wanted to offend anyone here. Fur sure this work would not be possible without Pascal's efforts to reverse engineering the protocol. Many thanks go to him for the initial implementation. Since I was looking for deviation support of the V2.1.x protocol I used the opportunity and based my code on his work. I also posted in the Deviation forum to ask if anyone is already working on this before I looked into the code:
https://www.deviationtx.com/forum/protocol-development/8682-frsky-accst-v2-1-x-protocol-support
Locks to be my initial thinking to reference the source of the code was not good enough and I want to apologize for this.",This is what im actually working on. I don't realy understand why the complex code need less space but anyhow.... It fits but I need to retest the V2 protocols. :-) Stay tuned.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,978,2020-04-03T11:33:04Z,2020-05-05T19:35:25Z,2020-05-07T05:46:43Z,MERGED,True,140,85,1,https://github.com/MJ666,Initial FrSky ACCST V2.1.x support,4,[],https://github.com/DeviationTX/deviation/pull/978,https://github.com/MJ666,28,https://github.com/DeviationTX/deviation/pull/978#issuecomment-618977988,"Tested on bench with a Devo10 and an R-XSR receiver (V2.1.0 FCC firmware). The RX will bind as usual and telemetry is received and looks reasonable. The channel data are checked with the BetaFlight configurator with the RX connected to an AlienFlightNG Anubis16 flight controller. V1.x.x FCC mode is also still working as expected. The LBT (EU) mode is not yet tested. More testing and feedback is welcome. The code came partially from the MPM:
https://github.com/pascallanger/DIY-Multiprotocol-TX-Module
Edit: I really don't wanted to offend anyone here. Fur sure this work would not be possible without Pascal's efforts to reverse engineering the protocol. Many thanks go to him for the initial implementation. Since I was looking for deviation support of the V2.1.x protocol I used the opportunity and based my code on his work. I also posted in the Deviation forum to ask if anyone is already working on this before I looked into the code:
https://www.deviationtx.com/forum/protocol-development/8682-frsky-accst-v2-1-x-protocol-support
Locks to be my initial thinking to reference the source of the code was not good enough and I want to apologize for this.","After cleanup and some more fixing it finaly fits all targets with full functionality. I have done again some testing with R-XSR, XM+ and the BetaFPV FC. With the BetaFPV whoop i did sucessful flight tests with all four protocols. There is still a bind problem with LBTv1 and the BF test code (betaflight/betaflight#9697) im using but this is also there with the Jumper t16 (MPM). Dont have an orginal FrSky TX for testing. Since hopping tables are identical with FCCv1 you can fly without issues. Binding is working for all Protocols with original FrSky receivers. Bench tests with them dont show any problems. Unfortunately all my FrSky receivers are soldered into my small quadcopters and are not easily can be updated.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,978,2020-04-03T11:33:04Z,2020-05-05T19:35:25Z,2020-05-07T05:46:43Z,MERGED,True,140,85,1,https://github.com/MJ666,Initial FrSky ACCST V2.1.x support,4,[],https://github.com/DeviationTX/deviation/pull/978,https://github.com/TheRealMoeder,29,https://github.com/DeviationTX/deviation/pull/978#issuecomment-624735626,"Tested on bench with a Devo10 and an R-XSR receiver (V2.1.0 FCC firmware). The RX will bind as usual and telemetry is received and looks reasonable. The channel data are checked with the BetaFlight configurator with the RX connected to an AlienFlightNG Anubis16 flight controller. V1.x.x FCC mode is also still working as expected. The LBT (EU) mode is not yet tested. More testing and feedback is welcome. The code came partially from the MPM:
https://github.com/pascallanger/DIY-Multiprotocol-TX-Module
Edit: I really don't wanted to offend anyone here. Fur sure this work would not be possible without Pascal's efforts to reverse engineering the protocol. Many thanks go to him for the initial implementation. Since I was looking for deviation support of the V2.1.x protocol I used the opportunity and based my code on his work. I also posted in the Deviation forum to ask if anyone is already working on this before I looked into the code:
https://www.deviationtx.com/forum/protocol-development/8682-frsky-accst-v2-1-x-protocol-support
Locks to be my initial thinking to reference the source of the code was not good enough and I want to apologize for this.",@MJ666 Could you also update deviation-manual with the new protocol options?,True,{'THUMBS_UP': ['https://github.com/MJ666']}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,984,2020-05-03T09:11:59Z,2020-05-03T09:18:55Z,2020-05-03T09:18:55Z,MERGED,True,1,0,1,https://github.com/vladislavy,Fix devo12e screen,1,[],https://github.com/DeviationTX/deviation/pull/984,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/984,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,985,2020-05-07T09:04:17Z,2020-05-07T09:11:59Z,2020-05-07T09:11:59Z,MERGED,True,1,1,1,https://github.com/vladislavy,Fix Devo12 build,1,[],https://github.com/DeviationTX/deviation/pull/985,https://github.com/vladislavy,1,https://github.com/DeviationTX/deviation/pull/985,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,990,2020-05-23T19:20:52Z,2020-05-24T10:28:15Z,2020-05-24T10:28:15Z,MERGED,True,1,1,1,https://github.com/daniel-snowsurf,Fix DSM & Bayang telemetry page on devo7e,2,[],https://github.com/DeviationTX/deviation/pull/990,https://github.com/daniel-snowsurf,1,https://github.com/DeviationTX/deviation/pull/990,"DSM & Bayang telemetry page only shows header, there are no labels or data, just a black rectangle in the middle of the display. Bug affects transmitters without extended telemetry: devo7e, devof4 & devof7. The emulator for devo f7 shows the telemetry page properly. With this fix telemetry DSM page of devo7e is now properly displayed, and there are no changes on devo f7 (checked on emulator).","DSM & Bayang telemetry page only shows header, there are no labels or data, just a black rectangle in the middle of the display. Bug affects transmitters without extended telemetry: devo7e, devof4 & devof7. The emulator for devo f7 shows the telemetry page properly. With this fix telemetry DSM page of devo7e is now properly displayed, and there are no changes on devo f7 (checked on emulator).",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,990,2020-05-23T19:20:52Z,2020-05-24T10:28:15Z,2020-05-24T10:28:15Z,MERGED,True,1,1,1,https://github.com/daniel-snowsurf,Fix DSM & Bayang telemetry page on devo7e,2,[],https://github.com/DeviationTX/deviation/pull/990,https://github.com/TheRealMoeder,2,https://github.com/DeviationTX/deviation/pull/990#issuecomment-633210201,"DSM & Bayang telemetry page only shows header, there are no labels or data, just a black rectangle in the middle of the display. Bug affects transmitters without extended telemetry: devo7e, devof4 & devof7. The emulator for devo f7 shows the telemetry page properly. With this fix telemetry DSM page of devo7e is now properly displayed, and there are no changes on devo f7 (checked on emulator).",Fixes issue #986,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,996,2020-08-09T00:51:19Z,2020-08-09T11:25:50Z,2020-08-09T11:25:50Z,MERGED,True,3,2,1,https://github.com/eried,Wait for button release for exiting,2,[],https://github.com/DeviationTX/deviation/pull/996,https://github.com/eried,1,https://github.com/DeviationTX/deviation/pull/996,Solves #995,Solves #995,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,997,2020-08-09T00:54:02Z,,2020-09-16T22:42:24Z,OPEN,False,8,6,3,https://github.com/eried,Advcurve ui bugfix,4,"['Minor', 'Color GUI', 'B&W GUI']",https://github.com/DeviationTX/deviation/pull/997,https://github.com/eried,1,https://github.com/DeviationTX/deviation/pull/997,"There are some small details in the interface of mixer -> curves editor

The titlebar is selectable but it is not in reality.
The curve value should be selected by default","There are some small details in the interface of mixer -> curves editor

The titlebar is selectable but it is not in reality.
The curve value should be selected by default",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,997,2020-08-09T00:54:02Z,,2020-09-16T22:42:24Z,OPEN,False,8,6,3,https://github.com/eried,Advcurve ui bugfix,4,"['Minor', 'Color GUI', 'B&W GUI']",https://github.com/DeviationTX/deviation/pull/997,https://github.com/eried,2,https://github.com/DeviationTX/deviation/pull/997#issuecomment-673436938,"There are some small details in the interface of mixer -> curves editor

The titlebar is selectable but it is not in reality.
The curve value should be selected by default","Oh I am noticing that my fix does not work for /320x240x16/.
Can anyone with those remotes that if they go into ""Advanced curves"" of a mixer like the one shown in the image on top, they can scroll between curve types?? I can fix this also there but I just need to confirm that it is also a problem there",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,997,2020-08-09T00:54:02Z,,2020-09-16T22:42:24Z,OPEN,False,8,6,3,https://github.com/eried,Advcurve ui bugfix,4,"['Minor', 'Color GUI', 'B&W GUI']",https://github.com/DeviationTX/deviation/pull/997,https://github.com/TheRealMoeder,3,https://github.com/DeviationTX/deviation/pull/997#issuecomment-693697919,"There are some small details in the interface of mixer -> curves editor

The titlebar is selectable but it is not in reality.
The curve value should be selected by default",From testing in the emulator on color displays the curve type also cannot be changed with in the curves editor.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,997,2020-08-09T00:54:02Z,,2020-09-16T22:42:24Z,OPEN,False,8,6,3,https://github.com/eried,Advcurve ui bugfix,4,"['Minor', 'Color GUI', 'B&W GUI']",https://github.com/DeviationTX/deviation/pull/997,https://github.com/TheRealMoeder,4,https://github.com/DeviationTX/deviation/pull/997#issuecomment-693700205,"There are some small details in the interface of mixer -> curves editor

The titlebar is selectable but it is not in reality.
The curve value should be selected by default","Actually there is some behavior to the title bar in curve editor for both GUIs , as can be seen in the code. When in a multipoint curve type, you can immediatly change the number of curve points (3 through 12).",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/TheRealMoeder,1,https://github.com/DeviationTX/deviation/pull/998,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/somewhatlurker,2,https://github.com/DeviationTX/deviation/pull/998#issuecomment-689980229,,"Fun. Still gotta fix test stubs then, and I have no clue what to do for 7e and f7.
I guess I'll leave the latter to someone who knows what the hell they're doing. There's no rush because after all this isn't even tested yet anyway. (previous discussion in #981)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/TheRealMoeder,3,https://github.com/DeviationTX/deviation/pull/998#issuecomment-690697302,,"@goebish can you help out with the linker finding everything in modular build? I tried, but something seems messed up with my build environment :(",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/goebish,4,https://github.com/DeviationTX/deviation/pull/998#issuecomment-690707478,,I can take a look but I'll be back home in 10 days,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/TheRealMoeder,5,https://github.com/DeviationTX/deviation/pull/998#issuecomment-690719317,,"I think I found the issue. Can't simply make usb_endpoint_descriptor hid_endpoint non-const
Solution:
1.) add EXTERN(HID_SetInterval) to protocol/exports.ld
2.) remove static from struct usb_endpoint_descriptor hid_endpoint
While at it, we should also remove extern void HID_Write(s8 *packet, u8 size); from usbhid.c and instead add the declaration to target.h and also add HID_Write to exports.ld (not sure if this is really necessary)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/somewhatlurker,6,https://github.com/DeviationTX/deviation/pull/998#issuecomment-690870754,,seems to be linking properly; that's good,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/somewhatlurker,7,https://github.com/DeviationTX/deviation/pull/998#issuecomment-690871754,,so all this needs is testing that it works as expected then,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/TheRealMoeder,8,https://github.com/DeviationTX/deviation/pull/998#issuecomment-691155593,,I'll try to do so this weekend.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/TheRealMoeder,9,https://github.com/DeviationTX/deviation/pull/998#issuecomment-691194989,,"Couldn't resist. Works perfect down to 1 ms in non modular build (t8sg as my testing device for development here). I have no modular devo right now, I might try building a modular build for my t8sg for testing purposes.
edit: while trying out the modular build I bricked the (unified) bootloader on my t8sg, so I'll have to dig out the ST-Link to continue testing. Might take couple of days.",True,{'THUMBS_UP': ['https://github.com/eried']}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/TheRealMoeder,10,https://github.com/DeviationTX/deviation/pull/998#issuecomment-691713795,,"I noticed some interesting behavior in lower update rates. For example, with 50 ms, the average ist indeed 50 ms, but it actually alternates between 35 and 65 ms. But since nobody wants these slow update rates it's probably not worth investigating. From 1 to 10 ms i noticed very exact update rates.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/somewhatlurker,11,https://github.com/DeviationTX/deviation/pull/998#issuecomment-691774695,,"I'm not really sure about how USB endpoints work, but I think that's related to how the OS polls the device.
For example, Windows seems to take the provided bInterval and round it down to a closest power of two (or always 32 if larger than 32).
That does sound like the jitter you're seeing, and should be do different to the original behaviour which used a 32ms bInterval.
It should be possible to hide that by always requesting a lower polling rate or only letting the user choose power-of-two periods somehow, but I don't know if it's worth adapting to ""features"" of USB stacks that don't really harm operation.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/eried,12,https://github.com/DeviationTX/deviation/pull/998#issuecomment-691898929,,"but it actually alternates between 35 and 65 ms

How are you measuring this?

From 1 to 10 ms i noticed very exact update rates.

True, and this is similar to an 8bitdo controller I tested as a example to compare the ""laggy"" usb, so we are good with 8ms :D",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/TheRealMoeder,13,https://github.com/DeviationTX/deviation/pull/998#issuecomment-691964112,,"I measured using Wireshark on MacOS, but honestly only exemplary on settings 1-10 and 50 ms. But I'm not deep into USB stuff, just wanted a proof of the changes working. Also tried these settings in Picasim  simulator though wine on the same system, which shows the same behavior as the Wireshark results suggested. Since 50 ms isn't usable at all, it really is not worth investing there. Maybe we should limit the protocol option to 32.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/somewhatlurker,14,https://github.com/DeviationTX/deviation/pull/998#issuecomment-691977403,,"Yeah, I'd agree that limiting it at 32 or even 16 is probably more sane than 64. (at least for a new project)
It really just boils down to whether we care about keeping the old timing accessible even though it wasn't good.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/somewhatlurker,15,https://github.com/DeviationTX/deviation/pull/998#issuecomment-693593689,,"Hmm...  I realised I didn't make mixers run more often than the default (5ms?) when the HID period is decreased. That might be a good idea.
Probably not strictly necessary, but I should've had the foresight to copy that stuff.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/TheRealMoeder,16,https://github.com/DeviationTX/deviation/pull/998#issuecomment-693634931,,"I took another T8SG lying around (actually a Radiomaster TX8, but they are all the same to me ;) and flashed it.
edit: now got Wireshark working correctly. As you suspected, update rates are always the closest power of 2, so when in-between, it changes between the closest powers of 2 to match the specified usb period in average. I don't thinks this is really a good behavior, as the protocol option suggest more control than it actually has. If we limit it to 16 the maximum error is 7 ms. Or maybe 6 ms if we limit the protocol options to steps of 2 (2-16). What do you think?
edit2: modular build still not working yet...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/TheRealMoeder,17,https://github.com/DeviationTX/deviation/pull/998#issuecomment-693684421,,Finally managed a working modular build for the T8SG. Works very well with the same behavior as non modular builds. Let's decide on the period setting and we're good for merging.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/TheRealMoeder,18,https://github.com/DeviationTX/deviation/pull/998#issuecomment-693691812,,"Concerning the protocol option:
Using steps of 2 isn't really good, as it still doesn't do what we expect it to do. Maybe the hackish
static const char * const usbhid_opts[] = { _tr_noop(""Period (ms)""),  ""32"", ""16"", ""2"", ""4"", ""8"", NULL, NULL }; gives the best user experience defaulting on 8 ms.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/somewhatlurker,19,https://github.com/DeviationTX/deviation/pull/998#issuecomment-694082169,,"I think it's best to keep everything in a sequential order here, such as ""16"", ""8"", ""4"", ""2"", ""1"", or even changing it to Hz for ascending too (""62.5"", ""125"", ""250"", ""500"", ""1000"").
I think the first option will become the true default when all is complete, right? (I don't see any way to set an alternate default without breaking the first listed option unless we write a callback in the protocol)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/TheRealMoeder,20,https://github.com/DeviationTX/deviation/pull/998#issuecomment-694091959,,The issue is that the last entry is the default...,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/somewhatlurker,21,https://github.com/DeviationTX/deviation/pull/998#issuecomment-694094422,,"It doesn't seem to behave that way on other protocols in emulator.
For example, the default radio in testrf is CYRF6936 for me.
I suspect you accidentally loaded a model that already had config data or left in the code that sets it to 8 when it was previously unset.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/TheRealMoeder,22,https://github.com/DeviationTX/deviation/pull/998#issuecomment-694096701,,"Reading up on USB... Actually the period depends on the operating speed of the USB device and host. On full and high speed we can have 1,2,4,8,16,32 but for low speed it is only 8, 16 or 32. So setting period in protocol interval doesn't necessarily reflect the true transfer interval of the hid.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/somewhatlurker,23,https://github.com/DeviationTX/deviation/pull/998#issuecomment-694098193,,"I believe all targets with HID support are running at full speed, and it would be extremely unlikely for someone to use a host device without full speed support.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/TheRealMoeder,24,https://github.com/DeviationTX/deviation/pull/998#issuecomment-694102079,,"I don't see any compatibility issues as USB is well defined, so what do you think of just making 8 ms the slowest and also default value with option of turning up to 1 ms? Mixers are running slower anyways right now,if I'm not mistaken.
About the order of protocol options, it is just what I observed. I was surprised by the behavior and also tested with a new model, but got the same behavior. Maybe this is related to the code in lines 117/118? Do we really need them?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/somewhatlurker,25,https://github.com/DeviationTX/deviation/pull/998#issuecomment-694108132,,"Yep, that's what I meant by the code that sets it to 8 when it was previously unset -- those lines and 99 were used to set a default value when the option was set to 0. Now with text options, they just override the option at index 0 to index 8 and will need to be removed.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/somewhatlurker,26,https://github.com/DeviationTX/deviation/pull/998#issuecomment-694111518,,"And yeah, if this is going to be more trouble than it's worth to get more periods added in a way that makes sense, 8ms or less sounds fine.
I'll get an update ready later with options as 125,250,500,1000 Hz (making use of the defined options to display these in a unit users are probably more familiar with and a nice ascending order) and extra mixer calls as necessary using the same logic as sbus/sumd.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/TheRealMoeder,27,https://github.com/DeviationTX/deviation/pull/998#issuecomment-694113283,,Sounds good. I'll merge as soon as it is finished and looks good. Can you please also add a line in deviation-manual to explain the protocol option ?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/somewhatlurker,28,https://github.com/DeviationTX/deviation/pull/998#issuecomment-694173815,,"Okay, can you please test this on hardware again and I'll go look into the manual stuff.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/TheRealMoeder,29,https://github.com/DeviationTX/deviation/pull/998#issuecomment-694235513,,"Yes will do so, but not before tomorrow night. @goebish can you also review the code again? Protocols are your domain 😉",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/TheRealMoeder,30,https://github.com/DeviationTX/deviation/pull/998#issuecomment-694313534,,"You're lucky, I found a minute to try it out. Works fine on hardware, although I still once in a while get those odd 11.25 ms measurements on my MacOS machine. But I doubt this really is a deviation issue, rather something with Darwin or Wireshark. 1 ms was verified as well, test fly also successful. I'll give a green light, maybe someone on a windows machine can also try it out.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/somewhatlurker,31,https://github.com/DeviationTX/deviation/pull/998#issuecomment-694333009,,"Yeah, technically speaking to get perfect timing you'd need to generate packets on demand as the interrupt fires.
Looking at it now, it could be done by waiting for usb_preXferComplete to be 1 before trying to write anything.
Something like this:
    if (!usb_preXferComplete) return 100;  // wait until endpoint is ready
    switch (state) {
        case ST_DATA1:
            CLOCK_RunMixer();    // clears mixer_sync, which is then set when mixer update complete
            state = ST_DATA2;
            return mixer_runtime;

        case ST_DATA2:
            if (mixer_sync != MIX_DONE && mixer_runtime < 2000) mixer_runtime += 50;
            build_data_pkt();
            HID_Write(packet, sizeof(packet));
            state = ST_DATA1;
            return usbhid_period_ms * 1000 - mixer_runtime - 500;  // return with - 500 in case host is polling faster than our clock
    }
    return usbhid_period_ms * 1000 - 500;   // avoid compiler warning

Or alternatively, with changes to allow handling the USB endpoint callback directly, but I'm not sure we can run mixers fast enough to definitely not cause issues on the bus from that.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/somewhatlurker,32,https://github.com/DeviationTX/deviation/pull/998#issuecomment-695175042,,"let's see if this actually improves anything...
might actually reduce battery life a little if it works as expected, but it'll be fine.. USB HID should be using less power than most protocols by not running any RF anyway. (that's if it's even a measurable difference lol)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/TheRealMoeder,33,https://github.com/DeviationTX/deviation/pull/998#issuecomment-695204552,,"While this might make  a little improvement, I'm a little concerned in yet another rom size increase in the modular platforms (especially devo7e). These are really tight on rom space, and the addition of HID_setinterval already adds a bit. It might even be useful to make thr default option of 8 ms hard-coded for the modular builds and add the protocol option, which needs HID_SetInterval, only in non modular builds",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/somewhatlurker,34,https://github.com/DeviationTX/deviation/pull/998#issuecomment-695205271,,"Hmm..  I see...
I really have no good sense for what's significant or not at these sizes, but I'll see if I can find some way to get it back down before removing functionality.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/TheRealMoeder,35,https://github.com/DeviationTX/deviation/pull/998#issuecomment-695205866,,"You last commit didn't add too much, it's just something we (unfortunately) always need to have in mind.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/somewhatlurker,36,https://github.com/DeviationTX/deviation/pull/998#issuecomment-695206462,,"Yeah, I get what you mean. It's easy to add things that use up space now, but if we always do that it becomes hard to get the space later for something that really needs it.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/TheRealMoeder,37,https://github.com/DeviationTX/deviation/pull/998#issuecomment-695207640,,"We put a lot of effort into code cleanup, because ROM space for devo7e was absolutely used. Since then, things have gotten a little relaxed (and deviation development more or less subsided due to not many active developers). But as you notice in target_defs, a lot of features are already deactivated for the modular builds.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/somewhatlurker,38,https://github.com/DeviationTX/deviation/pull/998#issuecomment-695213226,,"Looks like devo 8 is getting pretty close to fully used too, and t8sg not far behind...  I suppose the only way to avoid the increase on non-modular is to simply not add code though right?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/somewhatlurker,39,https://github.com/DeviationTX/deviation/pull/998#issuecomment-695213682,,"Anyway, the increase seems pretty minimal for 7e now, so if that was the primary concern and the code is still working, I guess we're good.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/somewhatlurker,40,https://github.com/DeviationTX/deviation/pull/998#issuecomment-695345289,,"Hmm...   I think I actually figured out a nice enough way to give us a callback without needing to run mixers in the actual USB endpoint callback -- the USB endpoint callback can start a clock to run the protocol callback in an interrupt later.
That should be simple to implement, and hopefully be reliable.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/somewhatlurker,41,https://github.com/DeviationTX/deviation/pull/998#issuecomment-695345386,,I'll play around tomorrow and see if I can get it to compile.,True,{'THUMBS_UP': ['https://github.com/TheRealMoeder']}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/somewhatlurker,42,https://github.com/DeviationTX/deviation/pull/998#issuecomment-695757282,,Hopefully I didn't just break everything lol,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/somewhatlurker,43,https://github.com/DeviationTX/deviation/pull/998#issuecomment-695772913,,"Perhaps this PR could use a revised title due to the now larger scope of changes, and possibly incorporate an increase to 8 button inputs with it being more than a simple change now anyway.
Or should it stay limited to just timing-related changes and be followed up by a smaller PR for more channels later?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/TheRealMoeder,44,https://github.com/DeviationTX/deviation/pull/998#issuecomment-695811288,,I'd prefer seperate Pull requests for timing and inputs.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/TheRealMoeder,45,https://github.com/DeviationTX/deviation/pull/998#issuecomment-695837873,,"99fb44b broke USBHID for modular as well as non-modular builds, while 5c0a6bd works for both.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/somewhatlurker,46,https://github.com/DeviationTX/deviation/pull/998#issuecomment-695843078,,Does the callback method work with 1 instead of 0 in the CLOCK_StartTimer call on devo_hid.c line 146?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/TheRealMoeder,47,https://github.com/DeviationTX/deviation/pull/998#issuecomment-696340819,,Nope.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/somewhatlurker,48,https://github.com/DeviationTX/deviation/pull/998#issuecomment-698499805,,"Hmm...  I'd like to see the callback method working, but I can't see what I'm doing wrong.
Should I just revert to what works for now?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/TheRealMoeder,49,https://github.com/DeviationTX/deviation/pull/998#issuecomment-699031467,,"Yes, I also expected it to work, but haven‘t spent time debugging. Since none of the the protocols currently runs mixers on demand and the benefit is small and should only noticeable with 500 Hz and above, I‘m fine with the previous solution. The more changes to the „main“ code, the higher the change for introducing issues.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/somewhatlurker,50,https://github.com/DeviationTX/deviation/pull/998#issuecomment-699277020,,"Running mixers on demand was already present since before 5c0a6bd. It was copied from sbus/sumd like a lot of other stuff. The callback from USB code was just to try guaranteeing perfect sync to USB host polling.
I will go ahead and revert the two most recent commits for the sake of having a working system though.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/TheRealMoeder,51,https://github.com/DeviationTX/deviation/pull/998#issuecomment-699468032,,"Yes I know, I didn't mean running mixers on demand but synchronizing callbacks. Mixer run time is about 1 ms worst case, I'm not too worried about this. #532 is some interesting read.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,998,2020-09-09T14:40:10Z,2020-09-26T09:45:08Z,2020-09-26T09:45:08Z,MERGED,True,103,13,8,https://github.com/TheRealMoeder,make USB HID period configurable (and default is now 8ms),12,"['Enhancement', 'Protocol']",https://github.com/DeviationTX/deviation/pull/998,https://github.com/TheRealMoeder,52,https://github.com/DeviationTX/deviation/pull/998#issuecomment-699468695,,"I can't approve as I created this PR, but I'm good with this.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1000,2020-09-16T13:19:48Z,,2020-09-16T22:19:27Z,OPEN,False,30,14,1,https://github.com/somewhatlurker,Save proper external voice IDs in model files,2,['Enhancement'],https://github.com/DeviationTX/deviation/pull/1000,https://github.com/somewhatlurker,1,https://github.com/DeviationTX/deviation/pull/1000,"This is one possible fix for #999.
If merged, model files will now save the alert IDs from voice.ini/mp3 file names for custom alerts, instead of the internal index in voice_map.
To ensure old models are loaded correctly, an ""mp3-"" prefix is added to alert values saved in the new way (all models will be saved with new IDs).
This does have a side effect of making new model files incompatible with old firmware though. Alternatives would be to either not use a prefix and make it possible for old models to load with incorrect IDs when used with a poorly formatted voice.ini (probably not desirable) or use a prefix/suffix that atoi won't error out on (eg, ""+"" prefix), although that would make the file less readable without writing an explanation comment.","This is one possible fix for #999.
If merged, model files will now save the alert IDs from voice.ini/mp3 file names for custom alerts, instead of the internal index in voice_map.
To ensure old models are loaded correctly, an ""mp3-"" prefix is added to alert values saved in the new way (all models will be saved with new IDs).
This does have a side effect of making new model files incompatible with old firmware though. Alternatives would be to either not use a prefix and make it possible for old models to load with incorrect IDs when used with a poorly formatted voice.ini (probably not desirable) or use a prefix/suffix that atoi won't error out on (eg, ""+"" prefix), although that would make the file less readable without writing an explanation comment.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1000,2020-09-16T13:19:48Z,,2020-09-16T22:19:27Z,OPEN,False,30,14,1,https://github.com/somewhatlurker,Save proper external voice IDs in model files,2,['Enhancement'],https://github.com/DeviationTX/deviation/pull/1000,https://github.com/TheRealMoeder,2,https://github.com/DeviationTX/deviation/pull/1000#issuecomment-693694542,"This is one possible fix for #999.
If merged, model files will now save the alert IDs from voice.ini/mp3 file names for custom alerts, instead of the internal index in voice_map.
To ensure old models are loaded correctly, an ""mp3-"" prefix is added to alert values saved in the new way (all models will be saved with new IDs).
This does have a side effect of making new model files incompatible with old firmware though. Alternatives would be to either not use a prefix and make it possible for old models to load with incorrect IDs when used with a poorly formatted voice.ini (probably not desirable) or use a prefix/suffix that atoi won't error out on (eg, ""+"" prefix), although that would make the file less readable without writing an explanation comment.","From a quick glance this looks good. I actually like the idea of using the mp3-prefix.
This could also be the way to enhance functionality by adding a ""beep"" prefix to set certain alerts to the beeps defined in sound.ini and making that somehow configurable in the voice config menu. Maybe also an option to integrate vibration setting per alert?  Or a combination of them? We at least should be discussing things so we're not losing backwards compatibility in the future.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1001,2020-09-30T09:55:23Z,2020-09-30T16:02:42Z,2020-09-30T16:02:42Z,MERGED,True,5,0,1,https://github.com/bkleiner,add missing redpine protocol module,1,[],https://github.com/DeviationTX/deviation/pull/1001,https://github.com/bkleiner,1,https://github.com/DeviationTX/deviation/pull/1001,the redpine.mod seems to be missing from the devo7e build. this pull requests adds the according entries to the Makefile,the redpine.mod seems to be missing from the devo7e build. this pull requests adds the according entries to the Makefile,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1003,2020-10-10T08:50:14Z,2020-10-10T09:03:50Z,2020-10-10T09:03:50Z,MERGED,True,2,1,1,https://github.com/TheRealMoeder,Fix redpine initialization for modular builds.,1,"['Bug', 'Major', 'Protocol']",https://github.com/DeviationTX/deviation/pull/1003,https://github.com/TheRealMoeder,1,https://github.com/DeviationTX/deviation/pull/1003,Fixes issue #1002,Fixes issue #1002,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1006,2021-02-25T15:38:17Z,2021-09-02T13:38:45Z,2021-09-02T13:38:45Z,CLOSED,False,0,0,0,https://github.com/smaller09,"Omphobby protocol support （telemetry support now, need cc2500&nrf24l01 installed)",0,[],https://github.com/DeviationTX/deviation/pull/1006,https://github.com/smaller09,1,https://github.com/DeviationTX/deviation/pull/1006,"Porting from DIY-Multiprotocol-TX-Module, need cc2500 installed.
tested on devo7e & devo10.
no telemetry now. (maybe never, cause cc2500 has  different  preamble as xn297l)","Porting from DIY-Multiprotocol-TX-Module, need cc2500 installed.
tested on devo7e & devo10.
no telemetry now. (maybe never, cause cc2500 has  different  preamble as xn297l)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1006,2021-02-25T15:38:17Z,2021-09-02T13:38:45Z,2021-09-02T13:38:45Z,CLOSED,False,0,0,0,https://github.com/smaller09,"Omphobby protocol support （telemetry support now, need cc2500&nrf24l01 installed)",0,[],https://github.com/DeviationTX/deviation/pull/1006,https://github.com/pascallanger,2,https://github.com/DeviationTX/deviation/pull/1006#issuecomment-786024008,"Porting from DIY-Multiprotocol-TX-Module, need cc2500 installed.
tested on devo7e & devo10.
no telemetry now. (maybe never, cause cc2500 has  different  preamble as xn297l)",Why are you not using the NRF (if installed) to receive the telemetry like I've done on Multi?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1006,2021-02-25T15:38:17Z,2021-09-02T13:38:45Z,2021-09-02T13:38:45Z,CLOSED,False,0,0,0,https://github.com/smaller09,"Omphobby protocol support （telemetry support now, need cc2500&nrf24l01 installed)",0,[],https://github.com/DeviationTX/deviation/pull/1006,https://github.com/smaller09,3,https://github.com/DeviationTX/deviation/pull/1006#issuecomment-786403124,"Porting from DIY-Multiprotocol-TX-Module, need cc2500 installed.
tested on devo7e & devo10.
no telemetry now. (maybe never, cause cc2500 has  different  preamble as xn297l)","Why are you not using the NRF (if installed) to receive the telemetry like I've done on Multi?

It's just because my d7e only has cc2500 installed. and I want to use it to control my OMP M1, a little heli.
My devo10 has a 4in1 module installed. I can try to port.
But I do want to use single cc2500 to make it work, but cc2500 wants a packet start with 0xAA(n byte) and then sync word (0x71 0x0f) and then a rx address (0x05).
If I disable sync word detect, it will only receive garbage.
If I enable address check, it will receive nothing.
If I enable sync word detect and disable address check, it will receive packets but can't decode.
So maybe it's a mission impossible.
As for the protocol itself, I found your code has always same hopping_frequency_table, so I add some randomisation base of tx_fixid. But I has little knowledge of LFSR, so the code is just work, hopes you can do it better.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1006,2021-02-25T15:38:17Z,2021-09-02T13:38:45Z,2021-09-02T13:38:45Z,CLOSED,False,0,0,0,https://github.com/smaller09,"Omphobby protocol support （telemetry support now, need cc2500&nrf24l01 installed)",0,[],https://github.com/DeviationTX/deviation/pull/1006,https://github.com/pascallanger,4,https://github.com/DeviationTX/deviation/pull/1006#issuecomment-786469405,"Porting from DIY-Multiprotocol-TX-Module, need cc2500 installed.
tested on devo7e & devo10.
no telemetry now. (maybe never, cause cc2500 has  different  preamble as xn297l)","As for the protocol itself, I found your code has always same hopping_frequency_table

This is wrong...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1006,2021-02-25T15:38:17Z,2021-09-02T13:38:45Z,2021-09-02T13:38:45Z,CLOSED,False,0,0,0,https://github.com/smaller09,"Omphobby protocol support （telemetry support now, need cc2500&nrf24l01 installed)",0,[],https://github.com/DeviationTX/deviation/pull/1006,https://github.com/smaller09,5,https://github.com/DeviationTX/deviation/pull/1006#issuecomment-786476205,"Porting from DIY-Multiprotocol-TX-Module, need cc2500 installed.
tested on devo7e & devo10.
no telemetry now. (maybe never, cause cc2500 has  different  preamble as xn297l)","As for the protocol itself, I found your code has always same hopping_frequency_table

This is wrong...

the  hopping_frequency_table was send in BIND phase. I had changed it to different one, and it works.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1006,2021-02-25T15:38:17Z,2021-09-02T13:38:45Z,2021-09-02T13:38:45Z,CLOSED,False,0,0,0,https://github.com/smaller09,"Omphobby protocol support （telemetry support now, need cc2500&nrf24l01 installed)",0,[],https://github.com/DeviationTX/deviation/pull/1006,https://github.com/pascallanger,6,https://github.com/DeviationTX/deviation/pull/1006#issuecomment-786490262,"Porting from DIY-Multiprotocol-TX-Module, need cc2500 installed.
tested on devo7e & devo10.
no telemetry now. (maybe never, cause cc2500 has  different  preamble as xn297l)","the hopping_frequency_table was send in BIND phase. I had changed it to different one, and it works.

???? What you are saying is none sense... The hopping table is different for every module and even change with the RX number... The hopping table is sent during bind and can be anything which is what I'm doing by spreading it randomely. You are just moving the start within 8 which means that you have plenty of frequencies overlap between radios...
On the receiving side, you prefer no telemetry rather than telemetry for people having 4in1 which is a strange choice in my eyes.
The way you are trying to receive the packets with the CC2500 is not going to work. I'm able to receive some packets with it but they are so sparse that they are useless. I might give it a try again to see if I can get some improvement.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1006,2021-02-25T15:38:17Z,2021-09-02T13:38:45Z,2021-09-02T13:38:45Z,CLOSED,False,0,0,0,https://github.com/smaller09,"Omphobby protocol support （telemetry support now, need cc2500&nrf24l01 installed)",0,[],https://github.com/DeviationTX/deviation/pull/1006,https://github.com/smaller09,7,https://github.com/DeviationTX/deviation/pull/1006#issuecomment-786523645,"Porting from DIY-Multiprotocol-TX-Module, need cc2500 installed.
tested on devo7e & devo10.
no telemetry now. (maybe never, cause cc2500 has  different  preamble as xn297l)","the hopping_frequency_table was send in BIND phase. I had changed it to different one, and it works.

???? What you are saying is none sense... The hopping table is different for every module and even change with the RX number... The hopping table is sent during bind and can be anything which is what I'm doing by spreading it randomely. You are just moving the start within 8 which means that you have plenty of frequencies overlap between radios...
On the receiving side, you prefer no telemetry rather than telemetry for people having 4in1 which is a strange choice in my eyes.
The way you are trying to receive the packets with the CC2500 is not going to work. I'm able to receive some packets with it but they are so sparse that they are useless. I might give it a try again to see if I can get some improvement.

Oh sorry I make a big mistake, casue the code don't have packets detail, I use information from the omp protocol issue in your repository, so I always remember hopping table=(i+3)*5, and didn't notice that #define FORCE_OMP_ORIGINAL_ID was commented out, I will improve the code. thanks for your reminder.
I have switch to jumper T16 and  not using the devo10 for long time.  and just want my d7e can control omp m1, that's why I want to use single cc2500. but as what you said, it's not going to work.  ok, I will try to port to nrf2401.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1006,2021-02-25T15:38:17Z,2021-09-02T13:38:45Z,2021-09-02T13:38:45Z,CLOSED,False,0,0,0,https://github.com/smaller09,"Omphobby protocol support （telemetry support now, need cc2500&nrf24l01 installed)",0,[],https://github.com/DeviationTX/deviation/pull/1006,https://github.com/smaller09,8,https://github.com/DeviationTX/deviation/pull/1006#issuecomment-787462669,"Porting from DIY-Multiprotocol-TX-Module, need cc2500 installed.
tested on devo7e & devo10.
no telemetry now. (maybe never, cause cc2500 has  different  preamble as xn297l)","Telemetry works now, tested on devo10(4in1 module) + omp m1. need nrf24l01 to work. but compile fail on devo6&devo8, both two run out of rom space. may  need to cut down the codes.
btw I had also compiled the current master branch. those two would also run out of rom space. so the problem maybe in my own toolchain.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1007,2021-03-09T10:57:02Z,,2021-09-11T16:45:05Z,OPEN,False,969,53,12,https://github.com/smaller09,OMP Protocol support. only need cc2500 for tx&rx. telemetry support !,5,[],https://github.com/DeviationTX/deviation/pull/1007,https://github.com/smaller09,1,https://github.com/DeviationTX/deviation/pull/1007,"Telemetry works now, tested on devo10(4in1 module) & devo7e(cc2500) + omp m1. only need cc2500 to work.
this replace #1006","Telemetry works now, tested on devo10(4in1 module) & devo7e(cc2500) + omp m1. only need cc2500 to work.
this replace #1006",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1007,2021-03-09T10:57:02Z,,2021-09-11T16:45:05Z,OPEN,False,969,53,12,https://github.com/smaller09,OMP Protocol support. only need cc2500 for tx&rx. telemetry support !,5,[],https://github.com/DeviationTX/deviation/pull/1007,https://github.com/pascallanger,2,https://github.com/DeviationTX/deviation/pull/1007#issuecomment-801129103,"Telemetry works now, tested on devo10(4in1 module) & devo7e(cc2500) + omp m1. only need cc2500 to work.
this replace #1006","Thanks for finding the error which was preventing to receive a big majority of the packets: wrong BW filter value...
I've now implemented the RX method differently in Multi:

Don't care about the header (C) 71 0F. Note that the ""C"" is sent if a XN297 is used but not in case of the OMP which has a XN297L.
Consider the 55 of the XN297(L) header as a CC2500 preamble.
Configure SYNC1 & SYNC0 & ADDR as the first 3 bytes of the XN297 address -> This way the CC2500 starts to filter packets not sent to our attention.
Check the other address bytes based on the XN297 address len (3, 4 or 5 bytes) ie 0, 1 or 2 bytes additional check . Note: your implementation does not verify that you are receiving a packet for you...
Decode as a standard xn297 packet in normal or enhanced mode.
I'm getting pretty good results on the bench with a tuned frequency.

It's still not perfect since with the nrf without the motor running I get 100% of the packets with a good CRC but with the CC2500 it goes down to around 95%. I can see some bits not being received correctly. Note that the implementation you've taken from me is hidding it since even if the CRC is wrong and the payload is not too damage it will count the packet as good. So may be there is still some value tuning to apply the cc2500 config registers.
Pascal",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1007,2021-03-09T10:57:02Z,,2021-09-11T16:45:05Z,OPEN,False,969,53,12,https://github.com/smaller09,OMP Protocol support. only need cc2500 for tx&rx. telemetry support !,5,[],https://github.com/DeviationTX/deviation/pull/1007,https://github.com/pascallanger,3,https://github.com/DeviationTX/deviation/pull/1007#issuecomment-801144150,"Telemetry works now, tested on devo10(4in1 module) & devo7e(cc2500) + omp m1. only need cc2500 to work.
this replace #1006","I've just done an experiment by assigning a pot to the channel bandwith:

5 and above only one packet is getting in at time...
4 most of the packets are getting in but not 100% <- this is the limit where it starts reliabiliy to work but still on the border
3 or less is 100%
So I'll recommend updating the value to 0x3D instead of 0x4D.
Pascal",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1007,2021-03-09T10:57:02Z,,2021-09-11T16:45:05Z,OPEN,False,969,53,12,https://github.com/smaller09,OMP Protocol support. only need cc2500 for tx&rx. telemetry support !,5,[],https://github.com/DeviationTX/deviation/pull/1007,https://github.com/smaller09,4,https://github.com/DeviationTX/deviation/pull/1007#issuecomment-801165194,"Telemetry works now, tested on devo10(4in1 module) & devo7e(cc2500) + omp m1. only need cc2500 to work.
this replace #1006","Yes, I did think of using xn297 address as sync word  but I warry about other protocol which using cc2500 for xnl297, because I don't have those models to test, so don't want to change code a lot. and I do agree your implementation, it will be very good.
As for crc error. I did notified that.  In my d7e the LQI would be around 40~70, and as you said it would not decode every packet. but in my test. the LQI may not change a lot with or without motor running. I had made some tweaks to the cc2500 config registers. but got nothing. I dont have any instruments or tools to do futher research, what I have are only a d7e with cc2500 and a arduino nano with nrf24l01 for xn297dump.
I guess the problem may cause by the preamble byte. cause cc2500 suggest 4 byte of 0xAA as preamble.

BTW, I amd reading the sx1280 datasheet these days. and found it can do gfsk also. and it's highly configurable.
I'm thinking maybe we can use sx1280 to take place of a7105/cc2500/nrf24l01 as well as ELRS.
…
________________________________
发件人: pascallanger ***@***.***>
发送时间: 2021年3月17日 14:28
收件人: DeviationTX/deviation ***@***.***>
抄送: smaller09 ***@***.***>; Author ***@***.***>
主题: Re: [DeviationTX/deviation] OMP Protocol support. only need cc2500 for tx&rx. telemetry support ! (#1007)


Thanks for finding the error which was preventing to receive packets: wrong BW filter value...
I've now implemented the RX method differently in Multi:

  *   Don't care about the header (C) 71 0F. Note that the ""C"" is sent if a XN297 is used but not in case of the OMP which has a XN297L.
  *   Consider the 55 of the XN297(L) header as a CC2500 preamble.
  *   Configure SYNC1 & SYNC0 & ADDR as the first 3 bytes of the XN297 address -> This way the CC2500 starts to filter packets not sent to our attention.
  *   Check the other address bytes based on the XN297 address len (3, 4 or 5 bytes) ie 0, 1 or 2 bytes additional check . Note: your implementation does not verify that you are receiving a packet for you...
  *   Decode as a standard xn297 packet in normal or enhanced mode.
I'm getting pretty good results on the bench with a tuned frequency.

It's still not perfect since with the nrf without the motor running I get 100% of the packets with a good CRC but with the CC2500 it goes down to around 95%. I can see some bits not being received correctly. Note that the implementation you've taken from me is hidding it since even if the CRC is wrong and the payload is not too damage it will count the packet as good. So may be there is still some value tuning to apply the cc2500 config registers.

Pascal

―
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub<#1007 (comment)>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AJ3C3KAU4PCRONI7OSDIXB3TEC4ARANCNFSM4Y3KNRXA>.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1007,2021-03-09T10:57:02Z,,2021-09-11T16:45:05Z,OPEN,False,969,53,12,https://github.com/smaller09,OMP Protocol support. only need cc2500 for tx&rx. telemetry support !,5,[],https://github.com/DeviationTX/deviation/pull/1007,https://github.com/smaller09,5,https://github.com/DeviationTX/deviation/pull/1007#issuecomment-801176063,"Telemetry works now, tested on devo10(4in1 module) & devo7e(cc2500) + omp m1. only need cc2500 to work.
this replace #1006","I've just done an experiment by assigning a pot to the channel bandwith:

5 and above only one packet is getting in at time...
4 most of the packets are getting in but not 100% <- this is the limit where it starts reliabiliy to work but still on the border
3 or less is 100%
So I'll recommend updating the value to 0x3D instead of 0x4D.
Pascal


3D = 464K BW filter. that means the received signal have a big offset from the center frequency.
but I do remember that I had changed the BW to 541K and had no different. maybe in my situation it must more bigger to see change. I will do some test to confirm.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1007,2021-03-09T10:57:02Z,,2021-09-11T16:45:05Z,OPEN,False,969,53,12,https://github.com/smaller09,OMP Protocol support. only need cc2500 for tx&rx. telemetry support !,5,[],https://github.com/DeviationTX/deviation/pull/1007,https://github.com/pascallanger,6,https://github.com/DeviationTX/deviation/pull/1007#issuecomment-801228314,"Telemetry works now, tested on devo10(4in1 module) & devo7e(cc2500) + omp m1. only need cc2500 to work.
this replace #1006","My implementation is available on GitHub if you want to check.
The OMP protocol is now available with telemetry on CC2500 only modules, on NRF24L01 only modules and when both RF components are installed it uses the CC2500.
I forgot in my previous post to add that switching the CC2500 from TX<->RX is only 2 additonnal CC2500 commands to run so not a lot of overhead added.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1007,2021-03-09T10:57:02Z,,2021-09-11T16:45:05Z,OPEN,False,969,53,12,https://github.com/smaller09,OMP Protocol support. only need cc2500 for tx&rx. telemetry support !,5,[],https://github.com/DeviationTX/deviation/pull/1007,https://github.com/pascallanger,7,https://github.com/DeviationTX/deviation/pull/1007#issuecomment-801292298,"Telemetry works now, tested on devo10(4in1 module) & devo7e(cc2500) + omp m1. only need cc2500 to work.
this replace #1006","BTW, I amd reading the sx1280 datasheet these days. and found it can do gfsk also. and it's highly configurable.
I'm thinking maybe we can use sx1280 to take place of a7105/cc2500/nrf24l01 as well as ELRS.

I looked at it too. I was thinking it could even do the cyrf but no way...
The cyrf is my main target right now since it is EOL and you can't buy it anymore. I haven't found an easy replacement yet... If you have an idea you rae more than welcome.
Next will be the SX1280, I have a proto to work on so I'll get that going at some point but cyrf first.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1007,2021-03-09T10:57:02Z,,2021-09-11T16:45:05Z,OPEN,False,969,53,12,https://github.com/smaller09,OMP Protocol support. only need cc2500 for tx&rx. telemetry support !,5,[],https://github.com/DeviationTX/deviation/pull/1007,https://github.com/smaller09,8,https://github.com/DeviationTX/deviation/pull/1007#issuecomment-801601702,"Telemetry works now, tested on devo10(4in1 module) & devo7e(cc2500) + omp m1. only need cc2500 to work.
this replace #1006","BTW, I amd reading the sx1280 datasheet these days. and found it can do gfsk also. and it's highly configurable.
I'm thinking maybe we can use sx1280 to take place of a7105/cc2500/nrf24l01 as well as ELRS.

I looked at it too. I was thinking it could even do the cyrf but no way...
The cyrf is my main target right now since it is EOL and you can't buy it anymore. I haven't found an easy replacement yet... If you have an idea you rae more than welcome.
Next will be the SX1280, I have a proto to work on so I'll get that going at some point but cyrf first.

I do notified that cyrf was EOL. and also think of take place of it. for GFSK that should be ok by sx1280. but for DSSS it's more difficult. I first found A7157, but no datasheet around the internet, and then em357 or em358x. but don't have detal of the RF module.
if em358x works, I would vote for it, it has cortex-m3 core inside, and lot of gpio, and also a usb interface. we can use it for main controller.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1007,2021-03-09T10:57:02Z,,2021-09-11T16:45:05Z,OPEN,False,969,53,12,https://github.com/smaller09,OMP Protocol support. only need cc2500 for tx&rx. telemetry support !,5,[],https://github.com/DeviationTX/deviation/pull/1007,https://github.com/hazemay,9,https://github.com/DeviationTX/deviation/pull/1007#issuecomment-907229540,"Telemetry works now, tested on devo10(4in1 module) & devo7e(cc2500) + omp m1. only need cc2500 to work.
this replace #1006","is this protocol include newest firmware?
or any steps that I need to add into newest firmware?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1007,2021-03-09T10:57:02Z,,2021-09-11T16:45:05Z,OPEN,False,969,53,12,https://github.com/smaller09,OMP Protocol support. only need cc2500 for tx&rx. telemetry support !,5,[],https://github.com/DeviationTX/deviation/pull/1007,https://github.com/smaller09,10,https://github.com/DeviationTX/deviation/pull/1007#issuecomment-908840880,"Telemetry works now, tested on devo10(4in1 module) & devo7e(cc2500) + omp m1. only need cc2500 to work.
this replace #1006","is this protocol include newest firmware?
or any steps that I need to add into newest firmware?

it was not included in mainline.
u must clone the source then patch the code and compile it.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1007,2021-03-09T10:57:02Z,,2021-09-11T16:45:05Z,OPEN,False,969,53,12,https://github.com/smaller09,OMP Protocol support. only need cc2500 for tx&rx. telemetry support !,5,[],https://github.com/DeviationTX/deviation/pull/1007,https://github.com/hazemay,11,https://github.com/DeviationTX/deviation/pull/1007#issuecomment-917376569,"Telemetry works now, tested on devo10(4in1 module) & devo7e(cc2500) + omp m1. only need cc2500 to work.
this replace #1006","I tried to build my docker desktop, but failed.
Would you please compile a firmware for my DEVO8S?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1007,2021-03-09T10:57:02Z,,2021-09-11T16:45:05Z,OPEN,False,969,53,12,https://github.com/smaller09,OMP Protocol support. only need cc2500 for tx&rx. telemetry support !,5,[],https://github.com/DeviationTX/deviation/pull/1007,https://github.com/smaller09,12,https://github.com/DeviationTX/deviation/pull/1007#issuecomment-917421549,"Telemetry works now, tested on devo10(4in1 module) & devo7e(cc2500) + omp m1. only need cc2500 to work.
this replace #1006","I tried to build my docker desktop, but failed.
Would you please compile a firmware for my DEVO8S?

it's because there are too many protocol for DEVO8 to fit into it's memery.
I just commet out xnl297dump and cyrf6936_scaner to make it to be builded.
deviation-devo8-v5.0.0-dddda03.zip
please try and report back.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1007,2021-03-09T10:57:02Z,,2021-09-11T16:45:05Z,OPEN,False,969,53,12,https://github.com/smaller09,OMP Protocol support. only need cc2500 for tx&rx. telemetry support !,5,[],https://github.com/DeviationTX/deviation/pull/1007,https://github.com/hazemay,13,https://github.com/DeviationTX/deviation/pull/1007#issuecomment-917436651,"Telemetry works now, tested on devo10(4in1 module) & devo7e(cc2500) + omp m1. only need cc2500 to work.
this replace #1006","I tried to build my docker desktop, but failed.
Would you please compile a firmware for my DEVO8S?

it's because there are too many protocol for DEVO8 to fit into it's memery.
I just commet out xnl297dump and cyrf6936_scaner to make it to be builded.
deviation-devo8-v5.0.0-dddda03.zip
please try and report back.

I already flash this firmware into my DEVO8S.
it seems like work very well.
I will try fly my M2, I will update it later.
thanks for your help.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/phobos-,1,https://github.com/DeviationTX/deviation/pull/1009,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip",True,"{'THUMBS_UP': ['https://github.com/PabloAntolinez', 'https://github.com/tonvfx', 'https://github.com/StonedDawg']}"
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/Dropsleutel,2,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-820667175,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","Hi Phobos,
I flashed your firmware in my tx, just to have a look.
just to mention I have no ESP 2.4ghz, only Frsky R9 I could test for you.
R9M module works in via PXX, as protocol it is inverted in deviation.
So CRSF output, it need to get inversion option in order to use inverted R9M in the back.
I see that firmware, nr c84450e it is excact same nr, as version i flashed in my Tx 30december2020.
There is no ELRS protocol in the list, but when selecting CRSF  protocol, (note no module present in bay), I can see an empty menu, no txt, just yellow line which can be changed 4 positions up/down.
Thanks for all your great help and efforts !!
let me know if can help testing",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/phobos-,3,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-821044515,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","Hi, thanks for the comment.
Hexfet went to hell and back to invert the PXX protocol :)
He basically implemented it as a bitbanged PWM:
https://github.com/DeviationTX/deviation/blob/master/src/target/tx/devo/common/protocol/pwm.c#L118
For CRSF it is different, it is a hardware UART implementation:
https://github.com/DeviationTX/deviation/blob/master/src/protocol/crsf_uart.c#L286
Deviation uses STM32F103RET6 at least for t8sg which I have on hand - that processor is incapable of inverting the UART signal in software, there are additional hardware inverters needed. That would not be the case if an F3 family was used.
What could be done from the software side is implementing a software serial communication similar to PXX, but then I don't think we would be able to achieve 400k baudrate speed required by CRSF protocol.
I actually also have an R9M module which I flashed and modded to work with ExpressLRS and Deviation, but I modded it in a way that only allows for one way communication between the module and TX. What it means is you can only send stick information to the module, but you will not receive any communication back, like configuration data, telemetry, etc. If you still want to do the mod you can refer to the short tutorial I posted on RCGroups:
https://www.rcgroups.com/forums/showthread.php?3437865-ExpressLRS-DIY-LoRa-based-race-optimized-RC-link-system/page13#post46673237
You will be able to use ExpressLRS gear, but still this Pull Request will not help you, you will see a blank page.
With ESP based module module, you can invert/uninvert the signal on the module side via software. Communication to and from the module would then work as expected, and the CRSF protocol menu should look like this:",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/dat-alex,4,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-821091437,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","I have recompiled source for the 2400_TX_ESP32_SX1280_E28_via_UART   (-DUART_INVERTED be commented out in user_defines.txt)
BUT I have not eps32 TX module available to test
SO THIS IS NOT TESTED!
I will upload here for someone to test.
DIY_2400_TX_ESP32_SX1280_E28_via_UART.zip
(this way you have not to do the 'dirty work' of installing Visual Studio, settings ,for compiling etc....)",True,{'HEART': ['https://github.com/phobos-']}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/Dropsleutel,5,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-821154563,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","@phobos
And what about the R9M, i assume there is an hardware inverter onboard?
Maybe bridging or bypassing it ? Direct feed to the uart pin at R9M cpu?
The resistor mod and alos the temperature issues in R9M were serial comms are affected, maybe we could also get rid off as bot bit of strange issues....
Is there any shematic of R9M or the Happymodel 868?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/tonvfx,6,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-829075759,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","Hey!
This is great. Would it be possible to also do a build for the V2 non-plus? The Carbon T8SG uses that firmware. Thanks!",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/phobos-,7,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-829219124,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","@tonvfx
deviation-t8sg_v2-v5.0.0-575ef03.zip",True,"{'HEART': ['https://github.com/tonvfx', 'https://github.com/vopt']}"
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,None,8,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-831604769,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","with diy esp-01f+sx127x 868mhz it works fine
https://github.com/ExpressLRS/ExpressLRS/wiki/Building-an-Esp-Rx#custom-esp-900-mhz-rx",True,{'THUMBS_UP': ['https://github.com/phobos-']}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/tonvfx,9,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-832132877,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","@tonvfx
deviation-t8sg_v2-v5.0.0-575ef03.zip

That's awesome!! Thanks.. As soon as my module arrives I'll get going with this. Thank you very much!",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/tonvfx,10,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-841717736,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","@tonvfx
deviation-t8sg_v2-v5.0.0-575ef03.zip

Got it up and running. Nice one.",True,{'THUMBS_UP': ['https://github.com/phobos-']}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,None,11,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-841722751,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","Thats great, have you tried on fligth allready? mine fell a loot more reactive...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/phobos-,12,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-843412316,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","I pushed a small bugfix that caused the menus to glitch sometimes. Builds are updated in the first (top) comment.
If anyone is interested in a build for a different target - shout here, I'll upload it 😅",True,{'ROCKET': ['https://github.com/tonvfx']}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/jviticofpv,13,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-846471682,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","Hello my friends...
I would like a little help over here, just to be clear that my Jumper/RadioMaster TX8 (deviation-t8sg_v2) would work ok with Happymodel 2.4Ghz TX/RX combo.
- In order to make it work I must do the next steps??
1- Crossfire pin mod.
2- Flash this firmware ((deviation-t8sg_v2-v5.0.0-1dc62dc.zip))
3- Update Tx and Rx via WIFI with my pc
4- and that's it??
I would appreciate your help.... not understanding what to do... it's what have me with my purchase on hold.
Thanks in advance from Chile (Venezuelan guy)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/Thomas-Lawford,14,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-846485268,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","Hi, I installed the firmware and completed the hardware mod, but I was wondering:
do I need to add a LUA script? -if yes where in the files am I supposed to add it, and where can  I get this script?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/phobos-,15,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-846534935,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","@jviticofpv yes, that's it, just remember to flash Happymodel tx with -DUART_INVERTED commented out :
#-DUART_INVERTED",True,{'THUMBS_UP': ['https://github.com/jviticofpv']}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/phobos-,16,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-846535062,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","@Thomas-Lawford no need, just follow the same steps as @jviticofpv described in the comment above yours.
All config params should be available under CRSF protocol menu.",True,{'THUMBS_UP': ['https://github.com/Thomas-Lawford']}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/jviticofpv,17,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-846562711,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","@jviticofpv yes, that's it, just remember to flash Happymodel tx with -DUART_INVERTED commented out :
#-DUART_INVERTED

perfect.... but this part is what I don't understand.   I'm sorry to insist, but could you tell me where to get the ""how to"" about this part.... specially the ""comment out part""...
if this means that I must do some coding? (installing coding software)?
or just get the happymodel firmware, look for ""USER_DEFINES.TXT"" file, and comment out with # the line that you mention?
if is like this last part (I'll hope) will. be perfect, because I know that I can do it 😅😅..
thanks again for your help...",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/phobos-,18,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-846612798,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","@jviticofpv You can use the ExpressLRS configurator to flash the firmware:
https://www.youtube.com/watch?v=XpCvYpyQ4LM&ab_channel=KaijuKaiju
https://www.youtube.com/watch?v=wBUamLm51XQ&ab_channel=UAVTechUAVTech
here are two examples, there are many more tutorials on youtube.
Finally, if you'll still have trouble with flashing expresslrs stuff you can hop on discord,  there are many knowledgable people that can help with specific issues:
https://discord.com/invite/dS6ReFY",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/jviticofpv,19,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-846626631,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","@jviticofpv You can use the ExpressLRS configurator to flash the firmware:
https://www.youtube.com/watch?v=XpCvYpyQ4LM&ab_channel=KaijuKaiju
https://www.youtube.com/watch?v=wBUamLm51XQ&ab_channel=UAVTechUAVTech
here are two examples, there are many more tutorials on youtube.
Finally, if you'll still have trouble with flashing expresslrs stuff you can hop on discord, there are many knowledgable people that can help with specific issues:
https://discord.com/invite/dS6ReFY

thanks so much.... I'm already purchased my expresslrs setup... thanks for clarify my doubts....",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/tonvfx,20,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-848216311,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","I pushed a small bugfix that caused the menus to glitch sometimes. Builds are updated in the first (top) comment.
If anyone is interested in a build for a different target - shout here, I'll upload it 😅

Hey! I just flashed this to my radio, seemed fine.. except, when I accidentally switched to sbus and back to crsf the menu was gone. I had to load another model, switch off the radio, switch on, reload elrs and it was back. Also, I doesn't look like wifi update is working on MacOs.. Chrome stalls at 17% and then wifi is lost... which brings me to another question, is there a way for me to see what version of expresslrs I'm running on my radio? (""version"" in the menu would be nice..)
Thanks for the awesome work!",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/howels,21,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-848423615,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","I pushed a small bugfix that caused the menus to glitch sometimes. Builds are updated in the first (top) comment.
If anyone is interested in a build for a different target - shout here, I'll upload it 😅

Hey! I just flashed this to my radio, seemed fine.. except, when I accidentally switched to sbus and back to crsf the menu was gone. I had to load another model, switch off the radio, switch on, reload elrs and it was back. Also, I doesn't look like wifi update is working on MacOs.. Chrome stalls at 17% and then wifi is lost... which brings me to another question, is there a way for me to see what version of expresslrs I'm running on my radio? (""version"" in the menu would be nice..)
Thanks for the awesome work!

Wait for eLRS 1.1, it'll arrive soon and will work using the same code as existing CRSF support in deviation nightly builds. No need for the special build above (which is probably causing the issue you report with menus). No idea why WiFi update doesn't work- please report on eLRS GitHub.
Edit- the lua menu changes are now planned for 2.x cos they're incompatible with prior 1.x menu code.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/tonvfx,22,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-848698472,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","I pushed a small bugfix that caused the menus to glitch sometimes. Builds are updated in the first (top) comment.
If anyone is interested in a build for a different target - shout here, I'll upload it 😅

Hey! I just flashed this to my radio, seemed fine.. except, when I accidentally switched to sbus and back to crsf the menu was gone. I had to load another model, switch off the radio, switch on, reload elrs and it was back. Also, I doesn't look like wifi update is working on MacOs.. Chrome stalls at 17% and then wifi is lost... which brings me to another question, is there a way for me to see what version of expresslrs I'm running on my radio? (""version"" in the menu would be nice..)
Thanks for the awesome work!

Wait for eLRS 1.1, it'll arrive soon and will work using the same code as existing CRSF support in deviation nightly builds. No need for the special build above (which is probably causing the issue you report with menus). No idea why WiFi update doesn't work- please report on eLRS GitHub.

Wait? Haha.. with something this exciting? ;-) .. But that's really good to hear. I'll ask about the wifi update 'issue' on the elrs github/ discord... Like I said.. it's also possible it does work, but there's (in deviationtx at least atm) not an easy way to check version running on the tx afaik....",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,None,23,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-848705865,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","I pushed a small bugfix that caused the menus to glitch sometimes. Builds are updated in the first (top) comment.
If anyone is interested in a build for a different target - shout here, I'll upload it 😅

Hey! I just flashed this to my radio, seemed fine.. except, when I accidentally switched to sbus and back to crsf the menu was gone. I had to load another model, switch off the radio, switch on, reload elrs and it was back. Also, I doesn't look like wifi update is working on MacOs.. Chrome stalls at 17% and then wifi is lost... which brings me to another question, is there a way for me to see what version of expresslrs I'm running on my radio? (""version"" in the menu would be nice..)
Thanks for the awesome work!

Wait for eLRS 1.1, it'll arrive soon and will work using the same code as existing CRSF support in deviation nightly builds. No need for the special build above (which is probably causing the issue you report with menus). No idea why WiFi update doesn't work- please report on eLRS GitHub.

Wait? Haha.. with something this exciting? ;-) .. But that's really good to hear. I'll ask about the wifi update 'issue' on the elrs github/ discord... Like I said.. it's also possible it does work, but there's (in deviationtx at least atm) not an easy way to check version running on the tx afaik....

Well.. i think if update dont work and it work on rx, they cant bind if both dont have same version..",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/Dropsleutel,24,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-874338960,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","Just to inform I had r9m running in t8sg v2 plus fine. (inc telemetry) (modified the tray)
I  flashed my r9m with ELRS firmware and it runs in OpenTx radio.
Now I connected as such;

I connected Rx1, to the CPPM pin. (and removed the transistor)
I connected Tx Alternative location to Smartport pin.
I flashed https://github.com/DeviationTX/deviation/files/6503349/deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
However in CRSF menu,  I get an empty bar which I can move up and down.
I don't see any Txt or data in the menus.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/howels,25,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-875528722,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","Just to inform I had r9m running in t8sg v2 plus fine. (inc telemetry) (modified the tray)
I flashed my r9m with ELRS firmware and it runs in OpenTx radio.
Now I connected as such;

I connected Rx1, to the CPPM pin. (and removed the transistor)
I connected Tx Alternative location to Smartport pin.
I flashed https://github.com/DeviationTX/deviation/files/6503349/deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
However in CRSF menu, I get an empty bar which I can move up and down.
I don't see any Txt or data in the menus.

Did you change the UART inversion when building eLRS? Setting for T8SG is opposite of OpenTX.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/Dropsleutel,26,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-875590007,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","I used R9M.   Inversion is only availble for DIY ESP?
However I connected direct to tx rx pins as by picture above, so it should bypass the Frsky invertors on the pcb of the R9M ?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/Teiho69,27,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-912163832,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","Just flashed my T8SG v2 carbon with deviation-t8sg_v2-v5.0.0-575ef03 .
My Happymodel ES900 tx works like a charm, so do my TBS Tracer tx.
I'm glad that CSRF support for TBS Tx is not lost.
Thank you really much.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/kotyatokino,28,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-952522427,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","I'm using carbon T8SG with deviation-t8sg_v2-v5.0.0-575ef03.zip and ELRS1.0-1.1 works fine.
But new 1.2 is not shown on CRSF menu. blank lines.
Just only updated ELRS 1.2 without another changes from working 1.1 environment.
Then I revert back to 1.1 and working fine now.
Can we use ELRS 1.2 with this firmware?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/howels,29,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-952934308,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","I'm using carbon T8SG with deviation-t8sg_v2-v5.0.0-575ef03.zip and ELRS1.0-1.1 works fine. But new 1.2 is not shown on CRSF menu. blank lines. Just only updated ELRS 1.2 without another changes from working 1.1 environment. Then I revert back to 1.1 and working fine now. Can we use ELRS 1.2 with this firmware?

What is your device name? Names > 12 characters don't render properly in DeviationTX.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/phobos-,30,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-952937515,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","@kotyatokino I am currently adding support for v1.2 to spi rx, I will take a look at deviationtx side after bf side is done 😅 Please stick to v1.1 for the time being.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/howels,31,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-952966142,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","@kotyatokino I am currently adding support for v1.2 to spi rx, I will take a look at deviationtx side after bf side is done sweat_smile Please stick to v1.1 for the time being.

If you know where the device name length limits are in DeviationTX that would be awesome to fix @phobos- , myself and @StonedDawg hunted for that and couldn't see where the 12 char limit is set.",True,{'EYES': ['https://github.com/phobos-']}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/kotyatokino,32,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-953391083,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","Thank you very much for your comments.
@howels

What is your device name? Names > 12 characters don't render properly in DeviationTX.
I know this issue, and my dev name only 4 chars.

@phobos-
Got it. Thank you for your effort.",True,{'THUMBS_UP': ['https://github.com/howels']}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/phobos-,33,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-954127885,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","@kotyatokino I was able to reproduce your issue, looks like ExpressLRS/ExpressLRS#897 breaks compatibility with deviationTX. I will look into it.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/kotyatokino,34,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-954322493,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","@phobos-
I just pulled your codes.
My poor miss understanding was.
crsf_uart.c >  CRSF_Cmds(enum ProtoCmds cmd) > Model.proto_opts[PROTO_OPTS_RF_FREQ]
was changed from TX module. because PROTO_OPTS_RF_FREQ is getting from tx module.
But the value didn't  get from TX module by crashed. I clearly understand current situation.
The code was merged to ELRS, so we need to wait the release 1.3 is better I think.
BTW, Do you have debug and build instruction page for deviation tx? DO you know the instruction availabe?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/kotyatokino,35,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-954546722,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","Hmm... I didn't understand everything.
ExpressLRS/ExpressLRS#897  's code is already merged with 1.2 release...
We already compiled this fix, but it's not solved now.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/phobos-,36,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-954559695,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","@kotyatokino this change is what BREAKS it, not fixes it. I removed this line from expresslrs code, compiled & flashed my ExpressLRS TX module and it started working again.
I changed:
CRSF::duplex_set_TX(); -> //CRSF::duplex_set_TX();",True,"{'THUMBS_UP': ['https://github.com/kotyatokino', 'https://github.com/howels']}"
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/Dropsleutel,37,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-954826410,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","Hi guys still to get back to use cases for the old red R9M's in T8SG still laying around covered in dust;
Anybody tried to hook up the external R9M UART Port into bay of T8SGV2 Plus ? Change ExpressLRS  targets.h  the RC pins to that port , so we should get rid of any nasty invertors ?
#define GPIO_PIN_RCSIGNAL_RX    PA10
#define GPIO_PIN_RCSIGNAL_TX    PA9

#elif defined(TARGET_R9M_TX) || defined(TARGET_TX_ES915TX)
#define GPIO_PIN_RFamp_APC1           PA6  //APC2 is connected through a I2C dac and is handled elsewhere
#define GPIO_PIN_RFswitch_CONTROL     PB3  //HIGH = RX, LOW = TX
#define GPIO_PIN_NSS            PB12
#define GPIO_PIN_DIO0           PA15
#define GPIO_PIN_MOSI           PB15
#define GPIO_PIN_MISO           PB14
#define GPIO_PIN_SCK            PB13
#define GPIO_PIN_RST            PC14
#define GPIO_PIN_RX_ENABLE      GPIO_PIN_RFswitch_CONTROL
#define GPIO_PIN_TX_ENABLE      GPIO_PIN_RFamp_APC1
#define GPIO_PIN_SDA            PB7
#define GPIO_PIN_SCL            PB6
#define GPIO_PIN_RCSIGNAL_RX    PB11 // not yet confirmed
#define GPIO_PIN_RCSIGNAL_TX    PB10 // not yet confirmed
#define GPIO_PIN_LED_RED        PA11 // Red LED
#define GPIO_PIN_LED_GREEN      PA12 // Green LED
#define GPIO_PIN_BUTTON         PA8 // pullup e.g. LOW when pressed
#define GPIO_PIN_BUZZER         PB1
#define GPIO_PIN_DIP1           PA12 // dip switch 1
#define GPIO_PIN_DIP2           PA11 // dip switch 2
#define GPIO_PIN_FAN_EN         PB9 // Fan mod https://github.com/AlessandroAU/ExpressLRS/wiki/R9M-Fan-Mod-Cover
#define GPIO_PIN_DEBUG_RX    PA10 // confirmed
#define GPIO_PIN_DEBUG_TX    PA9 // confirmed
#define GPIO_PIN_BUFFER_OE      PA5  //CONFIRMED
#define GPIO_PIN_BUFFER_OE_INVERTED 0
#define GPIO_PIN_DIO1           PA1  //Not Needed, HEARTBEAT pin
#define DAC_I2C_ADDRESS         0b0001100
#define DAC_IN_USE              1
Shall I test it with latest code  ? Deviation ExpressLRS code ?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/kotyatokino,38,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-955085549,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","@kotyatokino this change is what BREAKS it, not fixes it. I removed this line from expresslrs code, compiled & flashed my ExpressLRS TX module and it started working again.
I changed: CRSF::duplex_set_TX(); -> //CRSF::duplex_set_TX();

Thank you for your explation.
CRSF::duplex_set_TX() will break the way to CRSF_Cmds().
We need to find reason why . I will try it with my poor understanding.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/kotyatokino,39,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-961578833,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","hmmm.. I just giving up debugging...
When we see debug print , I need to buy phono plug UART converter cable..",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/howels,40,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-962146214,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","hmmm.. I just giving up debugging... When we see debug print , I need to buy phono plug UART converter cable..

Yes, it's the most awkward debug system. I thought the same thing.",True,{'THUMBS_UP': ['https://github.com/kotyatokino']}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/Dropsleutel,41,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-963543244,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","I just gave it a re-try T8SG V2 Plus, with R9M ExpressLRS flashed, but the CRSF menu is not working for me.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/dat-alex,42,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-979893909,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","Hi ! I 've just received my new HappyModel elrs 2.4 Tx module and trying it with T8SG plus .I get the classic problem with blankCRSF menus.
Is there any Deviation fw build compatible with ELRS F4 2G4 AIO Flight Controller spi receiver already compiled for the plus with OLED (like Phobos no-OLED)?
Thank you for your time
Alex",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/howels,43,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-980014818,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","Hi ! I 've just received my new HappyModel elrs 2.4 Tx module and trying it with T8SG plus .I get the classic problem with blankCRSF menus. Is there any Deviation fw build compatible with ELRS F4 2G4 AIO Flight Controller spi receiver already compiled for the plus with OLED (like Phobos no-OLED)?
Thank you for your time Alex

Try this #1018 (comment)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/harlock00999,44,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-991849105,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","Hi, First things first, thank you all for trying to keep Deviationtx alive and usable with ELRS! It is thanks to this post if I'm able to use a HGLRC TX 2.4Ghz on my beloved T8SG V2 PLUS! - THANK YOU ALL - (@phobos- you're the best)
Now, as many of you I was stuck with fw 1.1 since I read that 1.2 wasn't good yet.
But yesterday I flashed my tx with ELSR fw version 1.2.1 and everything seem to work just fine. The only bug I noticed is the power value that you can add on the main page of your model freeze sometimes and come back if you go in the model setup and re-int the CRFS module. Other values like LQ, RSSI work fine on both radio and Betaflight.
Thoughts? Questions? Comments? Do you want me to do some tests?
Please keep in mind that I'm just a user...well, a smart user if you will ^_^
Thank you guys and happy flying",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/StonedDawg,45,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-991857053,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","@harlock00999 elrs stable V2 has been released, please use V2, and this PR from Phobos  for your deviationtx
Phobos deviationtx for elrs V2",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/harlock00999,46,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-991867387,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","@harlock00999 elrs stable V2 has been released, please use V2, and this PR from Phobos for your deviationtx
Phobos deviationtx for elrs V2

I'm going right now!!! Thank you!",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/phobos-,47,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-1004805816,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","closing this, as expresslrs v2.0 is natively supported in deviationTX.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1009,2021-04-15T15:45:41Z,2022-01-04T13:21:19Z,2022-01-05T15:38:56Z,CLOSED,False,208,3,1,https://github.com/phobos-,ExpressLRS support,1,[],https://github.com/DeviationTX/deviation/pull/1009,https://github.com/howels,48,https://github.com/DeviationTX/deviation/pull/1009#issuecomment-1005832902,"This adds the same functionality as ExpressLRS LUA in DeviationTX:
https://github.com/ExpressLRS/ExpressLRS/blob/develop/src/lua/ELRS.lua
This code works with ExpressLRS v1.0.0-RC1 onwards.
Attached test binaries for Jumper T8SG V2 Plus.
Feedback is very much welcome.
(Note - only esp based ExpressLRS tx modules are supported -> -DUART_INVERTED needs to be commented out in user_defines.txt)
(Note2 - you need hardware CRSF mod in your radio in order for CRSF to work on the correct pin. Tutorial here: https://www.youtube.com/watch?v=Lr_YRGJl5x8)
deviation-t8sg_v2_plus-v5.0.0-1dc62dc.zip
deviation-t8sg_v2-v5.0.0-1dc62dc.zip","closing this, as expresslrs v2.0 is natively supported in deviationTX.

There's still the 12 character limit, which many users struggle with. I'm using -DDEVICE_NAME to compile my eLRS TX with a shorter name, but would be great if the CRSF code could just concat fields to 12 chars instead of rendering a blank line.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1011,2021-06-11T16:50:56Z,2021-06-12T06:40:04Z,2021-09-26T20:13:13Z,MERGED,True,12,9,1,https://github.com/MJ666,Fix bind problem for FrSky XM+ v2.1.2 firmware,1,[],https://github.com/DeviationTX/deviation/pull/1011,https://github.com/MJ666,1,https://github.com/DeviationTX/deviation/pull/1011,"Based on an update of the MPM code. All thanks go to Pascal for doing the fix.
pascallanger/DIY-Multiprotocol-TX-Module#543","Based on an update of the MPM code. All thanks go to Pascal for doing the fix.
pascallanger/DIY-Multiprotocol-TX-Module#543",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1011,2021-06-11T16:50:56Z,2021-06-12T06:40:04Z,2021-09-26T20:13:13Z,MERGED,True,12,9,1,https://github.com/MJ666,Fix bind problem for FrSky XM+ v2.1.2 firmware,1,[],https://github.com/DeviationTX/deviation/pull/1011,https://github.com/howels,2,https://github.com/DeviationTX/deviation/pull/1011#issuecomment-921712649,"Based on an update of the MPM code. All thanks go to Pascal for doing the fix.
pascallanger/DIY-Multiprotocol-TX-Module#543","@MJ666 @TheRealMoeder since this PR merge nightly builds have been broken, please can you check what happened?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1011,2021-06-11T16:50:56Z,2021-06-12T06:40:04Z,2021-09-26T20:13:13Z,MERGED,True,12,9,1,https://github.com/MJ666,Fix bind problem for FrSky XM+ v2.1.2 firmware,1,[],https://github.com/DeviationTX/deviation/pull/1011,https://github.com/MJ666,3,https://github.com/DeviationTX/deviation/pull/1011#issuecomment-921762550,"Based on an update of the MPM code. All thanks go to Pascal for doing the fix.
pascallanger/DIY-Multiprotocol-TX-Module#543",Sorry dot have any control over the nightly build process. Was also asking already in the forum.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1011,2021-06-11T16:50:56Z,2021-06-12T06:40:04Z,2021-09-26T20:13:13Z,MERGED,True,12,9,1,https://github.com/MJ666,Fix bind problem for FrSky XM+ v2.1.2 firmware,1,[],https://github.com/DeviationTX/deviation/pull/1011,https://github.com/howels,4,https://github.com/DeviationTX/deviation/pull/1011#issuecomment-922253247,"Based on an update of the MPM code. All thanks go to Pascal for doing the fix.
pascallanger/DIY-Multiprotocol-TX-Module#543","Sorry dot have any control over the nightly build process. Was also asking already in the forum.

Can you revert the PR and check that all build targets are working locally before merging again?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1011,2021-06-11T16:50:56Z,2021-06-12T06:40:04Z,2021-09-26T20:13:13Z,MERGED,True,12,9,1,https://github.com/MJ666,Fix bind problem for FrSky XM+ v2.1.2 firmware,1,[],https://github.com/DeviationTX/deviation/pull/1011,https://github.com/MJ666,5,https://github.com/DeviationTX/deviation/pull/1011#issuecomment-922330798,"Based on an update of the MPM code. All thanks go to Pascal for doing the fix.
pascallanger/DIY-Multiprotocol-TX-Module#543",As you may see this PR passed all checks and should build without issues. It also builds without issues in my private build environment. Anyhow I'm not able to revert this PR since I dont have the permission to do so.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1011,2021-06-11T16:50:56Z,2021-06-12T06:40:04Z,2021-09-26T20:13:13Z,MERGED,True,12,9,1,https://github.com/MJ666,Fix bind problem for FrSky XM+ v2.1.2 firmware,1,[],https://github.com/DeviationTX/deviation/pull/1011,https://github.com/howels,6,https://github.com/DeviationTX/deviation/pull/1011#issuecomment-922360400,"Based on an update of the MPM code. All thanks go to Pascal for doing the fix.
pascallanger/DIY-Multiprotocol-TX-Module#543",Any ideas why the devo6 image build failed? https://travis-ci.org/github/DeviationTX/deviation/builds/774621651,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1011,2021-06-11T16:50:56Z,2021-06-12T06:40:04Z,2021-09-26T20:13:13Z,MERGED,True,12,9,1,https://github.com/MJ666,Fix bind problem for FrSky XM+ v2.1.2 firmware,1,[],https://github.com/DeviationTX/deviation/pull/1011,https://github.com/howels,7,https://github.com/DeviationTX/deviation/pull/1011#issuecomment-922492927,"Based on an update of the MPM code. All thanks go to Pascal for doing the fix.
pascallanger/DIY-Multiprotocol-TX-Module#543",No idea why it fails - builds fine locally here for devo6 but I notice that Trusty 14.04 is being used as the base image which is EOL now.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1011,2021-06-11T16:50:56Z,2021-06-12T06:40:04Z,2021-09-26T20:13:13Z,MERGED,True,12,9,1,https://github.com/MJ666,Fix bind problem for FrSky XM+ v2.1.2 firmware,1,[],https://github.com/DeviationTX/deviation/pull/1011,https://github.com/gdenton61,8,https://github.com/DeviationTX/deviation/pull/1011#issuecomment-926978442,"Based on an update of the MPM code. All thanks go to Pascal for doing the fix.
pascallanger/DIY-Multiprotocol-TX-Module#543","My local build (on Ubuntu 20.04.3) the devo6 builds fine but the devo7e fails with the same error as shown on lines 1416 & 1417 of https://travis-ci.org/github/DeviationTX/deviation/builds/774621651 referenced above:
arm-none-eabi-ld: objs/devo7e/frskyx_cc2500.elf section .bss' will not fit in region ram'
arm-none-eabi-ld: region `ram' overflowed by 18 bytes",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1011,2021-06-11T16:50:56Z,2021-06-12T06:40:04Z,2021-09-26T20:13:13Z,MERGED,True,12,9,1,https://github.com/MJ666,Fix bind problem for FrSky XM+ v2.1.2 firmware,1,[],https://github.com/DeviationTX/deviation/pull/1011,https://github.com/MJ666,9,https://github.com/DeviationTX/deviation/pull/1011#issuecomment-927238651,"Based on an update of the MPM code. All thanks go to Pascal for doing the fix.
pascallanger/DIY-Multiprotocol-TX-Module#543","Mhhh, it really looks to be the FrSky protocol does not fit anymore into memory of the low end Devo's. There was quite some optimization done for the v2.x protocol update to make it fit. I guess there are now no more other option for optimisation than excluding this fix for the Devo7 builds. Not sure why it builds successful during merge in the first place?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1011,2021-06-11T16:50:56Z,2021-06-12T06:40:04Z,2021-09-26T20:13:13Z,MERGED,True,12,9,1,https://github.com/MJ666,Fix bind problem for FrSky XM+ v2.1.2 firmware,1,[],https://github.com/DeviationTX/deviation/pull/1011,https://github.com/howels,10,https://github.com/DeviationTX/deviation/pull/1011#issuecomment-927274068,"Based on an update of the MPM code. All thanks go to Pascal for doing the fix.
pascallanger/DIY-Multiprotocol-TX-Module#543",Can we disable it for limited-flash targets for now in order to get nightly builds rolling again and optimise for space later if that requires time and research @MJ666 ?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1011,2021-06-11T16:50:56Z,2021-06-12T06:40:04Z,2021-09-26T20:13:13Z,MERGED,True,12,9,1,https://github.com/MJ666,Fix bind problem for FrSky XM+ v2.1.2 firmware,1,[],https://github.com/DeviationTX/deviation/pull/1011,https://github.com/MJ666,11,https://github.com/DeviationTX/deviation/pull/1011#issuecomment-927363413,"Based on an update of the MPM code. All thanks go to Pascal for doing the fix.
pascallanger/DIY-Multiprotocol-TX-Module#543",Added a new PR to apply the XM+ fix only to non modular targets. #1015,True,{'THUMBS_UP': ['https://github.com/howels']}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1013,2021-08-07T16:53:33Z,2021-08-28T16:40:50Z,2021-08-28T16:40:50Z,MERGED,True,2,2,1,https://github.com/StonedDawg,fix crsf datatype for config page,1,[],https://github.com/DeviationTX/deviation/pull/1013,https://github.com/StonedDawg,1,https://github.com/DeviationTX/deviation/pull/1013,Just a very small fix of the CRSF config page when showing int16 and uint16 data types.,Just a very small fix of the CRSF config page when showing int16 and uint16 data types.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1013,2021-08-07T16:53:33Z,2021-08-28T16:40:50Z,2021-08-28T16:40:50Z,MERGED,True,2,2,1,https://github.com/StonedDawg,fix crsf datatype for config page,1,[],https://github.com/DeviationTX/deviation/pull/1013,https://github.com/howels,2,https://github.com/DeviationTX/deviation/pull/1013#issuecomment-907651579,Just a very small fix of the CRSF config page when showing int16 and uint16 data types.,Please merge when convenient - this will help users of the popular Express LRS protocol as well as Crossfire/Tracer users.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1015,2021-09-26T20:11:03Z,2021-11-08T18:46:32Z,2021-11-28T11:49:30Z,MERGED,True,4,0,1,https://github.com/MJ666,Add XM+ bind fix only for non modular targets,1,[],https://github.com/DeviationTX/deviation/pull/1015,https://github.com/MJ666,1,https://github.com/DeviationTX/deviation/pull/1015,,,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1015,2021-09-26T20:11:03Z,2021-11-08T18:46:32Z,2021-11-28T11:49:30Z,MERGED,True,4,0,1,https://github.com/MJ666,Add XM+ bind fix only for non modular targets,1,[],https://github.com/DeviationTX/deviation/pull/1015,https://github.com/howels,2,https://github.com/DeviationTX/deviation/pull/1015#issuecomment-927375045,,Note: This should fix nightly builds on flash-constrained targets.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1015,2021-09-26T20:11:03Z,2021-11-08T18:46:32Z,2021-11-28T11:49:30Z,MERGED,True,4,0,1,https://github.com/MJ666,Add XM+ bind fix only for non modular targets,1,[],https://github.com/DeviationTX/deviation/pull/1015,https://github.com/howels,3,https://github.com/DeviationTX/deviation/pull/1015#issuecomment-932805552,,Please can someone review this to get nightly builds rolling again? Perhaps @TheRealMoeder who reviewed the original breaking PR? Thanks!,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1015,2021-09-26T20:11:03Z,2021-11-08T18:46:32Z,2021-11-28T11:49:30Z,MERGED,True,4,0,1,https://github.com/MJ666,Add XM+ bind fix only for non modular targets,1,[],https://github.com/DeviationTX/deviation/pull/1015,https://github.com/howels,4,https://github.com/DeviationTX/deviation/pull/1015#issuecomment-963653952,,Thanks @goebish,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1018,2021-11-13T15:19:44Z,2022-01-08T19:44:08Z,2022-01-14T16:55:18Z,MERGED,True,22,4,2,https://github.com/phobos-,Added crsf-shot,1,[],https://github.com/DeviationTX/deviation/pull/1018,https://github.com/phobos-,1,https://github.com/DeviationTX/deviation/pull/1018,"Implementation is based on opentx, tested with ExpressLRS hardware.
Before - packet rate is stuck at 250 packets per second.
After - packet rate depends on the settings and varies from 25 to 500 per second.
Tested with T8SG V2 plus, builds for T8SG V2 and T8SG V2 plus attached below.
deviation-t8sg_v2_plus-v5.0.0-f04bc27.zip
deviation-t8sg_v2-v5.0.0-f04bc27.zip","Implementation is based on opentx, tested with ExpressLRS hardware.
Before - packet rate is stuck at 250 packets per second.
After - packet rate depends on the settings and varies from 25 to 500 per second.
Tested with T8SG V2 plus, builds for T8SG V2 and T8SG V2 plus attached below.
deviation-t8sg_v2_plus-v5.0.0-f04bc27.zip
deviation-t8sg_v2-v5.0.0-f04bc27.zip",True,"{'THUMBS_UP': ['https://github.com/howels', 'https://github.com/StonedDawg', 'https://github.com/harlock00999']}"
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1018,2021-11-13T15:19:44Z,2022-01-08T19:44:08Z,2022-01-14T16:55:18Z,MERGED,True,22,4,2,https://github.com/phobos-,Added crsf-shot,1,[],https://github.com/DeviationTX/deviation/pull/1018,https://github.com/dat-alex,2,https://github.com/DeviationTX/deviation/pull/1018#issuecomment-980783414,"Implementation is based on opentx, tested with ExpressLRS hardware.
Before - packet rate is stuck at 250 packets per second.
After - packet rate depends on the settings and varies from 25 to 500 per second.
Tested with T8SG V2 plus, builds for T8SG V2 and T8SG V2 plus attached below.
deviation-t8sg_v2_plus-v5.0.0-f04bc27.zip
deviation-t8sg_v2-v5.0.0-f04bc27.zip","Thanks howels for the link ;)
@phobos I tried this with my HM elrs 2.4 trying to fly my modified mobula 6HD with new elrs 2.4 aio FC with no success!!
The fw on TX is elrs1.1 and I get blank line in CRSF menu on my T8SG plus. I have tried everything ,any help ?
Thank you
Alex",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1018,2021-11-13T15:19:44Z,2022-01-08T19:44:08Z,2022-01-14T16:55:18Z,MERGED,True,22,4,2,https://github.com/phobos-,Added crsf-shot,1,[],https://github.com/DeviationTX/deviation/pull/1018,https://github.com/howels,3,https://github.com/DeviationTX/deviation/pull/1018#issuecomment-981665877,"Implementation is based on opentx, tested with ExpressLRS hardware.
Before - packet rate is stuck at 250 packets per second.
After - packet rate depends on the settings and varies from 25 to 500 per second.
Tested with T8SG V2 plus, builds for T8SG V2 and T8SG V2 plus attached below.
deviation-t8sg_v2_plus-v5.0.0-f04bc27.zip
deviation-t8sg_v2-v5.0.0-f04bc27.zip","Thanks howels for the link ;) @phobos I tried this with my HM elrs 2.4 trying to fly my modified mobula 6HD with new elrs 2.4 aio FC with no success!! The fw on TX is elrs1.1 and I get blank line in CRSF menu on my T8SG plus. I have tried everything ,any help ?
Thank you Alex

Have you tried the 2.0 TX firmware? This changes how the CRSF menu works. 2.0 RC3 is the latest current eLRS version.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1018,2021-11-13T15:19:44Z,2022-01-08T19:44:08Z,2022-01-14T16:55:18Z,MERGED,True,22,4,2,https://github.com/phobos-,Added crsf-shot,1,[],https://github.com/DeviationTX/deviation/pull/1018,https://github.com/dat-alex,4,https://github.com/DeviationTX/deviation/pull/1018#issuecomment-982877028,"Implementation is based on opentx, tested with ExpressLRS hardware.
Before - packet rate is stuck at 250 packets per second.
After - packet rate depends on the settings and varies from 25 to 500 per second.
Tested with T8SG V2 plus, builds for T8SG V2 and T8SG V2 plus attached below.
deviation-t8sg_v2_plus-v5.0.0-f04bc27.zip
deviation-t8sg_v2-v5.0.0-f04bc27.zip","Thanks howels for the link ;) @phobos I tried this with my HM elrs 2.4 trying to fly my modified mobula 6HD with new elrs 2.4 aio FC with no success!! The fw on TX is elrs1.1 and I get blank line in CRSF menu on my T8SG plus. I have tried everything ,any help ?
Thank you Alex

Have you tried the 2.0 TX firmware? This changes how the CRSF menu works. 2.0 RC3 is the latest current eLRS version.

I suppose I have to try2.0 RC3 with original deviation nightly builds or phobos deviation-t8sg_v2_plus-v5.0.0-f04bc27.zip above ?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1018,2021-11-13T15:19:44Z,2022-01-08T19:44:08Z,2022-01-14T16:55:18Z,MERGED,True,22,4,2,https://github.com/phobos-,Added crsf-shot,1,[],https://github.com/DeviationTX/deviation/pull/1018,https://github.com/harlock00999,5,https://github.com/DeviationTX/deviation/pull/1018#issuecomment-991883403,"Implementation is based on opentx, tested with ExpressLRS hardware.
Before - packet rate is stuck at 250 packets per second.
After - packet rate depends on the settings and varies from 25 to 500 per second.
Tested with T8SG V2 plus, builds for T8SG V2 and T8SG V2 plus attached below.
deviation-t8sg_v2_plus-v5.0.0-f04bc27.zip
deviation-t8sg_v2-v5.0.0-f04bc27.zip","Hi guys,
I just upgraded my T8SG V2 Plus with this FW ver and my HGLRC TX + HM EP2400rx with ELRS 2.0 and everything is working on the bench, menu is on place, options are selectable and drone is arming! ^__^
I'm very happy! Hope to do some flying tests asap, in the meantime thank you all and happy flying !!!",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1018,2021-11-13T15:19:44Z,2022-01-08T19:44:08Z,2022-01-14T16:55:18Z,MERGED,True,22,4,2,https://github.com/phobos-,Added crsf-shot,1,[],https://github.com/DeviationTX/deviation/pull/1018,https://github.com/harlock00999,6,https://github.com/DeviationTX/deviation/pull/1018#issuecomment-991883551,"Implementation is based on opentx, tested with ExpressLRS hardware.
Before - packet rate is stuck at 250 packets per second.
After - packet rate depends on the settings and varies from 25 to 500 per second.
Tested with T8SG V2 plus, builds for T8SG V2 and T8SG V2 plus attached below.
deviation-t8sg_v2_plus-v5.0.0-f04bc27.zip
deviation-t8sg_v2-v5.0.0-f04bc27.zip",Almost forgot : thanks to @StonedDawg for the link!!!,True,{'THUMBS_UP': ['https://github.com/StonedDawg']}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1018,2021-11-13T15:19:44Z,2022-01-08T19:44:08Z,2022-01-14T16:55:18Z,MERGED,True,22,4,2,https://github.com/phobos-,Added crsf-shot,1,[],https://github.com/DeviationTX/deviation/pull/1018,https://github.com/dat-alex,7,https://github.com/DeviationTX/deviation/pull/1018#issuecomment-991912384,"Implementation is based on opentx, tested with ExpressLRS hardware.
Before - packet rate is stuck at 250 packets per second.
After - packet rate depends on the settings and varies from 25 to 500 per second.
Tested with T8SG V2 plus, builds for T8SG V2 and T8SG V2 plus attached below.
deviation-t8sg_v2_plus-v5.0.0-f04bc27.zip
deviation-t8sg_v2-v5.0.0-f04bc27.zip","Hi! after I tried every single combination on my Jumper T8SG V3 plus the  combination that did the trick was new ELRC 2.0 RC3 on Tx and original deviation fw (nightly build) deviation-t8sg_v2_plus-v5.0.0-c84450e on Jumper.
This involved in installing new 2,0 fw on my Happymodel Aio 24ELRS FC ,too but everything is working smooth now.
Now I have ELRS on my  HM 65HD whoop!
Thank you all for your help.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1018,2021-11-13T15:19:44Z,2022-01-08T19:44:08Z,2022-01-14T16:55:18Z,MERGED,True,22,4,2,https://github.com/phobos-,Added crsf-shot,1,[],https://github.com/DeviationTX/deviation/pull/1018,https://github.com/phobos-,8,https://github.com/DeviationTX/deviation/pull/1018#issuecomment-1004810487,"Implementation is based on opentx, tested with ExpressLRS hardware.
Before - packet rate is stuck at 250 packets per second.
After - packet rate depends on the settings and varies from 25 to 500 per second.
Tested with T8SG V2 plus, builds for T8SG V2 and T8SG V2 plus attached below.
deviation-t8sg_v2_plus-v5.0.0-f04bc27.zip
deviation-t8sg_v2-v5.0.0-f04bc27.zip","@goebish @vladislavy @TheRealMoeder @hexfet this PR has been tested by me (and others) for over two months now, no issues found and the code is pretty simple. It will benefit Crossfire as well as ExpressLRS users. Any chance you could take a look and review this PR so that we can hopefully merge it? 😇",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1018,2021-11-13T15:19:44Z,2022-01-08T19:44:08Z,2022-01-14T16:55:18Z,MERGED,True,22,4,2,https://github.com/phobos-,Added crsf-shot,1,[],https://github.com/DeviationTX/deviation/pull/1018,https://github.com/harlock00999,9,https://github.com/DeviationTX/deviation/pull/1018#issuecomment-1005498960,"Implementation is based on opentx, tested with ExpressLRS hardware.
Before - packet rate is stuck at 250 packets per second.
After - packet rate depends on the settings and varies from 25 to 500 per second.
Tested with T8SG V2 plus, builds for T8SG V2 and T8SG V2 plus attached below.
deviation-t8sg_v2_plus-v5.0.0-f04bc27.zip
deviation-t8sg_v2-v5.0.0-f04bc27.zip","I'm not sure if this can help but I noticed a strange behavior trying the model match function.
Did anyone test this particular option on T8SG v2  Plus?!",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1018,2021-11-13T15:19:44Z,2022-01-08T19:44:08Z,2022-01-14T16:55:18Z,MERGED,True,22,4,2,https://github.com/phobos-,Added crsf-shot,1,[],https://github.com/DeviationTX/deviation/pull/1018,https://github.com/phobos-,10,https://github.com/DeviationTX/deviation/pull/1018#issuecomment-1005992220,"Implementation is based on opentx, tested with ExpressLRS hardware.
Before - packet rate is stuck at 250 packets per second.
After - packet rate depends on the settings and varies from 25 to 500 per second.
Tested with T8SG V2 plus, builds for T8SG V2 and T8SG V2 plus attached below.
deviation-t8sg_v2_plus-v5.0.0-f04bc27.zip
deviation-t8sg_v2-v5.0.0-f04bc27.zip","@harlock00999 unfortunately model match is not something that deviationTX supports, nor is it a part of this pull request. From my experience if you enable model match feature in ExpressLRS you'll get an ID of 0. If you disable it it will go back to 255 which is OFF.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1018,2021-11-13T15:19:44Z,2022-01-08T19:44:08Z,2022-01-14T16:55:18Z,MERGED,True,22,4,2,https://github.com/phobos-,Added crsf-shot,1,[],https://github.com/DeviationTX/deviation/pull/1018,https://github.com/harlock00999,11,https://github.com/DeviationTX/deviation/pull/1018#issuecomment-1006046885,"Implementation is based on opentx, tested with ExpressLRS hardware.
Before - packet rate is stuck at 250 packets per second.
After - packet rate depends on the settings and varies from 25 to 500 per second.
Tested with T8SG V2 plus, builds for T8SG V2 and T8SG V2 plus attached below.
deviation-t8sg_v2_plus-v5.0.0-f04bc27.zip
deviation-t8sg_v2-v5.0.0-f04bc27.zip","@phobos- Didn't mean to go off topic, sorry. Thank you for your answer.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1018,2021-11-13T15:19:44Z,2022-01-08T19:44:08Z,2022-01-14T16:55:18Z,MERGED,True,22,4,2,https://github.com/phobos-,Added crsf-shot,1,[],https://github.com/DeviationTX/deviation/pull/1018,https://github.com/hexfet,12,https://github.com/DeviationTX/deviation/pull/1018#issuecomment-1006190466,"Implementation is based on opentx, tested with ExpressLRS hardware.
Before - packet rate is stuck at 250 packets per second.
After - packet rate depends on the settings and varies from 25 to 500 per second.
Tested with T8SG V2 plus, builds for T8SG V2 and T8SG V2 plus attached below.
deviation-t8sg_v2_plus-v5.0.0-f04bc27.zip
deviation-t8sg_v2-v5.0.0-f04bc27.zip","I'm curious if there's a reason the telemetry ""offset"" value is not being used to align the packet sends with the TX module?  In opentx this happens in ModuleSyncStatus::getAdjustedRefreshRate().",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1018,2021-11-13T15:19:44Z,2022-01-08T19:44:08Z,2022-01-14T16:55:18Z,MERGED,True,22,4,2,https://github.com/phobos-,Added crsf-shot,1,[],https://github.com/DeviationTX/deviation/pull/1018,https://github.com/phobos-,13,https://github.com/DeviationTX/deviation/pull/1018#issuecomment-1006387744,"Implementation is based on opentx, tested with ExpressLRS hardware.
Before - packet rate is stuck at 250 packets per second.
After - packet rate depends on the settings and varies from 25 to 500 per second.
Tested with T8SG V2 plus, builds for T8SG V2 and T8SG V2 plus attached below.
deviation-t8sg_v2_plus-v5.0.0-f04bc27.zip
deviation-t8sg_v2-v5.0.0-f04bc27.zip","@hexfet DeviationTX has it's own mechanism for sync - mixer_runtime. If I combine the two, or use offset from the module instead of DeviationTX mixer_runtime it doesn't work that well - offsets are optimized for opentx processing times, deviation is much faster. Example in ELRS codebase: https://github.com/ExpressLRS/ExpressLRS/blob/cc1273f28598164a50f4173a7353e878e2ca3b2f/src/lib/CRSF/CRSF.cpp#L343",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1018,2021-11-13T15:19:44Z,2022-01-08T19:44:08Z,2022-01-14T16:55:18Z,MERGED,True,22,4,2,https://github.com/phobos-,Added crsf-shot,1,[],https://github.com/DeviationTX/deviation/pull/1018,https://github.com/hexfet,14,https://github.com/DeviationTX/deviation/pull/1018#issuecomment-1006740130,"Implementation is based on opentx, tested with ExpressLRS hardware.
Before - packet rate is stuck at 250 packets per second.
After - packet rate depends on the settings and varies from 25 to 500 per second.
Tested with T8SG V2 plus, builds for T8SG V2 and T8SG V2 plus attached below.
deviation-t8sg_v2_plus-v5.0.0-f04bc27.zip
deviation-t8sg_v2-v5.0.0-f04bc27.zip","@phobos- The mixer_runtime adjustment ensures the most recent possible stick data is used to create the next control packet (see #532).  For protocols using internal radios where Deviation is synchronized with the receiver that's all that's needed.
When an external module is used it's the external module that's synced with the receiver, and for lowest latency the serial data sent from Deviation should arrive at the external module at the last possible moment before the module needs it for sending the next over-the-air packet to the receiver.  I believe that synchronization is the purpose of driving offset to zero.  Wish I had time to dig into ELRS to see how it's implemented there.
At the highest packet rate getting the offset to zero would shave an average of 1ms off the stick to receiver latency, so maybe not even noticeable.  Anyway it's not a reason to delay merging this PR, which is definitely a step forward.",True,{'THUMBS_UP': ['https://github.com/phobos-']}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1018,2021-11-13T15:19:44Z,2022-01-08T19:44:08Z,2022-01-14T16:55:18Z,MERGED,True,22,4,2,https://github.com/phobos-,Added crsf-shot,1,[],https://github.com/DeviationTX/deviation/pull/1018,https://github.com/howels,15,https://github.com/DeviationTX/deviation/pull/1018#issuecomment-1007392537,"Implementation is based on opentx, tested with ExpressLRS hardware.
Before - packet rate is stuck at 250 packets per second.
After - packet rate depends on the settings and varies from 25 to 500 per second.
Tested with T8SG V2 plus, builds for T8SG V2 and T8SG V2 plus attached below.
deviation-t8sg_v2_plus-v5.0.0-f04bc27.zip
deviation-t8sg_v2-v5.0.0-f04bc27.zip",Please do a merge when possible. Lots of us are flying this and it's great to see action in the deviationTX codebase.,True,{'THUMBS_UP': ['https://github.com/StonedDawg']}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1018,2021-11-13T15:19:44Z,2022-01-08T19:44:08Z,2022-01-14T16:55:18Z,MERGED,True,22,4,2,https://github.com/phobos-,Added crsf-shot,1,[],https://github.com/DeviationTX/deviation/pull/1018,https://github.com/howels,16,https://github.com/DeviationTX/deviation/pull/1018#issuecomment-1008252576,"Implementation is based on opentx, tested with ExpressLRS hardware.
Before - packet rate is stuck at 250 packets per second.
After - packet rate depends on the settings and varies from 25 to 500 per second.
Tested with T8SG V2 plus, builds for T8SG V2 and T8SG V2 plus attached below.
deviation-t8sg_v2_plus-v5.0.0-f04bc27.zip
deviation-t8sg_v2-v5.0.0-f04bc27.zip",@hexfet can you trigger a new build on Travis-ci? The last one was 7 months ago.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1018,2021-11-13T15:19:44Z,2022-01-08T19:44:08Z,2022-01-14T16:55:18Z,MERGED,True,22,4,2,https://github.com/phobos-,Added crsf-shot,1,[],https://github.com/DeviationTX/deviation/pull/1018,https://github.com/hexfet,17,https://github.com/DeviationTX/deviation/pull/1018#issuecomment-1013293053,"Implementation is based on opentx, tested with ExpressLRS hardware.
Before - packet rate is stuck at 250 packets per second.
After - packet rate depends on the settings and varies from 25 to 500 per second.
Tested with T8SG V2 plus, builds for T8SG V2 and T8SG V2 plus attached below.
deviation-t8sg_v2_plus-v5.0.0-f04bc27.zip
deviation-t8sg_v2-v5.0.0-f04bc27.zip",Travis isn't free anymore.  I've been fiddling with github actions but don't have a full solution yet.,True,{'THUMBS_UP': ['https://github.com/howels']}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1019,2022-01-08T21:07:01Z,2022-01-11T17:01:41Z,2022-02-13T17:42:19Z,MERGED,True,24,9,1,https://github.com/hexfet,Implement CRSFshot synchronization between tx and radio,1,[],https://github.com/DeviationTX/deviation/pull/1019,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/1019,"Use CRSFshot ""offset"" telemetry to synchronize packet sends with the
transmitter module.  This reduces latency by delivering data to the
transmitter in sync with when the transmitter will use it.
Prior to this change a Crossfire TX LCD shows ""CRSF V2"" for the RC
Input.  After this change the display is ""CRSFshot"".","Use CRSFshot ""offset"" telemetry to synchronize packet sends with the
transmitter module.  This reduces latency by delivering data to the
transmitter in sync with when the transmitter will use it.
Prior to this change a Crossfire TX LCD shows ""CRSF V2"" for the RC
Input.  After this change the display is ""CRSFshot"".",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1019,2022-01-08T21:07:01Z,2022-01-11T17:01:41Z,2022-02-13T17:42:19Z,MERGED,True,24,9,1,https://github.com/hexfet,Implement CRSFshot synchronization between tx and radio,1,[],https://github.com/DeviationTX/deviation/pull/1019,https://github.com/hexfet,2,https://github.com/DeviationTX/deviation/pull/1019#issuecomment-1008154516,"Use CRSFshot ""offset"" telemetry to synchronize packet sends with the
transmitter module.  This reduces latency by delivering data to the
transmitter in sync with when the transmitter will use it.
Prior to this change a Crossfire TX LCD shows ""CRSF V2"" for the RC
Input.  After this change the display is ""CRSFshot"".",@phobos- @harlock00999 please test when you have a chance,True,{'EYES': ['https://github.com/phobos-']}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1019,2022-01-08T21:07:01Z,2022-01-11T17:01:41Z,2022-02-13T17:42:19Z,MERGED,True,24,9,1,https://github.com/hexfet,Implement CRSFshot synchronization between tx and radio,1,[],https://github.com/DeviationTX/deviation/pull/1019,https://github.com/harlock00999,3,https://github.com/DeviationTX/deviation/pull/1019#issuecomment-1008379472,"Use CRSFshot ""offset"" telemetry to synchronize packet sends with the
transmitter module.  This reduces latency by delivering data to the
transmitter in sync with when the transmitter will use it.
Prior to this change a Crossfire TX LCD shows ""CRSF V2"" for the RC
Input.  After this change the display is ""CRSFshot"".","@hexfet I'll be glad to help but I'm not sure how, I'm a user, I'm not able to manage code by myself yet. If you give me a build to flash on my radio no problem. If you wanna tell how to do it, I'm here.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1019,2022-01-08T21:07:01Z,2022-01-11T17:01:41Z,2022-02-13T17:42:19Z,MERGED,True,24,9,1,https://github.com/hexfet,Implement CRSFshot synchronization between tx and radio,1,[],https://github.com/DeviationTX/deviation/pull/1019,https://github.com/hexfet,4,https://github.com/DeviationTX/deviation/pull/1019#issuecomment-1008425068,"Use CRSFshot ""offset"" telemetry to synchronize packet sends with the
transmitter module.  This reduces latency by delivering data to the
transmitter in sync with when the transmitter will use it.
Prior to this change a Crossfire TX LCD shows ""CRSF V2"" for the RC
Input.  After this change the display is ""CRSFshot"".","No worries.  I""ve uploaded a test build here.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1019,2022-01-08T21:07:01Z,2022-01-11T17:01:41Z,2022-02-13T17:42:19Z,MERGED,True,24,9,1,https://github.com/hexfet,Implement CRSFshot synchronization between tx and radio,1,[],https://github.com/DeviationTX/deviation/pull/1019,https://github.com/harlock00999,5,https://github.com/DeviationTX/deviation/pull/1019#issuecomment-1008571362,"Use CRSFshot ""offset"" telemetry to synchronize packet sends with the
transmitter module.  This reduces latency by delivering data to the
transmitter in sync with when the transmitter will use it.
Prior to this change a Crossfire TX LCD shows ""CRSF V2"" for the RC
Input.  After this change the display is ""CRSFshot"".","Great, Thanks! I'm going to test it asap! I'll keep you posted.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1019,2022-01-08T21:07:01Z,2022-01-11T17:01:41Z,2022-02-13T17:42:19Z,MERGED,True,24,9,1,https://github.com/hexfet,Implement CRSFshot synchronization between tx and radio,1,[],https://github.com/DeviationTX/deviation/pull/1019,https://github.com/harlock00999,6,https://github.com/DeviationTX/deviation/pull/1019#issuecomment-1008641864,"Use CRSFshot ""offset"" telemetry to synchronize packet sends with the
transmitter module.  This reduces latency by delivering data to the
transmitter in sync with when the transmitter will use it.
Prior to this change a Crossfire TX LCD shows ""CRSF V2"" for the RC
Input.  After this change the display is ""CRSFshot"".","Sorry to bother you again but before flashing the test build I was checking the menus and I cannot fine the ""CRSF V2"" anywhere. I pretty sure I cheched every spot. I'm currently using the f04bc27.
I'm going to flash anyway and see if something change. Any tips will be appreciated.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1019,2022-01-08T21:07:01Z,2022-01-11T17:01:41Z,2022-02-13T17:42:19Z,MERGED,True,24,9,1,https://github.com/hexfet,Implement CRSFshot synchronization between tx and radio,1,[],https://github.com/DeviationTX/deviation/pull/1019,https://github.com/hexfet,7,https://github.com/DeviationTX/deviation/pull/1019#issuecomment-1009278725,"Use CRSFshot ""offset"" telemetry to synchronize packet sends with the
transmitter module.  This reduces latency by delivering data to the
transmitter in sync with when the transmitter will use it.
Prior to this change a Crossfire TX LCD shows ""CRSF V2"" for the RC
Input.  After this change the display is ""CRSFshot"".","It's just ""CRSF"" name in Deviation.  It has been version V2.  With #1018 and this PR the CRSFshot features are supported, but there's no new protocol to select.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1019,2022-01-08T21:07:01Z,2022-01-11T17:01:41Z,2022-02-13T17:42:19Z,MERGED,True,24,9,1,https://github.com/hexfet,Implement CRSFshot synchronization between tx and radio,1,[],https://github.com/DeviationTX/deviation/pull/1019,https://github.com/harlock00999,8,https://github.com/DeviationTX/deviation/pull/1019#issuecomment-1009314253,"Use CRSFshot ""offset"" telemetry to synchronize packet sends with the
transmitter module.  This reduces latency by delivering data to the
transmitter in sync with when the transmitter will use it.
Prior to this change a Crossfire TX LCD shows ""CRSF V2"" for the RC
Input.  After this change the display is ""CRSFshot"".","Got it! Thank you.
Today I flashed the build and did some bench test. Tomorrow I will fly.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1019,2022-01-08T21:07:01Z,2022-01-11T17:01:41Z,2022-02-13T17:42:19Z,MERGED,True,24,9,1,https://github.com/hexfet,Implement CRSFshot synchronization between tx and radio,1,[],https://github.com/DeviationTX/deviation/pull/1019,https://github.com/phobos-,9,https://github.com/DeviationTX/deviation/pull/1019#issuecomment-1009317837,"Use CRSFshot ""offset"" telemetry to synchronize packet sends with the
transmitter module.  This reduces latency by delivering data to the
transmitter in sync with when the transmitter will use it.
Prior to this change a Crossfire TX LCD shows ""CRSF V2"" for the RC
Input.  After this change the display is ""CRSFshot"".","@hexfet I tested with your test build - for me sync worked perfectly, but I stopped receiving telemetry sensors - attitude and battery. I then built my own firmware from this branch and it worked perfectly and I still got the telemetry sensors.
deviation-t8sg_v2_plus-v5.0.0-c5c85e5.zip
deviation-t8sg_v2-v5.0.0-c5c85e5.zip",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1019,2022-01-08T21:07:01Z,2022-01-11T17:01:41Z,2022-02-13T17:42:19Z,MERGED,True,24,9,1,https://github.com/hexfet,Implement CRSFshot synchronization between tx and radio,1,[],https://github.com/DeviationTX/deviation/pull/1019,https://github.com/hexfet,10,https://github.com/DeviationTX/deviation/pull/1019#issuecomment-1009475337,"Use CRSFshot ""offset"" telemetry to synchronize packet sends with the
transmitter module.  This reduces latency by delivering data to the
transmitter in sync with when the transmitter will use it.
Prior to this change a Crossfire TX LCD shows ""CRSF V2"" for the RC
Input.  After this change the display is ""CRSFshot"".","@phobos- Thanks!  The test build also includes the changes from #1020 , though none of those changes should break telemetry.  Would you please build that branch and see if it breaks telemetry also?",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1019,2022-01-08T21:07:01Z,2022-01-11T17:01:41Z,2022-02-13T17:42:19Z,MERGED,True,24,9,1,https://github.com/hexfet,Implement CRSFshot synchronization between tx and radio,1,[],https://github.com/DeviationTX/deviation/pull/1019,https://github.com/harlock00999,11,https://github.com/DeviationTX/deviation/pull/1019#issuecomment-1009692643,"Use CRSFshot ""offset"" telemetry to synchronize packet sends with the
transmitter module.  This reduces latency by delivering data to the
transmitter in sync with when the transmitter will use it.
Prior to this change a Crossfire TX LCD shows ""CRSF V2"" for the RC
Input.  After this change the display is ""CRSFshot"".","@hexfet  I've just tested and on my t8sgv2+ with HGLRC TX2.4 module ERLS2.0 everything seems to work just fine. Telemetry monitor page on the radio is full of information, I can even see my fly mode, did know that.  Same in my OSD.
What's next? Am I good to go with this build or should I try the @phobos- 's last too?
btw, is there a legend or something for the telemtry monitor of the readio? Some values are obvious other not (for me of course^^)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1019,2022-01-08T21:07:01Z,2022-01-11T17:01:41Z,2022-02-13T17:42:19Z,MERGED,True,24,9,1,https://github.com/hexfet,Implement CRSFshot synchronization between tx and radio,1,[],https://github.com/DeviationTX/deviation/pull/1019,https://github.com/phobos-,12,https://github.com/DeviationTX/deviation/pull/1019#issuecomment-1009695462,"Use CRSFshot ""offset"" telemetry to synchronize packet sends with the
transmitter module.  This reduces latency by delivering data to the
transmitter in sync with when the transmitter will use it.
Prior to this change a Crossfire TX LCD shows ""CRSF V2"" for the RC
Input.  After this change the display is ""CRSFshot"".",@harlock00999 if it's working for you then no need to flash my build. Missing telemetry is most likely caused by some configuration error at my end.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1019,2022-01-08T21:07:01Z,2022-01-11T17:01:41Z,2022-02-13T17:42:19Z,MERGED,True,24,9,1,https://github.com/hexfet,Implement CRSFshot synchronization between tx and radio,1,[],https://github.com/DeviationTX/deviation/pull/1019,https://github.com/harlock00999,13,https://github.com/DeviationTX/deviation/pull/1019#issuecomment-1009715759,"Use CRSFshot ""offset"" telemetry to synchronize packet sends with the
transmitter module.  This reduces latency by delivering data to the
transmitter in sync with when the transmitter will use it.
Prior to this change a Crossfire TX LCD shows ""CRSF V2"" for the RC
Input.  After this change the display is ""CRSFshot"".","Perfect! Thanks.
The one thing I noticed though is the delay if I change fly mode: from the activation of the switch to the refresh of the telemery monitor on the radio about 5sec.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1019,2022-01-08T21:07:01Z,2022-01-11T17:01:41Z,2022-02-13T17:42:19Z,MERGED,True,24,9,1,https://github.com/hexfet,Implement CRSFshot synchronization between tx and radio,1,[],https://github.com/DeviationTX/deviation/pull/1019,https://github.com/hexfet,14,https://github.com/DeviationTX/deviation/pull/1019#issuecomment-1010170151,"Use CRSFshot ""offset"" telemetry to synchronize packet sends with the
transmitter module.  This reduces latency by delivering data to the
transmitter in sync with when the transmitter will use it.
Prior to this change a Crossfire TX LCD shows ""CRSF V2"" for the RC
Input.  After this change the display is ""CRSFshot"".","btw, is there a legend or something for the telemtry monitor of the readio? Some values are obvious other not (for me of course^^)

@harlock00999 Section 10.52 of the user manual has a table showing what telemetry values are in each box.  What the values mean should be in the module documentation :)
Thanks for testing!",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1019,2022-01-08T21:07:01Z,2022-01-11T17:01:41Z,2022-02-13T17:42:19Z,MERGED,True,24,9,1,https://github.com/hexfet,Implement CRSFshot synchronization between tx and radio,1,[],https://github.com/DeviationTX/deviation/pull/1019,https://github.com/harlock00999,15,https://github.com/DeviationTX/deviation/pull/1019#issuecomment-1010182864,"Use CRSFshot ""offset"" telemetry to synchronize packet sends with the
transmitter module.  This reduces latency by delivering data to the
transmitter in sync with when the transmitter will use it.
Prior to this change a Crossfire TX LCD shows ""CRSF V2"" for the RC
Input.  After this change the display is ""CRSFshot"".","No problem, count on me for future testing!!
Thank you for you tips and your patience, user manual should always be the first thing to check :)",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1020,2022-01-09T19:21:05Z,2022-01-18T14:52:30Z,2022-02-13T17:41:35Z,MERGED,True,86,60,9,https://github.com/hexfet,Fix incorrect handling of long names,11,[],https://github.com/DeviationTX/deviation/pull/1020,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/1020,"Names of max length (16 including nul) or greater caused incorrect calculation of location of next parameter in receiver buffer.
Fixes issue in serial sending code where link was switched from tx to rx before last byte finished sending.
Fixes updating CRSF config page device list when new info message received from new device.","Names of max length (16 including nul) or greater caused incorrect calculation of location of next parameter in receiver buffer.
Fixes issue in serial sending code where link was switched from tx to rx before last byte finished sending.
Fixes updating CRSF config page device list when new info message received from new device.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1020,2022-01-09T19:21:05Z,2022-01-18T14:52:30Z,2022-02-13T17:41:35Z,MERGED,True,86,60,9,https://github.com/hexfet,Fix incorrect handling of long names,11,[],https://github.com/DeviationTX/deviation/pull/1020,https://github.com/howels,2,https://github.com/DeviationTX/deviation/pull/1020#issuecomment-1010996691,"Names of max length (16 including nul) or greater caused incorrect calculation of location of next parameter in receiver buffer.
Fixes issue in serial sending code where link was switched from tx to rx before last byte finished sending.
Fixes updating CRSF config page device list when new info message received from new device.","Unfortunately this makes no difference. Device names longer than 14 characters are still shown as blank lines, same as 2b63b49 - your last PR for mixer-sync / CRSFshot (many thanks for that!)
Without RX connected:

With RX:

With RX and shorter name

The full name of this TX is ""BETAFPV 2G4Micro""",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1020,2022-01-09T19:21:05Z,2022-01-18T14:52:30Z,2022-02-13T17:41:35Z,MERGED,True,86,60,9,https://github.com/hexfet,Fix incorrect handling of long names,11,[],https://github.com/DeviationTX/deviation/pull/1020,https://github.com/hexfet,3,https://github.com/DeviationTX/deviation/pull/1020#issuecomment-1011078247,"Names of max length (16 including nul) or greater caused incorrect calculation of location of next parameter in receiver buffer.
Fixes issue in serial sending code where link was switched from tx to rx before last byte finished sending.
Fixes updating CRSF config page device list when new info message received from new device.","Thanks for the testing.  Since I don't have an ELRS module I simulate the expected message from the module with the longer name, and it does display and work correctly.  That suggests something is different about the message coming from ELRS.  Do you have the ability to capture the serial data coming from the ELRS module to Deviation?  That would be very helpful.   I'll also take a look at the ELRS code to see if I can spot anything.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1020,2022-01-09T19:21:05Z,2022-01-18T14:52:30Z,2022-02-13T17:41:35Z,MERGED,True,86,60,9,https://github.com/hexfet,Fix incorrect handling of long names,11,[],https://github.com/DeviationTX/deviation/pull/1020,https://github.com/howels,4,https://github.com/DeviationTX/deviation/pull/1020#issuecomment-1011159791,"Names of max length (16 including nul) or greater caused incorrect calculation of location of next parameter in receiver buffer.
Fixes issue in serial sending code where link was switched from tx to rx before last byte finished sending.
Fixes updating CRSF config page device list when new info message received from new device.",Can you post your T8SGv2-plus build please? I am building 75cd90e but having no luck for some reason.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1020,2022-01-09T19:21:05Z,2022-01-18T14:52:30Z,2022-02-13T17:41:35Z,MERGED,True,86,60,9,https://github.com/hexfet,Fix incorrect handling of long names,11,[],https://github.com/DeviationTX/deviation/pull/1020,https://github.com/howels,5,https://github.com/DeviationTX/deviation/pull/1020#issuecomment-1011161234,"Names of max length (16 including nul) or greater caused incorrect calculation of location of next parameter in receiver buffer.
Fixes issue in serial sending code where link was switched from tx to rx before last byte finished sending.
Fixes updating CRSF config page device list when new info message received from new device.",@StonedDawg is there any way to dump the menu data via serial debug from the eLRS TX?,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1020,2022-01-09T19:21:05Z,2022-01-18T14:52:30Z,2022-02-13T17:41:35Z,MERGED,True,86,60,9,https://github.com/hexfet,Fix incorrect handling of long names,11,[],https://github.com/DeviationTX/deviation/pull/1020,https://github.com/hexfet,6,https://github.com/DeviationTX/deviation/pull/1020#issuecomment-1011375431,"Names of max length (16 including nul) or greater caused incorrect calculation of location of next parameter in receiver buffer.
Fixes issue in serial sending code where link was switched from tx to rx before last byte finished sending.
Fixes updating CRSF config page device list when new info message received from new device.","@howels Here's a build that also includes the crsfshot-sync change.
deviation-t8sg_v2_plus-v5.0.0-75cd90e.zip
ps: I don't see anything different about the ELRS message format in the ELRS code.  Looks like it should be handled fine with the change in this branch.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1020,2022-01-09T19:21:05Z,2022-01-18T14:52:30Z,2022-02-13T17:41:35Z,MERGED,True,86,60,9,https://github.com/hexfet,Fix incorrect handling of long names,11,[],https://github.com/DeviationTX/deviation/pull/1020,https://github.com/howels,7,https://github.com/DeviationTX/deviation/pull/1020#issuecomment-1011977158,"Names of max length (16 including nul) or greater caused incorrect calculation of location of next parameter in receiver buffer.
Fixes issue in serial sending code where link was switched from tx to rx before last byte finished sending.
Fixes updating CRSF config page device list when new info message received from new device.","I don't know what to say. I have flashed d0ca763 which you posted to the DeviationTX forums. I am building eLRS from source and uploading via the ExpressLRS-configurator tool. If I use the source as provided, I see no TX device. If I edit this line https://github.com/ExpressLRS/ExpressLRS/blob/32b5077d00be869978444b5aa30a6952ac9d3bc2/src/include/target/BETAFPV_2400_TX_MICRO.h#L2 and shorten the name by a few characters, then the TX appears.
I can see the string doca763 on boot so I know it flashed ok. I am seeing if I can get serial output but simply enabling debug won't help as that only outputs the radio link stats and not menu data.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1020,2022-01-09T19:21:05Z,2022-01-18T14:52:30Z,2022-02-13T17:41:35Z,MERGED,True,86,60,9,https://github.com/hexfet,Fix incorrect handling of long names,11,[],https://github.com/DeviationTX/deviation/pull/1020,https://github.com/mooiweertje,8,https://github.com/DeviationTX/deviation/pull/1020#issuecomment-1012028723,"Names of max length (16 including nul) or greater caused incorrect calculation of location of next parameter in receiver buffer.
Fixes issue in serial sending code where link was switched from tx to rx before last byte finished sending.
Fixes updating CRSF config page device list when new info message received from new device.",Is everybody using ExpressLRS-configurator 1.3.3?,True,{'THUMBS_UP': ['https://github.com/howels']}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1020,2022-01-09T19:21:05Z,2022-01-18T14:52:30Z,2022-02-13T17:41:35Z,MERGED,True,86,60,9,https://github.com/hexfet,Fix incorrect handling of long names,11,[],https://github.com/DeviationTX/deviation/pull/1020,https://github.com/howels,9,https://github.com/DeviationTX/deviation/pull/1020#issuecomment-1012275652,"Names of max length (16 including nul) or greater caused incorrect calculation of location of next parameter in receiver buffer.
Fixes issue in serial sending code where link was switched from tx to rx before last byte finished sending.
Fixes updating CRSF config page device list when new info message received from new device.",As pointed out by @mooiweertje this only works at <500Hz. On 500Hz the original problem persists.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1020,2022-01-09T19:21:05Z,2022-01-18T14:52:30Z,2022-02-13T17:41:35Z,MERGED,True,86,60,9,https://github.com/hexfet,Fix incorrect handling of long names,11,[],https://github.com/DeviationTX/deviation/pull/1020,https://github.com/howels,10,https://github.com/DeviationTX/deviation/pull/1020#issuecomment-1012421328,"Names of max length (16 including nul) or greater caused incorrect calculation of location of next parameter in receiver buffer.
Fixes issue in serial sending code where link was switched from tx to rx before last byte finished sending.
Fixes updating CRSF config page device list when new info message received from new device.","At 500Hz there is a small pause between bytes as stick commands are sent during the device-info transfer (cannot be chunked). OpenTX handles this pause OK, but sounds like on DeviationTX this pause is causing the transfer to fail and the data currently in the buffer is not returned.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1021,2022-01-12T20:49:52Z,2022-01-12T20:50:45Z,2022-02-13T17:42:00Z,MERGED,True,5,6,2,https://github.com/hexfet,Adjust crsf telem limits and voice scaling,3,[],https://github.com/DeviationTX/deviation/pull/1021,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/1021,"Increase CRSF voltage telemetry alarm limit to 50 volts.
Increase CRSF current telemetry alarm limit to 100 amps.
Fix voice announcement of voltage and current.  Was off by factor of 10.
Tested by mooiweertje on deviationtx.com","Increase CRSF voltage telemetry alarm limit to 50 volts.
Increase CRSF current telemetry alarm limit to 100 amps.
Fix voice announcement of voltage and current.  Was off by factor of 10.
Tested by mooiweertje on deviationtx.com",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1022,2022-01-18T15:09:33Z,2022-01-23T22:28:29Z,2022-02-13T17:40:58Z,MERGED,True,4,10,1,https://github.com/hexfet,Fix incorrect CRSF GPS latitude and longitude display,1,[],https://github.com/DeviationTX/deviation/pull/1022,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/1022,"Incorrect value was shown due to incorrect conversion.  Telemetry data is in fixed point degrees * 10,000,000.  Internal representation is seconds *1000.","Incorrect value was shown due to incorrect conversion.  Telemetry data is in fixed point degrees * 10,000,000.  Internal representation is seconds *1000.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1023,2022-01-21T18:25:59Z,2022-02-13T01:31:19Z,2022-02-13T01:51:56Z,MERGED,True,600,302,17,https://github.com/hexfet,CRSF updates for ELRS,35,[],https://github.com/DeviationTX/deviation/pull/1023,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/1023,"Add protocol ELRS. Same source code as CRSF but with serial datarate 1.87Mbps
Add CRSF model match message. Set fixed id 0-63 to use model match.
Add support for ELRS info message.  Popup dialog when Model Mismatch reported.  The ELRS info message is only requested when disarmed so as not to interfere with stick packets during flight.
Workaround for glitch when scrolling non-selectable items
Serial send and receive refactored with additional buffer layer to handle higher data rate","Add protocol ELRS. Same source code as CRSF but with serial datarate 1.87Mbps
Add CRSF model match message. Set fixed id 0-63 to use model match.
Add support for ELRS info message.  Popup dialog when Model Mismatch reported.  The ELRS info message is only requested when disarmed so as not to interfere with stick packets during flight.
Workaround for glitch when scrolling non-selectable items
Serial send and receive refactored with additional buffer layer to handle higher data rate",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1023,2022-01-21T18:25:59Z,2022-02-13T01:31:19Z,2022-02-13T01:51:56Z,MERGED,True,600,302,17,https://github.com/hexfet,CRSF updates for ELRS,35,[],https://github.com/DeviationTX/deviation/pull/1023,https://github.com/phobos-,2,https://github.com/DeviationTX/deviation/pull/1023#issuecomment-1021968881,"Add protocol ELRS. Same source code as CRSF but with serial datarate 1.87Mbps
Add CRSF model match message. Set fixed id 0-63 to use model match.
Add support for ELRS info message.  Popup dialog when Model Mismatch reported.  The ELRS info message is only requested when disarmed so as not to interfere with stick packets during flight.
Workaround for glitch when scrolling non-selectable items
Serial send and receive refactored with additional buffer layer to handle higher data rate",This is awesome work @hexfet . I am testing it and so far so good! 👍,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1023,2022-01-21T18:25:59Z,2022-02-13T01:31:19Z,2022-02-13T01:51:56Z,MERGED,True,600,302,17,https://github.com/hexfet,CRSF updates for ELRS,35,[],https://github.com/DeviationTX/deviation/pull/1023,https://github.com/hexfet,3,https://github.com/DeviationTX/deviation/pull/1023#issuecomment-1024826527,"Add protocol ELRS. Same source code as CRSF but with serial datarate 1.87Mbps
Add CRSF model match message. Set fixed id 0-63 to use model match.
Add support for ELRS info message.  Popup dialog when Model Mismatch reported.  The ELRS info message is only requested when disarmed so as not to interfere with stick packets during flight.
Workaround for glitch when scrolling non-selectable items
Serial send and receive refactored with additional buffer layer to handle higher data rate",Thanks!  Appreciate the testing @phobos- .  Just made a PR to ELRS that helps with the UART errors if you could try it.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1023,2022-01-21T18:25:59Z,2022-02-13T01:31:19Z,2022-02-13T01:51:56Z,MERGED,True,600,302,17,https://github.com/hexfet,CRSF updates for ELRS,35,[],https://github.com/DeviationTX/deviation/pull/1023,https://github.com/howels,4,https://github.com/DeviationTX/deviation/pull/1023#issuecomment-1026807153,"Add protocol ELRS. Same source code as CRSF but with serial datarate 1.87Mbps
Add CRSF model match message. Set fixed id 0-63 to use model match.
Add support for ELRS info message.  Popup dialog when Model Mismatch reported.  The ELRS info message is only requested when disarmed so as not to interfere with stick packets during flight.
Workaround for glitch when scrolling non-selectable items
Serial send and receive refactored with additional buffer layer to handle higher data rate","@hexfet is this working with the OPENTX_SYNC feature in expressLRS?
Someone mentioned that the option to disable this is being removed so deviationTX will need to work with this enabled in future.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1023,2022-01-21T18:25:59Z,2022-02-13T01:31:19Z,2022-02-13T01:51:56Z,MERGED,True,600,302,17,https://github.com/hexfet,CRSF updates for ELRS,35,[],https://github.com/DeviationTX/deviation/pull/1023,https://github.com/hexfet,5,https://github.com/DeviationTX/deviation/pull/1023#issuecomment-1026835764,"Add protocol ELRS. Same source code as CRSF but with serial datarate 1.87Mbps
Add CRSF model match message. Set fixed id 0-63 to use model match.
Add support for ELRS info message.  Popup dialog when Model Mismatch reported.  The ELRS info message is only requested when disarmed so as not to interfere with stick packets during flight.
Workaround for glitch when scrolling non-selectable items
Serial send and receive refactored with additional buffer layer to handle higher data rate","@howels Yes, PRs #1018 and #1019 brought in support for the sync packets.",True,{'THUMBS_UP': ['https://github.com/howels']}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1023,2022-01-21T18:25:59Z,2022-02-13T01:31:19Z,2022-02-13T01:51:56Z,MERGED,True,600,302,17,https://github.com/hexfet,CRSF updates for ELRS,35,[],https://github.com/DeviationTX/deviation/pull/1023,https://github.com/hexfet,6,https://github.com/DeviationTX/deviation/pull/1023#issuecomment-1037649508,"Add protocol ELRS. Same source code as CRSF but with serial datarate 1.87Mbps
Add CRSF model match message. Set fixed id 0-63 to use model match.
Add support for ELRS info message.  Popup dialog when Model Mismatch reported.  The ELRS info message is only requested when disarmed so as not to interfere with stick packets during flight.
Workaround for glitch when scrolling non-selectable items
Serial send and receive refactored with additional buffer layer to handle higher data rate",Tested by deviationtx.com user mooiweertje and myself.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1024,2022-02-19T01:07:07Z,2022-02-27T21:54:09Z,2022-02-27T21:54:18Z,MERGED,True,125,33,11,https://github.com/hexfet,Add configurable serial bitrate to CRSF protocol,13,[],https://github.com/DeviationTX/deviation/pull/1024,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/1024,"When clicking on the CRSF protocol name the current model name will appear at the bottom of the device list. Clicking on the model name allows the bit rate to be set. I chose to display the model name to emphasize the bit rate is stored separately for each model.
The available bitrates are 400K, 1.87M, and 2.25M. The ELRS PR #1435 is needed to run 2.25M, or just add 2.25M to the baudrates array in the ELRS code. This is the fastest I could get the serial link to run.
The ELRS protocol is no longer needed and is removed.  Model files saved with ELRS will be loaded with None as protocol.  Use CRSF and set the bitrate to 1.87M or 2.25M depending on what ELRS supports.","When clicking on the CRSF protocol name the current model name will appear at the bottom of the device list. Clicking on the model name allows the bit rate to be set. I chose to display the model name to emphasize the bit rate is stored separately for each model.
The available bitrates are 400K, 1.87M, and 2.25M. The ELRS PR #1435 is needed to run 2.25M, or just add 2.25M to the baudrates array in the ELRS code. This is the fastest I could get the serial link to run.
The ELRS protocol is no longer needed and is removed.  Model files saved with ELRS will be loaded with None as protocol.  Use CRSF and set the bitrate to 1.87M or 2.25M depending on what ELRS supports.",True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1024,2022-02-19T01:07:07Z,2022-02-27T21:54:09Z,2022-02-27T21:54:18Z,MERGED,True,125,33,11,https://github.com/hexfet,Add configurable serial bitrate to CRSF protocol,13,[],https://github.com/DeviationTX/deviation/pull/1024,https://github.com/hexfet,2,https://github.com/DeviationTX/deviation/pull/1024#issuecomment-1053694264,"When clicking on the CRSF protocol name the current model name will appear at the bottom of the device list. Clicking on the model name allows the bit rate to be set. I chose to display the model name to emphasize the bit rate is stored separately for each model.
The available bitrates are 400K, 1.87M, and 2.25M. The ELRS PR #1435 is needed to run 2.25M, or just add 2.25M to the baudrates array in the ELRS code. This is the fastest I could get the serial link to run.
The ELRS protocol is no longer needed and is removed.  Model files saved with ELRS will be loaded with None as protocol.  Use CRSF and set the bitrate to 1.87M or 2.25M depending on what ELRS supports.",Several users have reported this change works well.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1026,2022-02-27T22:42:41Z,2022-02-27T22:42:55Z,2022-02-27T22:42:55Z,MERGED,True,1,1,1,https://github.com/hexfet,Limit range of fixed id in CRSF protocol,1,[],https://github.com/DeviationTX/deviation/pull/1026,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/1026,Sends model id of 0 to ELRS if the Deviation Fixed ID is greater than 63.   When sending a model id to the TX it should always be in the range 0-63.,Sends model id of 0 to ELRS if the Deviation Fixed ID is greater than 63.   When sending a model id to the TX it should always be in the range 0-63.,True,{}
DeviationTX/deviation,https://github.com/DeviationTX/deviation,1027,2022-03-09T04:26:51Z,2022-04-03T18:34:01Z,2022-04-03T18:34:31Z,MERGED,True,75,19,12,https://github.com/hexfet,Limit Fixed ID for CRSF.  UI improvements.,10,[],https://github.com/DeviationTX/deviation/pull/1027,https://github.com/hexfet,1,https://github.com/DeviationTX/deviation/pull/1027,The CRSF protocol supports model id's (aka receiver numbers) from 0-63.  Limit CRSF models to this range by limiting the max value in the Fixed ID setting to 63 for CRSF.,The CRSF protocol supports model id's (aka receiver numbers) from 0-63.  Limit CRSF models to this range by limiting the max value in the Fixed ID setting to 63 for CRSF.,True,{'THUMBS_UP': ['https://github.com/gretel']}
