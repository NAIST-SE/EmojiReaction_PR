getdnsapi/getdns,https://github.com/getdnsapi/getdns,144,2016-03-09T14:44:02Z,2016-03-15T04:02:57Z,2016-03-16T13:03:59Z,MERGED,True,1363,2390,32,https://github.com/wtoorop,Devel/default eventloop,24,[],https://github.com/getdnsapi/getdns/pull/144,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/144,"The default event loop, including using unbound event API and working on windows.","The default event loop, including using unbound event API and working on windows.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,145,2016-03-14T09:45:37Z,2016-03-15T04:04:52Z,2016-03-16T12:55:29Z,MERGED,True,710,135,10,https://github.com/wtoorop,Features/wire2reply,3,[],https://github.com/getdnsapi/getdns/pull/145,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/145,"Conversion function for complete DNS messages:

to and from wireformat
to string
This enabled removing the ldns dependency of the unit tests too","Conversion function for complete DNS messages:

to and from wireformat
to string
This enabled removing the ldns dependency of the unit tests too",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,146,2016-03-14T10:36:10Z,2016-03-15T04:06:07Z,2016-03-16T12:55:21Z,MERGED,True,1412,2394,32,https://github.com/wtoorop,Devel/direct root servers,25,[],https://github.com/getdnsapi/getdns/pull/146,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/146,"Set root servers without using a auxiliary temporary file.
Utilises the new libunbound ub_ctx_set_stub() function
This pull request itself dependent on de devel/default_eventloop pull request (#144),
to avoid having to deal with conflicts in configure.ac otherwise
(i.e. both pull requests test for functions in libunbound)","Set root servers without using a auxiliary temporary file.
Utilises the new libunbound ub_ctx_set_stub() function
This pull request itself dependent on de devel/default_eventloop pull request (#144),
to avoid having to deal with conflicts in configure.ac otherwise
(i.e. both pull requests test for functions in libunbound)",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,147,2016-03-14T11:03:16Z,2016-03-15T04:08:11Z,2016-03-16T12:55:18Z,MERGED,True,16,2,2,https://github.com/wtoorop,Write unit test log's to separate log files,1,[],https://github.com/getdnsapi/getdns/pull/147,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/147,One for each tested event loop,One for each tested event loop,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,148,2016-03-14T11:30:23Z,2016-03-15T04:09:08Z,2016-03-16T12:55:14Z,MERGED,True,15,4,5,https://github.com/wtoorop,A dnssec_return_all_statuses extension,1,[],https://github.com/getdnsapi/getdns/pull/148,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/148,"that returns all all dnssec replies regardless their status.
When used on its own or in combination with just dnssec_return_status,
it will return BOGUS replies, but those replies will have ""dnssec_status"": GETDNS_DNSSEC_BOGUS
The response dict ""status"" will be GETDNS_RESPSTATUS_GOOD then.
When used on in combination with dnssec_return_only_secure,
it will return BOGUS and INSECURE replies (reflected in their ""dnssec_status"")
The response dict ""status"" can be any of the status that the dnssec_return_only_secure extenstion returns,
so either GETDNS_RESPSTATUS_GOOD when at least one reply was secure,
GETDNS_RESPSTATUS_NO_SECURE_ANSWERS when all replies were insecure,
or GETDNS_RESPSTATUS_ALL_BOGUS_ANSWERS when all replies were bogus.","that returns all all dnssec replies regardless their status.
When used on its own or in combination with just dnssec_return_status,
it will return BOGUS replies, but those replies will have ""dnssec_status"": GETDNS_DNSSEC_BOGUS
The response dict ""status"" will be GETDNS_RESPSTATUS_GOOD then.
When used on in combination with dnssec_return_only_secure,
it will return BOGUS and INSECURE replies (reflected in their ""dnssec_status"")
The response dict ""status"" can be any of the status that the dnssec_return_only_secure extenstion returns,
so either GETDNS_RESPSTATUS_GOOD when at least one reply was secure,
GETDNS_RESPSTATUS_NO_SECURE_ANSWERS when all replies were insecure,
or GETDNS_RESPSTATUS_ALL_BOGUS_ANSWERS when all replies were bogus.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,149,2016-03-18T12:05:23Z,2016-03-18T16:22:55Z,2016-03-23T13:50:54Z,MERGED,True,155,100,5,https://github.com/saradickinson,Feature/stub debug cleanup,2,[],https://github.com/getdnsapi/getdns/pull/149,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/149,Minor update to clean up the STUB_DEBUG output to make it more consistent and usable to debug problems. One caveat: I haven't tested on Windows.,Minor update to clean up the STUB_DEBUG output to make it more consistent and usable to debug problems. One caveat: I haven't tested on Windows.,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,150,2016-03-21T02:56:03Z,2016-03-21T08:53:55Z,2016-03-21T08:53:55Z,MERGED,True,18,5,1,https://github.com/gmadkat,Update README.md,1,[],https://github.com/getdnsapi/getdns/pull/150,https://github.com/gmadkat,1,https://github.com/getdnsapi/getdns/pull/150,Add more detailed build directions for Windows and mingw,Add more detailed build directions for Windows and mingw,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,151,2016-03-22T04:12:48Z,2016-03-22T12:17:29Z,2016-03-22T12:17:29Z,MERGED,True,93,25,1,https://github.com/gmadkat,Added search suffix for Windows from registry,1,[],https://github.com/getdnsapi/getdns/pull/151,https://github.com/gmadkat,1,https://github.com/getdnsapi/getdns/pull/151,Please review and merge if approved.,Please review and merge if approved.,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,152,2016-03-22T12:25:15Z,2016-03-23T04:42:57Z,2016-04-15T13:22:06Z,MERGED,True,776,426,29,https://github.com/wtoorop,Devel/codebase maintenance,27,[],https://github.com/getdnsapi/getdns/pull/152,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/152,General codebase maintenance,General codebase maintenance,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,153,2016-03-23T10:49:40Z,2016-03-23T15:11:19Z,2016-04-15T13:22:01Z,MERGED,True,56,8,5,https://github.com/wtoorop,getdns_context_set_follow_redirects(),1,[],https://github.com/getdnsapi/getdns/pull/153,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/153,"Last/final API call implementation.
We're now 100% spec complete","Last/final API call implementation.
We're now 100% spec complete",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,154,2016-03-23T21:16:17Z,2016-03-24T18:53:05Z,2016-04-15T13:24:14Z,MERGED,True,168,46,5,https://github.com/wtoorop,No more side effects with synchronous calls,1,[],https://github.com/getdnsapi/getdns/pull/154,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/154,"No more side effects with synchronous calls when using upstreams that keep connections open.
This will eliminate all side effects with synchronous calls when linked against libunbound newer than 1.5.8 (which has the unbound event API available).","No more side effects with synchronous calls when using upstreams that keep connections open.
This will eliminate all side effects with synchronous calls when linked against libunbound newer than 1.5.8 (which has the unbound event API available).",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,155,2016-03-24T13:46:41Z,2016-03-24T18:03:15Z,2016-04-15T13:21:46Z,MERGED,True,719,82,16,https://github.com/wtoorop,Devel/codebase maintenance2,3,[],https://github.com/getdnsapi/getdns/pull/155,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/155,Another set of minor codebase maintenance things,Another set of minor codebase maintenance things,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,156,2016-03-24T13:48:52Z,2016-03-24T18:52:36Z,2016-04-15T13:21:48Z,MERGED,True,17,4,7,https://github.com/wtoorop,Devel/std suffix handling,2,[],https://github.com/getdnsapi/getdns/pull/156,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/156,"This is introducing GETDNS_APPEND_NAME_TO_SINGLE_LABEL_FIRST without changing the spec.
I'll update when we have consensus on the spec list.","This is introducing GETDNS_APPEND_NAME_TO_SINGLE_LABEL_FIRST without changing the spec.
I'll update when we have consensus on the spec list.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,157,2016-03-28T05:42:08Z,2016-03-29T14:13:04Z,2016-03-29T14:13:05Z,MERGED,True,24,9,1,https://github.com/gmadkat,Added code to read the domain from the registry and use it if search …,1,[],https://github.com/getdnsapi/getdns/pull/157,https://github.com/gmadkat,1,https://github.com/getdnsapi/getdns/pull/157,"…suffixes are missing
I check the registry key: HLKM\System\CurrentControlSet\Control\Services\tcpIp\Parameters\Domain and if that exists, add it to the suffix list.
If there is no search list then the domain is the search suffix. The domain is ignored if there is a search list.","…suffixes are missing
I check the registry key: HLKM\System\CurrentControlSet\Control\Services\tcpIp\Parameters\Domain and if that exists, add it to the suffix list.
If there is no search list then the domain is the search suffix. The domain is ignored if there is a search list.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,158,2016-04-02T14:48:47Z,2016-04-02T15:47:58Z,2016-04-02T15:47:58Z,MERGED,True,1,1,1,https://github.com/shane-kerr,Update README.md,1,[],https://github.com/getdnsapi/getdns/pull/158,https://github.com/shane-kerr,1,https://github.com/getdnsapi/getdns/pull/158,Reversed order of one flag to remove dependency in documentation.,Reversed order of one flag to remove dependency in documentation.,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,159,2016-04-02T18:46:01Z,2016-04-02T19:49:02Z,2016-04-02T19:49:02Z,MERGED,True,18,0,1,https://github.com/shane-kerr,"Modified version of the ""run-all.sh"" which collects coverage information and produces a report.",1,[],https://github.com/getdnsapi/getdns/pull/159,https://github.com/shane-kerr,1,https://github.com/getdnsapi/getdns/pull/159,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,161,2016-04-05T18:55:52Z,2016-04-06T00:06:29Z,2016-04-06T00:06:29Z,MERGED,True,7,2,2,https://github.com/wtoorop,minor openssl 1.1.0 bugfix,2,[],https://github.com/getdnsapi/getdns/pull/161,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/161,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,162,2016-04-07T19:25:41Z,2016-04-08T13:26:45Z,2016-04-08T13:29:15Z,MERGED,True,20,3,4,https://github.com/pusateri,Add a pkg-config file for the getdns_ext_event library.,1,[],https://github.com/getdnsapi/getdns/pull/162,https://github.com/pusateri,1,https://github.com/getdnsapi/getdns/pull/162,"This can be used in an application configure.ac file as follows:
PKG_CHECK_MODULES([GETDNS], [getdns getdns_ext_event])","This can be used in an application configure.ac file as follows:
PKG_CHECK_MODULES([GETDNS], [getdns getdns_ext_event])",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,162,2016-04-07T19:25:41Z,2016-04-08T13:26:45Z,2016-04-08T13:29:15Z,MERGED,True,20,3,4,https://github.com/pusateri,Add a pkg-config file for the getdns_ext_event library.,1,[],https://github.com/getdnsapi/getdns/pull/162,https://github.com/wtoorop,2,https://github.com/getdnsapi/getdns/pull/162#issuecomment-207431869,"This can be used in an application configure.ac file as follows:
PKG_CHECK_MODULES([GETDNS], [getdns getdns_ext_event])",Thank you Tom.  I guess we need this for the getdns_ext_ev and getdns_ext_uv modules too...,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,162,2016-04-07T19:25:41Z,2016-04-08T13:26:45Z,2016-04-08T13:29:15Z,MERGED,True,20,3,4,https://github.com/pusateri,Add a pkg-config file for the getdns_ext_event library.,1,[],https://github.com/getdnsapi/getdns/pull/162,https://github.com/pusateri,3,https://github.com/getdnsapi/getdns/pull/162#issuecomment-207432553,"This can be used in an application configure.ac file as follows:
PKG_CHECK_MODULES([GETDNS], [getdns getdns_ext_event])","Yes, come to think of it, maybe this should be conditional on --with-libevent",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,163,2016-04-13T10:27:59Z,2016-04-14T03:56:30Z,2016-04-15T13:25:01Z,MERGED,True,98,187,5,https://github.com/wtoorop,Devel/issue 160 bugfix,3,[],https://github.com/getdnsapi/getdns/pull/163,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/163,"Channels multiple requests over the same upstream on the same event in sync mode too.
This resolves issue #160","Channels multiple requests over the same upstream on the same event in sync mode too.
This resolves issue #160",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,164,2016-04-22T12:56:45Z,2016-04-29T14:25:52Z,2016-04-29T14:26:43Z,MERGED,True,367,111,13,https://github.com/wtoorop,Features/canonical dnssec chain,8,[],https://github.com/getdnsapi/getdns/pull/164,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/164,"The validation_chain returned will be in canonical form and order.
It also contains a new extension dnssec_return_full_validation_chain that will also return the records that were validated in the same chain in canonical form and order.  The output of the dnssec_return_full_validation_chain can be used almost directly in the tls dnssec chain extension.
Note that the canonical form and order can only be returned when the records could be validated.
Besides this, this pull request also contains many bugfixes for cases were callbacks are fired while the registering/scheduling call has not finished yet.","The validation_chain returned will be in canonical form and order.
It also contains a new extension dnssec_return_full_validation_chain that will also return the records that were validated in the same chain in canonical form and order.  The output of the dnssec_return_full_validation_chain can be used almost directly in the tls dnssec chain extension.
Note that the canonical form and order can only be returned when the records could be validated.
Besides this, this pull request also contains many bugfixes for cases were callbacks are fired while the registering/scheduling call has not finished yet.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,167,2016-04-28T13:21:21Z,2016-04-28T19:06:55Z,2016-04-29T14:32:28Z,MERGED,True,523,280,25,https://github.com/wtoorop,Set header bits (and opcode) with a header extension,7,[],https://github.com/getdnsapi/getdns/pull/167,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/167,"It is actually constructed in such a way that the extension can contain a complete DNS message, so that in the future this can be used to do updated, notifies and the like.  Currently however we don't deal with the sections yet, but header bits and values can be set this way.
This resolves issue #165","It is actually constructed in such a way that the extension can contain a complete DNS message, so that in the future this can be used to do updated, notifies and the like.  Currently however we don't deal with the sections yet, but header bits and values can be set this way.
This resolves issue #165",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,168,2016-04-28T19:14:02Z,2016-04-29T14:27:10Z,2016-06-13T08:41:10Z,CLOSED,False,280,523,25,https://github.com/MelindaShore,"Revert ""Set header bits (and opcode) with a header extension""",1,[],https://github.com/getdnsapi/getdns/pull/168,https://github.com/MelindaShore,1,https://github.com/getdnsapi/getdns/pull/168,Reverts #167,Reverts #167,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,168,2016-04-28T19:14:02Z,2016-04-29T14:27:10Z,2016-06-13T08:41:10Z,CLOSED,False,280,523,25,https://github.com/MelindaShore,"Revert ""Set header bits (and opcode) with a header extension""",1,[],https://github.com/getdnsapi/getdns/pull/168,https://github.com/wtoorop,2,https://github.com/getdnsapi/getdns/pull/168#issuecomment-215734877,Reverts #167,"No need to revert, I resolved the conflicts.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,170,2016-04-29T14:34:41Z,2016-05-14T04:42:22Z,2016-06-13T08:34:04Z,MERGED,True,110,29,20,https://github.com/wtoorop,Static checking,4,[],https://github.com/getdnsapi/getdns/pull/170,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/170,Plus some 23 bug fixes that came out of the static checks already ;),Plus some 23 bug fixes that came out of the static checks already ;),True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,171,2016-05-09T12:23:14Z,2016-05-14T05:00:16Z,2016-06-13T08:38:28Z,MERGED,True,128,41,26,https://github.com/wtoorop,Devel/tpkg xtra configure params,5,[],https://github.com/getdnsapi/getdns/pull/171,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/171,"Parameters to run-all.sh and run-all-lcov.sh are passed to tpkg.  The tpkg scripts pass their arguments to configure before compile.  As a consequence alternative locations for libraries can be passed by giving -a options.  Multiple -a options can be given each specifying a single argument for the call to configure.  For example:
src/test/tpkg/run-all.sh -a --with-ssl=$HOME/local -a --with-libunbound=$HOME/local","Parameters to run-all.sh and run-all-lcov.sh are passed to tpkg.  The tpkg scripts pass their arguments to configure before compile.  As a consequence alternative locations for libraries can be passed by giving -a options.  Multiple -a options can be given each specifying a single argument for the call to configure.  For example:
src/test/tpkg/run-all.sh -a --with-ssl=$HOME/local -a --with-libunbound=$HOME/local",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,172,2016-05-16T17:01:17Z,2016-05-25T11:49:00Z,2016-06-03T17:11:43Z,MERGED,True,343,155,12,https://github.com/saradickinson,Feature/unit test updates 2,4,[],https://github.com/getdnsapi/getdns/pull/172,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/172,"Some work on testing:

re-order unit tests in check_getdns to more easily see what is included/missing
and in ...set_dns_transport test as this was actually missing!
re-work and improve unit test
make return codes in context.c more consistent
fix minor issue with keepalive error handling
minor fix to 060-symbols tpkg tests (for OS X)
minor modifications to run* files for tpkg
also added TLS session resumption, which was missing!","Some work on testing:

re-order unit tests in check_getdns to more easily see what is included/missing
and in ...set_dns_transport test as this was actually missing!
re-work and improve unit test
make return codes in context.c more consistent
fix minor issue with keepalive error handling
minor fix to 060-symbols tpkg tests (for OS X)
minor modifications to run* files for tpkg
also added TLS session resumption, which was missing!",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,176,2016-05-19T20:22:40Z,2016-05-20T04:12:42Z,2016-06-13T08:40:55Z,MERGED,True,23,9,7,https://github.com/wtoorop,Devel/bsd fixes,5,[],https://github.com/getdnsapi/getdns/pull/176,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/176,Minor tweaks to make everything work on BSDs,Minor tweaks to make everything work on BSDs,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,179,2016-06-01T12:41:05Z,2016-06-07T03:42:24Z,2016-06-13T08:40:56Z,MERGED,True,2042,257,22,https://github.com/wtoorop,A daemon mode for getdns_query,43,[],https://github.com/getdnsapi/getdns/pull/179,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/179,"getdns_query will listen and answer incoming DNS queries over UDP and TCP, when provided with addresses to listen on.  This can be done by command line option -z, or through configuration file.
The configuration file can be used to alter all context settings and is in a similar format the getdns_get_api_information returns.
Note that this has a dependency on the (adapted) jsmn json parser library, which is included through git submodules.   So don't forget to do git submodule update --init before building.","getdns_query will listen and answer incoming DNS queries over UDP and TCP, when provided with addresses to listen on.  This can be done by command line option -z, or through configuration file.
The configuration file can be used to alter all context settings and is in a similar format the getdns_get_api_information returns.
Note that this has a dependency on the (adapted) jsmn json parser library, which is included through git submodules.   So don't forget to do git submodule update --init before building.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,181,2016-06-08T10:57:39Z,2016-06-09T18:03:35Z,2016-06-13T08:38:26Z,MERGED,True,933,726,10,https://github.com/wtoorop,Features/getdns service,12,[],https://github.com/getdnsapi/getdns/pull/181,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/181,"Let getdns_service() return a RFC2782 sorted list of SRV domain_names and ports.
This is functionality that had to be in the 1.0.0b1 already, because it is part of the official API.
We overlooked it because it was in a non-obvious spot.  Resolved issue #180","Let getdns_service() return a RFC2782 sorted list of SRV domain_names and ports.
This is functionality that had to be in the 1.0.0b1 already, because it is part of the official API.
We overlooked it because it was in a non-obvious spot.  Resolved issue #180",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,182,2016-06-09T00:26:40Z,2016-06-09T13:39:17Z,2016-06-09T13:39:17Z,MERGED,True,10,6,1,https://github.com/guillemj,Use libbsd when available,1,[],https://github.com/getdnsapi/getdns/pull/182,https://github.com/guillemj,1,https://github.com/getdnsapi/getdns/pull/182,"Use the libbsd (https://libbsd.freedesktop.org/) overlay to transparently
use the bsd compatibility layer without needing any actual code changes.
Remove now unnecessary direct access to libbsd includes. And remove
checks for unused functions.","Use the libbsd (https://libbsd.freedesktop.org/) overlay to transparently
use the bsd compatibility layer without needing any actual code changes.
Remove now unnecessary direct access to libbsd includes. And remove
checks for unused functions.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,183,2016-06-09T08:54:07Z,2016-06-09T09:03:15Z,2016-06-09T09:03:15Z,MERGED,True,37,8,1,https://github.com/wtoorop,DNSSEC wildcard validation issue,1,[],https://github.com/getdnsapi/getdns/pull/183,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/183,Emergency DNSSEC fix,Emergency DNSSEC fix,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,184,2016-06-15T16:36:51Z,2016-06-16T09:07:26Z,2016-06-20T13:55:11Z,MERGED,True,25,13,2,https://github.com/saradickinson,Quick fix for TLS timeouts not re-using a connection.  Better solutio…,1,[],https://github.com/getdnsapi/getdns/pull/184,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/184,"…n is needed.
Also minor fixes in getdns_query:

spurious semicolon (caused build warning)
build warning for initialised variable
have getdns_query honour the CLASS in the incoming query","…n is needed.
Also minor fixes in getdns_query:

spurious semicolon (caused build warning)
build warning for initialised variable
have getdns_query honour the CLASS in the incoming query",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,185,2016-06-16T09:48:38Z,2016-06-17T10:32:28Z,2016-06-20T13:54:48Z,MERGED,True,29,9,4,https://github.com/saradickinson,Minor testing updates:,2,[],https://github.com/getdnsapi/getdns/pull/185,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/185,"add option to use IPv6 for manual transport tests
add recursion mode to call_reporting","add option to use IPv6 for manual transport tests
add recursion mode to call_reporting",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,185,2016-06-16T09:48:38Z,2016-06-17T10:32:28Z,2016-06-20T13:54:48Z,MERGED,True,29,9,4,https://github.com/saradickinson,Minor testing updates:,2,[],https://github.com/getdnsapi/getdns/pull/185,https://github.com/wtoorop,2,https://github.com/getdnsapi/getdns/pull/185#issuecomment-226716744,"add option to use IPv6 for manual transport tests
add recursion mode to call_reporting",Why call it resolution_mode whilst it is called resolution_type at other places in the library?,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,185,2016-06-16T09:48:38Z,2016-06-17T10:32:28Z,2016-06-20T13:54:48Z,MERGED,True,29,9,4,https://github.com/saradickinson,Minor testing updates:,2,[],https://github.com/getdnsapi/getdns/pull/185,https://github.com/saradickinson,3,https://github.com/getdnsapi/getdns/pull/185#issuecomment-226735718,"add option to use IPv6 for manual transport tests
add recursion mode to call_reporting","On 17 Jun 2016, at 09:55, wtoorop notifications@github.com wrote:
Why call it resolution_mode whilst it is called resolution_type at other places in the library?
My mistake - fixed.

Thnx
Sara.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,186,2016-06-17T15:55:41Z,2016-06-28T10:05:54Z,2016-06-30T15:43:00Z,MERGED,True,280,32,4,https://github.com/saradickinson,Initial pass at updating Doxygen modules for getdns.h. Also add info …,2,[],https://github.com/getdnsapi/getdns/pull/186,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/186,"…on using context_create multithreaded. Needs review.

this is a rough first pass at making the oxygen Modules page more consistent and user navigable
as a handy index into getdns
I think a further re-org is needed in a later update, also haven't touched getdns_extra.h yet
Added a few functions descriptions too, but still many functions without comments... a WIP
Updated man page for context_create with multi-threaded instructions as a short term fix","…on using context_create multithreaded. Needs review.

this is a rough first pass at making the oxygen Modules page more consistent and user navigable
as a handy index into getdns
I think a further re-org is needed in a later update, also haven't touched getdns_extra.h yet
Added a few functions descriptions too, but still many functions without comments... a WIP
Updated man page for context_create with multi-threaded instructions as a short term fix",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,186,2016-06-17T15:55:41Z,2016-06-28T10:05:54Z,2016-06-30T15:43:00Z,MERGED,True,280,32,4,https://github.com/saradickinson,Initial pass at updating Doxygen modules for getdns.h. Also add info …,2,[],https://github.com/getdnsapi/getdns/pull/186,https://github.com/wtoorop,2,https://github.com/getdnsapi/getdns/pull/186#issuecomment-227720982,"…on using context_create multithreaded. Needs review.

this is a rough first pass at making the oxygen Modules page more consistent and user navigable
as a handy index into getdns
I think a further re-org is needed in a later update, also haven't touched getdns_extra.h yet
Added a few functions descriptions too, but still many functions without comments... a WIP
Updated man page for context_create with multi-threaded instructions as a short term fix","Thanks for the texts.  Does the order matter for doxygen?
Current order came directly from the getdns.h generated from the spec scripts, so it was convenient for comparing the spec with our implementation.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,186,2016-06-17T15:55:41Z,2016-06-28T10:05:54Z,2016-06-30T15:43:00Z,MERGED,True,280,32,4,https://github.com/saradickinson,Initial pass at updating Doxygen modules for getdns.h. Also add info …,2,[],https://github.com/getdnsapi/getdns/pull/186,https://github.com/saradickinson,3,https://github.com/getdnsapi/getdns/pull/186#issuecomment-227727054,"…on using context_create multithreaded. Needs review.

this is a rough first pass at making the oxygen Modules page more consistent and user navigable
as a handy index into getdns
I think a further re-org is needed in a later update, also haven't touched getdns_extra.h yet
Added a few functions descriptions too, but still many functions without comments... a WIP
Updated man page for context_create with multi-threaded instructions as a short term fix","On 22 Jun 2016, at 12:54, wtoorop notifications@github.com wrote:
Thanks for the texts. Does the order matter for doxygen?
Yes, it does with how we do it at the moment (I think there might be a way to order it - I plan to investigate).
Current order came directly from the getdns.h generated from the spec scripts, so it was convenient for comparing the spec with our implementation
Ah, OK.

Have you looked at the doxygen Module output page? It was quite a muddle before, now it looks somewhat better (see below for before and after), which seems a reasonably user friendly way to collect the API specific information in one place… but as I said this is just a first pass for discussion that I wanted your reaction to. I was thinking that we could also list the unofficial API types and functions on this page, but with an identifier to show that they are not part of the official API - WDYT?? Let me see if we can order or structure the module entries manually before you go further with the PR.
Sara.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,186,2016-06-17T15:55:41Z,2016-06-28T10:05:54Z,2016-06-30T15:43:00Z,MERGED,True,280,32,4,https://github.com/saradickinson,Initial pass at updating Doxygen modules for getdns.h. Also add info …,2,[],https://github.com/getdnsapi/getdns/pull/186,https://github.com/saradickinson,4,https://github.com/getdnsapi/getdns/pull/186#issuecomment-228559080,"…on using context_create multithreaded. Needs review.

this is a rough first pass at making the oxygen Modules page more consistent and user navigable
as a handy index into getdns
I think a further re-org is needed in a later update, also haven't touched getdns_extra.h yet
Added a few functions descriptions too, but still many functions without comments... a WIP
Updated man page for context_create with multi-threaded instructions as a short term fix","Willem,  a further commit updates some of the names for values and preserves the original order of declarations within the file. Please review again! Sara.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,187,2016-06-20T16:55:59Z,2016-06-23T12:11:32Z,2016-06-23T12:11:32Z,MERGED,True,30,35,5,https://github.com/rwgroenenberg,"Return call_reporting info in case of timeout, so that we can see which server did not respond.",3,[],https://github.com/getdnsapi/getdns/pull/187,https://github.com/rwgroenenberg,1,https://github.com/getdnsapi/getdns/pull/187,"Hi Willem,
I've made a small extension to also populate the call_reporting info in case a query timed out. This way the application can see which of the upstream servers caused the timeout (and how long the timeout was).
Before:
Reply: {
  ""answer_type"": GETDNS_NAMETYPE_DNS,
  ""call_reporting"": [],
  ""replies_full"": [],
  ""replies_tree"": [],
  ""status"": GETDNS_RESPSTATUS_ALL_TIMEOUT
}


After:
Reply: {
  ""answer_type"": GETDNS_NAMETYPE_DNS,
  ""call_reporting"":
  [
    {
      ""query_name"": <bindata of ""1.2.3.4.5.6.7.4.2.3.e164.org."">,
      ""query_to"":
      {
        ""address_data"": <bindata for 192.168.99.122>,
        ""address_type"": <bindata of ""IPv4"">
      },
      ""query_type"": GETDNS_RRTYPE_NAPTR,
      ""run_time/ms"": 1000,
      ""transport"": GETDNS_TRANSPORT_UDP
    }
  ],
  ""replies_full"": [],
  ""replies_tree"": [],
  ""status"": GETDNS_RESPSTATUS_ALL_TIMEOUT
}

Please consider including this extension.
Cheers,
Robert","Hi Willem,
I've made a small extension to also populate the call_reporting info in case a query timed out. This way the application can see which of the upstream servers caused the timeout (and how long the timeout was).
Before:
Reply: {
  ""answer_type"": GETDNS_NAMETYPE_DNS,
  ""call_reporting"": [],
  ""replies_full"": [],
  ""replies_tree"": [],
  ""status"": GETDNS_RESPSTATUS_ALL_TIMEOUT
}


After:
Reply: {
  ""answer_type"": GETDNS_NAMETYPE_DNS,
  ""call_reporting"":
  [
    {
      ""query_name"": <bindata of ""1.2.3.4.5.6.7.4.2.3.e164.org."">,
      ""query_to"":
      {
        ""address_data"": <bindata for 192.168.99.122>,
        ""address_type"": <bindata of ""IPv4"">
      },
      ""query_type"": GETDNS_RRTYPE_NAPTR,
      ""run_time/ms"": 1000,
      ""transport"": GETDNS_TRANSPORT_UDP
    }
  ],
  ""replies_full"": [],
  ""replies_tree"": [],
  ""status"": GETDNS_RESPSTATUS_ALL_TIMEOUT
}

Please consider including this extension.
Cheers,
Robert",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,187,2016-06-20T16:55:59Z,2016-06-23T12:11:32Z,2016-06-23T12:11:32Z,MERGED,True,30,35,5,https://github.com/rwgroenenberg,"Return call_reporting info in case of timeout, so that we can see which server did not respond.",3,[],https://github.com/getdnsapi/getdns/pull/187,https://github.com/wtoorop,2,https://github.com/getdnsapi/getdns/pull/187#issuecomment-227397685,"Hi Willem,
I've made a small extension to also populate the call_reporting info in case a query timed out. This way the application can see which of the upstream servers caused the timeout (and how long the timeout was).
Before:
Reply: {
  ""answer_type"": GETDNS_NAMETYPE_DNS,
  ""call_reporting"": [],
  ""replies_full"": [],
  ""replies_tree"": [],
  ""status"": GETDNS_RESPSTATUS_ALL_TIMEOUT
}


After:
Reply: {
  ""answer_type"": GETDNS_NAMETYPE_DNS,
  ""call_reporting"":
  [
    {
      ""query_name"": <bindata of ""1.2.3.4.5.6.7.4.2.3.e164.org."">,
      ""query_to"":
      {
        ""address_data"": <bindata for 192.168.99.122>,
        ""address_type"": <bindata of ""IPv4"">
      },
      ""query_type"": GETDNS_RRTYPE_NAPTR,
      ""run_time/ms"": 1000,
      ""transport"": GETDNS_TRANSPORT_UDP
    }
  ],
  ""replies_full"": [],
  ""replies_tree"": [],
  ""status"": GETDNS_RESPSTATUS_ALL_TIMEOUT
}

Please consider including this extension.
Cheers,
Robert","Hey Robert.  Excellent idea.  I'll deal with the error (missing ; after _getdns_get_time_as_uintt64()?) and will then merge.
Thanks!",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,187,2016-06-20T16:55:59Z,2016-06-23T12:11:32Z,2016-06-23T12:11:32Z,MERGED,True,30,35,5,https://github.com/rwgroenenberg,"Return call_reporting info in case of timeout, so that we can see which server did not respond.",3,[],https://github.com/getdnsapi/getdns/pull/187,https://github.com/rwgroenenberg,3,https://github.com/getdnsapi/getdns/pull/187#issuecomment-227410653,"Hi Willem,
I've made a small extension to also populate the call_reporting info in case a query timed out. This way the application can see which of the upstream servers caused the timeout (and how long the timeout was).
Before:
Reply: {
  ""answer_type"": GETDNS_NAMETYPE_DNS,
  ""call_reporting"": [],
  ""replies_full"": [],
  ""replies_tree"": [],
  ""status"": GETDNS_RESPSTATUS_ALL_TIMEOUT
}


After:
Reply: {
  ""answer_type"": GETDNS_NAMETYPE_DNS,
  ""call_reporting"":
  [
    {
      ""query_name"": <bindata of ""1.2.3.4.5.6.7.4.2.3.e164.org."">,
      ""query_to"":
      {
        ""address_data"": <bindata for 192.168.99.122>,
        ""address_type"": <bindata of ""IPv4"">
      },
      ""query_type"": GETDNS_RRTYPE_NAPTR,
      ""run_time/ms"": 1000,
      ""transport"": GETDNS_TRANSPORT_UDP
    }
  ],
  ""replies_full"": [],
  ""replies_tree"": [],
  ""status"": GETDNS_RESPSTATUS_ALL_TIMEOUT
}

Please consider including this extension.
Cheers,
Robert","Oops, sorry about that...
I had some problems building in the git branch and worked on that in a separate tree... and then forgot to fix the missing ';'",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,187,2016-06-20T16:55:59Z,2016-06-23T12:11:32Z,2016-06-23T12:11:32Z,MERGED,True,30,35,5,https://github.com/rwgroenenberg,"Return call_reporting info in case of timeout, so that we can see which server did not respond.",3,[],https://github.com/getdnsapi/getdns/pull/187,https://github.com/wtoorop,4,https://github.com/getdnsapi/getdns/pull/187#issuecomment-227747769,"Hi Willem,
I've made a small extension to also populate the call_reporting info in case a query timed out. This way the application can see which of the upstream servers caused the timeout (and how long the timeout was).
Before:
Reply: {
  ""answer_type"": GETDNS_NAMETYPE_DNS,
  ""call_reporting"": [],
  ""replies_full"": [],
  ""replies_tree"": [],
  ""status"": GETDNS_RESPSTATUS_ALL_TIMEOUT
}


After:
Reply: {
  ""answer_type"": GETDNS_NAMETYPE_DNS,
  ""call_reporting"":
  [
    {
      ""query_name"": <bindata of ""1.2.3.4.5.6.7.4.2.3.e164.org."">,
      ""query_to"":
      {
        ""address_data"": <bindata for 192.168.99.122>,
        ""address_type"": <bindata of ""IPv4"">
      },
      ""query_type"": GETDNS_RRTYPE_NAPTR,
      ""run_time/ms"": 1000,
      ""transport"": GETDNS_TRANSPORT_UDP
    }
  ],
  ""replies_full"": [],
  ""replies_tree"": [],
  ""status"": GETDNS_RESPSTATUS_ALL_TIMEOUT
}

Please consider including this extension.
Cheers,
Robert","FYI, review takes a little longer because, although adding values to network_req_state is the correct approach here IMO, it is not without danger.  In several places in the code base, the state is tested for the values FINISHED and CANCELED to check that the processing has finished for the netreq.
I'll  do a pull request on your branch to deal with this, and then we'll merge :).  OK?",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,187,2016-06-20T16:55:59Z,2016-06-23T12:11:32Z,2016-06-23T12:11:32Z,MERGED,True,30,35,5,https://github.com/rwgroenenberg,"Return call_reporting info in case of timeout, so that we can see which server did not respond.",3,[],https://github.com/getdnsapi/getdns/pull/187,https://github.com/rwgroenenberg,5,https://github.com/getdnsapi/getdns/pull/187#issuecomment-227759502,"Hi Willem,
I've made a small extension to also populate the call_reporting info in case a query timed out. This way the application can see which of the upstream servers caused the timeout (and how long the timeout was).
Before:
Reply: {
  ""answer_type"": GETDNS_NAMETYPE_DNS,
  ""call_reporting"": [],
  ""replies_full"": [],
  ""replies_tree"": [],
  ""status"": GETDNS_RESPSTATUS_ALL_TIMEOUT
}


After:
Reply: {
  ""answer_type"": GETDNS_NAMETYPE_DNS,
  ""call_reporting"":
  [
    {
      ""query_name"": <bindata of ""1.2.3.4.5.6.7.4.2.3.e164.org."">,
      ""query_to"":
      {
        ""address_data"": <bindata for 192.168.99.122>,
        ""address_type"": <bindata of ""IPv4"">
      },
      ""query_type"": GETDNS_RRTYPE_NAPTR,
      ""run_time/ms"": 1000,
      ""transport"": GETDNS_TRANSPORT_UDP
    }
  ],
  ""replies_full"": [],
  ""replies_tree"": [],
  ""status"": GETDNS_RESPSTATUS_ALL_TIMEOUT
}

Please consider including this extension.
Cheers,
Robert","Sure, no problem.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,188,2016-06-22T12:47:08Z,2016-06-23T11:58:32Z,2016-06-23T11:58:32Z,MERGED,True,1,1,1,https://github.com/rwgroenenberg,"Build fails with autoconf 2.63, works with 2.68.",1,[],https://github.com/getdnsapi/getdns/pull/188,https://github.com/rwgroenenberg,1,https://github.com/getdnsapi/getdns/pull/188,"Found on CentOS 6.6: build fails due to problems in generated configure and src/config.h :
checking for CHECK... yes
./configure: line 16761: syntax error near unexpected token `fi'
./configure: line 16761: `fi'

and
./context.c: In function ‘getdns_context_get_api_information’:
./context.c:3382: error: ‘PACKAGE_URL’ undeclared (first use in this function)

With autoconf268 (available from EPEL repo) it works.
(Looking at the update description of autoconf 2.64, the problem might be fixed with that version already)","Found on CentOS 6.6: build fails due to problems in generated configure and src/config.h :
checking for CHECK... yes
./configure: line 16761: syntax error near unexpected token `fi'
./configure: line 16761: `fi'

and
./context.c: In function ‘getdns_context_get_api_information’:
./context.c:3382: error: ‘PACKAGE_URL’ undeclared (first use in this function)

With autoconf268 (available from EPEL repo) it works.
(Looking at the update description of autoconf 2.64, the problem might be fixed with that version already)",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,189,2016-06-23T13:04:44Z,2016-06-28T09:49:14Z,2016-06-28T09:49:14Z,MERGED,True,16,16,6,https://github.com/wtoorop,s/inline static/static inline/g,1,[],https://github.com/getdnsapi/getdns/pull/189,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/189,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,190,2016-06-25T14:57:56Z,2016-06-28T09:54:58Z,2016-06-28T09:54:59Z,MERGED,True,69,18,1,https://github.com/saradickinson,Split the recursive transport test 6 into 3 and add a shorter timeout…,2,[],https://github.com/getdnsapi/getdns/pull/190,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/190,… to the fail case to stop the overall test timing out.,… to the fail case to stop the overall test timing out.,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,191,2016-06-28T14:58:03Z,2016-06-29T00:36:13Z,2016-06-29T00:36:13Z,MERGED,True,2388,1753,19,https://github.com/wtoorop,Devel/decompose getdns query,22,[],https://github.com/getdnsapi/getdns/pull/191,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/191,"Put the following functionalities in external files:

getdns_str2dict
configuring contexts
serving primitices

Also getdns_query will use the default eventloop from context.","Put the following functionalities in external files:

getdns_str2dict
configuring contexts
serving primitices

Also getdns_query will use the default eventloop from context.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,192,2016-06-29T11:59:31Z,2016-07-02T00:26:26Z,2016-07-02T00:26:26Z,MERGED,True,24,5,1,https://github.com/wtoorop,Bugfix/transport test,2,[],https://github.com/getdnsapi/getdns/pull/192,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/192,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,193,2016-06-30T14:12:32Z,2016-07-04T10:43:26Z,2016-07-04T15:58:17Z,MERGED,True,25,6,1,https://github.com/saradickinson,Bugfix/transport test2,4,[],https://github.com/getdnsapi/getdns/pull/193,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/193,Just noticed the _6 test had the wrong QNAME and hardcoded type. Willem - do you want to merge this PR and close yours (#192)?,Just noticed the _6 test had the wrong QNAME and hardcoded type. Willem - do you want to merge this PR and close yours (#192)?,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,194,2016-07-01T16:57:22Z,2016-07-04T10:47:57Z,2016-07-04T15:58:07Z,MERGED,True,494,369,15,https://github.com/saradickinson,Make just the src/getdns files part of doxygen by default.,2,[],https://github.com/getdnsapi/getdns/pull/194,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/194,"Add documentation to cover getdns_extra.h. Re-org of functions to align better with getdns.h Also some work on the README.
Willem, please build this and see if you like how the Modules page is organised now....","Add documentation to cover getdns_extra.h. Re-org of functions to align better with getdns.h Also some work on the README.
Willem, please build this and see if you like how the Modules page is organised now....",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,195,2016-07-13T13:58:47Z,2016-07-13T15:46:54Z,2016-07-13T15:46:54Z,MERGED,True,1734,1972,25,https://github.com/wtoorop,Release/v1.1.0a1,17,[],https://github.com/getdnsapi/getdns/pull/195,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/195,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,196,2016-07-13T13:59:24Z,2016-07-13T15:40:15Z,2016-07-13T15:40:15Z,MERGED,True,418,558,12,https://github.com/wtoorop,Release/v1.0.0b2,10,[],https://github.com/getdnsapi/getdns/pull/196,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/196,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,197,2016-07-13T16:39:58Z,2016-07-14T08:58:32Z,2016-07-14T09:01:35Z,MERGED,True,398,330,8,https://github.com/saradickinson,Feature/upstream handling,4,[],https://github.com/getdnsapi/getdns/pull/197,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/197,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,198,2016-07-14T14:27:43Z,2016-07-14T16:13:42Z,2016-07-14T16:13:42Z,MERGED,True,137,83,16,https://github.com/wtoorop,Release/v1.0.0b2,14,[],https://github.com/getdnsapi/getdns/pull/198,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/198,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,199,2016-07-14T14:28:28Z,2016-07-14T16:22:17Z,2016-07-14T16:22:17Z,MERGED,True,722,287,24,https://github.com/wtoorop,Release/v1.1.0a1,30,[],https://github.com/getdnsapi/getdns/pull/199,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/199,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,200,2016-07-16T18:17:08Z,2016-07-21T09:37:29Z,2016-07-21T09:37:29Z,MERGED,True,83,101,1,https://github.com/crankycanuck,Reorganise README for a new user to the project.  Remove some things …,1,[],https://github.com/getdnsapi/getdns/pull/200,https://github.com/crankycanuck,1,https://github.com/getdnsapi/getdns/pull/200,…that are fixed/altered.,…that are fixed/altered.,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,201,2016-07-17T09:46:14Z,2016-07-18T13:02:50Z,2016-07-19T12:36:21Z,MERGED,True,3,3,2,https://github.com/jelu,Use type and not struct,1,[],https://github.com/getdnsapi/getdns/pull/201,https://github.com/jelu,1,https://github.com/getdnsapi/getdns/pull/201,Q: Why is getdns_dict_util_get_string() in src/util-internal.c while getdns_dict_util_set_string() is in src/dict.c ?,Q: Why is getdns_dict_util_get_string() in src/util-internal.c while getdns_dict_util_set_string() is in src/dict.c ?,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,201,2016-07-17T09:46:14Z,2016-07-18T13:02:50Z,2016-07-19T12:36:21Z,MERGED,True,3,3,2,https://github.com/jelu,Use type and not struct,1,[],https://github.com/getdnsapi/getdns/pull/201,https://github.com/wtoorop,2,https://github.com/getdnsapi/getdns/pull/201#issuecomment-233321821,Q: Why is getdns_dict_util_get_string() in src/util-internal.c while getdns_dict_util_set_string() is in src/dict.c ?,"A: I don't know exactly any more to be honest.  It might have to do with the fact that set_string used _set_const_bindata at some point, which was static at the time.  I probably didn't notice get_string, also because I don't think it is  a safe function.  Nowhere in the API it says that string representations in bindatas have a trailing \0 character.  (set_string puts it there for safety anyway b.t.w.)",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,204,2016-08-04T13:41:31Z,2016-08-04T15:08:35Z,2016-08-04T15:08:35Z,CLOSED,False,63,80,1,https://github.com/saradickinson,Further updates,1,[],https://github.com/getdnsapi/getdns/pull/204,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/204,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,205,2016-08-04T15:07:55Z,2016-08-04T15:08:10Z,2016-08-04T15:09:50Z,MERGED,True,63,80,1,https://github.com/saradickinson,Merge/doc changes,2,[],https://github.com/getdnsapi/getdns/pull/205,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/205,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,206,2016-08-08T16:19:39Z,2016-08-10T16:48:00Z,2017-02-23T13:58:26Z,MERGED,True,151,49,7,https://github.com/saradickinson,Feature/upstream handling,5,[],https://github.com/getdnsapi/getdns/pull/206,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/206,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,210,2016-10-15T11:14:08Z,2016-10-16T09:24:25Z,2016-10-16T09:24:25Z,MERGED,True,266,88,12,https://github.com/wtoorop,Features/stubby,6,[],https://github.com/getdnsapi/getdns/pull/210,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/210,"Install stubby as stubby
Let stubby act as stubby (so default config to listen on localhost etc.)
OpenSSL 1.1 support (the removal of CRYTO_w_lock and CRYPTO_w_unlock in src/pubkey-pinng.c nees review)","Install stubby as stubby
Let stubby act as stubby (so default config to listen on localhost etc.)
OpenSSL 1.1 support (the removal of CRYTO_w_lock and CRYPTO_w_unlock in src/pubkey-pinng.c nees review)",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,211,2016-10-21T13:19:48Z,2016-10-25T09:11:18Z,2017-02-23T13:58:29Z,CLOSED,False,31,12,3,https://github.com/saradickinson,Fix issue with session re-use making authentication appear to fail,1,[],https://github.com/getdnsapi/getdns/pull/211,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/211,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,211,2016-10-21T13:19:48Z,2016-10-25T09:11:18Z,2017-02-23T13:58:29Z,CLOSED,False,31,12,3,https://github.com/saradickinson,Fix issue with session re-use making authentication appear to fail,1,[],https://github.com/getdnsapi/getdns/pull/211,https://github.com/wtoorop,2,https://github.com/getdnsapi/getdns/pull/211#issuecomment-255980645,,Works like a charm.  Committed against a new alpha release branch.,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,213,2016-10-26T14:47:06Z,2016-10-27T13:55:38Z,2016-10-27T15:35:48Z,MERGED,True,21,0,2,https://github.com/neilcook,pthread-based locking for arc4random,2,[],https://github.com/getdnsapi/getdns/pull/213,https://github.com/neilcook,1,https://github.com/getdnsapi/getdns/pull/213,"For systems with no pthreads library (i.e. Windows), _ARC4_LOCK() and _ARC4_UNLOCK() are still stubs, which needs to be addressed by someone with Windows knowledge.","For systems with no pthreads library (i.e. Windows), _ARC4_LOCK() and _ARC4_UNLOCK() are still stubs, which needs to be addressed by someone with Windows knowledge.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,213,2016-10-26T14:47:06Z,2016-10-27T13:55:38Z,2016-10-27T15:35:48Z,MERGED,True,21,0,2,https://github.com/neilcook,pthread-based locking for arc4random,2,[],https://github.com/getdnsapi/getdns/pull/213,https://github.com/neilcook,2,https://github.com/getdnsapi/getdns/pull/213#issuecomment-256374750,"For systems with no pthreads library (i.e. Windows), _ARC4_LOCK() and _ARC4_UNLOCK() are still stubs, which needs to be addressed by someone with Windows knowledge.",I'm not sure why the transport test is failing - I don't see how it could be related to my change,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,213,2016-10-26T14:47:06Z,2016-10-27T13:55:38Z,2016-10-27T15:35:48Z,MERGED,True,21,0,2,https://github.com/neilcook,pthread-based locking for arc4random,2,[],https://github.com/getdnsapi/getdns/pull/213,https://github.com/neilcook,3,https://github.com/getdnsapi/getdns/pull/213#issuecomment-256391177,"For systems with no pthreads library (i.e. Windows), _ARC4_LOCK() and _ARC4_UNLOCK() are still stubs, which needs to be addressed by someone with Windows knowledge.",Fixed HAVE_PTHREADS define in configure.ac,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,213,2016-10-26T14:47:06Z,2016-10-27T13:55:38Z,2016-10-27T15:35:48Z,MERGED,True,21,0,2,https://github.com/neilcook,pthread-based locking for arc4random,2,[],https://github.com/getdnsapi/getdns/pull/213,https://github.com/wtoorop,4,https://github.com/getdnsapi/getdns/pull/213#issuecomment-256647793,"For systems with no pthreads library (i.e. Windows), _ARC4_LOCK() and _ARC4_UNLOCK() are still stubs, which needs to be addressed by someone with Windows knowledge.",Excellent.  Thanks!,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,213,2016-10-26T14:47:06Z,2016-10-27T13:55:38Z,2016-10-27T15:35:48Z,MERGED,True,21,0,2,https://github.com/neilcook,pthread-based locking for arc4random,2,[],https://github.com/getdnsapi/getdns/pull/213,https://github.com/wtoorop,5,https://github.com/getdnsapi/getdns/pull/213#issuecomment-256678140,"For systems with no pthreads library (i.e. Windows), _ARC4_LOCK() and _ARC4_UNLOCK() are still stubs, which needs to be addressed by someone with Windows knowledge.","Op 26-10-16 om 17:01 schreef Neil Cook:

I'm not sure why the transport test is failing - I don't see how it
could be related to my change

This might have been due to (connection tracking) issues on our side.
We have resolved this today.  I suspect the online unit tests will be
much more stable from now on.

—
You are receiving this because you are subscribed to this thread.
Reply to this email directly, view it on GitHub
#213 (comment),
or mute the thread
https://github.com/notifications/unsubscribe-auth/AE-RkofQ1g_gXOF12CLQ3XkUN69D9VlVks5q32tIgaJpZM4KhQxr.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,216,2016-10-31T10:26:41Z,2016-10-31T10:36:58Z,2016-10-31T10:36:58Z,MERGED,True,106,22,7,https://github.com/wtoorop,Openssl 1.1.0 support (for the 1.0.0 release),5,[],https://github.com/getdnsapi/getdns/pull/216,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/216,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,218,2016-11-08T11:53:30Z,2016-12-15T07:29:58Z,2016-12-20T16:20:23Z,MERGED,True,24,1,1,https://github.com/neilcook,call SSL_library_init() just once and lock with mutexes,1,[],https://github.com/getdnsapi/getdns/pull/218,https://github.com/neilcook,1,https://github.com/getdnsapi/getdns/pull/218,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,218,2016-11-08T11:53:30Z,2016-12-15T07:29:58Z,2016-12-20T16:20:23Z,MERGED,True,24,1,1,https://github.com/neilcook,call SSL_library_init() just once and lock with mutexes,1,[],https://github.com/getdnsapi/getdns/pull/218,https://github.com/wtoorop,2,https://github.com/getdnsapi/getdns/pull/218#issuecomment-261417027,,I haven't forgotten about this...  It's just pending a opportunity for proper review,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,218,2016-11-08T11:53:30Z,2016-12-15T07:29:58Z,2016-12-20T16:20:23Z,MERGED,True,24,1,1,https://github.com/neilcook,call SSL_library_init() just once and lock with mutexes,1,[],https://github.com/getdnsapi/getdns/pull/218,https://github.com/neilcook,3,https://github.com/getdnsapi/getdns/pull/218#issuecomment-261496882,,"No probs!

On 18 Nov 2016, at 00:50, wtoorop notifications@github.com wrote:
I haven't forgotten about this... It's just pending a opportunity for proper review
—
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub #218 (comment), or mute the thread https://github.com/notifications/unsubscribe-auth/AOWv2PRJSz4fm7Rz0Rb3U5EYxrfpZ59Fks5q_PZmgaJpZM4KsVyL.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,218,2016-11-08T11:53:30Z,2016-12-15T07:29:58Z,2016-12-20T16:20:23Z,MERGED,True,24,1,1,https://github.com/neilcook,call SSL_library_init() just once and lock with mutexes,1,[],https://github.com/getdnsapi/getdns/pull/218,https://github.com/neilcook,4,https://github.com/getdnsapi/getdns/pull/218#issuecomment-267079283,,"It would be good if there was some movement on this. I notice huitema has added Windows locking for the arc4random functions, perhaps he could also do the same for these locks?",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,218,2016-11-08T11:53:30Z,2016-12-15T07:29:58Z,2016-12-20T16:20:23Z,MERGED,True,24,1,1,https://github.com/neilcook,call SSL_library_init() just once and lock with mutexes,1,[],https://github.com/getdnsapi/getdns/pull/218,https://github.com/wtoorop,5,https://github.com/getdnsapi/getdns/pull/218#issuecomment-267258084,,"Absolutely!  I was only reluctant because of the introduction of stdbool.h.  I have experienced before that the size of a bool can vary at compile time.  This may be problematic when used in exposed structs.  The way you use it is safe though (because it is not exposed), but if more code will use it, it might eventually get exposed.
Why did you close the eventloop pull request?",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,218,2016-11-08T11:53:30Z,2016-12-15T07:29:58Z,2016-12-20T16:20:23Z,MERGED,True,24,1,1,https://github.com/neilcook,call SSL_library_init() just once and lock with mutexes,1,[],https://github.com/getdnsapi/getdns/pull/218,https://github.com/neilcook,6,https://github.com/getdnsapi/getdns/pull/218#issuecomment-267304720,,I'm just trying to fix the unit test issues before I reopen the event loop pull request - will hopefully do that today,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,219,2016-11-12T07:55:38Z,2016-11-12T09:59:24Z,2016-11-12T09:59:24Z,MERGED,True,22,9,1,https://github.com/dkg,Allow public key pins higher in the chain than the EE cert,1,[],https://github.com/getdnsapi/getdns/pull/219,https://github.com/dkg,1,https://github.com/getdnsapi/getdns/pull/219,"This resolves an old TODO; we'd never tested pinning any certs higher
than the end-entity cert before.","This resolves an old TODO; we'd never tested pinning any certs higher
than the end-entity cert before.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,220,2016-11-13T04:14:27Z,2016-11-13T04:14:39Z,2017-02-23T13:58:34Z,CLOSED,False,2779,2077,35,https://github.com/saradickinson,Hackathon,68,[],https://github.com/getdnsapi/getdns/pull/220,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/220,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,221,2016-11-13T04:15:30Z,2016-11-13T04:19:15Z,2017-02-23T13:58:34Z,MERGED,True,7,3,2,https://github.com/saradickinson,Minor logging updates,1,[],https://github.com/getdnsapi/getdns/pull/221,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/221,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,223,2016-11-17T19:02:52Z,2016-12-14T15:58:33Z,2016-12-14T15:58:33Z,CLOSED,False,83,45,2,https://github.com/neilcook,Fixed eventloop,2,[],https://github.com/getdnsapi/getdns/pull/223,https://github.com/neilcook,1,https://github.com/getdnsapi/getdns/pull/223,"This fixes* the issues with default_eventloop by doing the following:

Use poll() instead of select() so that fds with a value >1024 can be used
Dynamically allocate the default_eventloop arrays based on RLIMIT_NOFILE (rlimit_cur)

This means that as long as the soft limit is set high enough, there will not be issues with high numbers of file descriptors being used.
*However, this is not an ideal fix. Using an array sized by the maximum number of file descriptors seems to be incredibly inefficient. It would be better if this were simply an array of the file descriptors currently in-use, however that requires more drastic changes to the way default_eventloop works.","This fixes* the issues with default_eventloop by doing the following:

Use poll() instead of select() so that fds with a value >1024 can be used
Dynamically allocate the default_eventloop arrays based on RLIMIT_NOFILE (rlimit_cur)

This means that as long as the soft limit is set high enough, there will not be issues with high numbers of file descriptors being used.
*However, this is not an ideal fix. Using an array sized by the maximum number of file descriptors seems to be incredibly inefficient. It would be better if this were simply an array of the file descriptors currently in-use, however that requires more drastic changes to the way default_eventloop works.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,224,2016-12-03T19:04:07Z,2016-12-03T19:09:52Z,2016-12-03T19:09:52Z,CLOSED,False,310,296,13,https://github.com/huitema,Develop,20,[],https://github.com/getdnsapi/getdns/pull/224,https://github.com/huitema,1,https://github.com/getdnsapi/getdns/pull/224,Fix three bugs in function set_os_defaults_windows(),Fix three bugs in function set_os_defaults_windows(),True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,231,2016-12-05T01:30:34Z,2016-12-05T10:02:07Z,2016-12-05T10:02:07Z,MERGED,True,8,5,1,https://github.com/huitema,Fixing several issues in function set_os_defaults_windows that preven…,1,[],https://github.com/getdnsapi/getdns/pull/231,https://github.com/huitema,1,https://github.com/getdnsapi/getdns/pull/231,Solves three separate issues with context.c on Windows.,Solves three separate issues with context.c on Windows.,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,233,2016-12-05T19:47:42Z,2016-12-07T09:32:33Z,2016-12-07T09:32:33Z,MERGED,True,129,12,4,https://github.com/huitema,Remainder of changes for Christian's Windows port. ,3,[],https://github.com/getdnsapi/getdns/pull/233,https://github.com/huitema,1,https://github.com/getdnsapi/getdns/pull/233,"Solves issues 228, 229, 230, 232.","Solves issues 228, 229, 230, 232.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,234,2016-12-06T16:01:22Z,2016-12-07T13:41:59Z,2017-02-23T13:58:38Z,MERGED,True,147,27,6,https://github.com/saradickinson,Stubby enhancements,4,[],https://github.com/getdnsapi/getdns/pull/234,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/234,"A few Stubby usability enhancements for the alpha 3 release.
Willem - please review.","A few Stubby usability enhancements for the alpha 3 release.
Willem - please review.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,234,2016-12-06T16:01:22Z,2016-12-07T13:41:59Z,2017-02-23T13:58:38Z,MERGED,True,147,27,6,https://github.com/saradickinson,Stubby enhancements,4,[],https://github.com/getdnsapi/getdns/pull/234,https://github.com/wtoorop,2,https://github.com/getdnsapi/getdns/pull/234#issuecomment-265449493,"A few Stubby usability enhancements for the alpha 3 release.
Willem - please review.","ACK -- will merge the stubby PR then

Op 07-12-16 om 14:29 schreef saradickinson:
…
 ***@***.**** commented on this pull request.

 ------------------------------------------------------------------------

 In src/context.h <#234>:

> @@ -131,6 +131,8 @@ typedef struct getdns_upstream {
  	/* How is this upstream doing over UDP? */
  	int                      to_retry;
  	int                      back_off;
 +	size_t                   udp_responses;
 +	size_t                   udp_timeouts;

 I have another pull request on the way where I am touching call
 reporting for TCP/TLS so will include it there.

 —
 You are receiving this because you commented.
 Reply to this email directly, view it on GitHub
 <#234>, or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AE-Rkhy0PIUUgKWEgcQbWkduQX_noOkGks5rFrSsgaJpZM4LFkut>.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,237,2016-12-07T23:52:01Z,2016-12-08T11:21:16Z,2016-12-08T11:21:16Z,MERGED,True,2,2,1,https://github.com/huitema,Fix the potential clipping of idle_timeout value in calls to upstream_reschedule_events(),2,[],https://github.com/getdnsapi/getdns/pull/237,https://github.com/huitema,1,https://github.com/getdnsapi/getdns/pull/237,This will resolve issue #236.,This will resolve issue #236.,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,237,2016-12-07T23:52:01Z,2016-12-08T11:21:16Z,2016-12-08T11:21:16Z,MERGED,True,2,2,1,https://github.com/huitema,Fix the potential clipping of idle_timeout value in calls to upstream_reschedule_events(),2,[],https://github.com/getdnsapi/getdns/pull/237,https://github.com/wtoorop,2,https://github.com/getdnsapi/getdns/pull/237#issuecomment-265717346,This will resolve issue #236.,Absolutely.  Thanks!,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,238,2016-12-08T20:42:51Z,2016-12-09T11:24:02Z,2016-12-09T11:24:02Z,MERGED,True,61,39,12,https://github.com/huitema,Fixing the bulk of the compilation warnings in the GetDNS code,1,[],https://github.com/getdnsapi/getdns/pull/238,https://github.com/huitema,1,https://github.com/getdnsapi/getdns/pull/238,"This PR fixes the majority of the compilation warnings for GetDNS on Windows. The fixes are straightforward.
Two sets of warnings are not fixed: the issues in the GLDNS code, which should be fixed by synchronizing with the Unbound code, and the issues related to timeout casting, for which I am really not sure that casting to 32 bits is the right answer.","This PR fixes the majority of the compilation warnings for GetDNS on Windows. The fixes are straightforward.
Two sets of warnings are not fixed: the issues in the GLDNS code, which should be fixed by synchronizing with the Unbound code, and the issues related to timeout casting, for which I am really not sure that casting to 32 bits is the right answer.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,240,2016-12-09T16:36:17Z,2016-12-12T10:58:23Z,2017-02-23T13:58:40Z,MERGED,True,198,81,7,https://github.com/saradickinson,Bugfix/key pinning,7,[],https://github.com/getdnsapi/getdns/pull/240,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/240,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,240,2016-12-09T16:36:17Z,2016-12-12T10:58:23Z,2017-02-23T13:58:40Z,MERGED,True,198,81,7,https://github.com/saradickinson,Bugfix/key pinning,7,[],https://github.com/getdnsapi/getdns/pull/240,https://github.com/wtoorop,2,https://github.com/getdnsapi/getdns/pull/240#issuecomment-266395949,,I bet it was rather annoying to see travis fail because of compiler warnings  ;),True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,241,2016-12-11T00:07:02Z,2016-12-12T09:33:35Z,2016-12-12T09:33:35Z,MERGED,True,10,1,2,https://github.com/huitema,Fixing VS code analysis issues in dnssec.c and in arc4random.c,2,[],https://github.com/getdnsapi/getdns/pull/241,https://github.com/huitema,1,https://github.com/getdnsapi/getdns/pull/241,"This resolves the remaining issues found in VS code analysis, except for the issues found in GLDNS/str2wire.c, which should be addressed first in unbound.","This resolves the remaining issues found in VS code analysis, except for the issues found in GLDNS/str2wire.c, which should be addressed first in unbound.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,242,2016-12-12T13:21:37Z,2016-12-15T07:26:01Z,2016-12-15T07:26:01Z,MERGED,True,100,154,14,https://github.com/wtoorop,Use __func__ var when supported,1,[],https://github.com/getdnsapi/getdns/pull/242,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/242,And let debugging messages compile with -Wpedantic -Werror too,And let debugging messages compile with -Wpedantic -Werror too,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,243,2016-12-12T13:32:59Z,2016-12-15T07:25:51Z,2016-12-15T07:25:51Z,MERGED,True,99,155,14,https://github.com/wtoorop,Use __func__ var when supported,2,[],https://github.com/getdnsapi/getdns/pull/243,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/243,And let debugging messages compile with -Wpedantic -Werror too,And let debugging messages compile with -Wpedantic -Werror too,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,244,2016-12-12T20:29:05Z,2016-12-22T23:57:24Z,2016-12-22T23:57:24Z,CLOSED,False,500,7,7,https://github.com/huitema,Implementing the ARC4 LOCK/UNLOCK for Windows,3,[],https://github.com/getdnsapi/getdns/pull/244,https://github.com/huitema,1,https://github.com/getdnsapi/getdns/pull/244,"The current code just had a placeholder for these two functions, which would be unsafe in a multi-threaded application.","The current code just had a placeholder for these two functions, which would be unsafe in a multi-threaded application.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,244,2016-12-12T20:29:05Z,2016-12-22T23:57:24Z,2016-12-22T23:57:24Z,CLOSED,False,500,7,7,https://github.com/huitema,Implementing the ARC4 LOCK/UNLOCK for Windows,3,[],https://github.com/getdnsapi/getdns/pull/244,https://github.com/huitema,2,https://github.com/getdnsapi/getdns/pull/244#issuecomment-268916868,"The current code just had a placeholder for these two functions, which would be unsafe in a multi-threaded application.",Cancelling the PR so I can move on. Will resubmit later.,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,245,2016-12-14T16:16:17Z,2016-12-14T18:05:52Z,2016-12-14T18:05:52Z,CLOSED,False,1248,102,3,https://github.com/neilcook,Fixed eventloop,8,[],https://github.com/getdnsapi/getdns/pull/245,https://github.com/neilcook,1,https://github.com/getdnsapi/getdns/pull/245,"This is a ""proper"" fix for the original problems with hardcoded max_fds, and also the issue with the use of a sparse array for handling timeouts and fds, which becomes horrendously inefficient when the maximum number of fds is set very high.
This patch uses the BSD-licensed uthash.h to store fd and timeout data in hash tables. This means that only the fd and timeout events that are currently active are stored and processed. Hash entries are dynamically allocated and freed as required.
This implementation should be faster than the original implementation, even when max fds is very high, as it only processes the timeouts and fds that are scheduled.","This is a ""proper"" fix for the original problems with hardcoded max_fds, and also the issue with the use of a sparse array for handling timeouts and fds, which becomes horrendously inefficient when the maximum number of fds is set very high.
This patch uses the BSD-licensed uthash.h to store fd and timeout data in hash tables. This means that only the fd and timeout events that are currently active are stored and processed. Hash entries are dynamically allocated and freed as required.
This implementation should be faster than the original implementation, even when max fds is very high, as it only processes the timeouts and fds that are scheduled.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,246,2016-12-15T15:10:06Z,2017-02-15T19:25:47Z,2017-02-18T12:30:53Z,MERGED,True,1274,103,3,https://github.com/neilcook,Fixed eventloop,18,[],https://github.com/getdnsapi/getdns/pull/246,https://github.com/neilcook,1,https://github.com/getdnsapi/getdns/pull/246,"This seems to pass (except for one failure, which I notice also happens for the existing develop branch) the ""normal"" unit tests. However it seems to generate a ton of segfaults for the ""stub only"" unit tests, and I have no idea why, as that shouldn't make any difference.","This seems to pass (except for one failure, which I notice also happens for the existing develop branch) the ""normal"" unit tests. However it seems to generate a ton of segfaults for the ""stub only"" unit tests, and I have no idea why, as that shouldn't make any difference.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,246,2016-12-15T15:10:06Z,2017-02-15T19:25:47Z,2017-02-18T12:30:53Z,MERGED,True,1274,103,3,https://github.com/neilcook,Fixed eventloop,18,[],https://github.com/getdnsapi/getdns/pull/246,https://github.com/wtoorop,2,https://github.com/getdnsapi/getdns/pull/246#issuecomment-267380417,"This seems to pass (except for one failure, which I notice also happens for the existing develop branch) the ""normal"" unit tests. However it seems to generate a ton of segfaults for the ""stub only"" unit tests, and I have no idea why, as that shouldn't make any difference.","Neil, thanks, I think I can explain why, but not today...
I will respond next Monday.

Op 15-12-16 om 16:10 schreef Neil Cook:
…
 This seems to pass (except for one failure, which I notice also happens
 for the existing develop branch) the ""normal"" unit tests. However it
 seems to generate a ton of segfaults for the ""stub only"" unit tests, and
 I have no idea why, as that shouldn't make any difference.

 ------------------------------------------------------------------------


         You can view, comment on, or merge this pull request online at:

   #246


         Commit Summary

   * move default eventloop from select to poll, make max fds dependent
     on value from getrlimit not FD_SETSIZE
   * max_fds and max_timeouts part of default eventloop structure
   * Rewrite default_eventloop to use hash tables instead of arrays
   * cleanup poll.h include for non-windows
   * remove redundant debugging
   * Fix travis compiler warnings/errors
   * set event id in add_event rather than calling function
   * Consisten use of TIMEOUT_FOREVER
   * Merge branch 'develop' into devel/fixed_eventloop
   * Suppress compile warnings
   * Merge pull request #1 from wtoorop/devel/fixed_eventloop
   * Fix default_eventloop_run OR instead of AND and hash table iteration
     safety


         File Changes

   * *M* src/extension/default_eventloop.c
     <https://github.com/getdnsapi/getdns/pull/246/files#diff-0> (273)
   * *M* src/extension/default_eventloop.h
     <https://github.com/getdnsapi/getdns/pull/246/files#diff-1> (25)
   * *A* src/util/uthash.h
     <https://github.com/getdnsapi/getdns/pull/246/files#diff-2> (1074)


         Patch Links:

   * https://github.com/getdnsapi/getdns/pull/246.patch
   * https://github.com/getdnsapi/getdns/pull/246.diff

 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub
 <#246>, or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AE-Rkuo5P_gi8zJ1c79k0SyzZZ9rLj8lks5rIVhPgaJpZM4LOMvy>.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,246,2016-12-15T15:10:06Z,2017-02-15T19:25:47Z,2017-02-18T12:30:53Z,MERGED,True,1274,103,3,https://github.com/neilcook,Fixed eventloop,18,[],https://github.com/getdnsapi/getdns/pull/246,https://github.com/neilcook,3,https://github.com/getdnsapi/getdns/pull/246#issuecomment-267570559,"This seems to pass (except for one failure, which I notice also happens for the existing develop branch) the ""normal"" unit tests. However it seems to generate a ton of segfaults for the ""stub only"" unit tests, and I have no idea why, as that shouldn't make any difference.","Well I fixed the segfaults it would seem. I've found out you have to be quite careful in the event loop code when calling callbacks, because they can delete scheduled events - leading to free memory accesses, hence the segfaults. This wasn't a problem before, because the the data structure were static, but this causes problems with dynamic data structure.
I cleaned this up to ensure that before calling _cb functions, I copy out the data needed, or create a temporary structure to hold the data.
Not sure if the remaining couple of errors have anything to do with my code - they seem to be infrastructure-related (travis issues?)",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,246,2016-12-15T15:10:06Z,2017-02-15T19:25:47Z,2017-02-18T12:30:53Z,MERGED,True,1274,103,3,https://github.com/neilcook,Fixed eventloop,18,[],https://github.com/getdnsapi/getdns/pull/246,https://github.com/wtoorop,4,https://github.com/getdnsapi/getdns/pull/246#issuecomment-270394136,"This seems to pass (except for one failure, which I notice also happens for the existing develop branch) the ""normal"" unit tests. However it seems to generate a ton of segfaults for the ""stub only"" unit tests, and I have no idea why, as that shouldn't make any difference.","Happy New Year!
It is more than infrastructure...  I can reproduce.  I have to look into this.
Ok with you if I take this to the 1.1.0 release?
I really have to do the 1.0.0 release with as little changes as possible (only bugfixes).",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,246,2016-12-15T15:10:06Z,2017-02-15T19:25:47Z,2017-02-18T12:30:53Z,MERGED,True,1274,103,3,https://github.com/neilcook,Fixed eventloop,18,[],https://github.com/getdnsapi/getdns/pull/246,https://github.com/neilcook,5,https://github.com/getdnsapi/getdns/pull/246#issuecomment-270408524,"This seems to pass (except for one failure, which I notice also happens for the existing develop branch) the ""normal"" unit tests. However it seems to generate a ton of segfaults for the ""stub only"" unit tests, and I have no idea why, as that shouldn't make any difference.",I'm fine if you leave this until 1.1 - it would be good to have a release note stating the limitations in the meantime.,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,246,2016-12-15T15:10:06Z,2017-02-15T19:25:47Z,2017-02-18T12:30:53Z,MERGED,True,1274,103,3,https://github.com/neilcook,Fixed eventloop,18,[],https://github.com/getdnsapi/getdns/pull/246,https://github.com/neilcook,6,https://github.com/getdnsapi/getdns/pull/246#issuecomment-270408830,"This seems to pass (except for one failure, which I notice also happens for the existing develop branch) the ""normal"" unit tests. However it seems to generate a ton of segfaults for the ""stub only"" unit tests, and I have no idea why, as that shouldn't make any difference.","Oh, and Happy New Year too!",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,246,2016-12-15T15:10:06Z,2017-02-15T19:25:47Z,2017-02-18T12:30:53Z,MERGED,True,1274,103,3,https://github.com/neilcook,Fixed eventloop,18,[],https://github.com/getdnsapi/getdns/pull/246,https://github.com/neilcook,7,https://github.com/getdnsapi/getdns/pull/246#issuecomment-273509992,"This seems to pass (except for one failure, which I notice also happens for the existing develop branch) the ""normal"" unit tests. However it seems to generate a ton of segfaults for the ""stub only"" unit tests, and I have no idea why, as that shouldn't make any difference.","Yay, I finally figured out what the issue was. I got mostly there last year, but wasn't allocating new memory properly. Now I did it properly in the add/delete hash functions, and everything is looking good.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,246,2016-12-15T15:10:06Z,2017-02-15T19:25:47Z,2017-02-18T12:30:53Z,MERGED,True,1274,103,3,https://github.com/neilcook,Fixed eventloop,18,[],https://github.com/getdnsapi/getdns/pull/246,https://github.com/wtoorop,8,https://github.com/getdnsapi/getdns/pull/246#issuecomment-276315549,"This seems to pass (except for one failure, which I notice also happens for the existing develop branch) the ""normal"" unit tests. However it seems to generate a ton of segfaults for the ""stub only"" unit tests, and I have no idea why, as that shouldn't make any difference.","Thank you Neil!  Very happy with it.
I want to do a few changes myself before merging... provide it as another event loop extension, that will be the default when poll is available, but that will keep using select when it is not.  Once that is done, I'll merge.
After that I'll probably do some more modifications... I believe I could minimize the memory management (number of allocs and frees) a bit by putting more info in the getdns_eventloop_event (double linked list pointers?) and reusing the struct pollfd[] array, only reallocation when it needs to grow . Maybe the getdns_eventloop_event needs to become a little larger for that.  I'll have a look.
When memory allocations are needed, it would be nice if the event loop extension would use the custom memory functions.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,246,2016-12-15T15:10:06Z,2017-02-15T19:25:47Z,2017-02-18T12:30:53Z,MERGED,True,1274,103,3,https://github.com/neilcook,Fixed eventloop,18,[],https://github.com/getdnsapi/getdns/pull/246,https://github.com/neilcook,9,https://github.com/getdnsapi/getdns/pull/246#issuecomment-276328015,"This seems to pass (except for one failure, which I notice also happens for the existing develop branch) the ""normal"" unit tests. However it seems to generate a ton of segfaults for the ""stub only"" unit tests, and I have no idea why, as that shouldn't make any difference.","Hi, that all sounds good. I wonder which systems don't have poll() these days though!
Reusing memory would probably be a very good idea I agree, particularly the pollfd structure. Also, I didn't even realise there were custom memory functions, but now I know!",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,246,2016-12-15T15:10:06Z,2017-02-15T19:25:47Z,2017-02-18T12:30:53Z,MERGED,True,1274,103,3,https://github.com/neilcook,Fixed eventloop,18,[],https://github.com/getdnsapi/getdns/pull/246,https://github.com/neilcook,10,https://github.com/getdnsapi/getdns/pull/246#issuecomment-280761440,"This seems to pass (except for one failure, which I notice also happens for the existing develop branch) the ""normal"" unit tests. However it seems to generate a ton of segfaults for the ""stub only"" unit tests, and I have no idea why, as that shouldn't make any difference.","I have one question on the changes you made - what is the purpose of timeout_id in _getdns_poll_eventloop?
It's currently initialised to 0 and then never modified, and it is used in the following loop in poll_eventloop.c:
for (i = poll_loop->timeout_id + 1; i != poll_loop->timeout_id; i++) {
if (find_event(&poll_loop->timeout_events, i) == NULL) {
event->ev = add_event(mf, &poll_loop->timeout_events, i, event, get_now_plus(timeout));
		DEBUG_SCHED( ""scheduled timeout at slot %d\n"", (int)i);
		return GETDNS_RETURN_GOOD;
	}
}

Was the idea to set it to ""i"" in the loop when an event is added, e.g.:
for (i = poll_loop->timeout_id + 1; i != poll_loop->timeout_id; i++) {
if (find_event(&poll_loop->timeout_events, i) == NULL) {
event->ev = add_event(mf, &poll_loop->timeout_events, i, event, get_now_plus(timeout));
timeout_id = i; /* ?? */
DEBUG_SCHED( ""scheduled timeout at slot %d\n"", (int)i);
return GETDNS_RETURN_GOOD;
}
}",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,246,2016-12-15T15:10:06Z,2017-02-15T19:25:47Z,2017-02-18T12:30:53Z,MERGED,True,1274,103,3,https://github.com/neilcook,Fixed eventloop,18,[],https://github.com/getdnsapi/getdns/pull/246,https://github.com/wtoorop,11,https://github.com/getdnsapi/getdns/pull/246#issuecomment-280842671,"This seems to pass (except for one failure, which I notice also happens for the existing develop branch) the ""normal"" unit tests. However it seems to generate a ton of segfaults for the ""stub only"" unit tests, and I have no idea why, as that shouldn't make any difference.","That was the idea yes.. have (1) instead of (n) time for adding a timeout event.  However when working on the elimination on the  _getdns_eventloop_info malloc per schedule, I eventually had no need for an id (or fd which is in pollfd already) or the uthash any more, so this bug went away with that.
Another pull request with those updates is coming up soon...",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,247,2016-12-23T00:01:38Z,2016-12-23T03:37:15Z,2016-12-23T03:37:15Z,CLOSED,False,500,7,7,https://github.com/huitema,Initial implementation of basic MDNS support,3,[],https://github.com/getdnsapi/getdns/pull/247,https://github.com/huitema,1,https://github.com/getdnsapi/getdns/pull/247,"This initial implementation of MDNS introduces a test for the MDNS name space (.local, and a few subdomains under .arpa). A basic ""get addresses"" test works against a test server. The MDNS code is kept separate from the normal stub resolution, to minimize potential interference.
The PR also includes the changes to arc4_lock, so arc4random becomes thread safe on Windows.","This initial implementation of MDNS introduces a test for the MDNS name space (.local, and a few subdomains under .arpa). A basic ""get addresses"" test works against a test server. The MDNS code is kept separate from the normal stub resolution, to minimize potential interference.
The PR also includes the changes to arc4_lock, so arc4random becomes thread safe on Windows.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,247,2016-12-23T00:01:38Z,2016-12-23T03:37:15Z,2016-12-23T03:37:15Z,CLOSED,False,500,7,7,https://github.com/huitema,Initial implementation of basic MDNS support,3,[],https://github.com/getdnsapi/getdns/pull/247,https://github.com/huitema,2,https://github.com/getdnsapi/getdns/pull/247#issuecomment-268936032,"This initial implementation of MDNS introduces a test for the MDNS name space (.local, and a few subdomains under .arpa). A basic ""get addresses"" test works against a test server. The MDNS code is kept separate from the normal stub resolution, to minimize potential interference.
The PR also includes the changes to arc4_lock, so arc4random becomes thread safe on Windows.",Oops. Forgot to add the new mdns file in the make file...,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,248,2016-12-23T03:41:42Z,2016-12-23T04:06:30Z,2016-12-23T04:06:30Z,CLOSED,False,511,10,8,https://github.com/huitema,Implementation of basic MDNS,4,[],https://github.com/getdnsapi/getdns/pull/248,https://github.com/huitema,1,https://github.com/getdnsapi/getdns/pull/248,"Add new files for mdns code, mdns.c and mdns.h
Modifies general.c to call mdns when the queried name is in mdns name space (.local)
Miscellaneous fixes, including making arc4random thread safe on windows.","Add new files for mdns code, mdns.c and mdns.h
Modifies general.c to call mdns when the queried name is in mdns name space (.local)
Miscellaneous fixes, including making arc4random thread safe on windows.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,248,2016-12-23T03:41:42Z,2016-12-23T04:06:30Z,2016-12-23T04:06:30Z,CLOSED,False,511,10,8,https://github.com/huitema,Implementation of basic MDNS,4,[],https://github.com/getdnsapi/getdns/pull/248,https://github.com/huitema,2,https://github.com/getdnsapi/getdns/pull/248#issuecomment-268937890,"Add new files for mdns code, mdns.c and mdns.h
Modifies general.c to call mdns when the queried name is in mdns name space (.local)
Miscellaneous fixes, including making arc4random thread safe on windows.",Need to work on that some more.,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,249,2016-12-23T04:09:15Z,2016-12-23T04:09:55Z,2016-12-23T04:09:55Z,CLOSED,False,511,10,8,https://github.com/huitema,Implementation of basic MDNS,4,[],https://github.com/getdnsapi/getdns/pull/249,https://github.com/huitema,1,https://github.com/getdnsapi/getdns/pull/249,"Add new files for mdns code, mdns.c and mdns.h
Modifies general.c to call mdns when the queried name is in mdns name space (.local)
Miscellaneous fixes, including making arc4random thread safe on windows.","Add new files for mdns code, mdns.c and mdns.h
Modifies general.c to call mdns when the queried name is in mdns name space (.local)
Miscellaneous fixes, including making arc4random thread safe on windows.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,250,2016-12-23T04:11:10Z,2016-12-23T04:33:54Z,2016-12-23T04:33:54Z,CLOSED,False,526,10,8,https://github.com/huitema,Implementation of basic MDNS,6,[],https://github.com/getdnsapi/getdns/pull/250,https://github.com/huitema,1,https://github.com/getdnsapi/getdns/pull/250,"Add new files for mdns code, mdns.c and mdns.h
Modifies general.c to call mdns when the queried name is in mdns name space (.local)
Miscellaneous fixes, including making arc4random thread safe on windows.","Add new files for mdns code, mdns.c and mdns.h
Modifies general.c to call mdns when the queried name is in mdns name space (.local)
Miscellaneous fixes, including making arc4random thread safe on windows.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,251,2016-12-23T04:35:25Z,2017-01-18T11:02:33Z,2017-01-18T11:02:33Z,MERGED,True,526,10,8,https://github.com/huitema,Implementation of basic MDNS,6,[],https://github.com/getdnsapi/getdns/pull/251,https://github.com/huitema,1,https://github.com/getdnsapi/getdns/pull/251,"Add new files for mdns code, mdns.c and mdns.h
Modifies general.c to call mdns when the queried name is in mdns name space (.local)
Miscellaneous fixes, including making arc4random thread safe on windows.
Placing all mdns related code under ifdef HAVE _MDNS_SUPPORT to minimize impact on main branch","Add new files for mdns code, mdns.c and mdns.h
Modifies general.c to call mdns when the queried name is in mdns name space (.local)
Miscellaneous fixes, including making arc4random thread safe on windows.
Placing all mdns related code under ifdef HAVE _MDNS_SUPPORT to minimize impact on main branch",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,251,2016-12-23T04:35:25Z,2017-01-18T11:02:33Z,2017-01-18T11:02:33Z,MERGED,True,526,10,8,https://github.com/huitema,Implementation of basic MDNS,6,[],https://github.com/getdnsapi/getdns/pull/251,https://github.com/wtoorop,2,https://github.com/getdnsapi/getdns/pull/251#issuecomment-270395698,"Add new files for mdns code, mdns.c and mdns.h
Modifies general.c to call mdns when the queried name is in mdns name space (.local)
Miscellaneous fixes, including making arc4random thread safe on windows.
Placing all mdns related code under ifdef HAVE _MDNS_SUPPORT to minimize impact on main branch",Thanks Christian! Looks surprisingly clean.  Not sure if we should include this in the 1.0.0 release though... let's discuss (today or tomorrow),True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,251,2016-12-23T04:35:25Z,2017-01-18T11:02:33Z,2017-01-18T11:02:33Z,MERGED,True,526,10,8,https://github.com/huitema,Implementation of basic MDNS,6,[],https://github.com/getdnsapi/getdns/pull/251,https://github.com/huitema,3,https://github.com/getdnsapi/getdns/pull/251#issuecomment-270670533,"Add new files for mdns code, mdns.c and mdns.h
Modifies general.c to call mdns when the queried name is in mdns name space (.local)
Miscellaneous fixes, including making arc4random thread safe on windows.
Placing all mdns related code under ifdef HAVE _MDNS_SUPPORT to minimize impact on main branch","Thanks for the kind words, Willem. You are right about 1.0.0. It is defined as a stable release, and not quite the right place to add new functionality. I was targeting the development branch.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,255,2017-01-21T22:41:16Z,2017-01-21T22:42:15Z,2017-01-21T22:42:15Z,CLOSED,False,0,0,0,https://github.com/huitema,Merge pull request #6 from getdnsapi/develop,1,[],https://github.com/getdnsapi/getdns/pull/255,https://github.com/huitema,1,https://github.com/getdnsapi/getdns/pull/255,Fix potential issue in the comparison function for request by ID.,Fix potential issue in the comparison function for request by ID.,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,256,2017-01-21T22:58:03Z,2017-01-21T22:59:31Z,2017-01-22T02:14:00Z,CLOSED,False,182,2,5,https://github.com/huitema,Fixing potential bug in net_req_query_id_cmp on 64 bit architectures,6,[],https://github.com/getdnsapi/getdns/pull/256,https://github.com/huitema,1,https://github.com/getdnsapi/getdns/pull/256,"In the current dev branch, the comparison function net_req_query_id_cmp is cleverly written as:
static int
net_req_query_id_cmp(const void *id1, const void *id2)
{
return (intptr_t)id1 - (intptr_t)id2;
}
On 64 bit architectures, intptr_t is a 64 bit integer. The code will return the least significant 32 bits of the difference, which can be wrong if for some reason the difference is larger than 4GB.","In the current dev branch, the comparison function net_req_query_id_cmp is cleverly written as:
static int
net_req_query_id_cmp(const void *id1, const void *id2)
{
return (intptr_t)id1 - (intptr_t)id2;
}
On 64 bit architectures, intptr_t is a 64 bit integer. The code will return the least significant 32 bits of the difference, which can be wrong if for some reason the difference is larger than 4GB.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,256,2017-01-21T22:58:03Z,2017-01-21T22:59:31Z,2017-01-22T02:14:00Z,CLOSED,False,182,2,5,https://github.com/huitema,Fixing potential bug in net_req_query_id_cmp on 64 bit architectures,6,[],https://github.com/getdnsapi/getdns/pull/256,https://github.com/huitema,2,https://github.com/getdnsapi/getdns/pull/256#issuecomment-274293983,"In the current dev branch, the comparison function net_req_query_id_cmp is cleverly written as:
static int
net_req_query_id_cmp(const void *id1, const void *id2)
{
return (intptr_t)id1 - (intptr_t)id2;
}
On 64 bit architectures, intptr_t is a 64 bit integer. The code will return the least significant 32 bits of the difference, which can be wrong if for some reason the difference is larger than 4GB.",Oops. Pulling in way too many files. Cancelling.,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,256,2017-01-21T22:58:03Z,2017-01-21T22:59:31Z,2017-01-22T02:14:00Z,CLOSED,False,182,2,5,https://github.com/huitema,Fixing potential bug in net_req_query_id_cmp on 64 bit architectures,6,[],https://github.com/getdnsapi/getdns/pull/256,https://github.com/huitema,3,https://github.com/getdnsapi/getdns/pull/256#issuecomment-274302590,"In the current dev branch, the comparison function net_req_query_id_cmp is cleverly written as:
static int
net_req_query_id_cmp(const void *id1, const void *id2)
{
return (intptr_t)id1 - (intptr_t)id2;
}
On 64 bit architectures, intptr_t is a 64 bit integer. The code will return the least significant 32 bits of the difference, which can be wrong if for some reason the difference is larger than 4GB.","Also, I was wrong. The query ID is always set from a 16 bit number, so there cannot be any overflow. But we need an explicit cast to suppress the compiler warning.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,258,2017-02-08T12:57:02Z,2017-02-16T09:51:20Z,2017-02-16T09:51:20Z,MERGED,True,81,56,9,https://github.com/wtoorop,A special bit for the snprintf style modus operandi of fixed gldns gbuffer's,3,[],https://github.com/getdnsapi/getdns/pull/258,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/258,"Wouter requested to have this modus operandi explicitly specified before synchronizing gldns with sldns, because unbound relies on the previous behaviour of fixed size gbuffers.","Wouter requested to have this modus operandi explicitly specified before synchronizing gldns with sldns, because unbound relies on the previous behaviour of fixed size gbuffers.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,259,2017-02-15T14:56:19Z,2017-02-15T19:25:46Z,2017-02-15T19:25:46Z,MERGED,True,2018,241,14,https://github.com/wtoorop,Devel/fixed eventloop,30,[],https://github.com/getdnsapi/getdns/pull/259,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/259,Slight improvements on Neils loop.  I wonder though if we need to do lookups (with uthash) at all. pfds could have a companion list referencing the getdns_events.  This could safe us a malloc per schedule (and a free per clear).,Slight improvements on Neils loop.  I wonder though if we need to do lookups (with uthash) at all. pfds could have a companion list referencing the getdns_events.  This could safe us a malloc per schedule (and a free per clear).,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,260,2017-02-18T15:09:03Z,2017-02-18T21:59:18Z,2017-02-18T21:59:18Z,MERGED,True,583,1502,13,https://github.com/wtoorop,Devel/fixed eventloop,13,[],https://github.com/getdnsapi/getdns/pull/260,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/260,"Prevent malloc with each schedule, by maintaining an array of scheduled events that will be reallocated double the size when needed.
Miscellaneous small (but hard to pin-point!) scheduling bugs","Prevent malloc with each schedule, by maintaining an array of scheduled events that will be reallocated double the size when needed.
Miscellaneous small (but hard to pin-point!) scheduling bugs",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,261,2017-02-23T16:01:56Z,2017-02-27T22:25:16Z,2017-04-11T14:27:06Z,MERGED,True,27,11,5,https://github.com/saradickinson,Feature/stubby updates,7,[],https://github.com/getdnsapi/getdns/pull/261,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/261,"New return code for when a query can't be scheduled because no upstreams are valid.
Update the pin for the Sinodun DNS-over-TLS servers.
Minor logging updates.","New return code for when a query can't be scheduled because no upstreams are valid.
Update the pin for the Sinodun DNS-over-TLS servers.
Minor logging updates.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,262,2017-02-28T16:10:13Z,2017-03-01T00:01:43Z,2017-03-01T00:01:43Z,MERGED,True,108,11,3,https://github.com/wtoorop,Features/base64 bindata,2,[],https://github.com/getdnsapi/getdns/pull/262,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/262,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,263,2017-03-04T00:58:11Z,2017-03-20T21:15:59Z,2017-03-20T21:15:59Z,MERGED,True,5928,996,41,https://github.com/huitema,First implementation of the full MDNS client,28,[],https://github.com/getdnsapi/getdns/pull/263,https://github.com/huitema,1,https://github.com/getdnsapi/getdns/pull/263,"This implementation of MDNS uses multicast, and a local copy of ""lruhash"". The unit tests work, MDNS queries do get resolved. There is still lots of work to do, including aligning the ""offical"" version of ""lruhash"", but I would really appreciate feedback on the code.","This implementation of MDNS uses multicast, and a local copy of ""lruhash"". The unit tests work, MDNS queries do get resolved. There is still lots of work to do, including aligning the ""offical"" version of ""lruhash"", but I would really appreciate feedback on the code.",True,{'THUMBS_UP': ['https://github.com/vttale']}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,263,2017-03-04T00:58:11Z,2017-03-20T21:15:59Z,2017-03-20T21:15:59Z,MERGED,True,5928,996,41,https://github.com/huitema,First implementation of the full MDNS client,28,[],https://github.com/getdnsapi/getdns/pull/263,https://github.com/wtoorop,2,https://github.com/getdnsapi/getdns/pull/263#issuecomment-284423547,"This implementation of MDNS uses multicast, and a local copy of ""lruhash"". The unit tests work, MDNS queries do get resolved. There is still lots of work to do, including aligning the ""offical"" version of ""lruhash"", but I would really appreciate feedback on the code.",Thank you Christian!  I am reviewing.,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,263,2017-03-04T00:58:11Z,2017-03-20T21:15:59Z,2017-03-20T21:15:59Z,MERGED,True,5928,996,41,https://github.com/huitema,First implementation of the full MDNS client,28,[],https://github.com/getdnsapi/getdns/pull/263,https://github.com/wtoorop,3,https://github.com/getdnsapi/getdns/pull/263#issuecomment-286688202,"This implementation of MDNS uses multicast, and a local copy of ""lruhash"". The unit tests work, MDNS queries do get resolved. There is still lots of work to do, including aligning the ""offical"" version of ""lruhash"", but I would really appreciate feedback on the code.","Thanks Christian,  I'll await your lruhash_insert_conditional and  function (and the move of lru_demote to lruhash.c), let Wouter review, and then merge.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,264,2017-03-17T11:29:58Z,2017-03-20T21:25:53Z,2017-04-11T14:26:32Z,MERGED,True,152,32,8,https://github.com/saradickinson,Feature/parallel upstreams,6,[],https://github.com/getdnsapi/getdns/pull/264,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/264,"Needs review and a bit more testing before merging.
Also not sure about making the new mode the default for stubby.conf?","Needs review and a bit more testing before merging.
Also not sure about making the new mode the default for stubby.conf?",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,265,2017-03-17T17:37:03Z,2017-03-20T21:25:53Z,2018-02-09T10:54:29Z,MERGED,True,253,43,9,https://github.com/saradickinson,Feature/new settings,10,[],https://github.com/getdnsapi/getdns/pull/265,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/265,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,266,2017-03-20T15:16:29Z,2017-03-20T15:27:34Z,2017-03-20T15:27:34Z,MERGED,True,2802,58,26,https://github.com/wtoorop,Features/limit outstanding queries,8,[],https://github.com/getdnsapi/getdns/pull/266,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/266,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,267,2017-03-20T21:08:17Z,2017-03-20T21:15:58Z,2017-03-20T21:15:58Z,MERGED,True,5960,790,41,https://github.com/wtoorop,Features/mdns client,33,[],https://github.com/getdnsapi/getdns/pull/267,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/267,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,268,2017-03-22T23:07:11Z,2017-03-23T12:39:56Z,2017-03-23T12:39:57Z,MERGED,True,10,7,4,https://github.com/huitema,Minor fixes in MDNS code plus warning suppression.,2,[],https://github.com/getdnsapi/getdns/pull/268,https://github.com/huitema,1,https://github.com/getdnsapi/getdns/pull/268,"Turns out that after aligning with the develop branch, the MDNS code was not working anymore. I did three fixes: set the owner attribute of the MDNS netreq to the triggering dnsreq (it was null); set the dns query type to ""is_dns_query = 1"" even for MDNS queries; and set the event timer to 1000 times the value in the context, to account for the difference between milliseconds (in the set timeout API) and microseconds (in the event loop API).
Also, minor work to suppress the ""cast 64 as 32"" warnings when storing timeout values in dict object.","Turns out that after aligning with the develop branch, the MDNS code was not working anymore. I did three fixes: set the owner attribute of the MDNS netreq to the triggering dnsreq (it was null); set the dns query type to ""is_dns_query = 1"" even for MDNS queries; and set the event timer to 1000 times the value in the context, to account for the difference between milliseconds (in the set timeout API) and microseconds (in the event loop API).
Also, minor work to suppress the ""cast 64 as 32"" warnings when storing timeout values in dict object.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,268,2017-03-22T23:07:11Z,2017-03-23T12:39:56Z,2017-03-23T12:39:57Z,MERGED,True,10,7,4,https://github.com/huitema,Minor fixes in MDNS code plus warning suppression.,2,[],https://github.com/getdnsapi/getdns/pull/268,https://github.com/wtoorop,2,https://github.com/getdnsapi/getdns/pull/268#issuecomment-288699631,"Turns out that after aligning with the develop branch, the MDNS code was not working anymore. I did three fixes: set the owner attribute of the MDNS netreq to the triggering dnsreq (it was null); set the dns query type to ""is_dns_query = 1"" even for MDNS queries; and set the event timer to 1000 times the value in the context, to account for the difference between milliseconds (in the set timeout API) and microseconds (in the event loop API).
Also, minor work to suppress the ""cast 64 as 32"" warnings when storing timeout values in dict object.","Christian, this cannot be.  I think this might be caused by another mistake I made.  I do a pull request on your branch for you to review.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,275,2017-03-26T00:46:03Z,2017-03-26T00:58:17Z,2017-04-06T13:59:18Z,MERGED,True,28,2,5,https://github.com/wtoorop,Have the peer certificate in call_reporting,5,[],https://github.com/getdnsapi/getdns/pull/275,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/275,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,276,2017-03-26T15:11:02Z,2017-03-26T15:20:49Z,2017-03-26T15:20:49Z,MERGED,True,20,0,3,https://github.com/huitema,Fixing the select and poll event loops for Windows,2,[],https://github.com/getdnsapi/getdns/pull/276,https://github.com/huitema,1,https://github.com/getdnsapi/getdns/pull/276,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,278,2017-03-26T19:47:03Z,2017-03-26T19:53:54Z,2017-03-26T19:53:54Z,MERGED,True,1,1,1,https://github.com/dkg,getdns-query: S is no longer a valid transport label.,1,[],https://github.com/getdnsapi/getdns/pull/278,https://github.com/dkg,1,https://github.com/getdnsapi/getdns/pull/278,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,279,2017-03-26T20:06:36Z,2017-03-27T13:19:32Z,2017-03-27T13:19:32Z,MERGED,True,10,6,3,https://github.com/dkg,Implement sensible default padding policy.,1,[],https://github.com/getdnsapi/getdns/pull/279,https://github.com/dkg,1,https://github.com/getdnsapi/getdns/pull/279,"This commit changes the semantics of tls_query_padding_blocksize()
slightly.  Where previously both 0 and 1 meant ""no padding"", this
commit changes 1 to mean ""pad using a sensible policy"".
At NDSS 2017's DNS privacy workshop, I presented an empirical study of
DNS padding policies:
https://www.internetsociety.org/events/ndss-symposium/ndss-symposium-2017/dns-privacy-workshop-2017-programme#session3
The slide deck is here:
https://dns.cmrg.net/ndss2017-dprive-empirical-DNS-traffic-size.pdf
The resulting recommendation from the research is that a simple
padding policy is relatively cheap and still protective of metadata
when DNS traffic is encrypted:

queries should be padded to a multiple of 128 octets
responses should be padded to a multiple of 468 octets

Since getdns is only currently doing queries over tls, we only have to
implement the first part of this policy :)","This commit changes the semantics of tls_query_padding_blocksize()
slightly.  Where previously both 0 and 1 meant ""no padding"", this
commit changes 1 to mean ""pad using a sensible policy"".
At NDSS 2017's DNS privacy workshop, I presented an empirical study of
DNS padding policies:
https://www.internetsociety.org/events/ndss-symposium/ndss-symposium-2017/dns-privacy-workshop-2017-programme#session3
The slide deck is here:
https://dns.cmrg.net/ndss2017-dprive-empirical-DNS-traffic-size.pdf
The resulting recommendation from the research is that a simple
padding policy is relatively cheap and still protective of metadata
when DNS traffic is encrypted:

queries should be padded to a multiple of 128 octets
responses should be padded to a multiple of 468 octets

Since getdns is only currently doing queries over tls, we only have to
implement the first part of this policy :)",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,280,2017-04-02T17:53:11Z,2017-04-02T17:54:04Z,2017-04-02T17:54:04Z,CLOSED,False,0,0,0,https://github.com/huitema,Merge pull request #11 from getdnsapi/develop,1,[],https://github.com/getdnsapi/getdns/pull/280,https://github.com/huitema,1,https://github.com/getdnsapi/getdns/pull/280,Getting latest fixes,Getting latest fixes,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,281,2017-04-02T18:03:54Z,2017-04-02T18:04:14Z,2017-04-02T18:04:14Z,CLOSED,False,0,0,0,https://github.com/huitema,More synchronization,2,[],https://github.com/getdnsapi/getdns/pull/281,https://github.com/huitema,1,https://github.com/getdnsapi/getdns/pull/281,Did not get the fixes to the event loops in previous pull.,Did not get the fixes to the event loops in previous pull.,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,282,2017-04-06T09:48:10Z,2017-04-06T13:55:25Z,2017-04-06T13:55:25Z,MERGED,True,173,14,12,https://github.com/wtoorop,Bugfix/issue 272,6,[],https://github.com/getdnsapi/getdns/pull/282,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/282,Deal with issue #272,Deal with issue #272,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,283,2017-04-12T10:37:04Z,2017-04-12T20:53:21Z,2017-04-12T20:53:21Z,MERGED,True,1219,77,31,https://github.com/wtoorop,Devel/doxygen,7,[],https://github.com/getdnsapi/getdns/pull/283,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/283,Don't merge yet!  More commits are coming...,Don't merge yet!  More commits are coming...,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,284,2017-04-12T14:35:57Z,2017-04-12T20:53:36Z,2018-03-10T14:33:24Z,MERGED,True,2,2,1,https://github.com/Hrish1,Some mispelled words corrected,1,[],https://github.com/getdnsapi/getdns/pull/284,https://github.com/Hrish1,1,https://github.com/getdnsapi/getdns/pull/284,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,285,2017-04-12T17:21:17Z,2017-04-12T20:52:59Z,2017-06-01T10:41:17Z,MERGED,True,6,0,1,https://github.com/saradickinson,Feature/update stubby.conf,2,[],https://github.com/getdnsapi/getdns/pull/285,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/285,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,298,2017-04-20T15:47:59Z,2017-04-24T12:01:27Z,2017-06-01T10:41:35Z,MERGED,True,19,21,1,https://github.com/saradickinson,Minor Update to README,2,[],https://github.com/getdnsapi/getdns/pull/298,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/298,"Make the great new Doxygen documentation more prominent
Update Stubby section","Make the great new Doxygen documentation more prominent
Update Stubby section",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,299,2017-04-27T19:13:27Z,2017-05-01T08:34:27Z,2017-05-01T08:34:27Z,MERGED,True,30,0,3,https://github.com/dkg,Provide guidance for integration with systemd,1,[],https://github.com/getdnsapi/getdns/pull/299,https://github.com/dkg,1,https://github.com/getdnsapi/getdns/pull/299,"Stubby needs to be able to bind to privileged ports, but otherwise
shouldn't need root capabilities.
systemd makes it easy to set the minimal capability set while
otherwise launching the daemon as a non-privileged user.
Ship these files upstream for distributors to deploy.","Stubby needs to be able to bind to privileged ports, but otherwise
shouldn't need root capabilities.
systemd makes it easy to set the minimal capability set while
otherwise launching the daemon as a non-privileged user.
Ship these files upstream for distributors to deploy.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,301,2017-05-02T10:58:01Z,2017-05-02T12:26:11Z,2017-05-02T13:22:42Z,MERGED,True,74,136,7,https://github.com/wtoorop,Devel/empty rdata,3,[],https://github.com/getdnsapi/getdns/pull/301,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/301,"Review rr-dict processing.

Handle IPSECKEY rdata fields correctly for gateway_type 0
Fix unit tests for correct IPSECKEY rdata fields
Remove unused special rdata field functions","Review rr-dict processing.

Handle IPSECKEY rdata fields correctly for gateway_type 0
Fix unit tests for correct IPSECKEY rdata fields
Remove unused special rdata field functions",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,302,2017-05-02T14:35:42Z,2017-05-02T15:58:04Z,2017-05-02T15:58:04Z,MERGED,True,342,62,18,https://github.com/wtoorop,Devel/rr types,12,[],https://github.com/getdnsapi/getdns/pull/302,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/302,"Unit test to detect missing RR types
Added missing RR types
Corrected and added rdata for several types
gldns code to parse TSIG and TKEY from Wouter","Unit test to detect missing RR types
Added missing RR types
Corrected and added rdata for several types
gldns code to parse TSIG and TKEY from Wouter",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,304,2017-05-10T21:14:38Z,2017-05-19T10:54:06Z,2017-08-24T09:43:47Z,MERGED,True,212,97,28,https://github.com/wtoorop,Devel/parallel builds,7,[],https://github.com/getdnsapi/getdns/pull/304,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/304,And parallel tpkg tests,And parallel tpkg tests,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,305,2017-05-22T07:49:43Z,2017-05-23T13:29:11Z,2017-05-23T13:29:11Z,MERGED,True,1994,16,11,https://github.com/hodarh,Coverage,5,[],https://github.com/getdnsapi/getdns/pull/305,https://github.com/hodarh,1,https://github.com/getdnsapi/getdns/pull/305,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,307,2017-06-02T11:47:05Z,2017-06-08T09:44:26Z,2017-08-02T11:40:18Z,MERGED,True,97,12,3,https://github.com/saradickinson,1) Add a stubby-setdns script (for MAC OS X only at the moment) to su…,2,[],https://github.com/getdnsapi/getdns/pull/307,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/307,"…pport Homebrew formula

Remove the OARC server from the default config. So now only include the servers that commit to not logging user data. Can make this clearer once we have a yaml config file.
Update makefile to include stubby.conf and stubby-setdns in dist tarball","…pport Homebrew formula

Remove the OARC server from the default config. So now only include the servers that commit to not logging user data. Can make this clearer once we have a yaml config file.
Update makefile to include stubby.conf and stubby-setdns in dist tarball",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,308,2017-06-14T13:39:15Z,2017-06-15T19:35:13Z,2017-06-15T19:35:13Z,MERGED,True,63,32,6,https://github.com/wtoorop,Devel/issue 306,6,[],https://github.com/getdnsapi/getdns/pull/308,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/308,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,309,2017-06-26T14:58:54Z,2017-06-28T09:37:15Z,2017-06-28T20:56:29Z,MERGED,True,2,2,1,https://github.com/wtoorop,Respond to socket errors,1,[],https://github.com/getdnsapi/getdns/pull/309,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/309,Should enable fallback on Macos,Should enable fallback on Macos,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,309,2017-06-26T14:58:54Z,2017-06-28T09:37:15Z,2017-06-28T20:56:29Z,MERGED,True,2,2,1,https://github.com/wtoorop,Respond to socket errors,1,[],https://github.com/getdnsapi/getdns/pull/309,https://github.com/saradickinson,2,https://github.com/getdnsapi/getdns/pull/309#issuecomment-311104716,Should enable fallback on Macos,"Tested with and without TCP fast open, against a reset and an unresponsive upstream and works.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,309,2017-06-26T14:58:54Z,2017-06-28T09:37:15Z,2017-06-28T20:56:29Z,MERGED,True,2,2,1,https://github.com/wtoorop,Respond to socket errors,1,[],https://github.com/getdnsapi/getdns/pull/309,https://github.com/wtoorop,3,https://github.com/getdnsapi/getdns/pull/309#issuecomment-311609117,Should enable fallback on Macos,"This is a pretty solid fix actually.
I'll merge myself...",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,310,2017-06-26T22:25:16Z,2017-06-28T20:55:46Z,2017-06-28T20:55:56Z,MERGED,True,294,160,11,https://github.com/wtoorop,A configurable log function,9,[],https://github.com/getdnsapi/getdns/pull/310,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/310,"Currently used only for DAEMON_DEBUG
Just an idea for Sara to review","Currently used only for DAEMON_DEBUG
Just an idea for Sara to review",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,310,2017-06-26T22:25:16Z,2017-06-28T20:55:46Z,2017-06-28T20:55:56Z,MERGED,True,294,160,11,https://github.com/wtoorop,A configurable log function,9,[],https://github.com/getdnsapi/getdns/pull/310,https://github.com/wtoorop,2,https://github.com/getdnsapi/getdns/pull/310#issuecomment-311206052,"Currently used only for DAEMON_DEBUG
Just an idea for Sara to review","Checks fail because of consistency issues which can be fixed easily.
I created a separate repo for stubby with a dependency on getdns with getdns_context_set_logfunc()",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,310,2017-06-26T22:25:16Z,2017-06-28T20:55:46Z,2017-06-28T20:55:56Z,MERGED,True,294,160,11,https://github.com/wtoorop,A configurable log function,9,[],https://github.com/getdnsapi/getdns/pull/310,https://github.com/saradickinson,3,https://github.com/getdnsapi/getdns/pull/310#issuecomment-311655503,"Currently used only for DAEMON_DEBUG
Just an idea for Sara to review","I like this idea  :-)
Quick test and I don't get the IP address of the upstream output...
Also - I might classify the daemon messages a Info rather than debug? Or even something else - they are intended for users not developers.. Shall I do a detailed review?",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,310,2017-06-26T22:25:16Z,2017-06-28T20:55:46Z,2017-06-28T20:55:56Z,MERGED,True,294,160,11,https://github.com/wtoorop,A configurable log function,9,[],https://github.com/getdnsapi/getdns/pull/310,https://github.com/wtoorop,4,https://github.com/getdnsapi/getdns/pull/310#issuecomment-311657761,"Currently used only for DAEMON_DEBUG
Just an idea for Sara to review","Yes please, I'd also like to mention that the separate stubby repository, https://github.com/getdnsapi/stubby, tests for this function and if it doesn't find it complains that the version of getdns should be 1.1.2 or highter.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,310,2017-06-26T22:25:16Z,2017-06-28T20:55:46Z,2017-06-28T20:55:56Z,MERGED,True,294,160,11,https://github.com/wtoorop,A configurable log function,9,[],https://github.com/getdnsapi/getdns/pull/310,https://github.com/saradickinson,5,https://github.com/getdnsapi/getdns/pull/310#issuecomment-311724308,"Currently used only for DAEMON_DEBUG
Just an idea for Sara to review","This looks good, a couple of nits which can be addressed later but I did do a pull request against your branch to fix the IP address output.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,311,2017-06-27T01:29:14Z,2017-06-28T19:28:31Z,2017-06-28T19:28:31Z,MERGED,True,42,0,1,https://github.com/MelindaShore,Basic Dockerfile for stubby.,1,[],https://github.com/getdnsapi/getdns/pull/311,https://github.com/MelindaShore,1,https://github.com/getdnsapi/getdns/pull/311,"This is a really basic Dockerfile for a stubby container.  Run with the command line
docker run -i -t -p 53:53/udp --network=""host""  stubby:latest
assuming that you've assigned the ""stubby:latest"" tag when building.  (Don't really love using host networking but I figure it's simpler for users than setting up port maps).","This is a really basic Dockerfile for a stubby container.  Run with the command line
docker run -i -t -p 53:53/udp --network=""host""  stubby:latest
assuming that you've assigned the ""stubby:latest"" tag when building.  (Don't really love using host networking but I figure it's simpler for users than setting up port maps).",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,311,2017-06-27T01:29:14Z,2017-06-28T19:28:31Z,2017-06-28T19:28:31Z,MERGED,True,42,0,1,https://github.com/MelindaShore,Basic Dockerfile for stubby.,1,[],https://github.com/getdnsapi/getdns/pull/311,https://github.com/MelindaShore,2,https://github.com/getdnsapi/getdns/pull/311#issuecomment-311255011,"This is a really basic Dockerfile for a stubby container.  Run with the command line
docker run -i -t -p 53:53/udp --network=""host""  stubby:latest
assuming that you've assigned the ""stubby:latest"" tag when building.  (Don't really love using host networking but I figure it's simpler for users than setting up port maps).","On 6/26/17 8:34 PM, Joel Purra wrote:
 Versions for both getdns and stubby are locked down, pointing to source
 files and a git tag respectively. Seems as if the package might need
 more maintenance that way, instead of running the latest (stable)
 version available from the package manager (|apt-get|). Perhaps users
 will ""get stuck"" on v1.1.1 this way?
I actually think a packaged stubby is going to be easiest for
users, albeit more effort on the team's part to get universal
(or near universal) coverage.  I like Docker for getting clean
build environments and for managing a group of services as
a unit, but I'm kind of lukewarm on distributing images as
a way of getting software out there.  Which is a windy way
of saying that I'm good with whatever people find useful.

Melinda",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,311,2017-06-27T01:29:14Z,2017-06-28T19:28:31Z,2017-06-28T19:28:31Z,MERGED,True,42,0,1,https://github.com/MelindaShore,Basic Dockerfile for stubby.,1,[],https://github.com/getdnsapi/getdns/pull/311,https://github.com/wtoorop,3,https://github.com/getdnsapi/getdns/pull/311#issuecomment-311607947,"This is a really basic Dockerfile for a stubby container.  Run with the command line
docker run -i -t -p 53:53/udp --network=""host""  stubby:latest
assuming that you've assigned the ""stubby:latest"" tag when building.  (Don't really love using host networking but I figure it's simpler for users than setting up port maps).","@About the apt-get approach... is it possible with docker to use the or operator?
If it is, you might do something like:
&& ( apt-get install stubby \
   || ( cd /usr/src \
      && git clone https://github.com/getdnsapi/getdns.git \
      && cd /usr/src/getdns \
      && git checkout master \
      && ... compile and install stubby ...
      ) \
   ) \
&& mkdir -p /etc/unbound \
&& cd /etc/unbound \
&& wget http://www.nomountain.net/getdns-root.key

To have a recipe that tries apt-get first and falls back to checkout/compile if that fails?
Also, not sure about fetching the root trust anchor from nomountain.net :-)
When me work on zero-conf trust anchor is done, getdns/stubby can do that itself; otherwise use unbound-anchor to get it from icann maybe?",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,311,2017-06-27T01:29:14Z,2017-06-28T19:28:31Z,2017-06-28T19:28:31Z,MERGED,True,42,0,1,https://github.com/MelindaShore,Basic Dockerfile for stubby.,1,[],https://github.com/getdnsapi/getdns/pull/311,https://github.com/MelindaShore,4,https://github.com/getdnsapi/getdns/pull/311#issuecomment-311667714,"This is a really basic Dockerfile for a stubby container.  Run with the command line
docker run -i -t -p 53:53/udp --network=""host""  stubby:latest
assuming that you've assigned the ""stubby:latest"" tag when building.  (Don't really love using host networking but I figure it's simpler for users than setting up port maps).","On 6/28/17 1:32 AM, wtoorop wrote:
 Also, not sure about fetching the root trust anchor from nomountain.net :-)
 When me work on zero-conf trust anchor is done, getdns/stubby can do
 that itself; otherwise use unbound-anchor to get it from icann maybe?
This is where I ran into an issue with unbound-anchor's
non-zero exit - it blows up docker build.  I can add a
different workaround.

Also, to be clear - we'll be the only people doing
docker builds, most likely.  Users will be downloading
the image from Docker hub.  This is a way to build it
without being blocked on getting it into distributions.

Melinda",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,312,2017-06-28T17:01:27Z,2017-06-28T18:40:13Z,2017-06-28T20:56:41Z,MERGED,True,0,5,1,https://github.com/saradickinson,Fix for outputting the address string in the DAEMON log,1,[],https://github.com/getdnsapi/getdns/pull/312,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/312,Need access to the upstream_addr,Need access to the upstream_addr,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,313,2017-06-29T06:13:48Z,2017-08-18T13:52:49Z,2017-08-18T13:52:49Z,MERGED,True,2,2,1,https://github.com/MelindaShore,Modified Dockerfile to check out getdns master ,1,[],https://github.com/getdnsapi/getdns/pull/313,https://github.com/MelindaShore,1,https://github.com/getdnsapi/getdns/pull/313,and to use unbound-anchor to install dnssec trust root,and to use unbound-anchor to install dnssec trust root,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,316,2017-07-15T15:50:47Z,2017-08-18T13:55:57Z,2017-08-18T13:55:57Z,MERGED,True,101,12,3,https://github.com/wtoorop,Devel/roadblocks and valchains,4,[],https://github.com/getdnsapi/getdns/pull/316,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/316,Fallback to full recursion when getting the chain data too,Fallback to full recursion when getting the chain data too,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,317,2017-07-16T08:54:07Z,2017-08-24T09:37:10Z,2017-08-24T09:37:10Z,MERGED,True,11,6,1,https://github.com/paulehoffman,Make building instructions clearer,1,[],https://github.com/getdnsapi/getdns/pull/317,https://github.com/paulehoffman,1,https://github.com/getdnsapi/getdns/pull/317,... and add packages for Ubuntu.,... and add packages for Ubuntu.,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,321,2017-07-31T21:58:49Z,2017-08-18T13:53:24Z,2017-08-18T13:53:24Z,MERGED,True,6,2,1,https://github.com/neilcook,Stub fixes,2,[],https://github.com/getdnsapi/getdns/pull/321,https://github.com/neilcook,1,https://github.com/getdnsapi/getdns/pull/321,"This PR fixes a crash bug (array out of bounds trashing the heap) and a subtle error causing getdns to close sockets that don't belong to it. They fix the issues reported in issue #320
Both of these are pretty high-priority fixes, at least for me, as we have customers using the getdns libraries (as part of powerdns/weakforced), and they found the issues. I just switched to building packages based on the current (1.1.2) release, but I'll have to switch back to building from my own fork until this makes it into a release.","This PR fixes a crash bug (array out of bounds trashing the heap) and a subtle error causing getdns to close sockets that don't belong to it. They fix the issues reported in issue #320
Both of these are pretty high-priority fixes, at least for me, as we have customers using the getdns libraries (as part of powerdns/weakforced), and they found the issues. I just switched to building packages based on the current (1.1.2) release, but I'll have to switch back to building from my own fork until this makes it into a release.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,321,2017-07-31T21:58:49Z,2017-08-18T13:53:24Z,2017-08-18T13:53:24Z,MERGED,True,6,2,1,https://github.com/neilcook,Stub fixes,2,[],https://github.com/getdnsapi/getdns/pull/321,https://github.com/saradickinson,2,https://github.com/getdnsapi/getdns/pull/321#issuecomment-319367655,"This PR fixes a crash bug (array out of bounds trashing the heap) and a subtle error causing getdns to close sockets that don't belong to it. They fix the issues reported in issue #320
Both of these are pretty high-priority fixes, at least for me, as we have customers using the getdns libraries (as part of powerdns/weakforced), and they found the issues. I just switched to building packages based on the current (1.1.2) release, but I'll have to switch back to building from my own fork until this makes it into a release.",Just a heads up on this. Willem who normally does the releases is currently away and is back on the 14th August so I don't believe the next release will be before then.,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,324,2017-08-04T13:18:12Z,2017-08-18T13:56:14Z,2017-09-04T15:02:42Z,MERGED,True,0,3,1,https://github.com/saradickinson,Remove mention of using the second bit in set_from_os to init OpenSSL…,1,[],https://github.com/getdnsapi/getdns/pull/324,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/324,… as this no longer applies,… as this no longer applies,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,325,2017-08-04T13:32:10Z,2017-08-18T13:56:24Z,2017-09-04T15:02:55Z,MERGED,True,2,2,2,https://github.com/saradickinson,Minor updates on return_call_reporting. Fix the name in the API spec …,1,[],https://github.com/getdnsapi/getdns/pull/325,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/325,"…and add a know issue that it isn’t fully supported in recursive mode.
Also remove known issue that stub doesn’t limit in outstanding queries as this is now supported.","…and add a know issue that it isn’t fully supported in recursive mode.
Also remove known issue that stub doesn’t limit in outstanding queries as this is now supported.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,326,2017-08-04T13:50:28Z,2017-08-18T13:57:21Z,2017-09-04T15:02:32Z,MERGED,True,4,4,1,https://github.com/saradickinson,Fix all the outdated links to wiki pages in the README.md,1,[],https://github.com/getdnsapi/getdns/pull/326,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/326,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,328,2017-08-18T17:00:50Z,2017-08-22T10:05:42Z,2017-09-04T15:02:09Z,MERGED,True,6,7,1,https://github.com/saradickinson,Fix issue on macOX 10.10 where TCP fast open is detected but not impl…,1,[],https://github.com/getdnsapi/getdns/pull/328,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/328,"…emented causing TCP to fail. The fix allows fallback to regular TCP in this case and is also more robust for cases where connectx() fails for some reason.
This has been tested on 10.12 both with and without TCP fastopen enabled.","…emented causing TCP to fail. The fix allows fallback to regular TCP in this case and is also more robust for cases where connectx() fails for some reason.
This has been tested on 10.12 both with and without TCP fastopen enabled.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,328,2017-08-18T17:00:50Z,2017-08-22T10:05:42Z,2017-09-04T15:02:09Z,MERGED,True,6,7,1,https://github.com/saradickinson,Fix issue on macOX 10.10 where TCP fast open is detected but not impl…,1,[],https://github.com/getdnsapi/getdns/pull/328,https://github.com/ilovezfs,2,https://github.com/getdnsapi/getdns/pull/328#issuecomment-323413154,"…emented causing TCP to fail. The fix allows fallback to regular TCP in this case and is also more robust for cases where connectx() fails for some reason.
This has been tested on 10.12 both with and without TCP fastopen enabled.",s/macOX/macOS/ or s/macOX/OS X/,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,328,2017-08-18T17:00:50Z,2017-08-22T10:05:42Z,2017-09-04T15:02:09Z,MERGED,True,6,7,1,https://github.com/saradickinson,Fix issue on macOX 10.10 where TCP fast open is detected but not impl…,1,[],https://github.com/getdnsapi/getdns/pull/328,https://github.com/ilovezfs,3,https://github.com/getdnsapi/getdns/pull/328#issuecomment-323414500,"…emented causing TCP to fail. The fix allows fallback to regular TCP in this case and is also more robust for cases where connectx() fails for some reason.
This has been tested on 10.12 both with and without TCP fastopen enabled.",Would it be preferable to determine in configure that it's not actually implemented?,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,329,2017-08-22T10:26:20Z,2017-08-23T14:25:28Z,2017-08-24T09:43:19Z,MERGED,True,101,244,15,https://github.com/wtoorop,Devel/without stubby,6,[],https://github.com/getdnsapi/getdns/pull/329,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/329,"Compile getdns default without stubby, but if it is compiled with stubby use the stubby from the stubby repo (added as submodule)","Compile getdns default without stubby, but if it is compiled with stubby use the stubby from the stubby repo (added as submodule)",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,329,2017-08-22T10:26:20Z,2017-08-23T14:25:28Z,2017-08-24T09:43:19Z,MERGED,True,101,244,15,https://github.com/wtoorop,Devel/without stubby,6,[],https://github.com/getdnsapi/getdns/pull/329,https://github.com/saradickinson,2,https://github.com/getdnsapi/getdns/pull/329#issuecomment-324245149,"Compile getdns default without stubby, but if it is compiled with stubby use the stubby from the stubby repo (added as submodule)","Willem - this looks great :-)
I wonder if we should remove the systemd folder and add it to the Stubby repo too in this release? Also, I think a few tweaks are needed to the README.md?
I think the Dockerfile will need updating too because it is stubby specific. We should probably have a pure getdns one in the getdns repo and a stubby one in the stubby repo. I can take this action if you like.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,330,2017-09-06T10:08:02Z,2017-09-06T13:41:44Z,2017-10-27T08:42:20Z,MERGED,True,71,45,4,https://github.com/saradickinson,First pass at fixing problems when connections to servers are lost.,1,[],https://github.com/getdnsapi/getdns/pull/330,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/330,"Need to reset connection state if connections fail at setup and on read/write if there are no more messages queued.
This means we will back-off servers that fail, so we should think about using a shorter backoff default in stubby
because otherwise temporarily loss of the network connection will mean having to restart stubby.
Also some minor changes to logging.","Need to reset connection state if connections fail at setup and on read/write if there are no more messages queued.
This means we will back-off servers that fail, so we should think about using a shorter backoff default in stubby
because otherwise temporarily loss of the network connection will mean having to restart stubby.
Also some minor changes to logging.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,330,2017-09-06T10:08:02Z,2017-09-06T13:41:44Z,2017-10-27T08:42:20Z,MERGED,True,71,45,4,https://github.com/saradickinson,First pass at fixing problems when connections to servers are lost.,1,[],https://github.com/getdnsapi/getdns/pull/330,https://github.com/saradickinson,2,https://github.com/getdnsapi/getdns/pull/330#issuecomment-327438981,"Need to reset connection state if connections fail at setup and on read/write if there are no more messages queued.
This means we will back-off servers that fail, so we should think about using a shorter backoff default in stubby
because otherwise temporarily loss of the network connection will mean having to restart stubby.
Also some minor changes to logging.","@wtoorop Could you please review this? After the initial changes I saw some intermittent crashes when testing which I think are all fixed now, but it is hard to test every single code path....",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,330,2017-09-06T10:08:02Z,2017-09-06T13:41:44Z,2017-10-27T08:42:20Z,MERGED,True,71,45,4,https://github.com/saradickinson,First pass at fixing problems when connections to servers are lost.,1,[],https://github.com/getdnsapi/getdns/pull/330,https://github.com/wtoorop,3,https://github.com/getdnsapi/getdns/pull/330#issuecomment-327473459,"Need to reset connection state if connections fail at setup and on read/write if there are no more messages queued.
This means we will back-off servers that fail, so we should think about using a shorter backoff default in stubby
because otherwise temporarily loss of the network connection will mean having to restart stubby.
Also some minor changes to logging.","Time based backoff feels rather fragile in general to be honest.
Why not have preference based backoff like what we have with UDP?",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,330,2017-09-06T10:08:02Z,2017-09-06T13:41:44Z,2017-10-27T08:42:20Z,MERGED,True,71,45,4,https://github.com/saradickinson,First pass at fixing problems when connections to servers are lost.,1,[],https://github.com/getdnsapi/getdns/pull/330,https://github.com/saradickinson,4,https://github.com/getdnsapi/getdns/pull/330#issuecomment-327480300,"Need to reset connection state if connections fail at setup and on read/write if there are no more messages queued.
This means we will back-off servers that fail, so we should think about using a shorter backoff default in stubby
because otherwise temporarily loss of the network connection will mean having to restart stubby.
Also some minor changes to logging.","It was originally implemented like this because RFC7858 specified a time based backoff if the server did not respond. It is slightly different because with UDP you only have a timeout but with TCP you can tell if the server is not listening or the handshake fails. If we are not in round robin mode we do use the connection statistics to choose the next upstream, but in round robin it is time based at the moment. The problem is really telling the difference between one server being off line and all of them being in accessible because your network connection is down. I thought about using some other test to decide to start re-trying the servers but that seemed overkill.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,330,2017-09-06T10:08:02Z,2017-09-06T13:41:44Z,2017-10-27T08:42:20Z,MERGED,True,71,45,4,https://github.com/saradickinson,First pass at fixing problems when connections to servers are lost.,1,[],https://github.com/getdnsapi/getdns/pull/330,https://github.com/wtoorop,5,https://github.com/getdnsapi/getdns/pull/330#issuecomment-327486500,"Need to reset connection state if connections fail at setup and on read/write if there are no more messages queued.
This means we will back-off servers that fail, so we should think about using a shorter backoff default in stubby
because otherwise temporarily loss of the network connection will mean having to restart stubby.
Also some minor changes to logging.","How about incremental back off then?
Start with 1 second, then multiply with a factor; say 2, to schedule next back off time.
With a maximum of 1 minute or so?
B.t.w. the patch works well for me, so I'll merge.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,332,2017-09-12T17:22:17Z,2017-09-22T13:40:54Z,2017-09-22T13:40:54Z,MERGED,True,1174,15,19,https://github.com/banburybill,Add YAML configuration option.,16,[],https://github.com/getdnsapi/getdns/pull/332,https://github.com/banburybill,1,https://github.com/getdnsapi/getdns/pull/332,"Add new extra functions getdns_yaml2(dict|list|bindata|value)(). These are like their getdns_str2() counterparts, but take YAML input rather than JSON.
YAML introduces a new dependency, on libyaml. YAML can be disabled at configuration time, in which case the dependency is removed.
Modify getdns_query such that if a configuration file name includes "".yaml"" it will be processed as a YAML configuration, not a JSON configuration.
Internally, getdns_yaml2*() work by passing the YAML string through a simple translation to JSON. At present, this translation assumes that configuration is the only use case, and so will error if the outer layer of the YAML input is not a map. This in effect means that at present all getdns_yaml2*() functions apart from getdns_yaml2dict() will give an error on the YAML translation to JSON.","Add new extra functions getdns_yaml2(dict|list|bindata|value)(). These are like their getdns_str2() counterparts, but take YAML input rather than JSON.
YAML introduces a new dependency, on libyaml. YAML can be disabled at configuration time, in which case the dependency is removed.
Modify getdns_query such that if a configuration file name includes "".yaml"" it will be processed as a YAML configuration, not a JSON configuration.
Internally, getdns_yaml2*() work by passing the YAML string through a simple translation to JSON. At present, this translation assumes that configuration is the only use case, and so will error if the outer layer of the YAML input is not a map. This in effect means that at present all getdns_yaml2*() functions apart from getdns_yaml2dict() will give an error on the YAML translation to JSON.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,332,2017-09-12T17:22:17Z,2017-09-22T13:40:54Z,2017-09-22T13:40:54Z,MERGED,True,1174,15,19,https://github.com/banburybill,Add YAML configuration option.,16,[],https://github.com/getdnsapi/getdns/pull/332,https://github.com/banburybill,2,https://github.com/getdnsapi/getdns/pull/332#issuecomment-328923797,"Add new extra functions getdns_yaml2(dict|list|bindata|value)(). These are like their getdns_str2() counterparts, but take YAML input rather than JSON.
YAML introduces a new dependency, on libyaml. YAML can be disabled at configuration time, in which case the dependency is removed.
Modify getdns_query such that if a configuration file name includes "".yaml"" it will be processed as a YAML configuration, not a JSON configuration.
Internally, getdns_yaml2*() work by passing the YAML string through a simple translation to JSON. At present, this translation assumes that configuration is the only use case, and so will error if the outer layer of the YAML input is not a map. This in effect means that at present all getdns_yaml2*() functions apart from getdns_yaml2dict() will give an error on the YAML translation to JSON.","For review only! DO NOT MERGE! (Yet... :-))
This is the direction we are currently going for YAML support. See recent change in Stubby repo, which uses these changes.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,332,2017-09-12T17:22:17Z,2017-09-22T13:40:54Z,2017-09-22T13:40:54Z,MERGED,True,1174,15,19,https://github.com/banburybill,Add YAML configuration option.,16,[],https://github.com/getdnsapi/getdns/pull/332,https://github.com/wtoorop,3,https://github.com/getdnsapi/getdns/pull/332#issuecomment-329096485,"Add new extra functions getdns_yaml2(dict|list|bindata|value)(). These are like their getdns_str2() counterparts, but take YAML input rather than JSON.
YAML introduces a new dependency, on libyaml. YAML can be disabled at configuration time, in which case the dependency is removed.
Modify getdns_query such that if a configuration file name includes "".yaml"" it will be processed as a YAML configuration, not a JSON configuration.
Internally, getdns_yaml2*() work by passing the YAML string through a simple translation to JSON. At present, this translation assumes that configuration is the only use case, and so will error if the outer layer of the YAML input is not a map. This in effect means that at present all getdns_yaml2*() functions apart from getdns_yaml2dict() will give an error on the YAML translation to JSON.",Looking good!,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,332,2017-09-12T17:22:17Z,2017-09-22T13:40:54Z,2017-09-22T13:40:54Z,MERGED,True,1174,15,19,https://github.com/banburybill,Add YAML configuration option.,16,[],https://github.com/getdnsapi/getdns/pull/332,https://github.com/banburybill,4,https://github.com/getdnsapi/getdns/pull/332#issuecomment-329232972,"Add new extra functions getdns_yaml2(dict|list|bindata|value)(). These are like their getdns_str2() counterparts, but take YAML input rather than JSON.
YAML introduces a new dependency, on libyaml. YAML can be disabled at configuration time, in which case the dependency is removed.
Modify getdns_query such that if a configuration file name includes "".yaml"" it will be processed as a YAML configuration, not a JSON configuration.
Internally, getdns_yaml2*() work by passing the YAML string through a simple translation to JSON. At present, this translation assumes that configuration is the only use case, and so will error if the outer layer of the YAML input is not a map. This in effect means that at present all getdns_yaml2*() functions apart from getdns_yaml2dict() will give an error on the YAML translation to JSON.","@wtoorop OK, I think we're ready now. Please review and feel free to merge if happy.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,333,2017-09-13T09:01:48Z,2017-09-13T15:00:57Z,2017-10-27T08:42:22Z,MERGED,True,98,26,5,https://github.com/saradickinson,Variable tls backoff,5,[],https://github.com/getdnsapi/getdns/pull/333,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/333,Try to make handling of error conditions with connections to upstreams more robust.,Try to make handling of error conditions with connections to upstreams more robust.,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,334,2017-09-13T14:03:55Z,2017-09-13T14:13:08Z,2017-09-13T14:13:08Z,MERGED,True,3,2,1,https://github.com/banburybill,Fix capturing exit code of a test.,1,[],https://github.com/getdnsapi/getdns/pull/334,https://github.com/banburybill,1,https://github.com/getdnsapi/getdns/pull/334,"tpkg was not capturing the exit code of the test, but the exit code of the write_result actions.","tpkg was not capturing the exit code of the test, but the exit code of the write_result actions.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,335,2017-09-13T14:51:14Z,2017-09-13T14:52:13Z,2017-09-13T14:52:13Z,MERGED,True,1,0,1,https://github.com/banburybill,Add '-f' to tpkg usage message.,1,[],https://github.com/getdnsapi/getdns/pull/335,https://github.com/banburybill,1,https://github.com/getdnsapi/getdns/pull/335,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,336,2017-09-14T15:19:40Z,2017-09-22T13:40:54Z,2017-09-27T13:57:49Z,MERGED,True,33,4,3,https://github.com/wtoorop,Devel/compile on windows,4,[],https://github.com/getdnsapi/getdns/pull/336,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/336,Fixes that came out of John's build on Windows,Fixes that came out of John's build on Windows,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,337,2017-09-27T10:55:04Z,2017-09-28T20:29:30Z,2017-09-28T20:29:30Z,CLOSED,False,212,747,16,https://github.com/wtoorop,Devel/yaml default off,13,[],https://github.com/getdnsapi/getdns/pull/337,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/337,Move yaml config support to Stubby,Move yaml config support to Stubby,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,339,2017-10-02T13:21:39Z,2017-10-03T14:38:13Z,2017-10-03T14:38:14Z,MERGED,True,20,0,1,https://github.com/banburybill,"Check for implementations of sigemptyset, sigfillset and sigaddset an…",1,[],https://github.com/getdnsapi/getdns/pull/339,https://github.com/banburybill,1,https://github.com/getdnsapi/getdns/pull/339,"…d add if not present.
mingw64 doesn't have them and compilation fails at link time.","…d add if not present.
mingw64 doesn't have them and compilation fails at link time.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,341,2017-10-05T10:05:55Z,2017-10-09T13:53:10Z,2017-10-09T13:53:18Z,MERGED,True,146,200,10,https://github.com/banburybill,Fix Stubby stopping listening to UDP on Win10 mingw64 builds,11,[],https://github.com/getdnsapi/getdns/pull/341,https://github.com/banburybill,1,https://github.com/getdnsapi/getdns/pull/341,"I was unable to resist a little tidying on the Winsock handling code. To whit:

Create _getdns_closesocket(), _getdns_poll() to wrap #ifdef WINSOCK ... #endif items.
Create _getdns_socketerror() to return WSAGetLastError() or errno depending on platform.
Convert _getdns_E* to just the required constants, not the check, so errors from getsockopt() SO_ERROR can be compared with them.
Add ECONNRESET.

And finally handle Winsock's bizzare returning of ECONNRESET on recvfrom() on a UDP socket by ignoring it.
Further work in progress to handle Winsock potentially doing the same on sendto().","I was unable to resist a little tidying on the Winsock handling code. To whit:

Create _getdns_closesocket(), _getdns_poll() to wrap #ifdef WINSOCK ... #endif items.
Create _getdns_socketerror() to return WSAGetLastError() or errno depending on platform.
Convert _getdns_E* to just the required constants, not the check, so errors from getsockopt() SO_ERROR can be compared with them.
Add ECONNRESET.

And finally handle Winsock's bizzare returning of ECONNRESET on recvfrom() on a UDP socket by ignoring it.
Further work in progress to handle Winsock potentially doing the same on sendto().",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,341,2017-10-05T10:05:55Z,2017-10-09T13:53:10Z,2017-10-09T13:53:18Z,MERGED,True,146,200,10,https://github.com/banburybill,Fix Stubby stopping listening to UDP on Win10 mingw64 builds,11,[],https://github.com/getdnsapi/getdns/pull/341,https://github.com/wtoorop,2,https://github.com/getdnsapi/getdns/pull/341#issuecomment-335164892,"I was unable to resist a little tidying on the Winsock handling code. To whit:

Create _getdns_closesocket(), _getdns_poll() to wrap #ifdef WINSOCK ... #endif items.
Create _getdns_socketerror() to return WSAGetLastError() or errno depending on platform.
Convert _getdns_E* to just the required constants, not the check, so errors from getsockopt() SO_ERROR can be compared with them.
Add ECONNRESET.

And finally handle Winsock's bizzare returning of ECONNRESET on recvfrom() on a UDP socket by ignoring it.
Further work in progress to handle Winsock potentially doing the same on sendto().",Excellent!  Thanks!,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,342,2017-10-09T14:13:05Z,2017-10-20T14:09:24Z,2017-10-20T14:09:24Z,MERGED,True,202,145,8,https://github.com/banburybill,More mingw polishing,6,[],https://github.com/getdnsapi/getdns/pull/342,https://github.com/banburybill,1,https://github.com/getdnsapi/getdns/pull/342,"Redo sigset_t check. Include signal.h, as Posix says that's where it's defined. On failure, check for _sigset_t.
Have Winsock and non-WInsock DEBUG_NL as with DEBUG_ON.
Add _getdns_perror() to report Winsock errors.
Remove ARG_LL, use PRIxxx instead, and so remove some #ifdef WINSOCK..#else...#endif.","Redo sigset_t check. Include signal.h, as Posix says that's where it's defined. On failure, check for _sigset_t.
Have Winsock and non-WInsock DEBUG_NL as with DEBUG_ON.
Add _getdns_perror() to report Winsock errors.
Remove ARG_LL, use PRIxxx instead, and so remove some #ifdef WINSOCK..#else...#endif.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,345,2017-10-17T15:03:20Z,2017-10-20T14:30:18Z,2017-11-02T11:47:59Z,MERGED,True,121,124,9,https://github.com/wtoorop,Devel/robustness,12,[],https://github.com/getdnsapi/getdns/pull/345,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/345,"Here a few commits that should (I think) make handling of the statefull upstreams more robust.
Can you review and test please?","Here a few commits that should (I think) make handling of the statefull upstreams more robust.
Can you review and test please?",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,346,2017-10-19T09:45:07Z,2017-10-19T10:50:52Z,2017-10-27T08:42:26Z,MERGED,True,7,7,2,https://github.com/saradickinson,Devel/robustness bugfix,2,[],https://github.com/getdnsapi/getdns/pull/346,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/346,"Willem, this PR fixes the issue I found with authentication, which occurred because the authentication state is only updated in _getdns_upstream_shutdown() and only _getdns_upstream_reset() was being called because the failure happens during setup. We could move it but..... basically I now think  it is simpler to call _getdns_upstream_shutdown() even if the failure occurs during set up because logging the stats is useful to know why a particular upstream is backed-off. So I'm not sure the shutdown/reset split is useful with the new simplified code. WDYT?
Also - fixes bug with the backoff time not incrementing and adds a stubby log for the case where the TLS library doesn't support hostname authentication.","Willem, this PR fixes the issue I found with authentication, which occurred because the authentication state is only updated in _getdns_upstream_shutdown() and only _getdns_upstream_reset() was being called because the failure happens during setup. We could move it but..... basically I now think  it is simpler to call _getdns_upstream_shutdown() even if the failure occurs during set up because logging the stats is useful to know why a particular upstream is backed-off. So I'm not sure the shutdown/reset split is useful with the new simplified code. WDYT?
Also - fixes bug with the backoff time not incrementing and adds a stubby log for the case where the TLS library doesn't support hostname authentication.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,346,2017-10-19T09:45:07Z,2017-10-19T10:50:52Z,2017-10-27T08:42:26Z,MERGED,True,7,7,2,https://github.com/saradickinson,Devel/robustness bugfix,2,[],https://github.com/getdnsapi/getdns/pull/346,https://github.com/wtoorop,2,https://github.com/getdnsapi/getdns/pull/346#issuecomment-337865261,"Willem, this PR fixes the issue I found with authentication, which occurred because the authentication state is only updated in _getdns_upstream_shutdown() and only _getdns_upstream_reset() was being called because the failure happens during setup. We could move it but..... basically I now think  it is simpler to call _getdns_upstream_shutdown() even if the failure occurs during set up because logging the stats is useful to know why a particular upstream is backed-off. So I'm not sure the shutdown/reset split is useful with the new simplified code. WDYT?
Also - fixes bug with the backoff time not incrementing and adds a stubby log for the case where the TLS library doesn't support hostname authentication.",The unit test failure is because there was a test that clearing upstreams with NULL was not allowed (I changed that).  If you update (refetch) the devel/robustness branch and merge that into your branch again it'll go away.,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,346,2017-10-19T09:45:07Z,2017-10-19T10:50:52Z,2017-10-27T08:42:26Z,MERGED,True,7,7,2,https://github.com/saradickinson,Devel/robustness bugfix,2,[],https://github.com/getdnsapi/getdns/pull/346,https://github.com/wtoorop,3,https://github.com/getdnsapi/getdns/pull/346#issuecomment-337868893,"Willem, this PR fixes the issue I found with authentication, which occurred because the authentication state is only updated in _getdns_upstream_shutdown() and only _getdns_upstream_reset() was being called because the failure happens during setup. We could move it but..... basically I now think  it is simpler to call _getdns_upstream_shutdown() even if the failure occurs during set up because logging the stats is useful to know why a particular upstream is backed-off. So I'm not sure the shutdown/reset split is useful with the new simplified code. WDYT?
Also - fixes bug with the backoff time not incrementing and adds a stubby log for the case where the TLS library doesn't support hostname authentication.","Oh sorry... I spoke too soon.  I had not actually committed yet.
I just committed and pushed...",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,346,2017-10-19T09:45:07Z,2017-10-19T10:50:52Z,2017-10-27T08:42:26Z,MERGED,True,7,7,2,https://github.com/saradickinson,Devel/robustness bugfix,2,[],https://github.com/getdnsapi/getdns/pull/346,https://github.com/wtoorop,4,https://github.com/getdnsapi/getdns/pull/346#issuecomment-337876632,"Willem, this PR fixes the issue I found with authentication, which occurred because the authentication state is only updated in _getdns_upstream_shutdown() and only _getdns_upstream_reset() was being called because the failure happens during setup. We could move it but..... basically I now think  it is simpler to call _getdns_upstream_shutdown() even if the failure occurs during set up because logging the stats is useful to know why a particular upstream is backed-off. So I'm not sure the shutdown/reset split is useful with the new simplified code. WDYT?
Also - fixes bug with the backoff time not incrementing and adds a stubby log for the case where the TLS library doesn't support hostname authentication.","Sara, I merged your branch into my PR branch and made upstream_reset static.
It is only called from upstream_shutdown, so we might incorporate it in that function?
upstream_backoff is only called from upstream_reset.  I made that static too.
I'm looking into the static-analysis issue now...",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,346,2017-10-19T09:45:07Z,2017-10-19T10:50:52Z,2017-10-27T08:42:26Z,MERGED,True,7,7,2,https://github.com/saradickinson,Devel/robustness bugfix,2,[],https://github.com/getdnsapi/getdns/pull/346,https://github.com/saradickinson,5,https://github.com/getdnsapi/getdns/pull/346#issuecomment-337885324,"Willem, this PR fixes the issue I found with authentication, which occurred because the authentication state is only updated in _getdns_upstream_shutdown() and only _getdns_upstream_reset() was being called because the failure happens during setup. We could move it but..... basically I now think  it is simpler to call _getdns_upstream_shutdown() even if the failure occurs during set up because logging the stats is useful to know why a particular upstream is backed-off. So I'm not sure the shutdown/reset split is useful with the new simplified code. WDYT?
Also - fixes bug with the backoff time not incrementing and adds a stubby log for the case where the TLS library doesn't support hostname authentication.",Yup - makes sense. thanks.,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,347,2017-10-20T15:23:12Z,2017-10-20T15:38:41Z,2017-10-27T08:42:27Z,MERGED,True,1,1,1,https://github.com/saradickinson,Update stubby to use the 0.1.4 release,1,[],https://github.com/getdnsapi/getdns/pull/347,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/347,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,348,2017-10-22T15:51:10Z,2017-10-27T07:57:49Z,2017-10-27T08:01:20Z,MERGED,True,1,0,1,https://github.com/rgacogne,Fix a linking issue in stubby when libbsd is present,1,[],https://github.com/getdnsapi/getdns/pull/348,https://github.com/rgacogne,1,https://github.com/getdnsapi/getdns/pull/348,"On Arch, when libbsd is found on the system during the configure, the result of pkg-config --cflags libbsd-overlay is added to CFLAGS:
-DLIBBSD_OVERLAY -isystem /usr/include/bsd
The result of pkg-config --libs libbsd-overlay is added to LIBS, but not to STUBBY_LIBS, which is used when linking stubby.
Because of the new CFLAGS, the preprocessor replaces the call to getopt() in stubby.c with a call to bsd_getop():
 #ifdef LIBBSD_OVERLAY
 #undef getopt
 #define getopt(argc, argv, optstr) bsd_getopt(argc, argv, optstr)
 #endif

But since -lbsd has not been added to STUBBY_LIBS, the linking of stubby fails with an unresolved symbol:
../libtool --tag=CC --mode=link gcc -o stubby stubby.lo convert_yaml_to_json.lo gbuffer.lo -lyaml  libgetdns.la
libtool: link: gcc -o .libs/stubby .libs/stubby.o .libs/convert_yaml_to_json.o .libs/gbuffer.o  -lyaml ./.libs/libgetdns.so
/usr/bin/ld: .libs/stubby.o: undefined reference to symbol 'bsd_getopt@@LIBBSD_0.0'
/usr/lib/libbsd.so.0: error adding symbols: DSO missing from command line
collect2: error: ld returned 1 exit status

Simply adding the result of pkg-config --libs libbsd-overlay to STUBBY_LIBS in addition to LIBS fixes the issue. Note that another, perhaps cleaner, option would be to separate the CFLAGS used to build stubby from the rest of the project, but it seems much more painful than this one since the same variable is currently used everywhere.","On Arch, when libbsd is found on the system during the configure, the result of pkg-config --cflags libbsd-overlay is added to CFLAGS:
-DLIBBSD_OVERLAY -isystem /usr/include/bsd
The result of pkg-config --libs libbsd-overlay is added to LIBS, but not to STUBBY_LIBS, which is used when linking stubby.
Because of the new CFLAGS, the preprocessor replaces the call to getopt() in stubby.c with a call to bsd_getop():
 #ifdef LIBBSD_OVERLAY
 #undef getopt
 #define getopt(argc, argv, optstr) bsd_getopt(argc, argv, optstr)
 #endif

But since -lbsd has not been added to STUBBY_LIBS, the linking of stubby fails with an unresolved symbol:
../libtool --tag=CC --mode=link gcc -o stubby stubby.lo convert_yaml_to_json.lo gbuffer.lo -lyaml  libgetdns.la
libtool: link: gcc -o .libs/stubby .libs/stubby.o .libs/convert_yaml_to_json.o .libs/gbuffer.o  -lyaml ./.libs/libgetdns.so
/usr/bin/ld: .libs/stubby.o: undefined reference to symbol 'bsd_getopt@@LIBBSD_0.0'
/usr/lib/libbsd.so.0: error adding symbols: DSO missing from command line
collect2: error: ld returned 1 exit status

Simply adding the result of pkg-config --libs libbsd-overlay to STUBBY_LIBS in addition to LIBS fixes the issue. Note that another, perhaps cleaner, option would be to separate the CFLAGS used to build stubby from the rest of the project, but it seems much more painful than this one since the same variable is currently used everywhere.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,348,2017-10-22T15:51:10Z,2017-10-27T07:57:49Z,2017-10-27T08:01:20Z,MERGED,True,1,0,1,https://github.com/rgacogne,Fix a linking issue in stubby when libbsd is present,1,[],https://github.com/getdnsapi/getdns/pull/348,https://github.com/wtoorop,2,https://github.com/getdnsapi/getdns/pull/348#issuecomment-339900982,"On Arch, when libbsd is found on the system during the configure, the result of pkg-config --cflags libbsd-overlay is added to CFLAGS:
-DLIBBSD_OVERLAY -isystem /usr/include/bsd
The result of pkg-config --libs libbsd-overlay is added to LIBS, but not to STUBBY_LIBS, which is used when linking stubby.
Because of the new CFLAGS, the preprocessor replaces the call to getopt() in stubby.c with a call to bsd_getop():
 #ifdef LIBBSD_OVERLAY
 #undef getopt
 #define getopt(argc, argv, optstr) bsd_getopt(argc, argv, optstr)
 #endif

But since -lbsd has not been added to STUBBY_LIBS, the linking of stubby fails with an unresolved symbol:
../libtool --tag=CC --mode=link gcc -o stubby stubby.lo convert_yaml_to_json.lo gbuffer.lo -lyaml  libgetdns.la
libtool: link: gcc -o .libs/stubby .libs/stubby.o .libs/convert_yaml_to_json.o .libs/gbuffer.o  -lyaml ./.libs/libgetdns.so
/usr/bin/ld: .libs/stubby.o: undefined reference to symbol 'bsd_getopt@@LIBBSD_0.0'
/usr/lib/libbsd.so.0: error adding symbols: DSO missing from command line
collect2: error: ld returned 1 exit status

Simply adding the result of pkg-config --libs libbsd-overlay to STUBBY_LIBS in addition to LIBS fixes the issue. Note that another, perhaps cleaner, option would be to separate the CFLAGS used to build stubby from the rest of the project, but it seems much more painful than this one since the same variable is currently used everywhere.",Absolutely!  Thanks!,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,350,2017-11-02T13:26:04Z,2017-11-02T14:24:45Z,2017-11-02T14:24:45Z,MERGED,True,11,0,1,https://github.com/banburybill,Add configure --with-piddir. Use this for runstatedir.,1,[],https://github.com/getdnsapi/getdns/pull/350,https://github.com/banburybill,1,https://github.com/getdnsapi/getdns/pull/350,You need autoconf 2.70 (or 2.69 plus patch as in Debian) for runstatedir to be automatically in the configure script. This adds a always-present config option.,You need autoconf 2.70 (or 2.69 plus patch as in Debian) for runstatedir to be automatically in the configure script. This adds a always-present config option.,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,350,2017-11-02T13:26:04Z,2017-11-02T14:24:45Z,2017-11-02T14:24:45Z,MERGED,True,11,0,1,https://github.com/banburybill,Add configure --with-piddir. Use this for runstatedir.,1,[],https://github.com/getdnsapi/getdns/pull/350,https://github.com/saradickinson,2,https://github.com/getdnsapi/getdns/pull/350#issuecomment-341423025,You need autoconf 2.70 (or 2.69 plus patch as in Debian) for runstatedir to be automatically in the configure script. This adds a always-present config option.,"@wtoorop On my Mac this tries to install in /usr/local/var/run by default which doesn't exist, so would require mac builds to specify the piddir. I see that Unbound puts the pid file in /usr/local/etc/unbound by default. Any thoughts?",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,350,2017-11-02T13:26:04Z,2017-11-02T14:24:45Z,2017-11-02T14:24:45Z,MERGED,True,11,0,1,https://github.com/banburybill,Add configure --with-piddir. Use this for runstatedir.,1,[],https://github.com/getdnsapi/getdns/pull/350,https://github.com/wtoorop,3,https://github.com/getdnsapi/getdns/pull/350#issuecomment-341436960,You need autoconf 2.70 (or 2.69 plus patch as in Debian) for runstatedir to be automatically in the configure script. This adds a always-present config option.,"I see /private/var/run is commonly use on MacOS.
We could have a fall back to $(sysconfdir)/stubby when $(runstatedir) does not exist at run-time?",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,351,2017-11-02T13:53:53Z,2017-11-03T10:11:24Z,2017-11-22T12:44:10Z,MERGED,True,83,16,3,https://github.com/wtoorop,Devel/dnssec maintenance,7,[],https://github.com/getdnsapi/getdns/pull/351,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/351,Resolves miscellaneous smaller (non-security) issues with our DNSSEC implementation,Resolves miscellaneous smaller (non-security) issues with our DNSSEC implementation,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,352,2017-11-02T16:57:53Z,2017-11-03T12:42:53Z,2017-11-08T11:37:55Z,MERGED,True,1,0,1,https://github.com/saradickinson,Make sure the runstatedir exists,1,[],https://github.com/getdnsapi/getdns/pull/352,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/352,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,353,2017-11-03T12:55:21Z,2017-11-03T19:00:41Z,2017-11-22T12:44:06Z,MERGED,True,275,74,8,https://github.com/wtoorop,Handle more harmless I/O error cases +,5,[],https://github.com/getdnsapi/getdns/pull/353,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/353,"never exit on I/O errors
never stop listening on I/O errors
extended platfrom.[ch] with _getdns_strerror()","never exit on I/O errors
never stop listening on I/O errors
extended platfrom.[ch] with _getdns_strerror()",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,353,2017-11-03T12:55:21Z,2017-11-03T19:00:41Z,2017-11-22T12:44:06Z,MERGED,True,275,74,8,https://github.com/wtoorop,Handle more harmless I/O error cases +,5,[],https://github.com/getdnsapi/getdns/pull/353,https://github.com/banburybill,2,https://github.com/getdnsapi/getdns/pull/353#issuecomment-341719899,"never exit on I/O errors
never stop listening on I/O errors
extended platfrom.[ch] with _getdns_strerror()","This doesn't build on Windows. So far it fails in platform.c, with duplicate errno cases and an undeclared variable.
I've not finished looking. Other comments so far:
_getdns_socket_retry() sounds to me like it retries the operation, rather than checking the error code to see if it is one that should be retried. Perhaps rename to something like _getdns_errno_wants_retry()?
The Windows strerror() and perror() may produce different messages for the same error. I'd implemented perror() using strerror() and use a larger static buffer and FormatMessage() in strerror().
More soon...",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,353,2017-11-03T12:55:21Z,2017-11-03T19:00:41Z,2017-11-22T12:44:06Z,MERGED,True,275,74,8,https://github.com/wtoorop,Handle more harmless I/O error cases +,5,[],https://github.com/getdnsapi/getdns/pull/353,https://github.com/banburybill,3,https://github.com/getdnsapi/getdns/pull/353#issuecomment-341722017,"never exit on I/O errors
never stop listening on I/O errors
extended platfrom.[ch] with _getdns_strerror()","void _getdns_perror(const char *str)
{
int errid = WSAGetLastError();
if (str && *str != '\0')
fprintf(stderr, ""%s: "", str);
fputs(_getdns_strerror(errid), stderr);
}
const char *_getdns_strerror(DWORD errnum)
{
static char msg[256];
    *msg = '\0';
    FormatMessage(FORMAT_MESSAGE_FROM_SYSTEM |
                      FORMAT_MESSAGE_IGNORE_INSERTS,
                  NULL,
                  errnum,
                  MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT),
                  msg,
                  sizeof(msg),
                  NULL);
    if (*msg == '\0')
            sprintf(msg, ""Unknown error: %ld"", errnum);
return msg;

}
Compile still fails, now in platform.h from server.c. Looks like WSAENFILE does not exist.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,353,2017-11-03T12:55:21Z,2017-11-03T19:00:41Z,2017-11-22T12:44:06Z,MERGED,True,275,74,8,https://github.com/wtoorop,Handle more harmless I/O error cases +,5,[],https://github.com/getdnsapi/getdns/pull/353,https://github.com/banburybill,4,https://github.com/getdnsapi/getdns/pull/353#issuecomment-341732649,"never exit on I/O errors
never stop listening on I/O errors
extended platfrom.[ch] with _getdns_strerror()","OK, so in platform.h. I now see _getdns_errno_retry() and _getdns_socket_retry(). Not a huge fan of macros here.
This patch gets things building for me. I think _getdns_resource_depletion() should check for a non-zero errno() to make sure it does the right thing if ENFILE or EMFILE aren't defined. Actually, while I think of it, I think _getdns_errno_retry() should also ensure that it doesn't accidentally match errno of 0 with an undefined error.
builds.patch.gz",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,353,2017-11-03T12:55:21Z,2017-11-03T19:00:41Z,2017-11-22T12:44:06Z,MERGED,True,275,74,8,https://github.com/wtoorop,Handle more harmless I/O error cases +,5,[],https://github.com/getdnsapi/getdns/pull/353,https://github.com/wtoorop,5,https://github.com/getdnsapi/getdns/pull/353#issuecomment-341735686,"never exit on I/O errors
never stop listening on I/O errors
extended platfrom.[ch] with _getdns_strerror()","Yes... I think testing for 0 is not necessary, because we only test errno after I/O failure.
Also, I read in the man page that errno is never zero:
   Valid error numbers are all nonzero; errno is never set to zero by any  sys‐
   tem call or library function.

However, it cannot harm either",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,353,2017-11-03T12:55:21Z,2017-11-03T19:00:41Z,2017-11-22T12:44:06Z,MERGED,True,275,74,8,https://github.com/wtoorop,Handle more harmless I/O error cases +,5,[],https://github.com/getdnsapi/getdns/pull/353,https://github.com/wtoorop,6,https://github.com/getdnsapi/getdns/pull/353#issuecomment-341738388,"never exit on I/O errors
never stop listening on I/O errors
extended platfrom.[ch] with _getdns_strerror()","I postpone your suggestion for _getdns_strerror() on windows, and do a thread safe version of thath (not returning a static buffer) after the release candidate.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,353,2017-11-03T12:55:21Z,2017-11-03T19:00:41Z,2017-11-22T12:44:06Z,MERGED,True,275,74,8,https://github.com/wtoorop,Handle more harmless I/O error cases +,5,[],https://github.com/getdnsapi/getdns/pull/353,https://github.com/banburybill,7,https://github.com/getdnsapi/getdns/pull/353#issuecomment-341746140,"never exit on I/O errors
never stop listening on I/O errors
extended platfrom.[ch] with _getdns_strerror()",You are right that errno shouldn't be 0. In POSIX-land. The docs for WSAGetLastError() suggest that it can be reset to 0 by getsockopt() in Windows. I guess in an ideal world I'd call this a precondition and have an assert().,True,{'THUMBS_UP': ['https://github.com/joelpurra']}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,355,2017-11-08T11:43:53Z,2017-11-08T11:48:51Z,2018-02-09T10:52:16Z,MERGED,True,1,1,1,https://github.com/saradickinson,Add DESTDIR to runstatedir creation path,1,[],https://github.com/getdnsapi/getdns/pull/355,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/355,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,360,2017-11-23T12:24:31Z,2017-11-28T15:59:37Z,2017-12-11T10:00:13Z,MERGED,True,17,9,2,https://github.com/wtoorop,Bugfix #359: edns_client_subnet_private should set family,1,[],https://github.com/getdnsapi/getdns/pull/360,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/360,Thanks Daniel Areiza,Thanks Daniel Areiza,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,361,2017-12-12T13:18:55Z,2017-12-14T14:09:00Z,2018-02-02T15:44:41Z,MERGED,True,400,193,11,https://github.com/wtoorop,Provide means for alternative resolve.conf location,9,[],https://github.com/getdnsapi/getdns/pull/361,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/361,"simplified file change management (still doesn;t work)
OpenSSL version reporting via getdns_context_get_api_information
GETDNS_RETURN_IO_ERROR return code","simplified file change management (still doesn;t work)
OpenSSL version reporting via getdns_context_get_api_information
GETDNS_RETURN_IO_ERROR return code",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,362,2017-12-13T08:44:15Z,2017-12-14T14:09:01Z,2018-02-02T15:44:39Z,MERGED,True,132,2,6,https://github.com/wtoorop,Provide means for alternative CA dir and file location,1,[],https://github.com/getdnsapi/getdns/pull/362,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/362,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,363,2017-12-13T12:13:58Z,2017-12-14T14:09:01Z,2018-02-02T15:44:39Z,MERGED,True,516,211,14,https://github.com/wtoorop,Zero configuration DNSSEC meta queries on context's upstreams,15,[],https://github.com/getdnsapi/getdns/pull/363,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/363,Should fix bug #356,Should fix bug #356,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,364,2017-12-13T14:24:58Z,2017-12-13T15:35:33Z,2018-02-09T10:52:16Z,MERGED,True,3,3,2,https://github.com/saradickinson,Update makefile because a file in Stubby was moved,1,[],https://github.com/getdnsapi/getdns/pull/364,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/364,"Don't merge yet, needed when getdnsapi/stubby#54 merged and the stubby commit is updated in getdns before the next release.","Don't merge yet, needed when getdnsapi/stubby#54 merged and the stubby commit is updated in getdns before the next release.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,365,2017-12-15T16:55:04Z,2017-12-19T10:25:33Z,2018-02-09T10:52:13Z,MERGED,True,12,2,2,https://github.com/saradickinson,Fix windows build,1,[],https://github.com/getdnsapi/getdns/pull/365,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/365,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,366,2017-12-15T20:02:49Z,2017-12-20T08:36:59Z,2017-12-20T08:36:59Z,MERGED,True,1,1,1,https://github.com/hardfalcon,Add support for TLS 1.3 and Chacha20-Poly1305,1,[],https://github.com/getdnsapi/getdns/pull/366,https://github.com/hardfalcon,1,https://github.com/getdnsapi/getdns/pull/366,"Add support for TLS 1.3 (requires OpenSSL 1.1.1) and Chacha20-Poly1305 (requires OpenSSL 1.1).
Older OpenSSL versions will simply ignore ciphersuite specifications they don't understand and use the subset which they do unterstand.
Note that ""EECDH"" does not select anonymous cipher suites (as opposed to ""kECDHE"").","Add support for TLS 1.3 (requires OpenSSL 1.1.1) and Chacha20-Poly1305 (requires OpenSSL 1.1).
Older OpenSSL versions will simply ignore ciphersuite specifications they don't understand and use the subset which they do unterstand.
Note that ""EECDH"" does not select anonymous cipher suites (as opposed to ""kECDHE"").",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,367,2017-12-21T11:32:46Z,2017-12-21T12:00:09Z,2017-12-21T12:00:59Z,MERGED,True,125,17,8,https://github.com/wtoorop,Features/set cipher list,3,[],https://github.com/getdnsapi/getdns/pull/367,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/367,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,368,2017-12-21T12:10:27Z,2017-12-21T13:25:02Z,2018-02-02T15:44:36Z,MERGED,True,64,63,6,https://github.com/wtoorop,TLS settings have tls_ prefixed name,1,[],https://github.com/getdnsapi/getdns/pull/368,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/368,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,371,2018-01-11T12:19:41Z,2018-02-14T10:44:12Z,2018-02-22T09:22:45Z,MERGED,True,376,142,7,https://github.com/wtoorop,Devel/spki pinset via tlsa checking,13,[],https://github.com/getdnsapi/getdns/pull/371,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/371,"Resolves bug #293
Resolves bug getdnsapi/stubby#46

With OpenSSL >= 1.1.0 check SHA256 pins with OpenSSL native DANE functions
With OpenSSL >= 1.0.0 and < 1.1.0 uses Viktor's danessl library
With OpenSSL < 1.0.0 uses old method, but does not allow the exceptions (like self-signed certificates)
So for OpenSSL < 1.0.0 certificate authorities are a requirement, but the connection will fail authentication if the pin doesn't match.","Resolves bug #293
Resolves bug getdnsapi/stubby#46

With OpenSSL >= 1.1.0 check SHA256 pins with OpenSSL native DANE functions
With OpenSSL >= 1.0.0 and < 1.1.0 uses Viktor's danessl library
With OpenSSL < 1.0.0 uses old method, but does not allow the exceptions (like self-signed certificates)
So for OpenSSL < 1.0.0 certificate authorities are a requirement, but the connection will fail authentication if the pin doesn't match.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,371,2018-01-11T12:19:41Z,2018-02-14T10:44:12Z,2018-02-22T09:22:45Z,MERGED,True,376,142,7,https://github.com/wtoorop,Devel/spki pinset via tlsa checking,13,[],https://github.com/getdnsapi/getdns/pull/371,https://github.com/saradickinson,2,https://github.com/getdnsapi/getdns/pull/371#issuecomment-357758826,"Resolves bug #293
Resolves bug getdnsapi/stubby#46

With OpenSSL >= 1.1.0 check SHA256 pins with OpenSSL native DANE functions
With OpenSSL >= 1.0.0 and < 1.1.0 uses Viktor's danessl library
With OpenSSL < 1.0.0 uses old method, but does not allow the exceptions (like self-signed certificates)
So for OpenSSL < 1.0.0 certificate authorities are a requirement, but the connection will fail authentication if the pin doesn't match.","@wtoorop Thanks for this. Will review/test tomorrow. As we discussed last week IIRC TLS 1.2 requires OpenSSL 1.0.1, so I'm not sure we need to cater for OpenSSL < 1.0.0 for authentication?
And thanks for extra work in getdns_query - was just about to remove i_am_stubby myself!!",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,372,2018-01-11T21:46:18Z,2018-02-14T10:44:12Z,2018-02-14T10:44:12Z,MERGED,True,3,2,1,https://github.com/norbertc,src/stub.c: LibreSSL has hostname verification turned on by default,1,[],https://github.com/getdnsapi/getdns/pull/372,https://github.com/norbertc,1,https://github.com/getdnsapi/getdns/pull/372,Tested on my Android phone,Tested on my Android phone,True,{'THUMBS_UP': ['https://github.com/nberlee']}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,372,2018-01-11T21:46:18Z,2018-02-14T10:44:12Z,2018-02-14T10:44:12Z,MERGED,True,3,2,1,https://github.com/norbertc,src/stub.c: LibreSSL has hostname verification turned on by default,1,[],https://github.com/getdnsapi/getdns/pull/372,https://github.com/wtoorop,2,https://github.com/getdnsapi/getdns/pull/372#issuecomment-363816589,Tested on my Android phone,@norbertc sorry to take so long.  I'm still contemplating the consequences... (and I want to test as well ;),True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,372,2018-01-11T21:46:18Z,2018-02-14T10:44:12Z,2018-02-14T10:44:12Z,MERGED,True,3,2,1,https://github.com/norbertc,src/stub.c: LibreSSL has hostname verification turned on by default,1,[],https://github.com/getdnsapi/getdns/pull/372,https://github.com/wtoorop,3,https://github.com/getdnsapi/getdns/pull/372#issuecomment-363817430,Tested on my Android phone,Just to be clear: LibreSSL will try to authenticate the name provided with SSL_set_tlsext_host_name() and if that function is not called will not do name authentication (but still needs a known signer)?,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,375,2018-01-15T18:53:42Z,2018-02-14T10:44:13Z,2018-02-14T10:44:13Z,MERGED,True,2297,12,13,https://github.com/banburybill,Feature/monitor tool,48,[],https://github.com/getdnsapi/getdns/pull/375,https://github.com/banburybill,1,https://github.com/getdnsapi/getdns/pull/375,"This PR is not (particularly) a request for an immediate merge, but instead to show where we are heading with the server monitoring utility.
This started as a tidy up/re-implementation of Stephane's hackathon monitoring tool. That was aimed only at TLS servers, but included a test (for QNAME minimisation) that is applicable to any server. We've moved a little away from a tool focused purely on TLS to a more general server monitoring utility. We'd like, for example, to add tests for DNSSEC; this is an orthogonal issue to TLS.","This PR is not (particularly) a request for an immediate merge, but instead to show where we are heading with the server monitoring utility.
This started as a tidy up/re-implementation of Stephane's hackathon monitoring tool. That was aimed only at TLS servers, but included a test (for QNAME minimisation) that is applicable to any server. We've moved a little away from a tool focused purely on TLS to a more general server monitoring utility. We'd like, for example, to add tests for DNSSEC; this is an orthogonal issue to TLS.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,375,2018-01-15T18:53:42Z,2018-02-14T10:44:13Z,2018-02-14T10:44:13Z,MERGED,True,2297,12,13,https://github.com/banburybill,Feature/monitor tool,48,[],https://github.com/getdnsapi/getdns/pull/375,https://github.com/banburybill,2,https://github.com/getdnsapi/getdns/pull/375#issuecomment-359797560,"This PR is not (particularly) a request for an immediate merge, but instead to show where we are heading with the server monitoring utility.
This started as a tidy up/re-implementation of Stephane's hackathon monitoring tool. That was aimed only at TLS servers, but included a test (for QNAME minimisation) that is applicable to any server. We've moved a little away from a tool focused purely on TLS to a more general server monitoring utility. We'd like, for example, to add tests for DNSSEC; this is an orthogonal issue to TLS.",This is all the tests and other changes that we have planned. This PR is ready for reviewing.,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,375,2018-01-15T18:53:42Z,2018-02-14T10:44:13Z,2018-02-14T10:44:13Z,MERGED,True,2297,12,13,https://github.com/banburybill,Feature/monitor tool,48,[],https://github.com/getdnsapi/getdns/pull/375,https://github.com/banburybill,3,https://github.com/getdnsapi/getdns/pull/375#issuecomment-363761201,"This PR is not (particularly) a request for an immediate merge, but instead to show where we are heading with the server monitoring utility.
This started as a tidy up/re-implementation of Stephane's hackathon monitoring tool. That was aimed only at TLS servers, but included a test (for QNAME minimisation) that is applicable to any server. We've moved a little away from a tool focused purely on TLS to a more general server monitoring utility. We'd like, for example, to add tests for DNSSEC; this is an orthogonal issue to TLS.","On 07/02/2018 11:44, wtoorop wrote:
 ***@***.**** commented on this pull request.

 ------------------------------------------------------------------------

 In src/tools/getdns_server_mon.c
 <#375 (comment)>:

> @@ -1587,7 +1587,7 @@ static exit_value test_out_of_order(struct test_info_s *test_info,
          /* A set of asynchronous queries to send. One exists. */
          const char GOOD_NAME[] = ""getdnsapi.net"";
          struct async_query async_queries[] = {
 -                { ""1000.delay.getdnsapi.net"", 0, false },
 +                { ""400.delay.getdnsapi.net"", 0, false },

 delaydns (the server that answers these queries) only looks at the
 leftmost label. I believe detection might become more reliable and less
 sensitive to caching if we would query for ""400..delay.getdnsapi.net"".
 Consider same cache having IPv4 and IPv6 address. Or serve stale?
400..delay doesn't work well.

Jims-iMac:build-mac jim$ src/tools/getdns_server_mon @9.9.9.9 OOOR
DNS Lookup name:	getdnsapi.net
DNS Lookup RR type:	AAAA
getdns result:		At least one response was returned (900)
Transport:		TCP
RTT:			177ms
Search:			400..delay.getdnsapi.net
Async search failed: Badly-formed domain name in first argument (300)

I'm experimenting with a random label between 400 and delay, e.g.
400.n2546.delay.getdnsapi.net.
-- 
Jim Hague - jim@lunch.org.uk            Never trust a computer you can't
lift.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,375,2018-01-15T18:53:42Z,2018-02-14T10:44:13Z,2018-02-14T10:44:13Z,MERGED,True,2297,12,13,https://github.com/banburybill,Feature/monitor tool,48,[],https://github.com/getdnsapi/getdns/pull/375,https://github.com/wtoorop,4,https://github.com/getdnsapi/getdns/pull/375#issuecomment-363763619,"This PR is not (particularly) a request for an immediate merge, but instead to show where we are heading with the server monitoring utility.
This started as a tidy up/re-implementation of Stephane's hackathon monitoring tool. That was aimed only at TLS servers, but included a test (for QNAME minimisation) that is applicable to any server. We've moved a little away from a tool focused purely on TLS to a more general server monitoring utility. We'd like, for example, to add tests for DNSSEC; this is an orthogonal issue to TLS.","Op 07-02-18 om 13:58 schreef Jim Hague:
 On 07/02/2018 11:44, wtoorop wrote:
> ***@***.**** commented on this pull request.
>
> ------------------------------------------------------------------------
>
> In src/tools/getdns_server_mon.c
> <#375 (comment)>:
>
>> @@ -1587,7 +1587,7 @@ static exit_value test_out_of_order(struct
 test_info_s *test_info,
> /* A set of asynchronous queries to send. One exists. */
> const char GOOD_NAME[] = ""getdnsapi.net"";
> struct async_query async_queries[] = {
> - { ""1000.delay.getdnsapi.net"", 0, false },
> + { ""400.delay.getdnsapi.net"", 0, false },
>
> delaydns (the server that answers these queries) only looks at the
> leftmost label. I believe detection might become more reliable and less
> sensitive to caching if we would query for ""400..delay.getdnsapi.net"".
> Consider same cache having IPv4 and IPv6 address. Or serve stale?

 400..delay doesn't work well.
hehe... markdown git rid of the <variable> labels.
I meant to say <delay>.<random label>.delay.getdnsapi.net.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,375,2018-01-15T18:53:42Z,2018-02-14T10:44:13Z,2018-02-14T10:44:13Z,MERGED,True,2297,12,13,https://github.com/banburybill,Feature/monitor tool,48,[],https://github.com/getdnsapi/getdns/pull/375,https://github.com/banburybill,5,https://github.com/getdnsapi/getdns/pull/375#issuecomment-363812988,"This PR is not (particularly) a request for an immediate merge, but instead to show where we are heading with the server monitoring utility.
This started as a tidy up/re-implementation of Stephane's hackathon monitoring tool. That was aimed only at TLS servers, but included a test (for QNAME minimisation) that is applicable to any server. We've moved a little away from a tool focused purely on TLS to a more general server monitoring utility. We'd like, for example, to add tests for DNSSEC; this is an orthogonal issue to TLS.","On 07/02/2018 13:08, wtoorop wrote:
> 400..delay doesn't work well.

 hehe... markdown git rid of the <variable> labels.
 I meant to say <delay>.<random label>.delay.getdnsapi.net.
Doh. I see now! Good thing we both had the same idea.

It looks like it works, or at least doesn't work any worse than not
using the random label.

https://dnsprivacy.org/jenkins/job/dnsprivacy-monitoring/ is now using
the random label.
-- 
Jim Hague - jim.hague@acm.org          Never trust a computer you can't
lift.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,375,2018-01-15T18:53:42Z,2018-02-14T10:44:13Z,2018-02-14T10:44:13Z,MERGED,True,2297,12,13,https://github.com/banburybill,Feature/monitor tool,48,[],https://github.com/getdnsapi/getdns/pull/375,https://github.com/wtoorop,6,https://github.com/getdnsapi/getdns/pull/375#issuecomment-363821421,"This PR is not (particularly) a request for an immediate merge, but instead to show where we are heading with the server monitoring utility.
This started as a tidy up/re-implementation of Stephane's hackathon monitoring tool. That was aimed only at TLS servers, but included a test (for QNAME minimisation) that is applicable to any server. We've moved a little away from a tool focused purely on TLS to a more general server monitoring utility. We'd like, for example, to add tests for DNSSEC; this is an orthogonal issue to TLS.","Op 07-02-18 om 16:52 schreef Jim Hague:
 On 07/02/2018 13:08, wtoorop wrote:

>> 400..delay doesn't work well.
>
> hehe... markdown git rid of the <variable> labels.
> I meant to say <delay>.<random label>.delay.getdnsapi.net.

 Doh. I see now! Good thing we both had the same idea.

 It looks like it works, or at least doesn't work any worse than not
 using the random label.

 https://dnsprivacy.org/jenkins/job/dnsprivacy-monitoring/ is now using
 the random label.
Yeah I see that the OOOR property is now more often the same for v4 and
v6.  Or did you fix that earlier already?",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,376,2018-01-20T20:35:15Z,2018-01-22T16:03:39Z,2018-01-22T16:03:42Z,CLOSED,False,3,0,1,https://github.com/stephengroat,add osx,1,[],https://github.com/getdnsapi/getdns/pull/376,https://github.com/stephengroat,1,https://github.com/getdnsapi/getdns/pull/376,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,377,2018-01-24T13:20:30Z,2018-02-14T10:44:13Z,2019-11-12T11:15:18Z,MERGED,True,94,50,2,https://github.com/saradickinson,Improve handling of opportunistic back-off. If other transports are w…,1,[],https://github.com/getdnsapi/getdns/pull/377,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/377,"…orking, don’t forcibly promote failed upstreams just wait for the re-try timer.
Clean up logs.","…orking, don’t forcibly promote failed upstreams just wait for the re-try timer.
Clean up logs.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,378,2018-01-25T13:00:49Z,2019-11-22T05:48:19Z,2019-11-22T05:48:19Z,CLOSED,False,27,636,20,https://github.com/banburybill,Remove YAML and Stubby from getdns.,1,[],https://github.com/getdnsapi/getdns/pull/378,https://github.com/banburybill,1,https://github.com/getdnsapi/getdns/pull/378,"This PR is for discussion.
There is a companion PR on Stubby to build getdns as a subproject of Stubby.","This PR is for discussion.
There is a companion PR on Stubby to build getdns as a subproject of Stubby.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,379,2018-01-31T13:47:00Z,2018-02-02T09:44:55Z,2018-02-02T09:45:15Z,MERGED,True,127,60,3,https://github.com/wtoorop,Devel/tcp server stability,5,[],https://github.com/getdnsapi/getdns/pull/379,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/379,"Resolved corrupted memory, double frees and segmentation faults issues reported in getdnsapi/stubby#61
Many thanks to @maddie and @ArchangeGabriel !","Resolved corrupted memory, double frees and segmentation faults issues reported in getdnsapi/stubby#61
Many thanks to @maddie and @ArchangeGabriel !",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,380,2018-02-01T10:32:21Z,2018-02-01T14:55:54Z,2018-02-23T22:10:59Z,CLOSED,False,53,53,24,https://github.com/dkg,fix minor typos and misspellings,1,[],https://github.com/getdnsapi/getdns/pull/380,https://github.com/dkg,1,https://github.com/getdnsapi/getdns/pull/380,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,380,2018-02-01T10:32:21Z,2018-02-01T14:55:54Z,2018-02-23T22:10:59Z,CLOSED,False,53,53,24,https://github.com/dkg,fix minor typos and misspellings,1,[],https://github.com/getdnsapi/getdns/pull/380,https://github.com/wtoorop,2,https://github.com/getdnsapi/getdns/pull/380#issuecomment-362290264,,"Oh my... well, thank you 👍",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,381,2018-02-12T15:01:42Z,2018-02-14T10:44:13Z,2018-02-22T09:22:42Z,MERGED,True,119,2,8,https://github.com/wtoorop,Features/tls curves list,2,[],https://github.com/getdnsapi/getdns/pull/381,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/381,"Ability to configure the curves to use with upstreams.
Requested in issue: getdnsapi/stubby#56","Ability to configure the curves to use with upstreams.
Requested in issue: getdnsapi/stubby#56",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,383,2018-02-22T15:08:36Z,2018-03-05T16:09:15Z,2018-03-13T14:46:17Z,MERGED,True,1,1,1,https://github.com/wtoorop,Bugfix#382 Do not install tools in parallel,1,[],https://github.com/getdnsapi/getdns/pull/383,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/383,Fix for issue #382,Fix for issue #382,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,384,2018-02-23T22:12:50Z,2018-03-05T16:09:16Z,2018-03-05T16:09:16Z,MERGED,True,45,45,18,https://github.com/dkg,Fix minor spelling and formatting.,1,[],https://github.com/getdnsapi/getdns/pull/384,https://github.com/dkg,1,https://github.com/getdnsapi/getdns/pull/384,These issues were found with the codespell tool.,These issues were found with the codespell tool.,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,386,2018-02-28T11:41:37Z,2018-03-13T14:43:54Z,2018-03-13T14:43:54Z,CLOSED,False,82,7,6,https://github.com/rwgroenenberg,UDP failover improvements,5,[],https://github.com/getdnsapi/getdns/pull/386,https://github.com/rwgroenenberg,1,https://github.com/getdnsapi/getdns/pull/386,594943c,594943c,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,386,2018-02-28T11:41:37Z,2018-03-13T14:43:54Z,2018-03-13T14:43:54Z,CLOSED,False,82,7,6,https://github.com/rwgroenenberg,UDP failover improvements,5,[],https://github.com/getdnsapi/getdns/pull/386,https://github.com/rwgroenenberg,2,https://github.com/getdnsapi/getdns/pull/386#issuecomment-369577345,594943c,"Fixed the constants/symbols, sorry for the confusion.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,386,2018-02-28T11:41:37Z,2018-03-13T14:43:54Z,2018-03-13T14:43:54Z,CLOSED,False,82,7,6,https://github.com/rwgroenenberg,UDP failover improvements,5,[],https://github.com/getdnsapi/getdns/pull/386,https://github.com/wtoorop,3,https://github.com/getdnsapi/getdns/pull/386#issuecomment-369592990,594943c,Sure :) No problem!,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,386,2018-02-28T11:41:37Z,2018-03-13T14:43:54Z,2018-03-13T14:43:54Z,CLOSED,False,82,7,6,https://github.com/rwgroenenberg,UDP failover improvements,5,[],https://github.com/getdnsapi/getdns/pull/386,https://github.com/wtoorop,4,https://github.com/getdnsapi/getdns/pull/386#issuecomment-372689872,594943c,This has been merged without the configuration symbols.,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,387,2018-03-01T01:27:10Z,2018-03-13T14:43:17Z,2018-03-13T14:43:17Z,CLOSED,False,5,11,1,https://github.com/neheb,Fix val_secalgo.c compile with newer OpenSSL,1,[],https://github.com/getdnsapi/getdns/pull/387,https://github.com/neheb,1,https://github.com/getdnsapi/getdns/pull/387,The defines for the specific headers have changed. Tested on version 1.0.2 with deprecated APIs disabled.,The defines for the specific headers have changed. Tested on version 1.0.2 with deprecated APIs disabled.,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,387,2018-03-01T01:27:10Z,2018-03-13T14:43:17Z,2018-03-13T14:43:17Z,CLOSED,False,5,11,1,https://github.com/neheb,Fix val_secalgo.c compile with newer OpenSSL,1,[],https://github.com/getdnsapi/getdns/pull/387,https://github.com/wtoorop,2,https://github.com/getdnsapi/getdns/pull/387#issuecomment-370440269,The defines for the specific headers have changed. Tested on version 1.0.2 with deprecated APIs disabled.,"Thanks, I understand but I'm feeling more comfortable with a slightly more conservative approach.
Such as done in commit 06e1c74",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,387,2018-03-01T01:27:10Z,2018-03-13T14:43:17Z,2018-03-13T14:43:17Z,CLOSED,False,5,11,1,https://github.com/neheb,Fix val_secalgo.c compile with newer OpenSSL,1,[],https://github.com/getdnsapi/getdns/pull/387,https://github.com/neheb,3,https://github.com/getdnsapi/getdns/pull/387#issuecomment-370446458,The defines for the specific headers have changed. Tested on version 1.0.2 with deprecated APIs disabled.,Does this even do anything? The error is missing dsa.h and bn.h includes,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,387,2018-03-01T01:27:10Z,2018-03-13T14:43:17Z,2018-03-13T14:43:17Z,CLOSED,False,5,11,1,https://github.com/neheb,Fix val_secalgo.c compile with newer OpenSSL,1,[],https://github.com/getdnsapi/getdns/pull/387,https://github.com/wtoorop,4,https://github.com/getdnsapi/getdns/pull/387#issuecomment-370476211,The defines for the specific headers have changed. Tested on version 1.0.2 with deprecated APIs disabled.,"Sure @neheb it disables DSA support when it is not available via <openssl/engines.h>
You can give the release candidate with this fix a try:

https://getdnsapi.net/releases/getdns-1-4-1-rc1/",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,387,2018-03-01T01:27:10Z,2018-03-13T14:43:17Z,2018-03-13T14:43:17Z,CLOSED,False,5,11,1,https://github.com/neheb,Fix val_secalgo.c compile with newer OpenSSL,1,[],https://github.com/getdnsapi/getdns/pull/387,https://github.com/neheb,5,https://github.com/getdnsapi/getdns/pull/387#issuecomment-370495644,The defines for the specific headers have changed. Tested on version 1.0.2 with deprecated APIs disabled.,"Uhhh that's not the issue. The issue is that once deprecated APIs are disabled, DSA.h does not get included by engines.h
See: https://github.com/openssl/openssl/blob/OpenSSL_1_0_2-stable/crypto/engine/engine.h#L74
edit: what I'm trying to say is, even if DSA support is compiled in, it will not get used.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,387,2018-03-01T01:27:10Z,2018-03-13T14:43:17Z,2018-03-13T14:43:17Z,CLOSED,False,5,11,1,https://github.com/neheb,Fix val_secalgo.c compile with newer OpenSSL,1,[],https://github.com/getdnsapi/getdns/pull/387,https://github.com/neheb,6,https://github.com/getdnsapi/getdns/pull/387#issuecomment-370508936,The defines for the specific headers have changed. Tested on version 1.0.2 with deprecated APIs disabled.,"Additionally, OpenSSL is compiled with the no-engines flag",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,387,2018-03-01T01:27:10Z,2018-03-13T14:43:17Z,2018-03-13T14:43:17Z,CLOSED,False,5,11,1,https://github.com/neheb,Fix val_secalgo.c compile with newer OpenSSL,1,[],https://github.com/getdnsapi/getdns/pull/387,https://github.com/wtoorop,7,https://github.com/getdnsapi/getdns/pull/387#issuecomment-370546696,The defines for the specific headers have changed. Tested on version 1.0.2 with deprecated APIs disabled.,"Yes, so that is now detected by configure and DSA support disabled.
(we know from experience this is safest)",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,387,2018-03-01T01:27:10Z,2018-03-13T14:43:17Z,2018-03-13T14:43:17Z,CLOSED,False,5,11,1,https://github.com/neheb,Fix val_secalgo.c compile with newer OpenSSL,1,[],https://github.com/getdnsapi/getdns/pull/387,https://github.com/wtoorop,8,https://github.com/getdnsapi/getdns/pull/387#issuecomment-372689646,The defines for the specific headers have changed. Tested on version 1.0.2 with deprecated APIs disabled.,A different approach has been merged.,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,389,2018-03-02T13:41:58Z,2018-03-05T16:09:16Z,2018-03-13T14:46:15Z,MERGED,True,31,119,1,https://github.com/wtoorop,Devel/dnssec issues,2,[],https://github.com/getdnsapi/getdns/pull/389,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/389,"Resolves unjustly giving BOGUS status to Insecure NODATA answers.
(thanks havinke)
Chases for DS instead of SOA to find zonecut (resolves www.kpn.nl. A being bogus)
(thanks Elmer Lastdrager)","Resolves unjustly giving BOGUS status to Insecure NODATA answers.
(thanks havinke)
Chases for DS instead of SOA to find zonecut (resolves www.kpn.nl. A being bogus)
(thanks Elmer Lastdrager)",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,390,2018-03-02T15:04:21Z,2018-03-13T14:42:46Z,2018-03-13T14:42:46Z,CLOSED,False,14,0,3,https://github.com/rwgroenenberg,Bug388 endless loop tcp,2,[],https://github.com/getdnsapi/getdns/pull/390,https://github.com/rwgroenenberg,1,https://github.com/getdnsapi/getdns/pull/390,"Quick fix for #388: try all TCP upstreams not more than once for each request.
Still not ideal as upstream_select_stateful() ignores the backoff state when
no other is available, so each request will try each upstream again when none
is available. This can cause a lot of TCP connection attempts...","Quick fix for #388: try all TCP upstreams not more than once for each request.
Still not ideal as upstream_select_stateful() ignores the backoff state when
no other is available, so each request will try each upstream again when none
is available. This can cause a lot of TCP connection attempts...",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,390,2018-03-02T15:04:21Z,2018-03-13T14:42:46Z,2018-03-13T14:42:46Z,CLOSED,False,14,0,3,https://github.com/rwgroenenberg,Bug388 endless loop tcp,2,[],https://github.com/getdnsapi/getdns/pull/390,https://github.com/wtoorop,2,https://github.com/getdnsapi/getdns/pull/390#issuecomment-372689462,"Quick fix for #388: try all TCP upstreams not more than once for each request.
Still not ideal as upstream_select_stateful() ignores the backoff state when
no other is available, so each request will try each upstream again when none
is available. This can cause a lot of TCP connection attempts...",Something similar has been merged,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,391,2018-03-02T15:07:47Z,2018-03-05T16:09:16Z,2018-03-13T14:41:31Z,MERGED,True,7,0,3,https://github.com/wtoorop,Don't retry an already tried upstream,2,[],https://github.com/getdnsapi/getdns/pull/391,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/391,"Alternative, slightly smaller, fix for bug #388
Robert could you review?  I think this one is slightly easier to digest","Alternative, slightly smaller, fix for bug #388
Robert could you review?  I think this one is slightly easier to digest",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,393,2018-04-05T17:36:51Z,2018-05-11T10:52:18Z,2019-11-12T11:15:16Z,MERGED,True,15,5,1,https://github.com/saradickinson,Temporary fix for https://github.com/getdnsapi/stubby/issues/87. Dete…,1,[],https://github.com/getdnsapi/getdns/pull/393,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/393,…ct and ignore duplicate certs in the root store.,…ct and ignore duplicate certs in the root store.,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,396,2018-05-07T14:13:29Z,2018-05-11T10:51:34Z,2019-11-12T11:15:16Z,MERGED,True,15,5,1,https://github.com/saradickinson,Temporary fix for https://github.com/getdnsapi/stubby/issues/87. Dete…,1,[],https://github.com/getdnsapi/getdns/pull/396,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/396,"…ct and ignore duplicate certs in the root store.
Thought this had already been merged but realised I missed it!","…ct and ignore duplicate certs in the root store.
Thought this had already been merged but realised I missed it!",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,397,2018-05-08T13:13:06Z,2018-05-11T11:04:50Z,2018-05-12T12:58:40Z,MERGED,True,1,4,1,https://github.com/ehmry,No TCP sendto without TCP_FASTOPEN,1,[],https://github.com/getdnsapi/getdns/pull/397,https://github.com/ehmry,1,https://github.com/getdnsapi/getdns/pull/397,"Stubby on Genode (BTW, Stubby has been ported to Genode) fails to use transports other than UDP. I've tracked this down to the use of sendto for TCP and TLS connections. We have not implemented TCP Fast Open in our Berkly sockets, and we would prefer that write would be used in place of sendto, because POSIX is quite vague on the sendto corner cases.
Ref genodelabs/genode#2807","Stubby on Genode (BTW, Stubby has been ported to Genode) fails to use transports other than UDP. I've tracked this down to the use of sendto for TCP and TLS connections. We have not implemented TCP Fast Open in our Berkly sockets, and we would prefer that write would be used in place of sendto, because POSIX is quite vague on the sendto corner cases.
Ref genodelabs/genode#2807",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,397,2018-05-08T13:13:06Z,2018-05-11T11:04:50Z,2018-05-12T12:58:40Z,MERGED,True,1,4,1,https://github.com/ehmry,No TCP sendto without TCP_FASTOPEN,1,[],https://github.com/getdnsapi/getdns/pull/397,https://github.com/wtoorop,2,https://github.com/getdnsapi/getdns/pull/397#issuecomment-388333180,"Stubby on Genode (BTW, Stubby has been ported to Genode) fails to use transports other than UDP. I've tracked this down to the use of sendto for TCP and TLS connections. We have not implemented TCP Fast Open in our Berkly sockets, and we would prefer that write would be used in place of sendto, because POSIX is quite vague on the sendto corner cases.
Ref genodelabs/genode#2807","Ok, but I will replace write(a, b, c) with send(a, b, c, 0), because I know write causes problems on Windows when used on socket fd's.",True,{'THUMBS_UP': ['https://github.com/ehmry']}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,412,2018-12-13T21:00:48Z,2018-12-14T09:58:10Z,2018-12-14T09:58:10Z,CLOSED,False,0,1,1,https://github.com/b3rtdb,remove TLS1_3,1,[],https://github.com/getdnsapi/getdns/pull/412,https://github.com/b3rtdb,1,https://github.com/getdnsapi/getdns/pull/412,"In the last switch-statement to get the tls version of the system, the line ""case GETDNS_TLS1_3: return TLS1_3_VERSION;"" throws an error when using the 'make' command.
Apparently, TLS1_3 was not defined.
Or the line is removed, or a declaration is made.
I removed the line and the compilation went fine.","In the last switch-statement to get the tls version of the system, the line ""case GETDNS_TLS1_3: return TLS1_3_VERSION;"" throws an error when using the 'make' command.
Apparently, TLS1_3 was not defined.
Or the line is removed, or a declaration is made.
I removed the line and the compilation went fine.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,412,2018-12-13T21:00:48Z,2018-12-14T09:58:10Z,2018-12-14T09:58:10Z,CLOSED,False,0,1,1,https://github.com/b3rtdb,remove TLS1_3,1,[],https://github.com/getdnsapi/getdns/pull/412,https://github.com/wtoorop,2,https://github.com/getdnsapi/getdns/pull/412#issuecomment-447275201,"In the last switch-statement to get the tls version of the system, the line ""case GETDNS_TLS1_3: return TLS1_3_VERSION;"" throws an error when using the 'make' command.
Apparently, TLS1_3 was not defined.
Or the line is removed, or a declaration is made.
I removed the line and the compilation went fine.","Thanks, but we recommend users to use the master branch instead of develop.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,413,2018-12-14T16:00:30Z,2019-01-23T11:54:11Z,2019-01-23T11:54:11Z,MERGED,True,4678,2347,50,https://github.com/banburybill,"Experimental - abstract OpenSSL interface, implement GnuTLS alternative",82,[],https://github.com/getdnsapi/getdns/pull/413,https://github.com/banburybill,1,https://github.com/getdnsapi/getdns/pull/413,"In the GnuTLS build, getddns can connect to a DoT server and perform lookups. DNSSEC support is not complete, but most other features work. Specifically:

Cipher list specification. Note that these must be specified by GnuTLS priority strings, which are not the same as their OpenSSL counterparts. Cipher lists are therefore not interchangeable.
Hostname certificate verification.
Public key pinning.
Specifying certificate CA file/path.

We also removed support for older OpenSSL versions, so smooth the process of creating this proof of concept.
We are creating this PR as a record of the prototyping work done.","In the GnuTLS build, getddns can connect to a DoT server and perform lookups. DNSSEC support is not complete, but most other features work. Specifically:

Cipher list specification. Note that these must be specified by GnuTLS priority strings, which are not the same as their OpenSSL counterparts. Cipher lists are therefore not interchangeable.
Hostname certificate verification.
Public key pinning.
Specifying certificate CA file/path.

We also removed support for older OpenSSL versions, so smooth the process of creating this proof of concept.
We are creating this PR as a record of the prototyping work done.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,414,2018-12-23T11:32:25Z,2018-12-31T15:14:47Z,2019-01-01T12:50:04Z,MERGED,True,1,2,1,https://github.com/ArchangeGabriel,context: remove TLS13 ciphers from cipher_list,1,[],https://github.com/getdnsapi/getdns/pull/414,https://github.com/ArchangeGabriel,1,https://github.com/getdnsapi/getdns/pull/414,TLS 1.3 ciphers have to be set in ciphersuites instead.,TLS 1.3 ciphers have to be set in ciphersuites instead.,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,417,2019-01-28T10:26:55Z,2019-01-28T10:41:36Z,2019-01-29T12:35:45Z,MERGED,True,7,6,5,https://github.com/he32,Fix various build warnings uncovered on NetBSD w/pkgsrc.,1,[],https://github.com/getdnsapi/getdns/pull/417,https://github.com/he32,1,https://github.com/getdnsapi/getdns/pull/417,"The isxxxx() and toxxxx() functions have a limited well-defined
input value range, namely that of ""unsigned char"" plus EOF.  Cast
args accordingly.
Bring strncasecmp() into scope by including <strings.h>.","The isxxxx() and toxxxx() functions have a limited well-defined
input value range, namely that of ""unsigned char"" plus EOF.  Cast
args accordingly.
Bring strncasecmp() into scope by including <strings.h>.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,417,2019-01-28T10:26:55Z,2019-01-28T10:41:36Z,2019-01-29T12:35:45Z,MERGED,True,7,6,5,https://github.com/he32,Fix various build warnings uncovered on NetBSD w/pkgsrc.,1,[],https://github.com/getdnsapi/getdns/pull/417,https://github.com/wtoorop,2,https://github.com/getdnsapi/getdns/pull/417#issuecomment-458080054,"The isxxxx() and toxxxx() functions have a limited well-defined
input value range, namely that of ""unsigned char"" plus EOF.  Cast
args accordingly.
Bring strncasecmp() into scope by including <strings.h>.","Thanks!
Would be even better if I could be warned about these in some sort of CI setup.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,417,2019-01-28T10:26:55Z,2019-01-28T10:41:36Z,2019-01-29T12:35:45Z,MERGED,True,7,6,5,https://github.com/he32,Fix various build warnings uncovered on NetBSD w/pkgsrc.,1,[],https://github.com/getdnsapi/getdns/pull/417,https://github.com/he32,3,https://github.com/getdnsapi/getdns/pull/417#issuecomment-458082175,"The isxxxx() and toxxxx() functions have a limited well-defined
input value range, namely that of ""unsigned char"" plus EOF.  Cast
args accordingly.
Bring strncasecmp() into scope by including <strings.h>.",The isxxx() and toxxx() stuff is warned about with -Wchar-subscripts.,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,417,2019-01-28T10:26:55Z,2019-01-28T10:41:36Z,2019-01-29T12:35:45Z,MERGED,True,7,6,5,https://github.com/he32,Fix various build warnings uncovered on NetBSD w/pkgsrc.,1,[],https://github.com/getdnsapi/getdns/pull/417,https://github.com/he32,4,https://github.com/getdnsapi/getdns/pull/417#issuecomment-458082486,"The isxxxx() and toxxxx() functions have a limited well-defined
input value range, namely that of ""unsigned char"" plus EOF.  Cast
args accordingly.
Bring strncasecmp() into scope by including <strings.h>.","The strncasecmp() came via -Wimplicit-function-declaration, but it's possible it's a characteristic of my platform which triggers this.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,417,2019-01-28T10:26:55Z,2019-01-28T10:41:36Z,2019-01-29T12:35:45Z,MERGED,True,7,6,5,https://github.com/he32,Fix various build warnings uncovered on NetBSD w/pkgsrc.,1,[],https://github.com/getdnsapi/getdns/pull/417,https://github.com/wtoorop,5,https://github.com/getdnsapi/getdns/pull/417#issuecomment-458082970,"The isxxxx() and toxxxx() functions have a limited well-defined
input value range, namely that of ""unsigned char"" plus EOF.  Cast
args accordingly.
Bring strncasecmp() into scope by including <strings.h>.","I think it is, because I'm already compiling with  -Wall and -Wpedantic and even -Werror.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,420,2019-02-20T11:11:03Z,2019-02-28T14:44:35Z,2019-02-28T14:44:36Z,MERGED,True,17,6,3,https://github.com/banburybill,Fix builds in mingw32.,3,[],https://github.com/getdnsapi/getdns/pull/420,https://github.com/banburybill,1,https://github.com/getdnsapi/getdns/pull/420,"On mingw64, configure does not find declarations for inet_ntop() and inet_pton(), but does find implementations, and so does not try to compile the compat versions.
On mingw32, configure finds neither declarations or implementations, and so tries to compile the compat versions. However, there are declarations in ws2tcpip.h, and these do not have the same prototype as compat. The build fails, complaining about conflicting types for inet_ntop().
The declarations in ws2tcpip.h are #defines to Windows functions InetNtopA() and InetPtonA(). Which is not good, but we're stuck with it. Try to work around this by including ws2tcpip.h in the headers while checking for declarations. Unfortunately it looks like you can't do that when checking for implementations and substituting compat versions when not found. So only do that if we don't find declarations; we're already making sure that ws2tcpip.h is included via config.h in source modules.","On mingw64, configure does not find declarations for inet_ntop() and inet_pton(), but does find implementations, and so does not try to compile the compat versions.
On mingw32, configure finds neither declarations or implementations, and so tries to compile the compat versions. However, there are declarations in ws2tcpip.h, and these do not have the same prototype as compat. The build fails, complaining about conflicting types for inet_ntop().
The declarations in ws2tcpip.h are #defines to Windows functions InetNtopA() and InetPtonA(). Which is not good, but we're stuck with it. Try to work around this by including ws2tcpip.h in the headers while checking for declarations. Unfortunately it looks like you can't do that when checking for implementations and substituting compat versions when not found. So only do that if we don't find declarations; we're already making sure that ws2tcpip.h is included via config.h in source modules.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,420,2019-02-20T11:11:03Z,2019-02-28T14:44:35Z,2019-02-28T14:44:36Z,MERGED,True,17,6,3,https://github.com/banburybill,Fix builds in mingw32.,3,[],https://github.com/getdnsapi/getdns/pull/420,https://github.com/wtoorop,2,https://github.com/getdnsapi/getdns/pull/420#issuecomment-468298265,"On mingw64, configure does not find declarations for inet_ntop() and inet_pton(), but does find implementations, and so does not try to compile the compat versions.
On mingw32, configure finds neither declarations or implementations, and so tries to compile the compat versions. However, there are declarations in ws2tcpip.h, and these do not have the same prototype as compat. The build fails, complaining about conflicting types for inet_ntop().
The declarations in ws2tcpip.h are #defines to Windows functions InetNtopA() and InetPtonA(). Which is not good, but we're stuck with it. Try to work around this by including ws2tcpip.h in the headers while checking for declarations. Unfortunately it looks like you can't do that when checking for implementations and substituting compat versions when not found. So only do that if we don't find declarations; we're already making sure that ws2tcpip.h is included via config.h in source modules.",Looks perfect! Thanks!,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,421,2019-03-05T09:59:10Z,2019-03-13T11:06:05Z,2019-03-13T11:06:05Z,MERGED,True,1,1,1,https://github.com/banburybill,Update to latest Stubby develop.,1,[],https://github.com/getdnsapi/getdns/pull/421,https://github.com/banburybill,1,https://github.com/getdnsapi/getdns/pull/421,"This change is the base for the Stubby Windows 0.2.5.0 package.
The Jenkins job that builds Stubby Windows release packages works from a special tag. This tag is of the form '<getdns_release>stubby_win<package_id>'. In my repo this change is tagged 'v1.5.1_stubby_win_0.2.5.0'.","This change is the base for the Stubby Windows 0.2.5.0 package.
The Jenkins job that builds Stubby Windows release packages works from a special tag. This tag is of the form '<getdns_release>stubby_win<package_id>'. In my repo this change is tagged 'v1.5.1_stubby_win_0.2.5.0'.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,424,2019-03-24T00:03:34Z,2019-03-24T07:47:27Z,2019-03-24T07:47:27Z,MERGED,True,3,3,1,https://github.com/maciejsszmigiero,Two small trust anchor fetcher fixes,2,[],https://github.com/getdnsapi/getdns/pull/424,https://github.com/maciejsszmigiero,1,https://github.com/getdnsapi/getdns/pull/424,"This PR contains two small trust anchor fetcher fixes:


Fix for calculation of HTTP request buffer size in tas_connect() so
it no longer transmits the terminating NULL byte in its HTTP request
(and so the trust anchor server no longer sends an extra ""501 Not implemented""
HTTP response),


Increase of anchor fetch timeout in tas_doc_read() from a very small 50ms to the
same as the other tas_read_cb() callback setter uses (2s).
This fixes fetching trust anchors on high-latency connections like 3G.","This PR contains two small trust anchor fetcher fixes:


Fix for calculation of HTTP request buffer size in tas_connect() so
it no longer transmits the terminating NULL byte in its HTTP request
(and so the trust anchor server no longer sends an extra ""501 Not implemented""
HTTP response),


Increase of anchor fetch timeout in tas_doc_read() from a very small 50ms to the
same as the other tas_read_cb() callback setter uses (2s).
This fixes fetching trust anchors on high-latency connections like 3G.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,424,2019-03-24T00:03:34Z,2019-03-24T07:47:27Z,2019-03-24T07:47:27Z,MERGED,True,3,3,1,https://github.com/maciejsszmigiero,Two small trust anchor fetcher fixes,2,[],https://github.com/getdnsapi/getdns/pull/424,https://github.com/wtoorop,2,https://github.com/getdnsapi/getdns/pull/424#issuecomment-475936284,"This PR contains two small trust anchor fetcher fixes:


Fix for calculation of HTTP request buffer size in tas_connect() so
it no longer transmits the terminating NULL byte in its HTTP request
(and so the trust anchor server no longer sends an extra ""501 Not implemented""
HTTP response),


Increase of anchor fetch timeout in tas_doc_read() from a very small 50ms to the
same as the other tas_read_cb() callback setter uses (2s).
This fixes fetching trust anchors on high-latency connections like 3G.",Good catches! Thanks,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,426,2019-04-11T20:58:27Z,2019-04-12T13:25:45Z,2019-04-13T12:00:48Z,MERGED,True,14,12,3,https://github.com/themiron,Fix build error with gnu99 compilers,1,[],https://github.com/getdnsapi/getdns/pull/426,https://github.com/themiron,1,https://github.com/getdnsapi/getdns/pull/426,"Typedefs sha256_pin_t & getdns_log_config multiple declaration in context.h,
tls.h and tls_internal.h causes build error with some gnu99 compilers, even
if the redefinition is identical.
One possible way is to protect each occurence with ifdefs, but it seems too
brute, other one is to keep typedef in context.h only and use struct types
in recently added tls* scope.
Error example:
../libtool --quiet --tag=CC --mode=compile arm-brcm-linux-uclibcgnueabi-gcc
-std=gnu99 -I. -I. -I./util/auxiliary -I./tls -I./openssl -I./../stubby/src
-Wall -Wextra -D_BSD_SOURCE -D_DEFAULT_SOURCE ... -c ./convert.c -o convert.lo
In file included from ./context.h:53:0,
from ./util-internal.h:42,
from ./convert.c:50:
./tls.h:45:27: error: redefinition of typedef 'sha256_pin_t'
./openssl/tls-internal.h:57:27: note: previous declaration of 'sha256_pin_t' was here
In file included from ./util-internal.h:42:0,
from ./convert.c:50:
./context.h:133:3: error: redefinition of typedef 'sha256_pin_t'
./tls.h:45:27: note: previous declaration of 'sha256_pin_t' was here
./context.h:267:3: error: redefinition of typedef 'getdns_log_config'
./openssl/tls-internal.h:58:34: note: previous declaration of 'getdns_log_config' was here","Typedefs sha256_pin_t & getdns_log_config multiple declaration in context.h,
tls.h and tls_internal.h causes build error with some gnu99 compilers, even
if the redefinition is identical.
One possible way is to protect each occurence with ifdefs, but it seems too
brute, other one is to keep typedef in context.h only and use struct types
in recently added tls* scope.
Error example:
../libtool --quiet --tag=CC --mode=compile arm-brcm-linux-uclibcgnueabi-gcc
-std=gnu99 -I. -I. -I./util/auxiliary -I./tls -I./openssl -I./../stubby/src
-Wall -Wextra -D_BSD_SOURCE -D_DEFAULT_SOURCE ... -c ./convert.c -o convert.lo
In file included from ./context.h:53:0,
from ./util-internal.h:42,
from ./convert.c:50:
./tls.h:45:27: error: redefinition of typedef 'sha256_pin_t'
./openssl/tls-internal.h:57:27: note: previous declaration of 'sha256_pin_t' was here
In file included from ./util-internal.h:42:0,
from ./convert.c:50:
./context.h:133:3: error: redefinition of typedef 'sha256_pin_t'
./tls.h:45:27: note: previous declaration of 'sha256_pin_t' was here
./context.h:267:3: error: redefinition of typedef 'getdns_log_config'
./openssl/tls-internal.h:58:34: note: previous declaration of 'getdns_log_config' was here",True,{'THUMBS_UP': ['https://github.com/abelbeck']}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,426,2019-04-11T20:58:27Z,2019-04-12T13:25:45Z,2019-04-13T12:00:48Z,MERGED,True,14,12,3,https://github.com/themiron,Fix build error with gnu99 compilers,1,[],https://github.com/getdnsapi/getdns/pull/426,https://github.com/wtoorop,2,https://github.com/getdnsapi/getdns/pull/426#issuecomment-482573454,"Typedefs sha256_pin_t & getdns_log_config multiple declaration in context.h,
tls.h and tls_internal.h causes build error with some gnu99 compilers, even
if the redefinition is identical.
One possible way is to protect each occurence with ifdefs, but it seems too
brute, other one is to keep typedef in context.h only and use struct types
in recently added tls* scope.
Error example:
../libtool --quiet --tag=CC --mode=compile arm-brcm-linux-uclibcgnueabi-gcc
-std=gnu99 -I. -I. -I./util/auxiliary -I./tls -I./openssl -I./../stubby/src
-Wall -Wextra -D_BSD_SOURCE -D_DEFAULT_SOURCE ... -c ./convert.c -o convert.lo
In file included from ./context.h:53:0,
from ./util-internal.h:42,
from ./convert.c:50:
./tls.h:45:27: error: redefinition of typedef 'sha256_pin_t'
./openssl/tls-internal.h:57:27: note: previous declaration of 'sha256_pin_t' was here
In file included from ./util-internal.h:42:0,
from ./convert.c:50:
./context.h:133:3: error: redefinition of typedef 'sha256_pin_t'
./tls.h:45:27: note: previous declaration of 'sha256_pin_t' was here
./context.h:267:3: error: redefinition of typedef 'getdns_log_config'
./openssl/tls-internal.h:58:34: note: previous declaration of 'getdns_log_config' was here",Thanks. I agree using just structs is best.,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,426,2019-04-11T20:58:27Z,2019-04-12T13:25:45Z,2019-04-13T12:00:48Z,MERGED,True,14,12,3,https://github.com/themiron,Fix build error with gnu99 compilers,1,[],https://github.com/getdnsapi/getdns/pull/426,https://github.com/abelbeck,3,https://github.com/getdnsapi/getdns/pull/426#issuecomment-482616823,"Typedefs sha256_pin_t & getdns_log_config multiple declaration in context.h,
tls.h and tls_internal.h causes build error with some gnu99 compilers, even
if the redefinition is identical.
One possible way is to protect each occurence with ifdefs, but it seems too
brute, other one is to keep typedef in context.h only and use struct types
in recently added tls* scope.
Error example:
../libtool --quiet --tag=CC --mode=compile arm-brcm-linux-uclibcgnueabi-gcc
-std=gnu99 -I. -I. -I./util/auxiliary -I./tls -I./openssl -I./../stubby/src
-Wall -Wextra -D_BSD_SOURCE -D_DEFAULT_SOURCE ... -c ./convert.c -o convert.lo
In file included from ./context.h:53:0,
from ./util-internal.h:42,
from ./convert.c:50:
./tls.h:45:27: error: redefinition of typedef 'sha256_pin_t'
./openssl/tls-internal.h:57:27: note: previous declaration of 'sha256_pin_t' was here
In file included from ./util-internal.h:42:0,
from ./convert.c:50:
./context.h:133:3: error: redefinition of typedef 'sha256_pin_t'
./tls.h:45:27: note: previous declaration of 'sha256_pin_t' was here
./context.h:267:3: error: redefinition of typedef 'getdns_log_config'
./openssl/tls-internal.h:58:34: note: previous declaration of 'getdns_log_config' was here","@themiron Thanks for this, without this fix I saw a lot of pedantic warnings like this:
./tls.h:45:27: warning: redefinition of typedef 'sha256_pin_t' [-Wpedantic]

While the build completed, this fix eliminates the warnings.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,426,2019-04-11T20:58:27Z,2019-04-12T13:25:45Z,2019-04-13T12:00:48Z,MERGED,True,14,12,3,https://github.com/themiron,Fix build error with gnu99 compilers,1,[],https://github.com/getdnsapi/getdns/pull/426,https://github.com/themiron,4,https://github.com/getdnsapi/getdns/pull/426#issuecomment-482803047,"Typedefs sha256_pin_t & getdns_log_config multiple declaration in context.h,
tls.h and tls_internal.h causes build error with some gnu99 compilers, even
if the redefinition is identical.
One possible way is to protect each occurence with ifdefs, but it seems too
brute, other one is to keep typedef in context.h only and use struct types
in recently added tls* scope.
Error example:
../libtool --quiet --tag=CC --mode=compile arm-brcm-linux-uclibcgnueabi-gcc
-std=gnu99 -I. -I. -I./util/auxiliary -I./tls -I./openssl -I./../stubby/src
-Wall -Wextra -D_BSD_SOURCE -D_DEFAULT_SOURCE ... -c ./convert.c -o convert.lo
In file included from ./context.h:53:0,
from ./util-internal.h:42,
from ./convert.c:50:
./tls.h:45:27: error: redefinition of typedef 'sha256_pin_t'
./openssl/tls-internal.h:57:27: note: previous declaration of 'sha256_pin_t' was here
In file included from ./util-internal.h:42:0,
from ./convert.c:50:
./context.h:133:3: error: redefinition of typedef 'sha256_pin_t'
./tls.h:45:27: note: previous declaration of 'sha256_pin_t' was here
./context.h:267:3: error: redefinition of typedef 'getdns_log_config'
./openssl/tls-internal.h:58:34: note: previous declaration of 'getdns_log_config' was here",thanks,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,427,2019-04-24T22:24:03Z,2019-04-24T22:25:45Z,2019-04-24T22:25:45Z,CLOSED,False,3,2,2,https://github.com/themiron,Optimize local addresses enumeration with old uClibc,1,[],https://github.com/getdnsapi/getdns/pull/427,https://github.com/themiron,1,https://github.com/getdnsapi/getdns/pull/427,"uClibc 0.9.30rc1 - 0.9.32rc5 has bug - getaddrinfo() does not accept numeric
service without any hints. As the related side effect, hint struct with
ai_socktype == 0 (unspec) and ai_protocol == 0 (unpsec) gives the same
EAI_SERVICE error instead of same address with different proto enumebration.
For more details please refer https://bugs.busybox.net/show_bug.cgi?id=3841 and
https://git.uclibc.org/uClibc/commit/?id=bc3be18145e4d57e7268506f123c0f0f373a15e2
Since 0.9.3x uClibc versions are still not somewhat unique in embedded (issue
dups for UDP/TCP/RAW/etc proto, seems worth to have it specified, as a minor
memory allocation optimization at least.
SOCK_DGRAM vs SOCK_STREAM choice doesn't really matter here, both are actually
used for DNS and both are non-zero, no difference is expected on *nix. So
SOCK_DGRAM selected due original comment only.","uClibc 0.9.30rc1 - 0.9.32rc5 has bug - getaddrinfo() does not accept numeric
service without any hints. As the related side effect, hint struct with
ai_socktype == 0 (unspec) and ai_protocol == 0 (unpsec) gives the same
EAI_SERVICE error instead of same address with different proto enumebration.
For more details please refer https://bugs.busybox.net/show_bug.cgi?id=3841 and
https://git.uclibc.org/uClibc/commit/?id=bc3be18145e4d57e7268506f123c0f0f373a15e2
Since 0.9.3x uClibc versions are still not somewhat unique in embedded (issue
dups for UDP/TCP/RAW/etc proto, seems worth to have it specified, as a minor
memory allocation optimization at least.
SOCK_DGRAM vs SOCK_STREAM choice doesn't really matter here, both are actually
used for DNS and both are non-zero, no difference is expected on *nix. So
SOCK_DGRAM selected due original comment only.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,428,2019-04-24T22:35:30Z,2019-04-25T07:52:29Z,2019-04-25T07:52:46Z,MERGED,True,3,2,2,https://github.com/themiron,Optimize local addresses enumeration with old uClibc,1,[],https://github.com/getdnsapi/getdns/pull/428,https://github.com/themiron,1,https://github.com/getdnsapi/getdns/pull/428,"uClibc 0.9.30rc1 - 0.9.32rc5 has bug - getaddrinfo() does not accept numeric
service without any hints. As the related side effect, hint struct with
ai_socktype == 0 (unspec) and ai_protocol == 0 (unpsec) gives the same
EAI_SERVICE error instead of same address with different proto enumebration.
For more details please refer https://bugs.busybox.net/show_bug.cgi?id=3841 and
https://git.uclibc.org/uClibc/commit/?id=bc3be18145e4d57e7268506f123c0f0f373a15e2
Since 0.9.3x uClibc versions are still not somewhat unique in embedded (issue
getdnsapi/stubby/issues/124 as an example) and non-zero ai_socktype allows
to avoid address dups for each supported UDP/TCP/etc proto, seems worth to
have it specified, as a minor memory allocation optimization at least.
SOCK_DGRAM vs SOCK_STREAM choice doesn't really matter here, both are actually
used for DNS and both are non-zero, no difference is expected on *nix. So
SOCK_DGRAM selected due original comment only.","uClibc 0.9.30rc1 - 0.9.32rc5 has bug - getaddrinfo() does not accept numeric
service without any hints. As the related side effect, hint struct with
ai_socktype == 0 (unspec) and ai_protocol == 0 (unpsec) gives the same
EAI_SERVICE error instead of same address with different proto enumebration.
For more details please refer https://bugs.busybox.net/show_bug.cgi?id=3841 and
https://git.uclibc.org/uClibc/commit/?id=bc3be18145e4d57e7268506f123c0f0f373a15e2
Since 0.9.3x uClibc versions are still not somewhat unique in embedded (issue
getdnsapi/stubby/issues/124 as an example) and non-zero ai_socktype allows
to avoid address dups for each supported UDP/TCP/etc proto, seems worth to
have it specified, as a minor memory allocation optimization at least.
SOCK_DGRAM vs SOCK_STREAM choice doesn't really matter here, both are actually
used for DNS and both are non-zero, no difference is expected on *nix. So
SOCK_DGRAM selected due original comment only.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,428,2019-04-24T22:35:30Z,2019-04-25T07:52:29Z,2019-04-25T07:52:46Z,MERGED,True,3,2,2,https://github.com/themiron,Optimize local addresses enumeration with old uClibc,1,[],https://github.com/getdnsapi/getdns/pull/428,https://github.com/wtoorop,2,https://github.com/getdnsapi/getdns/pull/428#issuecomment-486559449,"uClibc 0.9.30rc1 - 0.9.32rc5 has bug - getaddrinfo() does not accept numeric
service without any hints. As the related side effect, hint struct with
ai_socktype == 0 (unspec) and ai_protocol == 0 (unpsec) gives the same
EAI_SERVICE error instead of same address with different proto enumebration.
For more details please refer https://bugs.busybox.net/show_bug.cgi?id=3841 and
https://git.uclibc.org/uClibc/commit/?id=bc3be18145e4d57e7268506f123c0f0f373a15e2
Since 0.9.3x uClibc versions are still not somewhat unique in embedded (issue
getdnsapi/stubby/issues/124 as an example) and non-zero ai_socktype allows
to avoid address dups for each supported UDP/TCP/etc proto, seems worth to
have it specified, as a minor memory allocation optimization at least.
SOCK_DGRAM vs SOCK_STREAM choice doesn't really matter here, both are actually
used for DNS and both are non-zero, no difference is expected on *nix. So
SOCK_DGRAM selected due original comment only.",Absolutely! Thanks!,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,434,2019-09-17T21:29:02Z,2019-09-18T09:01:58Z,2019-09-18T09:01:58Z,MERGED,True,1,1,1,https://github.com/bnoordhuis,Update libuv URL in README,1,[],https://github.com/getdnsapi/getdns/pull/434,https://github.com/bnoordhuis,1,https://github.com/getdnsapi/getdns/pull/434,"I can state with some authority that the old URL hasn't been canonical
for almost five years now.","I can state with some authority that the old URL hasn't been canonical
for almost five years now.",True,{'LAUGH': ['https://github.com/saghul']}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,434,2019-09-17T21:29:02Z,2019-09-18T09:01:58Z,2019-09-18T09:01:58Z,MERGED,True,1,1,1,https://github.com/bnoordhuis,Update libuv URL in README,1,[],https://github.com/getdnsapi/getdns/pull/434,https://github.com/wtoorop,2,https://github.com/getdnsapi/getdns/pull/434#issuecomment-532592420,"I can state with some authority that the old URL hasn't been canonical
for almost five years now.",Merci,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,435,2019-10-17T14:11:17Z,2019-12-20T13:22:12Z,2019-12-20T13:22:12Z,CLOSED,False,61,1,2,https://github.com/saradickinson,Add session key logging with OpenSSL. Just requires OpenSSL 1.1.1 and…,1,[],https://github.com/getdnsapi/getdns/pull/435,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/435,… the SSHKEYLOGFILE env variable to be set.,… the SSHKEYLOGFILE env variable to be set.,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,435,2019-10-17T14:11:17Z,2019-12-20T13:22:12Z,2019-12-20T13:22:12Z,CLOSED,False,61,1,2,https://github.com/saradickinson,Add session key logging with OpenSSL. Just requires OpenSSL 1.1.1 and…,1,[],https://github.com/getdnsapi/getdns/pull/435,https://github.com/wtoorop,2,https://github.com/getdnsapi/getdns/pull/435#issuecomment-564047038,… the SSHKEYLOGFILE env variable to be set.,"I can see this is convenient, but is it safe to include in main branch?
Pehaps with a explicit configure option?",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,436,2019-10-18T11:05:06Z,2019-12-20T13:22:11Z,2019-12-20T13:22:11Z,CLOSED,False,16,10,2,https://github.com/banburybill,"Restore opportunistic connections, and some GnuTLS tweaks",3,[],https://github.com/getdnsapi/getdns/pull/436,https://github.com/banburybill,1,https://github.com/getdnsapi/getdns/pull/436,"With regards to the final change, this deliberately provokes a policy question of whether users should be able to reduce the minimum TLS version below 1.2.
Historically this wasn't possible with older OpenSSL, because we used TLSv1_2_client_method(), but with modern OpenSSL we use TLS_client_method().
The defaults explicitly set a minimum TLS version of 1.2. The user must deliberately specify no minimum TLS version. In this case, this change means that GnuTLS behaviour and modern OpenSSL behaviour diverge - GnuTLS applies a minimum of TLS1.2, OpenSSL negotiates the highest TLS version supported by both client and server - as was the GnuTLS behaviour before the change - but will go below TLS1.2 if necessary, whereas GnuTLS will fail to connect.","With regards to the final change, this deliberately provokes a policy question of whether users should be able to reduce the minimum TLS version below 1.2.
Historically this wasn't possible with older OpenSSL, because we used TLSv1_2_client_method(), but with modern OpenSSL we use TLS_client_method().
The defaults explicitly set a minimum TLS version of 1.2. The user must deliberately specify no minimum TLS version. In this case, this change means that GnuTLS behaviour and modern OpenSSL behaviour diverge - GnuTLS applies a minimum of TLS1.2, OpenSSL negotiates the highest TLS version supported by both client and server - as was the GnuTLS behaviour before the change - but will go below TLS1.2 if necessary, whereas GnuTLS will fail to connect.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,438,2019-11-03T22:30:41Z,2019-11-04T08:33:43Z,2019-11-04T17:24:49Z,MERGED,True,3,3,1,https://github.com/neheb,platform: Prefer poll.h to sys/poll.h,1,[],https://github.com/getdnsapi/getdns/pull/438,https://github.com/neheb,1,https://github.com/getdnsapi/getdns/pull/438,"sys/poll.h seems to be some GNU extension. musl warns about this:
warning redirecting incorrect #include <sys/poll.h> to <poll.h>
Signed-off-by: Rosen Penev rosenp@gmail.com","sys/poll.h seems to be some GNU extension. musl warns about this:
warning redirecting incorrect #include <sys/poll.h> to <poll.h>
Signed-off-by: Rosen Penev rosenp@gmail.com",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,439,2019-11-14T12:36:14Z,2019-11-15T15:55:07Z,2019-11-15T15:55:07Z,CLOSED,False,165,623,64,https://github.com/saradickinson,Feature/cmake testfix - work in progress,8,[],https://github.com/getdnsapi/getdns/pull/439,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/439,"…t require valgrind…….
update stubby commit and ymlx commit to remove build warnings","…t require valgrind…….
update stubby commit and ymlx commit to remove build warnings",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,440,2019-11-15T15:55:33Z,2019-11-18T20:41:34Z,2019-11-18T20:41:34Z,MERGED,True,269,761,70,https://github.com/saradickinson,Feature/cmake testfix,13,[],https://github.com/getdnsapi/getdns/pull/440,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/440,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,440,2019-11-15T15:55:33Z,2019-11-18T20:41:34Z,2019-11-18T20:41:34Z,MERGED,True,269,761,70,https://github.com/saradickinson,Feature/cmake testfix,13,[],https://github.com/getdnsapi/getdns/pull/440,https://github.com/wtoorop,2,https://github.com/getdnsapi/getdns/pull/440#issuecomment-554608184,,"Thank you Sara! Good job!
I'll try to review shortly (and prepare for the beta release)",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,441,2019-11-19T07:25:19Z,2019-11-19T08:11:24Z,2019-11-19T08:11:24Z,CLOSED,False,757,355,20,https://github.com/wtoorop,Hackathon/getdns validate,4,[],https://github.com/getdnsapi/getdns/pull/441,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/441,"Working branch for the getdns_validate tool
@paulehoffman Check out the testing package in src/test/tpkg/123-run-getdns_validate.tpkg","Working branch for the getdns_validate tool
@paulehoffman Check out the testing package in src/test/tpkg/123-run-getdns_validate.tpkg",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,442,2019-11-19T08:12:18Z,2019-11-19T22:39:16Z,2019-11-19T22:39:16Z,MERGED,True,757,355,20,https://github.com/wtoorop,Hackathon/getdns validate,4,[],https://github.com/getdnsapi/getdns/pull/442,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/442,"Working branch for the getdns_validate tool
@paulehoffman Check out the testing package in src/test/tpkg/123-run-getdns_validate.tpkg","Working branch for the getdns_validate tool
@paulehoffman Check out the testing package in src/test/tpkg/123-run-getdns_validate.tpkg",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,442,2019-11-19T08:12:18Z,2019-11-19T22:39:16Z,2019-11-19T22:39:16Z,MERGED,True,757,355,20,https://github.com/wtoorop,Hackathon/getdns validate,4,[],https://github.com/getdnsapi/getdns/pull/442,https://github.com/paulehoffman,2,https://github.com/getdnsapi/getdns/pull/442#issuecomment-555749232,"Working branch for the getdns_validate tool
@paulehoffman Check out the testing package in src/test/tpkg/123-run-getdns_validate.tpkg","I looked through all the file changes (yes, really) and they look fine.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,443,2019-11-20T00:07:58Z,2019-11-22T05:48:19Z,2019-11-22T05:48:19Z,CLOSED,False,10,7,4,https://github.com/paulehoffman,Trivial test of committing,4,[],https://github.com/getdnsapi/getdns/pull/443,https://github.com/paulehoffman,1,https://github.com/getdnsapi/getdns/pull/443,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,444,2019-11-20T00:08:39Z,2019-11-22T05:48:19Z,2019-11-22T05:48:47Z,CLOSED,False,2,2,1,https://github.com/paulehoffman,First cut of making the return JSON,2,[],https://github.com/getdnsapi/getdns/pull/444,https://github.com/paulehoffman,1,https://github.com/getdnsapi/getdns/pull/444,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,445,2019-11-24T21:53:57Z,2019-12-20T13:22:11Z,2019-12-20T13:22:11Z,CLOSED,False,761,356,22,https://github.com/paulehoffman,Editing nits in -h,9,[],https://github.com/getdnsapi/getdns/pull/445,https://github.com/paulehoffman,1,https://github.com/getdnsapi/getdns/pull/445,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,446,2019-11-28T17:06:19Z,2019-12-16T11:16:22Z,2019-12-16T11:16:22Z,MERGED,True,143,88,18,https://github.com/saradickinson,Feature/more cmake,12,[],https://github.com/getdnsapi/getdns/pull/446,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/446,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,446,2019-11-28T17:06:19Z,2019-12-16T11:16:22Z,2019-12-16T11:16:22Z,MERGED,True,143,88,18,https://github.com/saradickinson,Feature/more cmake,12,[],https://github.com/getdnsapi/getdns/pull/446,https://github.com/wtoorop,2,https://github.com/getdnsapi/getdns/pull/446#issuecomment-565983287,,"FYI, with me, after fixing detection of TCP_FASTOPEN, all tests started to work again.
I now think something in TCP stub resolving is broken when TCP_FASTOPEN is not detected",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,446,2019-11-28T17:06:19Z,2019-12-16T11:16:22Z,2019-12-16T11:16:22Z,MERGED,True,143,88,18,https://github.com/saradickinson,Feature/more cmake,12,[],https://github.com/getdnsapi/getdns/pull/446,https://github.com/wtoorop,3,https://github.com/getdnsapi/getdns/pull/446#issuecomment-566017772,,No it was something completely different. Tests were failing because Ubuntu bionic had multiple IP addresses for localhost.,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,447,2019-12-16T11:21:09Z,2019-12-16T11:33:13Z,2021-05-27T21:10:25Z,MERGED,True,2832,4985,134,https://github.com/wtoorop,Feature/cmake,126,[],https://github.com/getdnsapi/getdns/pull/447,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/447,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,448,2019-12-16T15:12:02Z,2019-12-16T15:21:15Z,2019-12-16T15:21:15Z,MERGED,True,2,4,1,https://github.com/k0ekk0ek,Update mailing list references,1,[],https://github.com/getdnsapi/getdns/pull/448,https://github.com/k0ekk0ek,1,https://github.com/getdnsapi/getdns/pull/448,The getdns users mailing list has been changed from users@getdnsapi.net to users@lists.getdnsapi.net. spec@getdnsapi.net was merged with users@getdnsapi.net as requested by @wtoorop. I've updated README.md to reflect this change. Please consider pulling these changes.,The getdns users mailing list has been changed from users@getdnsapi.net to users@lists.getdnsapi.net. spec@getdnsapi.net was merged with users@getdnsapi.net as requested by @wtoorop. I've updated README.md to reflect this change. Please consider pulling these changes.,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,449,2019-12-18T13:06:58Z,2019-12-18T13:47:17Z,2019-12-18T13:47:17Z,MERGED,True,16,4,4,https://github.com/banburybill,Get tests passing on Bionic and OSX,3,[],https://github.com/getdnsapi/getdns/pull/449,https://github.com/banburybill,1,https://github.com/getdnsapi/getdns/pull/449,"Some minor fixes to tests.
These enables the suite to pass without failures on up to date Bionic and on OSX.
OSX omits valgrind, as there is not current valgrind support for Mojave.","Some minor fixes to tests.
These enables the suite to pass without failures on up to date Bionic and on OSX.
OSX omits valgrind, as there is not current valgrind support for Mojave.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,450,2019-12-18T13:21:04Z,2019-12-18T14:02:09Z,2019-12-18T14:02:10Z,MERGED,True,8,427,2,https://github.com/banburybill,README fixes and improvements,3,[],https://github.com/getdnsapi/getdns/pull/450,https://github.com/banburybill,1,https://github.com/getdnsapi/getdns/pull/450,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,451,2019-12-18T13:55:39Z,2019-12-18T14:02:08Z,2019-12-18T14:02:08Z,MERGED,True,9,428,3,https://github.com/wtoorop,Feature/readme polish,4,[],https://github.com/getdnsapi/getdns/pull/451,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/451,With CMakeLists.txt fix :),With CMakeLists.txt fix :),True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,452,2019-12-18T17:41:51Z,2020-02-11T14:45:53Z,2020-02-11T14:45:53Z,MERGED,True,14,2,1,https://github.com/banburybill,More small README tweaks,2,[],https://github.com/getdnsapi/getdns/pull/452,https://github.com/banburybill,1,https://github.com/getdnsapi/getdns/pull/452,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,453,2019-12-20T13:19:43Z,2019-12-20T13:19:55Z,2019-12-20T13:19:55Z,MERGED,True,734,1369,47,https://github.com/wtoorop,Release/1.6.0 beta.1,32,[],https://github.com/getdnsapi/getdns/pull/453,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/453,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,455,2020-01-16T15:56:20Z,2020-02-11T14:49:53Z,2020-02-11T14:49:53Z,MERGED,True,2,2,2,https://github.com/saradickinson,Update the stubby module to latest develop branch,1,[],https://github.com/getdnsapi/getdns/pull/455,https://github.com/saradickinson,1,https://github.com/getdnsapi/getdns/pull/455,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,459,2020-02-25T13:32:47Z,2020-02-25T13:36:45Z,2020-02-25T13:36:45Z,MERGED,True,18,2,3,https://github.com/banburybill,"Tighten Nettle version checking, and fix build issue with Nettle >= 3.4.",1,[],https://github.com/getdnsapi/getdns/pull/459,https://github.com/banburybill,1,https://github.com/getdnsapi/getdns/pull/459,"Nettle 3.4 introduced accessor functions for obtaining nettle_secp_256r1 and nettle_secp_384r1. Use them if present.
Fixes #458","Nettle 3.4 introduced accessor functions for obtaining nettle_secp_256r1 and nettle_secp_384r1. Use them if present.
Fixes #458",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,462,2020-03-01T21:47:13Z,2020-03-02T14:20:52Z,2020-03-02T14:29:46Z,MERGED,True,1,0,1,https://github.com/doublez13,Fix uninitialized value in tls_create_object,1,[],https://github.com/getdnsapi/getdns/pull/462,https://github.com/doublez13,1,https://github.com/getdnsapi/getdns/pull/462,"On the first call to tls_create_object (stub.c), tls_fallback_ok is read
before being initialized. This patch initializes tls_fallback_ok to 0 in
upstream_init (context.c)
Valgrind complains about the uninitialized value:
==14774== Conditional jump or move depends on uninitialised value(s)
==14774==    at 0x1528C3: tls_create_object (stub.c:900)
==14774==    by 0x1556AD: upstream_connect (stub.c:2065)
==14774==    by 0x15582E: upstream_find_for_transport (stub.c:2109)
==14774==    by 0x1558B7: upstream_find_for_netreq (stub.c:2130)
==14774==    by 0x156027: _getdns_submit_stub_request (stub.c:2296)
==14774==    by 0x1421C8: _getdns_submit_netreq (general.c:478)
==14774==    by 0x14261D: getdns_general_ns (general.c:636)
==14774==    by 0x142905: _getdns_general_loop (general.c:731)
==14774==    by 0x1432FB: getdns_general (general.c:888)
==14774==    by 0x118B94: incoming_request_handler (stubby.c:692)
==14774==    by 0x14F46B: udp_read_cb (server.c:762)
==14774==    by 0x15C86B: poll_read_cb (poll_eventloop.c:295)
==14774==  Uninitialised value was created by a heap allocation
==14774==    at 0x483877F: malloc (vg_replace_malloc.c:309)
==14774==    by 0x123CCF: upstreams_create (context.c:581)
==14774==    by 0x128B24: getdns_context_set_upstream_recursive_servers (context.c:2760)
==14774==    by 0x12DBFE: _getdns_context_config_setting (context.c:4646)
==14774==    by 0x12FF47: getdns_context_config (context.c:4769)
==14774==    by 0x1178C2: parse_config (stubby.c:297)
==14774==    by 0x117B24: parse_config_file (stubby.c:343)
==14774==    by 0x11919F: main (stubby.c:833)","On the first call to tls_create_object (stub.c), tls_fallback_ok is read
before being initialized. This patch initializes tls_fallback_ok to 0 in
upstream_init (context.c)
Valgrind complains about the uninitialized value:
==14774== Conditional jump or move depends on uninitialised value(s)
==14774==    at 0x1528C3: tls_create_object (stub.c:900)
==14774==    by 0x1556AD: upstream_connect (stub.c:2065)
==14774==    by 0x15582E: upstream_find_for_transport (stub.c:2109)
==14774==    by 0x1558B7: upstream_find_for_netreq (stub.c:2130)
==14774==    by 0x156027: _getdns_submit_stub_request (stub.c:2296)
==14774==    by 0x1421C8: _getdns_submit_netreq (general.c:478)
==14774==    by 0x14261D: getdns_general_ns (general.c:636)
==14774==    by 0x142905: _getdns_general_loop (general.c:731)
==14774==    by 0x1432FB: getdns_general (general.c:888)
==14774==    by 0x118B94: incoming_request_handler (stubby.c:692)
==14774==    by 0x14F46B: udp_read_cb (server.c:762)
==14774==    by 0x15C86B: poll_read_cb (poll_eventloop.c:295)
==14774==  Uninitialised value was created by a heap allocation
==14774==    at 0x483877F: malloc (vg_replace_malloc.c:309)
==14774==    by 0x123CCF: upstreams_create (context.c:581)
==14774==    by 0x128B24: getdns_context_set_upstream_recursive_servers (context.c:2760)
==14774==    by 0x12DBFE: _getdns_context_config_setting (context.c:4646)
==14774==    by 0x12FF47: getdns_context_config (context.c:4769)
==14774==    by 0x1178C2: parse_config (stubby.c:297)
==14774==    by 0x117B24: parse_config_file (stubby.c:343)
==14774==    by 0x11919F: main (stubby.c:833)",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,462,2020-03-01T21:47:13Z,2020-03-02T14:20:52Z,2020-03-02T14:29:46Z,MERGED,True,1,0,1,https://github.com/doublez13,Fix uninitialized value in tls_create_object,1,[],https://github.com/getdnsapi/getdns/pull/462,https://github.com/wtoorop,2,https://github.com/getdnsapi/getdns/pull/462#issuecomment-593307150,"On the first call to tls_create_object (stub.c), tls_fallback_ok is read
before being initialized. This patch initializes tls_fallback_ok to 0 in
upstream_init (context.c)
Valgrind complains about the uninitialized value:
==14774== Conditional jump or move depends on uninitialised value(s)
==14774==    at 0x1528C3: tls_create_object (stub.c:900)
==14774==    by 0x1556AD: upstream_connect (stub.c:2065)
==14774==    by 0x15582E: upstream_find_for_transport (stub.c:2109)
==14774==    by 0x1558B7: upstream_find_for_netreq (stub.c:2130)
==14774==    by 0x156027: _getdns_submit_stub_request (stub.c:2296)
==14774==    by 0x1421C8: _getdns_submit_netreq (general.c:478)
==14774==    by 0x14261D: getdns_general_ns (general.c:636)
==14774==    by 0x142905: _getdns_general_loop (general.c:731)
==14774==    by 0x1432FB: getdns_general (general.c:888)
==14774==    by 0x118B94: incoming_request_handler (stubby.c:692)
==14774==    by 0x14F46B: udp_read_cb (server.c:762)
==14774==    by 0x15C86B: poll_read_cb (poll_eventloop.c:295)
==14774==  Uninitialised value was created by a heap allocation
==14774==    at 0x483877F: malloc (vg_replace_malloc.c:309)
==14774==    by 0x123CCF: upstreams_create (context.c:581)
==14774==    by 0x128B24: getdns_context_set_upstream_recursive_servers (context.c:2760)
==14774==    by 0x12DBFE: _getdns_context_config_setting (context.c:4646)
==14774==    by 0x12FF47: getdns_context_config (context.c:4769)
==14774==    by 0x1178C2: parse_config (stubby.c:297)
==14774==    by 0x117B24: parse_config_file (stubby.c:343)
==14774==    by 0x11919F: main (stubby.c:833)","Good catch!  Thanks!
I'll adapt the valgrind test first to expose this issue and will then merge and see the travis-ci recover with your PR.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,462,2020-03-01T21:47:13Z,2020-03-02T14:20:52Z,2020-03-02T14:29:46Z,MERGED,True,1,0,1,https://github.com/doublez13,Fix uninitialized value in tls_create_object,1,[],https://github.com/getdnsapi/getdns/pull/462,https://github.com/wtoorop,3,https://github.com/getdnsapi/getdns/pull/462#issuecomment-593340642,"On the first call to tls_create_object (stub.c), tls_fallback_ok is read
before being initialized. This patch initializes tls_fallback_ok to 0 in
upstream_init (context.c)
Valgrind complains about the uninitialized value:
==14774== Conditional jump or move depends on uninitialised value(s)
==14774==    at 0x1528C3: tls_create_object (stub.c:900)
==14774==    by 0x1556AD: upstream_connect (stub.c:2065)
==14774==    by 0x15582E: upstream_find_for_transport (stub.c:2109)
==14774==    by 0x1558B7: upstream_find_for_netreq (stub.c:2130)
==14774==    by 0x156027: _getdns_submit_stub_request (stub.c:2296)
==14774==    by 0x1421C8: _getdns_submit_netreq (general.c:478)
==14774==    by 0x14261D: getdns_general_ns (general.c:636)
==14774==    by 0x142905: _getdns_general_loop (general.c:731)
==14774==    by 0x1432FB: getdns_general (general.c:888)
==14774==    by 0x118B94: incoming_request_handler (stubby.c:692)
==14774==    by 0x14F46B: udp_read_cb (server.c:762)
==14774==    by 0x15C86B: poll_read_cb (poll_eventloop.c:295)
==14774==  Uninitialised value was created by a heap allocation
==14774==    at 0x483877F: malloc (vg_replace_malloc.c:309)
==14774==    by 0x123CCF: upstreams_create (context.c:581)
==14774==    by 0x128B24: getdns_context_set_upstream_recursive_servers (context.c:2760)
==14774==    by 0x12DBFE: _getdns_context_config_setting (context.c:4646)
==14774==    by 0x12FF47: getdns_context_config (context.c:4769)
==14774==    by 0x1178C2: parse_config (stubby.c:297)
==14774==    by 0x117B24: parse_config_file (stubby.c:343)
==14774==    by 0x11919F: main (stubby.c:833)",I am actually having a hard time fighting valgrind in combination with libcrypto and libssl. Valgrind seems to consider all data from SSL_read() to be unitialized spawning of thousands of error situations. I didn't manage to create a workable suppression file out of those.  Do you have a tip or suggestion how to do this? How did you spot this issue among the thousands of false positives?,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,462,2020-03-01T21:47:13Z,2020-03-02T14:20:52Z,2020-03-02T14:29:46Z,MERGED,True,1,0,1,https://github.com/doublez13,Fix uninitialized value in tls_create_object,1,[],https://github.com/getdnsapi/getdns/pull/462,https://github.com/doublez13,4,https://github.com/getdnsapi/getdns/pull/462#issuecomment-593429524,"On the first call to tls_create_object (stub.c), tls_fallback_ok is read
before being initialized. This patch initializes tls_fallback_ok to 0 in
upstream_init (context.c)
Valgrind complains about the uninitialized value:
==14774== Conditional jump or move depends on uninitialised value(s)
==14774==    at 0x1528C3: tls_create_object (stub.c:900)
==14774==    by 0x1556AD: upstream_connect (stub.c:2065)
==14774==    by 0x15582E: upstream_find_for_transport (stub.c:2109)
==14774==    by 0x1558B7: upstream_find_for_netreq (stub.c:2130)
==14774==    by 0x156027: _getdns_submit_stub_request (stub.c:2296)
==14774==    by 0x1421C8: _getdns_submit_netreq (general.c:478)
==14774==    by 0x14261D: getdns_general_ns (general.c:636)
==14774==    by 0x142905: _getdns_general_loop (general.c:731)
==14774==    by 0x1432FB: getdns_general (general.c:888)
==14774==    by 0x118B94: incoming_request_handler (stubby.c:692)
==14774==    by 0x14F46B: udp_read_cb (server.c:762)
==14774==    by 0x15C86B: poll_read_cb (poll_eventloop.c:295)
==14774==  Uninitialised value was created by a heap allocation
==14774==    at 0x483877F: malloc (vg_replace_malloc.c:309)
==14774==    by 0x123CCF: upstreams_create (context.c:581)
==14774==    by 0x128B24: getdns_context_set_upstream_recursive_servers (context.c:2760)
==14774==    by 0x12DBFE: _getdns_context_config_setting (context.c:4646)
==14774==    by 0x12FF47: getdns_context_config (context.c:4769)
==14774==    by 0x1178C2: parse_config (stubby.c:297)
==14774==    by 0x117B24: parse_config_file (stubby.c:343)
==14774==    by 0x11919F: main (stubby.c:833)","I am actually having a hard time fighting valgrind in combination with libcrypto and libssl. Valgrind seems to consider all data from SSL_read() to be unitialized spawning of thousands of error situations. I didn't manage to create a workable suppression file out of those. Do you have a tip or suggestion how to do this? How did you spot this issue among the thousands of false positives?

I was just running stubby under valgrind.
valgrind --log-file=/tmp/valgrind_stubby.log --trace-children=yes --track-origins=yes ./getdns/stubby/stubby -l -C ./getdns/stubby/stubby.yml",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,464,2020-03-04T16:14:09Z,2020-03-05T09:14:29Z,2020-03-05T09:14:29Z,MERGED,True,28,51,4,https://github.com/banburybill,Various small fixes,4,[],https://github.com/getdnsapi/getdns/pull/464,https://github.com/banburybill,1,https://github.com/getdnsapi/getdns/pull/464,"Revise recent update to lookup3.c to restore building on Windows.
CMake ub_cts_set_stub location correction.
Don't enable Unbound event API if explicitly disabled.
If stub only, explicitly disable all libunbound items. We may know libunbound is installed from a former configuration run, but if we switch to stub only, we don't want to use it.

There's also a merge. This is an upstream change merged during work on the above.","Revise recent update to lookup3.c to restore building on Windows.
CMake ub_cts_set_stub location correction.
Don't enable Unbound event API if explicitly disabled.
If stub only, explicitly disable all libunbound items. We may know libunbound is installed from a former configuration run, but if we switch to stub only, we don't want to use it.

There's also a merge. This is an upstream change merged during work on the above.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,464,2020-03-04T16:14:09Z,2020-03-05T09:14:29Z,2020-03-05T09:14:29Z,MERGED,True,28,51,4,https://github.com/banburybill,Various small fixes,4,[],https://github.com/getdnsapi/getdns/pull/464,https://github.com/wtoorop,2,https://github.com/getdnsapi/getdns/pull/464#issuecomment-595115031,"Revise recent update to lookup3.c to restore building on Windows.
CMake ub_cts_set_stub location correction.
Don't enable Unbound event API if explicitly disabled.
If stub only, explicitly disable all libunbound items. We may know libunbound is installed from a former configuration run, but if we switch to stub only, we don't want to use it.

There's also a merge. This is an upstream change merged during work on the above.","Sorry about missing the necessary changes to lookup3.c when pulling a new version from the unbound code base. Perhaps we should mark those getdns specific changes with a #ifdef, so the file can remain the same in unbound and getdns...",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,465,2020-03-05T13:35:39Z,2020-03-05T13:52:56Z,2020-03-05T13:52:56Z,MERGED,True,6,2,1,https://github.com/banburybill,Relax GnuTLS priority strings slightly to allow getdns to work with T…,1,[],https://github.com/getdnsapi/getdns/pull/465,https://github.com/banburybill,1,https://github.com/getdnsapi/getdns/pull/465,,,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,465,2020-03-05T13:35:39Z,2020-03-05T13:52:56Z,2020-03-05T13:52:56Z,MERGED,True,6,2,1,https://github.com/banburybill,Relax GnuTLS priority strings slightly to allow getdns to work with T…,1,[],https://github.com/getdnsapi/getdns/pull/465,https://github.com/wtoorop,2,https://github.com/getdnsapi/getdns/pull/465#issuecomment-595240711,,Excellent! Thanks!,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,467,2020-03-12T16:20:06Z,2020-03-16T11:26:15Z,2020-03-16T11:26:15Z,MERGED,True,37,15,2,https://github.com/banburybill,"Bring in GnuTLS debug messages and signature selection, and update Stubby",14,[],https://github.com/getdnsapi/getdns/pull/467,https://github.com/banburybill,1,https://github.com/getdnsapi/getdns/pull/467,"Changes for Stubby package building.
Update Stubby version, and bring in the GnuTLS debug message and signature selection. Note signature selection adjusted slightly to account for signature algorithm availability in different GnuTLS versions.","Changes for Stubby package building.
Update Stubby version, and bring in the GnuTLS debug message and signature selection. Note signature selection adjusted slightly to account for signature algorithm availability in different GnuTLS versions.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,468,2020-03-24T13:16:41Z,2021-05-26T09:18:20Z,2021-05-26T09:18:20Z,MERGED,True,4,2,2,https://github.com/renaudallard,Added checks for LibreSSL and OpenBSD,1,[],https://github.com/getdnsapi/getdns/pull/468,https://github.com/renaudallard,1,https://github.com/getdnsapi/getdns/pull/468,This adds some checks to be able to compile getdns on OpenBSD and probably some other archs with LibreSSL,This adds some checks to be able to compile getdns on OpenBSD and probably some other archs with LibreSSL,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,468,2020-03-24T13:16:41Z,2021-05-26T09:18:20Z,2021-05-26T09:18:20Z,MERGED,True,4,2,2,https://github.com/renaudallard,Added checks for LibreSSL and OpenBSD,1,[],https://github.com/getdnsapi/getdns/pull/468,https://github.com/wtoorop,2,https://github.com/getdnsapi/getdns/pull/468#issuecomment-604897749,This adds some checks to be able to compile getdns on OpenBSD and probably some other archs with LibreSSL,"Thanks, on the list for today (together with the ssl_dane repo).",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,471,2020-04-09T14:30:07Z,2020-05-01T09:13:01Z,2021-05-27T21:09:10Z,MERGED,True,341,215,10,https://github.com/wtoorop,Privacy aware DNS Cookies,4,[],https://github.com/getdnsapi/getdns/pull/471,https://github.com/wtoorop,1,https://github.com/getdnsapi/getdns/pull/471,"Privacy aware DNS Cookies following directions in: https://tools.ietf.org/html/draft-ietf-dnsop-server-cookies-02.
You can test against 185.49.141.38 and 2a04:b900:0:100::38 which has a resolver that will answer when a valid DNS Cookie was provided.
Still TODO before merge, a test package testing the feature.","Privacy aware DNS Cookies following directions in: https://tools.ietf.org/html/draft-ietf-dnsop-server-cookies-02.
You can test against 185.49.141.38 and 2a04:b900:0:100::38 which has a resolver that will answer when a valid DNS Cookie was provided.
Still TODO before merge, a test package testing the feature.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,472,2020-05-08T11:35:11Z,2021-05-26T09:21:43Z,2021-05-26T09:21:43Z,MERGED,True,1,1,1,https://github.com/cohall-2020,Skip check_c_source_runs when cross-compiling.,2,[],https://github.com/getdnsapi/getdns/pull/472,https://github.com/cohall-2020,1,https://github.com/getdnsapi/getdns/pull/472,Added a check for cross-compiling.,Added a check for cross-compiling.,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,472,2020-05-08T11:35:11Z,2021-05-26T09:21:43Z,2021-05-26T09:21:43Z,MERGED,True,1,1,1,https://github.com/cohall-2020,Skip check_c_source_runs when cross-compiling.,2,[],https://github.com/getdnsapi/getdns/pull/472,https://github.com/jonathanunderwood,2,https://github.com/getdnsapi/getdns/pull/472#issuecomment-652212019,Added a check for cross-compiling.,Confirmed that this fixes #480 - please merge ahead of next release as this is needed for building on OpenWRT.,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,472,2020-05-08T11:35:11Z,2021-05-26T09:21:43Z,2021-05-26T09:21:43Z,MERGED,True,1,1,1,https://github.com/cohall-2020,Skip check_c_source_runs when cross-compiling.,2,[],https://github.com/getdnsapi/getdns/pull/472,https://github.com/jonathanunderwood,3,https://github.com/getdnsapi/getdns/pull/472#issuecomment-653784761,Added a check for cross-compiling.,@banburybill makes a very good point about this PR here: #480 (comment),True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,472,2020-05-08T11:35:11Z,2021-05-26T09:21:43Z,2021-05-26T09:21:43Z,MERGED,True,1,1,1,https://github.com/cohall-2020,Skip check_c_source_runs when cross-compiling.,2,[],https://github.com/getdnsapi/getdns/pull/472,https://github.com/banburybill,4,https://github.com/getdnsapi/getdns/pull/472#issuecomment-653857358,Added a check for cross-compiling.,"To repeat my comment on the PR:
Is it possible to do what CMake wants? Namely manually check whether it does or doesn't work and pre-fill the cache with the answers. As it says in https://cmake.org/cmake/help/latest/command/try_run.html#id4, this will still build the test program but it won't run it; instead it will behave as if the test ran with the given exit code. E.g., for OpenWRT which I am pretty sure does have a working strptime():
$ cat $ cat precache.cmake
set( STRPTIME_WORKS_EXITCODE 0 CACHE STRING ""Result from TRY_RUN"" FORCE)
set( STRPTIME_WORKS_EXITCODE__TRYRUN_OUTPUT """" CACHE STRING ""Output from TRY_RUN"" FORCE)
$ cmake -C precache.cmake .
Or am I missing something?",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,472,2020-05-08T11:35:11Z,2021-05-26T09:21:43Z,2021-05-26T09:21:43Z,MERGED,True,1,1,1,https://github.com/cohall-2020,Skip check_c_source_runs when cross-compiling.,2,[],https://github.com/getdnsapi/getdns/pull/472,https://github.com/cohall-2020,5,https://github.com/getdnsapi/getdns/pull/472#issuecomment-654548599,Added a check for cross-compiling.,"@banburybill @jonathanunderwood
I assumed this was an oversight rather than working as intended.  :)  One man's feature...
From the CMake docs linked above:

In order to make cross compiling your project easier, use try_run only if really required. If you use try_run, use the RUN_OUTPUT_VARIABLE or OUTPUT_VARIABLE options only if really required.

I recognize that ""really required"" may mean different things to different people.  To me it means ""we cannot build this without knowing the answer.""  Since there is extant code in src/compat/strptime.c to handle the case that strptime() is not supported by the standard libraries, this signals to me that it's not a required check, just potentially useful to know.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,473,2020-05-27T09:06:53Z,2020-05-27T15:42:25Z,2020-05-27T15:42:25Z,MERGED,True,16,16,3,https://github.com/rogers0,Fix install path for cmake build since we use GNUInstallDirs,1,[],https://github.com/getdnsapi/getdns/pull/473,https://github.com/rogers0,1,https://github.com/getdnsapi/getdns/pull/473,"So we use install path below since cmake v3.0 [1]:

CMAKE_INSTALL_LIBDIR
CMAKE_INSTALL_INCLUDEDIR

[1] https://cmake.org/cmake/help/v3.0/module/GNUInstallDirs.html","So we use install path below since cmake v3.0 [1]:

CMAKE_INSTALL_LIBDIR
CMAKE_INSTALL_INCLUDEDIR

[1] https://cmake.org/cmake/help/v3.0/module/GNUInstallDirs.html",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,474,2020-06-12T09:52:11Z,2021-05-26T09:17:20Z,2021-05-26T09:17:20Z,MERGED,True,1,1,1,https://github.com/banburybill,Observe blocking flag in select run_once.,1,[],https://github.com/getdnsapi/getdns/pull/474,https://github.com/banburybill,1,https://github.com/getdnsapi/getdns/pull/474,Currently run_once always blocks.,Currently run_once always blocks.,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,475,2020-06-18T17:50:40Z,2020-06-18T17:51:38Z,2020-06-18T20:18:52Z,CLOSED,False,30,42,1,https://github.com/elindsey,register only a single poll_t with libuv,1,[],https://github.com/getdnsapi/getdns/pull/475,https://github.com/elindsey,1,https://github.com/getdnsapi/getdns/pull/475,"Most of the time we only need a read or a write callback registered
with libuv - for example, on a UDP request a write callback is
registered, when executed the write callback performs the write,
deregisters itself, and registers a read callback.
However there is one case where getdns registers both read and write
callbacks: when a backlog of TCP requests is going to the same upstream
resolver, we use a single fd and queue the requests. In this instance we
want to listen for both read (to get responses for requests we've
already sent) and write (to continue to send our pending requests).
libuv, like most event libraries, only allows one callback to be
registered per fd. To get notification for both reads and writes, you
should examine the event flags and have appropriate conditional logic
within the single callback. Today getdns incorrectly tries to register
two separate poll_t with libuv, one for read and one for write - this
results in a crash (internal libuv assertion guaranteeing that only a
single poll_t is registered per fd).
Note that a higher qps trigger a different getdns/libuv crashing bug
that occurs when the TCP backlog grows so large that requests start to
time out. That crash is not addressed in this PR.","Most of the time we only need a read or a write callback registered
with libuv - for example, on a UDP request a write callback is
registered, when executed the write callback performs the write,
deregisters itself, and registers a read callback.
However there is one case where getdns registers both read and write
callbacks: when a backlog of TCP requests is going to the same upstream
resolver, we use a single fd and queue the requests. In this instance we
want to listen for both read (to get responses for requests we've
already sent) and write (to continue to send our pending requests).
libuv, like most event libraries, only allows one callback to be
registered per fd. To get notification for both reads and writes, you
should examine the event flags and have appropriate conditional logic
within the single callback. Today getdns incorrectly tries to register
two separate poll_t with libuv, one for read and one for write - this
results in a crash (internal libuv assertion guaranteeing that only a
single poll_t is registered per fd).
Note that a higher qps trigger a different getdns/libuv crashing bug
that occurs when the TCP backlog grows so large that requests start to
time out. That crash is not addressed in this PR.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,475,2020-06-18T17:50:40Z,2020-06-18T17:51:38Z,2020-06-18T20:18:52Z,CLOSED,False,30,42,1,https://github.com/elindsey,register only a single poll_t with libuv,1,[],https://github.com/getdnsapi/getdns/pull/475,https://github.com/elindsey,2,https://github.com/getdnsapi/getdns/pull/475#issuecomment-646215612,"Most of the time we only need a read or a write callback registered
with libuv - for example, on a UDP request a write callback is
registered, when executed the write callback performs the write,
deregisters itself, and registers a read callback.
However there is one case where getdns registers both read and write
callbacks: when a backlog of TCP requests is going to the same upstream
resolver, we use a single fd and queue the requests. In this instance we
want to listen for both read (to get responses for requests we've
already sent) and write (to continue to send our pending requests).
libuv, like most event libraries, only allows one callback to be
registered per fd. To get notification for both reads and writes, you
should examine the event flags and have appropriate conditional logic
within the single callback. Today getdns incorrectly tries to register
two separate poll_t with libuv, one for read and one for write - this
results in a crash (internal libuv assertion guaranteeing that only a
single poll_t is registered per fd).
Note that a higher qps trigger a different getdns/libuv crashing bug
that occurs when the TCP backlog grows so large that requests start to
time out. That crash is not addressed in this PR.","Argh, my apologies. I was trying to submit this PR to a forked version, but clicked wrong. I'll upstream this patch after more testing though. 🙂",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,476,2020-06-18T22:04:36Z,2020-06-19T08:24:18Z,2020-06-19T08:24:22Z,MERGED,True,30,42,1,https://github.com/elindsey,register only a single poll_t with libuv,1,[],https://github.com/getdnsapi/getdns/pull/476,https://github.com/elindsey,1,https://github.com/getdnsapi/getdns/pull/476,"Most of the time we only need a read or a write callback registered
with libuv - for example, on a UDP request a write callback is
registered, when executed the write callback performs the write,
deregisters itself, and registers a read callback.
However there is one case where getdns registers both read and write
callbacks: when a backlog of TCP requests is going to the same upstream
resolver, we use a single fd and queue the requests. In this instance we
want to listen for both read (to get responses for requests we've
already sent) and write (to continue to send our pending requests).
libuv, like most event libraries, only allows one callback to be
registered per fd. To get notification for both reads and writes, you
should examine the event flags and have appropriate conditional logic
within the single callback. Today getdns incorrectly tries to register
two separate poll_t with libuv, one for read and one for write - this
results in a crash (internal libuv assertion guaranteeing that only a
single poll_t is registered per fd).
Testing was done by using flamethrower
(https://github.com/DNS-OARC/flamethrower) to toss queries at a program
that embeds getdns.
Note that a higher qps trigger a different getdns/libuv crashing bug
that occurs when the TCP backlog grows so large that requests start to
time out. That crash is not addressed in this PR, and will be more
involved to fix.","Most of the time we only need a read or a write callback registered
with libuv - for example, on a UDP request a write callback is
registered, when executed the write callback performs the write,
deregisters itself, and registers a read callback.
However there is one case where getdns registers both read and write
callbacks: when a backlog of TCP requests is going to the same upstream
resolver, we use a single fd and queue the requests. In this instance we
want to listen for both read (to get responses for requests we've
already sent) and write (to continue to send our pending requests).
libuv, like most event libraries, only allows one callback to be
registered per fd. To get notification for both reads and writes, you
should examine the event flags and have appropriate conditional logic
within the single callback. Today getdns incorrectly tries to register
two separate poll_t with libuv, one for read and one for write - this
results in a crash (internal libuv assertion guaranteeing that only a
single poll_t is registered per fd).
Testing was done by using flamethrower
(https://github.com/DNS-OARC/flamethrower) to toss queries at a program
that embeds getdns.
Note that a higher qps trigger a different getdns/libuv crashing bug
that occurs when the TCP backlog grows so large that requests start to
time out. That crash is not addressed in this PR, and will be more
involved to fix.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,476,2020-06-18T22:04:36Z,2020-06-19T08:24:18Z,2020-06-19T08:24:22Z,MERGED,True,30,42,1,https://github.com/elindsey,register only a single poll_t with libuv,1,[],https://github.com/getdnsapi/getdns/pull/476,https://github.com/elindsey,2,https://github.com/getdnsapi/getdns/pull/476#issuecomment-646333706,"Most of the time we only need a read or a write callback registered
with libuv - for example, on a UDP request a write callback is
registered, when executed the write callback performs the write,
deregisters itself, and registers a read callback.
However there is one case where getdns registers both read and write
callbacks: when a backlog of TCP requests is going to the same upstream
resolver, we use a single fd and queue the requests. In this instance we
want to listen for both read (to get responses for requests we've
already sent) and write (to continue to send our pending requests).
libuv, like most event libraries, only allows one callback to be
registered per fd. To get notification for both reads and writes, you
should examine the event flags and have appropriate conditional logic
within the single callback. Today getdns incorrectly tries to register
two separate poll_t with libuv, one for read and one for write - this
results in a crash (internal libuv assertion guaranteeing that only a
single poll_t is registered per fd).
Testing was done by using flamethrower
(https://github.com/DNS-OARC/flamethrower) to toss queries at a program
that embeds getdns.
Note that a higher qps trigger a different getdns/libuv crashing bug
that occurs when the TCP backlog grows so large that requests start to
time out. That crash is not addressed in this PR, and will be more
involved to fix.",The unit tests that failed in travis also failed for me locally without this diff applied. Are those known broken or new failures?,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,476,2020-06-18T22:04:36Z,2020-06-19T08:24:18Z,2020-06-19T08:24:22Z,MERGED,True,30,42,1,https://github.com/elindsey,register only a single poll_t with libuv,1,[],https://github.com/getdnsapi/getdns/pull/476,https://github.com/wtoorop,3,https://github.com/getdnsapi/getdns/pull/476#issuecomment-646509898,"Most of the time we only need a read or a write callback registered
with libuv - for example, on a UDP request a write callback is
registered, when executed the write callback performs the write,
deregisters itself, and registers a read callback.
However there is one case where getdns registers both read and write
callbacks: when a backlog of TCP requests is going to the same upstream
resolver, we use a single fd and queue the requests. In this instance we
want to listen for both read (to get responses for requests we've
already sent) and write (to continue to send our pending requests).
libuv, like most event libraries, only allows one callback to be
registered per fd. To get notification for both reads and writes, you
should examine the event flags and have appropriate conditional logic
within the single callback. Today getdns incorrectly tries to register
two separate poll_t with libuv, one for read and one for write - this
results in a crash (internal libuv assertion guaranteeing that only a
single poll_t is registered per fd).
Testing was done by using flamethrower
(https://github.com/DNS-OARC/flamethrower) to toss queries at a program
that embeds getdns.
Note that a higher qps trigger a different getdns/libuv crashing bug
that occurs when the TCP backlog grows so large that requests start to
time out. That crash is not addressed in this PR, and will be more
involved to fix.","Hey that is a very nice fix! Thanks! Very much appreciated.
Those online transport tests are a bit fragile yes, I'll have a look.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,477,2020-06-24T13:39:30Z,2021-05-26T13:14:02Z,2021-06-01T10:54:24Z,MERGED,True,6,6,1,https://github.com/banburybill,Install the DLLs when installing on Windows.,1,[],https://github.com/getdnsapi/getdns/pull/477,https://github.com/banburybill,1,https://github.com/getdnsapi/getdns/pull/477,"Install currently omits the DLLs on Windows. Install them to the bin dir, the expected place. And use CMAKE_INSTALL_BINDIR for other bin targets.","Install currently omits the DLLs on Windows. Install them to the bin dir, the expected place. And use CMAKE_INSTALL_BINDIR for other bin targets.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,478,2020-06-25T09:50:22Z,2020-06-25T10:18:15Z,2020-06-25T10:18:16Z,MERGED,True,1,1,1,https://github.com/banburybill,Add system libraries when checking OpenSSL functions.,1,[],https://github.com/getdnsapi/getdns/pull/478,https://github.com/banburybill,1,https://github.com/getdnsapi/getdns/pull/478,"If OpenSSL is a static library, linking the test programs will require
system libraries.","If OpenSSL is a static library, linking the test programs will require
system libraries.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,482,2020-07-07T21:52:54Z,2021-05-26T13:48:10Z,2021-05-26T21:45:57Z,MERGED,True,15,3,4,https://github.com/neheb,val_secalgo: add missing DSA header,1,[],https://github.com/getdnsapi/getdns/pull/482,https://github.com/neheb,1,https://github.com/getdnsapi/getdns/pull/482,"Fixes compilation without deprecated OpenSSL APIs
Signed-off-by: Rosen Penev rosenp@gmail.com","Fixes compilation without deprecated OpenSSL APIs
Signed-off-by: Rosen Penev rosenp@gmail.com",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,484,2020-07-12T22:23:36Z,2021-05-26T14:06:53Z,2021-05-26T14:06:53Z,MERGED,True,120,2,8,https://github.com/maciejsszmigiero,"Add ""tcp_send_timeout"" option to set a TCP send data timeout to recover stuck upstream connections quickly",1,[],https://github.com/getdnsapi/getdns/pull/484,https://github.com/maciejsszmigiero,1,https://github.com/getdnsapi/getdns/pull/484,"When using Stubby as a system DNS over TLS resolver with a Internet
connection that disconnects and reconnects from time to time there is often
a long waiting time (~20 minutes) after the connection reconnects before
DNS queries start to work again.
This is because in this particular case all the upstream TLS TCP
connections in Stubby are stuck waiting for upstream server response.
Which will never arrive since the host external IP address might have
changed and / or NAT router connection tracking entries for these TCP
connections might have been removed when the Internet connection
reconnected.
By default Linux tries to retransmit data on a TCP connection 15 times
before finally terminating it.
This takes 16 - 20 minutes, which is obviously a very long time to wait for
system DNS resolving to work again.
This is a real problem on weak mobile connections.
Thankfully, there is a ""TCP_USER_TIMEOUT"" per-socket option that allows
explicitly setting how long the network stack will wait in such cases.
Let's add a matching ""tcp_send_timeout"" option to getdns that allows
setting this option on outgoing TCP sockets.
For backward compatibility the code won't try to set it by default.
With this option set to, for example, 15 seconds Stubby recovers pretty
much instantly in such cases.","When using Stubby as a system DNS over TLS resolver with a Internet
connection that disconnects and reconnects from time to time there is often
a long waiting time (~20 minutes) after the connection reconnects before
DNS queries start to work again.
This is because in this particular case all the upstream TLS TCP
connections in Stubby are stuck waiting for upstream server response.
Which will never arrive since the host external IP address might have
changed and / or NAT router connection tracking entries for these TCP
connections might have been removed when the Internet connection
reconnected.
By default Linux tries to retransmit data on a TCP connection 15 times
before finally terminating it.
This takes 16 - 20 minutes, which is obviously a very long time to wait for
system DNS resolving to work again.
This is a real problem on weak mobile connections.
Thankfully, there is a ""TCP_USER_TIMEOUT"" per-socket option that allows
explicitly setting how long the network stack will wait in such cases.
Let's add a matching ""tcp_send_timeout"" option to getdns that allows
setting this option on outgoing TCP sockets.
For backward compatibility the code won't try to set it by default.
With this option set to, for example, 15 seconds Stubby recovers pretty
much instantly in such cases.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,484,2020-07-12T22:23:36Z,2021-05-26T14:06:53Z,2021-05-26T14:06:53Z,MERGED,True,120,2,8,https://github.com/maciejsszmigiero,"Add ""tcp_send_timeout"" option to set a TCP send data timeout to recover stuck upstream connections quickly",1,[],https://github.com/getdnsapi/getdns/pull/484,https://github.com/saradickinson,2,https://github.com/getdnsapi/getdns/pull/484#issuecomment-657448154,"When using Stubby as a system DNS over TLS resolver with a Internet
connection that disconnects and reconnects from time to time there is often
a long waiting time (~20 minutes) after the connection reconnects before
DNS queries start to work again.
This is because in this particular case all the upstream TLS TCP
connections in Stubby are stuck waiting for upstream server response.
Which will never arrive since the host external IP address might have
changed and / or NAT router connection tracking entries for these TCP
connections might have been removed when the Internet connection
reconnected.
By default Linux tries to retransmit data on a TCP connection 15 times
before finally terminating it.
This takes 16 - 20 minutes, which is obviously a very long time to wait for
system DNS resolving to work again.
This is a real problem on weak mobile connections.
Thankfully, there is a ""TCP_USER_TIMEOUT"" per-socket option that allows
explicitly setting how long the network stack will wait in such cases.
Let's add a matching ""tcp_send_timeout"" option to getdns that allows
setting this option on outgoing TCP sockets.
For backward compatibility the code won't try to set it by default.
With this option set to, for example, 15 seconds Stubby recovers pretty
much instantly in such cases.",Thanks @maciejsszmigiero This looks useful - will review for the next release!,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,486,2020-09-10T15:11:49Z,2020-10-05T10:34:29Z,2020-10-05T10:34:29Z,MERGED,True,18,17,1,https://github.com/elindsey,only check for and process read/write events if status is success,1,[],https://github.com/getdnsapi/getdns/pull/486,https://github.com/elindsey,1,https://github.com/getdnsapi/getdns/pull/486,"Unlike libevent, libuv has a separate status flag for errors that occur while polling. Thus there's an edge case today where an error during poll will call getdns_libuv_cb with a status < 1 and an event that is neither UV_READABLE nor UV_WRITABLE, triggering an ASSERT_UNREACHABLE crash.
Work around this by only calling our read/write callbacks if the poll status is non error.","Unlike libevent, libuv has a separate status flag for errors that occur while polling. Thus there's an edge case today where an error during poll will call getdns_libuv_cb with a status < 1 and an event that is neither UV_READABLE nor UV_WRITABLE, triggering an ASSERT_UNREACHABLE crash.
Work around this by only calling our read/write callbacks if the poll status is non error.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,486,2020-09-10T15:11:49Z,2020-10-05T10:34:29Z,2020-10-05T10:34:29Z,MERGED,True,18,17,1,https://github.com/elindsey,only check for and process read/write events if status is success,1,[],https://github.com/getdnsapi/getdns/pull/486,https://github.com/wtoorop,2,https://github.com/getdnsapi/getdns/pull/486#issuecomment-703547282,"Unlike libevent, libuv has a separate status flag for errors that occur while polling. Thus there's an edge case today where an error during poll will call getdns_libuv_cb with a status < 1 and an event that is neither UV_READABLE nor UV_WRITABLE, triggering an ASSERT_UNREACHABLE crash.
Work around this by only calling our read/write callbacks if the poll status is non error.",Ack! Thanks for this correction!,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,488,2020-09-18T12:20:05Z,,2021-05-28T21:04:12Z,OPEN,False,412,333,8,https://github.com/madebr,Use FindPkgConfig to search for modules before doing manual search,4,[],https://github.com/getdnsapi/getdns/pull/488,https://github.com/madebr,1,https://github.com/getdnsapi/getdns/pull/488,"Look for libraries and include directories using FindPkgConfig first, before doing a manual search using find_library and find_path
FindLibidn.cmake is not available, so remove all references and usages of LibIdn_xxx variables or Libidn::Libidn target

Fixes #487
Used in conan-io/conan-center-index#2903","Look for libraries and include directories using FindPkgConfig first, before doing a manual search using find_library and find_path
FindLibidn.cmake is not available, so remove all references and usages of LibIdn_xxx variables or Libidn::Libidn target

Fixes #487
Used in conan-io/conan-center-index#2903",True,{'THUMBS_UP': ['https://github.com/prince-chrismc']}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,488,2020-09-18T12:20:05Z,,2021-05-28T21:04:12Z,OPEN,False,412,333,8,https://github.com/madebr,Use FindPkgConfig to search for modules before doing manual search,4,[],https://github.com/getdnsapi/getdns/pull/488,https://github.com/madebr,2,https://github.com/getdnsapi/getdns/pull/488#issuecomment-694884885,"Look for libraries and include directories using FindPkgConfig first, before doing a manual search using find_library and find_path
FindLibidn.cmake is not available, so remove all references and usages of LibIdn_xxx variables or Libidn::Libidn target

Fixes #487
Used in conan-io/conan-center-index#2903",Tests are failing because of #490,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,488,2020-09-18T12:20:05Z,,2021-05-28T21:04:12Z,OPEN,False,412,333,8,https://github.com/madebr,Use FindPkgConfig to search for modules before doing manual search,4,[],https://github.com/getdnsapi/getdns/pull/488,https://github.com/wtoorop,3,https://github.com/getdnsapi/getdns/pull/488#issuecomment-848803420,"Look for libraries and include directories using FindPkgConfig first, before doing a manual search using find_library and find_path
FindLibidn.cmake is not available, so remove all references and usages of LibIdn_xxx variables or Libidn::Libidn target

Fixes #487
Used in conan-io/conan-center-index#2903",@banburybill can you review this? Thanks!,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,488,2020-09-18T12:20:05Z,,2021-05-28T21:04:12Z,OPEN,False,412,333,8,https://github.com/madebr,Use FindPkgConfig to search for modules before doing manual search,4,[],https://github.com/getdnsapi/getdns/pull/488,https://github.com/wtoorop,4,https://github.com/getdnsapi/getdns/pull/488#issuecomment-849888020,"Look for libraries and include directories using FindPkgConfig first, before doing a manual search using find_library and find_path
FindLibidn.cmake is not available, so remove all references and usages of LibIdn_xxx variables or Libidn::Libidn target

Fixes #487
Used in conan-io/conan-center-index#2903","@madebr I took this for a spin, but cmake gave errors with me:
CMake Warning (dev) at /usr/share/cmake-3.18/Modules/FindPackageHandleStandardArgs.cmake:273 (message):
  The package name passed to `find_package_handle_standard_args` (PkgConfig)
  does not match the name of the calling package (Libidn2).  This can lead to
  problems in calling code that expects `find_package` result variables
  (e.g., `_FOUND`) to follow a certain pattern.
Call Stack (most recent call first):
  /usr/share/cmake-3.18/Modules/FindPkgConfig.cmake:59 (find_package_handle_standard_args)
  cmake/modules/FindLibidn2.cmake:31 (include)
  CMakeLists.txt:400 (find_package)
This warning is for project developers.  Use -Wno-dev to suppress it.

-- Found PkgConfig: /usr/bin/pkg-config (found version ""0.29.2"") 
-- Checking for module 'libidn2'
--   Found libidn2, version 2.3.0
CMake Error at /usr/share/cmake-3.18/Modules/FindPackageHandleStandardArgs.cmake:165 (message):
  Could NOT find Libidn2 (missing: LIBIDN2_INCLUDE_DIR) (found suitable
  version ""2.3.0"", minimum required is ""2.0.0"")
Call Stack (most recent call first):
  /usr/share/cmake-3.18/Modules/FindPackageHandleStandardArgs.cmake:458 (_FPHSA_FAILURE_MESSAGE)
  cmake/modules/FindLibidn2.cmake:76 (find_package_handle_standard_args)
  CMakeLists.txt:400 (find_package)


-- Configuring incomplete, errors occurred!
See also ""/home/willem/repos/getdns/build/CMakeFiles/CMakeOutput.log"".
See also ""/home/willem/repos/getdns/build/CMakeFiles/CMakeError.log"".

(tried on Ubuntu 21.04)
It would be really nice to have this though, so if you can fix this, that would be highly appreciated and welcomed!",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,488,2020-09-18T12:20:05Z,,2021-05-28T21:04:12Z,OPEN,False,412,333,8,https://github.com/madebr,Use FindPkgConfig to search for modules before doing manual search,4,[],https://github.com/getdnsapi/getdns/pull/488,https://github.com/madebr,5,https://github.com/getdnsapi/getdns/pull/488#issuecomment-850444459,"Look for libraries and include directories using FindPkgConfig first, before doing a manual search using find_library and find_path
FindLibidn.cmake is not available, so remove all references and usages of LibIdn_xxx variables or Libidn::Libidn target

Fixes #487
Used in conan-io/conan-center-index#2903","The issue was that pkg_check_modules returns an empty PkgLibIdn2_INCLUDE_DIRS variable.
This causes find_package_handle_standard_args to fail because LIBIDN2_INCLUDE_DIR is a required variable.
Fix this by only calling find_package_handle_standard_args when not using pkg-config.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,489,2020-09-18T12:38:43Z,2020-11-04T10:04:44Z,2020-11-05T10:34:14Z,MERGED,True,1,1,1,https://github.com/fcelda,Fix exporting symbols for extension libraries,1,[],https://github.com/getdnsapi/getdns/pull/489,https://github.com/fcelda,1,https://github.com/getdnsapi/getdns/pull/489,"The extension libraries didn't export any symbols due to incorrect version script provided at link time. This PR fixes it.
Before:
$ nm -D libgetdns_ex_uv.so | grep getdns_extension_set_libuv_loop

After:
$ nm -D libgetdns_ex_uv.so | grep getdns_extension_set_libuv_loop
00000000000011b0 T getdns_extension_set_libuv_loop","The extension libraries didn't export any symbols due to incorrect version script provided at link time. This PR fixes it.
Before:
$ nm -D libgetdns_ex_uv.so | grep getdns_extension_set_libuv_loop

After:
$ nm -D libgetdns_ex_uv.so | grep getdns_extension_set_libuv_loop
00000000000011b0 T getdns_extension_set_libuv_loop",True,{'THUMBS_UP': ['https://github.com/joelpurra']}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,492,2020-10-05T10:25:00Z,2020-11-04T10:13:11Z,2020-11-05T10:35:14Z,MERGED,True,51,51,1,https://github.com/fcelda,Fix naming of extension libraries,1,[],https://github.com/getdnsapi/getdns/pull/492,https://github.com/fcelda,1,https://github.com/getdnsapi/getdns/pull/492,"After the switch to CMake, extension libraries were mistakenly renamed from getdns_ext_x to getdns_x_x (missing T). This PR fixes it.","After the switch to CMake, extension libraries were mistakenly renamed from getdns_ext_x to getdns_x_x (missing T). This PR fixes it.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,492,2020-10-05T10:25:00Z,2020-11-04T10:13:11Z,2020-11-05T10:35:14Z,MERGED,True,51,51,1,https://github.com/fcelda,Fix naming of extension libraries,1,[],https://github.com/getdnsapi/getdns/pull/492,https://github.com/banburybill,2,https://github.com/getdnsapi/getdns/pull/492#issuecomment-721626276,"After the switch to CMake, extension libraries were mistakenly renamed from getdns_ext_x to getdns_x_x (missing T). This PR fixes it.",This looks good to me.,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,492,2020-10-05T10:25:00Z,2020-11-04T10:13:11Z,2020-11-05T10:35:14Z,MERGED,True,51,51,1,https://github.com/fcelda,Fix naming of extension libraries,1,[],https://github.com/getdnsapi/getdns/pull/492,https://github.com/banburybill,3,https://github.com/getdnsapi/getdns/pull/492#issuecomment-721640958,"After the switch to CMake, extension libraries were mistakenly renamed from getdns_ext_x to getdns_x_x (missing T). This PR fixes it.",You beat me to it. Thanks.,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,492,2020-10-05T10:25:00Z,2020-11-04T10:13:11Z,2020-11-05T10:35:14Z,MERGED,True,51,51,1,https://github.com/fcelda,Fix naming of extension libraries,1,[],https://github.com/getdnsapi/getdns/pull/492,https://github.com/fcelda,4,https://github.com/getdnsapi/getdns/pull/492#issuecomment-722292049,"After the switch to CMake, extension libraries were mistakenly renamed from getdns_ext_x to getdns_x_x (missing T). This PR fixes it.",Thank you!,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,494,2020-11-02T15:57:48Z,2020-11-04T09:45:24Z,2020-11-04T09:45:24Z,CLOSED,False,1,1,1,https://github.com/banburybill,Correct script name in link option for library export symbols.,1,[],https://github.com/getdnsapi/getdns/pull/494,https://github.com/banburybill,1,https://github.com/getdnsapi/getdns/pull/494,Fixes #493,Fixes #493,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,494,2020-11-02T15:57:48Z,2020-11-04T09:45:24Z,2020-11-04T09:45:24Z,CLOSED,False,1,1,1,https://github.com/banburybill,Correct script name in link option for library export symbols.,1,[],https://github.com/getdnsapi/getdns/pull/494,https://github.com/banburybill,2,https://github.com/getdnsapi/getdns/pull/494#issuecomment-721626727,Fixes #493,#489 beat me to it. Withdrawing in favour of that PR.,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,496,2020-12-12T22:32:12Z,2021-05-26T14:09:36Z,2021-05-26T14:09:36Z,MERGED,True,19,10,4,https://github.com/banburybill,Some Windows behaviour fixes.,2,[],https://github.com/getdnsapi/getdns/pull/496,https://github.com/banburybill,1,https://github.com/getdnsapi/getdns/pull/496,"DNSSEC validation on Windows doesn't work at present. These fixes move us along the way, but do not reach the goal. Next hurdles:

rename() at context.c line 4991. rename() on Windows fails if the destination file exists.
Windows throws an exception in the close() at line 554 in anchor.c (called from tas_read_cb()) because the fd is not open.","DNSSEC validation on Windows doesn't work at present. These fixes move us along the way, but do not reach the goal. Next hurdles:

rename() at context.c line 4991. rename() on Windows fails if the destination file exists.
Windows throws an exception in the close() at line 554 in anchor.c (called from tas_read_cb()) because the fd is not open.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,497,2021-01-27T11:32:25Z,2021-01-27T12:40:26Z,2021-01-27T12:40:27Z,MERGED,True,2,2,1,https://github.com/har-riz,Fix typo in cmakeconfig.h.in files,1,[],https://github.com/getdnsapi/getdns/pull/497,https://github.com/har-riz,1,https://github.com/getdnsapi/getdns/pull/497,"Fix typo in CMAKE included files, so Stubby can use TLS v1.3 with chipersuites options ON.
This solve issue that's written in here :
getdnsapi/stubby#240
getdnsapi/stubby#257","Fix typo in CMAKE included files, so Stubby can use TLS v1.3 with chipersuites options ON.
This solve issue that's written in here :
getdnsapi/stubby#240
getdnsapi/stubby#257",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,497,2021-01-27T11:32:25Z,2021-01-27T12:40:26Z,2021-01-27T12:40:27Z,MERGED,True,2,2,1,https://github.com/har-riz,Fix typo in cmakeconfig.h.in files,1,[],https://github.com/getdnsapi/getdns/pull/497,https://github.com/wtoorop,2,https://github.com/getdnsapi/getdns/pull/497#issuecomment-768258964,"Fix typo in CMAKE included files, so Stubby can use TLS v1.3 with chipersuites options ON.
This solve issue that's written in here :
getdnsapi/stubby#240
getdnsapi/stubby#257","Yes, that looks like a no brainer fix.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,503,2021-05-15T06:26:33Z,2021-05-15T20:41:12Z,2021-05-15T20:50:06Z,CLOSED,False,100,36,8,https://github.com/amialkow,Fixes #495. Implement name compression in DNS response packet generation.,5,[],https://github.com/getdnsapi/getdns/pull/503,https://github.com/amialkow,1,https://github.com/getdnsapi/getdns/pull/503,"Implement name compression during response packet generation. Compression is required by certain clients like UDP to fit response in packet size limit. While generating packet small cache stores recently used names (currently 4 entries) and uses relative references to previous instances of the same name. Each reused instance is just two bytes of relative reference (0xC000 + offset). Cache is currently performing lookup for query name, responses and CNAMEs.﻿","Implement name compression during response packet generation. Compression is required by certain clients like UDP to fit response in packet size limit. While generating packet small cache stores recently used names (currently 4 entries) and uses relative references to previous instances of the same name. Each reused instance is just two bytes of relative reference (0xC000 + offset). Cache is currently performing lookup for query name, responses and CNAMEs.﻿",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,503,2021-05-15T06:26:33Z,2021-05-15T20:41:12Z,2021-05-15T20:50:06Z,CLOSED,False,100,36,8,https://github.com/amialkow,Fixes #495. Implement name compression in DNS response packet generation.,5,[],https://github.com/getdnsapi/getdns/pull/503,https://github.com/amialkow,2,https://github.com/getdnsapi/getdns/pull/503#issuecomment-841722221,"Implement name compression during response packet generation. Compression is required by certain clients like UDP to fit response in packet size limit. While generating packet small cache stores recently used names (currently 4 entries) and uses relative references to previous instances of the same name. Each reused instance is just two bytes of relative reference (0xC000 + offset). Cache is currently performing lookup for query name, responses and CNAMEs.﻿","Tree compilation nee to be fixed first to pull this feature, already started in #504. Closing for now. Will submit separately as standalone change (#495 and #505).",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,506,2021-05-15T19:44:23Z,2021-05-26T14:11:01Z,2021-05-27T22:16:04Z,MERGED,True,6,0,3,https://github.com/amialkow,Fixes #504,2,[],https://github.com/getdnsapi/getdns/pull/506,https://github.com/amialkow,1,https://github.com/getdnsapi/getdns/pull/506,"Fix for #504, added missing rr types to allow 080-iana-rr-types pass.","Fix for #504, added missing rr types to allow 080-iana-rr-types pass.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,508,2021-05-26T19:14:53Z,2021-05-27T20:21:49Z,2021-05-27T22:15:15Z,MERGED,True,93,35,4,https://github.com/amialkow,Fixes #495 (and #505) by implementing name compression in DNS responses,3,[],https://github.com/getdnsapi/getdns/pull/508,https://github.com/amialkow,1,https://github.com/getdnsapi/getdns/pull/508,"#495 Implement name compression during response packet generation. Compression is required by certain clients like UDP to fit response in packet size limit. While generating packet small cache stores recently used names (currently 4 entries) and uses relative references to previous instances of the same name. Each reused instance is just two bytes of relative reference (0xC000 + offset). Cache is currently performing lookup for query name, responses and CNAMEs.﻿
#505 Disable comparison of packet size in 265-supported-rrs test, after #495 output packet size depends on applied compression.","#495 Implement name compression during response packet generation. Compression is required by certain clients like UDP to fit response in packet size limit. While generating packet small cache stores recently used names (currently 4 entries) and uses relative references to previous instances of the same name. Each reused instance is just two bytes of relative reference (0xC000 + offset). Cache is currently performing lookup for query name, responses and CNAMEs.﻿
#505 Disable comparison of packet size in 265-supported-rrs test, after #495 output packet size depends on applied compression.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,508,2021-05-26T19:14:53Z,2021-05-27T20:21:49Z,2021-05-27T22:15:15Z,MERGED,True,93,35,4,https://github.com/amialkow,Fixes #495 (and #505) by implementing name compression in DNS responses,3,[],https://github.com/getdnsapi/getdns/pull/508,https://github.com/wtoorop,2,https://github.com/getdnsapi/getdns/pull/508#issuecomment-849899102,"#495 Implement name compression during response packet generation. Compression is required by certain clients like UDP to fit response in packet size limit. While generating packet small cache stores recently used names (currently 4 entries) and uses relative references to previous instances of the same name. Each reused instance is just two bytes of relative reference (0xC000 + offset). Cache is currently performing lookup for query name, responses and CNAMEs.﻿
#505 Disable comparison of packet size in 265-supported-rrs test, after #495 output packet size depends on applied compression.","Thanks @amialkow for you thorough (and straight forward and easy to understand) implementation!
I love it!",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,509,2021-06-09T23:59:15Z,2022-03-29T13:00:28Z,2022-03-29T13:09:33Z,MERGED,True,2,3,1,https://github.com/thesamesam,CMakeLists.txt: use canonical GNUInstallDirs variable for docdir,1,[],https://github.com/getdnsapi/getdns/pull/509,https://github.com/thesamesam,1,https://github.com/getdnsapi/getdns/pull/509,"We use the GNUInstallDir variables for the rest of the build system
locations, so let's use CMAKE_INSTALL_DOCDIR too to allow customisation
downstream.
(In Gentoo, we set it to the exact package version including downstream-only
revisions.)
Signed-off-by: Sam James sam@gentoo.org","We use the GNUInstallDir variables for the rest of the build system
locations, so let's use CMAKE_INSTALL_DOCDIR too to allow customisation
downstream.
(In Gentoo, we set it to the exact package version including downstream-only
revisions.)
Signed-off-by: Sam James sam@gentoo.org",True,{'HEART': ['https://github.com/SoapGentoo']}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,509,2021-06-09T23:59:15Z,2022-03-29T13:00:28Z,2022-03-29T13:09:33Z,MERGED,True,2,3,1,https://github.com/thesamesam,CMakeLists.txt: use canonical GNUInstallDirs variable for docdir,1,[],https://github.com/getdnsapi/getdns/pull/509,https://github.com/thesamesam,2,https://github.com/getdnsapi/getdns/pull/509#issuecomment-1081837482,"We use the GNUInstallDir variables for the rest of the build system
locations, so let's use CMAKE_INSTALL_DOCDIR too to allow customisation
downstream.
(In Gentoo, we set it to the exact package version including downstream-only
revisions.)
Signed-off-by: Sam James sam@gentoo.org",@wtoorop could you take a look please? Thank you!,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,509,2021-06-09T23:59:15Z,2022-03-29T13:00:28Z,2022-03-29T13:09:33Z,MERGED,True,2,3,1,https://github.com/thesamesam,CMakeLists.txt: use canonical GNUInstallDirs variable for docdir,1,[],https://github.com/getdnsapi/getdns/pull/509,https://github.com/wtoorop,3,https://github.com/getdnsapi/getdns/pull/509#issuecomment-1081841250,"We use the GNUInstallDir variables for the rest of the build system
locations, so let's use CMAKE_INSTALL_DOCDIR too to allow customisation
downstream.
(In Gentoo, we set it to the exact package version including downstream-only
revisions.)
Signed-off-by: Sam James sam@gentoo.org","@wtoorop could you take a look please? Thank you!

Yes, that looks fine. Thanks for remininding me.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,509,2021-06-09T23:59:15Z,2022-03-29T13:00:28Z,2022-03-29T13:09:33Z,MERGED,True,2,3,1,https://github.com/thesamesam,CMakeLists.txt: use canonical GNUInstallDirs variable for docdir,1,[],https://github.com/getdnsapi/getdns/pull/509,https://github.com/thesamesam,4,https://github.com/getdnsapi/getdns/pull/509#issuecomment-1081851061,"We use the GNUInstallDir variables for the rest of the build system
locations, so let's use CMAKE_INSTALL_DOCDIR too to allow customisation
downstream.
(In Gentoo, we set it to the exact package version including downstream-only
revisions.)
Signed-off-by: Sam James sam@gentoo.org",Thanks!,True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,514,2021-12-04T00:13:13Z,,2021-12-07T06:08:45Z,OPEN,False,6,1,1,https://github.com/uzlonewolf,Parse IP addresses from JSON-like strings to allow better IPv6 address handling,2,[],https://github.com/getdnsapi/getdns/pull/514,https://github.com/uzlonewolf,1,https://github.com/getdnsapi/getdns/pull/514,"This will allow quoted ""::"" and ""[::]"" style IPv6 addresses.  Combined with a small change to stubby this will close both #358 and stubby#304","This will allow quoted ""::"" and ""[::]"" style IPv6 addresses.  Combined with a small change to stubby this will close both #358 and stubby#304",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,514,2021-12-04T00:13:13Z,,2021-12-07T06:08:45Z,OPEN,False,6,1,1,https://github.com/uzlonewolf,Parse IP addresses from JSON-like strings to allow better IPv6 address handling,2,[],https://github.com/getdnsapi/getdns/pull/514,https://github.com/wtoorop,2,https://github.com/getdnsapi/getdns/pull/514#issuecomment-986605392,"This will allow quoted ""::"" and ""[::]"" style IPv6 addresses.  Combined with a small change to stubby this will close both #358 and stubby#304","Thanks @uzlonewolf , but I think this approach might be a bit too generic. Any text string looking like an IP address (even as rdata field in for example a TXT RR) will be converted to an IP dict with this PR.
Having that said, I do like to approach of an IP address nested in a string and I do think this would indeed be the correct way to address getdnsapi/stubby#304  . So I'm thinking maybe we can adapt getdns_context_set_upstream_recursive_servers() to accept strings in the list and convert it to addresses. Likewise for the other settings that accept IP address dicts (getdns_context_set_dns_root_servers() and getdns_context_set_listen_addresses()). WDYT?",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,514,2021-12-04T00:13:13Z,,2021-12-07T06:08:45Z,OPEN,False,6,1,1,https://github.com/uzlonewolf,Parse IP addresses from JSON-like strings to allow better IPv6 address handling,2,[],https://github.com/getdnsapi/getdns/pull/514,https://github.com/uzlonewolf,3,https://github.com/getdnsapi/getdns/pull/514#issuecomment-986620841,"This will allow quoted ""::"" and ""[::]"" style IPv6 addresses.  Combined with a small change to stubby this will close both #358 and stubby#304","Yes, I do like that idea a lot better.  I'll try to modify this PR to do that in the next day or 2.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,514,2021-12-04T00:13:13Z,,2021-12-07T06:08:45Z,OPEN,False,6,1,1,https://github.com/uzlonewolf,Parse IP addresses from JSON-like strings to allow better IPv6 address handling,2,[],https://github.com/getdnsapi/getdns/pull/514,https://github.com/wtoorop,4,https://github.com/getdnsapi/getdns/pull/514#issuecomment-986695258,"This will allow quoted ""::"" and ""[::]"" style IPv6 addresses.  Combined with a small change to stubby this will close both #358 and stubby#304","Op 06-12-2021 om 11:04 schreef uzlonewolf:
 Yes, I do like that idea a lot better. I'll try to modify this PR to do
 that in the next day or 2.
Excellent! Thanks!",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,514,2021-12-04T00:13:13Z,,2021-12-07T06:08:45Z,OPEN,False,6,1,1,https://github.com/uzlonewolf,Parse IP addresses from JSON-like strings to allow better IPv6 address handling,2,[],https://github.com/getdnsapi/getdns/pull/514,https://github.com/uzlonewolf,5,https://github.com/getdnsapi/getdns/pull/514#issuecomment-987596359,"This will allow quoted ""::"" and ""[::]"" style IPv6 addresses.  Combined with a small change to stubby this will close both #358 and stubby#304","Well, after spending a couple hours on this and successfully making getdns_context_set_listen_addresses() accept an IP string, I'm still not happy with the results.  It's most likely going to be a breaking change to anyone using the API and passing in an IP address as a binary string.  It's probably fine for the listen addresses since those most likely include a port number and thus get passed as a dict, however the getdns_context_set_..._servers() functions are likely to have been used with binary strings.",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,515,2022-03-30T04:28:42Z,,2022-03-30T04:29:18Z,OPEN,False,1,1,1,https://github.com/thesamesam,CMakeLists.txt: use CMAKE_INSTALL_MANDIR too,1,[],https://github.com/getdnsapi/getdns/pull/515,https://github.com/thesamesam,1,https://github.com/getdnsapi/getdns/pull/515,"Sorry, I'd missed this one in #509.
Signed-off-by: Sam James sam@gentoo.org","Sorry, I'd missed this one in #509.
Signed-off-by: Sam James sam@gentoo.org",True,{}
getdnsapi/getdns,https://github.com/getdnsapi/getdns,518,2022-05-23T06:53:09Z,,2022-05-23T06:53:09Z,OPEN,False,1,1,1,https://github.com/amialkow,Fixed allowed offset range during name compression.,1,[],https://github.com/getdnsapi/getdns/pull/518,https://github.com/amialkow,1,https://github.com/getdnsapi/getdns/pull/518,Prohibit adding to cache names located at offsets above 0x3FFF. Offsets requiring more than 14 bits cannot be successfully decompressed.,Prohibit adding to cache names located at offsets above 0x3FFF. Offsets requiring more than 14 bits cannot be successfully decompressed.,True,{}
