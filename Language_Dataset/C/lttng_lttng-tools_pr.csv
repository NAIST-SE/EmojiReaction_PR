lttng/lttng-tools,https://github.com/lttng/lttng-tools,61,2016-02-20T01:48:59Z,2016-03-04T17:56:37Z,2016-03-04T18:22:47Z,CLOSED,False,155,0,1,https://github.com/eepp,Add CONTRIBUTING.md,1,[],https://github.com/lttng/lttng-tools/pull/61,https://github.com/eepp,1,https://github.com/lttng/lttng-tools/pull/61,"I adapted the LTTng website's contributor's guide to LTTng-tools, mostly by replacing occurences of LTTng with LTTng-tools, but there are other minor changes.
The main goal of this is that GitHub will display a banner saying Please review the guidelines for contributing to this repository when CONTRIBUTING.md exists.","I adapted the LTTng website's contributor's guide to LTTng-tools, mostly by replacing occurences of LTTng with LTTng-tools, but there are other minor changes.
The main goal of this is that GitHub will display a banner saying Please review the guidelines for contributing to this repository when CONTRIBUTING.md exists.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,61,2016-02-20T01:48:59Z,2016-03-04T17:56:37Z,2016-03-04T18:22:47Z,CLOSED,False,155,0,1,https://github.com/eepp,Add CONTRIBUTING.md,1,[],https://github.com/lttng/lttng-tools/pull/61,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/61#issuecomment-192381452,"I adapted the LTTng website's contributor's guide to LTTng-tools, mostly by replacing occurences of LTTng with LTTng-tools, but there are other minor changes.
The main goal of this is that GitHub will display a banner saying Please review the guidelines for contributing to this repository when CONTRIBUTING.md exists.",Merged a while ago; I forgot to close this. Thanks!,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,61,2016-02-20T01:48:59Z,2016-03-04T17:56:37Z,2016-03-04T18:22:47Z,CLOSED,False,155,0,1,https://github.com/eepp,Add CONTRIBUTING.md,1,[],https://github.com/lttng/lttng-tools/pull/61,https://github.com/eepp,3,https://github.com/lttng/lttng-tools/pull/61#issuecomment-192394055,"I adapted the LTTng website's contributor's guide to LTTng-tools, mostly by replacing occurences of LTTng with LTTng-tools, but there are other minor changes.
The main goal of this is that GitHub will display a banner saying Please review the guidelines for contributing to this repository when CONTRIBUTING.md exists.","Goude.
That's one problem of accepting GH PRs when GH is only a mirror; otherwise you could have added Closes #61 in the commit message, but that would close Redmine's bug 61.
Ahhh.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,62,2016-03-19T01:41:26Z,2016-03-19T16:39:38Z,2016-03-19T16:39:38Z,CLOSED,False,14,6,3,https://github.com/eepp,Fix man pages,2,[],https://github.com/lttng/lttng-tools/pull/62,https://github.com/eepp,1,https://github.com/lttng/lttng-tools/pull/62,A few remaining fixes for the modern LTTng man pages.,A few remaining fixes for the modern LTTng man pages.,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,62,2016-03-19T01:41:26Z,2016-03-19T16:39:38Z,2016-03-19T16:39:38Z,CLOSED,False,14,6,3,https://github.com/eepp,Fix man pages,2,[],https://github.com/lttng/lttng-tools/pull/62,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/62#issuecomment-198746759,A few remaining fixes for the modern LTTng man pages.,"Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,63,2016-03-24T07:00:38Z,2016-03-24T20:41:37Z,2016-03-24T20:41:37Z,CLOSED,False,184,88,34,https://github.com/eepp,Improve and fix man pages,18,[],https://github.com/lttng/lttng-tools/pull/63,https://github.com/eepp,1,https://github.com/lttng/lttng-tools/pull/63,Essential additions to the AsciiDoc man pages for a semantically-correct (üç∫) DocBook/HTML output.,Essential additions to the AsciiDoc man pages for a semantically-correct (üç∫) DocBook/HTML output.,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,63,2016-03-24T07:00:38Z,2016-03-24T20:41:37Z,2016-03-24T20:41:37Z,CLOSED,False,184,88,34,https://github.com/eepp,Improve and fix man pages,18,[],https://github.com/lttng/lttng-tools/pull/63,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/63#issuecomment-201011123,Essential additions to the AsciiDoc man pages for a semantically-correct (üç∫) DocBook/HTML output.,"Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,64,2016-03-25T02:14:22Z,2016-04-04T16:44:03Z,2016-04-04T16:44:03Z,CLOSED,False,70,0,3,https://github.com/eepp,doc/man: add FILES section,1,[],https://github.com/lttng/lttng-tools/pull/64,https://github.com/eepp,1,https://github.com/lttng/lttng-tools/pull/64,"I realized that this very conventional section is missing from the man pages.
Am I missing anything here?","I realized that this very conventional section is missing from the man pages.
Am I missing anything here?",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,64,2016-03-25T02:14:22Z,2016-04-04T16:44:03Z,2016-04-04T16:44:03Z,CLOSED,False,70,0,3,https://github.com/eepp,doc/man: add FILES section,1,[],https://github.com/lttng/lttng-tools/pull/64,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/64#issuecomment-205366505,"I realized that this very conventional section is missing from the man pages.
Am I missing anything here?",Looks good!,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,64,2016-03-25T02:14:22Z,2016-04-04T16:44:03Z,2016-04-04T16:44:03Z,CLOSED,False,70,0,3,https://github.com/eepp,doc/man: add FILES section,1,[],https://github.com/lttng/lttng-tools/pull/64,https://github.com/jgalar,3,https://github.com/lttng/lttng-tools/pull/64#issuecomment-205387091,"I realized that this very conventional section is missing from the man pages.
Am I missing anything here?","Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,65,2016-04-02T20:58:29Z,2016-05-04T20:49:24Z,2016-05-04T20:49:24Z,CLOSED,False,360,245,34,https://github.com/eepp,Fix build system for pregenerated stuff,7,[],https://github.com/lttng/lttng-tools/pull/65,https://github.com/eepp,1,https://github.com/lttng/lttng-tools/pull/65,"This should cover most situations (rough estimate: 99.97%).
This solution assumes that pregenerated files distributed in the tarball always exist, and are always newer than their sources.
The real solution, which I think is overkill for the moment, would be to validate this assumption: at configure time, if a given pregenerated file does not exist, or if it's older than its source, then the tool to regenerate the file is absolutely required. This would allow the following situation:

Get the tarball
Modify the parser file source, or remove the pregenerated parser file
./configure (you don't have Bison, for example): passes

After step 2, it is clear that the parser file should be regenerated from its modified source (or at all if it was removed). But step 3 passes, thus the parser file is either not up to date, or missing, in which case make fails.","This should cover most situations (rough estimate: 99.97%).
This solution assumes that pregenerated files distributed in the tarball always exist, and are always newer than their sources.
The real solution, which I think is overkill for the moment, would be to validate this assumption: at configure time, if a given pregenerated file does not exist, or if it's older than its source, then the tool to regenerate the file is absolutely required. This would allow the following situation:

Get the tarball
Modify the parser file source, or remove the pregenerated parser file
./configure (you don't have Bison, for example): passes

After step 2, it is clear that the parser file should be regenerated from its modified source (or at all if it was removed). But step 3 passes, thus the parser file is either not up to date, or missing, in which case make fails.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,65,2016-04-02T20:58:29Z,2016-05-04T20:49:24Z,2016-05-04T20:49:24Z,CLOSED,False,360,245,34,https://github.com/eepp,Fix build system for pregenerated stuff,7,[],https://github.com/lttng/lttng-tools/pull/65,https://github.com/eepp,2,https://github.com/lttng/lttng-tools/pull/65#issuecomment-216998324,"This should cover most situations (rough estimate: 99.97%).
This solution assumes that pregenerated files distributed in the tarball always exist, and are always newer than their sources.
The real solution, which I think is overkill for the moment, would be to validate this assumption: at configure time, if a given pregenerated file does not exist, or if it's older than its source, then the tool to regenerate the file is absolutely required. This would allow the following situation:

Get the tarball
Modify the parser file source, or remove the pregenerated parser file
./configure (you don't have Bison, for example): passes

After step 2, it is clear that the parser file should be regenerated from its modified source (or at all if it was removed). But step 3 passes, thus the parser file is either not up to date, or missing, in which case make fails.",Closing this since #67 includes it.,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,66,2016-04-07T03:59:22Z,2016-05-15T17:23:09Z,2016-05-15T17:23:09Z,CLOSED,False,2,0,1,https://github.com/eepp,ust-metadata.c: nest/indent enumeration entries,1,[],https://github.com/lttng/lttng-tools/pull/66,https://github.com/eepp,1,https://github.com/lttng/lttng-tools/pull/66,"This looks nicer, IMO:
event {
    name = ""barectf_tp:a_few_fields"";
    id = 5;
    stream_id = 0;
    loglevel = 13;
    fields := struct {
        integer { size = 32; align = 8; signed = 1; encoding = none; base = 10; } _int32;
        integer { size = 16; align = 8; signed = 1; encoding = none; base = 10; } _int16;
        floating_point { exp_dig = 11; mant_dig = 53; align = 8; } _dbl;
        string _str;
        enum : integer { size = 32; align = 8; signed = 1; encoding = none; base = 10; } {
            ""NEW"" = 0,
            ""TERMINATED"" = 1,
            ""READY"" = 2,
            ""RUNNING"" = 3,
            ""WAITING"" = 4,
        } _state;
    };
};

Compare to:
event {
    name = ""barectf_tp:a_few_fields"";
    id = 5;
    stream_id = 0;
    loglevel = 13;
    fields := struct {
        integer { size = 32; align = 8; signed = 1; encoding = none; base = 10; } _int32;
        integer { size = 16; align = 8; signed = 1; encoding = none; base = 10; } _int16;
        floating_point { exp_dig = 11; mant_dig = 53; align = 8; } _dbl;
        string _str;
        enum : integer { size = 32; align = 8; signed = 1; encoding = none; base = 10; } {
        ""NEW"" = 0,
        ""TERMINATED"" = 1,
        ""READY"" = 2,
        ""RUNNING"" = 3,
        ""WAITING"" = 4,
        } _state;
    };
};","This looks nicer, IMO:
event {
    name = ""barectf_tp:a_few_fields"";
    id = 5;
    stream_id = 0;
    loglevel = 13;
    fields := struct {
        integer { size = 32; align = 8; signed = 1; encoding = none; base = 10; } _int32;
        integer { size = 16; align = 8; signed = 1; encoding = none; base = 10; } _int16;
        floating_point { exp_dig = 11; mant_dig = 53; align = 8; } _dbl;
        string _str;
        enum : integer { size = 32; align = 8; signed = 1; encoding = none; base = 10; } {
            ""NEW"" = 0,
            ""TERMINATED"" = 1,
            ""READY"" = 2,
            ""RUNNING"" = 3,
            ""WAITING"" = 4,
        } _state;
    };
};

Compare to:
event {
    name = ""barectf_tp:a_few_fields"";
    id = 5;
    stream_id = 0;
    loglevel = 13;
    fields := struct {
        integer { size = 32; align = 8; signed = 1; encoding = none; base = 10; } _int32;
        integer { size = 16; align = 8; signed = 1; encoding = none; base = 10; } _int16;
        floating_point { exp_dig = 11; mant_dig = 53; align = 8; } _dbl;
        string _str;
        enum : integer { size = 32; align = 8; signed = 1; encoding = none; base = 10; } {
        ""NEW"" = 0,
        ""TERMINATED"" = 1,
        ""READY"" = 2,
        ""RUNNING"" = 3,
        ""WAITING"" = 4,
        } _state;
    };
};",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,66,2016-04-07T03:59:22Z,2016-05-15T17:23:09Z,2016-05-15T17:23:09Z,CLOSED,False,2,0,1,https://github.com/eepp,ust-metadata.c: nest/indent enumeration entries,1,[],https://github.com/lttng/lttng-tools/pull/66,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/66#issuecomment-219298605,"This looks nicer, IMO:
event {
    name = ""barectf_tp:a_few_fields"";
    id = 5;
    stream_id = 0;
    loglevel = 13;
    fields := struct {
        integer { size = 32; align = 8; signed = 1; encoding = none; base = 10; } _int32;
        integer { size = 16; align = 8; signed = 1; encoding = none; base = 10; } _int16;
        floating_point { exp_dig = 11; mant_dig = 53; align = 8; } _dbl;
        string _str;
        enum : integer { size = 32; align = 8; signed = 1; encoding = none; base = 10; } {
            ""NEW"" = 0,
            ""TERMINATED"" = 1,
            ""READY"" = 2,
            ""RUNNING"" = 3,
            ""WAITING"" = 4,
        } _state;
    };
};

Compare to:
event {
    name = ""barectf_tp:a_few_fields"";
    id = 5;
    stream_id = 0;
    loglevel = 13;
    fields := struct {
        integer { size = 32; align = 8; signed = 1; encoding = none; base = 10; } _int32;
        integer { size = 16; align = 8; signed = 1; encoding = none; base = 10; } _int16;
        floating_point { exp_dig = 11; mant_dig = 53; align = 8; } _dbl;
        string _str;
        enum : integer { size = 32; align = 8; signed = 1; encoding = none; base = 10; } {
        ""NEW"" = 0,
        ""TERMINATED"" = 1,
        ""READY"" = 2,
        ""RUNNING"" = 3,
        ""WAITING"" = 4,
        } _state;
    };
};","Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,67,2016-05-04T16:44:31Z,2016-05-15T17:21:24Z,2016-05-15T17:21:24Z,CLOSED,False,703,449,37,https://github.com/eepp,"Fix build system for pregenerated files, and share default values between code and man pages",15,[],https://github.com/lttng/lttng-tools/pull/67,https://github.com/eepp,1,https://github.com/lttng/lttng-tools/pull/67,,,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,67,2016-05-04T16:44:31Z,2016-05-15T17:21:24Z,2016-05-15T17:21:24Z,CLOSED,False,703,449,37,https://github.com/eepp,"Fix build system for pregenerated files, and share default values between code and man pages",15,[],https://github.com/lttng/lttng-tools/pull/67,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/67#issuecomment-219298502,,Will be merged as part of #68,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,68,2016-05-10T19:33:52Z,2016-05-15T17:27:17Z,2016-05-15T20:33:59Z,CLOSED,False,824,471,38,https://github.com/eepp,lttng.c: show basic help when there's no argumentsargs,17,[],https://github.com/lttng/lttng-tools/pull/68,https://github.com/eepp,1,https://github.com/lttng/lttng-tools/pull/68,"As of this date (1462908792), those patches (f105bf1 and fad3d4d) apply on top of #67.","As of this date (1462908792), those patches (f105bf1 and fad3d4d) apply on top of #67.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,68,2016-05-10T19:33:52Z,2016-05-15T17:27:17Z,2016-05-15T20:33:59Z,CLOSED,False,824,471,38,https://github.com/eepp,lttng.c: show basic help when there's no argumentsargs,17,[],https://github.com/lttng/lttng-tools/pull/68,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/68#issuecomment-219296796,"As of this date (1462908792), those patches (f105bf1 and fad3d4d) apply on top of #67.","The decision tree described in 3535af1eff2d50a5dc7f3e7b0426616a14961834's commit message is wrong. It says that the man pages won't be built if we don't define --enable-man-pages.
Changed the else for else if --disable-man-pages.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,68,2016-05-10T19:33:52Z,2016-05-15T17:27:17Z,2016-05-15T20:33:59Z,CLOSED,False,824,471,38,https://github.com/eepp,lttng.c: show basic help when there's no argumentsargs,17,[],https://github.com/lttng/lttng-tools/pull/68,https://github.com/jgalar,3,https://github.com/lttng/lttng-tools/pull/68#issuecomment-219298820,"As of this date (1462908792), those patches (f105bf1 and fad3d4d) apply on top of #67.",Merged in master and stable-2.8. Thanks!,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,68,2016-05-10T19:33:52Z,2016-05-15T17:27:17Z,2016-05-15T20:33:59Z,CLOSED,False,824,471,38,https://github.com/eepp,lttng.c: show basic help when there's no argumentsargs,17,[],https://github.com/lttng/lttng-tools/pull/68,https://github.com/jgalar,4,https://github.com/lttng/lttng-tools/pull/68#issuecomment-219308926,"As of this date (1462908792), those patches (f105bf1 and fad3d4d) apply on top of #67.","For reference:
187ee14 - Propagate default values from configure.ac to asciidoc.conf breaks the out-of-tree build since it omits changing the path of asciidoc.conf (fixed by fd5505f).",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,69,2016-05-10T20:01:33Z,2016-05-15T17:26:59Z,2016-05-15T17:26:59Z,CLOSED,False,12,16,1,https://github.com/eepp,configure.ac: check for an existing liburcu-cds symbol,2,[],https://github.com/lttng/lttng-tools/pull/69,https://github.com/eepp,1,https://github.com/lttng/lttng-tools/pull/69,,,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,69,2016-05-10T20:01:33Z,2016-05-15T17:26:59Z,2016-05-15T17:26:59Z,CLOSED,False,12,16,1,https://github.com/eepp,configure.ac: check for an existing liburcu-cds symbol,2,[],https://github.com/lttng/lttng-tools/pull/69,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/69#issuecomment-219298800,,"Merged in master, stable-2.8, and stable-2.7. Thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,70,2016-05-17T00:17:21Z,2016-05-17T18:24:16Z,2019-04-03T18:39:34Z,CLOSED,False,13,6,6,https://github.com/mjeanson,Misc coverity fixes,7,[],https://github.com/lttng/lttng-tools/pull/70,https://github.com/mjeanson,1,https://github.com/lttng/lttng-tools/pull/70,,,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,70,2016-05-17T00:17:21Z,2016-05-17T18:24:16Z,2019-04-03T18:39:34Z,CLOSED,False,13,6,6,https://github.com/mjeanson,Misc coverity fixes,7,[],https://github.com/lttng/lttng-tools/pull/70,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/70#issuecomment-219808776,,"Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,71,2016-05-17T23:11:06Z,2016-05-19T04:46:46Z,2016-05-19T04:46:46Z,CLOSED,False,4,4,1,https://github.com/eepp,Fix: configure.ac: allow --disable-python-bindings,1,[],https://github.com/lttng/lttng-tools/pull/71,https://github.com/eepp,1,https://github.com/lttng/lttng-tools/pull/71,,,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,71,2016-05-17T23:11:06Z,2016-05-19T04:46:46Z,2016-05-19T04:46:46Z,CLOSED,False,4,4,1,https://github.com/eepp,Fix: configure.ac: allow --disable-python-bindings,1,[],https://github.com/lttng/lttng-tools/pull/71,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/71#issuecomment-220130005,,"Good catch üëç
Will merge very soon.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,71,2016-05-17T23:11:06Z,2016-05-19T04:46:46Z,2016-05-19T04:46:46Z,CLOSED,False,4,4,1,https://github.com/eepp,Fix: configure.ac: allow --disable-python-bindings,1,[],https://github.com/lttng/lttng-tools/pull/71,https://github.com/jgalar,3,https://github.com/lttng/lttng-tools/pull/71#issuecomment-220226641,,"Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,72,2016-05-17T23:32:12Z,2016-05-19T05:27:32Z,2016-05-19T05:27:32Z,CLOSED,False,200,163,6,https://github.com/eepp,doc/man: put AsciiDoc attributes in their own file,7,[],https://github.com/lttng/lttng-tools/pull/72,https://github.com/eepp,1,https://github.com/lttng/lttng-tools/pull/72,,,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,72,2016-05-17T23:32:12Z,2016-05-19T05:27:32Z,2016-05-19T05:27:32Z,CLOSED,False,200,163,6,https://github.com/eepp,doc/man: put AsciiDoc attributes in their own file,7,[],https://github.com/lttng/lttng-tools/pull/72,https://github.com/eepp,2,https://github.com/lttng/lttng-tools/pull/72#issuecomment-220210969,,add relay mode should probably be reworded to add network streaming mode.,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,72,2016-05-17T23:32:12Z,2016-05-19T05:27:32Z,2016-05-19T05:27:32Z,CLOSED,False,200,163,6,https://github.com/eepp,doc/man: put AsciiDoc attributes in their own file,7,[],https://github.com/lttng/lttng-tools/pull/72,https://github.com/jgalar,3,https://github.com/lttng/lttng-tools/pull/72#issuecomment-220230880,,"Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,73,2016-06-14T23:29:03Z,2016-10-07T16:21:26Z,2016-10-07T16:21:26Z,CLOSED,False,10,802,33,https://github.com/eepp,Nuke calibrate,7,['enhancement'],https://github.com/lttng/lttng-tools/pull/73,https://github.com/eepp,1,https://github.com/lttng/lttng-tools/pull/73,"I leave the XSD file to you. Not the end of the world if there's still calibrate stuff in there, but removing it implies a change of version I guess.","I leave the XSD file to you. Not the end of the world if there's still calibrate stuff in there, but removing it implies a change of version I guess.",True,{'HOORAY': ['https://github.com/jgalar']}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,73,2016-06-14T23:29:03Z,2016-10-07T16:21:26Z,2016-10-07T16:21:26Z,CLOSED,False,10,802,33,https://github.com/eepp,Nuke calibrate,7,['enhancement'],https://github.com/lttng/lttng-tools/pull/73,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/73#issuecomment-252296578,"I leave the XSD file to you. Not the end of the world if there's still calibrate stuff in there, but removing it implies a change of version I guess.","Merged with a couple of minor changes, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,74,2016-06-21T20:31:43Z,2016-06-28T14:37:40Z,2016-06-28T14:37:41Z,CLOSED,False,1,1,1,https://github.com/eepp,configure.ac: fix --enable/disable-kmod option,1,[],https://github.com/lttng/lttng-tools/pull/74,https://github.com/eepp,1,https://github.com/lttng/lttng-tools/pull/74,,,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,74,2016-06-21T20:31:43Z,2016-06-28T14:37:40Z,2016-06-28T14:37:41Z,CLOSED,False,1,1,1,https://github.com/eepp,configure.ac: fix --enable/disable-kmod option,1,[],https://github.com/lttng/lttng-tools/pull/74,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/74#issuecomment-229069001,,"Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,75,2016-06-21T20:31:51Z,2016-06-28T15:24:56Z,2016-06-28T15:24:56Z,CLOSED,False,9,2,1,https://github.com/eepp,Fix: sessiond: ht_match_event(): check if filter is NULL,1,[],https://github.com/lttng/lttng-tools/pull/75,https://github.com/eepp,1,https://github.com/lttng/lttng-tools/pull/75,,,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,75,2016-06-21T20:31:51Z,2016-06-28T15:24:56Z,2016-06-28T15:24:56Z,CLOSED,False,9,2,1,https://github.com/eepp,Fix: sessiond: ht_match_event(): check if filter is NULL,1,[],https://github.com/lttng/lttng-tools/pull/75,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/75#issuecomment-229084255,,"Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,76,2016-07-04T22:27:03Z,2016-07-05T20:34:43Z,2016-07-05T20:34:44Z,CLOSED,False,74,25,6,https://github.com/eepp,Add support and test for UST's autoincrementing enum entries,3,[],https://github.com/lttng/lttng-tools/pull/76,https://github.com/eepp,1,https://github.com/lttng/lttng-tools/pull/76,,,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,76,2016-07-04T22:27:03Z,2016-07-05T20:34:43Z,2016-07-05T20:34:44Z,CLOSED,False,74,25,6,https://github.com/eepp,Add support and test for UST's autoincrementing enum entries,3,[],https://github.com/lttng/lttng-tools/pull/76,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/76#issuecomment-230594666,,"Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,77,2016-07-05T19:35:03Z,2018-09-10T15:33:20Z,2018-09-11T17:00:26Z,CLOSED,False,216,388,46,https://github.com/PSRCode,Various tests fixes,15,"['bug', 'enhancement']",https://github.com/lttng/lttng-tools/pull/77,https://github.com/PSRCode,1,https://github.com/lttng/lttng-tools/pull/77,"Each commit should be self explanatory.
This is a cleanup of  #49 without all the remote tests execution. There's not enough gain to keep the remote execution stuff for now.
Thanks","Each commit should be self explanatory.
This is a cleanup of  #49 without all the remote tests execution. There's not enough gain to keep the remote execution stuff for now.
Thanks",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,77,2016-07-05T19:35:03Z,2018-09-10T15:33:20Z,2018-09-11T17:00:26Z,CLOSED,False,216,388,46,https://github.com/PSRCode,Various tests fixes,15,"['bug', 'enhancement']",https://github.com/lttng/lttng-tools/pull/77,https://github.com/PSRCode,2,https://github.com/lttng/lttng-tools/pull/77#issuecomment-419956615,"Each commit should be self explanatory.
This is a cleanup of  #49 without all the remote tests execution. There's not enough gain to keep the remote execution stuff for now.
Thanks",Closing since this does not seems to be a priority and the tree changed. I'll go over this sometime in the future.,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,77,2016-07-05T19:35:03Z,2018-09-10T15:33:20Z,2018-09-11T17:00:26Z,CLOSED,False,216,388,46,https://github.com/PSRCode,Various tests fixes,15,"['bug', 'enhancement']",https://github.com/lttng/lttng-tools/pull/77,https://github.com/jgalar,3,https://github.com/lttng/lttng-tools/pull/77#issuecomment-420345613,"Each commit should be self explanatory.
This is a cleanup of  #49 without all the remote tests execution. There's not enough gain to keep the remote execution stuff for now.
Thanks","@PSRCode I merged the fixes that applied cleanly.
6bf9addcb 2016-07-05 Tests: remove temporary folder [Jonathan Rajotte]
7182f1373 2016-07-05 Tests: remove mi result files when done [Jonathan Rajotte]
3355fd4d9 2015-10-14 Tests: Remove unused set +x [Jonathan Rajotte]
165b45535 2015-10-06 Tests: Kill relayd after sessiond to ensure a clean tear down [Jonathan Rajotte]
69ddd7094 2015-10-06 Tests: Remove unused variable [Jonathan Rajotte]
839cfeecd 2015-09-30 Tests: Use stop relayd from utils.sh [Jonathan Rajotte]
4d513dce5 2015-09-30 Tests: remove declaration already present in utils.sh [Jonathan Rajotte]",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,78,2016-07-05T21:06:48Z,2016-07-05T22:33:10Z,2016-07-05T22:33:10Z,CLOSED,False,8,3,2,https://github.com/eepp,Fix: protocol mismatch between UST and tools,1,[],https://github.com/lttng/lttng-tools/pull/78,https://github.com/eepp,1,https://github.com/lttng/lttng-tools/pull/78,,,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,78,2016-07-05T21:06:48Z,2016-07-05T22:33:10Z,2016-07-05T22:33:10Z,CLOSED,False,8,3,2,https://github.com/eepp,Fix: protocol mismatch between UST and tools,1,[],https://github.com/lttng/lttng-tools/pull/78,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/78#issuecomment-230622249,,"Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,79,2016-08-03T22:17:56Z,2016-08-05T19:46:34Z,2019-04-03T18:45:11Z,CLOSED,False,171,41,27,https://github.com/mjeanson,LTTng relayd Mac OSX support,8,['enhancement'],https://github.com/lttng/lttng-tools/pull/79,https://github.com/mjeanson,1,https://github.com/lttng/lttng-tools/pull/79,"Build with:
./configure --disable-bin-lttng --disable-bin-lttng-consumerd --disable-bin-lttng-crash --disable-bin-lttng-sessiond --disable-extras --without-lttng-ust --disable-man-page","Build with:
./configure --disable-bin-lttng --disable-bin-lttng-consumerd --disable-bin-lttng-crash --disable-bin-lttng-sessiond --disable-extras --without-lttng-ust --disable-man-page",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,79,2016-08-03T22:17:56Z,2016-08-05T19:46:34Z,2019-04-03T18:45:11Z,CLOSED,False,171,41,27,https://github.com/mjeanson,LTTng relayd Mac OSX support,8,['enhancement'],https://github.com/lttng/lttng-tools/pull/79,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/79#issuecomment-237644201,"Build with:
./configure --disable-bin-lttng --disable-bin-lttng-consumerd --disable-bin-lttng-crash --disable-bin-lttng-sessiond --disable-extras --without-lttng-ust --disable-man-page",Adding time.h to src/common/compat/Makefile.am.,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,79,2016-08-03T22:17:56Z,2016-08-05T19:46:34Z,2019-04-03T18:45:11Z,CLOSED,False,171,41,27,https://github.com/mjeanson,LTTng relayd Mac OSX support,8,['enhancement'],https://github.com/lttng/lttng-tools/pull/79,https://github.com/jgalar,3,https://github.com/lttng/lttng-tools/pull/79#issuecomment-237945319,"Build with:
./configure --disable-bin-lttng --disable-bin-lttng-consumerd --disable-bin-lttng-crash --disable-bin-lttng-sessiond --disable-extras --without-lttng-ust --disable-man-page","Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,80,2016-08-09T19:18:07Z,2016-11-16T17:33:41Z,2016-11-16T17:33:41Z,CLOSED,False,2,2,1,https://github.com/eepp,lttng-enable-channel(1): remove redundant --discard from synopsis,1,[],https://github.com/lttng/lttng-tools/pull/80,https://github.com/eepp,1,https://github.com/lttng/lttng-tools/pull/80,,,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,80,2016-08-09T19:18:07Z,2016-11-16T17:33:41Z,2016-11-16T17:33:41Z,CLOSED,False,2,2,1,https://github.com/eepp,lttng-enable-channel(1): remove redundant --discard from synopsis,1,[],https://github.com/lttng/lttng-tools/pull/80,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/80#issuecomment-261014398,,"This was merged a while ago. I forgot to close the PR.
Thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,81,2016-10-07T16:13:21Z,2016-10-07T22:09:13Z,2016-10-28T19:58:36Z,CLOSED,False,180,4,7,https://github.com/PSRCode,Load override name,5,['enhancement'],https://github.com/lttng/lttng-tools/pull/81,https://github.com/PSRCode,1,https://github.com/lttng/lttng-tools/pull/81,Introduce --override-name for the load command,Introduce --override-name for the load command,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,81,2016-10-07T16:13:21Z,2016-10-07T22:09:13Z,2016-10-28T19:58:36Z,CLOSED,False,180,4,7,https://github.com/PSRCode,Load override name,5,['enhancement'],https://github.com/lttng/lttng-tools/pull/81,https://github.com/PSRCode,2,https://github.com/lttng/lttng-tools/pull/81#issuecomment-252338798,Introduce --override-name for the load command,Fixed the comments stuff and check before using raw data,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,81,2016-10-07T16:13:21Z,2016-10-07T22:09:13Z,2016-10-28T19:58:36Z,CLOSED,False,180,4,7,https://github.com/PSRCode,Load override name,5,['enhancement'],https://github.com/lttng/lttng-tools/pull/81,https://github.com/jgalar,3,https://github.com/lttng/lttng-tools/pull/81#issuecomment-252372948,Introduce --override-name for the load command,"Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,82,2016-10-28T23:06:02Z,2016-11-17T20:44:57Z,2016-11-17T20:44:57Z,CLOSED,False,26,10,3,https://github.com/eepp,Fix prebuilt man pages,2,[],https://github.com/lttng/lttng-tools/pull/82,https://github.com/eepp,1,https://github.com/lttng/lttng-tools/pull/82,,,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,82,2016-10-28T23:06:02Z,2016-11-17T20:44:57Z,2016-11-17T20:44:57Z,CLOSED,False,26,10,3,https://github.com/eepp,Fix prebuilt man pages,2,[],https://github.com/lttng/lttng-tools/pull/82,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/82#issuecomment-261364085,,"Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,83,2016-11-02T07:26:09Z,2016-11-17T20:45:07Z,2016-11-17T20:45:07Z,CLOSED,False,37,43,1,https://github.com/eepp,m4/pprint.m4: update with correct quoting,1,[],https://github.com/lttng/lttng-tools/pull/83,https://github.com/eepp,1,https://github.com/lttng/lttng-tools/pull/83,,,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,83,2016-11-02T07:26:09Z,2016-11-17T20:45:07Z,2016-11-17T20:45:07Z,CLOSED,False,37,43,1,https://github.com/eepp,m4/pprint.m4: update with correct quoting,1,[],https://github.com/lttng/lttng-tools/pull/83,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/83#issuecomment-261364115,,"Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,84,2016-11-24T23:11:28Z,2016-11-29T16:28:15Z,2016-11-29T16:28:15Z,CLOSED,False,81,19,7,https://github.com/PSRCode,Load fix for 2.9,5,[],https://github.com/lttng/lttng-tools/pull/84,https://github.com/PSRCode,1,https://github.com/lttng/lttng-tools/pull/84,Should be ported to master,Should be ported to master,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,84,2016-11-24T23:11:28Z,2016-11-29T16:28:15Z,2016-11-29T16:28:15Z,CLOSED,False,81,19,7,https://github.com/PSRCode,Load fix for 2.9,5,[],https://github.com/lttng/lttng-tools/pull/84,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/84#issuecomment-263620385,Should be ported to master,"Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,85,2016-11-28T22:58:03Z,2016-12-01T18:18:35Z,2016-12-01T18:18:35Z,CLOSED,False,76,65,22,https://github.com/eepp,Fix & update man pages,7,"['enhancement', 'docs']",https://github.com/lttng/lttng-tools/pull/85,https://github.com/eepp,1,https://github.com/lttng/lttng-tools/pull/85,,,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,85,2016-11-28T22:58:03Z,2016-12-01T18:18:35Z,2016-12-01T18:18:35Z,CLOSED,False,76,65,22,https://github.com/eepp,Fix & update man pages,7,"['enhancement', 'docs']",https://github.com/lttng/lttng-tools/pull/85,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/85#issuecomment-264250496,,"Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,86,2016-11-30T17:30:49Z,2016-12-01T22:55:50Z,2016-12-01T22:55:50Z,CLOSED,False,1,1,1,https://github.com/eepp,lttng-add-context(1): add missing man: prefix,1,"['bug', 'docs']",https://github.com/lttng/lttng-tools/pull/86,https://github.com/eepp,1,https://github.com/lttng/lttng-tools/pull/86,Oops!,Oops!,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,86,2016-11-30T17:30:49Z,2016-12-01T22:55:50Z,2016-12-01T22:55:50Z,CLOSED,False,1,1,1,https://github.com/eepp,lttng-add-context(1): add missing man: prefix,1,"['bug', 'docs']",https://github.com/lttng/lttng-tools/pull/86,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/86#issuecomment-264321365,Oops!,"Merged in master and stable-2.9, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,87,2016-12-01T06:55:03Z,2017-05-06T19:45:40Z,2017-05-06T19:45:40Z,CLOSED,False,313,38,38,https://github.com/eepp,Embed --help messages,3,"['enhancement', 'docs']",https://github.com/lttng/lttng-tools/pull/87,https://github.com/eepp,1,https://github.com/lttng/lttng-tools/pull/87,"See the detailed commit message of a52c482.
Tested with the following configurations, from a tarball:

In-tree build:

Without --enable-embedded-help: does not generate the C string files
With --enable-embedded-help

With existing asciidoc program: builds the man pages, then generates the C string files
Without existing asciidoc program: generates the C string files from the pregenerated man pages




Out-of-tree build:

Without --enable-embedded-help: does not generate the C string files
With --enable-embedded-help

With existing asciidoc program: builds the man pages, then generates the C string files from the man pages found in the build directory
Without existing asciidoc program: generates the C string files from the pregenerated man pages found in the source directory





--disable-man-pages and --enable-embedded-help is not a valid configuration.","See the detailed commit message of a52c482.
Tested with the following configurations, from a tarball:

In-tree build:

Without --enable-embedded-help: does not generate the C string files
With --enable-embedded-help

With existing asciidoc program: builds the man pages, then generates the C string files
Without existing asciidoc program: generates the C string files from the pregenerated man pages




Out-of-tree build:

Without --enable-embedded-help: does not generate the C string files
With --enable-embedded-help

With existing asciidoc program: builds the man pages, then generates the C string files from the man pages found in the build directory
Without existing asciidoc program: generates the C string files from the pregenerated man pages found in the source directory





--disable-man-pages and --enable-embedded-help is not a valid configuration.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,87,2016-12-01T06:55:03Z,2017-05-06T19:45:40Z,2017-05-06T19:45:40Z,CLOSED,False,313,38,38,https://github.com/eepp,Embed --help messages,3,"['enhancement', 'docs']",https://github.com/lttng/lttng-tools/pull/87,https://github.com/eepp,2,https://github.com/lttng/lttng-tools/pull/87#issuecomment-264096518,"See the detailed commit message of a52c482.
Tested with the following configurations, from a tarball:

In-tree build:

Without --enable-embedded-help: does not generate the C string files
With --enable-embedded-help

With existing asciidoc program: builds the man pages, then generates the C string files
Without existing asciidoc program: generates the C string files from the pregenerated man pages




Out-of-tree build:

Without --enable-embedded-help: does not generate the C string files
With --enable-embedded-help

With existing asciidoc program: builds the man pages, then generates the C string files from the man pages found in the build directory
Without existing asciidoc program: generates the C string files from the pregenerated man pages found in the source directory





--disable-man-pages and --enable-embedded-help is not a valid configuration.","Some stats (for lttng):


--disable-embedded-help:
[15] .rodata           PROGBITS         0000000000428280  00028280
     000000000000d978  0000000000000000   A       0     0     32



--enable-embedded-help:
[15] .rodata           PROGBITS         0000000000428720  00028720
     0000000000039e58  0000000000000000   A       0     0     32



Difference is ‚âà 177 kiB.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,87,2016-12-01T06:55:03Z,2017-05-06T19:45:40Z,2017-05-06T19:45:40Z,CLOSED,False,313,38,38,https://github.com/eepp,Embed --help messages,3,"['enhancement', 'docs']",https://github.com/lttng/lttng-tools/pull/87,https://github.com/jgalar,3,https://github.com/lttng/lttng-tools/pull/87#issuecomment-299661892,"See the detailed commit message of a52c482.
Tested with the following configurations, from a tarball:

In-tree build:

Without --enable-embedded-help: does not generate the C string files
With --enable-embedded-help

With existing asciidoc program: builds the man pages, then generates the C string files
Without existing asciidoc program: generates the C string files from the pregenerated man pages




Out-of-tree build:

Without --enable-embedded-help: does not generate the C string files
With --enable-embedded-help

With existing asciidoc program: builds the man pages, then generates the C string files from the man pages found in the build directory
Without existing asciidoc program: generates the C string files from the pregenerated man pages found in the source directory





--disable-man-pages and --enable-embedded-help is not a valid configuration.","Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,88,2017-03-15T00:50:00Z,2017-05-06T19:46:01Z,2017-05-06T19:46:01Z,CLOSED,False,45,45,7,https://github.com/eepp,doc/man: add typical `$` and `#` prompts to command lines,1,"['enhancement', 'docs']",https://github.com/lttng/lttng-tools/pull/88,https://github.com/eepp,1,https://github.com/lttng/lttng-tools/pull/88,"It is more instinctive for the typical reader to immediately recognize
command lines when they start with the classic prompts.
On the online version of the man pages, those prompts are treated
specially to make them non-selectable. This makes it possible to copy
multiple command lines at once (without copying the prompts) and to
paste them to your shell.","It is more instinctive for the typical reader to immediately recognize
command lines when they start with the classic prompts.
On the online version of the man pages, those prompts are treated
specially to make them non-selectable. This makes it possible to copy
multiple command lines at once (without copying the prompts) and to
paste them to your shell.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,88,2017-03-15T00:50:00Z,2017-05-06T19:46:01Z,2017-05-06T19:46:01Z,CLOSED,False,45,45,7,https://github.com/eepp,doc/man: add typical `$` and `#` prompts to command lines,1,"['enhancement', 'docs']",https://github.com/lttng/lttng-tools/pull/88,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/88#issuecomment-299661914,"It is more instinctive for the typical reader to immediately recognize
command lines when they start with the classic prompts.
On the online version of the man pages, those prompts are treated
specially to make them non-selectable. This makes it possible to copy
multiple command lines at once (without copying the prompts) and to
paste them to your shell.","Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,89,2017-04-04T21:31:13Z,2017-05-06T19:46:13Z,2017-05-06T19:46:13Z,CLOSED,False,14,4,2,https://github.com/eepp,Fix man pages (lttng-destroy(1) and lttng-stop(1)),2,"['bug', 'docs']",https://github.com/lttng/lttng-tools/pull/89,https://github.com/eepp,1,https://github.com/lttng/lttng-tools/pull/89,,,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,89,2017-04-04T21:31:13Z,2017-05-06T19:46:13Z,2017-05-06T19:46:13Z,CLOSED,False,14,4,2,https://github.com/eepp,Fix man pages (lttng-destroy(1) and lttng-stop(1)),2,"['bug', 'docs']",https://github.com/lttng/lttng-tools/pull/89,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/89#issuecomment-299661923,,"Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,90,2017-04-19T20:31:51Z,2018-02-16T20:35:43Z,2018-02-16T20:35:43Z,CLOSED,False,248,107,10,https://github.com/frdeso,[RFC] Syscall test app,5,[],https://github.com/lttng/lttng-tools/pull/90,https://github.com/frdeso,1,https://github.com/lttng/lttng-tools/pull/90,"Add gen-syscall-events test app to reliably generate syscalls and update syscall regression tests.
The gen-syscall-events program starts and waits for a signal before executing three syscalls and exiting. This test app is now used for the syscall regression tests in conjunction with the PID tracker to only trace the syscalls executed by our test app.","Add gen-syscall-events test app to reliably generate syscalls and update syscall regression tests.
The gen-syscall-events program starts and waits for a signal before executing three syscalls and exiting. This test app is now used for the syscall regression tests in conjunction with the PID tracker to only trace the syscalls executed by our test app.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,90,2017-04-19T20:31:51Z,2018-02-16T20:35:43Z,2018-02-16T20:35:43Z,CLOSED,False,248,107,10,https://github.com/frdeso,[RFC] Syscall test app,5,[],https://github.com/lttng/lttng-tools/pull/90,https://github.com/frdeso,2,https://github.com/lttng/lttng-tools/pull/90#issuecomment-306234180,"Add gen-syscall-events test app to reliably generate syscalls and update syscall regression tests.
The gen-syscall-events program starts and waits for a signal before executing three syscalls and exiting. This test app is now used for the syscall regression tests in conjunction with the PID tracker to only trace the syscalls executed by our test app.","In a similar PR, @compudj pointed out that there is a race in how the events are generated that could make the tests unreliable. I will have make the necessary changes and update this PR.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,90,2017-04-19T20:31:51Z,2018-02-16T20:35:43Z,2018-02-16T20:35:43Z,CLOSED,False,248,107,10,https://github.com/frdeso,[RFC] Syscall test app,5,[],https://github.com/lttng/lttng-tools/pull/90,https://github.com/jgalar,3,https://github.com/lttng/lttng-tools/pull/90#issuecomment-347005788,"Add gen-syscall-events test app to reliably generate syscalls and update syscall regression tests.
The gen-syscall-events program starts and waits for a signal before executing three syscalls and exiting. This test app is now used for the syscall regression tests in conjunction with the PID tracker to only trace the syscalls executed by our test app.",Do you have an update on this PR?,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,90,2017-04-19T20:31:51Z,2018-02-16T20:35:43Z,2018-02-16T20:35:43Z,CLOSED,False,248,107,10,https://github.com/frdeso,[RFC] Syscall test app,5,[],https://github.com/lttng/lttng-tools/pull/90,https://github.com/frdeso,4,https://github.com/lttng/lttng-tools/pull/90#issuecomment-347408793,"Add gen-syscall-events test app to reliably generate syscalls and update syscall regression tests.
The gen-syscall-events program starts and waits for a signal before executing three syscalls and exiting. This test app is now used for the syscall regression tests in conjunction with the PID tracker to only trace the syscalls executed by our test app.",I updated and rebased this pull request. It's now ready for review.,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,90,2017-04-19T20:31:51Z,2018-02-16T20:35:43Z,2018-02-16T20:35:43Z,CLOSED,False,248,107,10,https://github.com/frdeso,[RFC] Syscall test app,5,[],https://github.com/lttng/lttng-tools/pull/90,https://github.com/jgalar,5,https://github.com/lttng/lttng-tools/pull/90#issuecomment-366079990,"Add gen-syscall-events test app to reliably generate syscalls and update syscall regression tests.
The gen-syscall-events program starts and waits for a signal before executing three syscalls and exiting. This test app is now used for the syscall regression tests in conjunction with the PID tracker to only trace the syscalls executed by our test app.","Rebased on master here:
https://github.com/jgalar/lttng-tools/commits/syscall-testapp
However, the test seems to fail on my machine. Can you check on yours?",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,90,2017-04-19T20:31:51Z,2018-02-16T20:35:43Z,2018-02-16T20:35:43Z,CLOSED,False,248,107,10,https://github.com/frdeso,[RFC] Syscall test app,5,[],https://github.com/lttng/lttng-tools/pull/90,https://github.com/frdeso,6,https://github.com/lttng/lttng-tools/pull/90#issuecomment-366279165,"Add gen-syscall-events test app to reliably generate syscalls and update syscall regression tests.
The gen-syscall-events program starts and waits for a signal before executing three syscalls and exiting. This test app is now used for the syscall regression tests in conjunction with the PID tracker to only trace the syscalls executed by our test app.",It does work on my machine. Let's investigate.,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,90,2017-04-19T20:31:51Z,2018-02-16T20:35:43Z,2018-02-16T20:35:43Z,CLOSED,False,248,107,10,https://github.com/frdeso,[RFC] Syscall test app,5,[],https://github.com/lttng/lttng-tools/pull/90,https://github.com/jgalar,7,https://github.com/lttng/lttng-tools/pull/90#issuecomment-366282426,"Add gen-syscall-events test app to reliably generate syscalls and update syscall regression tests.
The gen-syscall-events program starts and waits for a signal before executing three syscalls and exiting. This test app is now used for the syscall regression tests in conjunction with the PID tracker to only trace the syscalls executed by our test app.","Okay, strange... I'm looking into it.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,90,2017-04-19T20:31:51Z,2018-02-16T20:35:43Z,2018-02-16T20:35:43Z,CLOSED,False,248,107,10,https://github.com/frdeso,[RFC] Syscall test app,5,[],https://github.com/lttng/lttng-tools/pull/90,https://github.com/jgalar,8,https://github.com/lttng/lttng-tools/pull/90#issuecomment-366301177,"Add gen-syscall-events test app to reliably generate syscalls and update syscall regression tests.
The gen-syscall-events program starts and waits for a signal before executing three syscalls and exiting. This test app is now used for the syscall regression tests in conjunction with the PID tracker to only trace the syscalls executed by our test app.","Turns out that my libc (2.26) actually calls openat(AT_FDCWD, pathname, ...) when open() is used. As discussed, let's change the test to use a raw syscall.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,90,2017-04-19T20:31:51Z,2018-02-16T20:35:43Z,2018-02-16T20:35:43Z,CLOSED,False,248,107,10,https://github.com/frdeso,[RFC] Syscall test app,5,[],https://github.com/lttng/lttng-tools/pull/90,https://github.com/jgalar,9,https://github.com/lttng/lttng-tools/pull/90#issuecomment-366351045,"Add gen-syscall-events test app to reliably generate syscalls and update syscall regression tests.
The gen-syscall-events program starts and waits for a signal before executing three syscalls and exiting. This test app is now used for the syscall regression tests in conjunction with the PID tracker to only trace the syscalls executed by our test app.","Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,91,2017-05-12T19:47:23Z,2017-06-01T20:48:30Z,2019-04-03T18:46:43Z,CLOSED,False,300,705,61,https://github.com/mjeanson,Build system spring cleaning for master and stable-2.10,12,[],https://github.com/lttng/lttng-tools/pull/91,https://github.com/mjeanson,1,https://github.com/lttng/lttng-tools/pull/91,,,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,91,2017-05-12T19:47:23Z,2017-06-01T20:48:30Z,2019-04-03T18:46:43Z,CLOSED,False,300,705,61,https://github.com/mjeanson,Build system spring cleaning for master and stable-2.10,12,[],https://github.com/lttng/lttng-tools/pull/91,https://github.com/PSRCode,2,https://github.com/lttng/lttng-tools/pull/91#issuecomment-301174090,,Looks good to me. A cleanup of this sort is more than welcome.,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,91,2017-05-12T19:47:23Z,2017-06-01T20:48:30Z,2019-04-03T18:46:43Z,CLOSED,False,300,705,61,https://github.com/mjeanson,Build system spring cleaning for master and stable-2.10,12,[],https://github.com/lttng/lttng-tools/pull/91,https://github.com/jgalar,3,https://github.com/lttng/lttng-tools/pull/91#issuecomment-305615892,,"Great and much-needed PR üëç
Merged!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,92,2017-05-25T09:33:16Z,2017-06-01T18:38:16Z,2017-06-01T18:38:16Z,CLOSED,False,1711,31,16,https://github.com/jgalar,Tests for the new notification API,6,[],https://github.com/lttng/lttng-tools/pull/92,https://github.com/jgalar,1,https://github.com/lttng/lttng-tools/pull/92,,,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,92,2017-05-25T09:33:16Z,2017-06-01T18:38:16Z,2017-06-01T18:38:16Z,CLOSED,False,1711,31,16,https://github.com/jgalar,Tests for the new notification API,6,[],https://github.com/lttng/lttng-tools/pull/92,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/92#issuecomment-303967901,,@PSRCode The multi-client test is failing on the CI. I'm trying to figure out if its a problem with the test or the feature itself.,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,92,2017-05-25T09:33:16Z,2017-06-01T18:38:16Z,2017-06-01T18:38:16Z,CLOSED,False,1711,31,16,https://github.com/jgalar,Tests for the new notification API,6,[],https://github.com/lttng/lttng-tools/pull/92,https://github.com/jgalar,3,https://github.com/lttng/lttng-tools/pull/92#issuecomment-304513803,,"On 25 May 2017 at 12:16, Jonathan Rajotte Julien ***@***.***> wrote:
 ***@***.**** commented on this pull request.

 @PSRCode <https://github.com/psrcode> The multi-client test is failing on
 the CI. I'm trying to figure out if its a problem with the test or the
 feature itself.

 Can you point me to the job?

 I'll fix all the formatting issue in fixup commit if it is okai with you.
 You will have to rebase but it will leave the history clean.

Perfect.

Also, the test can time out because of
MAX_RETRY_NUMBER_VALIDATE_NOTIFICATION. Can you change it to wait
indefinitely/retry forever, with some diag output so we can figure out what
it's doing if it ever ends up breaking.

Thanks!
J√©r√©mie
‚Ä¶
 ------------------------------

 In tests/regression/tools/notification/test_notification_multi_app
 <#92 (comment)>:

 > +function start_client {
 +	local pid=-1
 +	local output_file=$1
 +	local session_name=$2
 +	local channel_name=$3
 +	local domain_type=$4
 +	local buffer_usage_type=$5
 +	local buffer_usage_threshold_type=$6
 +	local buffer_usage_threshold_value=$7
 +	local nr_expected_notification=$8
 +
 +	${CURDIR}/base_client ${session_name} ${channel_name} ${domain_type} ${buffer_usage_type} ${buffer_usage_threshold_type} ${buffer_usage_threshold_value} ${nr_expected_notification} > ${output_file} &
 +	pid=$!
 +
 +	# Set to cpu zero to force specific sub-buffer-usage
 +	taskset -p -c 0 $pid >/dev/null 2>&1

 Good catch this should not be there. Only the event producer needs to be
 pinned.
 ------------------------------

 In tests/regression/tools/notification/notification.c
 <#92 (comment)>:

 > +		/* Create trigger */
 +		trigger = lttng_trigger_create(condition, action);
 +		if (!trigger) {
 +			loop_ret = 1;
 +			goto loop_end;
 +		}
 +
 +		loop_ret = lttng_register_trigger(trigger);
 +
 +loop_end:
 +		if (loop_ret == 1) {
 +			fail(""Setup error occurred for tuple: %s"", test_tuple_string);
 +			goto loop_cleanup;
 +		}
 +
 +		/* This combination happen 3 times */

 happens
 ------------------------------

 In tests/regression/tools/notification/base_client.c
 <#92 (comment)>:

 > +	lttng_notification_channel_unsubscribe(notification_channel, condition);
 +	lttng_trigger_destroy(trigger);
 +	lttng_condition_destroy(condition);
 +	lttng_action_destroy(action);
 +	lttng_notification_channel_destroy(notification_channel);
 +	printf(""exit: %d"", ret);
 +	return ret;
 +}
 +
 +int handle_condition(
 +		const struct lttng_condition *condition,
 +		const struct lttng_evaluation *evaluation)
 +{
 +	int ret = 0;
 +
 +	/* Printing var */

 This can be removed. It state that the following vars are used for
 printing/synchronization.

 ‚Äî
 You are receiving this because you were assigned.
 Reply to this email directly, view it on GitHub
 <#92 (review)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/ABVJ8I47TDk8KvY7Md7j2ZimdzMqntEBks5r9alWgaJpZM4NmKnW>
 .",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,92,2017-05-25T09:33:16Z,2017-06-01T18:38:16Z,2017-06-01T18:38:16Z,CLOSED,False,1711,31,16,https://github.com/jgalar,Tests for the new notification API,6,[],https://github.com/lttng/lttng-tools/pull/92,https://github.com/jgalar,4,https://github.com/lttng/lttng-tools/pull/92#issuecomment-305582229,,"Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,93,2017-06-05T20:49:02Z,2018-06-11T19:42:02Z,2018-06-11T19:42:03Z,CLOSED,False,516,2,18,https://github.com/frdeso,Add kernel and userspace callstack contexts feature and tests,7,['enhancement'],https://github.com/lttng/lttng-tools/pull/93,https://github.com/frdeso,1,https://github.com/lttng/lttng-tools/pull/93,,,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,93,2017-06-05T20:49:02Z,2018-06-11T19:42:02Z,2018-06-11T19:42:03Z,CLOSED,False,516,2,18,https://github.com/frdeso,Add kernel and userspace callstack contexts feature and tests,7,['enhancement'],https://github.com/lttng/lttng-tools/pull/93,https://github.com/frdeso,2,https://github.com/lttng/lttng-tools/pull/93#issuecomment-307230652,,I updated the PR addressing the comments.,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,93,2017-06-05T20:49:02Z,2018-06-11T19:42:02Z,2018-06-11T19:42:03Z,CLOSED,False,516,2,18,https://github.com/frdeso,Add kernel and userspace callstack contexts feature and tests,7,['enhancement'],https://github.com/lttng/lttng-tools/pull/93,https://github.com/frdeso,3,https://github.com/lttng/lttng-tools/pull/93#issuecomment-307230901,,"Actually, let me add a quick fix",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,93,2017-06-05T20:49:02Z,2018-06-11T19:42:02Z,2018-06-11T19:42:03Z,CLOSED,False,516,2,18,https://github.com/frdeso,Add kernel and userspace callstack contexts feature and tests,7,['enhancement'],https://github.com/lttng/lttng-tools/pull/93,https://github.com/frdeso,4,https://github.com/lttng/lttng-tools/pull/93#issuecomment-307233152,,"Okay, done.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,93,2017-06-05T20:49:02Z,2018-06-11T19:42:02Z,2018-06-11T19:42:03Z,CLOSED,False,516,2,18,https://github.com/frdeso,Add kernel and userspace callstack contexts feature and tests,7,['enhancement'],https://github.com/lttng/lttng-tools/pull/93,https://github.com/frdeso,5,https://github.com/lttng/lttng-tools/pull/93#issuecomment-307241236,,Fixed,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,93,2017-06-05T20:49:02Z,2018-06-11T19:42:02Z,2018-06-11T19:42:03Z,CLOSED,False,516,2,18,https://github.com/frdeso,Add kernel and userspace callstack contexts feature and tests,7,['enhancement'],https://github.com/lttng/lttng-tools/pull/93,https://github.com/frdeso,6,https://github.com/lttng/lttng-tools/pull/93#issuecomment-347590479,,"I rebased and updated this PR. It reuses commit 44dd3b5 from PR #90. So depending which of the two branches is merged first, the other will need to be rebased.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,93,2017-06-05T20:49:02Z,2018-06-11T19:42:02Z,2018-06-11T19:42:03Z,CLOSED,False,516,2,18,https://github.com/frdeso,Add kernel and userspace callstack contexts feature and tests,7,['enhancement'],https://github.com/lttng/lttng-tools/pull/93,https://github.com/jgalar,7,https://github.com/lttng/lttng-tools/pull/93#issuecomment-392561102,,"Leaving a note for work to do before merging this:

MI representation of this context
Save/load representation of this context
There may be some documentation updates needed",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,93,2017-06-05T20:49:02Z,2018-06-11T19:42:02Z,2018-06-11T19:42:03Z,CLOSED,False,516,2,18,https://github.com/frdeso,Add kernel and userspace callstack contexts feature and tests,7,['enhancement'],https://github.com/lttng/lttng-tools/pull/93,https://github.com/frdeso,8,https://github.com/lttng/lttng-tools/pull/93#issuecomment-394776830,,"Added MI support for the following commands:
lttng --mi=xml add-context -k -t callstack-kernel
lttng --mi=xml add-context -k -t callstack-user
lttng --mi=xml add-context --list

and the save and load commands.
As for the doc, there doesn't seem to be documentation for the contexts themselves.",True,{'THUMBS_UP': ['https://github.com/jgalar']}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,93,2017-06-05T20:49:02Z,2018-06-11T19:42:02Z,2018-06-11T19:42:03Z,CLOSED,False,516,2,18,https://github.com/frdeso,Add kernel and userspace callstack contexts feature and tests,7,['enhancement'],https://github.com/lttng/lttng-tools/pull/93,https://github.com/jgalar,9,https://github.com/lttng/lttng-tools/pull/93#issuecomment-396362362,,"Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,94,2017-06-12T18:42:40Z,2017-07-31T16:14:21Z,2017-07-31T16:14:22Z,CLOSED,False,240,238,1,https://github.com/frdeso,Tests: rework select_poll_epoll test to improve verbosity on failure,1,[],https://github.com/lttng/lttng-tools/pull/94,https://github.com/frdeso,1,https://github.com/lttng/lttng-tools/pull/94,"Prints the tested values that caused a test failure to ease the
troubleshooting of unreliable tests.
Also, clean-up unused variables in multiple testcases.
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com","Prints the tested values that caused a test failure to ease the
troubleshooting of unreliable tests.
Also, clean-up unused variables in multiple testcases.
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,94,2017-06-12T18:42:40Z,2017-07-31T16:14:21Z,2017-07-31T16:14:22Z,CLOSED,False,240,238,1,https://github.com/frdeso,Tests: rework select_poll_epoll test to improve verbosity on failure,1,[],https://github.com/lttng/lttng-tools/pull/94,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/94#issuecomment-319118677,"Prints the tested values that caused a test failure to ease the
troubleshooting of unreliable tests.
Also, clean-up unused variables in multiple testcases.
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com","Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,95,2017-07-25T02:57:58Z,2017-08-01T19:50:59Z,2017-08-01T19:50:59Z,CLOSED,False,121,96,9,https://github.com/eepp,Man pages fixes,5,['docs'],https://github.com/lttng/lttng-tools/pull/95,https://github.com/eepp,1,https://github.com/lttng/lttng-tools/pull/95,,,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,95,2017-07-25T02:57:58Z,2017-08-01T19:50:59Z,2017-08-01T19:50:59Z,CLOSED,False,121,96,9,https://github.com/eepp,Man pages fixes,5,['docs'],https://github.com/lttng/lttng-tools/pull/95,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/95#issuecomment-319118416,,"Merged, thanks.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,95,2017-07-25T02:57:58Z,2017-08-01T19:50:59Z,2017-08-01T19:50:59Z,CLOSED,False,121,96,9,https://github.com/eepp,Man pages fixes,5,['docs'],https://github.com/lttng/lttng-tools/pull/95,https://github.com/eepp,3,https://github.com/lttng/lttng-tools/pull/95#issuecomment-319473381,,"I believe 7c50f41, cd03ac0, and a994896 are not merged.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,95,2017-07-25T02:57:58Z,2017-08-01T19:50:59Z,2017-08-01T19:50:59Z,CLOSED,False,121,96,9,https://github.com/eepp,Man pages fixes,5,['docs'],https://github.com/lttng/lttng-tools/pull/95,https://github.com/eepp,4,https://github.com/lttng/lttng-tools/pull/95#issuecomment-319477384,,"I created another PR, #99 without conflicts. Closing this one.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,96,2017-07-26T17:57:18Z,2017-07-31T16:13:56Z,2017-07-31T16:13:56Z,CLOSED,False,28,52,20,https://github.com/PSRCode,Minor fixes reported from scan-build,22,[],https://github.com/lttng/lttng-tools/pull/96,https://github.com/PSRCode,1,https://github.com/lttng/lttng-tools/pull/96,Most of them are error reporting dead assignment. Most are artifact of refactoring.,Most of them are error reporting dead assignment. Most are artifact of refactoring.,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,96,2017-07-26T17:57:18Z,2017-07-31T16:13:56Z,2017-07-31T16:13:56Z,CLOSED,False,28,52,20,https://github.com/PSRCode,Minor fixes reported from scan-build,22,[],https://github.com/lttng/lttng-tools/pull/96,https://github.com/PSRCode,2,https://github.com/lttng/lttng-tools/pull/96#issuecomment-318134011,Most of them are error reporting dead assignment. Most are artifact of refactoring.,Feel free to squash stuff if you want.,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,96,2017-07-26T17:57:18Z,2017-07-31T16:13:56Z,2017-07-31T16:13:56Z,CLOSED,False,28,52,20,https://github.com/PSRCode,Minor fixes reported from scan-build,22,[],https://github.com/lttng/lttng-tools/pull/96,https://github.com/jgalar,3,https://github.com/lttng/lttng-tools/pull/96#issuecomment-319118545,Most of them are error reporting dead assignment. Most are artifact of refactoring.,Merged with reworded commit messages.,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,97,2017-07-27T10:55:32Z,2017-07-27T10:56:39Z,2017-07-27T10:56:43Z,CLOSED,False,2569,500,111,None,Moved to lttng-tools 2.9.5 built using skipper,91,[],https://github.com/lttng/lttng-tools/pull/97,None,1,https://github.com/lttng/lttng-tools/pull/97,,,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,98,2017-07-31T18:11:24Z,2017-07-31T19:04:09Z,2017-07-31T19:04:09Z,CLOSED,False,62,20,2,https://github.com/eepp,lttng-enable-channel(1): document --monitor-timer,2,[],https://github.com/lttng/lttng-tools/pull/98,https://github.com/eepp,1,https://github.com/lttng/lttng-tools/pull/98,,,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,98,2017-07-31T18:11:24Z,2017-07-31T19:04:09Z,2017-07-31T19:04:09Z,CLOSED,False,62,20,2,https://github.com/eepp,lttng-enable-channel(1): document --monitor-timer,2,[],https://github.com/lttng/lttng-tools/pull/98,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/98#issuecomment-319165191,,Merged in master and stable-2.10. Thanks!,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,99,2017-08-01T19:50:18Z,2017-08-14T21:48:27Z,2017-08-14T21:48:27Z,CLOSED,False,78,54,3,https://github.com/eepp,Fix some stuff about --blocking-timeout,3,[],https://github.com/lttng/lttng-tools/pull/99,https://github.com/eepp,1,https://github.com/lttng/lttng-tools/pull/99,,,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,99,2017-08-01T19:50:18Z,2017-08-14T21:48:27Z,2017-08-14T21:48:27Z,CLOSED,False,78,54,3,https://github.com/eepp,Fix some stuff about --blocking-timeout,3,[],https://github.com/lttng/lttng-tools/pull/99,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/99#issuecomment-322319205,,"Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,100,2017-08-02T22:05:57Z,2017-11-12T20:04:12Z,2017-11-12T20:04:12Z,CLOSED,False,527,99,8,https://github.com/PSRCode,Kernel tests for notification,1,[],https://github.com/lttng/lttng-tools/pull/100,https://github.com/PSRCode,1,https://github.com/lttng/lttng-tools/pull/100,,,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,100,2017-08-02T22:05:57Z,2017-11-12T20:04:12Z,2017-11-12T20:04:12Z,CLOSED,False,527,99,8,https://github.com/PSRCode,Kernel tests for notification,1,[],https://github.com/lttng/lttng-tools/pull/100,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/100#issuecomment-343763161,,"Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,101,2017-09-08T02:53:44Z,2017-11-12T18:04:36Z,2017-11-12T18:04:36Z,CLOSED,False,11,10,1,https://github.com/eepp,lttng-enable-event(1): filtering: specify that `$ctx.cpu_id` is available,1,[],https://github.com/lttng/lttng-tools/pull/101,https://github.com/eepp,1,https://github.com/lttng/lttng-tools/pull/101,"Should be backported to {2.8, 2.9, 2.10}.","Should be backported to {2.8, 2.9, 2.10}.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,101,2017-09-08T02:53:44Z,2017-11-12T18:04:36Z,2017-11-12T18:04:36Z,CLOSED,False,11,10,1,https://github.com/eepp,lttng-enable-event(1): filtering: specify that `$ctx.cpu_id` is available,1,[],https://github.com/lttng/lttng-tools/pull/101,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/101#issuecomment-343755284,"Should be backported to {2.8, 2.9, 2.10}.","Merged, thanks.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,102,2017-10-27T11:47:19Z,2017-11-12T18:39:52Z,2017-11-12T21:47:40Z,CLOSED,False,1,1,1,https://github.com/blino,Fix: Make version.h generation work with dash,1,[],https://github.com/lttng/lttng-tools/pull/102,https://github.com/blino,1,https://github.com/lttng/lttng-tools/pull/102,"version.h generation failed when using dash as shell:
Generating version.h... /bin/sh: 24: Syntax error: Missing '))'
dash does not handle the following construct:
git_describe=""$((cd /path/to/lttng-tools/.; git describe) 2>/dev/null)""
Use backquotes instead.
The fix has been tested with dash and bash.","version.h generation failed when using dash as shell:
Generating version.h... /bin/sh: 24: Syntax error: Missing '))'
dash does not handle the following construct:
git_describe=""$((cd /path/to/lttng-tools/.; git describe) 2>/dev/null)""
Use backquotes instead.
The fix has been tested with dash and bash.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,102,2017-10-27T11:47:19Z,2017-11-12T18:39:52Z,2017-11-12T21:47:40Z,CLOSED,False,1,1,1,https://github.com/blino,Fix: Make version.h generation work with dash,1,[],https://github.com/lttng/lttng-tools/pull/102,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/102#issuecomment-343757594,"version.h generation failed when using dash as shell:
Generating version.h... /bin/sh: 24: Syntax error: Missing '))'
dash does not handle the following construct:
git_describe=""$((cd /path/to/lttng-tools/.; git describe) 2>/dev/null)""
Use backquotes instead.
The fix has been tested with dash and bash.","Merged, thanks!
Note that I added your Signed-off-by: line in the commit message.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,102,2017-10-27T11:47:19Z,2017-11-12T18:39:52Z,2017-11-12T21:47:40Z,CLOSED,False,1,1,1,https://github.com/blino,Fix: Make version.h generation work with dash,1,[],https://github.com/lttng/lttng-tools/pull/102,https://github.com/blino,3,https://github.com/lttng/lttng-tools/pull/102#issuecomment-343770724,"version.h generation failed when using dash as shell:
Generating version.h... /bin/sh: 24: Syntax error: Missing '))'
dash does not handle the following construct:
git_describe=""$((cd /path/to/lttng-tools/.; git describe) 2>/dev/null)""
Use backquotes instead.
The fix has been tested with dash and bash.",Thanks for the merge and Signed-off-by:!,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,103,2017-11-08T21:08:38Z,2017-11-15T23:35:16Z,2017-11-15T23:35:16Z,CLOSED,False,56,4,8,https://github.com/eepp,Detect dlmopen() at configuration time and other fixes,3,[],https://github.com/lttng/lttng-tools/pull/103,https://github.com/eepp,1,https://github.com/lttng/lttng-tools/pull/103,This is to fix a Buildroot build with musl/uClibc-ng.,This is to fix a Buildroot build with musl/uClibc-ng.,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,103,2017-11-08T21:08:38Z,2017-11-15T23:35:16Z,2017-11-15T23:35:16Z,CLOSED,False,56,4,8,https://github.com/eepp,Detect dlmopen() at configuration time and other fixes,3,[],https://github.com/lttng/lttng-tools/pull/103,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/103#issuecomment-344765183,This is to fix a Buildroot build with musl/uClibc-ng.,"Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,104,2017-11-12T20:37:49Z,2017-11-12T20:38:56Z,2017-11-12T20:38:56Z,CLOSED,False,1,0,1,https://github.com/PSRCode,Fix: include scripts for distribution,1,[],https://github.com/lttng/lttng-tools/pull/104,https://github.com/PSRCode,1,https://github.com/lttng/lttng-tools/pull/104,Signed-off-by: Jonathan Rajotte jonathan.rajotte-julien@efficios.com,Signed-off-by: Jonathan Rajotte jonathan.rajotte-julien@efficios.com,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,104,2017-11-12T20:37:49Z,2017-11-12T20:38:56Z,2017-11-12T20:38:56Z,CLOSED,False,1,0,1,https://github.com/PSRCode,Fix: include scripts for distribution,1,[],https://github.com/lttng/lttng-tools/pull/104,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/104#issuecomment-343765785,Signed-off-by: Jonathan Rajotte jonathan.rajotte-julien@efficios.com,"Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,105,2017-11-13T00:17:24Z,2017-11-13T15:05:53Z,2017-11-13T15:05:53Z,CLOSED,False,52,54,3,https://github.com/PSRCode,Fix: Use tmpdir for intermediary files,1,[],https://github.com/lttng/lttng-tools/pull/105,https://github.com/PSRCode,1,https://github.com/lttng/lttng-tools/pull/105,"Launching root and non-root testing would result in conflict.
Remove unused TRACE_PATH assignation.
Clear the pipe list variable before each pipe collecting.
Signed-off-by: Jonathan Rajotte jonathan.rajotte-julien@efficios.com","Launching root and non-root testing would result in conflict.
Remove unused TRACE_PATH assignation.
Clear the pipe list variable before each pipe collecting.
Signed-off-by: Jonathan Rajotte jonathan.rajotte-julien@efficios.com",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,105,2017-11-13T00:17:24Z,2017-11-13T15:05:53Z,2017-11-13T15:05:53Z,CLOSED,False,52,54,3,https://github.com/PSRCode,Fix: Use tmpdir for intermediary files,1,[],https://github.com/lttng/lttng-tools/pull/105,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/105#issuecomment-343946825,"Launching root and non-root testing would result in conflict.
Remove unused TRACE_PATH assignation.
Clear the pipe list variable before each pipe collecting.
Signed-off-by: Jonathan Rajotte jonathan.rajotte-julien@efficios.com","Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,106,2017-11-26T12:37:39Z,2018-06-06T20:52:51Z,2018-06-06T20:52:51Z,CLOSED,False,1095,408,19,https://github.com/jgalar,Add support for arrays and bitwise binary operators in filter expressions,9,['enhancement'],https://github.com/lttng/lttng-tools/pull/106,https://github.com/jgalar,1,https://github.com/lttng/lttng-tools/pull/106,"Branch submitted for inclusion by @compudj. Comments/fixups will be added to this pull request.
Depends on the following branches of LTTng-UST and LTTng-modules:
https://github.com/compudj/lttng-ust-dev/tree/filter-array
https://github.com/compudj/lttng-modules-dev/tree/filter-array
The man page patch is omitted since it does not apply on master. @eepp can you rebase it?","Branch submitted for inclusion by @compudj. Comments/fixups will be added to this pull request.
Depends on the following branches of LTTng-UST and LTTng-modules:
https://github.com/compudj/lttng-ust-dev/tree/filter-array
https://github.com/compudj/lttng-modules-dev/tree/filter-array
The man page patch is omitted since it does not apply on master. @eepp can you rebase it?",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,106,2017-11-26T12:37:39Z,2018-06-06T20:52:51Z,2018-06-06T20:52:51Z,CLOSED,False,1095,408,19,https://github.com/jgalar,Add support for arrays and bitwise binary operators in filter expressions,9,['enhancement'],https://github.com/lttng/lttng-tools/pull/106,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/106#issuecomment-349682580,"Branch submitted for inclusion by @compudj. Comments/fixups will be added to this pull request.
Depends on the following branches of LTTng-UST and LTTng-modules:
https://github.com/compudj/lttng-ust-dev/tree/filter-array
https://github.com/compudj/lttng-modules-dev/tree/filter-array
The man page patch is omitted since it does not apply on master. @eepp can you rebase it?","@eepp This is the original documentation patch:
compudj@faa29f7",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,106,2017-11-26T12:37:39Z,2018-06-06T20:52:51Z,2018-06-06T20:52:51Z,CLOSED,False,1095,408,19,https://github.com/jgalar,Add support for arrays and bitwise binary operators in filter expressions,9,['enhancement'],https://github.com/lttng/lttng-tools/pull/106,https://github.com/eepp,3,https://github.com/lttng/lttng-tools/pull/106#issuecomment-349706850,"Branch submitted for inclusion by @compudj. Comments/fixups will be added to this pull request.
Depends on the following branches of LTTng-UST and LTTng-modules:
https://github.com/compudj/lttng-ust-dev/tree/filter-array
https://github.com/compudj/lttng-modules-dev/tree/filter-array
The man page patch is omitted since it does not apply on master. @eepp can you rebase it?","@eepp This is the original documentation patch:
compudj/lttng-tools-dev@faa29f7

Use eepp@0740d0a",True,{'THUMBS_UP': ['https://github.com/jgalar']}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,106,2017-11-26T12:37:39Z,2018-06-06T20:52:51Z,2018-06-06T20:52:51Z,CLOSED,False,1095,408,19,https://github.com/jgalar,Add support for arrays and bitwise binary operators in filter expressions,9,['enhancement'],https://github.com/lttng/lttng-tools/pull/106,https://github.com/jgalar,4,https://github.com/lttng/lttng-tools/pull/106#issuecomment-395209929,"Branch submitted for inclusion by @compudj. Comments/fixups will be added to this pull request.
Depends on the following branches of LTTng-UST and LTTng-modules:
https://github.com/compudj/lttng-ust-dev/tree/filter-array
https://github.com/compudj/lttng-modules-dev/tree/filter-array
The man page patch is omitted since it does not apply on master. @eepp can you rebase it?",Merged!,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,107,2017-12-13T18:19:12Z,2018-02-15T21:18:26Z,2018-02-15T21:18:26Z,CLOSED,False,0,2,1,https://github.com/frdeso,Fix: remove unused event types in MI XML schema,1,[],https://github.com/lttng/lttng-tools/pull/107,https://github.com/frdeso,1,https://github.com/lttng/lttng-tools/pull/107,"KPROBE and KRETPROBE event types are never produced by the MI output,
PROBE and FUNCTION are rightfully used. Using KPROBE and KRETPROBE would
be exposing the inner workings of the kernel tracer that should be
abstracted to the user.
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com","KPROBE and KRETPROBE event types are never produced by the MI output,
PROBE and FUNCTION are rightfully used. Using KPROBE and KRETPROBE would
be exposing the inner workings of the kernel tracer that should be
abstracted to the user.
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,107,2017-12-13T18:19:12Z,2018-02-15T21:18:26Z,2018-02-15T21:18:26Z,CLOSED,False,0,2,1,https://github.com/frdeso,Fix: remove unused event types in MI XML schema,1,[],https://github.com/lttng/lttng-tools/pull/107,https://github.com/PSRCode,2,https://github.com/lttng/lttng-tools/pull/107#issuecomment-351543433,"KPROBE and KRETPROBE event types are never produced by the MI output,
PROBE and FUNCTION are rightfully used. Using KPROBE and KRETPROBE would
be exposing the inner workings of the kernel tracer that should be
abstracted to the user.
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com",@jagalr this does not require any major bump since it cannot be produced by the mi. This is a copy paste error from the start (from save/load mi). Not sure what to do on the minor version side .... and if we change it what do we do with the filename ?,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,107,2017-12-13T18:19:12Z,2018-02-15T21:18:26Z,2018-02-15T21:18:26Z,CLOSED,False,0,2,1,https://github.com/frdeso,Fix: remove unused event types in MI XML schema,1,[],https://github.com/lttng/lttng-tools/pull/107,https://github.com/jgalar,3,https://github.com/lttng/lttng-tools/pull/107#issuecomment-366064734,"KPROBE and KRETPROBE event types are never produced by the MI output,
PROBE and FUNCTION are rightfully used. Using KPROBE and KRETPROBE would
be exposing the inner workings of the kernel tracer that should be
abstracted to the user.
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com","Merged in master, stable-2.10, and stable-2.9.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,108,2018-01-16T20:05:25Z,2018-02-12T19:45:04Z,2018-02-12T19:46:05Z,CLOSED,False,10983,405,122,https://github.com/jdesfossez,Session rotation,53,[],https://github.com/lttng/lttng-tools/pull/108,https://github.com/jdesfossez,1,https://github.com/lttng/lttng-tools/pull/108,"This branch implements the session rotation feature. For UST, no patches
are required, for kernel tracing it depends on this patch:
jdesfossez/lttng-modules-dev@43336e7
The ""lttng rotate"" command can be called at any time while the session
is running. This flushes the current content of the ring-buffers memory
to disk or network, and create new tracefiles in a separate folder to
continue writing the active trace, a new metadata file is produced in
the new folder as well, so each invocation of the command effectively
creates new standalone traces. When the rotate command returns, it
outputs the path of the previous chunk of trace (the one that was active
up to the moment the rotation started), the user has then complete
access to this trace directory and can safely process and/or delete it.
The MI interface (lttng --mi xml rotate) also contains the path for
automated processing.
It is also possible to configure a session to rotate automatically based
on a timer or its total size (see the lttng enable-rotation command).
Rotations are supported locally and on the relay, the behavior is the
same. The only difference is the path output. Locally we output the
absolute path of the chunk, on the relay we output the relative path
under the relayd output directory.
The tests for this feature are in tests/regression/tools/rotation, the
complete documentation is currently being written.
On top of this branch is going to be added soon the feature the receive
notifications when a rotation starts and when it completes.","This branch implements the session rotation feature. For UST, no patches
are required, for kernel tracing it depends on this patch:
jdesfossez/lttng-modules-dev@43336e7
The ""lttng rotate"" command can be called at any time while the session
is running. This flushes the current content of the ring-buffers memory
to disk or network, and create new tracefiles in a separate folder to
continue writing the active trace, a new metadata file is produced in
the new folder as well, so each invocation of the command effectively
creates new standalone traces. When the rotate command returns, it
outputs the path of the previous chunk of trace (the one that was active
up to the moment the rotation started), the user has then complete
access to this trace directory and can safely process and/or delete it.
The MI interface (lttng --mi xml rotate) also contains the path for
automated processing.
It is also possible to configure a session to rotate automatically based
on a timer or its total size (see the lttng enable-rotation command).
Rotations are supported locally and on the relay, the behavior is the
same. The only difference is the path output. Locally we output the
absolute path of the chunk, on the relay we output the relative path
under the relayd output directory.
The tests for this feature are in tests/regression/tools/rotation, the
complete documentation is currently being written.
On top of this branch is going to be added soon the feature the receive
notifications when a rotation starts and when it completes.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,108,2018-01-16T20:05:25Z,2018-02-12T19:45:04Z,2018-02-12T19:46:05Z,CLOSED,False,10983,405,122,https://github.com/jdesfossez,Session rotation,53,[],https://github.com/lttng/lttng-tools/pull/108,https://github.com/jdesfossez,2,https://github.com/lttng/lttng-tools/pull/108#issuecomment-365039780,"This branch implements the session rotation feature. For UST, no patches
are required, for kernel tracing it depends on this patch:
jdesfossez/lttng-modules-dev@43336e7
The ""lttng rotate"" command can be called at any time while the session
is running. This flushes the current content of the ring-buffers memory
to disk or network, and create new tracefiles in a separate folder to
continue writing the active trace, a new metadata file is produced in
the new folder as well, so each invocation of the command effectively
creates new standalone traces. When the rotate command returns, it
outputs the path of the previous chunk of trace (the one that was active
up to the moment the rotation started), the user has then complete
access to this trace directory and can safely process and/or delete it.
The MI interface (lttng --mi xml rotate) also contains the path for
automated processing.
It is also possible to configure a session to rotate automatically based
on a timer or its total size (see the lttng enable-rotation command).
Rotations are supported locally and on the relay, the behavior is the
same. The only difference is the path output. Locally we output the
absolute path of the chunk, on the relay we output the relative path
under the relayd output directory.
The tests for this feature are in tests/regression/tools/rotation, the
complete documentation is currently being written.
On top of this branch is going to be added soon the feature the receive
notifications when a rotation starts and when it completes.","All comments have been addressed, thanks to everyone who reviewed this PR!
I will reopen a new one with a clean history, stay tuned !",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,109,2018-01-17T22:05:56Z,2018-02-15T21:14:43Z,2018-02-15T21:14:43Z,CLOSED,False,64,13,1,https://github.com/frdeso,Updating lttng-ust-ctl header file,1,[],https://github.com/lttng/lttng-tools/pull/109,https://github.com/frdeso,1,https://github.com/lttng/lttng-tools/pull/109,"This file is a near-complete duplicate of the include/lttng/ust-ctl.h
file in lttng-ust repo.
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com","This file is a near-complete duplicate of the include/lttng/ust-ctl.h
file in lttng-ust repo.
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,109,2018-01-17T22:05:56Z,2018-02-15T21:14:43Z,2018-02-15T21:14:43Z,CLOSED,False,64,13,1,https://github.com/frdeso,Updating lttng-ust-ctl header file,1,[],https://github.com/lttng/lttng-tools/pull/109,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/109#issuecomment-366063750,"This file is a near-complete duplicate of the include/lttng/ust-ctl.h
file in lttng-ust repo.
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com","Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,110,2018-02-05T21:56:59Z,2018-05-31T08:45:34Z,2018-05-31T08:45:34Z,CLOSED,False,1343,15,17,https://github.com/frdeso,Support probes with the same name but different event payload,5,[],https://github.com/lttng/lttng-tools/pull/110,https://github.com/frdeso,1,https://github.com/lttng/lttng-tools/pull/110,"This patch set allows for multiple probes with the same name to be hooked on the same callsite. We now compare probes by doing a deep compare of each field. If two events are exactly the same then the same event ID will be used, if they are different a new event ID is created.
When used with this UST patch set, it is possible to dlclose probe provider and callsite libraries during tracing.
This PR also includes regression tests for both the deep comparaison and the newly added dlclose capability.","This patch set allows for multiple probes with the same name to be hooked on the same callsite. We now compare probes by doing a deep compare of each field. If two events are exactly the same then the same event ID will be used, if they are different a new event ID is created.
When used with this UST patch set, it is possible to dlclose probe provider and callsite libraries during tracing.
This PR also includes regression tests for both the deep comparaison and the newly added dlclose capability.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,110,2018-02-05T21:56:59Z,2018-05-31T08:45:34Z,2018-05-31T08:45:34Z,CLOSED,False,1343,15,17,https://github.com/frdeso,Support probes with the same name but different event payload,5,[],https://github.com/lttng/lttng-tools/pull/110,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/110#issuecomment-393460144,"This patch set allows for multiple probes with the same name to be hooked on the same callsite. We now compare probes by doing a deep compare of each field. If two events are exactly the same then the same event ID will be used, if they are different a new event ID is created.
When used with this UST patch set, it is possible to dlclose probe provider and callsite libraries during tracing.
This PR also includes regression tests for both the deep comparaison and the newly added dlclose capability.","Merged in master, stable-2.10, and stable-2.9.
I couldn't backport the tests since only the ""comparison"" part applies to those stable branches.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,111,2018-02-06T17:10:25Z,2018-05-27T12:38:17Z,2018-05-27T12:38:17Z,CLOSED,False,1,1,1,https://github.com/frdeso,Fix: test_ust-dl is generated at configure-time,1,[],https://github.com/lttng/lttng-tools/pull/111,https://github.com/frdeso,1,https://github.com/lttng/lttng-tools/pull/111,"This file should not be in EXTRA_DIST as it's generated by autoconf and
will thus be available directly in the out-of-tree build directory.
Previously, I was witnessing this error message when building out-of-tree:
cp: cannot stat '/home/frdeso/projets/lttng/tools/tests/regression/ust/ust-dl/test_ust-dl': No such file or directory

Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com","This file should not be in EXTRA_DIST as it's generated by autoconf and
will thus be available directly in the out-of-tree build directory.
Previously, I was witnessing this error message when building out-of-tree:
cp: cannot stat '/home/frdeso/projets/lttng/tools/tests/regression/ust/ust-dl/test_ust-dl': No such file or directory

Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,111,2018-02-06T17:10:25Z,2018-05-27T12:38:17Z,2018-05-27T12:38:17Z,CLOSED,False,1,1,1,https://github.com/frdeso,Fix: test_ust-dl is generated at configure-time,1,[],https://github.com/lttng/lttng-tools/pull/111,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/111#issuecomment-392328105,"This file should not be in EXTRA_DIST as it's generated by autoconf and
will thus be available directly in the out-of-tree build directory.
Previously, I was witnessing this error message when building out-of-tree:
cp: cannot stat '/home/frdeso/projets/lttng/tools/tests/regression/ust/ust-dl/test_ust-dl': No such file or directory

Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com","Merged in master, stable-2.10, and stable-2.9.
Thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,112,2018-02-12T20:01:22Z,2018-04-03T20:03:19Z,2018-04-03T20:03:19Z,CLOSED,False,11375,405,134,https://github.com/jdesfossez,Rotate squash v2,65,[],https://github.com/lttng/lttng-tools/pull/112,https://github.com/jdesfossez,1,https://github.com/lttng/lttng-tools/pull/112,"v2 major updates:

Fixed error checking of snprintf, localtime, strftime,
Fixed version checking (forgot to check the major version most of the times in v1),
Errors and messages reworded,
Public API functions and enums renamed (""rotate"" only for actions, ""rotation"" for everything else),
Split the ""attr"" struct from the public API into 2 structures, one for manual rotations and the other one for automatic rotations since they only had one common field,
Used the ""schedule"" word in the public API to reference the automatic rotations,
Used the ""handle"" word in the public API for all function that take a handle as a argument,
Various local fixes (and one missing pthread_mutex_unlock !).

Original changelog (still relevant):
This branch implements the session rotation feature. For UST, no patches
are required, for kernel tracing it depends on this patch:
jdesfossez/lttng-modules-dev@b1a7355
The ""lttng rotate"" command can be called at any time while the session
is running. This flushes the current content of the ring-buffers memory
to disk or network, and create new tracefiles in a separate folder to
continue writing the active trace, a new metadata file is produced in
the new folder as well, so each invocation of the command effectively
creates new standalone traces. When the rotate command returns, it
outputs the path of the previous chunk of trace (the one that was active
up to the moment the rotation started), the user has then complete
access to this trace directory and can safely process and/or delete it.
The MI interface (lttng --mi xml rotate) also contains the path for
automated processing.
It is also possible to configure a session to rotate automatically based
on a timer or its total size (see the lttng enable-rotation command).
Rotations are supported locally and on the relay, the behavior is the
same. The only difference is the path output. Locally we output the
absolute path of the chunk, on the relay we output the relative path
under the relayd output directory.
The tests for this feature are in tests/regression/tools/rotation, the
complete documentation is currently being written.
On top of this branch is going to be added soon the feature the receive
notifications when a rotation starts and when it completes.","v2 major updates:

Fixed error checking of snprintf, localtime, strftime,
Fixed version checking (forgot to check the major version most of the times in v1),
Errors and messages reworded,
Public API functions and enums renamed (""rotate"" only for actions, ""rotation"" for everything else),
Split the ""attr"" struct from the public API into 2 structures, one for manual rotations and the other one for automatic rotations since they only had one common field,
Used the ""schedule"" word in the public API to reference the automatic rotations,
Used the ""handle"" word in the public API for all function that take a handle as a argument,
Various local fixes (and one missing pthread_mutex_unlock !).

Original changelog (still relevant):
This branch implements the session rotation feature. For UST, no patches
are required, for kernel tracing it depends on this patch:
jdesfossez/lttng-modules-dev@b1a7355
The ""lttng rotate"" command can be called at any time while the session
is running. This flushes the current content of the ring-buffers memory
to disk or network, and create new tracefiles in a separate folder to
continue writing the active trace, a new metadata file is produced in
the new folder as well, so each invocation of the command effectively
creates new standalone traces. When the rotate command returns, it
outputs the path of the previous chunk of trace (the one that was active
up to the moment the rotation started), the user has then complete
access to this trace directory and can safely process and/or delete it.
The MI interface (lttng --mi xml rotate) also contains the path for
automated processing.
It is also possible to configure a session to rotate automatically based
on a timer or its total size (see the lttng enable-rotation command).
Rotations are supported locally and on the relay, the behavior is the
same. The only difference is the path output. Locally we output the
absolute path of the chunk, on the relay we output the relative path
under the relayd output directory.
The tests for this feature are in tests/regression/tools/rotation, the
complete documentation is currently being written.
On top of this branch is going to be added soon the feature the receive
notifications when a rotation starts and when it completes.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,112,2018-02-12T20:01:22Z,2018-04-03T20:03:19Z,2018-04-03T20:03:19Z,CLOSED,False,11375,405,134,https://github.com/jdesfossez,Rotate squash v2,65,[],https://github.com/lttng/lttng-tools/pull/112,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/112#issuecomment-367036340,"v2 major updates:

Fixed error checking of snprintf, localtime, strftime,
Fixed version checking (forgot to check the major version most of the times in v1),
Errors and messages reworded,
Public API functions and enums renamed (""rotate"" only for actions, ""rotation"" for everything else),
Split the ""attr"" struct from the public API into 2 structures, one for manual rotations and the other one for automatic rotations since they only had one common field,
Used the ""schedule"" word in the public API to reference the automatic rotations,
Used the ""handle"" word in the public API for all function that take a handle as a argument,
Various local fixes (and one missing pthread_mutex_unlock !).

Original changelog (still relevant):
This branch implements the session rotation feature. For UST, no patches
are required, for kernel tracing it depends on this patch:
jdesfossez/lttng-modules-dev@b1a7355
The ""lttng rotate"" command can be called at any time while the session
is running. This flushes the current content of the ring-buffers memory
to disk or network, and create new tracefiles in a separate folder to
continue writing the active trace, a new metadata file is produced in
the new folder as well, so each invocation of the command effectively
creates new standalone traces. When the rotate command returns, it
outputs the path of the previous chunk of trace (the one that was active
up to the moment the rotation started), the user has then complete
access to this trace directory and can safely process and/or delete it.
The MI interface (lttng --mi xml rotate) also contains the path for
automated processing.
It is also possible to configure a session to rotate automatically based
on a timer or its total size (see the lttng enable-rotation command).
Rotations are supported locally and on the relay, the behavior is the
same. The only difference is the path output. Locally we output the
absolute path of the chunk, on the relay we output the relative path
under the relayd output directory.
The tests for this feature are in tests/regression/tools/rotation, the
complete documentation is currently being written.
On top of this branch is going to be added soon the feature the receive
notifications when a rotation starts and when it completes.",The test $ ./tests/regression/ust/linking/test_linking fails on this branch. It passes on master.,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,112,2018-02-12T20:01:22Z,2018-04-03T20:03:19Z,2018-04-03T20:03:19Z,CLOSED,False,11375,405,134,https://github.com/jdesfossez,Rotate squash v2,65,[],https://github.com/lttng/lttng-tools/pull/112,https://github.com/jdesfossez,3,https://github.com/lttng/lttng-tools/pull/112#issuecomment-367052900,"v2 major updates:

Fixed error checking of snprintf, localtime, strftime,
Fixed version checking (forgot to check the major version most of the times in v1),
Errors and messages reworded,
Public API functions and enums renamed (""rotate"" only for actions, ""rotation"" for everything else),
Split the ""attr"" struct from the public API into 2 structures, one for manual rotations and the other one for automatic rotations since they only had one common field,
Used the ""schedule"" word in the public API to reference the automatic rotations,
Used the ""handle"" word in the public API for all function that take a handle as a argument,
Various local fixes (and one missing pthread_mutex_unlock !).

Original changelog (still relevant):
This branch implements the session rotation feature. For UST, no patches
are required, for kernel tracing it depends on this patch:
jdesfossez/lttng-modules-dev@b1a7355
The ""lttng rotate"" command can be called at any time while the session
is running. This flushes the current content of the ring-buffers memory
to disk or network, and create new tracefiles in a separate folder to
continue writing the active trace, a new metadata file is produced in
the new folder as well, so each invocation of the command effectively
creates new standalone traces. When the rotate command returns, it
outputs the path of the previous chunk of trace (the one that was active
up to the moment the rotation started), the user has then complete
access to this trace directory and can safely process and/or delete it.
The MI interface (lttng --mi xml rotate) also contains the path for
automated processing.
It is also possible to configure a session to rotate automatically based
on a timer or its total size (see the lttng enable-rotation command).
Rotations are supported locally and on the relay, the behavior is the
same. The only difference is the path output. Locally we output the
absolute path of the chunk, on the relay we output the relative path
under the relayd output directory.
The tests for this feature are in tests/regression/tools/rotation, the
complete documentation is currently being written.
On top of this branch is going to be added soon the feature the receive
notifications when a rotation starts and when it completes.","The test fails because we now always create <session-name>/<domain-name> at lttng start, and the test expects the directory to not exist, I will update the test and merge the fix with the commit that introduced the new behaviour.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,112,2018-02-12T20:01:22Z,2018-04-03T20:03:19Z,2018-04-03T20:03:19Z,CLOSED,False,11375,405,134,https://github.com/jdesfossez,Rotate squash v2,65,[],https://github.com/lttng/lttng-tools/pull/112,https://github.com/jgalar,4,https://github.com/lttng/lttng-tools/pull/112#issuecomment-378377870,"v2 major updates:

Fixed error checking of snprintf, localtime, strftime,
Fixed version checking (forgot to check the major version most of the times in v1),
Errors and messages reworded,
Public API functions and enums renamed (""rotate"" only for actions, ""rotation"" for everything else),
Split the ""attr"" struct from the public API into 2 structures, one for manual rotations and the other one for automatic rotations since they only had one common field,
Used the ""schedule"" word in the public API to reference the automatic rotations,
Used the ""handle"" word in the public API for all function that take a handle as a argument,
Various local fixes (and one missing pthread_mutex_unlock !).

Original changelog (still relevant):
This branch implements the session rotation feature. For UST, no patches
are required, for kernel tracing it depends on this patch:
jdesfossez/lttng-modules-dev@b1a7355
The ""lttng rotate"" command can be called at any time while the session
is running. This flushes the current content of the ring-buffers memory
to disk or network, and create new tracefiles in a separate folder to
continue writing the active trace, a new metadata file is produced in
the new folder as well, so each invocation of the command effectively
creates new standalone traces. When the rotate command returns, it
outputs the path of the previous chunk of trace (the one that was active
up to the moment the rotation started), the user has then complete
access to this trace directory and can safely process and/or delete it.
The MI interface (lttng --mi xml rotate) also contains the path for
automated processing.
It is also possible to configure a session to rotate automatically based
on a timer or its total size (see the lttng enable-rotation command).
Rotations are supported locally and on the relay, the behavior is the
same. The only difference is the path output. Locally we output the
absolute path of the chunk, on the relay we output the relative path
under the relayd output directory.
The tests for this feature are in tests/regression/tools/rotation, the
complete documentation is currently being written.
On top of this branch is going to be added soon the feature the receive
notifications when a rotation starts and when it completes.",Merged with fixes.,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,113,2018-02-16T15:39:17Z,2018-05-31T08:50:25Z,2018-05-31T08:50:26Z,CLOSED,False,6586,510,63,https://github.com/frdeso,[RFC] userspace-probe on ELF symbols and SDT probes implementation ,68,[],https://github.com/lttng/lttng-tools/pull/113,https://github.com/frdeso,1,https://github.com/lttng/lttng-tools/pull/113,"These changes allow the use of the Linux kernel uprobe interface to support userspace probes.
We currently support placing userspace probes on ELF symbol functions and SDT probes compiled without semaphores.
To use those changes, corresponding changes on lttng-modules are necessary: https://github.com/frdeso/lttng-modules/tree/userspace-probe
It's important to note that userspace probes are made available by the kernel tracer and not the userspace tracer.
Missing pieces:

Document (lack of) support of C++ and Rust
Full load/save support
Man page","These changes allow the use of the Linux kernel uprobe interface to support userspace probes.
We currently support placing userspace probes on ELF symbol functions and SDT probes compiled without semaphores.
To use those changes, corresponding changes on lttng-modules are necessary: https://github.com/frdeso/lttng-modules/tree/userspace-probe
It's important to note that userspace probes are made available by the kernel tracer and not the userspace tracer.
Missing pieces:

Document (lack of) support of C++ and Rust
Full load/save support
Man page",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,113,2018-02-16T15:39:17Z,2018-05-31T08:50:25Z,2018-05-31T08:50:26Z,CLOSED,False,6586,510,63,https://github.com/frdeso,[RFC] userspace-probe on ELF symbols and SDT probes implementation ,68,[],https://github.com/lttng/lttng-tools/pull/113,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/113#issuecomment-393461369,"These changes allow the use of the Linux kernel uprobe interface to support userspace probes.
We currently support placing userspace probes on ELF symbol functions and SDT probes compiled without semaphores.
To use those changes, corresponding changes on lttng-modules are necessary: https://github.com/frdeso/lttng-modules/tree/userspace-probe
It's important to note that userspace probes are made available by the kernel tracer and not the userspace tracer.
Missing pieces:

Document (lack of) support of C++ and Rust
Full load/save support
Man page",Closing since a v2 is open as #123.,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,114,2018-02-16T19:57:00Z,2018-02-16T21:19:56Z,2018-02-16T21:19:56Z,CLOSED,False,0,4,1,https://github.com/frdeso,Fix: duplicated kernel consumer socket locking,1,[],https://github.com/lttng/lttng-tools/pull/114,https://github.com/frdeso,1,https://github.com/lttng/lttng-tools/pull/114,,,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,114,2018-02-16T19:57:00Z,2018-02-16T21:19:56Z,2018-02-16T21:19:56Z,CLOSED,False,0,4,1,https://github.com/frdeso,Fix: duplicated kernel consumer socket locking,1,[],https://github.com/lttng/lttng-tools/pull/114,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/114#issuecomment-366361414,,"Good catch, thanks!
Merged in master, stable-2.10, and stable-2.9.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,115,2018-02-27T20:58:38Z,2018-02-27T23:20:51Z,2018-02-27T23:20:52Z,CLOSED,False,33,35,2,https://github.com/frdeso,Tests: Fix: arm64 use sys_openat instead of sys_open,1,[],https://github.com/lttng/lttng-tools/pull/115,https://github.com/frdeso,1,https://github.com/lttng/lttng-tools/pull/115,"gen-syscall-events is failing to build on arm64 because of the following
error:
gen-syscall-events.c: In function ‚Äòmain‚Äô:
gen-syscall-events.c:35:15: error: ‚ÄòSYS_open‚Äô undeclared (first use in
this function)
  fd = syscall(SYS_open, ""/proc/cpuinfo"", O_RDONLY);

SYS_open is not available using the syscall(2) arm64 glibc function.
SYS_openat should be used instead.
Change test app and test cases to use SYS_openat.
Other projects have encountered the same issue:
https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=758521
https://bugs.launchpad.net/linaro-aarch64/+bug/1100782
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com","gen-syscall-events is failing to build on arm64 because of the following
error:
gen-syscall-events.c: In function ‚Äòmain‚Äô:
gen-syscall-events.c:35:15: error: ‚ÄòSYS_open‚Äô undeclared (first use in
this function)
  fd = syscall(SYS_open, ""/proc/cpuinfo"", O_RDONLY);

SYS_open is not available using the syscall(2) arm64 glibc function.
SYS_openat should be used instead.
Change test app and test cases to use SYS_openat.
Other projects have encountered the same issue:
https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=758521
https://bugs.launchpad.net/linaro-aarch64/+bug/1100782
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,115,2018-02-27T20:58:38Z,2018-02-27T23:20:51Z,2018-02-27T23:20:52Z,CLOSED,False,33,35,2,https://github.com/frdeso,Tests: Fix: arm64 use sys_openat instead of sys_open,1,[],https://github.com/lttng/lttng-tools/pull/115,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/115#issuecomment-369063056,"gen-syscall-events is failing to build on arm64 because of the following
error:
gen-syscall-events.c: In function ‚Äòmain‚Äô:
gen-syscall-events.c:35:15: error: ‚ÄòSYS_open‚Äô undeclared (first use in
this function)
  fd = syscall(SYS_open, ""/proc/cpuinfo"", O_RDONLY);

SYS_open is not available using the syscall(2) arm64 glibc function.
SYS_openat should be used instead.
Change test app and test cases to use SYS_openat.
Other projects have encountered the same issue:
https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=758521
https://bugs.launchpad.net/linaro-aarch64/+bug/1100782
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com","Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,116,2018-03-01T22:05:45Z,2018-03-02T15:42:15Z,2018-03-02T15:42:15Z,CLOSED,False,1,1,1,https://github.com/frdeso,Fix: leftover use of channel fd as identifier,1,[],https://github.com/lttng/lttng-tools/pull/116,https://github.com/frdeso,1,https://github.com/lttng/lttng-tools/pull/116,Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com,Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,117,2018-03-02T15:45:35Z,2018-03-05T19:56:09Z,2018-03-05T19:56:10Z,CLOSED,False,8,6,3,https://github.com/frdeso,Free running channel kconsumer keys,2,[],https://github.com/lttng/lttng-tools/pull/117,https://github.com/frdeso,1,https://github.com/lttng/lttng-tools/pull/117,,,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,117,2018-03-02T15:45:35Z,2018-03-05T19:56:09Z,2018-03-05T19:56:10Z,CLOSED,False,8,6,3,https://github.com/frdeso,Free running channel kconsumer keys,2,[],https://github.com/lttng/lttng-tools/pull/117,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/117#issuecomment-370543607,,"Merged in master, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,118,2018-03-02T15:52:18Z,,2018-07-16T20:14:43Z,OPEN,False,1,1,1,https://github.com/jgalar,Add -Wsign-compare to the project's CFLAGS,1,"['bug', 'help wanted', 'refactor']",https://github.com/lttng/lttng-tools/pull/118,https://github.com/jgalar,1,https://github.com/lttng/lttng-tools/pull/118,"The lttng-tools code base has many erroneous comparisons between
signed and unsigned values.
While some uses are benign, like using a signed integer to loop
between 0 and sizeof(struct some_structure), there are many
cases where the ""signed integer"" result of a syscall
(e.g. sendmsg, recvmsg, read, write) is compared to an expected
structure size using the sizeof operator, which returns a result of type
size_t.
The following pattern:
ret = sendmsg(...);
if (ret < sizeof(struct some_structure)) {
	/* Handle error. */
}

is common and unsafe if the intention is to check for an error
(-1) and that the operation was completed (ret == sizeof(...)).
Follow-up patches address the various instances of the problem.
The Clean-up: prefix is used when the comparison was safe
and the change is mainly done to silence the warning.
The Fix: prefix is used when the commit fixes an unsafe
comparison and should be backported to previous versions.","The lttng-tools code base has many erroneous comparisons between
signed and unsigned values.
While some uses are benign, like using a signed integer to loop
between 0 and sizeof(struct some_structure), there are many
cases where the ""signed integer"" result of a syscall
(e.g. sendmsg, recvmsg, read, write) is compared to an expected
structure size using the sizeof operator, which returns a result of type
size_t.
The following pattern:
ret = sendmsg(...);
if (ret < sizeof(struct some_structure)) {
	/* Handle error. */
}

is common and unsafe if the intention is to check for an error
(-1) and that the operation was completed (ret == sizeof(...)).
Follow-up patches address the various instances of the problem.
The Clean-up: prefix is used when the comparison was safe
and the change is mainly done to silence the warning.
The Fix: prefix is used when the commit fixes an unsafe
comparison and should be backported to previous versions.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,119,2018-03-15T15:57:15Z,2018-04-10T17:25:00Z,2018-04-11T14:56:44Z,CLOSED,False,8,8,6,https://github.com/tahini,sessiond: rename syscall.h so it does not conflict with system,1,[],https://github.com/lttng/lttng-tools/pull/119,https://github.com/tahini,1,https://github.com/lttng/lttng-tools/pull/119,"When including files from lttng-ust in a sessiond thread, the compiler complained of conflicts with the system's syscall.h","When including files from lttng-ust in a sessiond thread, the compiler complained of conflicts with the system's syscall.h",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,119,2018-03-15T15:57:15Z,2018-04-10T17:25:00Z,2018-04-11T14:56:44Z,CLOSED,False,8,8,6,https://github.com/tahini,sessiond: rename syscall.h so it does not conflict with system,1,[],https://github.com/lttng/lttng-tools/pull/119,https://github.com/tahini,2,https://github.com/lttng/lttng-tools/pull/119#issuecomment-380181765,"When including files from lttng-ust in a sessiond thread, the compiler complained of conflicts with the system's syscall.h",Will rebase on latest master,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,120,2018-03-15T19:21:28Z,2018-06-04T16:56:20Z,2018-06-04T16:56:59Z,CLOSED,False,51,206,19,https://github.com/PSRCode,Remove obvious unused parametes and other minor fix,21,[],https://github.com/lttng/lttng-tools/pull/120,https://github.com/PSRCode,1,https://github.com/lttng/lttng-tools/pull/120,Most of those are warning from -Wextra. Not sure we want to enable -Wextra at all time but checking it from time to time do no harm.,Most of those are warning from -Wextra. Not sure we want to enable -Wextra at all time but checking it from time to time do no harm.,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,120,2018-03-15T19:21:28Z,2018-06-04T16:56:20Z,2018-06-04T16:56:59Z,CLOSED,False,51,206,19,https://github.com/PSRCode,Remove obvious unused parametes and other minor fix,21,[],https://github.com/lttng/lttng-tools/pull/120,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/120#issuecomment-393475142,Most of those are warning from -Wextra. Not sure we want to enable -Wextra at all time but checking it from time to time do no harm.,"Merged
5319f62 as Cleanup: *_domain are never used by create_session
f5ec4fb as Cleanup: attr is not used by open_ust_stream_fd()
8452187 as Cleanup: relayd id is never used by write_relayd_metadata_id()
e21b9be as Cleanup: channel is never used by metadata_cache_check_version()
4ea02c4 as Cleanup: signo is never used by metadata_switch_timer
c41e5f8 as Cleanup: ctx is never used by monitor_timer()
05a4c76 as Cleanup: sock is never used by ask_channel() 
49f1f78 as Cleanup: sessiond_id is never used by relayd_create_session_2_*
Merged the remaining commits
97056403b 2018-03-14 Fix: use signed variable for refcounting of consumer_relayd_sock_pair [Jonathan Rajotte]
8eede8357 2018-03-14 Cleanup: sobjd is never used by reply_ust_register_channel() [Jonathan Rajotte]
8cd0a98d1 2018-03-14 Cleanup: chan is never used by save_agent_events() [Jonathan Rajotte]
75acbe198 2018-03-14 Cleanup: open_memstream and close_memstream compat is never used [Jonathan Rajotte]
c9edf0827 2018-03-13 Cleanup: ua_sess is never used create_ust_app_channel_context() [Jonathan Rajotte]
7f0320583 2018-03-13 Cleanup: consumer_data is never used by update_kernel_stream() [Jonathan Rajotte]
40bbd0879 2018-03-13 Cleanup: app is never used by alloc_ust_app_session() [Jonathan Rajotte]
766048521 2018-03-13 Cleanup: ust_session_id unused by buffer_reg_uid_consumer_channel_key [Jonathan Rajotte]
462ae7ae0 2018-03-13 Cleanup: wpipe already contain kernel_tracer_fd [Jonathan Rajotte]
3044f922f 2018-03-13 Cleanup: domain type is never used by send_consumer_relayd_socket() [Jonathan Rajotte]
474d7e84d 2018-03-13 Cleanup: uid and gid are never used by run_as_noworker() [Jonathan Rajotte]",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,121,2018-03-29T14:14:49Z,2018-04-09T18:46:58Z,2018-04-09T18:46:58Z,CLOSED,False,15,8,4,https://github.com/gleocadie,Fix: use off_t type for lseek function return value to avoid overflow,1,['bug'],https://github.com/lttng/lttng-tools/pull/121,https://github.com/gleocadie,1,https://github.com/lttng/lttng-tools/pull/121,"Context: LTTng is configured in live mode with only one channel, getting
traces for a long-running application (days of uptime)
The trace file gets bigger (many GBs), so the offset (bigger than
int.MaxValue). When getting a packet for such offset, the lseek returns
bigger value than int.MaxValue. This value is stored in a variable ""ret"" of
type int. This causes an overflow which leads to sending an error to the
viewer (babeltrace), which stops.
[error] get_data_packet: error.
[error] get_data_packet failed
[error] Unknown return code 0
Signed-off-by: Gregory LEOCADIE g.leocadie@criteo.com","Context: LTTng is configured in live mode with only one channel, getting
traces for a long-running application (days of uptime)
The trace file gets bigger (many GBs), so the offset (bigger than
int.MaxValue). When getting a packet for such offset, the lseek returns
bigger value than int.MaxValue. This value is stored in a variable ""ret"" of
type int. This causes an overflow which leads to sending an error to the
viewer (babeltrace), which stops.
[error] get_data_packet: error.
[error] get_data_packet failed
[error] Unknown return code 0
Signed-off-by: Gregory LEOCADIE g.leocadie@criteo.com",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,121,2018-03-29T14:14:49Z,2018-04-09T18:46:58Z,2018-04-09T18:46:58Z,CLOSED,False,15,8,4,https://github.com/gleocadie,Fix: use off_t type for lseek function return value to avoid overflow,1,['bug'],https://github.com/lttng/lttng-tools/pull/121,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/121#issuecomment-379854422,"Context: LTTng is configured in live mode with only one channel, getting
traces for a long-running application (days of uptime)
The trace file gets bigger (many GBs), so the offset (bigger than
int.MaxValue). When getting a packet for such offset, the lseek returns
bigger value than int.MaxValue. This value is stored in a variable ""ret"" of
type int. This causes an overflow which leads to sending an error to the
viewer (babeltrace), which stops.
[error] get_data_packet: error.
[error] get_data_packet failed
[error] Unknown return code 0
Signed-off-by: Gregory LEOCADIE g.leocadie@criteo.com","Merged in master, stable-2.10, and stable-2.9. Thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,122,2018-04-02T17:17:43Z,2018-04-03T20:05:12Z,2018-04-03T20:05:12Z,CLOSED,False,18,9,4,https://github.com/PSRCode,Run warn_processes.sh between each test execution,2,[],https://github.com/lttng/lttng-tools/pull/122,https://github.com/PSRCode,1,https://github.com/lttng/lttng-tools/pull/122,Also include a fix for a problem found using it.,Also include a fix for a problem found using it.,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,122,2018-04-02T17:17:43Z,2018-04-03T20:05:12Z,2018-04-03T20:05:12Z,CLOSED,False,18,9,4,https://github.com/PSRCode,Run warn_processes.sh between each test execution,2,[],https://github.com/lttng/lttng-tools/pull/122,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/122#issuecomment-378378385,Also include a fix for a problem found using it.,"Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,123,2018-04-09T04:22:53Z,2018-07-04T18:14:53Z,2018-07-04T18:14:53Z,CLOSED,False,7619,579,69,https://github.com/frdeso,[RFC v2] userspace-probe on ELF symbols and SDT probes implementation,88,['enhancement'],https://github.com/lttng/lttng-tools/pull/123,https://github.com/frdeso,1,https://github.com/lttng/lttng-tools/pull/123,"These changes allow the use of the Linux kernel uprobe interface to support userspace probes.
With this patchset we support placing userspace probes on ELF symbol functions and SDT probes compiled without semaphores.
To use those changes, corresponding changes on lttng-modules are necessary: https://github.com/frdeso/lttng-modules/tree/userspace-probe
It's important to note that userspace probes are made available by the kernel tracer and not the userspace tracer.
Missing pieces:
Document (lack of) support of C++ and Rust
Full load/save support
Man page","These changes allow the use of the Linux kernel uprobe interface to support userspace probes.
With this patchset we support placing userspace probes on ELF symbol functions and SDT probes compiled without semaphores.
To use those changes, corresponding changes on lttng-modules are necessary: https://github.com/frdeso/lttng-modules/tree/userspace-probe
It's important to note that userspace probes are made available by the kernel tracer and not the userspace tracer.
Missing pieces:
Document (lack of) support of C++ and Rust
Full load/save support
Man page",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,124,2018-04-10T17:25:38Z,2018-04-10T20:21:27Z,2018-04-11T14:56:44Z,CLOSED,False,8,8,6,https://github.com/tahini,sessiond: rename syscall.h so it does not conflict with system,1,[],https://github.com/lttng/lttng-tools/pull/124,https://github.com/tahini,1,https://github.com/lttng/lttng-tools/pull/124,Signed-off-by: Genevi√®ve Bastien gbastien+lttng@versatic.net,Signed-off-by: Genevi√®ve Bastien gbastien+lttng@versatic.net,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,124,2018-04-10T17:25:38Z,2018-04-10T20:21:27Z,2018-04-11T14:56:44Z,CLOSED,False,8,8,6,https://github.com/tahini,sessiond: rename syscall.h so it does not conflict with system,1,[],https://github.com/lttng/lttng-tools/pull/124,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/124#issuecomment-380233898,Signed-off-by: Genevi√®ve Bastien gbastien+lttng@versatic.net,"Merged in master, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,125,2018-04-10T17:41:42Z,2018-04-10T20:04:03Z,2018-04-10T20:04:03Z,CLOSED,False,58,72,3,https://github.com/PSRCode,Fix rotation test multi day,4,[],https://github.com/lttng/lttng-tools/pull/125,https://github.com/PSRCode,1,https://github.com/lttng/lttng-tools/pull/125,Do some code cleanup at the same time.,Do some code cleanup at the same time.,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,125,2018-04-10T17:41:42Z,2018-04-10T20:04:03Z,2018-04-10T20:04:03Z,CLOSED,False,58,72,3,https://github.com/PSRCode,Fix rotation test multi day,4,[],https://github.com/lttng/lttng-tools/pull/125,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/125#issuecomment-380229103,Do some code cleanup at the same time.,"Merged in master, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,126,2018-04-17T16:23:41Z,2018-06-13T14:38:08Z,2018-06-13T14:38:08Z,CLOSED,False,489,3,11,https://github.com/tahini,Statedump notifier,2,['enhancement'],https://github.com/lttng/lttng-tools/pull/126,https://github.com/tahini,1,https://github.com/lttng/lttng-tools/pull/126,"Those are the tests for the statedump notifier UST feature, available in the following pull request: lttng/lttng-ust#53","Those are the tests for the statedump notifier UST feature, available in the following pull request: lttng/lttng-ust#53",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,126,2018-04-17T16:23:41Z,2018-06-13T14:38:08Z,2018-06-13T14:38:08Z,CLOSED,False,489,3,11,https://github.com/tahini,Statedump notifier,2,['enhancement'],https://github.com/lttng/lttng-tools/pull/126,https://github.com/tahini,2,https://github.com/lttng/lttng-tools/pull/126#issuecomment-382817981,"Those are the tests for the statedump notifier UST feature, available in the following pull request: lttng/lttng-ust#53","I guess this feature will not be reviewed until proper documentation is provided, right? I'll do that in a while.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,126,2018-04-17T16:23:41Z,2018-06-13T14:38:08Z,2018-06-13T14:38:08Z,CLOSED,False,489,3,11,https://github.com/tahini,Statedump notifier,2,['enhancement'],https://github.com/lttng/lttng-tools/pull/126,https://github.com/tahini,3,https://github.com/lttng/lttng-tools/pull/126#issuecomment-384419191,"Those are the tests for the statedump notifier UST feature, available in the following pull request: lttng/lttng-ust#53",Documentation added in the lttng-ust PR,True,{'THUMBS_UP': ['https://github.com/jgalar']}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,126,2018-04-17T16:23:41Z,2018-06-13T14:38:08Z,2018-06-13T14:38:08Z,CLOSED,False,489,3,11,https://github.com/tahini,Statedump notifier,2,['enhancement'],https://github.com/lttng/lttng-tools/pull/126,https://github.com/tahini,4,https://github.com/lttng/lttng-tools/pull/126#issuecomment-396961179,"Those are the tests for the statedump notifier UST feature, available in the following pull request: lttng/lttng-ust#53",I'll open a new PR for this one,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,127,2018-05-04T19:26:30Z,2018-05-25T19:23:28Z,2018-05-25T19:23:28Z,CLOSED,False,165,15,10,https://github.com/PSRCode,Custom version,5,[],https://github.com/lttng/lttng-tools/pull/127,https://github.com/PSRCode,1,https://github.com/lttng/lttng-tools/pull/127,Provide support for custom version string,Provide support for custom version string,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,127,2018-05-04T19:26:30Z,2018-05-25T19:23:28Z,2018-05-25T19:23:28Z,CLOSED,False,165,15,10,https://github.com/PSRCode,Custom version,5,[],https://github.com/lttng/lttng-tools/pull/127,https://github.com/PSRCode,2,https://github.com/lttng/lttng-tools/pull/127#issuecomment-391158706,Provide support for custom version string,"@mjeanson  updated with modification.
Could you go over it again?
Thanks",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,127,2018-05-04T19:26:30Z,2018-05-25T19:23:28Z,2018-05-25T19:23:28Z,CLOSED,False,165,15,10,https://github.com/PSRCode,Custom version,5,[],https://github.com/lttng/lttng-tools/pull/127,https://github.com/PSRCode,3,https://github.com/lttng/lttng-tools/pull/127#issuecomment-391817267,Provide support for custom version string,"Replace custom -> extra (in ref to extraversion from the kernel)
Custom_version_details -> extra_version_description",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,127,2018-05-04T19:26:30Z,2018-05-25T19:23:28Z,2018-05-25T19:23:28Z,CLOSED,False,165,15,10,https://github.com/PSRCode,Custom version,5,[],https://github.com/lttng/lttng-tools/pull/127,https://github.com/PSRCode,4,https://github.com/lttng/lttng-tools/pull/127#issuecomment-391825012,Provide support for custom version string,Move all this stuff to version directory,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,127,2018-05-04T19:26:30Z,2018-05-25T19:23:28Z,2018-05-25T19:23:28Z,CLOSED,False,165,15,10,https://github.com/PSRCode,Custom version,5,[],https://github.com/lttng/lttng-tools/pull/127,https://github.com/PSRCode,5,https://github.com/lttng/lttng-tools/pull/127#issuecomment-392156492,Provide support for custom version string,See v2 on #130,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,128,2018-05-11T17:46:44Z,2018-06-24T18:00:12Z,2018-06-24T18:00:12Z,CLOSED,False,479,70,7,https://github.com/PSRCode,Fix backward compat for relayd communication,14,"['bug', 'enhancement']",https://github.com/lttng/lttng-tools/pull/128,https://github.com/PSRCode,1,https://github.com/lttng/lttng-tools/pull/128,"Freeze the size of the communication structure for version < 2.11.
For 2.11, use dynamic payload field instead of fixed size struct member for create session and add stream commands.","Freeze the size of the communication structure for version < 2.11.
For 2.11, use dynamic payload field instead of fixed size struct member for create session and add stream commands.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,128,2018-05-11T17:46:44Z,2018-06-24T18:00:12Z,2018-06-24T18:00:12Z,CLOSED,False,479,70,7,https://github.com/PSRCode,Fix backward compat for relayd communication,14,"['bug', 'enhancement']",https://github.com/lttng/lttng-tools/pull/128,https://github.com/PSRCode,2,https://github.com/lttng/lttng-tools/pull/128#issuecomment-399775110,"Freeze the size of the communication structure for version < 2.11.
For 2.11, use dynamic payload field instead of fixed size struct member for create session and add stream commands.",Already merged,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,129,2018-05-17T18:33:15Z,2018-05-31T09:05:15Z,2018-05-31T09:05:16Z,CLOSED,False,40,43,4,https://github.com/eepp,doc/man: update rotation man pages to follow API's terminology,1,['docs'],https://github.com/lttng/lttng-tools/pull/129,https://github.com/eepp,1,https://github.com/lttng/lttng-tools/pull/129,,,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,129,2018-05-17T18:33:15Z,2018-05-31T09:05:15Z,2018-05-31T09:05:16Z,CLOSED,False,40,43,4,https://github.com/eepp,doc/man: update rotation man pages to follow API's terminology,1,['docs'],https://github.com/lttng/lttng-tools/pull/129,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/129#issuecomment-393465492,,"Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,130,2018-05-25T19:13:58Z,2018-06-27T20:28:08Z,2018-06-27T20:28:08Z,CLOSED,False,133,15,11,https://github.com/PSRCode,Custom version v2,5,['enhancement'],https://github.com/lttng/lttng-tools/pull/130,https://github.com/PSRCode,1,https://github.com/lttng/lttng-tools/pull/130,,,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,130,2018-05-25T19:13:58Z,2018-06-27T20:28:08Z,2018-06-27T20:28:08Z,CLOSED,False,133,15,11,https://github.com/PSRCode,Custom version v2,5,['enhancement'],https://github.com/lttng/lttng-tools/pull/130,https://github.com/PSRCode,2,https://github.com/lttng/lttng-tools/pull/130#issuecomment-400817901,,Mjeanson will open a new v3,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,131,2018-05-29T17:53:30Z,2019-10-22T19:02:39Z,2019-10-22T19:02:39Z,CLOSED,False,410,15,12,https://github.com/PSRCode,Change working directory for lttng-relayd,7,['enhancement'],https://github.com/lttng/lttng-tools/pull/131,https://github.com/PSRCode,1,https://github.com/lttng/lttng-tools/pull/131,,,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,131,2018-05-29T17:53:30Z,2019-10-22T19:02:39Z,2019-10-22T19:02:39Z,CLOSED,False,410,15,12,https://github.com/PSRCode,Change working directory for lttng-relayd,7,['enhancement'],https://github.com/lttng/lttng-tools/pull/131,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/131#issuecomment-393458124,,Adding @eepp since he may want to look over the docs.,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,131,2018-05-29T17:53:30Z,2019-10-22T19:02:39Z,2019-10-22T19:02:39Z,CLOSED,False,410,15,12,https://github.com/PSRCode,Change working directory for lttng-relayd,7,['enhancement'],https://github.com/lttng/lttng-tools/pull/131,https://github.com/PSRCode,3,https://github.com/lttng/lttng-tools/pull/131#issuecomment-396363348,,@eepp change done. Any other comments on this pr?,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,131,2018-05-29T17:53:30Z,2019-10-22T19:02:39Z,2019-10-22T19:02:39Z,CLOSED,False,410,15,12,https://github.com/PSRCode,Change working directory for lttng-relayd,7,['enhancement'],https://github.com/lttng/lttng-tools/pull/131,https://github.com/PSRCode,4,https://github.com/lttng/lttng-tools/pull/131#issuecomment-529615064,,"Rebased on current master.
Most changes were in the test suite. Since this was done, the RELAYD_PIDS global variable with the spawned relayd id was removed. We use pgrep to find the pid.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,131,2018-05-29T17:53:30Z,2019-10-22T19:02:39Z,2019-10-22T19:02:39Z,CLOSED,False,410,15,12,https://github.com/PSRCode,Change working directory for lttng-relayd,7,['enhancement'],https://github.com/lttng/lttng-tools/pull/131,https://github.com/jgalar,5,https://github.com/lttng/lttng-tools/pull/131#issuecomment-545107211,,"Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,132,2018-06-11T19:55:44Z,2018-09-14T14:43:17Z,2018-09-14T14:43:17Z,CLOSED,False,63,21,3,https://github.com/PSRCode,Perform relayd socket pair cleanup on ctrl socket error.,2,['bug'],https://github.com/lttng/lttng-tools/pull/132,https://github.com/PSRCode,1,https://github.com/lttng/lttng-tools/pull/132,Can be merged into a single commit if needed.,Can be merged into a single commit if needed.,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,132,2018-06-11T19:55:44Z,2018-09-14T14:43:17Z,2018-09-14T14:43:17Z,CLOSED,False,63,21,3,https://github.com/PSRCode,Perform relayd socket pair cleanup on ctrl socket error.,2,['bug'],https://github.com/lttng/lttng-tools/pull/132,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/132#issuecomment-421380739,Can be merged into a single commit if needed.,"Merged in master, stable-2.11, stable-2.10, and stable-2.9, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,133,2018-06-13T14:53:53Z,,2019-09-08T16:02:44Z,OPEN,False,531,3,11,https://github.com/tahini,Statedump notifier,2,[],https://github.com/lttng/lttng-tools/pull/133,https://github.com/tahini,1,https://github.com/lttng/lttng-tools/pull/133,"Those are the tests for the statedump notifier UST feature, available in the following pull request: lttng/lttng-ust#53","Those are the tests for the statedump notifier UST feature, available in the following pull request: lttng/lttng-ust#53",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,133,2018-06-13T14:53:53Z,,2019-09-08T16:02:44Z,OPEN,False,531,3,11,https://github.com/tahini,Statedump notifier,2,[],https://github.com/lttng/lttng-tools/pull/133,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/133#issuecomment-529216509,"Those are the tests for the statedump notifier UST feature, available in the following pull request: lttng/lttng-ust#53","59e1268 was merged in master.
Can't really comment on the lttng-ust side.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,134,2018-06-27T00:49:54Z,2019-11-12T19:09:07Z,2019-11-12T19:09:07Z,CLOSED,False,1402,62,21,https://github.com/PSRCode,lttng-relayd --group-output-by-session,6,['enhancement'],https://github.com/lttng/lttng-tools/pull/134,https://github.com/PSRCode,1,https://github.com/lttng/lttng-tools/pull/134,,,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,134,2018-06-27T00:49:54Z,2019-11-12T19:09:07Z,2019-11-12T19:09:07Z,CLOSED,False,1402,62,21,https://github.com/PSRCode,lttng-relayd --group-output-by-session,6,['enhancement'],https://github.com/lttng/lttng-tools/pull/134,https://github.com/PSRCode,2,https://github.com/lttng/lttng-tools/pull/134#issuecomment-533703095,,"Updated this branch on top of current master (2019-09-20).
Major diff√©rence with previous version is the support for chunks and the backward compatibility mode for client using protocol < 2.11.
This includes regression tests and unit testing of the backward compat code.
Subsequent works for compatibility testing should be conducted on lttng-ivc. So far everything work as expected.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,134,2018-06-27T00:49:54Z,2019-11-12T19:09:07Z,2019-11-12T19:09:07Z,CLOSED,False,1402,62,21,https://github.com/PSRCode,lttng-relayd --group-output-by-session,6,['enhancement'],https://github.com/lttng/lttng-tools/pull/134,https://github.com/jgalar,3,https://github.com/lttng/lttng-tools/pull/134#issuecomment-553067700,,"Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,135,2018-06-29T19:29:19Z,2019-10-08T18:29:46Z,2019-10-08T18:29:46Z,CLOSED,False,141,19,13,https://github.com/mjeanson,Custom version v3,4,['enhancement'],https://github.com/lttng/lttng-tools/pull/135,https://github.com/mjeanson,1,https://github.com/lttng/lttng-tools/pull/135,,,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,135,2018-06-29T19:29:19Z,2019-10-08T18:29:46Z,2019-10-08T18:29:46Z,CLOSED,False,141,19,13,https://github.com/mjeanson,Custom version v3,4,['enhancement'],https://github.com/lttng/lttng-tools/pull/135,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/135#issuecomment-539643251,,"Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,136,2018-07-04T18:14:26Z,2018-08-24T21:39:11Z,2018-08-24T21:39:12Z,CLOSED,False,8255,610,82,https://github.com/frdeso,v3: userspace-probe on ELF symbols and SDT probes implementation,42,['enhancement'],https://github.com/lttng/lttng-tools/pull/136,https://github.com/frdeso,1,https://github.com/lttng/lttng-tools/pull/136,"These changes allow the use of the Linux kernel uprobe interface to support userspace probes.
With this patchset we support placing userspace probes on ELF symbol functions and SDT probes compiled without semaphores.
To use those changes, corresponding changes on lttng-modules are necessary: https://github.com/frdeso/lttng-modules/tree/userspace-probe
It's important to note that userspace probes are made available by the kernel tracer and not the userspace tracer.","These changes allow the use of the Linux kernel uprobe interface to support userspace probes.
With this patchset we support placing userspace probes on ELF symbol functions and SDT probes compiled without semaphores.
To use those changes, corresponding changes on lttng-modules are necessary: https://github.com/frdeso/lttng-modules/tree/userspace-probe
It's important to note that userspace probes are made available by the kernel tracer and not the userspace tracer.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,136,2018-07-04T18:14:26Z,2018-08-24T21:39:11Z,2018-08-24T21:39:12Z,CLOSED,False,8255,610,82,https://github.com/frdeso,v3: userspace-probe on ELF symbols and SDT probes implementation,42,['enhancement'],https://github.com/lttng/lttng-tools/pull/136,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/136#issuecomment-407411672,"These changes allow the use of the Linux kernel uprobe interface to support userspace probes.
With this patchset we support placing userspace probes on ELF symbol functions and SDT probes compiled without semaphores.
To use those changes, corresponding changes on lttng-modules are necessary: https://github.com/frdeso/lttng-modules/tree/userspace-probe
It's important to note that userspace probes are made available by the kernel tracer and not the userspace tracer.","Rebased on master, I'll be adding a couple of commits for minor fixes.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,136,2018-07-04T18:14:26Z,2018-08-24T21:39:11Z,2018-08-24T21:39:12Z,CLOSED,False,8255,610,82,https://github.com/frdeso,v3: userspace-probe on ELF symbols and SDT probes implementation,42,['enhancement'],https://github.com/lttng/lttng-tools/pull/136,https://github.com/jgalar,3,https://github.com/lttng/lttng-tools/pull/136#issuecomment-415889438,"These changes allow the use of the Linux kernel uprobe interface to support userspace probes.
With this patchset we support placing userspace probes on ELF symbol functions and SDT probes compiled without semaphores.
To use those changes, corresponding changes on lttng-modules are necessary: https://github.com/frdeso/lttng-modules/tree/userspace-probe
It's important to note that userspace probes are made available by the kernel tracer and not the userspace tracer.","Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,137,2018-07-10T19:12:12Z,2018-07-16T19:41:56Z,2018-07-16T19:41:56Z,CLOSED,False,89,1,3,https://github.com/frdeso,Fix: Tests: use -no-pie linker option only when available,1,[],https://github.com/lttng/lttng-tools/pull/137,https://github.com/frdeso,1,https://github.com/lttng/lttng-tools/pull/137,"Issue
To keep the userspace callstack tests simple, we want to prevent the
testapp to be linked as a Position Independent Execution (PIE) binary as
it is simpler to resolve the addresses of functions. Some distributions
now ship GCC built with the --enable-default-pie option which turns on
PIE by default. To prevent that, we use the -no-pie linker flag when
building the gen-syscall-events-callstack testapp. The issue is that
this flag is not available on older version of GCC thus triggering an
error when building the project.
gcc: error: unrecognized command line option ‚Äò-no-pie‚Äô

Solution
Test for the availability of the -no-pie option at the configure time
and enable it only when found. If the option is unavailable we assume
that the -pie option is not enabled by default thus removing the need to
prevent its usage with -no-pie in the first place.
Known drawbacks
None
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com","Issue
To keep the userspace callstack tests simple, we want to prevent the
testapp to be linked as a Position Independent Execution (PIE) binary as
it is simpler to resolve the addresses of functions. Some distributions
now ship GCC built with the --enable-default-pie option which turns on
PIE by default. To prevent that, we use the -no-pie linker flag when
building the gen-syscall-events-callstack testapp. The issue is that
this flag is not available on older version of GCC thus triggering an
error when building the project.
gcc: error: unrecognized command line option ‚Äò-no-pie‚Äô

Solution
Test for the availability of the -no-pie option at the configure time
and enable it only when found. If the option is unavailable we assume
that the -pie option is not enabled by default thus removing the need to
prevent its usage with -no-pie in the first place.
Known drawbacks
None
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,137,2018-07-10T19:12:12Z,2018-07-16T19:41:56Z,2018-07-16T19:41:56Z,CLOSED,False,89,1,3,https://github.com/frdeso,Fix: Tests: use -no-pie linker option only when available,1,[],https://github.com/lttng/lttng-tools/pull/137,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/137#issuecomment-405358223,"Issue
To keep the userspace callstack tests simple, we want to prevent the
testapp to be linked as a Position Independent Execution (PIE) binary as
it is simpler to resolve the addresses of functions. Some distributions
now ship GCC built with the --enable-default-pie option which turns on
PIE by default. To prevent that, we use the -no-pie linker flag when
building the gen-syscall-events-callstack testapp. The issue is that
this flag is not available on older version of GCC thus triggering an
error when building the project.
gcc: error: unrecognized command line option ‚Äò-no-pie‚Äô

Solution
Test for the availability of the -no-pie option at the configure time
and enable it only when found. If the option is unavailable we assume
that the -pie option is not enabled by default thus removing the need to
prevent its usage with -no-pie in the first place.
Known drawbacks
None
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com","Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,138,2018-07-16T20:13:00Z,2019-12-20T06:50:43Z,2019-12-20T06:50:43Z,CLOSED,False,3869,246,37,https://github.com/jgalar,Implement a file descriptor cache for the relay daemon,51,['enhancement'],https://github.com/lttng/lttng-tools/pull/138,https://github.com/jgalar,1,https://github.com/lttng/lttng-tools/pull/138,"Issue
The fact that LTTng traces are stored as separate streams (per-core)
forces the relay daemon to keep a lot of file descriptors open.
Users that collect traces from a large number of targets (and consume
them from a live client) have repeatedly reported file descriptor
exhaustion issues.
Part of the problem lies in the high number of files that have to
be opened to store and read a given trace. However, this is a problem
that would happen (albeit not as frequently) if traces were stored in a
single file as the relay daemon can receive traces from many hosts,
and each host can be sending traces from separate sessions.
It was observed that users were often hitting this problem following
a connectivity problem since the connections, and thus all stream
files, are kept open until the TCP connections timeout. Meanwhile,
the targets, upon recovering from the network problem, would
reconnect and cause more files to be opened.
Under unreliable networking conditions, this causes the number
of consumed file descriptor to escalate quickly.
Solution
This PR adds an fd-tracker utility to the common libs.
This interface allows a process to keep track of its open
file descriptors and enforce a limit to the number of file
descriptors that may be simultaneously opened.
The fd-tracker defines two classes of file descriptors: suspendable
and unsuspendable file descriptors.
Suspendable file descriptors are handles to filesystem objects
(e.g. regular files) that may be closed and re-opened later without
affecting the application.
A suspendable file descriptor can be opened by creating a filesystem
handle (fs_handle) using the fd-tracker. The raw file descriptor
must then be obtained and released using that handle. Closing the
handle will effectively ensure that the file descritptor is closed.
Unsuspendable file descriptors are file descriptors that cannot
be closed without affecting the application's state. For instance,
it is not possible to close and re-open a pipe, a TCP socket, or
an epoll fd without involving some app-specific logic. Thus, the
fd-tracker considers those file descriptors as unsuspendable.
Opening an unsuspendable file descritptor will return a raw file
decriptor to the application. It is its responsability to notify the
fd-tracker of the file descriptor's closing to ensure the number
of active file descriptors can be tracked accurately.
If a request to open a new file descriptors is made to the fd-tracker
and the process has already reached its maximal count of
simultaneously opened file descriptors, an attempt will be made to
suspend a suspendable file descriptor and release a slot.
Suspending a file descriptor involves:

verifying that the file is still available on the FS (restorable),
sampling its current position,
closing the file descriptor.

Note that suspending a file descriptor eliminates POSIX's guarantee
that a file may be unlinked at any time without affecting the
application (provided that it holds an open FD to that
file). Applications using the fd-tracker that need to maintain this
guarantee should open those files as unsuspendable file descriptors.
To protect against unlinking and file replacement scenarios, the
fd-tracker samples the files' inode number when a fs_handle is
created. This inode number will then be checked anytime the handle
is suspended or restored to ensure that the application is made
aware of the file's unavailability. This is preferable to
inadvertently opening another file of the same name if the original
file was unlinked and/or replaced between a fs_handle's suspension
and restoration.
The allowed number of simultaneously active file descriptors can
be controlled using the relay daemon's --fd-pool-size option.
Known drawbacks
Performance
Performance degradation may occur if the LRU cache policy proves
to be unsuitable or if the number of simultaneously active file descriptors
is limited to an unreasonably low value. The fd_tracker_log() function
can be used to periodically monitor (or once, on close) the fd cache's
hit rate and content.
Unlinking/deleting files
As previously mentioned, the use of suspendable filesystem handles
makes it tricky to deal with unlinking files. In the case of the relay daemon,
it is not obvious that it is a problem to not allow users to delete or
overwrite traces that are being received/consumed.
Since the relay daemon can unlink files that are being consumed by a
live client (e.g. when a limit of tracefiles was imposed on the session),
the fd-tracker uses an internal lttng-inode to represent files opened
through a filesystem handle. When a filesystem handle is unlinked, the
file is renamed to contain a -deleted suffix. When the last filesystem
handle refering to this file is released, the actual unlink() is performed.
Note that this way of handling unlinked files is similar to what NFS
does.
Stability
There are error paths that do not properly recover when a file cannot be
restored. In essence, the paths that perform reads or writes on files can
now fail for this reason. This is not a new issue as those code paths
were already buggy as they should properly recover from read/write
failures.
This can be observed by setting the --fd-pool-size option to a small
value and using many unsuspendable fds (i.e. by opening many
connections) up until the daemon fails to restore a single fs_handle.
I am considering reserving a number of slots for fs_handles so that
every thread can hold at least one active fs_handle.","Issue
The fact that LTTng traces are stored as separate streams (per-core)
forces the relay daemon to keep a lot of file descriptors open.
Users that collect traces from a large number of targets (and consume
them from a live client) have repeatedly reported file descriptor
exhaustion issues.
Part of the problem lies in the high number of files that have to
be opened to store and read a given trace. However, this is a problem
that would happen (albeit not as frequently) if traces were stored in a
single file as the relay daemon can receive traces from many hosts,
and each host can be sending traces from separate sessions.
It was observed that users were often hitting this problem following
a connectivity problem since the connections, and thus all stream
files, are kept open until the TCP connections timeout. Meanwhile,
the targets, upon recovering from the network problem, would
reconnect and cause more files to be opened.
Under unreliable networking conditions, this causes the number
of consumed file descriptor to escalate quickly.
Solution
This PR adds an fd-tracker utility to the common libs.
This interface allows a process to keep track of its open
file descriptors and enforce a limit to the number of file
descriptors that may be simultaneously opened.
The fd-tracker defines two classes of file descriptors: suspendable
and unsuspendable file descriptors.
Suspendable file descriptors are handles to filesystem objects
(e.g. regular files) that may be closed and re-opened later without
affecting the application.
A suspendable file descriptor can be opened by creating a filesystem
handle (fs_handle) using the fd-tracker. The raw file descriptor
must then be obtained and released using that handle. Closing the
handle will effectively ensure that the file descritptor is closed.
Unsuspendable file descriptors are file descriptors that cannot
be closed without affecting the application's state. For instance,
it is not possible to close and re-open a pipe, a TCP socket, or
an epoll fd without involving some app-specific logic. Thus, the
fd-tracker considers those file descriptors as unsuspendable.
Opening an unsuspendable file descritptor will return a raw file
decriptor to the application. It is its responsability to notify the
fd-tracker of the file descriptor's closing to ensure the number
of active file descriptors can be tracked accurately.
If a request to open a new file descriptors is made to the fd-tracker
and the process has already reached its maximal count of
simultaneously opened file descriptors, an attempt will be made to
suspend a suspendable file descriptor and release a slot.
Suspending a file descriptor involves:

verifying that the file is still available on the FS (restorable),
sampling its current position,
closing the file descriptor.

Note that suspending a file descriptor eliminates POSIX's guarantee
that a file may be unlinked at any time without affecting the
application (provided that it holds an open FD to that
file). Applications using the fd-tracker that need to maintain this
guarantee should open those files as unsuspendable file descriptors.
To protect against unlinking and file replacement scenarios, the
fd-tracker samples the files' inode number when a fs_handle is
created. This inode number will then be checked anytime the handle
is suspended or restored to ensure that the application is made
aware of the file's unavailability. This is preferable to
inadvertently opening another file of the same name if the original
file was unlinked and/or replaced between a fs_handle's suspension
and restoration.
The allowed number of simultaneously active file descriptors can
be controlled using the relay daemon's --fd-pool-size option.
Known drawbacks
Performance
Performance degradation may occur if the LRU cache policy proves
to be unsuitable or if the number of simultaneously active file descriptors
is limited to an unreasonably low value. The fd_tracker_log() function
can be used to periodically monitor (or once, on close) the fd cache's
hit rate and content.
Unlinking/deleting files
As previously mentioned, the use of suspendable filesystem handles
makes it tricky to deal with unlinking files. In the case of the relay daemon,
it is not obvious that it is a problem to not allow users to delete or
overwrite traces that are being received/consumed.
Since the relay daemon can unlink files that are being consumed by a
live client (e.g. when a limit of tracefiles was imposed on the session),
the fd-tracker uses an internal lttng-inode to represent files opened
through a filesystem handle. When a filesystem handle is unlinked, the
file is renamed to contain a -deleted suffix. When the last filesystem
handle refering to this file is released, the actual unlink() is performed.
Note that this way of handling unlinked files is similar to what NFS
does.
Stability
There are error paths that do not properly recover when a file cannot be
restored. In essence, the paths that perform reads or writes on files can
now fail for this reason. This is not a new issue as those code paths
were already buggy as they should properly recover from read/write
failures.
This can be observed by setting the --fd-pool-size option to a small
value and using many unsuspendable fds (i.e. by opening many
connections) up until the daemon fails to restore a single fs_handle.
I am considering reserving a number of slots for fs_handles so that
every thread can hold at least one active fs_handle.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,138,2018-07-16T20:13:00Z,2019-12-20T06:50:43Z,2019-12-20T06:50:43Z,CLOSED,False,3869,246,37,https://github.com/jgalar,Implement a file descriptor cache for the relay daemon,51,['enhancement'],https://github.com/lttng/lttng-tools/pull/138,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/138#issuecomment-567812423,"Issue
The fact that LTTng traces are stored as separate streams (per-core)
forces the relay daemon to keep a lot of file descriptors open.
Users that collect traces from a large number of targets (and consume
them from a live client) have repeatedly reported file descriptor
exhaustion issues.
Part of the problem lies in the high number of files that have to
be opened to store and read a given trace. However, this is a problem
that would happen (albeit not as frequently) if traces were stored in a
single file as the relay daemon can receive traces from many hosts,
and each host can be sending traces from separate sessions.
It was observed that users were often hitting this problem following
a connectivity problem since the connections, and thus all stream
files, are kept open until the TCP connections timeout. Meanwhile,
the targets, upon recovering from the network problem, would
reconnect and cause more files to be opened.
Under unreliable networking conditions, this causes the number
of consumed file descriptor to escalate quickly.
Solution
This PR adds an fd-tracker utility to the common libs.
This interface allows a process to keep track of its open
file descriptors and enforce a limit to the number of file
descriptors that may be simultaneously opened.
The fd-tracker defines two classes of file descriptors: suspendable
and unsuspendable file descriptors.
Suspendable file descriptors are handles to filesystem objects
(e.g. regular files) that may be closed and re-opened later without
affecting the application.
A suspendable file descriptor can be opened by creating a filesystem
handle (fs_handle) using the fd-tracker. The raw file descriptor
must then be obtained and released using that handle. Closing the
handle will effectively ensure that the file descritptor is closed.
Unsuspendable file descriptors are file descriptors that cannot
be closed without affecting the application's state. For instance,
it is not possible to close and re-open a pipe, a TCP socket, or
an epoll fd without involving some app-specific logic. Thus, the
fd-tracker considers those file descriptors as unsuspendable.
Opening an unsuspendable file descritptor will return a raw file
decriptor to the application. It is its responsability to notify the
fd-tracker of the file descriptor's closing to ensure the number
of active file descriptors can be tracked accurately.
If a request to open a new file descriptors is made to the fd-tracker
and the process has already reached its maximal count of
simultaneously opened file descriptors, an attempt will be made to
suspend a suspendable file descriptor and release a slot.
Suspending a file descriptor involves:

verifying that the file is still available on the FS (restorable),
sampling its current position,
closing the file descriptor.

Note that suspending a file descriptor eliminates POSIX's guarantee
that a file may be unlinked at any time without affecting the
application (provided that it holds an open FD to that
file). Applications using the fd-tracker that need to maintain this
guarantee should open those files as unsuspendable file descriptors.
To protect against unlinking and file replacement scenarios, the
fd-tracker samples the files' inode number when a fs_handle is
created. This inode number will then be checked anytime the handle
is suspended or restored to ensure that the application is made
aware of the file's unavailability. This is preferable to
inadvertently opening another file of the same name if the original
file was unlinked and/or replaced between a fs_handle's suspension
and restoration.
The allowed number of simultaneously active file descriptors can
be controlled using the relay daemon's --fd-pool-size option.
Known drawbacks
Performance
Performance degradation may occur if the LRU cache policy proves
to be unsuitable or if the number of simultaneously active file descriptors
is limited to an unreasonably low value. The fd_tracker_log() function
can be used to periodically monitor (or once, on close) the fd cache's
hit rate and content.
Unlinking/deleting files
As previously mentioned, the use of suspendable filesystem handles
makes it tricky to deal with unlinking files. In the case of the relay daemon,
it is not obvious that it is a problem to not allow users to delete or
overwrite traces that are being received/consumed.
Since the relay daemon can unlink files that are being consumed by a
live client (e.g. when a limit of tracefiles was imposed on the session),
the fd-tracker uses an internal lttng-inode to represent files opened
through a filesystem handle. When a filesystem handle is unlinked, the
file is renamed to contain a -deleted suffix. When the last filesystem
handle refering to this file is released, the actual unlink() is performed.
Note that this way of handling unlinked files is similar to what NFS
does.
Stability
There are error paths that do not properly recover when a file cannot be
restored. In essence, the paths that perform reads or writes on files can
now fail for this reason. This is not a new issue as those code paths
were already buggy as they should properly recover from read/write
failures.
This can be observed by setting the --fd-pool-size option to a small
value and using many unsuspendable fds (i.e. by opening many
connections) up until the daemon fails to restore a single fs_handle.
I am considering reserving a number of slots for fs_handles so that
every thread can hold at least one active fs_handle.",Patchset moved to Gerrit (review.lttng.org). See change #2469 and related patches.,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,139,2018-08-29T13:07:35Z,2018-08-30T21:06:10Z,2018-08-30T21:06:10Z,CLOSED,False,99,81,13,https://github.com/frdeso,Fix coverity issues after userspace probe merge,13,[],https://github.com/lttng/lttng-tools/pull/139,https://github.com/frdeso,1,https://github.com/lttng/lttng-tools/pull/139,,,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,139,2018-08-29T13:07:35Z,2018-08-30T21:06:10Z,2018-08-30T21:06:10Z,CLOSED,False,99,81,13,https://github.com/frdeso,Fix coverity issues after userspace probe merge,13,[],https://github.com/lttng/lttng-tools/pull/139,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/139#issuecomment-417467126,,"Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,140,2018-08-31T16:39:15Z,2018-08-31T20:41:00Z,2018-08-31T20:41:00Z,CLOSED,False,109,7,6,https://github.com/frdeso,elf: support dynamic symbol table lookup,1,[],https://github.com/lttng/lttng-tools/pull/140,https://github.com/frdeso,1,https://github.com/lttng/lttng-tools/pull/140,"Background
There may have two symbol tables in a shared object and binary. The
normal symbol table (.symtab) and the dynamic symbol table (.dynsym).
The normal symbol table contains lots of information, such static
linking data, but none of it is used at runtime. That why some
shared libraries are stripped to reduce the size of the file.
Stripping an object files removes the entire .symtab section of the elf
file, amongst other things.
The dynamic symbol table contains symbols that are needed for dynamic
linking of the shared object. The symbols in that section form a subset
of the symbols contained in the normal symbol section (before
stripping). The .dynsym section is left untouched when stripping a file
as it's needed at runtime.
Current limitation
The current elf parsing implementation looks for the normal symbol
section (.symtab) to find the target symbol. If the .symtab is not
found, the parsing stops and returns that the symbol is not found. As
explained in the section above, a shared library might be stripped from
its normal symbol table but still have a dynamic symbol table (.dynsym)
containing the information of the target symbol. For example, on
distributions where the libc is stripped, the malloc symbol can only be
found in the .dynsym section
Solution
Look for the normal symbol section first, if it's found, used it to find
the symbol as usual. If the .symtab is absent, try to use the dynamic
symbol section instead.
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com","Background
There may have two symbol tables in a shared object and binary. The
normal symbol table (.symtab) and the dynamic symbol table (.dynsym).
The normal symbol table contains lots of information, such static
linking data, but none of it is used at runtime. That why some
shared libraries are stripped to reduce the size of the file.
Stripping an object files removes the entire .symtab section of the elf
file, amongst other things.
The dynamic symbol table contains symbols that are needed for dynamic
linking of the shared object. The symbols in that section form a subset
of the symbols contained in the normal symbol section (before
stripping). The .dynsym section is left untouched when stripping a file
as it's needed at runtime.
Current limitation
The current elf parsing implementation looks for the normal symbol
section (.symtab) to find the target symbol. If the .symtab is not
found, the parsing stops and returns that the symbol is not found. As
explained in the section above, a shared library might be stripped from
its normal symbol table but still have a dynamic symbol table (.dynsym)
containing the information of the target symbol. For example, on
distributions where the libc is stripped, the malloc symbol can only be
found in the .dynsym section
Solution
Look for the normal symbol section first, if it's found, used it to find
the symbol as usual. If the .symtab is absent, try to use the dynamic
symbol section instead.
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,140,2018-08-31T16:39:15Z,2018-08-31T20:41:00Z,2018-08-31T20:41:00Z,CLOSED,False,109,7,6,https://github.com/frdeso,elf: support dynamic symbol table lookup,1,[],https://github.com/lttng/lttng-tools/pull/140,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/140#issuecomment-417783521,"Background
There may have two symbol tables in a shared object and binary. The
normal symbol table (.symtab) and the dynamic symbol table (.dynsym).
The normal symbol table contains lots of information, such static
linking data, but none of it is used at runtime. That why some
shared libraries are stripped to reduce the size of the file.
Stripping an object files removes the entire .symtab section of the elf
file, amongst other things.
The dynamic symbol table contains symbols that are needed for dynamic
linking of the shared object. The symbols in that section form a subset
of the symbols contained in the normal symbol section (before
stripping). The .dynsym section is left untouched when stripping a file
as it's needed at runtime.
Current limitation
The current elf parsing implementation looks for the normal symbol
section (.symtab) to find the target symbol. If the .symtab is not
found, the parsing stops and returns that the symbol is not found. As
explained in the section above, a shared library might be stripped from
its normal symbol table but still have a dynamic symbol table (.dynsym)
containing the information of the target symbol. For example, on
distributions where the libc is stripped, the malloc symbol can only be
found in the .dynsym section
Solution
Look for the normal symbol section first, if it's found, used it to find
the symbol as usual. If the .symtab is absent, try to use the dynamic
symbol section instead.
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com","Merged, thanks for the great explanation!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,141,2018-09-05T03:47:35Z,2018-09-06T21:14:21Z,2018-09-06T21:14:21Z,CLOSED,False,11,5,2,https://github.com/frdeso,Missing frame pointer for callstack test on some compiler,1,[],https://github.com/lttng/lttng-tools/pull/141,https://github.com/frdeso,1,https://github.com/lttng/lttng-tools/pull/141,"The callstack testcase fails when the testapp is built with gcc 8. This
is because GCC8 may not emit frame pointers even when the
-fno-omit-frame-pointer is used.
To prevent that we manually mark these functions with optimization level
0.
On Clang we also need to include the -mno-omit-leaf-frame-pointer flag
along side with the existing -fno-omit-frame-pointer to ensure that
frame pointers are emitted
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com","The callstack testcase fails when the testapp is built with gcc 8. This
is because GCC8 may not emit frame pointers even when the
-fno-omit-frame-pointer is used.
To prevent that we manually mark these functions with optimization level
0.
On Clang we also need to include the -mno-omit-leaf-frame-pointer flag
along side with the existing -fno-omit-frame-pointer to ensure that
frame pointers are emitted
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,141,2018-09-05T03:47:35Z,2018-09-06T21:14:21Z,2018-09-06T21:14:21Z,CLOSED,False,11,5,2,https://github.com/frdeso,Missing frame pointer for callstack test on some compiler,1,[],https://github.com/lttng/lttng-tools/pull/141,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/141#issuecomment-419243519,"The callstack testcase fails when the testapp is built with gcc 8. This
is because GCC8 may not emit frame pointers even when the
-fno-omit-frame-pointer is used.
To prevent that we manually mark these functions with optimization level
0.
On Clang we also need to include the -mno-omit-leaf-frame-pointer flag
along side with the existing -fno-omit-frame-pointer to ensure that
frame pointers are emitted
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com","Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,142,2018-09-07T14:43:55Z,2018-09-07T16:08:52Z,2018-09-07T16:08:52Z,CLOSED,False,3,1,1,https://github.com/frdeso,Fix: Memory leak on run_as worker restart error path,1,[],https://github.com/lttng/lttng-tools/pull/142,https://github.com/frdeso,1,https://github.com/lttng/lttng-tools/pull/142,"Reported-by: Coverity (1395614) Resource leak
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com","Reported-by: Coverity (1395614) Resource leak
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,142,2018-09-07T14:43:55Z,2018-09-07T16:08:52Z,2018-09-07T16:08:52Z,CLOSED,False,3,1,1,https://github.com/frdeso,Fix: Memory leak on run_as worker restart error path,1,[],https://github.com/lttng/lttng-tools/pull/142,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/142#issuecomment-419488352,"Reported-by: Coverity (1395614) Resource leak
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com","Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,143,2018-11-08T21:43:46Z,2018-11-16T22:36:10Z,2018-11-16T22:36:11Z,CLOSED,False,154,70,7,https://github.com/eepp,Update man pages for 2.11,10,['docs'],https://github.com/lttng/lttng-tools/pull/143,https://github.com/eepp,1,https://github.com/lttng/lttng-tools/pull/143,,,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,143,2018-11-08T21:43:46Z,2018-11-16T22:36:10Z,2018-11-16T22:36:11Z,CLOSED,False,154,70,7,https://github.com/eepp,Update man pages for 2.11,10,['docs'],https://github.com/lttng/lttng-tools/pull/143,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/143#issuecomment-439550285,,"Merged in master and stable-2.11, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,144,2018-11-20T20:24:13Z,2018-11-21T19:01:57Z,2018-11-21T19:24:53Z,CLOSED,False,195,0,5,https://github.com/frdeso,Prevent channel buffer allocation larger than memory,1,[],https://github.com/lttng/lttng-tools/pull/144,https://github.com/frdeso,1,https://github.com/lttng/lttng-tools/pull/144,"Background
Until recently (lttng-modules commit 1f0ab1e) it was possible to trigger
an Out-Of-Memory crash by creating a kernel channel buffer larger than
the currently usable memory on the system. The following commands was
triggering the issue on my laptop:
lttng create
lttng enable-channel -k --subbuf-size=100G --num-subbuf=1 chan0
The lttng-modules commit 1f0ab1e adds a verification based on an
estimate to prevent this from happening. Since this kernel tracer sanity
check is based on an estimate, it would safer to do a similar check on
the session daemon side.
Approach
Use the /proc/meminfo procfile to get an estimate of the current size
of available memory (using MemAvailable). The MemAvailable field was
added in the Linux kernel 3.14, so if it's absent we fallback to
verifying that the requested buffer is smaller than the physical memory
on the system.
Side effect
This patch has the interesting side effect to alerting the user with an
error that buffer allocation has failed because of memory availability
in both --kernel and --userspace channel creation.
Drawback
The fallback check on older kernels is imperfect and is only to prevent
obvious user errors.
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com","Background
Until recently (lttng-modules commit 1f0ab1e) it was possible to trigger
an Out-Of-Memory crash by creating a kernel channel buffer larger than
the currently usable memory on the system. The following commands was
triggering the issue on my laptop:
lttng create
lttng enable-channel -k --subbuf-size=100G --num-subbuf=1 chan0
The lttng-modules commit 1f0ab1e adds a verification based on an
estimate to prevent this from happening. Since this kernel tracer sanity
check is based on an estimate, it would safer to do a similar check on
the session daemon side.
Approach
Use the /proc/meminfo procfile to get an estimate of the current size
of available memory (using MemAvailable). The MemAvailable field was
added in the Linux kernel 3.14, so if it's absent we fallback to
verifying that the requested buffer is smaller than the physical memory
on the system.
Side effect
This patch has the interesting side effect to alerting the user with an
error that buffer allocation has failed because of memory availability
in both --kernel and --userspace channel creation.
Drawback
The fallback check on older kernels is imperfect and is only to prevent
obvious user errors.
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,145,2018-11-21T14:51:54Z,2018-12-12T02:37:32Z,2018-12-12T02:37:32Z,CLOSED,False,2,4,3,https://github.com/frdeso,Fix minor clang warnings,2,[],https://github.com/lttng/lttng-tools/pull/145,https://github.com/frdeso,1,https://github.com/lttng/lttng-tools/pull/145,,,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,145,2018-11-21T14:51:54Z,2018-12-12T02:37:32Z,2018-12-12T02:37:32Z,CLOSED,False,2,4,3,https://github.com/frdeso,Fix minor clang warnings,2,[],https://github.com/lttng/lttng-tools/pull/145,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/145#issuecomment-446439986,,"Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,146,2018-11-21T21:44:56Z,2019-04-25T18:43:28Z,2019-04-25T18:43:28Z,CLOSED,False,220,0,6,https://github.com/frdeso,Prevent channel buffer allocation larger than memory,1,[],https://github.com/lttng/lttng-tools/pull/146,https://github.com/frdeso,1,https://github.com/lttng/lttng-tools/pull/146,"Background
Until recently (before lttng-modules commit 1f0ab1e) it was possible to
trigger an Out-Of-Memory crash by creating a kernel channel buffer
larger than the currently usable memory on the system. The following
commands was triggering the issue on my laptop:
lttng create
lttng enable-channel -k --subbuf-size=100G --num-subbuf=1 chan0
The lttng-modules commit 1f0ab1e adds a verification based on an
estimate to prevent this from happening. Since this kernel tracer sanity
check is based on an estimate, it would safer to do a similar check on
the session daemon side.
Approach
Verify that there is enough memory available on the system to do all the
allocations needed to enable the channel. If the available memory is
insufficient for the buffer allocation, return an error to the user
without trying to allocate the buffers.
Use the /proc/meminfo procfile to get an estimate of the current size
of available memory (using MemAvailable). The MemAvailable field was
added in the Linux kernel 3.14, so if it's absent, fallback to verifying
that the requested buffer is smaller than the physical memory on the
system.
Compute the size of the requested buffers using the following equation:
requested_memory = number_subbuffer * size_subbuffer * number_cpu
The following error is returned to the command line user:
lttng enable-channel -k --subbuf-size=100G --num-subbuf=1 chan0
Error: Channel chan0: Not enough memory (session auto-20181121-161146)
Side effect
This patch has the interesting side effect to alerting the user with an
error that buffer allocation has failed because of memory availability
in both --kernel and --userspace channel creation.
Drawback
The fallback check on older kernels is imperfect and is only to prevent
obvious user errors.
Note
In the future, there might be a need for a way to deactivate this check
(by using an environment variable) if a case arises where
/proc/meminfo doesn't accurately reflect the state of memory for a
particular use case.
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com","Background
Until recently (before lttng-modules commit 1f0ab1e) it was possible to
trigger an Out-Of-Memory crash by creating a kernel channel buffer
larger than the currently usable memory on the system. The following
commands was triggering the issue on my laptop:
lttng create
lttng enable-channel -k --subbuf-size=100G --num-subbuf=1 chan0
The lttng-modules commit 1f0ab1e adds a verification based on an
estimate to prevent this from happening. Since this kernel tracer sanity
check is based on an estimate, it would safer to do a similar check on
the session daemon side.
Approach
Verify that there is enough memory available on the system to do all the
allocations needed to enable the channel. If the available memory is
insufficient for the buffer allocation, return an error to the user
without trying to allocate the buffers.
Use the /proc/meminfo procfile to get an estimate of the current size
of available memory (using MemAvailable). The MemAvailable field was
added in the Linux kernel 3.14, so if it's absent, fallback to verifying
that the requested buffer is smaller than the physical memory on the
system.
Compute the size of the requested buffers using the following equation:
requested_memory = number_subbuffer * size_subbuffer * number_cpu
The following error is returned to the command line user:
lttng enable-channel -k --subbuf-size=100G --num-subbuf=1 chan0
Error: Channel chan0: Not enough memory (session auto-20181121-161146)
Side effect
This patch has the interesting side effect to alerting the user with an
error that buffer allocation has failed because of memory availability
in both --kernel and --userspace channel creation.
Drawback
The fallback check on older kernels is imperfect and is only to prevent
obvious user errors.
Note
In the future, there might be a need for a way to deactivate this check
(by using an environment variable) if a case arises where
/proc/meminfo doesn't accurately reflect the state of memory for a
particular use case.
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,146,2018-11-21T21:44:56Z,2019-04-25T18:43:28Z,2019-04-25T18:43:28Z,CLOSED,False,220,0,6,https://github.com/frdeso,Prevent channel buffer allocation larger than memory,1,[],https://github.com/lttng/lttng-tools/pull/146,https://github.com/frdeso,2,https://github.com/lttng/lttng-tools/pull/146#issuecomment-445961987,"Background
Until recently (before lttng-modules commit 1f0ab1e) it was possible to
trigger an Out-Of-Memory crash by creating a kernel channel buffer
larger than the currently usable memory on the system. The following
commands was triggering the issue on my laptop:
lttng create
lttng enable-channel -k --subbuf-size=100G --num-subbuf=1 chan0
The lttng-modules commit 1f0ab1e adds a verification based on an
estimate to prevent this from happening. Since this kernel tracer sanity
check is based on an estimate, it would safer to do a similar check on
the session daemon side.
Approach
Verify that there is enough memory available on the system to do all the
allocations needed to enable the channel. If the available memory is
insufficient for the buffer allocation, return an error to the user
without trying to allocate the buffers.
Use the /proc/meminfo procfile to get an estimate of the current size
of available memory (using MemAvailable). The MemAvailable field was
added in the Linux kernel 3.14, so if it's absent, fallback to verifying
that the requested buffer is smaller than the physical memory on the
system.
Compute the size of the requested buffers using the following equation:
requested_memory = number_subbuffer * size_subbuffer * number_cpu
The following error is returned to the command line user:
lttng enable-channel -k --subbuf-size=100G --num-subbuf=1 chan0
Error: Channel chan0: Not enough memory (session auto-20181121-161146)
Side effect
This patch has the interesting side effect to alerting the user with an
error that buffer allocation has failed because of memory availability
in both --kernel and --userspace channel creation.
Drawback
The fallback check on older kernels is imperfect and is only to prevent
obvious user errors.
Note
In the future, there might be a need for a way to deactivate this check
(by using an environment variable) if a case arises where
/proc/meminfo doesn't accurately reflect the state of memory for a
particular use case.
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com",Okay I just saw you message about returning an int and a out-parameter. I am doing that right away.,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,146,2018-11-21T21:44:56Z,2019-04-25T18:43:28Z,2019-04-25T18:43:28Z,CLOSED,False,220,0,6,https://github.com/frdeso,Prevent channel buffer allocation larger than memory,1,[],https://github.com/lttng/lttng-tools/pull/146,https://github.com/jgalar,3,https://github.com/lttng/lttng-tools/pull/146#issuecomment-486792237,"Background
Until recently (before lttng-modules commit 1f0ab1e) it was possible to
trigger an Out-Of-Memory crash by creating a kernel channel buffer
larger than the currently usable memory on the system. The following
commands was triggering the issue on my laptop:
lttng create
lttng enable-channel -k --subbuf-size=100G --num-subbuf=1 chan0
The lttng-modules commit 1f0ab1e adds a verification based on an
estimate to prevent this from happening. Since this kernel tracer sanity
check is based on an estimate, it would safer to do a similar check on
the session daemon side.
Approach
Verify that there is enough memory available on the system to do all the
allocations needed to enable the channel. If the available memory is
insufficient for the buffer allocation, return an error to the user
without trying to allocate the buffers.
Use the /proc/meminfo procfile to get an estimate of the current size
of available memory (using MemAvailable). The MemAvailable field was
added in the Linux kernel 3.14, so if it's absent, fallback to verifying
that the requested buffer is smaller than the physical memory on the
system.
Compute the size of the requested buffers using the following equation:
requested_memory = number_subbuffer * size_subbuffer * number_cpu
The following error is returned to the command line user:
lttng enable-channel -k --subbuf-size=100G --num-subbuf=1 chan0
Error: Channel chan0: Not enough memory (session auto-20181121-161146)
Side effect
This patch has the interesting side effect to alerting the user with an
error that buffer allocation has failed because of memory availability
in both --kernel and --userspace channel creation.
Drawback
The fallback check on older kernels is imperfect and is only to prevent
obvious user errors.
Note
In the future, there might be a need for a way to deactivate this check
(by using an environment variable) if a case arises where
/proc/meminfo doesn't accurately reflect the state of memory for a
particular use case.
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com","Just realized I never closed this. It's merged in the master and stable-2.11 branches.
Thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,147,2018-11-24T00:21:44Z,2018-12-12T02:36:43Z,2018-12-12T02:36:43Z,CLOSED,False,111,4,2,https://github.com/frdeso,Userspace probe: add error messages on common mistakes,3,[],https://github.com/lttng/lttng-tools/pull/147,https://github.com/frdeso,1,https://github.com/lttng/lttng-tools/pull/147,,,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,147,2018-11-24T00:21:44Z,2018-12-12T02:36:43Z,2018-12-12T02:36:43Z,CLOSED,False,111,4,2,https://github.com/frdeso,Userspace probe: add error messages on common mistakes,3,[],https://github.com/lttng/lttng-tools/pull/147,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/147#issuecomment-446439868,,"Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,148,2018-11-28T23:05:32Z,2018-12-12T02:37:18Z,2018-12-12T02:37:18Z,CLOSED,False,5,2,1,https://github.com/frdeso,Cleanup: consumer socket creation debug msg always prints fd:-1,1,[],https://github.com/lttng/lttng-tools/pull/148,https://github.com/frdeso,1,https://github.com/lttng/lttng-tools/pull/148,"Set the fd to -1 after we print the debug message.
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com","Set the fd to -1 after we print the debug message.
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,148,2018-11-28T23:05:32Z,2018-12-12T02:37:18Z,2018-12-12T02:37:18Z,CLOSED,False,5,2,1,https://github.com/frdeso,Cleanup: consumer socket creation debug msg always prints fd:-1,1,[],https://github.com/lttng/lttng-tools/pull/148,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/148#issuecomment-446439953,"Set the fd to -1 after we print the debug message.
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com","Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,149,2018-12-04T16:40:25Z,,2018-12-10T23:54:49Z,OPEN,False,146,127,5,https://github.com/frdeso,Add relay snapshot test scenario with low bandwidth on data socket,3,[],https://github.com/lttng/lttng-tools/pull/149,https://github.com/frdeso,1,https://github.com/lttng/lttng-tools/pull/149,"This test highlights a race in the relay snapshot mode. This testcase triggers a
race where the trace is unreadable because tracing is stopped eventhough
data is still in flight.
This PR only provides a testcase/reproducer and does not provide a fix.
This PR also includes some cleanups of the snapshot testcases.","This test highlights a race in the relay snapshot mode. This testcase triggers a
race where the trace is unreadable because tracing is stopped eventhough
data is still in flight.
This PR only provides a testcase/reproducer and does not provide a fix.
This PR also includes some cleanups of the snapshot testcases.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,149,2018-12-04T16:40:25Z,,2018-12-10T23:54:49Z,OPEN,False,146,127,5,https://github.com/frdeso,Add relay snapshot test scenario with low bandwidth on data socket,3,[],https://github.com/lttng/lttng-tools/pull/149,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/149#issuecomment-445954204,"This test highlights a race in the relay snapshot mode. This testcase triggers a
race where the trace is unreadable because tracing is stopped eventhough
data is still in flight.
This PR only provides a testcase/reproducer and does not provide a fix.
This PR also includes some cleanups of the snapshot testcases.",@PSRCode Are you okay with the first two commits (cleanup)? I could merge those and wait for a fix to merge the new test.,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,149,2018-12-04T16:40:25Z,,2018-12-10T23:54:49Z,OPEN,False,146,127,5,https://github.com/frdeso,Add relay snapshot test scenario with low bandwidth on data socket,3,[],https://github.com/lttng/lttng-tools/pull/149,https://github.com/PSRCode,3,https://github.com/lttng/lttng-tools/pull/149#issuecomment-445959425,"This test highlights a race in the relay snapshot mode. This testcase triggers a
race where the trace is unreadable because tracing is stopped eventhough
data is still in flight.
This PR only provides a testcase/reproducer and does not provide a fix.
This PR also includes some cleanups of the snapshot testcases.","@jgalar first two looks good. Go ahead.
@frdeso  Still waiting for feedback regarding the commit message of the test.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,149,2018-12-04T16:40:25Z,,2018-12-10T23:54:49Z,OPEN,False,146,127,5,https://github.com/frdeso,Add relay snapshot test scenario with low bandwidth on data socket,3,[],https://github.com/lttng/lttng-tools/pull/149,https://github.com/frdeso,4,https://github.com/lttng/lttng-tools/pull/149#issuecomment-446020135,"This test highlights a race in the relay snapshot mode. This testcase triggers a
race where the trace is unreadable because tracing is stopped eventhough
data is still in flight.
This PR only provides a testcase/reproducer and does not provide a fix.
This PR also includes some cleanups of the snapshot testcases.",I updated the commit message but we will need to update it again when we come up with a fix.,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,150,2018-12-13T03:09:34Z,2019-10-22T19:02:22Z,2019-10-22T19:02:22Z,CLOSED,False,2,2,2,https://github.com/parr0tr1ver,Fix: compile fails for x32 arch,1,[],https://github.com/lttng/lttng-tools/pull/150,https://github.com/parr0tr1ver,1,https://github.com/lttng/lttng-tools/pull/150,"It fails to compile for x32 arch:
| .../src/common/utils.c: Assembler messages:
| .../src/common/utils.c:1026: Error: register type mismatch for bsr' | .../src/common/utils.c:1028: Error: operand type mismatch for movq'
Add macro check that not to define that fls_u64() for x32.
Signed-off-by: Kai Kang kai.kang@windriver.com","It fails to compile for x32 arch:
| .../src/common/utils.c: Assembler messages:
| .../src/common/utils.c:1026: Error: register type mismatch for bsr' | .../src/common/utils.c:1028: Error: operand type mismatch for movq'
Add macro check that not to define that fls_u64() for x32.
Signed-off-by: Kai Kang kai.kang@windriver.com",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,150,2018-12-13T03:09:34Z,2019-10-22T19:02:22Z,2019-10-22T19:02:22Z,CLOSED,False,2,2,2,https://github.com/parr0tr1ver,Fix: compile fails for x32 arch,1,[],https://github.com/lttng/lttng-tools/pull/150,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/150#issuecomment-545107091,"It fails to compile for x32 arch:
| .../src/common/utils.c: Assembler messages:
| .../src/common/utils.c:1026: Error: register type mismatch for bsr' | .../src/common/utils.c:1028: Error: operand type mismatch for movq'
Add macro check that not to define that fls_u64() for x32.
Signed-off-by: Kai Kang kai.kang@windriver.com","Adapted to use __LP64__ and merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,151,2019-04-04T19:22:44Z,2019-04-25T18:42:25Z,2019-04-25T18:42:25Z,CLOSED,False,7,7,1,https://github.com/tahini,doc: Add reference to USDT probes,1,[],https://github.com/lttng/lttng-tools/pull/151,https://github.com/tahini,1,https://github.com/lttng/lttng-tools/pull/151,"SDT probes are known by most as USDT probes. People may be looking for them
by that name.
Signed-off-by: Genevi√®ve Bastien gbastien+lttng@versatic.net","SDT probes are known by most as USDT probes. People may be looking for them
by that name.
Signed-off-by: Genevi√®ve Bastien gbastien+lttng@versatic.net",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,151,2019-04-04T19:22:44Z,2019-04-25T18:42:25Z,2019-04-25T18:42:25Z,CLOSED,False,7,7,1,https://github.com/tahini,doc: Add reference to USDT probes,1,[],https://github.com/lttng/lttng-tools/pull/151,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/151#issuecomment-486791887,"SDT probes are known by most as USDT probes. People may be looking for them
by that name.
Signed-off-by: Genevi√®ve Bastien gbastien+lttng@versatic.net",Merged in master and stable-2.11. Thanks!,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,152,2019-06-17T17:03:19Z,2019-06-18T18:18:27Z,2019-06-18T18:32:47Z,CLOSED,False,0,1,1,https://github.com/tahini,Fix error when listing sessions with no session,1,[],https://github.com/lttng/lttng-tools/pull/152,https://github.com/tahini,1,https://github.com/lttng/lttng-tools/pull/152,"Fixes https://bugs.lttng.org/issues/1188
Signed-off-by: Genevi√®ve Bastien gbastien@versatic.net","Fixes https://bugs.lttng.org/issues/1188
Signed-off-by: Genevi√®ve Bastien gbastien@versatic.net",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,152,2019-06-17T17:03:19Z,2019-06-18T18:18:27Z,2019-06-18T18:32:47Z,CLOSED,False,0,1,1,https://github.com/tahini,Fix error when listing sessions with no session,1,[],https://github.com/lttng/lttng-tools/pull/152,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/152#issuecomment-503252496,"Fixes https://bugs.lttng.org/issues/1188
Signed-off-by: Genevi√®ve Bastien gbastien@versatic.net","Merged with an expanded commit message, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,153,2019-06-19T15:01:05Z,,2019-06-19T15:01:22Z,OPEN,False,1,0,1,https://github.com/tahini,Add lttng-module's kallsyms probe module,1,[],https://github.com/lttng/lttng-tools/pull/153,https://github.com/tahini,1,https://github.com/lttng/lttng-tools/pull/153,"This adds the lttng-probe-kallsyms kernel module to the kernel modules to load when the session daemon starts.
Signed-off-by: Genevi√®ve Bastien gbastien@versatic.net","This adds the lttng-probe-kallsyms kernel module to the kernel modules to load when the session daemon starts.
Signed-off-by: Genevi√®ve Bastien gbastien@versatic.net",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,153,2019-06-19T15:01:05Z,,2019-06-19T15:01:22Z,OPEN,False,1,0,1,https://github.com/tahini,Add lttng-module's kallsyms probe module,1,[],https://github.com/lttng/lttng-tools/pull/153,https://github.com/tahini,2,https://github.com/lttng/lttng-tools/pull/153#issuecomment-503598815,"This adds the lttng-probe-kallsyms kernel module to the kernel modules to load when the session daemon starts.
Signed-off-by: Genevi√®ve Bastien gbastien@versatic.net",This goes the this lttng-modules's PR lttng/lttng-modules#21,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,154,2019-09-05T16:54:54Z,2019-09-08T15:18:09Z,2019-09-08T15:18:10Z,CLOSED,False,5,7,2,https://github.com/ffontaine,Fix: namespace our gettid wrapper,1,[],https://github.com/lttng/lttng-tools/pull/154,https://github.com/ffontaine,1,https://github.com/lttng/lttng-tools/pull/154,"Since glibc 2.30, a gettid wrapper was added that conflicts with the
static declaration. Namespace the wrapper so there is no conflict.
Fixes:

http://autobuild.buildroot.org/results/8680c5a355b226cf978397615cbe5df1c5f8c656

Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com","Since glibc 2.30, a gettid wrapper was added that conflicts with the
static declaration. Namespace the wrapper so there is no conflict.
Fixes:

http://autobuild.buildroot.org/results/8680c5a355b226cf978397615cbe5df1c5f8c656

Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,154,2019-09-05T16:54:54Z,2019-09-08T15:18:09Z,2019-09-08T15:18:10Z,CLOSED,False,5,7,2,https://github.com/ffontaine,Fix: namespace our gettid wrapper,1,[],https://github.com/lttng/lttng-tools/pull/154,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/154#issuecomment-529212472,"Since glibc 2.30, a gettid wrapper was added that conflicts with the
static declaration. Namespace the wrapper so there is no conflict.
Fixes:

http://autobuild.buildroot.org/results/8680c5a355b226cf978397615cbe5df1c5f8c656

Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com","Closing as this was merged in master, stable-2.11 and stable-2.10 on September 5th.
See 557ac9b
Thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,155,2019-09-27T19:27:19Z,2019-10-01T20:11:09Z,2019-10-01T20:11:09Z,CLOSED,False,3,0,1,https://github.com/frdeso,Tests: Fix: Segfault in `test_utils_expand_path()`,1,[],https://github.com/lttng/lttng-tools/pull/155,https://github.com/frdeso,1,https://github.com/lttng/lttng-tools/pull/155,"Background
I have a file named ""/a"" on my file system (don't ask why).
Issue
While running the test_utils_expand_path test case on my machine, I
get a Segfault. Here is the gdb backtrace:
#0  __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:62
#1  0x0000555555559eb7 in expand_double_slashes_dot_and_dotdot (path=0x0) at utils.c:223
#2  0x000055555555a2d8 in _utils_expand_path (path=0x55555556b250 ""/a/b/c/d/e"", keep_symlink=true) at utils.c:384
#3  0x000055555555a408 in utils_expand_path (path=0x55555556b250 ""/a/b/c/d/e"") at utils.c:423
#4  0x000055555555859e in test_utils_expand_path () at test_utils_expand_path.c:291
#5  0x00005555555589b0 in main (argc=1, argv=0x7fffffffe5e8) at test_utils_expand_path.c:352
I get this backtrace because the function utils_partial_realpath()
returns NULL when it tries to expand the ""/a/b/c/d/e"" path and realize
that it could not exist since ""/a"" is a file and not a directory.
Anyways, the returned NULL pointer is ignored and directly used in the
expand_double_slashes_dot_and_dotdot() function right after.
This configuration (""/a"" being a file) is expected to fail but not to segfault.
It could be reproduce in a real scenario when creating directory
structures.
Solution
Return an error if utils_partial_realpath() returns NULL.
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com","Background
I have a file named ""/a"" on my file system (don't ask why).
Issue
While running the test_utils_expand_path test case on my machine, I
get a Segfault. Here is the gdb backtrace:
#0  __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:62
#1  0x0000555555559eb7 in expand_double_slashes_dot_and_dotdot (path=0x0) at utils.c:223
#2  0x000055555555a2d8 in _utils_expand_path (path=0x55555556b250 ""/a/b/c/d/e"", keep_symlink=true) at utils.c:384
#3  0x000055555555a408 in utils_expand_path (path=0x55555556b250 ""/a/b/c/d/e"") at utils.c:423
#4  0x000055555555859e in test_utils_expand_path () at test_utils_expand_path.c:291
#5  0x00005555555589b0 in main (argc=1, argv=0x7fffffffe5e8) at test_utils_expand_path.c:352
I get this backtrace because the function utils_partial_realpath()
returns NULL when it tries to expand the ""/a/b/c/d/e"" path and realize
that it could not exist since ""/a"" is a file and not a directory.
Anyways, the returned NULL pointer is ignored and directly used in the
expand_double_slashes_dot_and_dotdot() function right after.
This configuration (""/a"" being a file) is expected to fail but not to segfault.
It could be reproduce in a real scenario when creating directory
structures.
Solution
Return an error if utils_partial_realpath() returns NULL.
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,155,2019-09-27T19:27:19Z,2019-10-01T20:11:09Z,2019-10-01T20:11:09Z,CLOSED,False,3,0,1,https://github.com/frdeso,Tests: Fix: Segfault in `test_utils_expand_path()`,1,[],https://github.com/lttng/lttng-tools/pull/155,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/155#issuecomment-537208254,"Background
I have a file named ""/a"" on my file system (don't ask why).
Issue
While running the test_utils_expand_path test case on my machine, I
get a Segfault. Here is the gdb backtrace:
#0  __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:62
#1  0x0000555555559eb7 in expand_double_slashes_dot_and_dotdot (path=0x0) at utils.c:223
#2  0x000055555555a2d8 in _utils_expand_path (path=0x55555556b250 ""/a/b/c/d/e"", keep_symlink=true) at utils.c:384
#3  0x000055555555a408 in utils_expand_path (path=0x55555556b250 ""/a/b/c/d/e"") at utils.c:423
#4  0x000055555555859e in test_utils_expand_path () at test_utils_expand_path.c:291
#5  0x00005555555589b0 in main (argc=1, argv=0x7fffffffe5e8) at test_utils_expand_path.c:352
I get this backtrace because the function utils_partial_realpath()
returns NULL when it tries to expand the ""/a/b/c/d/e"" path and realize
that it could not exist since ""/a"" is a file and not a directory.
Anyways, the returned NULL pointer is ignored and directly used in the
expand_double_slashes_dot_and_dotdot() function right after.
This configuration (""/a"" being a file) is expected to fail but not to segfault.
It could be reproduce in a real scenario when creating directory
structures.
Solution
Return an error if utils_partial_realpath() returns NULL.
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com","Merged in master and stable-2.11, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,156,2019-09-27T19:28:15Z,2019-10-08T17:29:55Z,2019-10-08T17:29:55Z,CLOSED,False,1,0,1,https://github.com/frdeso,Coverity fixes,1,[],https://github.com/lttng/lttng-tools/pull/156,https://github.com/frdeso,1,https://github.com/lttng/lttng-tools/pull/156,,,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,156,2019-09-27T19:28:15Z,2019-10-08T17:29:55Z,2019-10-08T17:29:55Z,CLOSED,False,1,0,1,https://github.com/frdeso,Coverity fixes,1,[],https://github.com/lttng/lttng-tools/pull/156,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/156#issuecomment-537751901,,"All non-RFC patches were merged in master and stable-2.11.
Will review the rest ASAP.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,156,2019-09-27T19:28:15Z,2019-10-08T17:29:55Z,2019-10-08T17:29:55Z,CLOSED,False,1,0,1,https://github.com/frdeso,Coverity fixes,1,[],https://github.com/lttng/lttng-tools/pull/156,https://github.com/jgalar,3,https://github.com/lttng/lttng-tools/pull/156#issuecomment-538521099,,Thanks for rebasing üëç,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,156,2019-09-27T19:28:15Z,2019-10-08T17:29:55Z,2019-10-08T17:29:55Z,CLOSED,False,1,0,1,https://github.com/frdeso,Coverity fixes,1,[],https://github.com/lttng/lttng-tools/pull/156,https://github.com/frdeso,4,https://github.com/lttng/lttng-tools/pull/156#issuecomment-538534771,,I added a commit too.,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,156,2019-09-27T19:28:15Z,2019-10-08T17:29:55Z,2019-10-08T17:29:55Z,CLOSED,False,1,0,1,https://github.com/frdeso,Coverity fixes,1,[],https://github.com/lttng/lttng-tools/pull/156,https://github.com/jgalar,5,https://github.com/lttng/lttng-tools/pull/156#issuecomment-538550309,,"All merged except for
RFC: Fix: relayd: Dereference after null check",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,156,2019-09-27T19:28:15Z,2019-10-08T17:29:55Z,2019-10-08T17:29:55Z,CLOSED,False,1,0,1,https://github.com/frdeso,Coverity fixes,1,[],https://github.com/lttng/lttng-tools/pull/156,https://github.com/jgalar,6,https://github.com/lttng/lttng-tools/pull/156#issuecomment-539619531,,"Merged, thanks a lot!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,157,2019-10-09T13:35:20Z,2019-10-09T15:46:35Z,2019-10-09T15:46:35Z,CLOSED,False,3,2,1,https://github.com/frdeso,Fix: lttng-elf.c: dereferencing pointer before null check,1,[],https://github.com/lttng/lttng-tools/pull/157,https://github.com/frdeso,1,https://github.com/lttng/lttng-tools/pull/157,"Coverity report:
CID 1405899 (#1 of 1): Dereference before null check (REVERSE_INULL)
check_after_deref: Null-checking elf suggests that it may be null, but it has
already been dereferenced on all paths leading to the check.
Reported-by: Coverity (1405899) Dereference before null check
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com","Coverity report:
CID 1405899 (#1 of 1): Dereference before null check (REVERSE_INULL)
check_after_deref: Null-checking elf suggests that it may be null, but it has
already been dereferenced on all paths leading to the check.
Reported-by: Coverity (1405899) Dereference before null check
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,157,2019-10-09T13:35:20Z,2019-10-09T15:46:35Z,2019-10-09T15:46:35Z,CLOSED,False,3,2,1,https://github.com/frdeso,Fix: lttng-elf.c: dereferencing pointer before null check,1,[],https://github.com/lttng/lttng-tools/pull/157,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/157#issuecomment-540062004,"Coverity report:
CID 1405899 (#1 of 1): Dereference before null check (REVERSE_INULL)
check_after_deref: Null-checking elf suggests that it may be null, but it has
already been dereferenced on all paths leading to the check.
Reported-by: Coverity (1405899) Dereference before null check
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com","Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,158,2019-10-09T22:29:46Z,2019-10-24T00:21:46Z,2019-10-24T00:21:46Z,CLOSED,False,1549,3,29,https://github.com/mjeanson,Add kernel and userspace namespace contexts,10,[],https://github.com/lttng/lttng-tools/pull/158,https://github.com/mjeanson,1,https://github.com/lttng/lttng-tools/pull/158,,,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,158,2019-10-09T22:29:46Z,2019-10-24T00:21:46Z,2019-10-24T00:21:46Z,CLOSED,False,1549,3,29,https://github.com/mjeanson,Add kernel and userspace namespace contexts,10,[],https://github.com/lttng/lttng-tools/pull/158,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/158#issuecomment-545689227,,"Merged, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,159,2019-10-18T20:13:37Z,2019-10-18T20:55:08Z,2019-10-18T20:55:08Z,CLOSED,False,93,51,30,https://github.com/eepp,Update man page stuff,2,[],https://github.com/lttng/lttng-tools/pull/159,https://github.com/eepp,1,https://github.com/lttng/lttng-tools/pull/159,"Note that 0aee057 could apply to stable-2.10 (partially, as some man pages do not exist in 2.10), but the revision dates might not be right if changes were made for 2.10 specifically.
üôä","Note that 0aee057 could apply to stable-2.10 (partially, as some man pages do not exist in 2.10), but the revision dates might not be right if changes were made for 2.10 specifically.
üôä",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,159,2019-10-18T20:13:37Z,2019-10-18T20:55:08Z,2019-10-18T20:55:08Z,CLOSED,False,93,51,30,https://github.com/eepp,Update man page stuff,2,[],https://github.com/lttng/lttng-tools/pull/159,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/159#issuecomment-543941638,"Note that 0aee057 could apply to stable-2.10 (partially, as some man pages do not exist in 2.10), but the revision dates might not be right if changes were made for 2.10 specifically.
üôä",Ist merged in master and stable-2.11.,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,160,2019-11-13T15:12:26Z,2019-11-26T19:33:37Z,2019-11-26T19:33:37Z,CLOSED,False,34,0,2,https://github.com/frdeso,Fix: relayd: don't send streams if there is no metadata,1,[],https://github.com/lttng/lttng-tools/pull/160,https://github.com/frdeso,1,https://github.com/lttng/lttng-tools/pull/160,"Issue
When tracing short-live UST apps in per-pid mode, it happens that traces
are closed before we can send all the streams to the viewer. This can
place the viewer in an uncomfortable position where it is aware of data
streams of a trace but can't get the metadata stream to decode the
events.
Solution
Only send the data streams if we have the metadata stream or if the
metadata stream was already sent. This ensures that the viewer will
either have all the {data,metadata} streams or none of them.
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com","Issue
When tracing short-live UST apps in per-pid mode, it happens that traces
are closed before we can send all the streams to the viewer. This can
place the viewer in an uncomfortable position where it is aware of data
streams of a trace but can't get the metadata stream to decode the
events.
Solution
Only send the data streams if we have the metadata stream or if the
metadata stream was already sent. This ensures that the viewer will
either have all the {data,metadata} streams or none of them.
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,160,2019-11-13T15:12:26Z,2019-11-26T19:33:37Z,2019-11-26T19:33:37Z,CLOSED,False,34,0,2,https://github.com/frdeso,Fix: relayd: don't send streams if there is no metadata,1,[],https://github.com/lttng/lttng-tools/pull/160,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/160#issuecomment-558784782,"Issue
When tracing short-live UST apps in per-pid mode, it happens that traces
are closed before we can send all the streams to the viewer. This can
place the viewer in an uncomfortable position where it is aware of data
streams of a trace but can't get the metadata stream to decode the
events.
Solution
Only send the data streams if we have the metadata stream or if the
metadata stream was already sent. This ensures that the viewer will
either have all the {data,metadata} streams or none of them.
Signed-off-by: Francis Deslauriers francis.deslauriers@efficios.com",Merged in master and stable-2.11. Thanks!,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,161,2020-05-18T14:30:21Z,2020-06-16T21:21:48Z,2020-06-16T21:21:48Z,CLOSED,False,1,0,1,https://github.com/ovpanait,tests: gen-ust-events-ns/tp.h: Fix build with musl libc,1,[],https://github.com/lttng/lttng-tools/pull/161,https://github.com/ovpanait,1,https://github.com/lttng/lttng-tools/pull/161,"Fix the following build error with musl libc:
In file included from ../../../../../lttng-tools-2.12.0/tests/utils/testapp/gen-ust-events-ns/tp.h:14,
from ../../../../../lttng-tools-2.12.0/tests/utils/testapp/gen-ust-events-ns/tp.c:10:
../../../../../lttng-tools-2.12.0/tests/utils/testapp/gen-ust-events-ns/tp.h:17:10: error: unknown type name 'ino_t'; did you mean 'int8_t'?
17 |  TP_ARGS(ino_t, ns_ino),
|          ^~~~~
../../../../../lttng-tools-2.12.0/tests/utils/testapp/gen-ust-events-ns/tp.h:17:10: error: unknown type name 'ino_t'; did you mean 'int8_t'?
17 |  TP_ARGS(ino_t, ns_ino),
|          ^~~~~
../../../../../lttng-tools-2.12.0/tests/utils/testapp/gen-ust-events-ns/./tp.h:17:2: error: unknown type name 'ino_t'; did you mean 'int8_t'?
17 |  TP_ARGS(ino_t, ns_ino),
|  ^~~~~~~
../../../../../lttng-tools-2.12.0/tests/utils/testapp/gen-ust-events-ns/./tp.h:17:2: error: unknown type name 'ino_t'; did you mean 'int8_t'?
17 |  TP_ARGS(ino_t, ns_ino),
|  ^~~~~~~
Signed-off-by: Ovidiu Panait ovidiu.panait@windriver.com","Fix the following build error with musl libc:
In file included from ../../../../../lttng-tools-2.12.0/tests/utils/testapp/gen-ust-events-ns/tp.h:14,
from ../../../../../lttng-tools-2.12.0/tests/utils/testapp/gen-ust-events-ns/tp.c:10:
../../../../../lttng-tools-2.12.0/tests/utils/testapp/gen-ust-events-ns/tp.h:17:10: error: unknown type name 'ino_t'; did you mean 'int8_t'?
17 |  TP_ARGS(ino_t, ns_ino),
|          ^~~~~
../../../../../lttng-tools-2.12.0/tests/utils/testapp/gen-ust-events-ns/tp.h:17:10: error: unknown type name 'ino_t'; did you mean 'int8_t'?
17 |  TP_ARGS(ino_t, ns_ino),
|          ^~~~~
../../../../../lttng-tools-2.12.0/tests/utils/testapp/gen-ust-events-ns/./tp.h:17:2: error: unknown type name 'ino_t'; did you mean 'int8_t'?
17 |  TP_ARGS(ino_t, ns_ino),
|  ^~~~~~~
../../../../../lttng-tools-2.12.0/tests/utils/testapp/gen-ust-events-ns/./tp.h:17:2: error: unknown type name 'ino_t'; did you mean 'int8_t'?
17 |  TP_ARGS(ino_t, ns_ino),
|  ^~~~~~~
Signed-off-by: Ovidiu Panait ovidiu.panait@windriver.com",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,161,2020-05-18T14:30:21Z,2020-06-16T21:21:48Z,2020-06-16T21:21:48Z,CLOSED,False,1,0,1,https://github.com/ovpanait,tests: gen-ust-events-ns/tp.h: Fix build with musl libc,1,[],https://github.com/lttng/lttng-tools/pull/161,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/161#issuecomment-645018665,"Fix the following build error with musl libc:
In file included from ../../../../../lttng-tools-2.12.0/tests/utils/testapp/gen-ust-events-ns/tp.h:14,
from ../../../../../lttng-tools-2.12.0/tests/utils/testapp/gen-ust-events-ns/tp.c:10:
../../../../../lttng-tools-2.12.0/tests/utils/testapp/gen-ust-events-ns/tp.h:17:10: error: unknown type name 'ino_t'; did you mean 'int8_t'?
17 |  TP_ARGS(ino_t, ns_ino),
|          ^~~~~
../../../../../lttng-tools-2.12.0/tests/utils/testapp/gen-ust-events-ns/tp.h:17:10: error: unknown type name 'ino_t'; did you mean 'int8_t'?
17 |  TP_ARGS(ino_t, ns_ino),
|          ^~~~~
../../../../../lttng-tools-2.12.0/tests/utils/testapp/gen-ust-events-ns/./tp.h:17:2: error: unknown type name 'ino_t'; did you mean 'int8_t'?
17 |  TP_ARGS(ino_t, ns_ino),
|  ^~~~~~~
../../../../../lttng-tools-2.12.0/tests/utils/testapp/gen-ust-events-ns/./tp.h:17:2: error: unknown type name 'ino_t'; did you mean 'int8_t'?
17 |  TP_ARGS(ino_t, ns_ino),
|  ^~~~~~~
Signed-off-by: Ovidiu Panait ovidiu.panait@windriver.com","Merged in master and stable-2.12, thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,162,2021-04-02T19:15:41Z,,2021-06-01T21:23:12Z,OPEN,False,3,0,1,https://github.com/ffontaine,configure.ac: add --disable-tests,1,[],https://github.com/lttng/lttng-tools/pull/162,https://github.com/ffontaine,1,https://github.com/lttng/lttng-tools/pull/162,"Allow the user to explicitly disable tests
Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com","Allow the user to explicitly disable tests
Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,162,2021-04-02T19:15:41Z,,2021-06-01T21:23:12Z,OPEN,False,3,0,1,https://github.com/ffontaine,configure.ac: add --disable-tests,1,[],https://github.com/lttng/lttng-tools/pull/162,https://github.com/jgalar,2,https://github.com/lttng/lttng-tools/pull/162#issuecomment-815044376,"Allow the user to explicitly disable tests
Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com",What is the rationale for this change?,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,162,2021-04-02T19:15:41Z,,2021-06-01T21:23:12Z,OPEN,False,3,0,1,https://github.com/ffontaine,configure.ac: add --disable-tests,1,[],https://github.com/lttng/lttng-tools/pull/162,https://github.com/ffontaine,3,https://github.com/lttng/lttng-tools/pull/162#issuecomment-815054828,"Allow the user to explicitly disable tests
Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com","A faster compilation time and avoiding build failures on downstream projects (such as buildroot). For example, we have the following build failure on riscv32 glibc toolchains because SYS_ppoll and  SYS_pselect6 are undeclared:
make[4]: Entering directory '/home/giuliobenetti/autobuild/run/instance-1/output-1/build/lttng-tools-2.12.3/tests/regression/kernel'
  CC       select_poll_epoll-select_poll_epoll.o
select_poll_epoll.c: In function 'ppoll_fds_buffer_overflow':
select_poll_epoll.c:408:16: error: 'SYS_ppoll' undeclared (first use in this function); did you mean 'SYS_tkill'?
  408 |  ret = syscall(SYS_ppoll, ufds, 100, NULL, NULL);
      |                ^~~~~~~~~
      |                SYS_tkill
select_poll_epoll.c: In function 'pselect_invalid_fd':
select_poll_epoll.c:488:16: error: 'SYS_pselect6' undeclared (first use in this function); did you mean 'SYS_semctl'?
  488 |  ret = syscall(SYS_pselect6, fd + 1, &rfds, NULL, NULL, NULL, NULL);
      |                ^~~~~~~~~~~~
      |                SYS_semctl

Full build log is available here: http://autobuild.buildroot.org/results/dd3/dd39188a7191efa512a51f18f4c34d9ee711a6a7/build-end.log",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,162,2021-04-02T19:15:41Z,,2021-06-01T21:23:12Z,OPEN,False,3,0,1,https://github.com/ffontaine,configure.ac: add --disable-tests,1,[],https://github.com/lttng/lttng-tools/pull/162,https://github.com/ffontaine,4,https://github.com/lttng/lttng-tools/pull/162#issuecomment-850155147,"Allow the user to explicitly disable tests
Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com",Do you have additional comments? An other option would be to disable lttng-tools on riscv32 if you don't want to support this architecture.,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,162,2021-04-02T19:15:41Z,,2021-06-01T21:23:12Z,OPEN,False,3,0,1,https://github.com/ffontaine,configure.ac: add --disable-tests,1,[],https://github.com/lttng/lttng-tools/pull/162,https://github.com/PSRCode,5,https://github.com/lttng/lttng-tools/pull/162#issuecomment-850440805,"Allow the user to explicitly disable tests
Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com","Hi,
While we do not officially support riscv32 (on our CI at least), considering only this tests compilation seems to be having problem we might want to look into ""porting"" them, instead of disabling them, and see if lttng break down anywhere else at runtime.
AFAIU risv32 uses __NR_ppoll_time64 and __NR_pselect6_time64. Would you be able to spin up a patch since you seems to  have a bit more context and might have a risv32 system laying somewhere?
That would be really helpful.
Cheers",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,162,2021-04-02T19:15:41Z,,2021-06-01T21:23:12Z,OPEN,False,3,0,1,https://github.com/ffontaine,configure.ac: add --disable-tests,1,[],https://github.com/lttng/lttng-tools/pull/162,https://github.com/ffontaine,6,https://github.com/lttng/lttng-tools/pull/162#issuecomment-850447623,"Allow the user to explicitly disable tests
Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com","Unfortunately, I have no riscv32 system. I'm just sending this patch to fix the failures raised by buildroot autobuilders.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,162,2021-04-02T19:15:41Z,,2021-06-01T21:23:12Z,OPEN,False,3,0,1,https://github.com/ffontaine,configure.ac: add --disable-tests,1,[],https://github.com/lttng/lttng-tools/pull/162,https://github.com/PSRCode,7,https://github.com/lttng/lttng-tools/pull/162#issuecomment-850478368,"Allow the user to explicitly disable tests
Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com","To be frank, disabling compilation of tests is not really fixing anything here neither for buildroot or lttng in regards to architecture support. You are simply pushing the ""problem"" under the rug.
Does buildroot run the test suite normally for projects? If not, then feel free to use this patch at buildroot level for now.
Still the patch does make sense in the context that we already disable tests if we are doing a partial build. Exposing --disable-tests to give direct control if needed does seems legitimate.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,162,2021-04-02T19:15:41Z,,2021-06-01T21:23:12Z,OPEN,False,3,0,1,https://github.com/ffontaine,configure.ac: add --disable-tests,1,[],https://github.com/lttng/lttng-tools/pull/162,https://github.com/arnout,8,https://github.com/lttng/lttng-tools/pull/162#issuecomment-852439965,"Allow the user to explicitly disable tests
Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com","In buildroot we don't run tests and also don't build them if it can be avoided. Tests often use features that are not available on niche architectures (even something simple as fork()) so disabling them is a quick-win to make it possible to use a package on such an architecture.
I have no idea why lttng uses syscall instead of simply libc's ppoll and pselect. If you use a direct syscall that uses time_t (or struct timespec), you should always check if the 64-bit version of that syscall is available and use it if it is. This makes sure that you have Y2038 support on all 32-bit architectures. But doing something like that is way too complicated for a drive-by contributor.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,162,2021-04-02T19:15:41Z,,2021-06-01T21:23:12Z,OPEN,False,3,0,1,https://github.com/ffontaine,configure.ac: add --disable-tests,1,[],https://github.com/lttng/lttng-tools/pull/162,https://github.com/PSRCode,9,https://github.com/lttng/lttng-tools/pull/162#issuecomment-852446512,"Allow the user to explicitly disable tests
Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com","Sure, I understand. Then, feel free to use this patch at buildroot level for now. Keep in mind that we do not offer any semblance of ""support"" for the riscv32 platform as of today.
We will get to it at some point.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,163,2021-05-13T18:44:57Z,2021-06-07T18:52:20Z,2022-05-15T20:00:45Z,CLOSED,False,26,125,9,https://github.com/orbea,Slibtool build fixes,5,[],https://github.com/lttng/lttng-tools/pull/163,https://github.com/orbea,1,https://github.com/lttng/lttng-tools/pull/163,"When building lttng-tools with slibtool (https://dev.midipix.org/cross/slibtool) it fails in many places.

Many of the tests in tests/unit/ fail with undefined references because they depend on functions compiled into programs and then are linked directly with the .o object files. Build projects that use $(LIBTOOL) should not link the object files themselves and should use .la libtool archives instead. So I created the liblttng-sessiond-comm.la convenience library that will be linked with instead.
GNU libtool will silently ignore arguments it does not understand in many cases while slibtool will print an error which happens with --no-as-needed which is a linker argument. To solve this it needs to be passed directly to the linker with -Wl,--no-as-needed.

NOTE:

Each individual commit will still work with GNU libtool.
This does not solve all of the slibtool issues, the next one may need resolution in slibtool itself and I am making this PR now to avoid having to rebase the work later. Additionally these commits offer general improvements which remove hacks and reduce overlinking.

For reference the next slibtool build failure I see is:
Making install in baddr-statedump
make[4]: Entering directory '/tmp/lttng-tools/tests/regression/ust/baddr-statedump'
objcopy --only-keep-debug prog prog.debug
objcopy: prog: file format not recognized
make[4]: *** [Makefile:810: prog.debug] Error 1
make[4]: Leaving directory '/tmp/lttng-tools/tests/regression/ust/baddr-statedump'
make[3]: *** [Makefile:569: install-recursive] Error 1
make[3]: Leaving directory '/tmp/lttng-tools/tests/regression/ust'
make[2]: *** [Makefile:831: install-recursive] Error 1
make[2]: Leaving directory '/tmp/lttng-tools/tests/regression'
make[1]: *** [Makefile:557: install-recursive] Error 1
make[1]: Leaving directory '/tmp/lttng-tools/tests'
make: *** [Makefile:656: install-recursive] Error 1

This happens because slibtool places compiled binaries in the .libs directory while prog is a shell wrapper script. Ideally some method of --mode=execute could be used to solve this, but may require further work in slibtool itself to work. I will follow up on this PR in the future.","When building lttng-tools with slibtool (https://dev.midipix.org/cross/slibtool) it fails in many places.

Many of the tests in tests/unit/ fail with undefined references because they depend on functions compiled into programs and then are linked directly with the .o object files. Build projects that use $(LIBTOOL) should not link the object files themselves and should use .la libtool archives instead. So I created the liblttng-sessiond-comm.la convenience library that will be linked with instead.
GNU libtool will silently ignore arguments it does not understand in many cases while slibtool will print an error which happens with --no-as-needed which is a linker argument. To solve this it needs to be passed directly to the linker with -Wl,--no-as-needed.

NOTE:

Each individual commit will still work with GNU libtool.
This does not solve all of the slibtool issues, the next one may need resolution in slibtool itself and I am making this PR now to avoid having to rebase the work later. Additionally these commits offer general improvements which remove hacks and reduce overlinking.

For reference the next slibtool build failure I see is:
Making install in baddr-statedump
make[4]: Entering directory '/tmp/lttng-tools/tests/regression/ust/baddr-statedump'
objcopy --only-keep-debug prog prog.debug
objcopy: prog: file format not recognized
make[4]: *** [Makefile:810: prog.debug] Error 1
make[4]: Leaving directory '/tmp/lttng-tools/tests/regression/ust/baddr-statedump'
make[3]: *** [Makefile:569: install-recursive] Error 1
make[3]: Leaving directory '/tmp/lttng-tools/tests/regression/ust'
make[2]: *** [Makefile:831: install-recursive] Error 1
make[2]: Leaving directory '/tmp/lttng-tools/tests/regression'
make[1]: *** [Makefile:557: install-recursive] Error 1
make[1]: Leaving directory '/tmp/lttng-tools/tests'
make: *** [Makefile:656: install-recursive] Error 1

This happens because slibtool places compiled binaries in the .libs directory while prog is a shell wrapper script. Ideally some method of --mode=execute could be used to solve this, but may require further work in slibtool itself to work. I will follow up on this PR in the future.",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,163,2021-05-13T18:44:57Z,2021-06-07T18:52:20Z,2022-05-15T20:00:45Z,CLOSED,False,26,125,9,https://github.com/orbea,Slibtool build fixes,5,[],https://github.com/lttng/lttng-tools/pull/163,https://github.com/orbea,2,https://github.com/lttng/lttng-tools/pull/163#issuecomment-840774741,"When building lttng-tools with slibtool (https://dev.midipix.org/cross/slibtool) it fails in many places.

Many of the tests in tests/unit/ fail with undefined references because they depend on functions compiled into programs and then are linked directly with the .o object files. Build projects that use $(LIBTOOL) should not link the object files themselves and should use .la libtool archives instead. So I created the liblttng-sessiond-comm.la convenience library that will be linked with instead.
GNU libtool will silently ignore arguments it does not understand in many cases while slibtool will print an error which happens with --no-as-needed which is a linker argument. To solve this it needs to be passed directly to the linker with -Wl,--no-as-needed.

NOTE:

Each individual commit will still work with GNU libtool.
This does not solve all of the slibtool issues, the next one may need resolution in slibtool itself and I am making this PR now to avoid having to rebase the work later. Additionally these commits offer general improvements which remove hacks and reduce overlinking.

For reference the next slibtool build failure I see is:
Making install in baddr-statedump
make[4]: Entering directory '/tmp/lttng-tools/tests/regression/ust/baddr-statedump'
objcopy --only-keep-debug prog prog.debug
objcopy: prog: file format not recognized
make[4]: *** [Makefile:810: prog.debug] Error 1
make[4]: Leaving directory '/tmp/lttng-tools/tests/regression/ust/baddr-statedump'
make[3]: *** [Makefile:569: install-recursive] Error 1
make[3]: Leaving directory '/tmp/lttng-tools/tests/regression/ust'
make[2]: *** [Makefile:831: install-recursive] Error 1
make[2]: Leaving directory '/tmp/lttng-tools/tests/regression'
make[1]: *** [Makefile:557: install-recursive] Error 1
make[1]: Leaving directory '/tmp/lttng-tools/tests'
make: *** [Makefile:656: install-recursive] Error 1

This happens because slibtool places compiled binaries in the .libs directory while prog is a shell wrapper script. Ideally some method of --mode=execute could be used to solve this, but may require further work in slibtool itself to work. I will follow up on this PR in the future.","Also see this downstream issue:
https://bugs.gentoo.org/789636
And also reported independently on the slibtool tracker:
https://dev.midipix.org/cross/slibtool/issue/40",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,163,2021-05-13T18:44:57Z,2021-06-07T18:52:20Z,2022-05-15T20:00:45Z,CLOSED,False,26,125,9,https://github.com/orbea,Slibtool build fixes,5,[],https://github.com/lttng/lttng-tools/pull/163,https://github.com/PSRCode,3,https://github.com/lttng/lttng-tools/pull/163#issuecomment-849965426,"When building lttng-tools with slibtool (https://dev.midipix.org/cross/slibtool) it fails in many places.

Many of the tests in tests/unit/ fail with undefined references because they depend on functions compiled into programs and then are linked directly with the .o object files. Build projects that use $(LIBTOOL) should not link the object files themselves and should use .la libtool archives instead. So I created the liblttng-sessiond-comm.la convenience library that will be linked with instead.
GNU libtool will silently ignore arguments it does not understand in many cases while slibtool will print an error which happens with --no-as-needed which is a linker argument. To solve this it needs to be passed directly to the linker with -Wl,--no-as-needed.

NOTE:

Each individual commit will still work with GNU libtool.
This does not solve all of the slibtool issues, the next one may need resolution in slibtool itself and I am making this PR now to avoid having to rebase the work later. Additionally these commits offer general improvements which remove hacks and reduce overlinking.

For reference the next slibtool build failure I see is:
Making install in baddr-statedump
make[4]: Entering directory '/tmp/lttng-tools/tests/regression/ust/baddr-statedump'
objcopy --only-keep-debug prog prog.debug
objcopy: prog: file format not recognized
make[4]: *** [Makefile:810: prog.debug] Error 1
make[4]: Leaving directory '/tmp/lttng-tools/tests/regression/ust/baddr-statedump'
make[3]: *** [Makefile:569: install-recursive] Error 1
make[3]: Leaving directory '/tmp/lttng-tools/tests/regression/ust'
make[2]: *** [Makefile:831: install-recursive] Error 1
make[2]: Leaving directory '/tmp/lttng-tools/tests/regression'
make[1]: *** [Makefile:557: install-recursive] Error 1
make[1]: Leaving directory '/tmp/lttng-tools/tests'
make: *** [Makefile:656: install-recursive] Error 1

This happens because slibtool places compiled binaries in the .libs directory while prog is a shell wrapper script. Ideally some method of --mode=execute could be used to solve this, but may require further work in slibtool itself to work. I will follow up on this PR in the future.","Hi,
Overall looking good.
Do you have any reference for this:

Build projects that use $(LIBTOOL) should not link the object files themselves and should use .la libtool archives instead.

Cheers",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,163,2021-05-13T18:44:57Z,2021-06-07T18:52:20Z,2022-05-15T20:00:45Z,CLOSED,False,26,125,9,https://github.com/orbea,Slibtool build fixes,5,[],https://github.com/lttng/lttng-tools/pull/163,https://github.com/orbea,4,https://github.com/lttng/lttng-tools/pull/163#issuecomment-850074592,"When building lttng-tools with slibtool (https://dev.midipix.org/cross/slibtool) it fails in many places.

Many of the tests in tests/unit/ fail with undefined references because they depend on functions compiled into programs and then are linked directly with the .o object files. Build projects that use $(LIBTOOL) should not link the object files themselves and should use .la libtool archives instead. So I created the liblttng-sessiond-comm.la convenience library that will be linked with instead.
GNU libtool will silently ignore arguments it does not understand in many cases while slibtool will print an error which happens with --no-as-needed which is a linker argument. To solve this it needs to be passed directly to the linker with -Wl,--no-as-needed.

NOTE:

Each individual commit will still work with GNU libtool.
This does not solve all of the slibtool issues, the next one may need resolution in slibtool itself and I am making this PR now to avoid having to rebase the work later. Additionally these commits offer general improvements which remove hacks and reduce overlinking.

For reference the next slibtool build failure I see is:
Making install in baddr-statedump
make[4]: Entering directory '/tmp/lttng-tools/tests/regression/ust/baddr-statedump'
objcopy --only-keep-debug prog prog.debug
objcopy: prog: file format not recognized
make[4]: *** [Makefile:810: prog.debug] Error 1
make[4]: Leaving directory '/tmp/lttng-tools/tests/regression/ust/baddr-statedump'
make[3]: *** [Makefile:569: install-recursive] Error 1
make[3]: Leaving directory '/tmp/lttng-tools/tests/regression/ust'
make[2]: *** [Makefile:831: install-recursive] Error 1
make[2]: Leaving directory '/tmp/lttng-tools/tests/regression'
make[1]: *** [Makefile:557: install-recursive] Error 1
make[1]: Leaving directory '/tmp/lttng-tools/tests'
make: *** [Makefile:656: install-recursive] Error 1

This happens because slibtool places compiled binaries in the .libs directory while prog is a shell wrapper script. Ideally some method of --mode=execute could be used to solve this, but may require further work in slibtool itself to work. I will follow up on this PR in the future.","Do you have any reference for this:

Build projects that use $(LIBTOOL) should not link the object files themselves and should use .la libtool archives instead.


Now that I looked again it appears the automake documentation does allow .$(OBJEXT), .a and .la as valid files for LDADD when linking programs.
maude_LDADD

    Extra objects (*.$(OBJEXT)) and libraries (*.a, *.la) can be added to a program by listing them
    in the _LDADD variable. For instance, this should be used for objects determined by configure
    (see Linking).

    _LDADD and _LIBADD are inappropriate for passing program-specific linker flags (except for
    -l, -L, -dlopen and -dlpreopen). Use the _LDFLAGS variable for this purpose.

    For instance, if your configure.ac uses AC_PATH_XTRA, you could link your program against
    the X libraries like so:

        maude_LDADD = $(X_PRE_LIBS) $(X_LIBS) $(X_EXTRA_LIBS)

    We recommend that you use -l and -L only when referring to third-party libraries, and give the
    explicit file names of any library built by your package. Doing so will ensure that
    maude_DEPENDENCIES (see below) is correctly defined by default.

    Since these dependencies are associated with the link rule used to create the programs they
    should normally list files used by the link command. That is *.$(OBJEXT), *.a, or *.la files for
    programs; *.lo and *.la files for Libtool libraries; and *.$(OBJEXT) files for static libraries. 

https://www.gnu.org/software/automake/manual/html_node/Program-and-Library-Variables.html
However as demonstrated by lttng-tools that linking with .$(OBJEXT) is significantly more complicated and fragile than using a libtool convenience library. With slibtool this results in many undefined references, maybe because of differences in linking order between GNU libtool and slibtool?",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,163,2021-05-13T18:44:57Z,2021-06-07T18:52:20Z,2022-05-15T20:00:45Z,CLOSED,False,26,125,9,https://github.com/orbea,Slibtool build fixes,5,[],https://github.com/lttng/lttng-tools/pull/163,https://github.com/PSRCode,5,https://github.com/lttng/lttng-tools/pull/163#issuecomment-850088870,"When building lttng-tools with slibtool (https://dev.midipix.org/cross/slibtool) it fails in many places.

Many of the tests in tests/unit/ fail with undefined references because they depend on functions compiled into programs and then are linked directly with the .o object files. Build projects that use $(LIBTOOL) should not link the object files themselves and should use .la libtool archives instead. So I created the liblttng-sessiond-comm.la convenience library that will be linked with instead.
GNU libtool will silently ignore arguments it does not understand in many cases while slibtool will print an error which happens with --no-as-needed which is a linker argument. To solve this it needs to be passed directly to the linker with -Wl,--no-as-needed.

NOTE:

Each individual commit will still work with GNU libtool.
This does not solve all of the slibtool issues, the next one may need resolution in slibtool itself and I am making this PR now to avoid having to rebase the work later. Additionally these commits offer general improvements which remove hacks and reduce overlinking.

For reference the next slibtool build failure I see is:
Making install in baddr-statedump
make[4]: Entering directory '/tmp/lttng-tools/tests/regression/ust/baddr-statedump'
objcopy --only-keep-debug prog prog.debug
objcopy: prog: file format not recognized
make[4]: *** [Makefile:810: prog.debug] Error 1
make[4]: Leaving directory '/tmp/lttng-tools/tests/regression/ust/baddr-statedump'
make[3]: *** [Makefile:569: install-recursive] Error 1
make[3]: Leaving directory '/tmp/lttng-tools/tests/regression/ust'
make[2]: *** [Makefile:831: install-recursive] Error 1
make[2]: Leaving directory '/tmp/lttng-tools/tests/regression'
make[1]: *** [Makefile:557: install-recursive] Error 1
make[1]: Leaving directory '/tmp/lttng-tools/tests'
make: *** [Makefile:656: install-recursive] Error 1

This happens because slibtool places compiled binaries in the .libs directory while prog is a shell wrapper script. Ideally some method of --mode=execute could be used to solve this, but may require further work in slibtool itself to work. I will follow up on this PR in the future.","Thank you linking that info.

However as demonstrated by lttng-tools that linking with .$(OBJEXT) is significantly more complicated and fragile than using a libtool convenience library.

From a quick look, I do agree with you here.

With slibtool this results in many undefined references, maybe because of differences in linking order between GNU libtool and slibtool?

There is a lot more chance that you have a better hunch regarding this than me.
Cheers",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,163,2021-05-13T18:44:57Z,2021-06-07T18:52:20Z,2022-05-15T20:00:45Z,CLOSED,False,26,125,9,https://github.com/orbea,Slibtool build fixes,5,[],https://github.com/lttng/lttng-tools/pull/163,https://github.com/jgalar,6,https://github.com/lttng/lttng-tools/pull/163#issuecomment-850609992,"When building lttng-tools with slibtool (https://dev.midipix.org/cross/slibtool) it fails in many places.

Many of the tests in tests/unit/ fail with undefined references because they depend on functions compiled into programs and then are linked directly with the .o object files. Build projects that use $(LIBTOOL) should not link the object files themselves and should use .la libtool archives instead. So I created the liblttng-sessiond-comm.la convenience library that will be linked with instead.
GNU libtool will silently ignore arguments it does not understand in many cases while slibtool will print an error which happens with --no-as-needed which is a linker argument. To solve this it needs to be passed directly to the linker with -Wl,--no-as-needed.

NOTE:

Each individual commit will still work with GNU libtool.
This does not solve all of the slibtool issues, the next one may need resolution in slibtool itself and I am making this PR now to avoid having to rebase the work later. Additionally these commits offer general improvements which remove hacks and reduce overlinking.

For reference the next slibtool build failure I see is:
Making install in baddr-statedump
make[4]: Entering directory '/tmp/lttng-tools/tests/regression/ust/baddr-statedump'
objcopy --only-keep-debug prog prog.debug
objcopy: prog: file format not recognized
make[4]: *** [Makefile:810: prog.debug] Error 1
make[4]: Leaving directory '/tmp/lttng-tools/tests/regression/ust/baddr-statedump'
make[3]: *** [Makefile:569: install-recursive] Error 1
make[3]: Leaving directory '/tmp/lttng-tools/tests/regression/ust'
make[2]: *** [Makefile:831: install-recursive] Error 1
make[2]: Leaving directory '/tmp/lttng-tools/tests/regression'
make[1]: *** [Makefile:557: install-recursive] Error 1
make[1]: Leaving directory '/tmp/lttng-tools/tests'
make: *** [Makefile:656: install-recursive] Error 1

This happens because slibtool places compiled binaries in the .libs directory while prog is a shell wrapper script. Ideally some method of --mode=execute could be used to solve this, but may require further work in slibtool itself to work. I will follow up on this PR in the future.","To prevent any confusion, can you rename liblttng-sessiond-comm.la to liblttng-sessiond-common.la?
sessiond-comm already refers to the session daemon's communication facilities internally (e.g. sessiond-comm.h)
Thanks!",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,163,2021-05-13T18:44:57Z,2021-06-07T18:52:20Z,2022-05-15T20:00:45Z,CLOSED,False,26,125,9,https://github.com/orbea,Slibtool build fixes,5,[],https://github.com/lttng/lttng-tools/pull/163,https://github.com/orbea,7,https://github.com/lttng/lttng-tools/pull/163#issuecomment-850877095,"When building lttng-tools with slibtool (https://dev.midipix.org/cross/slibtool) it fails in many places.

Many of the tests in tests/unit/ fail with undefined references because they depend on functions compiled into programs and then are linked directly with the .o object files. Build projects that use $(LIBTOOL) should not link the object files themselves and should use .la libtool archives instead. So I created the liblttng-sessiond-comm.la convenience library that will be linked with instead.
GNU libtool will silently ignore arguments it does not understand in many cases while slibtool will print an error which happens with --no-as-needed which is a linker argument. To solve this it needs to be passed directly to the linker with -Wl,--no-as-needed.

NOTE:

Each individual commit will still work with GNU libtool.
This does not solve all of the slibtool issues, the next one may need resolution in slibtool itself and I am making this PR now to avoid having to rebase the work later. Additionally these commits offer general improvements which remove hacks and reduce overlinking.

For reference the next slibtool build failure I see is:
Making install in baddr-statedump
make[4]: Entering directory '/tmp/lttng-tools/tests/regression/ust/baddr-statedump'
objcopy --only-keep-debug prog prog.debug
objcopy: prog: file format not recognized
make[4]: *** [Makefile:810: prog.debug] Error 1
make[4]: Leaving directory '/tmp/lttng-tools/tests/regression/ust/baddr-statedump'
make[3]: *** [Makefile:569: install-recursive] Error 1
make[3]: Leaving directory '/tmp/lttng-tools/tests/regression/ust'
make[2]: *** [Makefile:831: install-recursive] Error 1
make[2]: Leaving directory '/tmp/lttng-tools/tests/regression'
make[1]: *** [Makefile:557: install-recursive] Error 1
make[1]: Leaving directory '/tmp/lttng-tools/tests'
make: *** [Makefile:656: install-recursive] Error 1

This happens because slibtool places compiled binaries in the .libs directory while prog is a shell wrapper script. Ideally some method of --mode=execute could be used to solve this, but may require further work in slibtool itself to work. I will follow up on this PR in the future.","To prevent any confusion, can you rename liblttng-sessiond-comm.la to liblttng-sessiond-common.la?

Done.
I added one more commit to fix a new problem I encountered when rebasing the PR.
liblttng-ust-ctl.so: undefined reference to `lttng_ust_sigbus_state'

The fix is described in lttng-ust.
https://github.com/lttng/lttng-ust/blob/21d04cc41c966d687aab6e0ba60b2cb1466356ca/include/lttng/ust-sigbus.h#L36",True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,163,2021-05-13T18:44:57Z,2021-06-07T18:52:20Z,2022-05-15T20:00:45Z,CLOSED,False,26,125,9,https://github.com/orbea,Slibtool build fixes,5,[],https://github.com/lttng/lttng-tools/pull/163,https://github.com/jgalar,8,https://github.com/lttng/lttng-tools/pull/163#issuecomment-854941891,"When building lttng-tools with slibtool (https://dev.midipix.org/cross/slibtool) it fails in many places.

Many of the tests in tests/unit/ fail with undefined references because they depend on functions compiled into programs and then are linked directly with the .o object files. Build projects that use $(LIBTOOL) should not link the object files themselves and should use .la libtool archives instead. So I created the liblttng-sessiond-comm.la convenience library that will be linked with instead.
GNU libtool will silently ignore arguments it does not understand in many cases while slibtool will print an error which happens with --no-as-needed which is a linker argument. To solve this it needs to be passed directly to the linker with -Wl,--no-as-needed.

NOTE:

Each individual commit will still work with GNU libtool.
This does not solve all of the slibtool issues, the next one may need resolution in slibtool itself and I am making this PR now to avoid having to rebase the work later. Additionally these commits offer general improvements which remove hacks and reduce overlinking.

For reference the next slibtool build failure I see is:
Making install in baddr-statedump
make[4]: Entering directory '/tmp/lttng-tools/tests/regression/ust/baddr-statedump'
objcopy --only-keep-debug prog prog.debug
objcopy: prog: file format not recognized
make[4]: *** [Makefile:810: prog.debug] Error 1
make[4]: Leaving directory '/tmp/lttng-tools/tests/regression/ust/baddr-statedump'
make[3]: *** [Makefile:569: install-recursive] Error 1
make[3]: Leaving directory '/tmp/lttng-tools/tests/regression/ust'
make[2]: *** [Makefile:831: install-recursive] Error 1
make[2]: Leaving directory '/tmp/lttng-tools/tests/regression'
make[1]: *** [Makefile:557: install-recursive] Error 1
make[1]: Leaving directory '/tmp/lttng-tools/tests'
make: *** [Makefile:656: install-recursive] Error 1

This happens because slibtool places compiled binaries in the .libs directory while prog is a shell wrapper script. Ideally some method of --mode=execute could be used to solve this, but may require further work in slibtool itself to work. I will follow up on this PR in the future.",@orbea  do you mind if I add your Signed-off-by line?,True,{}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,163,2021-05-13T18:44:57Z,2021-06-07T18:52:20Z,2022-05-15T20:00:45Z,CLOSED,False,26,125,9,https://github.com/orbea,Slibtool build fixes,5,[],https://github.com/lttng/lttng-tools/pull/163,https://github.com/orbea,9,https://github.com/lttng/lttng-tools/pull/163#issuecomment-854992571,"When building lttng-tools with slibtool (https://dev.midipix.org/cross/slibtool) it fails in many places.

Many of the tests in tests/unit/ fail with undefined references because they depend on functions compiled into programs and then are linked directly with the .o object files. Build projects that use $(LIBTOOL) should not link the object files themselves and should use .la libtool archives instead. So I created the liblttng-sessiond-comm.la convenience library that will be linked with instead.
GNU libtool will silently ignore arguments it does not understand in many cases while slibtool will print an error which happens with --no-as-needed which is a linker argument. To solve this it needs to be passed directly to the linker with -Wl,--no-as-needed.

NOTE:

Each individual commit will still work with GNU libtool.
This does not solve all of the slibtool issues, the next one may need resolution in slibtool itself and I am making this PR now to avoid having to rebase the work later. Additionally these commits offer general improvements which remove hacks and reduce overlinking.

For reference the next slibtool build failure I see is:
Making install in baddr-statedump
make[4]: Entering directory '/tmp/lttng-tools/tests/regression/ust/baddr-statedump'
objcopy --only-keep-debug prog prog.debug
objcopy: prog: file format not recognized
make[4]: *** [Makefile:810: prog.debug] Error 1
make[4]: Leaving directory '/tmp/lttng-tools/tests/regression/ust/baddr-statedump'
make[3]: *** [Makefile:569: install-recursive] Error 1
make[3]: Leaving directory '/tmp/lttng-tools/tests/regression/ust'
make[2]: *** [Makefile:831: install-recursive] Error 1
make[2]: Leaving directory '/tmp/lttng-tools/tests/regression'
make[1]: *** [Makefile:557: install-recursive] Error 1
make[1]: Leaving directory '/tmp/lttng-tools/tests'
make: *** [Makefile:656: install-recursive] Error 1

This happens because slibtool places compiled binaries in the .libs directory while prog is a shell wrapper script. Ideally some method of --mode=execute could be used to solve this, but may require further work in slibtool itself to work. I will follow up on this PR in the future.","@jgalar I don't mind, but I updated the commits to include it. :)",True,{'THUMBS_UP': ['https://github.com/jgalar']}
lttng/lttng-tools,https://github.com/lttng/lttng-tools,163,2021-05-13T18:44:57Z,2021-06-07T18:52:20Z,2022-05-15T20:00:45Z,CLOSED,False,26,125,9,https://github.com/orbea,Slibtool build fixes,5,[],https://github.com/lttng/lttng-tools/pull/163,https://github.com/jgalar,10,https://github.com/lttng/lttng-tools/pull/163#issuecomment-856178087,"When building lttng-tools with slibtool (https://dev.midipix.org/cross/slibtool) it fails in many places.

Many of the tests in tests/unit/ fail with undefined references because they depend on functions compiled into programs and then are linked directly with the .o object files. Build projects that use $(LIBTOOL) should not link the object files themselves and should use .la libtool archives instead. So I created the liblttng-sessiond-comm.la convenience library that will be linked with instead.
GNU libtool will silently ignore arguments it does not understand in many cases while slibtool will print an error which happens with --no-as-needed which is a linker argument. To solve this it needs to be passed directly to the linker with -Wl,--no-as-needed.

NOTE:

Each individual commit will still work with GNU libtool.
This does not solve all of the slibtool issues, the next one may need resolution in slibtool itself and I am making this PR now to avoid having to rebase the work later. Additionally these commits offer general improvements which remove hacks and reduce overlinking.

For reference the next slibtool build failure I see is:
Making install in baddr-statedump
make[4]: Entering directory '/tmp/lttng-tools/tests/regression/ust/baddr-statedump'
objcopy --only-keep-debug prog prog.debug
objcopy: prog: file format not recognized
make[4]: *** [Makefile:810: prog.debug] Error 1
make[4]: Leaving directory '/tmp/lttng-tools/tests/regression/ust/baddr-statedump'
make[3]: *** [Makefile:569: install-recursive] Error 1
make[3]: Leaving directory '/tmp/lttng-tools/tests/regression/ust'
make[2]: *** [Makefile:831: install-recursive] Error 1
make[2]: Leaving directory '/tmp/lttng-tools/tests/regression'
make[1]: *** [Makefile:557: install-recursive] Error 1
make[1]: Leaving directory '/tmp/lttng-tools/tests'
make: *** [Makefile:656: install-recursive] Error 1

This happens because slibtool places compiled binaries in the .libs directory while prog is a shell wrapper script. Ideally some method of --mode=execute could be used to solve this, but may require further work in slibtool itself to work. I will follow up on this PR in the future.","Merged manually, thanks!",True,{}
