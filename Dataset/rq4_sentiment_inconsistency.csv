url,Comment,PRUrl,emoji_labels,sentiment_labels,Reason
https://github.com/openmrs/openmrs-module-webservices.rest,"Am working around to figure out the solution though not sure why am taking long

Look here: openmrs/openmrs-core#3569 ;)
Instead of creating unnecessary implementations, you can use inheritance by removing these redundant methods in inheriting classes.

Oops!
Have got the concept sir! Inheritance does it automatically without overriding the method in the parent classes since the method signature is constant!
Thanks @sacull  for making me understand this concept now. Your are both a mentor and a coach!",https://github.com/openmrs/openmrs-module-webservices.rest/pull/473#issuecomment-732721345,Positive,Negative,Acknowledge a mistake
https://github.com/netty/netty,"The results are much better in term of stability :)
But worth improving them a lil bit more IMO

Can you explain the last point save useless allocations (it's done?)?

Yep, originally it was creating many String instances for no reason and that means GC could cause many drops in throughput that would affect result stability.
Add a GC profiler (on JMH) or run it with -prof gc to check how is the norm allocation rate

Removed toString so no more new String instances for no reason.
Here is the benchmark result with GC profiler after a little bit of tuning in compareTo method.
Benchmark                                                 Mode  Cnt        Score        Error   Units
BenchmarkPerf.binarySearch                               thrpt   25  7878253.009 ± 186089.569   ops/s
BenchmarkPerf.binarySearch:·gc.alloc.rate                thrpt   25     1831.381 ±     43.420  MB/sec
BenchmarkPerf.binarySearch:·gc.alloc.rate.norm           thrpt   25      256.000 ±      0.001    B/op
BenchmarkPerf.binarySearch:·gc.churn.G1_Eden_Space       thrpt   25     1834.367 ±     46.511  MB/sec
BenchmarkPerf.binarySearch:·gc.churn.G1_Eden_Space.norm  thrpt   25      256.411 ±      1.831    B/op
BenchmarkPerf.binarySearch:·gc.churn.G1_Old_Gen          thrpt   25        0.003 ±      0.001  MB/sec
BenchmarkPerf.binarySearch:·gc.churn.G1_Old_Gen.norm     thrpt   25       ≈ 10⁻³                 B/op
BenchmarkPerf.binarySearch:·gc.count                     thrpt   25     1169.000               counts
BenchmarkPerf.binarySearch:·gc.time                      thrpt   25     1003.000                   ms
BenchmarkPerf.forLoop                                    thrpt   25   498364.602 ±   5281.931   ops/s
BenchmarkPerf.forLoop:·gc.alloc.rate                     thrpt   25       ≈ 10⁻⁴               MB/sec
BenchmarkPerf.forLoop:·gc.alloc.rate.norm                thrpt   25       ≈ 10⁻⁴                 B/op
BenchmarkPerf.forLoop:·gc.count                          thrpt   25          ≈ 0               counts",https://github.com/netty/netty/pull/10492#issuecomment-678621788,Positive,Negative,False-Positive
https://github.com/commons-app/apps-android-commons,"Ah, I understand now, the fading was intentional, sorry I forgot that! 😅",https://github.com/commons-app/apps-android-commons/pull/4449#issuecomment-859983151,Positive,Negative,Acknowledge a mistake
https://github.com/graphhopper/graphhopper,"Thanks!
The attack surface is probably not existent (exactly like you said) as we only use pbf, and use bzip2 only in cases of a self extracted osm data that needed compression. And even if some external bzip2 file is affected the attacker would have to modify the bzip2 file of the hoster first.",https://github.com/graphhopper/graphhopper/pull/2380#issuecomment-903658155,Positive,Negative,Acknowledge a proposal
https://github.com/line/armeria,"There's a test failure:
com.linecorp.armeria.client.Http2ClientWithPushPromiseTest > resetStreamOnPushPromise() FAILED
    java.lang.AssertionError: 
    Expecting ArrayList:
     <[]>
    to contain:
     <[4]>
    but could not find the following element(s):
     <[4]>
        at com.linecorp.armeria.client.Http2ClientWithPushPromiseTest.resetStreamOnPushPromise(Http2ClientWithPushPromiseTest.java:69)

Also, I have a question about SETTINGS_ENABLE_PUSH. https://tools.ietf.org/html/rfc7540#section-6.5.2
Do we need to set it to 0 to disable the server push?",https://github.com/line/armeria/pull/3045#issuecomment-688643359,Positive,Negative,False-Positive
https://github.com/line/armeria,"Could you check the lint error?

Ooops 😅 Thanks!",https://github.com/line/armeria/pull/4008#issuecomment-1005681105,Positive,Negative,Confirm request for a pessimistic outcome
https://github.com/line/armeria,"Sorry about the last minute change, but I realized that client-side could also benefit from richer exception messages.
I'd appreciate if reviewers can take a look at the following commit 58acdbc",https://github.com/line/armeria/pull/4033#issuecomment-1020718502,Positive,Negative,Confirm a proposal
https://github.com/line/armeria,Sorry for the conflict. We added a new boolean flag called reportMaskedRoutes in #4086.,https://github.com/line/armeria/pull/4151#issuecomment-1101434767,Positive,Negative,Acknowledge a mistake
https://github.com/line/armeria,"Found a workaround for the Netty issue. We can replace:
    implementation 'io.netty:netty-tcnative-boringssl-static'

with
    [ 'linux-x86_64', 'linux-aarch_64', 'osx-x86_64', 'osx-aarch_64', 'windows-x86_64' ].each {
        implementation(group: 'io.netty', name: 'netty-tcnative-boringssl-static', classifier: it)
    }

in core/build.gradle, i.e. no need to downgrade.
I also found that I have to modify osName.startsWith(""macosx"") with osName.startsWith(""mac"") in FlagsTest to make it work properly on my Apple Silicon.",https://github.com/line/armeria/pull/4164#issuecomment-1076357196,Positive,Negative,False-Positive
https://github.com/opentripplanner/OpenTripPlanner,(Sorry closed by accident),https://github.com/opentripplanner/OpenTripPlanner/pull/3982#issuecomment-1067722590,Positive,Negative,Acknowledge a mistake
https://github.com/spring-cloud/spring-cloud-commons,"Ah yes, you can revert those deprecations then, sorry for the confusion.",https://github.com/spring-cloud/spring-cloud-commons/pull/1064#issuecomment-1032871572,Positive,Negative,Acknowledge a mistake
https://github.com/quran/quran_android,really sorry akhi :( i will look at this soon in sha' Allah - jazakAllah khairan for your efforts on this and on all the other things you've done and please forgive me,https://github.com/quran/quran_android/pull/1313#issuecomment-650820656,Positive,Negative,Acknowledge a mistake
https://github.com/libgdx/libgdx,ill take a look,https://github.com/libgdx/libgdx/pull/6309#issuecomment-763825145,Positive,Negative,False-Positive
https://github.com/apache/james-project,"I propose to :

write taskExecutionDetails in java as it is part of the api
move most of the scala code & event sourcing code in a separate task-event-sourcing package.

That way we solve your problem, and minimize dependencies...",https://github.com/apache/james-project/pull/218#issuecomment-646975617,Positive,Negative,False-Positive
https://github.com/apache/james-project,"Sorry, can't help. I come from the development side of things and mostly use local docker-compose. Production deployment/operations is indeed based on K8S, but I am rarely involved in the details there.",https://github.com/apache/james-project/pull/718#issuecomment-957356587,Positive,Negative,Acknowledge a pessimistic outcome
https://github.com/testcontainers/testcontainers-java,"@acanda merged, thanks! Sorry it took so long :)",https://github.com/testcontainers/testcontainers-java/pull/3055#issuecomment-740652913,Positive,Negative,Acknowledge a mistake
https://github.com/apache/activemq-artemis,"Can you clarify what you mean by, ""could not be deliverd""? The problem is logged as a WARN and the message should continue to be dispatched to the client albeit without the properties referenced in the log.",https://github.com/apache/activemq-artemis/pull/4040#issuecomment-1106626124,Positive,Negative,Confirm a proposal
https://github.com/apache/beam,"Can we consider moving this one to 1.26 because of https://lists.apache.org/thread.html/r0b0fbe2038388175951ce1028182d980f9e9a7328be13d52dab70bb3%40%3Cannounce.apache.org%3E
Probably Beam's use case of Calcite is not impacted by this but I can envision the automatic vulnerability tools complaining on this soon.",https://github.com/apache/beam/pull/12962#issuecomment-706286868,Positive,Negative,Confirm a proposal
https://github.com/apache/activemq-artemis,I'm honestly dumbfounded that this has been merged already.,https://github.com/apache/activemq-artemis/pull/3316#issuecomment-718037967,Positive,Negative,Counter a pessimistic opinion
https://github.com/TeamNewPipe/NewPipe,"@opusforlife2 I uploaded to GDrive because it's easier to check for upload version in Gdrive and we can update the same link with the newer version if we want and I am commuting, sorry that I didn't change the package name, I'll do it when I get the time and update the same link :)
Edit: Changed the package name",https://github.com/TeamNewPipe/NewPipe/pull/3156#issuecomment-592915208,Positive,Negative,Acknowledge a mistake
https://github.com/TeamNewPipe/NewPipe,"@RickyM7 oh, sorry ;-)
If you have some time to test anyway, I would appreciate it, so that we can make sure this works everywhere",https://github.com/TeamNewPipe/NewPipe/pull/5415#issuecomment-761114713,Positive,Negative,Confirm a proposal
https://github.com/gradle/gradle,"As I was tagged, my opinion about the alternative approaches :
https://github.com/testng-team/testng-remote is the best current solution from testng-team pov. Mainly because we need it for the eclipse plugin and we provide some support. It always makes me sad when I see so many implementations of the abstraction of the testng api (at least: maven, intellij, eclipse)
https://github.com/junit-team/testng-engine is a good target because it will allow you to manage all engines with one api only but I don't know if it is already production-ready. It is not the case but testng-engine could use testng-remote under the hood In order to cover the maximum of testng versions (if I remember well it is not possible because testng-engine needs apis that don't exist in testng-remote)",https://github.com/gradle/gradle/pull/19960#issuecomment-1054257293,Positive,Negative,Counter a pessimistic opinion
https://github.com/facebook/react-native,"Sorry, I selected main instead of 0.63-stable",https://github.com/facebook/react-native/pull/32845#issuecomment-1007319903,Positive,Negative,Acknowledge a mistake
https://github.com/buchen/portfolio,"Hi @buletti,
alright, I have included your changes. But I cherry-picked the changes here and there. That's why it is new commit.
I have taken over:

the previous week, month, quarter, year classes
the translations
the test classes

I have adopted:

the enum; it really makes it more readable to understand what types are available; and there is an easy test included that there is no duplicate code used

    public enum Type
    {
        LAST_X_DAYS('D', LastXDays.class), //
        LAST_X_TRADING_DAYS('T', LastXTradingDays.class), //
        LAST_X_YEARS_Y_MONTHS('L', LastX.class), //
        PREVIOUS_WEEK('A', PreviousWeek.class), //
        PREVIOUS_MONTH('B', PreviousMonth.class), //
        PREVIOUS_QUARTER('C', PreviousQuarter.class), //
        PREVIOUS_YEAR('Z', PreviousYear.class), //
        CURRENT_WEEK('W', CurrentWeek.class), //
        CURRENT_MONTH('M', CurrentMonth.class), //
        CURRENT_QUARTER('Q', CurrentQuarter.class), //
        YEAR_TO_DATE('X', YearToDate.class), //
        SINCE_X('S', SinceX.class), //
        FROM_X_TO_Y('F', FromXtoY.class), //
        YEAR_X('Y', YearX.class);
    }
However, I did not take over the GSON serialization. Why? For reasons of backward compatibility, the old code anyway has to remain. So it did not feel it actually simplified things to have two serialization implementations available (yes, the writing of the old code could go, but not the reading). And the code for reading was now doing an indexOf search for the enum type instead of looking at the first character - does not seem more efficient. Furthermore, the reporting periods are embedded into many strings: to store the last selected periods, the period selected for specific columns, the period selected for a dashboard widget. I would have to make sure that all of them do not collide with the JSON characters, etc. All of this seem to make it easier to keep the one letter code (which it is for most of the reporting periods anyway).
I apologize that I was not more active watching the discussion in the PR. Too busy at the moment. Otherwise I would have pointed it out earlier. Next time. But please continue contributing features. That is very much appreciated.",https://github.com/buchen/portfolio/pull/2304#issuecomment-877762548,Positive,Negative,Acknowledge a proposal
https://github.com/PyCQA/pylint,"Suggested edit:
diff --git a/pylint/checkers/modified_iterating_checker.py b/pylint/checkers/modified_iterating_checker.py
--- pylint/checkers/modified_iterating_checker.py
+++ pylint/checkers/modified_iterating_checker.py
@@ -68,25 +68,23 @@
             self._modified_iterating_check_on_node_and_children(child, iter_obj)
 
     def _modified_iterating_check(
         self, node: nodes.NodeNG, iter_obj: nodes.NodeNG
-    ) -> bool:
+    ) -> None:
         msg_id = None
         if self._modified_iterating_list_cond(node, iter_obj):
             msg_id = ""modified-iterating-list""
         elif self._modified_iterating_dict_cond(node, iter_obj):
             msg_id = ""modified-iterating-dict""
         elif self._modified_iterating_set_cond(node, iter_obj):
             msg_id = ""modified-iterating-set""
-        if msg_id is not None:
+        if msg_id:
             self.add_message(
                 msg_id,
                 node=node,
                 args=(iter_obj.name,),
                 confidence=interfaces.INFERENCE,
             )
-            return True
-        return False
 
     @staticmethod
     def _is_node_expr_that_calls_attribute_name(node: nodes.NodeNG) -> bool:
         return (
@@ -95,11 +93,10 @@
             and isinstance(node.value.func, nodes.Attribute)
             and isinstance(node.value.func.expr, nodes.Name)
         )
 
-    @classmethod
+    @staticmethod
     def _common_cond_list_set(
-        cls,
         node: nodes.Expr,
         iter_obj: nodes.NodeNG,
         infer_val: Union[nodes.List, nodes.Set],
     ) -> bool:
@@ -113,46 +110,46 @@
             isinstance(node.targets[0], nodes.Subscript)
             and (isinstance(node.targets[0].value, nodes.Name))
         )
 
-    @classmethod
+    @staticmethod
     def _modified_iterating_list_cond(
-        cls, node: nodes.NodeNG, iter_obj: nodes.NodeNG
+        self, node: nodes.NodeNG, iter_obj: nodes.NodeNG
     ) -> bool:
-        if not cls._is_node_expr_that_calls_attribute_name(node):
+        if not self._is_node_expr_that_calls_attribute_name(node):
             return False
         infer_val = utils.safe_infer(node.value.func.expr)
         if not isinstance(infer_val, nodes.List):
             return False
         return (
-            cls._common_cond_list_set(node, iter_obj, infer_val)
+            self._common_cond_list_set(node, iter_obj, infer_val)
             and node.value.func.attrname in _LIST_MODIFIER_METHODS
         )
 
-    @classmethod
+    @staticmethod
     def _modified_iterating_dict_cond(
-        cls, node: nodes.NodeNG, iter_obj: nodes.NodeNG
+        self, node: nodes.NodeNG, iter_obj: nodes.NodeNG
     ) -> bool:
-        if not cls._is_node_assigns_subscript_name(node):
+        if not self._is_node_assigns_subscript_name(node):
             return False
         infer_val = utils.safe_infer(node.targets[0].value)
         if not isinstance(infer_val, nodes.Dict):
             return False
         if infer_val != utils.safe_infer(iter_obj):
             return False
         return node.targets[0].value.name == iter_obj.name
 
-    @classmethod
+    @staticmethod
     def _modified_iterating_set_cond(
-        cls, node: nodes.NodeNG, iter_obj: nodes.NodeNG
+        self, node: nodes.NodeNG, iter_obj: nodes.NodeNG
     ) -> bool:
-        if not cls._is_node_expr_that_calls_attribute_name(node):
+        if not self._is_node_expr_that_calls_attribute_name(node):
             return False
         infer_val = utils.safe_infer(node.value.func.expr)
         if not isinstance(infer_val, nodes.Set):
             return False
         return (
-            cls._common_cond_list_set(node, iter_obj, infer_val)
+            self._common_cond_list_set(node, iter_obj, infer_val)
             and node.value.func.attrname in _SET_MODIFIER_METHODS
         )",https://github.com/PyCQA/pylint/pull/5628#issuecomment-1027110192,Positive,Negative,False-Positive
https://github.com/facebook/react-native,Sorry @hetanthakkar1 - this is way out of the areas of anything I have knowledge of,https://github.com/facebook/react-native/pull/32477#issuecomment-967776568,Positive,Negative,Acknowledge a pessimistic outcome
https://github.com/matplotlib/matplotlib,"I thought of using colors, but then the little circle illusion becomes confusing rather than helpful.  Certainly one could come up with other versions of this, but it is a venerable figure, so I was loathe to change it too substantially.
I would vote to stay with ""Anatomy of a Figure"".  Everyone knows what a ""Figure"" is, whereas ""Axes"" is more jargonny, and indeed part of what this figure is meant to demonstrate.",https://github.com/matplotlib/matplotlib/pull/21753#issuecomment-987893742,Positive,Negative,Counter a pessimistic opinion
https://github.com/coleifer/peewee,"I don't really like this solution. The join will not correctly set-up the model graph, so the best solution in my opinion is to write:
q = User.select(User, Tweet).from_(SQL(f'`users` as `t1` USE INDEX(`user_id`) ')).join(Tweet)
for x in q.objects():
   # assume username is on User table, and content is on Tweet table.
   print(x.username, x.content)",https://github.com/coleifer/peewee/pull/2501#issuecomment-991170734,Positive,Negative,Acknowledge a proposal
https://github.com/beaker-project/beaker,When API is stable and we have the same feature set in it.,https://github.com/beaker-project/beaker/pull/119#issuecomment-826296233,Positive,Negative,False-Positive
https://github.com/scylladb/scylla-cluster-tests,"@enaydanov do you think that it is critical to backport this PR? There are conflicts, that I am not sure how to resolve. So if you think it is critical let's create backport PR for branch-3.3 first.

It will cause intermittent failures of artifacts jobs. So, I think, it's worth to be backported.
EDITED: Look at sdcm/sct_events.py in branch-3.3 and found that it solved sync problem in different way. We don't need to backport this change at all. Sorry about that.",https://github.com/scylladb/scylla-cluster-tests/pull/1881#issuecomment-593762030,Positive,Negative,Counter a pessimistic opinion
https://github.com/indico/indico,"Some things that came up during the meeting with the ODP today:


It's called ""privacy notice"" and not ""privacy policy"" (just a simply wording change; i think we should just change it in user-facing places though and not rename the privacy_policy settings key, since we already use that in other places and having two similar but different names isn't amazing)


It'd probably be a good idea to allow multiple privacy notice URLs as well (e.g. for events that have different privacy notices for speakers and regular participants); otherwise people have to use the freetext field to put those links - but I think we should put this in a separate task",https://github.com/indico/indico/pull/5128#issuecomment-985668464,Positive,Negative,False-Positive
https://github.com/conan-io/conan,"I think system_libs should also be added
Sorry, this PR lacks context. I'll take the time to find what failed, and why this PR should fix it, probably in the coming days.",https://github.com/conan-io/conan/pull/6309#issuecomment-574704554,Positive,Negative,Acknowledge a mistake
https://github.com/PyCQA/pylint,"I don't think reverting makes sense as #5195 actually built upon other changes to these decorators.
For now I would propose to deprecate set_config_directly in 2.13 and remove it in 2.14:
If plugin developers are actively developing plugins that they jumped on this after 2.12 I think they should also notice this deprecation. Normally we should obviously remove it in 3.0 but since this is actually allowing badly designed checkers to be tested in a hacky way I don't think we should wait for it.
If you agree I'll merge this and then do a follow-up with the deprecation.",https://github.com/PyCQA/pylint/pull/5509#issuecomment-992346711,Positive,Negative,Confirm a proposal
https://github.com/exaile/exaile,"I usually use the full URL like this:
Fixes: https://github.com/exaile/exaile/pull/769

and put it in the commit message. This makes it available in the Git log and makes it easier to click / copy from outside the GitHub UI. GitHub also detects this and closes the linked ticket.",https://github.com/exaile/exaile/pull/790#issuecomment-1002929528,Positive,Negative,False-Positive
https://github.com/AliceO2Group/AliceO2,Next time please squash the commits and provide a proper commit message.,https://github.com/AliceO2Group/AliceO2/pull/4790#issuecomment-742493101,Positive,Negative,Acknowledge a mistake
https://github.com/InsightSoftwareConsortium/ITK,"@blowekamp that likely means that kwrobot has constructed a huge error message about problems with the PR.  It is probably whitespace complaints about the snapshot commit.  Try updating the Modules/ThirdParty/GDCM/UpdateFromUpstream.sh script to add a .gitattributes file to the GDCM tree's top level containing * -whitespace.  That should prevent the bot from caring about whitespace in the third-party code.
In the script, update the extract_source function to be:
extract_source () {
    git_archive
    pushd ""${extractdir}/${name}-reduced""
    echo ""* -whitespace"" > .gitattributes
    popd
}
Make that the first commit on your branch.  Then run the script to create the updated content and merge again.",https://github.com/InsightSoftwareConsortium/ITK/pull/1606#issuecomment-585233365,Positive,Negative,False-Positive
https://github.com/InsightSoftwareConsortium/ITK,"@tbirdso you updated the PR description, not the commit message. Commit message is visible in git clients too, while PR description is only visible on GitHub.",https://github.com/InsightSoftwareConsortium/ITK/pull/2646#issuecomment-879984468,Positive,Negative,Acknowledge a mistake
https://github.com/datastax/cpp-driver,Thanks for the optimization. Sorry for the overuse of atomic ref. counts.,https://github.com/datastax/cpp-driver/pull/507#issuecomment-833528618,Positive,Negative,Acknowledge a mistake
https://github.com/PCSX2/pcsx2,"There is an odd double spacing (""  "") in cyclerate tips, but aside of that LGTM.",https://github.com/PCSX2/pcsx2/pull/3289#issuecomment-602136820,Positive,Negative,False-Positive
https://github.com/scylladb/scylla-cluster-tests,"@fruch please pay attention on the commit message format when merging and approving PRs
@sitano please read the best practices doc (part of the self-review template)",https://github.com/scylladb/scylla-cluster-tests/pull/2792#issuecomment-711255697,Positive,Negative,Acknowledge a mistake
https://github.com/beetbox/beets,"@wisp3rwind Apologies, I thought I had searched for the import six lines in the directories and removed all 😥",https://github.com/beetbox/beets/pull/4241#issuecomment-1016969142,Positive,Negative,Acknowledge a mistake
https://github.com/azerothcore/azerothcore-wotlk,"Thanks for the PR!
So, the change is that:                 WorldDatabase.EscapeString(itemName); ?
but this is probably there to prevent bad things to happen like a sql injection, no?
PS: I can't easily read the diff on github, dunno why, if some other staff member can explain why, it's very annoying (seems related to codacy)",https://github.com/azerothcore/azerothcore-wotlk/pull/3647#issuecomment-722059936,Positive,Negative,Confirm request for a pessimistic outcome
https://github.com/mlpack/mlpack,"Personally, I'm not a fan of the idea of testing float on some tests and double on others - it makes the tests more convoluted and confusing, and doesn't feel like good testing practice. To me, the point of these tests is ensuring the loss functions return the correct ""answer"". I agree with @mrityunjay-tripathi that the datatype of these tests feels like something that we should be trusting Armadillo on.

We can test it for a float datatype (or any other datatype) so that we can ensure everything is perfect but more importantly also show a new contributor or someone who likes looking at mlpack code why we did this

I'm not sure I understood this? Ideally the fact that this works should be obvious from documentation, not from tests",https://github.com/mlpack/mlpack/pull/2339#issuecomment-606498644,Positive,Negative,Counter a pessimistic opinion
https://github.com/jasp-stats/jasp-desktop,"Two possible solutions:
library(ggplot2)
# very long label
mtcars$cyl <- paste0(""hhhhhooasdoooooooiiiiiiii"", mtcars$cyl)

g <- ggplot(mtcars, aes(x = mpg, y = disp, group = factor(cyl), color = factor(cyl))) + 
  geom_point() + theme(legend.position = ""top"")
g
In the plot below, the last legend key has it's ""8"" cut off:


Add a row to the legend

g2 <- g + scale_color_discrete(guide = ggplot2::guide_legend(nrow = 2)) 
g2
The legend title is a bit ugly here, but you don't have one so you wouldn't get this I think.


Tweak the margins:

# push the legend left by adjusting the margin
g3 <- g + theme(legend.margin = ggplot2::margin(0, 20, 0, 0))
g3
Now, the legend title dropped off, but I think that might work because your legend has a lot of space on the left.",https://github.com/jasp-stats/jasp-desktop/pull/3856#issuecomment-586159982,Positive,Negative,Acknowledge a proposal
https://github.com/Microsoft/LightGBM,"To be honest, I find that bots make process messy.
For example, lockbot: I don't want to wake up, open my email app and see 30+ email from bots. I don't want to unsubscribe from all notifications from closed issues because I want to get notifications for user's comments, but I cannot customize to not get notifications about bot's comments. Also, this bot breaks the order of closed issues when you apply Recently updated sort order: really updated issues are lost in the dozens of ""recently locked"" issues.",https://github.com/microsoft/LightGBM/pull/2843#issuecomment-592953117,Positive,Negative,Acknowledge a pessimistic outcome
https://github.com/Microsoft/LightGBM,"Would a parameter such as keep_init_score be an option?

I'm personally opposed to adding such a flag to the Booster object for this purpose. I think anyone choosing to set that flag could just as easily choose to separately save init_score (or the entire Dataset object). I worry that each parameter added to LightGBM's public API increases the complexity of the API, which can make it harder for users to learn and harder for maintainers to anticipate and test all combinations of parameters.
However, that's just one opinion! We should hear what @shiyu1994 and @StrikerRUS think.",https://github.com/microsoft/LightGBM/pull/4235#issuecomment-828131028,Positive,Negative,Counter a pessimistic opinion
https://github.com/Microsoft/LightGBM,"... which is too much for the QEMU CI job

We can set number of runs depending on the architecture tests are run on.
from platform import machine

...

n_runs = 1000 if machine() == 'x86_64' else 25
for _ in range(n_runs):

...",https://github.com/microsoft/LightGBM/pull/4501#issuecomment-892939147,Positive,Negative,False-Positive
https://github.com/Microsoft/LightGBM,"@yaxxie Sorry, I didn't notice what type gradients and hessians actually are. I confused them with gradients_ and hessians_.
@shiyu1994

If we want to know the length of the array allocated outside C API, we must add new parameters. But the change in C API may require changes in the code of every language packages.

Can we use the fact that those arrays should always be the length of static_cast<int64_t>(num_data_) * num_tree_per_iteration_? I believe new parameters for actual lengths makes a little sense here, as we already know their size in correct API usage scenario.

So maybe doing the check in the Python and R side is preferable.

If we cannot do any checks with raw pointers, I'm OK with this way.",https://github.com/microsoft/LightGBM/pull/4815#issuecomment-981175354,Positive,Negative,Others
https://github.com/dmlc/xgboost,"@trivialfis It's been a long while since we touched this PR. One major reason this has been stuck so long is the dependence on Arrow C++ library introduced. It would be a headache to maintain yet another third-party dependence, given the complex dependences XGBoost already has. I'd like to propose a solution that can completely remove Arrow C++ dependence but still support the Arrow data format. The Arrow C data interface is just a couple of C structs that enables a project to integrate with the Arrow format only. It makes it possible to easily exchange columnar data between different runtime components, e.g. between the Python and C++ layers. This can also be used to support other types of columnar data, such as Spark ColumnarBatch, as long as it can be marshalled into the Arrow C data interface.
Shall we continue to use this PR to further discuss this idea? Or, shall we close this and create another one? Thanks!",https://github.com/dmlc/xgboost/pull/5667#issuecomment-841037892,Positive,Negative,Confirm a proposal
https://github.com/performous/performous,"It seems to work properly here without changing stuff. That's good. However we do have a cmake warning added because of these changes:
CMake Warning (dev) at cmake/Modules/FindPackageHandleStandardArgs.cmake:438 (message):
1> [CMake]   The package name passed to `find_package_handle_standard_args` (GLIB) does
1> [CMake]   not match the name of the calling package (Glib).  This can lead to
1> [CMake]   problems in calling code that expects `find_package` result variables
1> [CMake]   (e.g., `_FOUND`) to follow a certain pattern.
1> [CMake] Call Stack (most recent call first):
1> [CMake]   cmake/Modules/FindGlib.cmake:109 (FIND_PACKAGE_HANDLE_STANDARD_ARGS)
1> [CMake]   C:/Users/Arjan/source/repos/performous/vcpkg/scripts/buildsystems/vcpkg.cmake:805 (_find_package)
1> [CMake]   cmake/Modules/LibFindMacros.cmake:14 (find_package)
1> [CMake]   cmake/Modules/FindGlibmm.cmake:11 (libfind_package)
1> [CMake]   C:/Users/Arjan/source/repos/performous/vcpkg/scripts/buildsystems/vcpkg.cmake:805 (_find_package)
1> [CMake]   cmake/Modules/LibFindMacros.cmake:14 (find_package)
1> [CMake]   cmake/Modules/FindLibXML++.cmake:12 (libfind_package)
1> [CMake]   C:/Users/Arjan/source/repos/performous/vcpkg/scripts/buildsystems/vcpkg.cmake:805 (_find_package)
1> [CMake]   game/CMakeLists.txt:110 (find_package)
1> [CMake] This warning is for project developers.  Use -Wno-dev to suppress it.
1> [CMake] 
1> [CMake] -- Found GLIB: C:/Users/Arjan/source/repos/performous/performous2/build/x64-debug/vcpkg_installed/x64-windows/include/glib-2.0;C:/Users/Arjan/source/repos/performous/performous2/build/x64-debug/vcpkg_installed/x64-windows/debug/lib/glib-2.0/include (found version ""2.70.1"") 

This warning can also be found here: https://github.com/performous/performous/runs/6098083200?check_suite_focus=true#step:6:669

This seems to be linked to the removal of FetchContent_MakeAvailable(ced-sources) from top-level CMakeLists.txt. I have no explanation on why yet.",https://github.com/performous/performous/pull/720#issuecomment-1108844097,Positive,Negative,Acknowledge a pessimistic outcome
https://github.com/notepad-plus-plus/notepad-plus-plus,"So finally I solved this debugging challenge, I have found the main source of the 2GB+ files problem.
tldr - just adjust this N++ code:
BufferID FileManager::loadFile(const TCHAR * filename, Document doc, int encoding, const TCHAR *backupFileName, FILETIME fileNameTimestamp)
{
        bool ownDoc = false;
        if (!doc)
        {
                doc = (Document)_pscratchTilla->execute(SCI_CREATEDOCUMENT);
                ownDoc = true;
        }

to this:
BufferID FileManager::loadFile(const TCHAR * filename, Document doc, int encoding, const TCHAR *backupFileName, FILETIME fileNameTimestamp)
{
        bool ownDoc = false;
        if (!doc)
        {
                doc = (Document)_pscratchTilla->execute(SCI_CREATEDOCUMENT, 0, SC_DOCUMENTOPTION_TEXT_LARGE);
                ownDoc = true;
        }

Longer story:

to be able to get at least over the problem with Sci_PositionCR, I redefined it again from the original long to the INT_PTR and adjusted manually all the N++ source code for the resulting errors
this helped, but then I got only to the same problematic place as before ("".\scintilla\src\Partitioning.h"" -> PartitionFromPosition(T pos))
the error origin was in the body->ValueAt(middle), which returned negative (2GB-4GB range) or nonsense (4GB-6GB) etc. integers for the 2GB+ files
MSVS showed me the actual returning type: type const int & for the body->ValueAt(), so I knew what causes the problem (it should return __int64 type instead), but for a long time I could not track this to a specific N++ source code or setting
in the end it turned out, that there is a runtime switch in "".\scintilla\src\CellBuffer.cxx"":

  CellBuffer::CellBuffer(bool hasStyles_, bool largeDocument_) :
        hasStyles(hasStyles_), largeDocument(largeDocument_) {
        readOnly = false;
        utf8Substance = false;
        utf8LineEnds = 0;
        collectingUndo = true;
        if (largeDocument)
                plv = std::make_unique<LineVector<Sci::Position>>();
        else
                plv = std::make_unique<LineVector<int>>();
  }


then it was easy to find info about SC_DOCUMENTOPTION_TEXT_LARGE in the Scintilla Doc

This PR is far from finished with this finding, but now the N++ is stable and works with 2GB+ files:",https://github.com/notepad-plus-plus/notepad-plus-plus/pull/11047#issuecomment-1018086177,Positive,Negative,False-Positive
https://github.com/Automattic/jetpack,"Sorry folks, got back around to this a bit too late, but I'd like to clean up that is_wpcom code smell first!",https://github.com/Automattic/jetpack/pull/15686#issuecomment-624756070,Positive,Negative,Acknowledge a mistake
https://github.com/Automattic/jetpack,"@jeherve I'm not sure if anything else has to happen before merging this; will the wpcom check resolve itself now that I've merged it?..

Seems that Fusion is having a hard time lately when checking the diff's TeamCity results and we need to manually force approval using the MC tool. I already did that for you, so now we only need an approval from Crew before merging.",https://github.com/Automattic/jetpack/pull/15982#issuecomment-637373906,Positive,Negative,Acknowledge a proposal
https://github.com/Automattic/jetpack,"Found it, there was a preceding test that was setting an admin screen, causing the insert_code function to bail:

  
    
      jetpack/modules/google-analytics/classes/wp-google-analytics-legacy.php
    
    
        Lines 67 to 69
      in
      11846df
    
  
  
    

        
          
           // If we're in the admin_area, return without inserting code. 
        

        
          
           if ( is_admin() ) { 
        

        
          
           	return; 
        
    
  


I fixed it by ensuring the current screen is set to the frontend before trying to insert the GA code.
I initially thought that the constructor of the class was also messing up the execution which is why I mocked the class to disable the original class constructor. Although it was unrelated to the test failures, I kept the mock to make the test less prone to errors.",https://github.com/Automattic/jetpack/pull/17795#issuecomment-732986442,Positive,Negative,False-Positive
https://github.com/Microsoft/LightGBM,"@henry0312 I remember you were against setting new Python as default version before x.1 release. Now that Python 3.8.2 is released, I'm bumping default versions at CI side.",https://github.com/microsoft/LightGBM/pull/2713#issuecomment-612149194,Positive,Negative,Acknowledge a proposal
https://github.com/Microsoft/LightGBM,"@jameslamb

Can you please let me know if I'm correct about this:

Yeah, you're absolutely right! We just stop running tests against Python 3.5. But we do not adding python_requires field in setup.py to let users use any version they want on their own risk, while ""supported"" (tested) versions are listed here

  
    
      LightGBM/python-package/setup.py
    
    
        Lines 302 to 308
      in
      164818b
    
  
  
    

        
          
           'Programming Language :: Python :: 2', 
        

        
          
           'Programming Language :: Python :: 2.7', 
        

        
          
           'Programming Language :: Python :: 3', 
        

        
          
           'Programming Language :: Python :: 3.5', 
        

        
          
           'Programming Language :: Python :: 3.6', 
        

        
          
           'Programming Language :: Python :: 3.7', 
        

        
          
           'Programming Language :: Python :: 3.8', 
        
    
  


@guolinke

how about 2.7?

TBH, I don't have any strong opinion on this anymore. PyPI Stats shows that Python 2 is still used by 1.5k+ users each day. Do you have plans to add or refactor Python code which will require only 3 version?",https://github.com/microsoft/LightGBM/pull/3395#issuecomment-692122734,Positive,Negative,Confirm a proposal
https://github.com/magento/magento2,"Hi,
yes, I will take a look at this, at the moment I am relatively busy, but I will try to do it this week!
Sorry!",https://github.com/magento/magento2/pull/26361#issuecomment-711698182,Positive,Negative,Acknowledge a pessimistic outcome
https://github.com/magento/magento2,"@mrtuvn & @ihor-sviziev If only one test was failing, you don't need to re-run all of them. Only when you confirm that the only one that was failing now passes, you can run the rest, to make the PR green. It's generally worth to reduce the load for build servers of Magento, because this affects also the stability of the environment (unfortunately).",https://github.com/magento/magento2/pull/28480#issuecomment-669980874,Positive,Negative,Counter a pessimistic opinion
https://github.com/Microsoft/LightGBM,"Would it be in the scope of this PR to add a buffer or something so that they're only computed once?

Sorry, I'm not proposing also accepting feature names as part of this PR. I don't want to delay this PR by adding on more things. Just thought we should make a decision about how we think we might support the use of feature names, since it could impact the choice of argument name for the new methods introduced in this PR.",https://github.com/microsoft/LightGBM/pull/5048#issuecomment-1063154600,Positive,Negative,Acknowledge a proposal
https://github.com/magento/magento2,"From what I can tell the testing results still make no sense since the code that was changed is only triggered by the partial reindexing system and not by the full reindexing system. Also running indexer:reindex twice on the same database will probably always be faster the second time you execute it, so this is not an accurate way of testing this.
So to properly test this, the performance of the cronjob indexer_update_all_views should be tested I think. Easiest way is probably by using magerun2  by executing php n98-magerun2.phar sys:cron:run indexer_update_all_views
So first indexer modes should be set to 'schedule'. Then you'll need to trigger some changes that will make the catalog_category_product indexer dirty somehow. Then make a backup of the database, test the performance of the indexer_update_all_views cronjob without changes from the PR, restore backup of database, now test with changes from the PR.
Does this make sense?",https://github.com/magento/magento2/pull/33227#issuecomment-893601320,Positive,Negative,Confirm a proposal
https://github.com/cakephp/bake,"Let's wait with docs and more refactor until we have a clear consensus on this proposed changeset.
For me it is a bit weird that this only applies to the model layer and for example not other classes around it.
Wouldnt it be easier instead to just have annotations like @keep or @skip-bake or alike per class file?
Then the tool would be much simpler to check and skip, and would do so for all possible baked classes, not just a small subset.
A -f (--force) flag would still be possible to overwrite, maybe, in case you do want to re-bake all.",https://github.com/cakephp/bake/pull/793#issuecomment-965151101,Positive,Negative,Confirm a proposal
https://github.com/joomla/joomla-cms,"It should rather be considered as an updatedDate to serve a purpose. Which means it should not be a fixed date.

Then either the field should be renamed to 'updateDate' or an 'updateDate' field should be added. It is confusing if semantics are 'misused'.",https://github.com/joomla/joomla-cms/pull/29689#issuecomment-653869702,Positive,Negative,Acknowledge a proposal
https://github.com/root-project/root,"now with that config it tries to compile two files from the prev commit which are including tbb/tbb_config.h

That is what happens if I only test CMake configuration, but not the build itself. I'm working on a proper fix, hopefully I can find a header that can be included in all versions of TBB (otherwise we have a chicken-and-egg problem which header to include for finding out the version...)",https://github.com/root-project/root/pull/8239#issuecomment-849364317,Positive,Negative,Acknowledge a proposal
https://github.com/notepad-plus-plus/notepad-plus-plus,Worst Translation Ever,https://github.com/notepad-plus-plus/notepad-plus-plus/pull/7935#issuecomment-591803485,Positive,Negative,Irony
https://github.com/laravel/framework,"The only way I found was to use a different name for the cast, for example:

In the db I have table.column_a.
For getter/setter using the cast I use a different name like column_a_cast

It's a bit misleading when doing queries with where(...) as you must use the right column's name :-s",https://github.com/laravel/framework/pull/32175#issuecomment-701600594,Positive,Negative,Acknowledge a proposal
https://github.com/laravel/framework,"I think the interface is too explicit, checking for the method existence is enough

This is for backwards-compatibility. Otherwise, we would have to target master as it would be a breaking change - anyone who's implemented the uniqueBy method on his/her job, would automatically promote it to a unique job. Also, I feel the interface seems expressive (like ShouldQueue).

I don't think having the lock in the cache is the way to go.

Unfortunately, there's no way around this. Laravel doesn't treat lock as a first class citizen (e.g. there is no config/lock.php with a driver, connection, etc. like cache). So, there's no real way to say which lock the user wants (array lock, Redis lock, etc.) except if we go through the default cache driver and obtain the lock.",https://github.com/laravel/framework/pull/35042#issuecomment-719942393,Positive,Negative,Counter a pessimistic opinion
https://github.com/civicrm/civicrm-core,"@demeritcowboy thanks for the review! I've fixed the one spot you caught that should be {$tsFunctionName} instead of ts. I was the one that added it in the first place so I can verify there was no special reason for leaving it out other than ""oops"".",https://github.com/civicrm/civicrm-core/pull/18094#issuecomment-672524982,Positive,Negative,False-Positive
https://github.com/pantheon-systems/terminus,"I recommend against using future release version numbers as branch names for development work. This can get confusing historically (if you look back and see both the branch and the version -- even if the branch is gone, the PR might remain -- and they are not exactly the same); also, sometimes your planned releases don't come out with the same numbers you thought they would, e.g. if interrupt work happens.
Best to use a different name for development based on the work being done, e.g. Backport GitHub actions for Terminus 2",https://github.com/pantheon-systems/terminus/pull/2167#issuecomment-891284178,Positive,Negative,Acknowledge a proposal
https://github.com/Automattic/jetpack,"How are we protecting against showing users an incomplete feature? I'm sure I'm missing something we have in place, but felt I needed to ask before green lighting this one.

That's a fair ask! We have marked this extension as beta and you need to opt into using it (those PHP constants). This was done in #16615 as a preparation for the developement. Once we are done, we'll be moving that to production and that will make it show up publicly.",https://github.com/Automattic/jetpack/pull/16633#issuecomment-668498746,Positive,Negative,Acknowledge a proposal
https://github.com/rapid7/metasploit-framework,"Here are tests against platforms using the new additions ( Homebrew / MacPorts, Android check ):


Android 9

msf6 post(multi/gather/enum_software_versions) > run

[!] You do not have the permissions needed to dump the versions of software installed. Reverting to just enumerating what software is installed.
[+] Stored information about the installed products to the loot file at /Users/space/.msf4/loot/20200923123050_default_fe80a0027fffec66bb_host.android.sof_132853.txt
[*] Post module execution completed
msf6 post(multi/gather/enum_software_versions) > cat /Users/space/.msf4/loot/20200923123050_default_fe80a0027fffec66bb_host.android.sof_132853.txt
[*] exec: cat /Users/space/.msf4/loot/20200923123050_default_fe80a0027fffec66bb_host.android.sof_132853.txt

package:/system/priv-app/CtsShimPrivPrebuilt/CtsShimPrivPrebuilt.apk=com.android.cts.priv.ctsshim
package:/vendor/overlay/DisplayCutoutEmulationCorner/DisplayCutoutEmulationCornerOverlay.apk=com.android.internal.display.cutout.emulation.corner
package:/system/app/CubeLiveWallpapers/CubeLiveWallpapers.apk=com.example.android.livecubes
package:/vendor/overlay/DisplayCutoutEmulationDouble/DisplayCutoutEmulationDoubleOverlay.apk=com.android.internal.display.cutout.emulation.double
package:/system/priv-app/TelephonyProvider/TelephonyProvider.apk=com.android.providers.telephony
package:/system/priv-app/CalendarProvider/CalendarProvider.apk=com.android.providers.calendar
package:/system/priv-app/MediaProvider/MediaProvider.apk=com.android.providers.media
package:/system/priv-app/WallpaperCropper/WallpaperCropper.apk=com.android.wallpapercropper
package:/system/priv-app/DocumentsUI/DocumentsUI.apk=com.android.documentsui
package:/system/priv-app/ExternalStorageProvider/ExternalStorageProvider.apk=com.android.externalstorage
package:/system/app/HTMLViewer/HTMLViewer.apk=com.android.htmlviewer
package:/system/app/CompanionDeviceManager/CompanionDeviceManager.apk=com.android.companiondevicemanager
package:/system/app/QuickSearchBox/QuickSearchBox.apk=com.android.quicksearchbox
package:/system/priv-app/MmsService/MmsService.apk=com.android.mms.service
package:/system/priv-app/DownloadProvider/DownloadProvider.apk=com.android.providers.downloads
package:/system/app/messaging/messaging.apk=com.android.messaging
...




MacOS 10.14.6

msf6 post(multi/gather/enum_software_versions) > set session 3
session => 3
msf6 post(multi/gather/enum_software_versions) > run

[+] Stored information about the installed products to the loot file at /Users/space/.msf4/loot/20200923183519_default_192.168.37.147_host.osx.softwar_508691.txt
[*] Post module execution completed
msf6 post(multi/gather/enum_software_versions) > cat /Users/space/.msf4/loot/20200923183519_default_192.168.37.147_host.osx.softwar_508691.txt
[*] exec: cat /Users/space/.msf4/loot/20200923183519_default_192.168.37.147_host.osx.softwar_508691.txt

Applications:

    Display Calibrator:

      Version: 4.11.0
      Obtained from: Apple
      Last Modified: 2/22/19, 9:54 PM
      Kind: Intel
      64-Bit (Intel): Yes
      Signed by: Software Signing, Apple Code Signing Certification Authority, Apple Root CA
      Location: /System/Library/ColorSync/Calibrators/Display Calibrator.app
      Get Info String: 4.11.0, Copyright 2018 Apple, Inc.

    AddPrinter:

      Version: 14.4
      Obtained from: Apple
      Last Modified: 2/22/19, 11:20 PM
      Kind: Intel
      64-Bit (Intel): Yes
      Signed by: Software Signing, Apple Code Signing Certification Authority, Apple Root CA
      Location: /System/Library/CoreServices/AddPrinter.app
...
----------------Brew Packages----------------
gdbm 1.18.1_1
gettext 0.21
libyaml 0.2.5
lua 5.3.5_1
openssl@1.1 1.1.1g
perl 5.32.0
pkg-config 0.29.2_3
python@3.8 3.8.5
readline 8.0.4
ruby 2.7.1_2
sqlite 3.33.0
vim 8.2.1700",https://github.com/rapid7/metasploit-framework/pull/14140#issuecomment-698027850,Positive,Negative,False-Positive
https://github.com/rapid7/metasploit-framework,"Thanks for this improvement @HynekPetrak! I tested against vCenter Server 6.7.0.21000 and verified the new administrative user was created. I just have a couple of questions before landing:

Would it be possible to update the documentation to give more context about these improvements and about the proper use of BIND_DN/BIND_PW options?
I'm not familiar with this vulnerability, but is this still an authentication bypass when we already know the machine account credentials?
During execution, the module displays [+] 192.168.1.2:636 is vulnerable to CVE-2020-3952, which is misleading since it is not vulnerable. I'm wondering if we could have a message saying we're using the provided credentials instead.",https://github.com/rapid7/metasploit-framework/pull/15656#issuecomment-924284405,Positive,Negative,Confirm a proposal
https://github.com/rubygems/rubygems,"I do understand your concern @mame, anyway there's really nothing we can do about. AFAIK majority of gems are bootstrapped by bundle gem template and there was no default option unless recently introduced >= 2.3.0 constraint.
ff7cc37#diff-bdf7b5b2a62792f72623e19ef3b663826eb0a4e214eee8103eb0ce24849e4e69R15
Any usage of ~> operator for ruby requirement is just decision of gem author we should respect even it doesn't make really sense with Ruby versioning scheme.
According to your problem with testing real-world apps and by-passing this requirement. Wouldn't be enough to fake RUBY_VERSION?
[retro@retro  rubygems (master %=)]❤ ruby -v
ruby 2.7.2p137 (2020-10-01 revision 5445e04352) [x86_64-linux]
[retro@retro  rubygems (master %=)]❤ cat fakeruby.rb 
RUBY_VERSION='2.5.3'
[retro@retro  rubygems (master %=)]❤ ruby -I. -rfakeruby.rb -S gem env | grep RUBY
/home/retro/code/work/oss/rubygems/fakeruby.rb:1: warning: already initialized constant RUBY_VERSION
  - RUBYGEMS VERSION: 3.1.4
  - RUBY VERSION: 2.5.3 (2020-10-01 patchlevel 137) [x86_64-linux]
  - RUBY EXECUTABLE: /home/retro/.rubies/ruby-2.7.2/bin/ruby
  - RUBYGEMS PLATFORMS:
[retro@retro  rubygems (master %=)]❤ ruby -I. -rfakeruby.rb -e 'puts Gem.ruby_version'
/home/retro/code/work/oss/rubygems/fakeruby.rb:1: warning: already initialized constant RUBY_VERSION
2.5.3.137",https://github.com/rubygems/rubygems/pull/4109#issuecomment-740652241,Positive,Negative,Confirm request for a pessimistic outcome
https://github.com/rubygems/rubygems,"Suffix makes more sense IMHO, sorry for missing #3893. Anyway I think any variant is OK. Let's go with foo-bar/test/foo/test_bar.rb for now.",https://github.com/rubygems/rubygems/pull/5273#issuecomment-1010651963,Positive,Negative,Acknowledge a mistake
https://github.com/joomla/joomla-cms,"@SharkyKZ How good a reason is depends not only on the severity of the issue but also on the importance of the data we update or not update. Here we are updating only stuff which never existed before J4 and where one very unlikely ever has made some important changes, the parameters of the template styles of the ""Atum"" template admin modules. Be honest: Who do you think has made any important changes on these? It would be different if I'd update some menu item stuff, but here I think your concerns are more academical than of practical relevance.
Update: Had mixed it up with another PR so had to correct something in my previous comment, see strike through. But it also applies here that it's something which came with J4 and not from J3 what we update.",https://github.com/joomla/joomla-cms/pull/33375#issuecomment-830830415,Negative,Positive,Counter an optimistic proposal
https://github.com/joomla/joomla-cms,My bad - I mixed up the xml files. You are right.,https://github.com/joomla/joomla-cms/pull/34418#issuecomment-855350955,Positive,Negative,Acknowledge a mistake
https://github.com/sillsdev/web-languageforge,I'm going to go ahead and merge this under the assumption you did check the browser support and were ok as well as anticipating InCombiningDiacriticalMarks is probably irrelevant.,https://github.com/sillsdev/web-languageforge/pull/1243#issuecomment-965628400,Positive,Negative,False-Positive
https://github.com/laravel/framework,@driesvints It looks like the PHP 8 build is on Travis (nightly): https://travis-ci.org/github/symfony/symfony/builds/736971898,https://github.com/laravel/framework/pull/33388#issuecomment-711992781,Positive,Negative,False-Positive
https://github.com/laravel/framework,"I just checked the mail documentation. The array way was part of the mail docs for 5.2 at least. The named keys I'm sure was also part of mail docs at some point (on my phone so just did a quick look). However the latest docs show a fluent way of doing it instead, that's where the main confusion has come from. So the mail docs (not just notification) should reference the array method.
Also since the way latest mail works is fluent like this PR I think the original idea here should also be done, just in a backwards compatible way.
The reason we knew how to do text emails is because this is originally how mail just worked so naturally we just did it on notification views.",https://github.com/laravel/framework/pull/33725#issuecomment-672002524,Positive,Negative,Others
https://github.com/stylelint/stylelint,Much neater suggestion. It also highlighted that I'd forgotten about the compact formatter. I've pushed a commit.,https://github.com/stylelint/stylelint/pull/5313#issuecomment-844065654,Positive,Negative,Acknowledge a mistake
https://github.com/laravel/framework,"str_starts_with comes in a polyfill by symphony
https://github.com/symfony/polyfill-php80/blob/main/bootstrap.php#L31
if (!function_exists('str_starts_with')) {
    function str_starts_with(string $haystack, string $needle): bool { return p\Php80::str_starts_with($haystack, $needle); }
}

which is indeed already available. Otherwise, can we use Str::startsWith() from \Illuminate\Support\Str ?",https://github.com/laravel/framework/pull/37359#issuecomment-839984603,Positive,Negative,Confirm a proposal
https://github.com/openfoodfacts/openfoodfacts-server,"@muskangarg21 : the input we deal with is far from perfect. We have ingredients lists in French that use , or . as the decimal sign, and same for other languages. (it can be from the package itself, or from what users enter).
So we try to be very liberal in what we accept, and to do what seems to be the right thing for each different case.
e.g. if we have 2,343 as input for English, we will convert it to 2343. But if we have 2,50 in English, it is probably 2.50, and there is very little chance that it is 250.",https://github.com/openfoodfacts/openfoodfacts-server/pull/3056#issuecomment-600567118,Negative,Positive,Counter a pessimistic opinion
https://github.com/robotology/icub-firmware,"@AlexAntn I would add up the info message following @marcoaccame 's how-to guide.
Needs to be carefully tested any how.

It is also required a small change in icub-firmware-shared, possibly w/ increase of its version and another one in icub-main so that it is forced to use the new version of icub-firmware-shared: here.",https://github.com/robotology/icub-firmware/pull/170#issuecomment-784298117,Positive,Negative,False-Positive
https://github.com/openssl/openssl,Nit: please add Fixes #11870 to the body of the commit message.,https://github.com/openssl/openssl/pull/11894#issuecomment-631973124,Positive,Negative,False-Positive
https://github.com/laravel/framework,"Faker is a dev dependency, and would fail to run in production.
I afraid that developer may start using this method beyond seeders",https://github.com/laravel/framework/pull/41130#issuecomment-1046401744,Positive,Negative,Counter a pessimistic opinion
https://github.com/micropython/micropython,"But for menuconfig, do you mean to replace MICROPY_xxx with menuconfig?

Yes, at least partially. I'm not sure how it would work. But the current situation is not good. Specifically:

MICROPY_ can enable/disable modules, such as bluetooth, that are coupled with esp-idf config options. It's painful to get all that right and later to retrace why which options were chosen and what to do with new options that are introduced in esp-idf
As esp-idf changes and also as new cpu cores are introduced the set of config options changes and it becomes a manual task to discover what changed and to try and replicate the right thing in MP.

I realize it wouldn't make sense to move/mirror all MICROPY_ options in menuconfig.",https://github.com/micropython/micropython/pull/6731#issuecomment-775705618,Positive,Negative,Counter a pessimistic opinion
https://github.com/FreshRSS/FreshRSS,"Sorry for the delay. Yes, like @Frenzie and @aledeg , I would also vote for <main id=""stream"" ...> and then fix consequences",https://github.com/FreshRSS/FreshRSS/pull/3651#issuecomment-877796612,Positive,Negative,Others
https://github.com/cossacklabs/themis,"Alrighty. @maxammann, I've retargeted your PR onto a new branch – wasm-typescript – and merged it there. Please target your future TypeScript PRs for that branch. Once TypeScript support is stabilized and ready for release, the wasm-typescript branch will be merged into master.
This way if Themis really needs a release, we can provide it without potentially introducing a breaking change. Hopefully, we won't need this and TypeScript will be in there in Themis 0.14.",https://github.com/cossacklabs/themis/pull/792#issuecomment-822438550,Positive,Negative,Acknowledge a proposal
https://github.com/netblue30/firejail,"I was originally trying to run the proxy inside the sandbox, but I had to realize that

It connects to the original DBus socket only when a client connects to the proxy, so bind-mounting the proxy socket over the original one creates an infinite loop once a client tries to connect to the proxy socket (which causes the proxy to connect to the original socket at the given path, but finds the bind-mounted socket there instead).
Even if I passed the a handle to the original socket to the proxy that does not get overwritten (an O_PATH fd combined with the bus address unix:path=/proc/self/fd/<fd> works, provided /proc is mounted), the proxy would have to run as the user running the sandbox, which means I cannot easily isolate the /proc/<pid>/fd/<fd> that is a link to the original socket.
As you noted, there is a possible attack with ptrace.

We could create a ""nesting doll"" construction, where a essentially an ""outer"" set of namespaces isolates the sandbox from the rest of the world, and an ""inner"" set of namespaces isolates the program being sandboxed from the sandbox implementation. The ""outer"" container would be a nice place to run not only xdg-dbus-proxy, but also stuff like Xephyr. On the other hand, this would be a significant architectural change that nets relatively little security improvement.",https://github.com/netblue30/firejail/pull/3265#issuecomment-595504883,Positive,Negative,False-Positive
https://github.com/explosion/thinc,"About the use of assert versus an if+raise. I would not use assert if the wrong input can be caused by a user of Thinc. The fact that we're throwing user-facing error messages here implies to me that maybe assert is less applicable? To me, assert statements should only be used on internal code paths, to signal a bug within the library itself, not to check for user input.

I think there are several different cases:

Checking types should probably be assertions, because if the wrong type of array is passed, this is a bug in CupyOps, which should dispatch to a kernel when the type is float32 or to the generic Ops implementation otherwise.
Incorrect shapes should probably be exceptions, unless we start checking shapes in Ops.
Checking lengths/which should be exceptions. I don't think it makes sense to check these in Ops, since CuPy/NumPy implementations do bounds checks and otherwise we would be doing bounds checks twice.
Some kernels have an out type. However, since _custom_kernels is a private module and these out arguments are not used by CupyOps, maybe they should be removed altogether? I found at least one which was not functional, because it had a line best, which = None.",https://github.com/explosion/thinc/pull/597#issuecomment-1048494590,Positive,Negative,False-Positive
https://github.com/php/php-src,"Instead of 'foo' or 'bar' or 'baz', would it be possible to do 'foo', 'bar', or 'baz'?

The bulk of the error message is generated by Bison; we currently only over-ride a function that formats the individual tokens, which are then substituted into a printf-style template. For the same reason, it's tricky to capitalise the ""s"" of ""syntax error"".
We could potentially abuse the i18n facility by providing our own YY_ macro to re-map the message templates, but I'm not sure the improvement is worth the complexity, and it might not even work correctly on all tool versions, as it's explicitly marked internal.",https://github.com/php/php-src/pull/5722#issuecomment-650572090,Positive,Negative,Counter a pessimistic opinion
https://github.com/rapid7/metasploit-framework,"If I remember correctly the gremlin was that sometimes the post module failed to complete, because it was stuck waiting for the output of cmd_exec, which is fixed by this.",https://github.com/rapid7/metasploit-framework/pull/16369#issuecomment-1076011796,Positive,Negative,Acknowledge a pessimistic outcome
https://github.com/ElementsProject/lightning,"tACK f527a3d
Ran into this issue myself today. Unfortunately didn't find the PR until after I tried to fix it on my own.",https://github.com/ElementsProject/lightning/pull/4905#issuecomment-978280852,Positive,Negative,Acknowledge a pessimistic outcome
https://github.com/rubygems/rubygems,"My idea here would be to save the status of the previous head build to an artifact, and use that to only send notifications when the status has changed.
The rationale is that we don't want to get overwhelmed with useless notifications. We only want to know when the build gets broken, and if someone fixes it, when it starts being green again. Once it's broken we don't need daily notifications to remind us the same thing, and once it's green we don't need daily notifications to remind us that it's green.
Completely untested, but the gist would be something like:
- uses: actions/download-artifact@v2
  with:
    name: status
    path: previous_status.txt

- name: Save fail status
  if: failure()
  run: echo ""FAIL"" > status.txt

- name: Save pass status
  if: success()
  run: echo ""PASS"" > status.txt

- name: Compare with previous run
  run: echo ""::set-env name=STATUS_CHANGED::$(diff status.txt previous_status.txt; echo $?)""

- uses: 8398a7/action-slack@v3
  with:
    status: ${{ job.status }}
    fields: repo,message,commit,author,action,eventName,ref,workflow
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
    if: env.STATUS_CHANGED != '0'

- uses: actions/upload-artifact@v2
  with:
    name: status
    path: status.txt",https://github.com/rubygems/rubygems/pull/3573#issuecomment-621975674,Positive,Negative,Acknowledge a proposal
https://github.com/openssl/openssl,Oops - pushed to wrong branch... undoing now!!,https://github.com/openssl/openssl/pull/14295#issuecomment-789390145,Positive,Negative,Acknowledge a mistake
https://github.com/openssl/openssl,"It has one:


The SRP APIs have been deprecated. The old APIs do not work via providers,
and there is no EVP interface to them. Unfortunately there is no replacement
for these APIs at this time.
Matt Caswell",https://github.com/openssl/openssl/pull/15176#issuecomment-834185448,Positive,Negative,False-Positive
https://github.com/frida/frida-gum,"I'm about to cut a new release, so I'll take care of the final tweaks here and in the other PR! 👌 Sorry for all the back and forth 😅",https://github.com/frida/frida-gum/pull/444#issuecomment-643564597,Positive,Negative,Acknowledge a mistake
https://github.com/netblue30/firejail,"I force-pushed with a new message to try to make it clearer

That's indeed clearer now 👍 .",https://github.com/netblue30/firejail/pull/5071#issuecomment-1078542403,Positive,Negative,Acknowledge a proposal
https://github.com/glfw/glfw,I wonder why there is so many of those weird pull requests always adding premake files?,https://github.com/glfw/glfw/pull/2058#issuecomment-1070977331,Positive,Negative,Counter a pessimistic opinion
https://github.com/igraph/igraph,"Oops, it seems we also need the igraph_memory.h header at the top for the igraph_Calloc, which I just added.",https://github.com/igraph/igraph/pull/1685#issuecomment-784243584,Positive,Negative,Acknowledge a mistake
https://github.com/vim/vim,"If I replace <c-g><c-g> with <c-x><c-g> in MUcomplete, approximately half of its test cases fail. Definitely not equivalent.
To experiment with the different behaviours, vim --clean, then:
:set cot+=menuone
:set ls=2
:set stl=%{mode(1)}
If the current buffer contains vimmer then, after typing vi<c-x><c-n><c-x><c-g>, Vim is still in ix mode. The second CTRL-X closes the completion menu leaving Vim in ix mode. Then, CTRL-G is interpreted normally as the start of a mapping.

Doesn't that eat the next input character?

Yes, because Vim is expecting the mapping to be completed.
On the contrary, typing vi<c-x><c-n><c-g><c-g> leaves Vim in i mode.
While <c-x><c-n><c-e> would also go back to i mode, the two are not equivalent, because <c-e> would undo the completion, while <c-g><c-g> leaves the current text as it is.
Edit:  feel free to address me as he/him. My nickname is not indicative, so I have updated my GitHub profile accordingly.",https://github.com/vim/vim/pull/8804#issuecomment-907840415,Positive,Negative,Acknowledge a pessimistic outcome